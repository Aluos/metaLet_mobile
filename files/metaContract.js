var I7 = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function Qt(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
function Rs(e) {
  if (e.__esModule)
    return e;
  var t = e.default;
  if (typeof t == "function") {
    var a = function r() {
      if (this instanceof r) {
        var f = [null];
        f.push.apply(f, arguments);
        var i = Function.bind.apply(t, f);
        return new i();
      }
      return t.apply(this, arguments);
    };
    a.prototype = t.prototype;
  } else
    a = {};
  return Object.defineProperty(a, "__esModule", { value: !0 }), Object.keys(e).forEach(function(r) {
    var f = Object.getOwnPropertyDescriptor(e, r);
    Object.defineProperty(a, r, f.get ? f : {
      enumerable: !0,
      get: function() {
        return e[r];
      }
    });
  }), a;
}
var Q = {}, qf = {};
qf.byteLength = i_;
qf.toByteArray = o_;
qf.fromByteArray = c_;
var it = [], r5 = [], r_ = typeof Uint8Array < "u" ? Uint8Array : Array, ln = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
for (var Or = 0, f_ = ln.length; Or < f_; ++Or)
  it[Or] = ln[Or], r5[ln.charCodeAt(Or)] = Or;
r5["-".charCodeAt(0)] = 62;
r5["_".charCodeAt(0)] = 63;
function zp(e) {
  var t = e.length;
  if (t % 4 > 0)
    throw new Error("Invalid string. Length must be a multiple of 4");
  var a = e.indexOf("=");
  a === -1 && (a = t);
  var r = a === t ? 0 : 4 - a % 4;
  return [a, r];
}
function i_(e) {
  var t = zp(e), a = t[0], r = t[1];
  return (a + r) * 3 / 4 - r;
}
function n_(e, t, a) {
  return (t + a) * 3 / 4 - a;
}
function o_(e) {
  var t, a = zp(e), r = a[0], f = a[1], i = new r_(n_(e, r, f)), n = 0, o = f > 0 ? r - 4 : r, s;
  for (s = 0; s < o; s += 4)
    t = r5[e.charCodeAt(s)] << 18 | r5[e.charCodeAt(s + 1)] << 12 | r5[e.charCodeAt(s + 2)] << 6 | r5[e.charCodeAt(s + 3)], i[n++] = t >> 16 & 255, i[n++] = t >> 8 & 255, i[n++] = t & 255;
  return f === 2 && (t = r5[e.charCodeAt(s)] << 2 | r5[e.charCodeAt(s + 1)] >> 4, i[n++] = t & 255), f === 1 && (t = r5[e.charCodeAt(s)] << 10 | r5[e.charCodeAt(s + 1)] << 4 | r5[e.charCodeAt(s + 2)] >> 2, i[n++] = t >> 8 & 255, i[n++] = t & 255), i;
}
function s_(e) {
  return it[e >> 18 & 63] + it[e >> 12 & 63] + it[e >> 6 & 63] + it[e & 63];
}
function d_(e, t, a) {
  for (var r, f = [], i = t; i < a; i += 3)
    r = (e[i] << 16 & 16711680) + (e[i + 1] << 8 & 65280) + (e[i + 2] & 255), f.push(s_(r));
  return f.join("");
}
function c_(e) {
  for (var t, a = e.length, r = a % 3, f = [], i = 16383, n = 0, o = a - r; n < o; n += i)
    f.push(d_(e, n, n + i > o ? o : n + i));
  return r === 1 ? (t = e[a - 1], f.push(
    it[t >> 2] + it[t << 4 & 63] + "=="
  )) : r === 2 && (t = (e[a - 2] << 8) + e[a - 1], f.push(
    it[t >> 10] + it[t >> 4 & 63] + it[t << 2 & 63] + "="
  )), f.join("");
}
var Bs = {};
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
Bs.read = function(e, t, a, r, f) {
  var i, n, o = f * 8 - r - 1, s = (1 << o) - 1, b = s >> 1, l = -7, v = a ? f - 1 : 0, m = a ? -1 : 1, x = e[t + v];
  for (v += m, i = x & (1 << -l) - 1, x >>= -l, l += o; l > 0; i = i * 256 + e[t + v], v += m, l -= 8)
    ;
  for (n = i & (1 << -l) - 1, i >>= -l, l += r; l > 0; n = n * 256 + e[t + v], v += m, l -= 8)
    ;
  if (i === 0)
    i = 1 - b;
  else {
    if (i === s)
      return n ? NaN : (x ? -1 : 1) * (1 / 0);
    n = n + Math.pow(2, r), i = i - b;
  }
  return (x ? -1 : 1) * n * Math.pow(2, i - r);
};
Bs.write = function(e, t, a, r, f, i) {
  var n, o, s, b = i * 8 - f - 1, l = (1 << b) - 1, v = l >> 1, m = f === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0, x = r ? 0 : i - 1, I = r ? 1 : -1, k = t < 0 || t === 0 && 1 / t < 0 ? 1 : 0;
  for (t = Math.abs(t), isNaN(t) || t === 1 / 0 ? (o = isNaN(t) ? 1 : 0, n = l) : (n = Math.floor(Math.log(t) / Math.LN2), t * (s = Math.pow(2, -n)) < 1 && (n--, s *= 2), n + v >= 1 ? t += m / s : t += m * Math.pow(2, 1 - v), t * s >= 2 && (n++, s /= 2), n + v >= l ? (o = 0, n = l) : n + v >= 1 ? (o = (t * s - 1) * Math.pow(2, f), n = n + v) : (o = t * Math.pow(2, v - 1) * Math.pow(2, f), n = 0)); f >= 8; e[a + x] = o & 255, x += I, o /= 256, f -= 8)
    ;
  for (n = n << f | o, b += f; b > 0; e[a + x] = n & 255, x += I, n /= 256, b -= 8)
    ;
  e[a + x - I] |= k * 128;
};
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
(function(e) {
  var t = qf, a = Bs, r = typeof Symbol == "function" && typeof Symbol.for == "function" ? Symbol.for("nodejs.util.inspect.custom") : null;
  e.Buffer = o, e.SlowBuffer = R, e.INSPECT_MAX_BYTES = 50;
  var f = 2147483647;
  e.kMaxLength = f, o.TYPED_ARRAY_SUPPORT = i(), !o.TYPED_ARRAY_SUPPORT && typeof console < "u" && typeof console.error == "function" && console.error(
    "This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."
  );
  function i() {
    try {
      var K = new Uint8Array(1), B = { foo: function() {
        return 42;
      } };
      return Object.setPrototypeOf(B, Uint8Array.prototype), Object.setPrototypeOf(K, B), K.foo() === 42;
    } catch {
      return !1;
    }
  }
  Object.defineProperty(o.prototype, "parent", {
    enumerable: !0,
    get: function() {
      if (o.isBuffer(this))
        return this.buffer;
    }
  }), Object.defineProperty(o.prototype, "offset", {
    enumerable: !0,
    get: function() {
      if (o.isBuffer(this))
        return this.byteOffset;
    }
  });
  function n(K) {
    if (K > f)
      throw new RangeError('The value "' + K + '" is invalid for option "size"');
    var B = new Uint8Array(K);
    return Object.setPrototypeOf(B, o.prototype), B;
  }
  function o(K, B, D) {
    if (typeof K == "number") {
      if (typeof B == "string")
        throw new TypeError(
          'The "string" argument must be of type string. Received type number'
        );
      return v(K);
    }
    return s(K, B, D);
  }
  o.poolSize = 8192;
  function s(K, B, D) {
    if (typeof K == "string")
      return m(K, B);
    if (ArrayBuffer.isView(K))
      return I(K);
    if (K == null)
      throw new TypeError(
        "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof K
      );
    if (j(K, ArrayBuffer) || K && j(K.buffer, ArrayBuffer) || typeof SharedArrayBuffer < "u" && (j(K, SharedArrayBuffer) || K && j(K.buffer, SharedArrayBuffer)))
      return k(K, B, D);
    if (typeof K == "number")
      throw new TypeError(
        'The "value" argument must not be of type number. Received type number'
      );
    var W = K.valueOf && K.valueOf();
    if (W != null && W !== K)
      return o.from(W, B, D);
    var e7 = P(K);
    if (e7)
      return e7;
    if (typeof Symbol < "u" && Symbol.toPrimitive != null && typeof K[Symbol.toPrimitive] == "function")
      return o.from(
        K[Symbol.toPrimitive]("string"),
        B,
        D
      );
    throw new TypeError(
      "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof K
    );
  }
  o.from = function(K, B, D) {
    return s(K, B, D);
  }, Object.setPrototypeOf(o.prototype, Uint8Array.prototype), Object.setPrototypeOf(o, Uint8Array);
  function b(K) {
    if (typeof K != "number")
      throw new TypeError('"size" argument must be of type number');
    if (K < 0)
      throw new RangeError('The value "' + K + '" is invalid for option "size"');
  }
  function l(K, B, D) {
    return b(K), K <= 0 ? n(K) : B !== void 0 ? typeof D == "string" ? n(K).fill(B, D) : n(K).fill(B) : n(K);
  }
  o.alloc = function(K, B, D) {
    return l(K, B, D);
  };
  function v(K) {
    return b(K), n(K < 0 ? 0 : M(K) | 0);
  }
  o.allocUnsafe = function(K) {
    return v(K);
  }, o.allocUnsafeSlow = function(K) {
    return v(K);
  };
  function m(K, B) {
    if ((typeof B != "string" || B === "") && (B = "utf8"), !o.isEncoding(B))
      throw new TypeError("Unknown encoding: " + B);
    var D = F(K, B) | 0, W = n(D), e7 = W.write(K, B);
    return e7 !== D && (W = W.slice(0, e7)), W;
  }
  function x(K) {
    for (var B = K.length < 0 ? 0 : M(K.length) | 0, D = n(B), W = 0; W < B; W += 1)
      D[W] = K[W] & 255;
    return D;
  }
  function I(K) {
    if (j(K, Uint8Array)) {
      var B = new Uint8Array(K);
      return k(B.buffer, B.byteOffset, B.byteLength);
    }
    return x(K);
  }
  function k(K, B, D) {
    if (B < 0 || K.byteLength < B)
      throw new RangeError('"offset" is outside of buffer bounds');
    if (K.byteLength < B + (D || 0))
      throw new RangeError('"length" is outside of buffer bounds');
    var W;
    return B === void 0 && D === void 0 ? W = new Uint8Array(K) : D === void 0 ? W = new Uint8Array(K, B) : W = new Uint8Array(K, B, D), Object.setPrototypeOf(W, o.prototype), W;
  }
  function P(K) {
    if (o.isBuffer(K)) {
      var B = M(K.length) | 0, D = n(B);
      return D.length === 0 || K.copy(D, 0, 0, B), D;
    }
    if (K.length !== void 0)
      return typeof K.length != "number" || V(K.length) ? n(0) : x(K);
    if (K.type === "Buffer" && Array.isArray(K.data))
      return x(K.data);
  }
  function M(K) {
    if (K >= f)
      throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + f.toString(16) + " bytes");
    return K | 0;
  }
  function R(K) {
    return +K != K && (K = 0), o.alloc(+K);
  }
  o.isBuffer = function(B) {
    return B != null && B._isBuffer === !0 && B !== o.prototype;
  }, o.compare = function(B, D) {
    if (j(B, Uint8Array) && (B = o.from(B, B.offset, B.byteLength)), j(D, Uint8Array) && (D = o.from(D, D.offset, D.byteLength)), !o.isBuffer(B) || !o.isBuffer(D))
      throw new TypeError(
        'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array'
      );
    if (B === D)
      return 0;
    for (var W = B.length, e7 = D.length, o7 = 0, a7 = Math.min(W, e7); o7 < a7; ++o7)
      if (B[o7] !== D[o7]) {
        W = B[o7], e7 = D[o7];
        break;
      }
    return W < e7 ? -1 : e7 < W ? 1 : 0;
  }, o.isEncoding = function(B) {
    switch (String(B).toLowerCase()) {
      case "hex":
      case "utf8":
      case "utf-8":
      case "ascii":
      case "latin1":
      case "binary":
      case "base64":
      case "ucs2":
      case "ucs-2":
      case "utf16le":
      case "utf-16le":
        return !0;
      default:
        return !1;
    }
  }, o.concat = function(B, D) {
    if (!Array.isArray(B))
      throw new TypeError('"list" argument must be an Array of Buffers');
    if (B.length === 0)
      return o.alloc(0);
    var W;
    if (D === void 0)
      for (D = 0, W = 0; W < B.length; ++W)
        D += B[W].length;
    var e7 = o.allocUnsafe(D), o7 = 0;
    for (W = 0; W < B.length; ++W) {
      var a7 = B[W];
      if (j(a7, Uint8Array))
        o7 + a7.length > e7.length ? o.from(a7).copy(e7, o7) : Uint8Array.prototype.set.call(
          e7,
          a7,
          o7
        );
      else if (o.isBuffer(a7))
        a7.copy(e7, o7);
      else
        throw new TypeError('"list" argument must be an Array of Buffers');
      o7 += a7.length;
    }
    return e7;
  };
  function F(K, B) {
    if (o.isBuffer(K))
      return K.length;
    if (ArrayBuffer.isView(K) || j(K, ArrayBuffer))
      return K.byteLength;
    if (typeof K != "string")
      throw new TypeError(
        'The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof K
      );
    var D = K.length, W = arguments.length > 2 && arguments[2] === !0;
    if (!W && D === 0)
      return 0;
    for (var e7 = !1; ; )
      switch (B) {
        case "ascii":
        case "latin1":
        case "binary":
          return D;
        case "utf8":
        case "utf-8":
          return X(K).length;
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return D * 2;
        case "hex":
          return D >>> 1;
        case "base64":
          return _(K).length;
        default:
          if (e7)
            return W ? -1 : X(K).length;
          B = ("" + B).toLowerCase(), e7 = !0;
      }
  }
  o.byteLength = F;
  function C(K, B, D) {
    var W = !1;
    if ((B === void 0 || B < 0) && (B = 0), B > this.length || ((D === void 0 || D > this.length) && (D = this.length), D <= 0) || (D >>>= 0, B >>>= 0, D <= B))
      return "";
    for (K || (K = "utf8"); ; )
      switch (K) {
        case "hex":
          return g(this, B, D);
        case "utf8":
        case "utf-8":
          return d(this, B, D);
        case "ascii":
          return S(this, B, D);
        case "latin1":
        case "binary":
          return T(this, B, D);
        case "base64":
          return p(this, B, D);
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return w(this, B, D);
        default:
          if (W)
            throw new TypeError("Unknown encoding: " + K);
          K = (K + "").toLowerCase(), W = !0;
      }
  }
  o.prototype._isBuffer = !0;
  function L(K, B, D) {
    var W = K[B];
    K[B] = K[D], K[D] = W;
  }
  o.prototype.swap16 = function() {
    var B = this.length;
    if (B % 2 !== 0)
      throw new RangeError("Buffer size must be a multiple of 16-bits");
    for (var D = 0; D < B; D += 2)
      L(this, D, D + 1);
    return this;
  }, o.prototype.swap32 = function() {
    var B = this.length;
    if (B % 4 !== 0)
      throw new RangeError("Buffer size must be a multiple of 32-bits");
    for (var D = 0; D < B; D += 4)
      L(this, D, D + 3), L(this, D + 1, D + 2);
    return this;
  }, o.prototype.swap64 = function() {
    var B = this.length;
    if (B % 8 !== 0)
      throw new RangeError("Buffer size must be a multiple of 64-bits");
    for (var D = 0; D < B; D += 8)
      L(this, D, D + 7), L(this, D + 1, D + 6), L(this, D + 2, D + 5), L(this, D + 3, D + 4);
    return this;
  }, o.prototype.toString = function() {
    var B = this.length;
    return B === 0 ? "" : arguments.length === 0 ? d(this, 0, B) : C.apply(this, arguments);
  }, o.prototype.toLocaleString = o.prototype.toString, o.prototype.equals = function(B) {
    if (!o.isBuffer(B))
      throw new TypeError("Argument must be a Buffer");
    return this === B ? !0 : o.compare(this, B) === 0;
  }, o.prototype.inspect = function() {
    var B = "", D = e.INSPECT_MAX_BYTES;
    return B = this.toString("hex", 0, D).replace(/(.{2})/g, "$1 ").trim(), this.length > D && (B += " ... "), "<Buffer " + B + ">";
  }, r && (o.prototype[r] = o.prototype.inspect), o.prototype.compare = function(B, D, W, e7, o7) {
    if (j(B, Uint8Array) && (B = o.from(B, B.offset, B.byteLength)), !o.isBuffer(B))
      throw new TypeError(
        'The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof B
      );
    if (D === void 0 && (D = 0), W === void 0 && (W = B ? B.length : 0), e7 === void 0 && (e7 = 0), o7 === void 0 && (o7 = this.length), D < 0 || W > B.length || e7 < 0 || o7 > this.length)
      throw new RangeError("out of range index");
    if (e7 >= o7 && D >= W)
      return 0;
    if (e7 >= o7)
      return -1;
    if (D >= W)
      return 1;
    if (D >>>= 0, W >>>= 0, e7 >>>= 0, o7 >>>= 0, this === B)
      return 0;
    for (var a7 = o7 - e7, s7 = W - D, u7 = Math.min(a7, s7), m7 = this.slice(e7, o7), p7 = B.slice(D, W), l7 = 0; l7 < u7; ++l7)
      if (m7[l7] !== p7[l7]) {
        a7 = m7[l7], s7 = p7[l7];
        break;
      }
    return a7 < s7 ? -1 : s7 < a7 ? 1 : 0;
  };
  function U(K, B, D, W, e7) {
    if (K.length === 0)
      return -1;
    if (typeof D == "string" ? (W = D, D = 0) : D > 2147483647 ? D = 2147483647 : D < -2147483648 && (D = -2147483648), D = +D, V(D) && (D = e7 ? 0 : K.length - 1), D < 0 && (D = K.length + D), D >= K.length) {
      if (e7)
        return -1;
      D = K.length - 1;
    } else if (D < 0)
      if (e7)
        D = 0;
      else
        return -1;
    if (typeof B == "string" && (B = o.from(B, W)), o.isBuffer(B))
      return B.length === 0 ? -1 : q(K, B, D, W, e7);
    if (typeof B == "number")
      return B = B & 255, typeof Uint8Array.prototype.indexOf == "function" ? e7 ? Uint8Array.prototype.indexOf.call(K, B, D) : Uint8Array.prototype.lastIndexOf.call(K, B, D) : q(K, [B], D, W, e7);
    throw new TypeError("val must be string, number or Buffer");
  }
  function q(K, B, D, W, e7) {
    var o7 = 1, a7 = K.length, s7 = B.length;
    if (W !== void 0 && (W = String(W).toLowerCase(), W === "ucs2" || W === "ucs-2" || W === "utf16le" || W === "utf-16le")) {
      if (K.length < 2 || B.length < 2)
        return -1;
      o7 = 2, a7 /= 2, s7 /= 2, D /= 2;
    }
    function u7(x7, _7) {
      return o7 === 1 ? x7[_7] : x7.readUInt16BE(_7 * o7);
    }
    var m7;
    if (e7) {
      var p7 = -1;
      for (m7 = D; m7 < a7; m7++)
        if (u7(K, m7) === u7(B, p7 === -1 ? 0 : m7 - p7)) {
          if (p7 === -1 && (p7 = m7), m7 - p7 + 1 === s7)
            return p7 * o7;
        } else
          p7 !== -1 && (m7 -= m7 - p7), p7 = -1;
    } else
      for (D + s7 > a7 && (D = a7 - s7), m7 = D; m7 >= 0; m7--) {
        for (var l7 = !0, y7 = 0; y7 < s7; y7++)
          if (u7(K, m7 + y7) !== u7(B, y7)) {
            l7 = !1;
            break;
          }
        if (l7)
          return m7;
      }
    return -1;
  }
  o.prototype.includes = function(B, D, W) {
    return this.indexOf(B, D, W) !== -1;
  }, o.prototype.indexOf = function(B, D, W) {
    return U(this, B, D, W, !0);
  }, o.prototype.lastIndexOf = function(B, D, W) {
    return U(this, B, D, W, !1);
  };
  function Z(K, B, D, W) {
    D = Number(D) || 0;
    var e7 = K.length - D;
    W ? (W = Number(W), W > e7 && (W = e7)) : W = e7;
    var o7 = B.length;
    W > o7 / 2 && (W = o7 / 2);
    for (var a7 = 0; a7 < W; ++a7) {
      var s7 = parseInt(B.substr(a7 * 2, 2), 16);
      if (V(s7))
        return a7;
      K[D + a7] = s7;
    }
    return a7;
  }
  function z(K, B, D, W) {
    return E(X(B, K.length - D), K, D, W);
  }
  function G(K, B, D, W) {
    return E(i7(B), K, D, W);
  }
  function O(K, B, D, W) {
    return E(_(B), K, D, W);
  }
  function u(K, B, D, W) {
    return E(J(B, K.length - D), K, D, W);
  }
  o.prototype.write = function(B, D, W, e7) {
    if (D === void 0)
      e7 = "utf8", W = this.length, D = 0;
    else if (W === void 0 && typeof D == "string")
      e7 = D, W = this.length, D = 0;
    else if (isFinite(D))
      D = D >>> 0, isFinite(W) ? (W = W >>> 0, e7 === void 0 && (e7 = "utf8")) : (e7 = W, W = void 0);
    else
      throw new Error(
        "Buffer.write(string, encoding, offset[, length]) is no longer supported"
      );
    var o7 = this.length - D;
    if ((W === void 0 || W > o7) && (W = o7), B.length > 0 && (W < 0 || D < 0) || D > this.length)
      throw new RangeError("Attempt to write outside buffer bounds");
    e7 || (e7 = "utf8");
    for (var a7 = !1; ; )
      switch (e7) {
        case "hex":
          return Z(this, B, D, W);
        case "utf8":
        case "utf-8":
          return z(this, B, D, W);
        case "ascii":
        case "latin1":
        case "binary":
          return G(this, B, D, W);
        case "base64":
          return O(this, B, D, W);
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return u(this, B, D, W);
        default:
          if (a7)
            throw new TypeError("Unknown encoding: " + e7);
          e7 = ("" + e7).toLowerCase(), a7 = !0;
      }
  }, o.prototype.toJSON = function() {
    return {
      type: "Buffer",
      data: Array.prototype.slice.call(this._arr || this, 0)
    };
  };
  function p(K, B, D) {
    return B === 0 && D === K.length ? t.fromByteArray(K) : t.fromByteArray(K.slice(B, D));
  }
  function d(K, B, D) {
    D = Math.min(K.length, D);
    for (var W = [], e7 = B; e7 < D; ) {
      var o7 = K[e7], a7 = null, s7 = o7 > 239 ? 4 : o7 > 223 ? 3 : o7 > 191 ? 2 : 1;
      if (e7 + s7 <= D) {
        var u7, m7, p7, l7;
        switch (s7) {
          case 1:
            o7 < 128 && (a7 = o7);
            break;
          case 2:
            u7 = K[e7 + 1], (u7 & 192) === 128 && (l7 = (o7 & 31) << 6 | u7 & 63, l7 > 127 && (a7 = l7));
            break;
          case 3:
            u7 = K[e7 + 1], m7 = K[e7 + 2], (u7 & 192) === 128 && (m7 & 192) === 128 && (l7 = (o7 & 15) << 12 | (u7 & 63) << 6 | m7 & 63, l7 > 2047 && (l7 < 55296 || l7 > 57343) && (a7 = l7));
            break;
          case 4:
            u7 = K[e7 + 1], m7 = K[e7 + 2], p7 = K[e7 + 3], (u7 & 192) === 128 && (m7 & 192) === 128 && (p7 & 192) === 128 && (l7 = (o7 & 15) << 18 | (u7 & 63) << 12 | (m7 & 63) << 6 | p7 & 63, l7 > 65535 && l7 < 1114112 && (a7 = l7));
        }
      }
      a7 === null ? (a7 = 65533, s7 = 1) : a7 > 65535 && (a7 -= 65536, W.push(a7 >>> 10 & 1023 | 55296), a7 = 56320 | a7 & 1023), W.push(a7), e7 += s7;
    }
    return y(W);
  }
  var c = 4096;
  function y(K) {
    var B = K.length;
    if (B <= c)
      return String.fromCharCode.apply(String, K);
    for (var D = "", W = 0; W < B; )
      D += String.fromCharCode.apply(
        String,
        K.slice(W, W += c)
      );
    return D;
  }
  function S(K, B, D) {
    var W = "";
    D = Math.min(K.length, D);
    for (var e7 = B; e7 < D; ++e7)
      W += String.fromCharCode(K[e7] & 127);
    return W;
  }
  function T(K, B, D) {
    var W = "";
    D = Math.min(K.length, D);
    for (var e7 = B; e7 < D; ++e7)
      W += String.fromCharCode(K[e7]);
    return W;
  }
  function g(K, B, D) {
    var W = K.length;
    (!B || B < 0) && (B = 0), (!D || D < 0 || D > W) && (D = W);
    for (var e7 = "", o7 = B; o7 < D; ++o7)
      e7 += n7[K[o7]];
    return e7;
  }
  function w(K, B, D) {
    for (var W = K.slice(B, D), e7 = "", o7 = 0; o7 < W.length - 1; o7 += 2)
      e7 += String.fromCharCode(W[o7] + W[o7 + 1] * 256);
    return e7;
  }
  o.prototype.slice = function(B, D) {
    var W = this.length;
    B = ~~B, D = D === void 0 ? W : ~~D, B < 0 ? (B += W, B < 0 && (B = 0)) : B > W && (B = W), D < 0 ? (D += W, D < 0 && (D = 0)) : D > W && (D = W), D < B && (D = B);
    var e7 = this.subarray(B, D);
    return Object.setPrototypeOf(e7, o.prototype), e7;
  };
  function A(K, B, D) {
    if (K % 1 !== 0 || K < 0)
      throw new RangeError("offset is not uint");
    if (K + B > D)
      throw new RangeError("Trying to access beyond buffer length");
  }
  o.prototype.readUintLE = o.prototype.readUIntLE = function(B, D, W) {
    B = B >>> 0, D = D >>> 0, W || A(B, D, this.length);
    for (var e7 = this[B], o7 = 1, a7 = 0; ++a7 < D && (o7 *= 256); )
      e7 += this[B + a7] * o7;
    return e7;
  }, o.prototype.readUintBE = o.prototype.readUIntBE = function(B, D, W) {
    B = B >>> 0, D = D >>> 0, W || A(B, D, this.length);
    for (var e7 = this[B + --D], o7 = 1; D > 0 && (o7 *= 256); )
      e7 += this[B + --D] * o7;
    return e7;
  }, o.prototype.readUint8 = o.prototype.readUInt8 = function(B, D) {
    return B = B >>> 0, D || A(B, 1, this.length), this[B];
  }, o.prototype.readUint16LE = o.prototype.readUInt16LE = function(B, D) {
    return B = B >>> 0, D || A(B, 2, this.length), this[B] | this[B + 1] << 8;
  }, o.prototype.readUint16BE = o.prototype.readUInt16BE = function(B, D) {
    return B = B >>> 0, D || A(B, 2, this.length), this[B] << 8 | this[B + 1];
  }, o.prototype.readUint32LE = o.prototype.readUInt32LE = function(B, D) {
    return B = B >>> 0, D || A(B, 4, this.length), (this[B] | this[B + 1] << 8 | this[B + 2] << 16) + this[B + 3] * 16777216;
  }, o.prototype.readUint32BE = o.prototype.readUInt32BE = function(B, D) {
    return B = B >>> 0, D || A(B, 4, this.length), this[B] * 16777216 + (this[B + 1] << 16 | this[B + 2] << 8 | this[B + 3]);
  }, o.prototype.readIntLE = function(B, D, W) {
    B = B >>> 0, D = D >>> 0, W || A(B, D, this.length);
    for (var e7 = this[B], o7 = 1, a7 = 0; ++a7 < D && (o7 *= 256); )
      e7 += this[B + a7] * o7;
    return o7 *= 128, e7 >= o7 && (e7 -= Math.pow(2, 8 * D)), e7;
  }, o.prototype.readIntBE = function(B, D, W) {
    B = B >>> 0, D = D >>> 0, W || A(B, D, this.length);
    for (var e7 = D, o7 = 1, a7 = this[B + --e7]; e7 > 0 && (o7 *= 256); )
      a7 += this[B + --e7] * o7;
    return o7 *= 128, a7 >= o7 && (a7 -= Math.pow(2, 8 * D)), a7;
  }, o.prototype.readInt8 = function(B, D) {
    return B = B >>> 0, D || A(B, 1, this.length), this[B] & 128 ? (255 - this[B] + 1) * -1 : this[B];
  }, o.prototype.readInt16LE = function(B, D) {
    B = B >>> 0, D || A(B, 2, this.length);
    var W = this[B] | this[B + 1] << 8;
    return W & 32768 ? W | 4294901760 : W;
  }, o.prototype.readInt16BE = function(B, D) {
    B = B >>> 0, D || A(B, 2, this.length);
    var W = this[B + 1] | this[B] << 8;
    return W & 32768 ? W | 4294901760 : W;
  }, o.prototype.readInt32LE = function(B, D) {
    return B = B >>> 0, D || A(B, 4, this.length), this[B] | this[B + 1] << 8 | this[B + 2] << 16 | this[B + 3] << 24;
  }, o.prototype.readInt32BE = function(B, D) {
    return B = B >>> 0, D || A(B, 4, this.length), this[B] << 24 | this[B + 1] << 16 | this[B + 2] << 8 | this[B + 3];
  }, o.prototype.readFloatLE = function(B, D) {
    return B = B >>> 0, D || A(B, 4, this.length), a.read(this, B, !0, 23, 4);
  }, o.prototype.readFloatBE = function(B, D) {
    return B = B >>> 0, D || A(B, 4, this.length), a.read(this, B, !1, 23, 4);
  }, o.prototype.readDoubleLE = function(B, D) {
    return B = B >>> 0, D || A(B, 8, this.length), a.read(this, B, !0, 52, 8);
  }, o.prototype.readDoubleBE = function(B, D) {
    return B = B >>> 0, D || A(B, 8, this.length), a.read(this, B, !1, 52, 8);
  };
  function h(K, B, D, W, e7, o7) {
    if (!o.isBuffer(K))
      throw new TypeError('"buffer" argument must be a Buffer instance');
    if (B > e7 || B < o7)
      throw new RangeError('"value" argument is out of bounds');
    if (D + W > K.length)
      throw new RangeError("Index out of range");
  }
  o.prototype.writeUintLE = o.prototype.writeUIntLE = function(B, D, W, e7) {
    if (B = +B, D = D >>> 0, W = W >>> 0, !e7) {
      var o7 = Math.pow(2, 8 * W) - 1;
      h(this, B, D, W, o7, 0);
    }
    var a7 = 1, s7 = 0;
    for (this[D] = B & 255; ++s7 < W && (a7 *= 256); )
      this[D + s7] = B / a7 & 255;
    return D + W;
  }, o.prototype.writeUintBE = o.prototype.writeUIntBE = function(B, D, W, e7) {
    if (B = +B, D = D >>> 0, W = W >>> 0, !e7) {
      var o7 = Math.pow(2, 8 * W) - 1;
      h(this, B, D, W, o7, 0);
    }
    var a7 = W - 1, s7 = 1;
    for (this[D + a7] = B & 255; --a7 >= 0 && (s7 *= 256); )
      this[D + a7] = B / s7 & 255;
    return D + W;
  }, o.prototype.writeUint8 = o.prototype.writeUInt8 = function(B, D, W) {
    return B = +B, D = D >>> 0, W || h(this, B, D, 1, 255, 0), this[D] = B & 255, D + 1;
  }, o.prototype.writeUint16LE = o.prototype.writeUInt16LE = function(B, D, W) {
    return B = +B, D = D >>> 0, W || h(this, B, D, 2, 65535, 0), this[D] = B & 255, this[D + 1] = B >>> 8, D + 2;
  }, o.prototype.writeUint16BE = o.prototype.writeUInt16BE = function(B, D, W) {
    return B = +B, D = D >>> 0, W || h(this, B, D, 2, 65535, 0), this[D] = B >>> 8, this[D + 1] = B & 255, D + 2;
  }, o.prototype.writeUint32LE = o.prototype.writeUInt32LE = function(B, D, W) {
    return B = +B, D = D >>> 0, W || h(this, B, D, 4, 4294967295, 0), this[D + 3] = B >>> 24, this[D + 2] = B >>> 16, this[D + 1] = B >>> 8, this[D] = B & 255, D + 4;
  }, o.prototype.writeUint32BE = o.prototype.writeUInt32BE = function(B, D, W) {
    return B = +B, D = D >>> 0, W || h(this, B, D, 4, 4294967295, 0), this[D] = B >>> 24, this[D + 1] = B >>> 16, this[D + 2] = B >>> 8, this[D + 3] = B & 255, D + 4;
  }, o.prototype.writeIntLE = function(B, D, W, e7) {
    if (B = +B, D = D >>> 0, !e7) {
      var o7 = Math.pow(2, 8 * W - 1);
      h(this, B, D, W, o7 - 1, -o7);
    }
    var a7 = 0, s7 = 1, u7 = 0;
    for (this[D] = B & 255; ++a7 < W && (s7 *= 256); )
      B < 0 && u7 === 0 && this[D + a7 - 1] !== 0 && (u7 = 1), this[D + a7] = (B / s7 >> 0) - u7 & 255;
    return D + W;
  }, o.prototype.writeIntBE = function(B, D, W, e7) {
    if (B = +B, D = D >>> 0, !e7) {
      var o7 = Math.pow(2, 8 * W - 1);
      h(this, B, D, W, o7 - 1, -o7);
    }
    var a7 = W - 1, s7 = 1, u7 = 0;
    for (this[D + a7] = B & 255; --a7 >= 0 && (s7 *= 256); )
      B < 0 && u7 === 0 && this[D + a7 + 1] !== 0 && (u7 = 1), this[D + a7] = (B / s7 >> 0) - u7 & 255;
    return D + W;
  }, o.prototype.writeInt8 = function(B, D, W) {
    return B = +B, D = D >>> 0, W || h(this, B, D, 1, 127, -128), B < 0 && (B = 255 + B + 1), this[D] = B & 255, D + 1;
  }, o.prototype.writeInt16LE = function(B, D, W) {
    return B = +B, D = D >>> 0, W || h(this, B, D, 2, 32767, -32768), this[D] = B & 255, this[D + 1] = B >>> 8, D + 2;
  }, o.prototype.writeInt16BE = function(B, D, W) {
    return B = +B, D = D >>> 0, W || h(this, B, D, 2, 32767, -32768), this[D] = B >>> 8, this[D + 1] = B & 255, D + 2;
  }, o.prototype.writeInt32LE = function(B, D, W) {
    return B = +B, D = D >>> 0, W || h(this, B, D, 4, 2147483647, -2147483648), this[D] = B & 255, this[D + 1] = B >>> 8, this[D + 2] = B >>> 16, this[D + 3] = B >>> 24, D + 4;
  }, o.prototype.writeInt32BE = function(B, D, W) {
    return B = +B, D = D >>> 0, W || h(this, B, D, 4, 2147483647, -2147483648), B < 0 && (B = 4294967295 + B + 1), this[D] = B >>> 24, this[D + 1] = B >>> 16, this[D + 2] = B >>> 8, this[D + 3] = B & 255, D + 4;
  };
  function N(K, B, D, W, e7, o7) {
    if (D + W > K.length)
      throw new RangeError("Index out of range");
    if (D < 0)
      throw new RangeError("Index out of range");
  }
  function Y(K, B, D, W, e7) {
    return B = +B, D = D >>> 0, e7 || N(K, B, D, 4), a.write(K, B, D, W, 23, 4), D + 4;
  }
  o.prototype.writeFloatLE = function(B, D, W) {
    return Y(this, B, D, !0, W);
  }, o.prototype.writeFloatBE = function(B, D, W) {
    return Y(this, B, D, !1, W);
  };
  function t7(K, B, D, W, e7) {
    return B = +B, D = D >>> 0, e7 || N(K, B, D, 8), a.write(K, B, D, W, 52, 8), D + 8;
  }
  o.prototype.writeDoubleLE = function(B, D, W) {
    return t7(this, B, D, !0, W);
  }, o.prototype.writeDoubleBE = function(B, D, W) {
    return t7(this, B, D, !1, W);
  }, o.prototype.copy = function(B, D, W, e7) {
    if (!o.isBuffer(B))
      throw new TypeError("argument should be a Buffer");
    if (W || (W = 0), !e7 && e7 !== 0 && (e7 = this.length), D >= B.length && (D = B.length), D || (D = 0), e7 > 0 && e7 < W && (e7 = W), e7 === W || B.length === 0 || this.length === 0)
      return 0;
    if (D < 0)
      throw new RangeError("targetStart out of bounds");
    if (W < 0 || W >= this.length)
      throw new RangeError("Index out of range");
    if (e7 < 0)
      throw new RangeError("sourceEnd out of bounds");
    e7 > this.length && (e7 = this.length), B.length - D < e7 - W && (e7 = B.length - D + W);
    var o7 = e7 - W;
    return this === B && typeof Uint8Array.prototype.copyWithin == "function" ? this.copyWithin(D, W, e7) : Uint8Array.prototype.set.call(
      B,
      this.subarray(W, e7),
      D
    ), o7;
  }, o.prototype.fill = function(B, D, W, e7) {
    if (typeof B == "string") {
      if (typeof D == "string" ? (e7 = D, D = 0, W = this.length) : typeof W == "string" && (e7 = W, W = this.length), e7 !== void 0 && typeof e7 != "string")
        throw new TypeError("encoding must be a string");
      if (typeof e7 == "string" && !o.isEncoding(e7))
        throw new TypeError("Unknown encoding: " + e7);
      if (B.length === 1) {
        var o7 = B.charCodeAt(0);
        (e7 === "utf8" && o7 < 128 || e7 === "latin1") && (B = o7);
      }
    } else
      typeof B == "number" ? B = B & 255 : typeof B == "boolean" && (B = Number(B));
    if (D < 0 || this.length < D || this.length < W)
      throw new RangeError("Out of range index");
    if (W <= D)
      return this;
    D = D >>> 0, W = W === void 0 ? this.length : W >>> 0, B || (B = 0);
    var a7;
    if (typeof B == "number")
      for (a7 = D; a7 < W; ++a7)
        this[a7] = B;
    else {
      var s7 = o.isBuffer(B) ? B : o.from(B, e7), u7 = s7.length;
      if (u7 === 0)
        throw new TypeError('The value "' + B + '" is invalid for argument "value"');
      for (a7 = 0; a7 < W - D; ++a7)
        this[a7 + D] = s7[a7 % u7];
    }
    return this;
  };
  var H = /[^+/0-9A-Za-z-_]/g;
  function $(K) {
    if (K = K.split("=")[0], K = K.trim().replace(H, ""), K.length < 2)
      return "";
    for (; K.length % 4 !== 0; )
      K = K + "=";
    return K;
  }
  function X(K, B) {
    B = B || 1 / 0;
    for (var D, W = K.length, e7 = null, o7 = [], a7 = 0; a7 < W; ++a7) {
      if (D = K.charCodeAt(a7), D > 55295 && D < 57344) {
        if (!e7) {
          if (D > 56319) {
            (B -= 3) > -1 && o7.push(239, 191, 189);
            continue;
          } else if (a7 + 1 === W) {
            (B -= 3) > -1 && o7.push(239, 191, 189);
            continue;
          }
          e7 = D;
          continue;
        }
        if (D < 56320) {
          (B -= 3) > -1 && o7.push(239, 191, 189), e7 = D;
          continue;
        }
        D = (e7 - 55296 << 10 | D - 56320) + 65536;
      } else
        e7 && (B -= 3) > -1 && o7.push(239, 191, 189);
      if (e7 = null, D < 128) {
        if ((B -= 1) < 0)
          break;
        o7.push(D);
      } else if (D < 2048) {
        if ((B -= 2) < 0)
          break;
        o7.push(
          D >> 6 | 192,
          D & 63 | 128
        );
      } else if (D < 65536) {
        if ((B -= 3) < 0)
          break;
        o7.push(
          D >> 12 | 224,
          D >> 6 & 63 | 128,
          D & 63 | 128
        );
      } else if (D < 1114112) {
        if ((B -= 4) < 0)
          break;
        o7.push(
          D >> 18 | 240,
          D >> 12 & 63 | 128,
          D >> 6 & 63 | 128,
          D & 63 | 128
        );
      } else
        throw new Error("Invalid code point");
    }
    return o7;
  }
  function i7(K) {
    for (var B = [], D = 0; D < K.length; ++D)
      B.push(K.charCodeAt(D) & 255);
    return B;
  }
  function J(K, B) {
    for (var D, W, e7, o7 = [], a7 = 0; a7 < K.length && !((B -= 2) < 0); ++a7)
      D = K.charCodeAt(a7), W = D >> 8, e7 = D % 256, o7.push(e7), o7.push(W);
    return o7;
  }
  function _(K) {
    return t.toByteArray($(K));
  }
  function E(K, B, D, W) {
    for (var e7 = 0; e7 < W && !(e7 + D >= B.length || e7 >= K.length); ++e7)
      B[e7 + D] = K[e7];
    return e7;
  }
  function j(K, B) {
    return K instanceof B || K != null && K.constructor != null && K.constructor.name != null && K.constructor.name === B.name;
  }
  function V(K) {
    return K !== K;
  }
  var n7 = function() {
    for (var K = "0123456789abcdef", B = new Array(256), D = 0; D < 16; ++D)
      for (var W = D * 16, e7 = 0; e7 < 16; ++e7)
        B[W + e7] = K[D] + K[e7];
    return B;
  }();
})(Q);
var qp = { exports: {} }, qe = qp.exports = {}, et, tt;
function go() {
  throw new Error("setTimeout has not been defined");
}
function xo() {
  throw new Error("clearTimeout has not been defined");
}
(function() {
  try {
    typeof setTimeout == "function" ? et = setTimeout : et = go;
  } catch {
    et = go;
  }
  try {
    typeof clearTimeout == "function" ? tt = clearTimeout : tt = xo;
  } catch {
    tt = xo;
  }
})();
function Kp(e) {
  if (et === setTimeout)
    return setTimeout(e, 0);
  if ((et === go || !et) && setTimeout)
    return et = setTimeout, setTimeout(e, 0);
  try {
    return et(e, 0);
  } catch {
    try {
      return et.call(null, e, 0);
    } catch {
      return et.call(this, e, 0);
    }
  }
}
function u_(e) {
  if (tt === clearTimeout)
    return clearTimeout(e);
  if ((tt === xo || !tt) && clearTimeout)
    return tt = clearTimeout, clearTimeout(e);
  try {
    return tt(e);
  } catch {
    try {
      return tt.call(null, e);
    } catch {
      return tt.call(this, e);
    }
  }
}
var Dt = [], jr = !1, Ya, W6 = -1;
function l_() {
  !jr || !Ya || (jr = !1, Ya.length ? Dt = Ya.concat(Dt) : W6 = -1, Dt.length && Gp());
}
function Gp() {
  if (!jr) {
    var e = Kp(l_);
    jr = !0;
    for (var t = Dt.length; t; ) {
      for (Ya = Dt, Dt = []; ++W6 < t; )
        Ya && Ya[W6].run();
      W6 = -1, t = Dt.length;
    }
    Ya = null, jr = !1, u_(e);
  }
}
qe.nextTick = function(e) {
  var t = new Array(arguments.length - 1);
  if (arguments.length > 1)
    for (var a = 1; a < arguments.length; a++)
      t[a - 1] = arguments[a];
  Dt.push(new Wp(e, t)), Dt.length === 1 && !jr && Kp(Gp);
};
function Wp(e, t) {
  this.fun = e, this.array = t;
}
Wp.prototype.run = function() {
  this.fun.apply(null, this.array);
};
qe.title = "browser";
qe.browser = !0;
qe.env = {};
qe.argv = [];
qe.version = "";
qe.versions = {};
function ea() {
}
qe.on = ea;
qe.addListener = ea;
qe.once = ea;
qe.off = ea;
qe.removeListener = ea;
qe.removeAllListeners = ea;
qe.emit = ea;
qe.prependListener = ea;
qe.prependOnceListener = ea;
qe.listeners = function(e) {
  return [];
};
qe.binding = function(e) {
  throw new Error("process.binding is not supported");
};
qe.cwd = function() {
  return "/";
};
qe.chdir = function(e) {
  throw new Error("process.chdir is not supported");
};
qe.umask = function() {
  return 0;
};
var Zp = qp.exports;
const g7 = /* @__PURE__ */ Qt(Zp);
var p_ = function(e) {
  function t() {
    var r = this || self;
    return delete e.prototype.__magic__, r;
  }
  if (typeof globalThis == "object")
    return globalThis;
  if (this)
    return t();
  e.defineProperty(e.prototype, "__magic__", {
    configurable: !0,
    get: t
  });
  var a = __magic__;
  return a;
}(Object), Yp = p_;
const h_ = 9, b_ = "1.19.0+commit.72eaeba", m_ = "TxUtil", v_ = "2920f04d42c66cf433d55b6e738ee31e", y_ = [
  {
    name: "LockingScriptParts",
    params: [
      {
        name: "code",
        type: "bytes"
      },
      {
        name: "data",
        type: "bytes"
      }
    ],
    genericTypes: []
  },
  {
    name: "OpPushData",
    params: [
      {
        name: "len",
        type: "int"
      },
      {
        name: "value",
        type: "int"
      }
    ],
    genericTypes: []
  },
  {
    name: "VarIntData",
    params: [
      {
        name: "len",
        type: "int"
      },
      {
        name: "value",
        type: "int"
      }
    ],
    genericTypes: []
  },
  {
    name: "TxInputProof",
    params: [
      {
        name: "hashProof",
        type: "bytes"
      },
      {
        name: "txHash",
        type: "bytes"
      },
      {
        name: "outputIndexBytes",
        type: "bytes"
      },
      {
        name: "sequenceBytes",
        type: "bytes"
      }
    ],
    genericTypes: []
  },
  {
    name: "TxOutputProof",
    params: [
      {
        name: "txHeader",
        type: "bytes"
      },
      {
        name: "hashProof",
        type: "bytes"
      },
      {
        name: "satoshiBytes",
        type: "bytes"
      },
      {
        name: "scriptHash",
        type: "bytes"
      }
    ],
    genericTypes: []
  }
], g_ = [
  {
    name: "TxUtil",
    params: [],
    properties: [],
    genericTypes: []
  }
], x_ = [], __ = [
  {
    type: "constructor",
    params: []
  }
], w_ = [], S_ = "debug", E_ = "file:///Users/ivan/Codes/blockchain/meta-contract/src/mcp01/contract/txUtil.scrypt", T_ = "", A_ = "", Xp = {
  version: h_,
  compilerVersion: b_,
  contract: m_,
  md5: v_,
  structs: y_,
  library: g_,
  alias: x_,
  abi: __,
  stateProps: w_,
  buildType: S_,
  file: E_,
  hex: T_,
  sourceMapFile: A_
};
var pn = {}, hn = {}, bn = {}, wf = { exports: {} };
/*! https://mths.be/punycode v1.4.1 by @mathias */
wf.exports;
(function(e, t) {
  (function(a) {
    var r = t && !t.nodeType && t, f = e && !e.nodeType && e, i = typeof I7 == "object" && I7;
    (i.global === i || i.window === i || i.self === i) && (a = i);
    var n, o = 2147483647, s = 36, b = 1, l = 26, v = 38, m = 700, x = 72, I = 128, k = "-", P = /^xn--/, M = /[^\x20-\x7E]/, R = /[\x2E\u3002\uFF0E\uFF61]/g, F = {
      overflow: "Overflow: input needs wider integers to process",
      "not-basic": "Illegal input >= 0x80 (not a basic code point)",
      "invalid-input": "Invalid input"
    }, C = s - b, L = Math.floor, U = String.fromCharCode, q;
    function Z(w) {
      throw new RangeError(F[w]);
    }
    function z(w, A) {
      for (var h = w.length, N = []; h--; )
        N[h] = A(w[h]);
      return N;
    }
    function G(w, A) {
      var h = w.split("@"), N = "";
      h.length > 1 && (N = h[0] + "@", w = h[1]), w = w.replace(R, ".");
      var Y = w.split("."), t7 = z(Y, A).join(".");
      return N + t7;
    }
    function O(w) {
      for (var A = [], h = 0, N = w.length, Y, t7; h < N; )
        Y = w.charCodeAt(h++), Y >= 55296 && Y <= 56319 && h < N ? (t7 = w.charCodeAt(h++), (t7 & 64512) == 56320 ? A.push(((Y & 1023) << 10) + (t7 & 1023) + 65536) : (A.push(Y), h--)) : A.push(Y);
      return A;
    }
    function u(w) {
      return z(w, function(A) {
        var h = "";
        return A > 65535 && (A -= 65536, h += U(A >>> 10 & 1023 | 55296), A = 56320 | A & 1023), h += U(A), h;
      }).join("");
    }
    function p(w) {
      return w - 48 < 10 ? w - 22 : w - 65 < 26 ? w - 65 : w - 97 < 26 ? w - 97 : s;
    }
    function d(w, A) {
      return w + 22 + 75 * (w < 26) - ((A != 0) << 5);
    }
    function c(w, A, h) {
      var N = 0;
      for (w = h ? L(w / m) : w >> 1, w += L(w / A); w > C * l >> 1; N += s)
        w = L(w / C);
      return L(N + (C + 1) * w / (w + v));
    }
    function y(w) {
      var A = [], h = w.length, N, Y = 0, t7 = I, H = x, $, X, i7, J, _, E, j, V, n7;
      for ($ = w.lastIndexOf(k), $ < 0 && ($ = 0), X = 0; X < $; ++X)
        w.charCodeAt(X) >= 128 && Z("not-basic"), A.push(w.charCodeAt(X));
      for (i7 = $ > 0 ? $ + 1 : 0; i7 < h; ) {
        for (J = Y, _ = 1, E = s; i7 >= h && Z("invalid-input"), j = p(w.charCodeAt(i7++)), (j >= s || j > L((o - Y) / _)) && Z("overflow"), Y += j * _, V = E <= H ? b : E >= H + l ? l : E - H, !(j < V); E += s)
          n7 = s - V, _ > L(o / n7) && Z("overflow"), _ *= n7;
        N = A.length + 1, H = c(Y - J, N, J == 0), L(Y / N) > o - t7 && Z("overflow"), t7 += L(Y / N), Y %= N, A.splice(Y++, 0, t7);
      }
      return u(A);
    }
    function S(w) {
      var A, h, N, Y, t7, H, $, X, i7, J, _, E = [], j, V, n7, K;
      for (w = O(w), j = w.length, A = I, h = 0, t7 = x, H = 0; H < j; ++H)
        _ = w[H], _ < 128 && E.push(U(_));
      for (N = Y = E.length, Y && E.push(k); N < j; ) {
        for ($ = o, H = 0; H < j; ++H)
          _ = w[H], _ >= A && _ < $ && ($ = _);
        for (V = N + 1, $ - A > L((o - h) / V) && Z("overflow"), h += ($ - A) * V, A = $, H = 0; H < j; ++H)
          if (_ = w[H], _ < A && ++h > o && Z("overflow"), _ == A) {
            for (X = h, i7 = s; J = i7 <= t7 ? b : i7 >= t7 + l ? l : i7 - t7, !(X < J); i7 += s)
              K = X - J, n7 = s - J, E.push(
                U(d(J + K % n7, 0))
              ), X = L(K / n7);
            E.push(U(d(X, 0))), t7 = c(h, V, N == Y), h = 0, ++N;
          }
        ++h, ++A;
      }
      return E.join("");
    }
    function T(w) {
      return G(w, function(A) {
        return P.test(A) ? y(A.slice(4).toLowerCase()) : A;
      });
    }
    function g(w) {
      return G(w, function(A) {
        return M.test(A) ? "xn--" + S(A) : A;
      });
    }
    if (n = {
      /**
       * A string representing the current Punycode.js version number.
       * @memberOf punycode
       * @type String
       */
      version: "1.4.1",
      /**
       * An object of methods to convert from JavaScript's internal character
       * representation (UCS-2) to Unicode code points, and back.
       * @see <https://mathiasbynens.be/notes/javascript-encoding>
       * @memberOf punycode
       * @type Object
       */
      ucs2: {
        decode: O,
        encode: u
      },
      decode: y,
      encode: S,
      toASCII: g,
      toUnicode: T
    }, r && f)
      if (e.exports == r)
        f.exports = n;
      else
        for (q in n)
          n.hasOwnProperty(q) && (r[q] = n[q]);
    else
      a.punycode = n;
  })(I7);
})(wf, wf.exports);
var Ns = wf.exports;
const I_ = /* @__PURE__ */ Qt(Ns);
function k_(e, t) {
  return Object.prototype.hasOwnProperty.call(e, t);
}
var O_ = function(e, t, a, r) {
  t = t || "&", a = a || "=";
  var f = {};
  if (typeof e != "string" || e.length === 0)
    return f;
  var i = /\+/g;
  e = e.split(t);
  var n = 1e3;
  r && typeof r.maxKeys == "number" && (n = r.maxKeys);
  var o = e.length;
  n > 0 && o > n && (o = n);
  for (var s = 0; s < o; ++s) {
    var b = e[s].replace(i, "%20"), l = b.indexOf(a), v, m, x, I;
    l >= 0 ? (v = b.substr(0, l), m = b.substr(l + 1)) : (v = b, m = ""), x = decodeURIComponent(v), I = decodeURIComponent(m), k_(f, x) ? P_(f[x]) ? f[x].push(I) : f[x] = [f[x], I] : f[x] = I;
  }
  return f;
}, P_ = Array.isArray || function(e) {
  return Object.prototype.toString.call(e) === "[object Array]";
}, H1 = function(e) {
  switch (typeof e) {
    case "string":
      return e;
    case "boolean":
      return e ? "true" : "false";
    case "number":
      return isFinite(e) ? e : "";
    default:
      return "";
  }
}, M_ = function(e, t, a, r) {
  return t = t || "&", a = a || "=", e === null && (e = void 0), typeof e == "object" ? Bc(B_(e), function(f) {
    var i = encodeURIComponent(H1(f)) + a;
    return R_(e[f]) ? Bc(e[f], function(n) {
      return i + encodeURIComponent(H1(n));
    }).join(t) : i + encodeURIComponent(H1(e[f]));
  }).join(t) : r ? encodeURIComponent(H1(r)) + a + encodeURIComponent(H1(e)) : "";
}, R_ = Array.isArray || function(e) {
  return Object.prototype.toString.call(e) === "[object Array]";
};
function Bc(e, t) {
  if (e.map)
    return e.map(t);
  for (var a = [], r = 0; r < e.length; r++)
    a.push(t(e[r], r));
  return a;
}
var B_ = Object.keys || function(e) {
  var t = [];
  for (var a in e)
    Object.prototype.hasOwnProperty.call(e, a) && t.push(a);
  return t;
}, Jp, Qp, N_ = Qp = O_, C_ = Jp = M_;
function D_(e) {
  return encodeURIComponent(e);
}
function L_(e) {
  return decodeURIComponent(e);
}
var F_ = {
  decode: N_,
  encode: C_,
  parse: Qp,
  stringify: Jp,
  escape: D_,
  unescape: L_
}, H_ = {
  isString: function(e) {
    return typeof e == "string";
  },
  isObject: function(e) {
    return typeof e == "object" && e !== null;
  },
  isNull: function(e) {
    return e === null;
  },
  isNullOrUndefined: function(e) {
    return e == null;
  }
}, U_ = I_, rt = H_, $_ = K9, j_ = ew, eh = tw, V_ = Q_, z_ = d5;
function d5() {
  this.protocol = null, this.slashes = null, this.auth = null, this.host = null, this.port = null, this.hostname = null, this.hash = null, this.search = null, this.query = null, this.pathname = null, this.path = null, this.href = null;
}
var q_ = /^([a-z0-9.+-]+:)/i, K_ = /:[0-9]*$/, G_ = /^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/, W_ = ["<", ">", '"', "`", " ", "\r", `
`, "	"], Z_ = ["{", "}", "|", "\\", "^", "`"].concat(W_), _o = ["'"].concat(Z_), Nc = ["%", "/", "?", ";", "#"].concat(_o), Cc = ["/", "?", "#"], Y_ = 255, Dc = /^[+a-z0-9A-Z_-]{0,63}$/, X_ = /^([+a-z0-9A-Z_-]{0,63})(.*)$/, J_ = {
  javascript: !0,
  "javascript:": !0
}, wo = {
  javascript: !0,
  "javascript:": !0
}, Vr = {
  http: !0,
  https: !0,
  ftp: !0,
  gopher: !0,
  file: !0,
  "http:": !0,
  "https:": !0,
  "ftp:": !0,
  "gopher:": !0,
  "file:": !0
}, So = F_;
function K9(e, t, a) {
  if (e && rt.isObject(e) && e instanceof d5)
    return e;
  var r = new d5();
  return r.parse(e, t, a), r;
}
d5.prototype.parse = function(e, t, a) {
  if (!rt.isString(e))
    throw new TypeError("Parameter 'url' must be a string, not " + typeof e);
  var r = e.indexOf("?"), f = r !== -1 && r < e.indexOf("#") ? "?" : "#", i = e.split(f), n = /\\/g;
  i[0] = i[0].replace(n, "/"), e = i.join(f);
  var o = e;
  if (o = o.trim(), !a && e.split("#").length === 1) {
    var s = G_.exec(o);
    if (s)
      return this.path = o, this.href = o, this.pathname = s[1], s[2] ? (this.search = s[2], t ? this.query = So.parse(this.search.substr(1)) : this.query = this.search.substr(1)) : t && (this.search = "", this.query = {}), this;
  }
  var b = q_.exec(o);
  if (b) {
    b = b[0];
    var l = b.toLowerCase();
    this.protocol = l, o = o.substr(b.length);
  }
  if (a || b || o.match(/^\/\/[^@\/]+@[^@\/]+/)) {
    var v = o.substr(0, 2) === "//";
    v && !(b && wo[b]) && (o = o.substr(2), this.slashes = !0);
  }
  if (!wo[b] && (v || b && !Vr[b])) {
    for (var m = -1, x = 0; x < Cc.length; x++) {
      var I = o.indexOf(Cc[x]);
      I !== -1 && (m === -1 || I < m) && (m = I);
    }
    var k, P;
    m === -1 ? P = o.lastIndexOf("@") : P = o.lastIndexOf("@", m), P !== -1 && (k = o.slice(0, P), o = o.slice(P + 1), this.auth = decodeURIComponent(k)), m = -1;
    for (var x = 0; x < Nc.length; x++) {
      var I = o.indexOf(Nc[x]);
      I !== -1 && (m === -1 || I < m) && (m = I);
    }
    m === -1 && (m = o.length), this.host = o.slice(0, m), o = o.slice(m), this.parseHost(), this.hostname = this.hostname || "";
    var M = this.hostname[0] === "[" && this.hostname[this.hostname.length - 1] === "]";
    if (!M)
      for (var R = this.hostname.split(/\./), x = 0, F = R.length; x < F; x++) {
        var C = R[x];
        if (C && !C.match(Dc)) {
          for (var L = "", U = 0, q = C.length; U < q; U++)
            C.charCodeAt(U) > 127 ? L += "x" : L += C[U];
          if (!L.match(Dc)) {
            var Z = R.slice(0, x), z = R.slice(x + 1), G = C.match(X_);
            G && (Z.push(G[1]), z.unshift(G[2])), z.length && (o = "/" + z.join(".") + o), this.hostname = Z.join(".");
            break;
          }
        }
      }
    this.hostname.length > Y_ ? this.hostname = "" : this.hostname = this.hostname.toLowerCase(), M || (this.hostname = U_.toASCII(this.hostname));
    var O = this.port ? ":" + this.port : "", u = this.hostname || "";
    this.host = u + O, this.href += this.host, M && (this.hostname = this.hostname.substr(1, this.hostname.length - 2), o[0] !== "/" && (o = "/" + o));
  }
  if (!J_[l])
    for (var x = 0, F = _o.length; x < F; x++) {
      var p = _o[x];
      if (o.indexOf(p) !== -1) {
        var d = encodeURIComponent(p);
        d === p && (d = escape(p)), o = o.split(p).join(d);
      }
    }
  var c = o.indexOf("#");
  c !== -1 && (this.hash = o.substr(c), o = o.slice(0, c));
  var y = o.indexOf("?");
  if (y !== -1 ? (this.search = o.substr(y), this.query = o.substr(y + 1), t && (this.query = So.parse(this.query)), o = o.slice(0, y)) : t && (this.search = "", this.query = {}), o && (this.pathname = o), Vr[l] && this.hostname && !this.pathname && (this.pathname = "/"), this.pathname || this.search) {
    var O = this.pathname || "", S = this.search || "";
    this.path = O + S;
  }
  return this.href = this.format(), this;
};
function Q_(e) {
  return rt.isString(e) && (e = K9(e)), e instanceof d5 ? e.format() : d5.prototype.format.call(e);
}
d5.prototype.format = function() {
  var e = this.auth || "";
  e && (e = encodeURIComponent(e), e = e.replace(/%3A/i, ":"), e += "@");
  var t = this.protocol || "", a = this.pathname || "", r = this.hash || "", f = !1, i = "";
  this.host ? f = e + this.host : this.hostname && (f = e + (this.hostname.indexOf(":") === -1 ? this.hostname : "[" + this.hostname + "]"), this.port && (f += ":" + this.port)), this.query && rt.isObject(this.query) && Object.keys(this.query).length && (i = So.stringify(this.query));
  var n = this.search || i && "?" + i || "";
  return t && t.substr(-1) !== ":" && (t += ":"), this.slashes || (!t || Vr[t]) && f !== !1 ? (f = "//" + (f || ""), a && a.charAt(0) !== "/" && (a = "/" + a)) : f || (f = ""), r && r.charAt(0) !== "#" && (r = "#" + r), n && n.charAt(0) !== "?" && (n = "?" + n), a = a.replace(/[?#]/g, function(o) {
    return encodeURIComponent(o);
  }), n = n.replace("#", "%23"), t + f + a + n + r;
};
function ew(e, t) {
  return K9(e, !1, !0).resolve(t);
}
d5.prototype.resolve = function(e) {
  return this.resolveObject(K9(e, !1, !0)).format();
};
function tw(e, t) {
  return e ? K9(e, !1, !0).resolveObject(t) : t;
}
d5.prototype.resolveObject = function(e) {
  if (rt.isString(e)) {
    var t = new d5();
    t.parse(e, !1, !0), e = t;
  }
  for (var a = new d5(), r = Object.keys(this), f = 0; f < r.length; f++) {
    var i = r[f];
    a[i] = this[i];
  }
  if (a.hash = e.hash, e.href === "")
    return a.href = a.format(), a;
  if (e.slashes && !e.protocol) {
    for (var n = Object.keys(e), o = 0; o < n.length; o++) {
      var s = n[o];
      s !== "protocol" && (a[s] = e[s]);
    }
    return Vr[a.protocol] && a.hostname && !a.pathname && (a.path = a.pathname = "/"), a.href = a.format(), a;
  }
  if (e.protocol && e.protocol !== a.protocol) {
    if (!Vr[e.protocol]) {
      for (var b = Object.keys(e), l = 0; l < b.length; l++) {
        var v = b[l];
        a[v] = e[v];
      }
      return a.href = a.format(), a;
    }
    if (a.protocol = e.protocol, !e.host && !wo[e.protocol]) {
      for (var F = (e.pathname || "").split("/"); F.length && !(e.host = F.shift()); )
        ;
      e.host || (e.host = ""), e.hostname || (e.hostname = ""), F[0] !== "" && F.unshift(""), F.length < 2 && F.unshift(""), a.pathname = F.join("/");
    } else
      a.pathname = e.pathname;
    if (a.search = e.search, a.query = e.query, a.host = e.host || "", a.auth = e.auth, a.hostname = e.hostname || e.host, a.port = e.port, a.pathname || a.search) {
      var m = a.pathname || "", x = a.search || "";
      a.path = m + x;
    }
    return a.slashes = a.slashes || e.slashes, a.href = a.format(), a;
  }
  var I = a.pathname && a.pathname.charAt(0) === "/", k = e.host || e.pathname && e.pathname.charAt(0) === "/", P = k || I || a.host && e.pathname, M = P, R = a.pathname && a.pathname.split("/") || [], F = e.pathname && e.pathname.split("/") || [], C = a.protocol && !Vr[a.protocol];
  if (C && (a.hostname = "", a.port = null, a.host && (R[0] === "" ? R[0] = a.host : R.unshift(a.host)), a.host = "", e.protocol && (e.hostname = null, e.port = null, e.host && (F[0] === "" ? F[0] = e.host : F.unshift(e.host)), e.host = null), P = P && (F[0] === "" || R[0] === "")), k)
    a.host = e.host || e.host === "" ? e.host : a.host, a.hostname = e.hostname || e.hostname === "" ? e.hostname : a.hostname, a.search = e.search, a.query = e.query, R = F;
  else if (F.length)
    R || (R = []), R.pop(), R = R.concat(F), a.search = e.search, a.query = e.query;
  else if (!rt.isNullOrUndefined(e.search)) {
    if (C) {
      a.hostname = a.host = R.shift();
      var L = a.host && a.host.indexOf("@") > 0 ? a.host.split("@") : !1;
      L && (a.auth = L.shift(), a.host = a.hostname = L.shift());
    }
    return a.search = e.search, a.query = e.query, (!rt.isNull(a.pathname) || !rt.isNull(a.search)) && (a.path = (a.pathname ? a.pathname : "") + (a.search ? a.search : "")), a.href = a.format(), a;
  }
  if (!R.length)
    return a.pathname = null, a.search ? a.path = "/" + a.search : a.path = null, a.href = a.format(), a;
  for (var U = R.slice(-1)[0], q = (a.host || e.host || R.length > 1) && (U === "." || U === "..") || U === "", Z = 0, z = R.length; z >= 0; z--)
    U = R[z], U === "." ? R.splice(z, 1) : U === ".." ? (R.splice(z, 1), Z++) : Z && (R.splice(z, 1), Z--);
  if (!P && !M)
    for (; Z--; Z)
      R.unshift("..");
  P && R[0] !== "" && (!R[0] || R[0].charAt(0) !== "/") && R.unshift(""), q && R.join("/").substr(-1) !== "/" && R.push("");
  var G = R[0] === "" || R[0] && R[0].charAt(0) === "/";
  if (C) {
    a.hostname = a.host = G ? "" : R.length ? R.shift() : "";
    var L = a.host && a.host.indexOf("@") > 0 ? a.host.split("@") : !1;
    L && (a.auth = L.shift(), a.host = a.hostname = L.shift());
  }
  return P = P || a.host && R.length, P && !G && R.unshift(""), R.length ? a.pathname = R.join("/") : (a.pathname = null, a.path = null), (!rt.isNull(a.pathname) || !rt.isNull(a.search)) && (a.path = (a.pathname ? a.pathname : "") + (a.search ? a.search : "")), a.auth = e.auth || a.auth, a.slashes = a.slashes || e.slashes, a.href = a.format(), a;
};
d5.prototype.parseHost = function() {
  var e = this.host, t = K_.exec(e);
  t && (t = t[0], t !== ":" && (this.port = t.substr(1)), e = e.substr(0, e.length - t.length)), e && (this.hostname = e);
};
function aw(e, t) {
  for (var a = 0, r = e.length - 1; r >= 0; r--) {
    var f = e[r];
    f === "." ? e.splice(r, 1) : f === ".." ? (e.splice(r, 1), a++) : a && (e.splice(r, 1), a--);
  }
  if (t)
    for (; a--; a)
      e.unshift("..");
  return e;
}
function rw() {
  for (var e = "", t = !1, a = arguments.length - 1; a >= -1 && !t; a--) {
    var r = a >= 0 ? arguments[a] : "/";
    if (typeof r != "string")
      throw new TypeError("Arguments to path.resolve must be strings");
    if (!r)
      continue;
    e = r + "/" + e, t = r.charAt(0) === "/";
  }
  return e = aw(fw(e.split("/"), function(f) {
    return !!f;
  }), !t).join("/"), (t ? "/" : "") + e || ".";
}
function fw(e, t) {
  if (e.filter)
    return e.filter(t);
  for (var a = [], r = 0; r < e.length; r++)
    t(e[r], r, e) && a.push(e[r]);
  return a;
}
var th = function(e) {
  function t() {
    var r = this || self;
    return delete e.prototype.__magic__, r;
  }
  if (typeof globalThis == "object")
    return globalThis;
  if (this)
    return t();
  e.defineProperty(e.prototype, "__magic__", {
    configurable: !0,
    get: t
  });
  var a = __magic__;
  return a;
}(Object), iw = (
  /** @type {formatImport}*/
  V_
), ah = (
  /** @type {parseImport}*/
  $_
), rh = (
  /** @type {resolveImport}*/
  j_
), fh = (
  /** @type {UrlImport}*/
  z_
), Ia = th.URL, ih = th.URLSearchParams, nw = /%/g, ow = /\\/g, sw = /\n/g, dw = /\r/g, cw = /\t/g, uw = 47;
function lw(e) {
  var t = (
    /** @type {URL|null} */
    e ?? null
  );
  return !!(t !== null && (t != null && t.href) && (t != null && t.origin));
}
function pw(e) {
  if (e.hostname !== "")
    throw new TypeError('File URL host must be "localhost" or empty on browser');
  for (var t = e.pathname, a = 0; a < t.length; a++)
    if (t[a] === "%") {
      var r = t.codePointAt(a + 2) | 32;
      if (t[a + 1] === "2" && r === 102)
        throw new TypeError("File URL path must not include encoded / characters");
    }
  return decodeURIComponent(t);
}
function hw(e) {
  return e.includes("%") && (e = e.replace(nw, "%25")), e.includes("\\") && (e = e.replace(ow, "%5C")), e.includes(`
`) && (e = e.replace(sw, "%0A")), e.includes("\r") && (e = e.replace(dw, "%0D")), e.includes("	") && (e = e.replace(cw, "%09")), e;
}
var nh = (
  /**
   * @type {domainToASCII}
   */
  function(t) {
    if (typeof t > "u")
      throw new TypeError('The "domain" argument must be specified');
    return new Ia("http://" + t).hostname;
  }
), oh = (
  /**
   * @type {domainToUnicode}
   */
  function(t) {
    if (typeof t > "u")
      throw new TypeError('The "domain" argument must be specified');
    return new Ia("http://" + t).hostname;
  }
), sh = (
  /**
   * @type {(url: string) => URL}
   */
  function(t) {
    var a = new Ia("file://"), r = rw(t), f = t.charCodeAt(t.length - 1);
    return f === uw && r[r.length - 1] !== "/" && (r += "/"), a.pathname = hw(r), a;
  }
), dh = (
  /**
   * @type {fileURLToPath & ((path: string | URL) => string)}
   */
  function(t) {
    if (!lw(t) && typeof t != "string")
      throw new TypeError('The "path" argument must be of type string or an instance of URL. Received type ' + typeof t + " (" + t + ")");
    var a = new Ia(t);
    if (a.protocol !== "file:")
      throw new TypeError("The URL must be of scheme file");
    return pw(a);
  }
), ch = (
  /**
   * @type {(
   *   ((urlObject: URL, options?: URLFormatOptions) => string) &
   *   ((urlObject: UrlObject | string, options?: never) => string)
   * )}
   */
  function(t, a) {
    var r, f, i;
    if (a === void 0 && (a = {}), !(t instanceof Ia))
      return iw(t);
    if (typeof a != "object" || a === null)
      throw new TypeError('The "options" argument must be of type object.');
    var n = (r = a.auth) != null ? r : !0, o = (f = a.fragment) != null ? f : !0, s = (i = a.search) != null ? i : !0, b = new Ia(t.toString());
    return n || (b.username = "", b.password = ""), o || (b.hash = ""), s || (b.search = ""), b.toString();
  }
), G9 = {
  format: ch,
  parse: ah,
  resolve: rh,
  resolveObject: eh,
  Url: fh,
  URL: Ia,
  URLSearchParams: ih,
  domainToASCII: nh,
  domainToUnicode: oh,
  pathToFileURL: sh,
  fileURLToPath: dh
};
const bw = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  URL: Ia,
  URLSearchParams: ih,
  Url: fh,
  default: G9,
  domainToASCII: nh,
  domainToUnicode: oh,
  fileURLToPath: dh,
  format: ch,
  parse: ah,
  pathToFileURL: sh,
  resolve: rh,
  resolveObject: eh
}, Symbol.toStringTag, { value: "Module" })), Cs = /* @__PURE__ */ Rs(bw);
var uh = { exports: {} };
const mw = "mvc-lib", vw = "1.0.5", yw = "A pure and powerful JavaScript MetaverseChain (mvc) library.", gw = "zyoyoung <ouyangzhiying@showpay.top>", xw = !0, _w = "index.js", ww = {
  lint: "standard",
  test: "standard && mocha",
  coverage: "nyc --reporter=text npm run test",
  "build-mvc": "webpack index.js --config webpack.config.js",
  "build-ecies": "webpack ecies/index.js --config webpack.subproject.config.js --output-library mvcEcies -o mvc-ecies.min.js",
  "build-message": "webpack message/index.js --config webpack.subproject.config.js --output-library mvcMessage -o mvc-message.min.js",
  "build-mnemonic": "webpack mnemonic/index.js --config webpack.subproject.config.js --output-library mvcMnemonic -o mvc-mnemonic.min.js",
  build: "yarn build-mvc && yarn build-ecies && yarn build-message && yarn build-mnemonic",
  prepublishOnly: "yarn build"
}, Sw = "mvc.min.js", Ew = [
  "mvc",
  "metaversechain",
  "transaction",
  "address",
  "p5p",
  "ecies",
  "cryptocurrency",
  "blockchain",
  "payment",
  "bip21",
  "bip32",
  "bip37",
  "bip69",
  "bip70",
  "multisig"
], Tw = {
  type: "git",
  url: "https://github.com/MetaverseChain/mvc-lib-js"
}, Aw = {
  request: "browser-request"
}, Iw = {
  "aes-js": "^3.1.2",
  "bn.js": "=4.11.9",
  bs58: "=4.0.1",
  "clone-deep": "^4.0.1",
  elliptic: "6.5.4",
  "hash.js": "^1.1.7",
  inherits: "2.0.3",
  unorm: "1.4.1"
}, kw = {
  brfs: "2.0.1",
  chai: "4.2.0",
  mocha: "^8.4.0",
  nyc: "^14.1.1",
  sinon: "7.2.3",
  standard: "12.0.1",
  webpack: "4.29.3",
  "webpack-cli": "^3.3.12"
}, Ow = "MIT", Pw = {
  globals: [
    "afterEach",
    "beforeEach",
    "describe",
    "it"
  ],
  ignore: [
    "dist/**"
  ]
}, Mw = {
  name: mw,
  version: vw,
  description: yw,
  author: gw,
  ide: xw,
  main: _w,
  scripts: ww,
  unpkg: Sw,
  keywords: Ew,
  repository: Tw,
  browser: Aw,
  dependencies: Iw,
  devDependencies: kw,
  license: Ow,
  standard: Pw
};
var Ds = { exports: {} };
Ds.exports;
(function(e) {
  (function(t, a) {
    function r(G, O) {
      if (!G)
        throw new Error(O || "Assertion failed");
    }
    function f(G, O) {
      G.super_ = O;
      var u = function() {
      };
      u.prototype = O.prototype, G.prototype = new u(), G.prototype.constructor = G;
    }
    function i(G, O, u) {
      if (i.isBN(G))
        return G;
      this.negative = 0, this.words = null, this.length = 0, this.red = null, G !== null && ((O === "le" || O === "be") && (u = O, O = 10), this._init(G || 0, O || 10, u || "be"));
    }
    typeof t == "object" ? t.exports = i : a.BN = i, i.BN = i, i.wordSize = 26;
    var n;
    try {
      n = Q.Buffer;
    } catch {
    }
    i.isBN = function(O) {
      return O instanceof i ? !0 : O !== null && typeof O == "object" && O.constructor.wordSize === i.wordSize && Array.isArray(O.words);
    }, i.max = function(O, u) {
      return O.cmp(u) > 0 ? O : u;
    }, i.min = function(O, u) {
      return O.cmp(u) < 0 ? O : u;
    }, i.prototype._init = function(O, u, p) {
      if (typeof O == "number")
        return this._initNumber(O, u, p);
      if (typeof O == "object")
        return this._initArray(O, u, p);
      u === "hex" && (u = 16), r(u === (u | 0) && u >= 2 && u <= 36), O = O.toString().replace(/\s+/g, "");
      var d = 0;
      O[0] === "-" && d++, u === 16 ? this._parseHex(O, d) : this._parseBase(O, u, d), O[0] === "-" && (this.negative = 1), this.strip(), p === "le" && this._initArray(this.toArray(), u, p);
    }, i.prototype._initNumber = function(O, u, p) {
      O < 0 && (this.negative = 1, O = -O), O < 67108864 ? (this.words = [O & 67108863], this.length = 1) : O < 4503599627370496 ? (this.words = [
        O & 67108863,
        O / 67108864 & 67108863
      ], this.length = 2) : (r(O < 9007199254740992), this.words = [
        O & 67108863,
        O / 67108864 & 67108863,
        1
      ], this.length = 3), p === "le" && this._initArray(this.toArray(), u, p);
    }, i.prototype._initArray = function(O, u, p) {
      if (r(typeof O.length == "number"), O.length <= 0)
        return this.words = [0], this.length = 1, this;
      this.length = Math.ceil(O.length / 3), this.words = new Array(this.length);
      for (var d = 0; d < this.length; d++)
        this.words[d] = 0;
      var c, y, S = 0;
      if (p === "be")
        for (d = O.length - 1, c = 0; d >= 0; d -= 3)
          y = O[d] | O[d - 1] << 8 | O[d - 2] << 16, this.words[c] |= y << S & 67108863, this.words[c + 1] = y >>> 26 - S & 67108863, S += 24, S >= 26 && (S -= 26, c++);
      else if (p === "le")
        for (d = 0, c = 0; d < O.length; d += 3)
          y = O[d] | O[d + 1] << 8 | O[d + 2] << 16, this.words[c] |= y << S & 67108863, this.words[c + 1] = y >>> 26 - S & 67108863, S += 24, S >= 26 && (S -= 26, c++);
      return this.strip();
    };
    function o(G, O, u) {
      for (var p = 0, d = Math.min(G.length, u), c = O; c < d; c++) {
        var y = G.charCodeAt(c) - 48;
        p <<= 4, y >= 49 && y <= 54 ? p |= y - 49 + 10 : y >= 17 && y <= 22 ? p |= y - 17 + 10 : p |= y & 15;
      }
      return p;
    }
    i.prototype._parseHex = function(O, u) {
      this.length = Math.ceil((O.length - u) / 6), this.words = new Array(this.length);
      for (var p = 0; p < this.length; p++)
        this.words[p] = 0;
      var d, c, y = 0;
      for (p = O.length - 6, d = 0; p >= u; p -= 6)
        c = o(O, p, p + 6), this.words[d] |= c << y & 67108863, this.words[d + 1] |= c >>> 26 - y & 4194303, y += 24, y >= 26 && (y -= 26, d++);
      p + 6 !== u && (c = o(O, u, p + 6), this.words[d] |= c << y & 67108863, this.words[d + 1] |= c >>> 26 - y & 4194303), this.strip();
    };
    function s(G, O, u, p) {
      for (var d = 0, c = Math.min(G.length, u), y = O; y < c; y++) {
        var S = G.charCodeAt(y) - 48;
        d *= p, S >= 49 ? d += S - 49 + 10 : S >= 17 ? d += S - 17 + 10 : d += S;
      }
      return d;
    }
    i.prototype._parseBase = function(O, u, p) {
      this.words = [0], this.length = 1;
      for (var d = 0, c = 1; c <= 67108863; c *= u)
        d++;
      d--, c = c / u | 0;
      for (var y = O.length - p, S = y % d, T = Math.min(y, y - S) + p, g = 0, w = p; w < T; w += d)
        g = s(O, w, w + d, u), this.imuln(c), this.words[0] + g < 67108864 ? this.words[0] += g : this._iaddn(g);
      if (S !== 0) {
        var A = 1;
        for (g = s(O, w, O.length, u), w = 0; w < S; w++)
          A *= u;
        this.imuln(A), this.words[0] + g < 67108864 ? this.words[0] += g : this._iaddn(g);
      }
    }, i.prototype.copy = function(O) {
      O.words = new Array(this.length);
      for (var u = 0; u < this.length; u++)
        O.words[u] = this.words[u];
      O.length = this.length, O.negative = this.negative, O.red = this.red;
    }, i.prototype.clone = function() {
      var O = new i(null);
      return this.copy(O), O;
    }, i.prototype._expand = function(O) {
      for (; this.length < O; )
        this.words[this.length++] = 0;
      return this;
    }, i.prototype.strip = function() {
      for (; this.length > 1 && this.words[this.length - 1] === 0; )
        this.length--;
      return this._normSign();
    }, i.prototype._normSign = function() {
      return this.length === 1 && this.words[0] === 0 && (this.negative = 0), this;
    }, i.prototype.inspect = function() {
      return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
    };
    var b = [
      "",
      "0",
      "00",
      "000",
      "0000",
      "00000",
      "000000",
      "0000000",
      "00000000",
      "000000000",
      "0000000000",
      "00000000000",
      "000000000000",
      "0000000000000",
      "00000000000000",
      "000000000000000",
      "0000000000000000",
      "00000000000000000",
      "000000000000000000",
      "0000000000000000000",
      "00000000000000000000",
      "000000000000000000000",
      "0000000000000000000000",
      "00000000000000000000000",
      "000000000000000000000000",
      "0000000000000000000000000"
    ], l = [
      0,
      0,
      25,
      16,
      12,
      11,
      10,
      9,
      8,
      8,
      7,
      7,
      7,
      7,
      6,
      6,
      6,
      6,
      6,
      6,
      6,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5
    ], v = [
      0,
      0,
      33554432,
      43046721,
      16777216,
      48828125,
      60466176,
      40353607,
      16777216,
      43046721,
      1e7,
      19487171,
      35831808,
      62748517,
      7529536,
      11390625,
      16777216,
      24137569,
      34012224,
      47045881,
      64e6,
      4084101,
      5153632,
      6436343,
      7962624,
      9765625,
      11881376,
      14348907,
      17210368,
      20511149,
      243e5,
      28629151,
      33554432,
      39135393,
      45435424,
      52521875,
      60466176
    ];
    i.prototype.toString = function(O, u) {
      O = O || 10, u = u | 0 || 1;
      var p;
      if (O === 16 || O === "hex") {
        p = "";
        for (var d = 0, c = 0, y = 0; y < this.length; y++) {
          var S = this.words[y], T = ((S << d | c) & 16777215).toString(16);
          c = S >>> 24 - d & 16777215, c !== 0 || y !== this.length - 1 ? p = b[6 - T.length] + T + p : p = T + p, d += 2, d >= 26 && (d -= 26, y--);
        }
        for (c !== 0 && (p = c.toString(16) + p); p.length % u !== 0; )
          p = "0" + p;
        return this.negative !== 0 && (p = "-" + p), p;
      }
      if (O === (O | 0) && O >= 2 && O <= 36) {
        var g = l[O], w = v[O];
        p = "";
        var A = this.clone();
        for (A.negative = 0; !A.isZero(); ) {
          var h = A.modn(w).toString(O);
          A = A.idivn(w), A.isZero() ? p = h + p : p = b[g - h.length] + h + p;
        }
        for (this.isZero() && (p = "0" + p); p.length % u !== 0; )
          p = "0" + p;
        return this.negative !== 0 && (p = "-" + p), p;
      }
      r(!1, "Base should be between 2 and 36");
    }, i.prototype.toNumber = function() {
      var O = this.words[0];
      return this.length === 2 ? O += this.words[1] * 67108864 : this.length === 3 && this.words[2] === 1 ? O += 4503599627370496 + this.words[1] * 67108864 : this.length > 2 && r(!1, "Number can only safely store up to 53 bits"), this.negative !== 0 ? -O : O;
    }, i.prototype.toJSON = function() {
      return this.toString(16);
    }, i.prototype.toBuffer = function(O, u) {
      return r(typeof n < "u"), this.toArrayLike(n, O, u);
    }, i.prototype.toArray = function(O, u) {
      return this.toArrayLike(Array, O, u);
    }, i.prototype.toArrayLike = function(O, u, p) {
      var d = this.byteLength(), c = p || Math.max(1, d);
      r(d <= c, "byte array longer than desired length"), r(c > 0, "Requested array length <= 0"), this.strip();
      var y = u === "le", S = new O(c), T, g, w = this.clone();
      if (y) {
        for (g = 0; !w.isZero(); g++)
          T = w.andln(255), w.iushrn(8), S[g] = T;
        for (; g < c; g++)
          S[g] = 0;
      } else {
        for (g = 0; g < c - d; g++)
          S[g] = 0;
        for (g = 0; !w.isZero(); g++)
          T = w.andln(255), w.iushrn(8), S[c - g - 1] = T;
      }
      return S;
    }, Math.clz32 ? i.prototype._countBits = function(O) {
      return 32 - Math.clz32(O);
    } : i.prototype._countBits = function(O) {
      var u = O, p = 0;
      return u >= 4096 && (p += 13, u >>>= 13), u >= 64 && (p += 7, u >>>= 7), u >= 8 && (p += 4, u >>>= 4), u >= 2 && (p += 2, u >>>= 2), p + u;
    }, i.prototype._zeroBits = function(O) {
      if (O === 0)
        return 26;
      var u = O, p = 0;
      return u & 8191 || (p += 13, u >>>= 13), u & 127 || (p += 7, u >>>= 7), u & 15 || (p += 4, u >>>= 4), u & 3 || (p += 2, u >>>= 2), u & 1 || p++, p;
    }, i.prototype.bitLength = function() {
      var O = this.words[this.length - 1], u = this._countBits(O);
      return (this.length - 1) * 26 + u;
    };
    function m(G) {
      for (var O = new Array(G.bitLength()), u = 0; u < O.length; u++) {
        var p = u / 26 | 0, d = u % 26;
        O[u] = (G.words[p] & 1 << d) >>> d;
      }
      return O;
    }
    i.prototype.zeroBits = function() {
      if (this.isZero())
        return 0;
      for (var O = 0, u = 0; u < this.length; u++) {
        var p = this._zeroBits(this.words[u]);
        if (O += p, p !== 26)
          break;
      }
      return O;
    }, i.prototype.byteLength = function() {
      return Math.ceil(this.bitLength() / 8);
    }, i.prototype.toTwos = function(O) {
      return this.negative !== 0 ? this.abs().inotn(O).iaddn(1) : this.clone();
    }, i.prototype.fromTwos = function(O) {
      return this.testn(O - 1) ? this.notn(O).iaddn(1).ineg() : this.clone();
    }, i.prototype.isNeg = function() {
      return this.negative !== 0;
    }, i.prototype.neg = function() {
      return this.clone().ineg();
    }, i.prototype.ineg = function() {
      return this.isZero() || (this.negative ^= 1), this;
    }, i.prototype.iuor = function(O) {
      for (; this.length < O.length; )
        this.words[this.length++] = 0;
      for (var u = 0; u < O.length; u++)
        this.words[u] = this.words[u] | O.words[u];
      return this.strip();
    }, i.prototype.ior = function(O) {
      return r((this.negative | O.negative) === 0), this.iuor(O);
    }, i.prototype.or = function(O) {
      return this.length > O.length ? this.clone().ior(O) : O.clone().ior(this);
    }, i.prototype.uor = function(O) {
      return this.length > O.length ? this.clone().iuor(O) : O.clone().iuor(this);
    }, i.prototype.iuand = function(O) {
      var u;
      this.length > O.length ? u = O : u = this;
      for (var p = 0; p < u.length; p++)
        this.words[p] = this.words[p] & O.words[p];
      return this.length = u.length, this.strip();
    }, i.prototype.iand = function(O) {
      return r((this.negative | O.negative) === 0), this.iuand(O);
    }, i.prototype.and = function(O) {
      return this.length > O.length ? this.clone().iand(O) : O.clone().iand(this);
    }, i.prototype.uand = function(O) {
      return this.length > O.length ? this.clone().iuand(O) : O.clone().iuand(this);
    }, i.prototype.iuxor = function(O) {
      var u, p;
      this.length > O.length ? (u = this, p = O) : (u = O, p = this);
      for (var d = 0; d < p.length; d++)
        this.words[d] = u.words[d] ^ p.words[d];
      if (this !== u)
        for (; d < u.length; d++)
          this.words[d] = u.words[d];
      return this.length = u.length, this.strip();
    }, i.prototype.ixor = function(O) {
      return r((this.negative | O.negative) === 0), this.iuxor(O);
    }, i.prototype.xor = function(O) {
      return this.length > O.length ? this.clone().ixor(O) : O.clone().ixor(this);
    }, i.prototype.uxor = function(O) {
      return this.length > O.length ? this.clone().iuxor(O) : O.clone().iuxor(this);
    }, i.prototype.inotn = function(O) {
      r(typeof O == "number" && O >= 0);
      var u = Math.ceil(O / 26) | 0, p = O % 26;
      this._expand(u), p > 0 && u--;
      for (var d = 0; d < u; d++)
        this.words[d] = ~this.words[d] & 67108863;
      return p > 0 && (this.words[d] = ~this.words[d] & 67108863 >> 26 - p), this.strip();
    }, i.prototype.notn = function(O) {
      return this.clone().inotn(O);
    }, i.prototype.setn = function(O, u) {
      r(typeof O == "number" && O >= 0);
      var p = O / 26 | 0, d = O % 26;
      return this._expand(p + 1), u ? this.words[p] = this.words[p] | 1 << d : this.words[p] = this.words[p] & ~(1 << d), this.strip();
    }, i.prototype.iadd = function(O) {
      var u;
      if (this.negative !== 0 && O.negative === 0)
        return this.negative = 0, u = this.isub(O), this.negative ^= 1, this._normSign();
      if (this.negative === 0 && O.negative !== 0)
        return O.negative = 0, u = this.isub(O), O.negative = 1, u._normSign();
      var p, d;
      this.length > O.length ? (p = this, d = O) : (p = O, d = this);
      for (var c = 0, y = 0; y < d.length; y++)
        u = (p.words[y] | 0) + (d.words[y] | 0) + c, this.words[y] = u & 67108863, c = u >>> 26;
      for (; c !== 0 && y < p.length; y++)
        u = (p.words[y] | 0) + c, this.words[y] = u & 67108863, c = u >>> 26;
      if (this.length = p.length, c !== 0)
        this.words[this.length] = c, this.length++;
      else if (p !== this)
        for (; y < p.length; y++)
          this.words[y] = p.words[y];
      return this;
    }, i.prototype.add = function(O) {
      var u;
      return O.negative !== 0 && this.negative === 0 ? (O.negative = 0, u = this.sub(O), O.negative ^= 1, u) : O.negative === 0 && this.negative !== 0 ? (this.negative = 0, u = O.sub(this), this.negative = 1, u) : this.length > O.length ? this.clone().iadd(O) : O.clone().iadd(this);
    }, i.prototype.isub = function(O) {
      if (O.negative !== 0) {
        O.negative = 0;
        var u = this.iadd(O);
        return O.negative = 1, u._normSign();
      } else if (this.negative !== 0)
        return this.negative = 0, this.iadd(O), this.negative = 1, this._normSign();
      var p = this.cmp(O);
      if (p === 0)
        return this.negative = 0, this.length = 1, this.words[0] = 0, this;
      var d, c;
      p > 0 ? (d = this, c = O) : (d = O, c = this);
      for (var y = 0, S = 0; S < c.length; S++)
        u = (d.words[S] | 0) - (c.words[S] | 0) + y, y = u >> 26, this.words[S] = u & 67108863;
      for (; y !== 0 && S < d.length; S++)
        u = (d.words[S] | 0) + y, y = u >> 26, this.words[S] = u & 67108863;
      if (y === 0 && S < d.length && d !== this)
        for (; S < d.length; S++)
          this.words[S] = d.words[S];
      return this.length = Math.max(this.length, S), d !== this && (this.negative = 1), this.strip();
    }, i.prototype.sub = function(O) {
      return this.clone().isub(O);
    };
    function x(G, O, u) {
      u.negative = O.negative ^ G.negative;
      var p = G.length + O.length | 0;
      u.length = p, p = p - 1 | 0;
      var d = G.words[0] | 0, c = O.words[0] | 0, y = d * c, S = y & 67108863, T = y / 67108864 | 0;
      u.words[0] = S;
      for (var g = 1; g < p; g++) {
        for (var w = T >>> 26, A = T & 67108863, h = Math.min(g, O.length - 1), N = Math.max(0, g - G.length + 1); N <= h; N++) {
          var Y = g - N | 0;
          d = G.words[Y] | 0, c = O.words[N] | 0, y = d * c + A, w += y / 67108864 | 0, A = y & 67108863;
        }
        u.words[g] = A | 0, T = w | 0;
      }
      return T !== 0 ? u.words[g] = T | 0 : u.length--, u.strip();
    }
    var I = function(O, u, p) {
      var d = O.words, c = u.words, y = p.words, S = 0, T, g, w, A = d[0] | 0, h = A & 8191, N = A >>> 13, Y = d[1] | 0, t7 = Y & 8191, H = Y >>> 13, $ = d[2] | 0, X = $ & 8191, i7 = $ >>> 13, J = d[3] | 0, _ = J & 8191, E = J >>> 13, j = d[4] | 0, V = j & 8191, n7 = j >>> 13, K = d[5] | 0, B = K & 8191, D = K >>> 13, W = d[6] | 0, e7 = W & 8191, o7 = W >>> 13, a7 = d[7] | 0, s7 = a7 & 8191, u7 = a7 >>> 13, m7 = d[8] | 0, p7 = m7 & 8191, l7 = m7 >>> 13, y7 = d[9] | 0, x7 = y7 & 8191, _7 = y7 >>> 13, F7 = c[0] | 0, T7 = F7 & 8191, S7 = F7 >>> 13, Y7 = c[1] | 0, k7 = Y7 & 8191, E7 = Y7 >>> 13, $7 = c[2] | 0, H7 = $7 & 8191, P7 = $7 >>> 13, pe = c[3] | 0, q7 = pe & 8191, N7 = pe >>> 13, xe = c[4] | 0, K7 = xe & 8191, R7 = xe >>> 13, be = c[5] | 0, G7 = be & 8191, M7 = be >>> 13, se = c[6] | 0, V7 = se & 8191, B7 = se >>> 13, ne = c[7] | 0, z7 = ne & 8191, C7 = ne >>> 13, me = c[8] | 0, W7 = me & 8191, D7 = me >>> 13, _e = c[9] | 0, Z7 = _e & 8191, L7 = _e >>> 13;
      p.negative = O.negative ^ u.negative, p.length = 19, T = Math.imul(h, T7), g = Math.imul(h, S7), g = g + Math.imul(N, T7) | 0, w = Math.imul(N, S7);
      var ve = (S + T | 0) + ((g & 8191) << 13) | 0;
      S = (w + (g >>> 13) | 0) + (ve >>> 26) | 0, ve &= 67108863, T = Math.imul(t7, T7), g = Math.imul(t7, S7), g = g + Math.imul(H, T7) | 0, w = Math.imul(H, S7), T = T + Math.imul(h, k7) | 0, g = g + Math.imul(h, E7) | 0, g = g + Math.imul(N, k7) | 0, w = w + Math.imul(N, E7) | 0;
      var J7 = (S + T | 0) + ((g & 8191) << 13) | 0;
      S = (w + (g >>> 13) | 0) + (J7 >>> 26) | 0, J7 &= 67108863, T = Math.imul(X, T7), g = Math.imul(X, S7), g = g + Math.imul(i7, T7) | 0, w = Math.imul(i7, S7), T = T + Math.imul(t7, k7) | 0, g = g + Math.imul(t7, E7) | 0, g = g + Math.imul(H, k7) | 0, w = w + Math.imul(H, E7) | 0, T = T + Math.imul(h, H7) | 0, g = g + Math.imul(h, P7) | 0, g = g + Math.imul(N, H7) | 0, w = w + Math.imul(N, P7) | 0;
      var ee = (S + T | 0) + ((g & 8191) << 13) | 0;
      S = (w + (g >>> 13) | 0) + (ee >>> 26) | 0, ee &= 67108863, T = Math.imul(_, T7), g = Math.imul(_, S7), g = g + Math.imul(E, T7) | 0, w = Math.imul(E, S7), T = T + Math.imul(X, k7) | 0, g = g + Math.imul(X, E7) | 0, g = g + Math.imul(i7, k7) | 0, w = w + Math.imul(i7, E7) | 0, T = T + Math.imul(t7, H7) | 0, g = g + Math.imul(t7, P7) | 0, g = g + Math.imul(H, H7) | 0, w = w + Math.imul(H, P7) | 0, T = T + Math.imul(h, q7) | 0, g = g + Math.imul(h, N7) | 0, g = g + Math.imul(N, q7) | 0, w = w + Math.imul(N, N7) | 0;
      var We = (S + T | 0) + ((g & 8191) << 13) | 0;
      S = (w + (g >>> 13) | 0) + (We >>> 26) | 0, We &= 67108863, T = Math.imul(V, T7), g = Math.imul(V, S7), g = g + Math.imul(n7, T7) | 0, w = Math.imul(n7, S7), T = T + Math.imul(_, k7) | 0, g = g + Math.imul(_, E7) | 0, g = g + Math.imul(E, k7) | 0, w = w + Math.imul(E, E7) | 0, T = T + Math.imul(X, H7) | 0, g = g + Math.imul(X, P7) | 0, g = g + Math.imul(i7, H7) | 0, w = w + Math.imul(i7, P7) | 0, T = T + Math.imul(t7, q7) | 0, g = g + Math.imul(t7, N7) | 0, g = g + Math.imul(H, q7) | 0, w = w + Math.imul(H, N7) | 0, T = T + Math.imul(h, K7) | 0, g = g + Math.imul(h, R7) | 0, g = g + Math.imul(N, K7) | 0, w = w + Math.imul(N, R7) | 0;
      var Ze = (S + T | 0) + ((g & 8191) << 13) | 0;
      S = (w + (g >>> 13) | 0) + (Ze >>> 26) | 0, Ze &= 67108863, T = Math.imul(B, T7), g = Math.imul(B, S7), g = g + Math.imul(D, T7) | 0, w = Math.imul(D, S7), T = T + Math.imul(V, k7) | 0, g = g + Math.imul(V, E7) | 0, g = g + Math.imul(n7, k7) | 0, w = w + Math.imul(n7, E7) | 0, T = T + Math.imul(_, H7) | 0, g = g + Math.imul(_, P7) | 0, g = g + Math.imul(E, H7) | 0, w = w + Math.imul(E, P7) | 0, T = T + Math.imul(X, q7) | 0, g = g + Math.imul(X, N7) | 0, g = g + Math.imul(i7, q7) | 0, w = w + Math.imul(i7, N7) | 0, T = T + Math.imul(t7, K7) | 0, g = g + Math.imul(t7, R7) | 0, g = g + Math.imul(H, K7) | 0, w = w + Math.imul(H, R7) | 0, T = T + Math.imul(h, G7) | 0, g = g + Math.imul(h, M7) | 0, g = g + Math.imul(N, G7) | 0, w = w + Math.imul(N, M7) | 0;
      var Me = (S + T | 0) + ((g & 8191) << 13) | 0;
      S = (w + (g >>> 13) | 0) + (Me >>> 26) | 0, Me &= 67108863, T = Math.imul(e7, T7), g = Math.imul(e7, S7), g = g + Math.imul(o7, T7) | 0, w = Math.imul(o7, S7), T = T + Math.imul(B, k7) | 0, g = g + Math.imul(B, E7) | 0, g = g + Math.imul(D, k7) | 0, w = w + Math.imul(D, E7) | 0, T = T + Math.imul(V, H7) | 0, g = g + Math.imul(V, P7) | 0, g = g + Math.imul(n7, H7) | 0, w = w + Math.imul(n7, P7) | 0, T = T + Math.imul(_, q7) | 0, g = g + Math.imul(_, N7) | 0, g = g + Math.imul(E, q7) | 0, w = w + Math.imul(E, N7) | 0, T = T + Math.imul(X, K7) | 0, g = g + Math.imul(X, R7) | 0, g = g + Math.imul(i7, K7) | 0, w = w + Math.imul(i7, R7) | 0, T = T + Math.imul(t7, G7) | 0, g = g + Math.imul(t7, M7) | 0, g = g + Math.imul(H, G7) | 0, w = w + Math.imul(H, M7) | 0, T = T + Math.imul(h, V7) | 0, g = g + Math.imul(h, B7) | 0, g = g + Math.imul(N, V7) | 0, w = w + Math.imul(N, B7) | 0;
      var Ye = (S + T | 0) + ((g & 8191) << 13) | 0;
      S = (w + (g >>> 13) | 0) + (Ye >>> 26) | 0, Ye &= 67108863, T = Math.imul(s7, T7), g = Math.imul(s7, S7), g = g + Math.imul(u7, T7) | 0, w = Math.imul(u7, S7), T = T + Math.imul(e7, k7) | 0, g = g + Math.imul(e7, E7) | 0, g = g + Math.imul(o7, k7) | 0, w = w + Math.imul(o7, E7) | 0, T = T + Math.imul(B, H7) | 0, g = g + Math.imul(B, P7) | 0, g = g + Math.imul(D, H7) | 0, w = w + Math.imul(D, P7) | 0, T = T + Math.imul(V, q7) | 0, g = g + Math.imul(V, N7) | 0, g = g + Math.imul(n7, q7) | 0, w = w + Math.imul(n7, N7) | 0, T = T + Math.imul(_, K7) | 0, g = g + Math.imul(_, R7) | 0, g = g + Math.imul(E, K7) | 0, w = w + Math.imul(E, R7) | 0, T = T + Math.imul(X, G7) | 0, g = g + Math.imul(X, M7) | 0, g = g + Math.imul(i7, G7) | 0, w = w + Math.imul(i7, M7) | 0, T = T + Math.imul(t7, V7) | 0, g = g + Math.imul(t7, B7) | 0, g = g + Math.imul(H, V7) | 0, w = w + Math.imul(H, B7) | 0, T = T + Math.imul(h, z7) | 0, g = g + Math.imul(h, C7) | 0, g = g + Math.imul(N, z7) | 0, w = w + Math.imul(N, C7) | 0;
      var Xe = (S + T | 0) + ((g & 8191) << 13) | 0;
      S = (w + (g >>> 13) | 0) + (Xe >>> 26) | 0, Xe &= 67108863, T = Math.imul(p7, T7), g = Math.imul(p7, S7), g = g + Math.imul(l7, T7) | 0, w = Math.imul(l7, S7), T = T + Math.imul(s7, k7) | 0, g = g + Math.imul(s7, E7) | 0, g = g + Math.imul(u7, k7) | 0, w = w + Math.imul(u7, E7) | 0, T = T + Math.imul(e7, H7) | 0, g = g + Math.imul(e7, P7) | 0, g = g + Math.imul(o7, H7) | 0, w = w + Math.imul(o7, P7) | 0, T = T + Math.imul(B, q7) | 0, g = g + Math.imul(B, N7) | 0, g = g + Math.imul(D, q7) | 0, w = w + Math.imul(D, N7) | 0, T = T + Math.imul(V, K7) | 0, g = g + Math.imul(V, R7) | 0, g = g + Math.imul(n7, K7) | 0, w = w + Math.imul(n7, R7) | 0, T = T + Math.imul(_, G7) | 0, g = g + Math.imul(_, M7) | 0, g = g + Math.imul(E, G7) | 0, w = w + Math.imul(E, M7) | 0, T = T + Math.imul(X, V7) | 0, g = g + Math.imul(X, B7) | 0, g = g + Math.imul(i7, V7) | 0, w = w + Math.imul(i7, B7) | 0, T = T + Math.imul(t7, z7) | 0, g = g + Math.imul(t7, C7) | 0, g = g + Math.imul(H, z7) | 0, w = w + Math.imul(H, C7) | 0, T = T + Math.imul(h, W7) | 0, g = g + Math.imul(h, D7) | 0, g = g + Math.imul(N, W7) | 0, w = w + Math.imul(N, D7) | 0;
      var p0 = (S + T | 0) + ((g & 8191) << 13) | 0;
      S = (w + (g >>> 13) | 0) + (p0 >>> 26) | 0, p0 &= 67108863, T = Math.imul(x7, T7), g = Math.imul(x7, S7), g = g + Math.imul(_7, T7) | 0, w = Math.imul(_7, S7), T = T + Math.imul(p7, k7) | 0, g = g + Math.imul(p7, E7) | 0, g = g + Math.imul(l7, k7) | 0, w = w + Math.imul(l7, E7) | 0, T = T + Math.imul(s7, H7) | 0, g = g + Math.imul(s7, P7) | 0, g = g + Math.imul(u7, H7) | 0, w = w + Math.imul(u7, P7) | 0, T = T + Math.imul(e7, q7) | 0, g = g + Math.imul(e7, N7) | 0, g = g + Math.imul(o7, q7) | 0, w = w + Math.imul(o7, N7) | 0, T = T + Math.imul(B, K7) | 0, g = g + Math.imul(B, R7) | 0, g = g + Math.imul(D, K7) | 0, w = w + Math.imul(D, R7) | 0, T = T + Math.imul(V, G7) | 0, g = g + Math.imul(V, M7) | 0, g = g + Math.imul(n7, G7) | 0, w = w + Math.imul(n7, M7) | 0, T = T + Math.imul(_, V7) | 0, g = g + Math.imul(_, B7) | 0, g = g + Math.imul(E, V7) | 0, w = w + Math.imul(E, B7) | 0, T = T + Math.imul(X, z7) | 0, g = g + Math.imul(X, C7) | 0, g = g + Math.imul(i7, z7) | 0, w = w + Math.imul(i7, C7) | 0, T = T + Math.imul(t7, W7) | 0, g = g + Math.imul(t7, D7) | 0, g = g + Math.imul(H, W7) | 0, w = w + Math.imul(H, D7) | 0, T = T + Math.imul(h, Z7) | 0, g = g + Math.imul(h, L7) | 0, g = g + Math.imul(N, Z7) | 0, w = w + Math.imul(N, L7) | 0;
      var Je = (S + T | 0) + ((g & 8191) << 13) | 0;
      S = (w + (g >>> 13) | 0) + (Je >>> 26) | 0, Je &= 67108863, T = Math.imul(x7, k7), g = Math.imul(x7, E7), g = g + Math.imul(_7, k7) | 0, w = Math.imul(_7, E7), T = T + Math.imul(p7, H7) | 0, g = g + Math.imul(p7, P7) | 0, g = g + Math.imul(l7, H7) | 0, w = w + Math.imul(l7, P7) | 0, T = T + Math.imul(s7, q7) | 0, g = g + Math.imul(s7, N7) | 0, g = g + Math.imul(u7, q7) | 0, w = w + Math.imul(u7, N7) | 0, T = T + Math.imul(e7, K7) | 0, g = g + Math.imul(e7, R7) | 0, g = g + Math.imul(o7, K7) | 0, w = w + Math.imul(o7, R7) | 0, T = T + Math.imul(B, G7) | 0, g = g + Math.imul(B, M7) | 0, g = g + Math.imul(D, G7) | 0, w = w + Math.imul(D, M7) | 0, T = T + Math.imul(V, V7) | 0, g = g + Math.imul(V, B7) | 0, g = g + Math.imul(n7, V7) | 0, w = w + Math.imul(n7, B7) | 0, T = T + Math.imul(_, z7) | 0, g = g + Math.imul(_, C7) | 0, g = g + Math.imul(E, z7) | 0, w = w + Math.imul(E, C7) | 0, T = T + Math.imul(X, W7) | 0, g = g + Math.imul(X, D7) | 0, g = g + Math.imul(i7, W7) | 0, w = w + Math.imul(i7, D7) | 0, T = T + Math.imul(t7, Z7) | 0, g = g + Math.imul(t7, L7) | 0, g = g + Math.imul(H, Z7) | 0, w = w + Math.imul(H, L7) | 0;
      var h0 = (S + T | 0) + ((g & 8191) << 13) | 0;
      S = (w + (g >>> 13) | 0) + (h0 >>> 26) | 0, h0 &= 67108863, T = Math.imul(x7, H7), g = Math.imul(x7, P7), g = g + Math.imul(_7, H7) | 0, w = Math.imul(_7, P7), T = T + Math.imul(p7, q7) | 0, g = g + Math.imul(p7, N7) | 0, g = g + Math.imul(l7, q7) | 0, w = w + Math.imul(l7, N7) | 0, T = T + Math.imul(s7, K7) | 0, g = g + Math.imul(s7, R7) | 0, g = g + Math.imul(u7, K7) | 0, w = w + Math.imul(u7, R7) | 0, T = T + Math.imul(e7, G7) | 0, g = g + Math.imul(e7, M7) | 0, g = g + Math.imul(o7, G7) | 0, w = w + Math.imul(o7, M7) | 0, T = T + Math.imul(B, V7) | 0, g = g + Math.imul(B, B7) | 0, g = g + Math.imul(D, V7) | 0, w = w + Math.imul(D, B7) | 0, T = T + Math.imul(V, z7) | 0, g = g + Math.imul(V, C7) | 0, g = g + Math.imul(n7, z7) | 0, w = w + Math.imul(n7, C7) | 0, T = T + Math.imul(_, W7) | 0, g = g + Math.imul(_, D7) | 0, g = g + Math.imul(E, W7) | 0, w = w + Math.imul(E, D7) | 0, T = T + Math.imul(X, Z7) | 0, g = g + Math.imul(X, L7) | 0, g = g + Math.imul(i7, Z7) | 0, w = w + Math.imul(i7, L7) | 0;
      var b0 = (S + T | 0) + ((g & 8191) << 13) | 0;
      S = (w + (g >>> 13) | 0) + (b0 >>> 26) | 0, b0 &= 67108863, T = Math.imul(x7, q7), g = Math.imul(x7, N7), g = g + Math.imul(_7, q7) | 0, w = Math.imul(_7, N7), T = T + Math.imul(p7, K7) | 0, g = g + Math.imul(p7, R7) | 0, g = g + Math.imul(l7, K7) | 0, w = w + Math.imul(l7, R7) | 0, T = T + Math.imul(s7, G7) | 0, g = g + Math.imul(s7, M7) | 0, g = g + Math.imul(u7, G7) | 0, w = w + Math.imul(u7, M7) | 0, T = T + Math.imul(e7, V7) | 0, g = g + Math.imul(e7, B7) | 0, g = g + Math.imul(o7, V7) | 0, w = w + Math.imul(o7, B7) | 0, T = T + Math.imul(B, z7) | 0, g = g + Math.imul(B, C7) | 0, g = g + Math.imul(D, z7) | 0, w = w + Math.imul(D, C7) | 0, T = T + Math.imul(V, W7) | 0, g = g + Math.imul(V, D7) | 0, g = g + Math.imul(n7, W7) | 0, w = w + Math.imul(n7, D7) | 0, T = T + Math.imul(_, Z7) | 0, g = g + Math.imul(_, L7) | 0, g = g + Math.imul(E, Z7) | 0, w = w + Math.imul(E, L7) | 0;
      var Le = (S + T | 0) + ((g & 8191) << 13) | 0;
      S = (w + (g >>> 13) | 0) + (Le >>> 26) | 0, Le &= 67108863, T = Math.imul(x7, K7), g = Math.imul(x7, R7), g = g + Math.imul(_7, K7) | 0, w = Math.imul(_7, R7), T = T + Math.imul(p7, G7) | 0, g = g + Math.imul(p7, M7) | 0, g = g + Math.imul(l7, G7) | 0, w = w + Math.imul(l7, M7) | 0, T = T + Math.imul(s7, V7) | 0, g = g + Math.imul(s7, B7) | 0, g = g + Math.imul(u7, V7) | 0, w = w + Math.imul(u7, B7) | 0, T = T + Math.imul(e7, z7) | 0, g = g + Math.imul(e7, C7) | 0, g = g + Math.imul(o7, z7) | 0, w = w + Math.imul(o7, C7) | 0, T = T + Math.imul(B, W7) | 0, g = g + Math.imul(B, D7) | 0, g = g + Math.imul(D, W7) | 0, w = w + Math.imul(D, D7) | 0, T = T + Math.imul(V, Z7) | 0, g = g + Math.imul(V, L7) | 0, g = g + Math.imul(n7, Z7) | 0, w = w + Math.imul(n7, L7) | 0;
      var Ke = (S + T | 0) + ((g & 8191) << 13) | 0;
      S = (w + (g >>> 13) | 0) + (Ke >>> 26) | 0, Ke &= 67108863, T = Math.imul(x7, G7), g = Math.imul(x7, M7), g = g + Math.imul(_7, G7) | 0, w = Math.imul(_7, M7), T = T + Math.imul(p7, V7) | 0, g = g + Math.imul(p7, B7) | 0, g = g + Math.imul(l7, V7) | 0, w = w + Math.imul(l7, B7) | 0, T = T + Math.imul(s7, z7) | 0, g = g + Math.imul(s7, C7) | 0, g = g + Math.imul(u7, z7) | 0, w = w + Math.imul(u7, C7) | 0, T = T + Math.imul(e7, W7) | 0, g = g + Math.imul(e7, D7) | 0, g = g + Math.imul(o7, W7) | 0, w = w + Math.imul(o7, D7) | 0, T = T + Math.imul(B, Z7) | 0, g = g + Math.imul(B, L7) | 0, g = g + Math.imul(D, Z7) | 0, w = w + Math.imul(D, L7) | 0;
      var m0 = (S + T | 0) + ((g & 8191) << 13) | 0;
      S = (w + (g >>> 13) | 0) + (m0 >>> 26) | 0, m0 &= 67108863, T = Math.imul(x7, V7), g = Math.imul(x7, B7), g = g + Math.imul(_7, V7) | 0, w = Math.imul(_7, B7), T = T + Math.imul(p7, z7) | 0, g = g + Math.imul(p7, C7) | 0, g = g + Math.imul(l7, z7) | 0, w = w + Math.imul(l7, C7) | 0, T = T + Math.imul(s7, W7) | 0, g = g + Math.imul(s7, D7) | 0, g = g + Math.imul(u7, W7) | 0, w = w + Math.imul(u7, D7) | 0, T = T + Math.imul(e7, Z7) | 0, g = g + Math.imul(e7, L7) | 0, g = g + Math.imul(o7, Z7) | 0, w = w + Math.imul(o7, L7) | 0;
      var Qe = (S + T | 0) + ((g & 8191) << 13) | 0;
      S = (w + (g >>> 13) | 0) + (Qe >>> 26) | 0, Qe &= 67108863, T = Math.imul(x7, z7), g = Math.imul(x7, C7), g = g + Math.imul(_7, z7) | 0, w = Math.imul(_7, C7), T = T + Math.imul(p7, W7) | 0, g = g + Math.imul(p7, D7) | 0, g = g + Math.imul(l7, W7) | 0, w = w + Math.imul(l7, D7) | 0, T = T + Math.imul(s7, Z7) | 0, g = g + Math.imul(s7, L7) | 0, g = g + Math.imul(u7, Z7) | 0, w = w + Math.imul(u7, L7) | 0;
      var v0 = (S + T | 0) + ((g & 8191) << 13) | 0;
      S = (w + (g >>> 13) | 0) + (v0 >>> 26) | 0, v0 &= 67108863, T = Math.imul(x7, W7), g = Math.imul(x7, D7), g = g + Math.imul(_7, W7) | 0, w = Math.imul(_7, D7), T = T + Math.imul(p7, Z7) | 0, g = g + Math.imul(p7, L7) | 0, g = g + Math.imul(l7, Z7) | 0, w = w + Math.imul(l7, L7) | 0;
      var y0 = (S + T | 0) + ((g & 8191) << 13) | 0;
      S = (w + (g >>> 13) | 0) + (y0 >>> 26) | 0, y0 &= 67108863, T = Math.imul(x7, Z7), g = Math.imul(x7, L7), g = g + Math.imul(_7, Z7) | 0, w = Math.imul(_7, L7);
      var g0 = (S + T | 0) + ((g & 8191) << 13) | 0;
      return S = (w + (g >>> 13) | 0) + (g0 >>> 26) | 0, g0 &= 67108863, y[0] = ve, y[1] = J7, y[2] = ee, y[3] = We, y[4] = Ze, y[5] = Me, y[6] = Ye, y[7] = Xe, y[8] = p0, y[9] = Je, y[10] = h0, y[11] = b0, y[12] = Le, y[13] = Ke, y[14] = m0, y[15] = Qe, y[16] = v0, y[17] = y0, y[18] = g0, S !== 0 && (y[19] = S, p.length++), p;
    };
    Math.imul || (I = x);
    function k(G, O, u) {
      u.negative = O.negative ^ G.negative, u.length = G.length + O.length;
      for (var p = 0, d = 0, c = 0; c < u.length - 1; c++) {
        var y = d;
        d = 0;
        for (var S = p & 67108863, T = Math.min(c, O.length - 1), g = Math.max(0, c - G.length + 1); g <= T; g++) {
          var w = c - g, A = G.words[w] | 0, h = O.words[g] | 0, N = A * h, Y = N & 67108863;
          y = y + (N / 67108864 | 0) | 0, Y = Y + S | 0, S = Y & 67108863, y = y + (Y >>> 26) | 0, d += y >>> 26, y &= 67108863;
        }
        u.words[c] = S, p = y, y = d;
      }
      return p !== 0 ? u.words[c] = p : u.length--, u.strip();
    }
    function P(G, O, u) {
      var p = new M();
      return p.mulp(G, O, u);
    }
    i.prototype.mulTo = function(O, u) {
      var p, d = this.length + O.length;
      return this.length === 10 && O.length === 10 ? p = I(this, O, u) : d < 63 ? p = x(this, O, u) : d < 1024 ? p = k(this, O, u) : p = P(this, O, u), p;
    };
    function M(G, O) {
      this.x = G, this.y = O;
    }
    M.prototype.makeRBT = function(O) {
      for (var u = new Array(O), p = i.prototype._countBits(O) - 1, d = 0; d < O; d++)
        u[d] = this.revBin(d, p, O);
      return u;
    }, M.prototype.revBin = function(O, u, p) {
      if (O === 0 || O === p - 1)
        return O;
      for (var d = 0, c = 0; c < u; c++)
        d |= (O & 1) << u - c - 1, O >>= 1;
      return d;
    }, M.prototype.permute = function(O, u, p, d, c, y) {
      for (var S = 0; S < y; S++)
        d[S] = u[O[S]], c[S] = p[O[S]];
    }, M.prototype.transform = function(O, u, p, d, c, y) {
      this.permute(y, O, u, p, d, c);
      for (var S = 1; S < c; S <<= 1)
        for (var T = S << 1, g = Math.cos(2 * Math.PI / T), w = Math.sin(2 * Math.PI / T), A = 0; A < c; A += T)
          for (var h = g, N = w, Y = 0; Y < S; Y++) {
            var t7 = p[A + Y], H = d[A + Y], $ = p[A + Y + S], X = d[A + Y + S], i7 = h * $ - N * X;
            X = h * X + N * $, $ = i7, p[A + Y] = t7 + $, d[A + Y] = H + X, p[A + Y + S] = t7 - $, d[A + Y + S] = H - X, Y !== T && (i7 = g * h - w * N, N = g * N + w * h, h = i7);
          }
    }, M.prototype.guessLen13b = function(O, u) {
      var p = Math.max(u, O) | 1, d = p & 1, c = 0;
      for (p = p / 2 | 0; p; p = p >>> 1)
        c++;
      return 1 << c + 1 + d;
    }, M.prototype.conjugate = function(O, u, p) {
      if (!(p <= 1))
        for (var d = 0; d < p / 2; d++) {
          var c = O[d];
          O[d] = O[p - d - 1], O[p - d - 1] = c, c = u[d], u[d] = -u[p - d - 1], u[p - d - 1] = -c;
        }
    }, M.prototype.normalize13b = function(O, u) {
      for (var p = 0, d = 0; d < u / 2; d++) {
        var c = Math.round(O[2 * d + 1] / u) * 8192 + Math.round(O[2 * d] / u) + p;
        O[d] = c & 67108863, c < 67108864 ? p = 0 : p = c / 67108864 | 0;
      }
      return O;
    }, M.prototype.convert13b = function(O, u, p, d) {
      for (var c = 0, y = 0; y < u; y++)
        c = c + (O[y] | 0), p[2 * y] = c & 8191, c = c >>> 13, p[2 * y + 1] = c & 8191, c = c >>> 13;
      for (y = 2 * u; y < d; ++y)
        p[y] = 0;
      r(c === 0), r((c & -8192) === 0);
    }, M.prototype.stub = function(O) {
      for (var u = new Array(O), p = 0; p < O; p++)
        u[p] = 0;
      return u;
    }, M.prototype.mulp = function(O, u, p) {
      var d = 2 * this.guessLen13b(O.length, u.length), c = this.makeRBT(d), y = this.stub(d), S = new Array(d), T = new Array(d), g = new Array(d), w = new Array(d), A = new Array(d), h = new Array(d), N = p.words;
      N.length = d, this.convert13b(O.words, O.length, S, d), this.convert13b(u.words, u.length, w, d), this.transform(S, y, T, g, d, c), this.transform(w, y, A, h, d, c);
      for (var Y = 0; Y < d; Y++) {
        var t7 = T[Y] * A[Y] - g[Y] * h[Y];
        g[Y] = T[Y] * h[Y] + g[Y] * A[Y], T[Y] = t7;
      }
      return this.conjugate(T, g, d), this.transform(T, g, N, y, d, c), this.conjugate(N, y, d), this.normalize13b(N, d), p.negative = O.negative ^ u.negative, p.length = O.length + u.length, p.strip();
    }, i.prototype.mul = function(O) {
      var u = new i(null);
      return u.words = new Array(this.length + O.length), this.mulTo(O, u);
    }, i.prototype.mulf = function(O) {
      var u = new i(null);
      return u.words = new Array(this.length + O.length), P(this, O, u);
    }, i.prototype.imul = function(O) {
      return this.clone().mulTo(O, this);
    }, i.prototype.imuln = function(O) {
      r(typeof O == "number"), r(O < 67108864);
      for (var u = 0, p = 0; p < this.length; p++) {
        var d = (this.words[p] | 0) * O, c = (d & 67108863) + (u & 67108863);
        u >>= 26, u += d / 67108864 | 0, u += c >>> 26, this.words[p] = c & 67108863;
      }
      return u !== 0 && (this.words[p] = u, this.length++), this;
    }, i.prototype.muln = function(O) {
      return this.clone().imuln(O);
    }, i.prototype.sqr = function() {
      return this.mul(this);
    }, i.prototype.isqr = function() {
      return this.imul(this.clone());
    }, i.prototype.pow = function(O) {
      var u = m(O);
      if (u.length === 0)
        return new i(1);
      for (var p = this, d = 0; d < u.length && u[d] === 0; d++, p = p.sqr())
        ;
      if (++d < u.length)
        for (var c = p.sqr(); d < u.length; d++, c = c.sqr())
          u[d] !== 0 && (p = p.mul(c));
      return p;
    }, i.prototype.iushln = function(O) {
      r(typeof O == "number" && O >= 0);
      var u = O % 26, p = (O - u) / 26, d = 67108863 >>> 26 - u << 26 - u, c;
      if (u !== 0) {
        var y = 0;
        for (c = 0; c < this.length; c++) {
          var S = this.words[c] & d, T = (this.words[c] | 0) - S << u;
          this.words[c] = T | y, y = S >>> 26 - u;
        }
        y && (this.words[c] = y, this.length++);
      }
      if (p !== 0) {
        for (c = this.length - 1; c >= 0; c--)
          this.words[c + p] = this.words[c];
        for (c = 0; c < p; c++)
          this.words[c] = 0;
        this.length += p;
      }
      return this.strip();
    }, i.prototype.ishln = function(O) {
      return r(this.negative === 0), this.iushln(O);
    }, i.prototype.iushrn = function(O, u, p) {
      r(typeof O == "number" && O >= 0);
      var d;
      u ? d = (u - u % 26) / 26 : d = 0;
      var c = O % 26, y = Math.min((O - c) / 26, this.length), S = 67108863 ^ 67108863 >>> c << c, T = p;
      if (d -= y, d = Math.max(0, d), T) {
        for (var g = 0; g < y; g++)
          T.words[g] = this.words[g];
        T.length = y;
      }
      if (y !== 0)
        if (this.length > y)
          for (this.length -= y, g = 0; g < this.length; g++)
            this.words[g] = this.words[g + y];
        else
          this.words[0] = 0, this.length = 1;
      var w = 0;
      for (g = this.length - 1; g >= 0 && (w !== 0 || g >= d); g--) {
        var A = this.words[g] | 0;
        this.words[g] = w << 26 - c | A >>> c, w = A & S;
      }
      return T && w !== 0 && (T.words[T.length++] = w), this.length === 0 && (this.words[0] = 0, this.length = 1), this.strip();
    }, i.prototype.ishrn = function(O, u, p) {
      return r(this.negative === 0), this.iushrn(O, u, p);
    }, i.prototype.shln = function(O) {
      return this.clone().ishln(O);
    }, i.prototype.ushln = function(O) {
      return this.clone().iushln(O);
    }, i.prototype.shrn = function(O) {
      return this.clone().ishrn(O);
    }, i.prototype.ushrn = function(O) {
      return this.clone().iushrn(O);
    }, i.prototype.testn = function(O) {
      r(typeof O == "number" && O >= 0);
      var u = O % 26, p = (O - u) / 26, d = 1 << u;
      if (this.length <= p)
        return !1;
      var c = this.words[p];
      return !!(c & d);
    }, i.prototype.imaskn = function(O) {
      r(typeof O == "number" && O >= 0);
      var u = O % 26, p = (O - u) / 26;
      if (r(this.negative === 0, "imaskn works only with positive numbers"), this.length <= p)
        return this;
      if (u !== 0 && p++, this.length = Math.min(p, this.length), u !== 0) {
        var d = 67108863 ^ 67108863 >>> u << u;
        this.words[this.length - 1] &= d;
      }
      return this.strip();
    }, i.prototype.maskn = function(O) {
      return this.clone().imaskn(O);
    }, i.prototype.iaddn = function(O) {
      return r(typeof O == "number"), r(O < 67108864), O < 0 ? this.isubn(-O) : this.negative !== 0 ? this.length === 1 && (this.words[0] | 0) < O ? (this.words[0] = O - (this.words[0] | 0), this.negative = 0, this) : (this.negative = 0, this.isubn(O), this.negative = 1, this) : this._iaddn(O);
    }, i.prototype._iaddn = function(O) {
      this.words[0] += O;
      for (var u = 0; u < this.length && this.words[u] >= 67108864; u++)
        this.words[u] -= 67108864, u === this.length - 1 ? this.words[u + 1] = 1 : this.words[u + 1]++;
      return this.length = Math.max(this.length, u + 1), this;
    }, i.prototype.isubn = function(O) {
      if (r(typeof O == "number"), r(O < 67108864), O < 0)
        return this.iaddn(-O);
      if (this.negative !== 0)
        return this.negative = 0, this.iaddn(O), this.negative = 1, this;
      if (this.words[0] -= O, this.length === 1 && this.words[0] < 0)
        this.words[0] = -this.words[0], this.negative = 1;
      else
        for (var u = 0; u < this.length && this.words[u] < 0; u++)
          this.words[u] += 67108864, this.words[u + 1] -= 1;
      return this.strip();
    }, i.prototype.addn = function(O) {
      return this.clone().iaddn(O);
    }, i.prototype.subn = function(O) {
      return this.clone().isubn(O);
    }, i.prototype.iabs = function() {
      return this.negative = 0, this;
    }, i.prototype.abs = function() {
      return this.clone().iabs();
    }, i.prototype._ishlnsubmul = function(O, u, p) {
      var d = O.length + p, c;
      this._expand(d);
      var y, S = 0;
      for (c = 0; c < O.length; c++) {
        y = (this.words[c + p] | 0) + S;
        var T = (O.words[c] | 0) * u;
        y -= T & 67108863, S = (y >> 26) - (T / 67108864 | 0), this.words[c + p] = y & 67108863;
      }
      for (; c < this.length - p; c++)
        y = (this.words[c + p] | 0) + S, S = y >> 26, this.words[c + p] = y & 67108863;
      if (S === 0)
        return this.strip();
      for (r(S === -1), S = 0, c = 0; c < this.length; c++)
        y = -(this.words[c] | 0) + S, S = y >> 26, this.words[c] = y & 67108863;
      return this.negative = 1, this.strip();
    }, i.prototype._wordDiv = function(O, u) {
      var p = this.length - O.length, d = this.clone(), c = O, y = c.words[c.length - 1] | 0, S = this._countBits(y);
      p = 26 - S, p !== 0 && (c = c.ushln(p), d.iushln(p), y = c.words[c.length - 1] | 0);
      var T = d.length - c.length, g;
      if (u !== "mod") {
        g = new i(null), g.length = T + 1, g.words = new Array(g.length);
        for (var w = 0; w < g.length; w++)
          g.words[w] = 0;
      }
      var A = d.clone()._ishlnsubmul(c, 1, T);
      A.negative === 0 && (d = A, g && (g.words[T] = 1));
      for (var h = T - 1; h >= 0; h--) {
        var N = (d.words[c.length + h] | 0) * 67108864 + (d.words[c.length + h - 1] | 0);
        for (N = Math.min(N / y | 0, 67108863), d._ishlnsubmul(c, N, h); d.negative !== 0; )
          N--, d.negative = 0, d._ishlnsubmul(c, 1, h), d.isZero() || (d.negative ^= 1);
        g && (g.words[h] = N);
      }
      return g && g.strip(), d.strip(), u !== "div" && p !== 0 && d.iushrn(p), {
        div: g || null,
        mod: d
      };
    }, i.prototype.divmod = function(O, u, p) {
      if (r(!O.isZero()), this.isZero())
        return {
          div: new i(0),
          mod: new i(0)
        };
      var d, c, y;
      return this.negative !== 0 && O.negative === 0 ? (y = this.neg().divmod(O, u), u !== "mod" && (d = y.div.neg()), u !== "div" && (c = y.mod.neg(), p && c.negative !== 0 && c.iadd(O)), {
        div: d,
        mod: c
      }) : this.negative === 0 && O.negative !== 0 ? (y = this.divmod(O.neg(), u), u !== "mod" && (d = y.div.neg()), {
        div: d,
        mod: y.mod
      }) : this.negative & O.negative ? (y = this.neg().divmod(O.neg(), u), u !== "div" && (c = y.mod.neg(), p && c.negative !== 0 && c.isub(O)), {
        div: y.div,
        mod: c
      }) : O.length > this.length || this.cmp(O) < 0 ? {
        div: new i(0),
        mod: this
      } : O.length === 1 ? u === "div" ? {
        div: this.divn(O.words[0]),
        mod: null
      } : u === "mod" ? {
        div: null,
        mod: new i(this.modn(O.words[0]))
      } : {
        div: this.divn(O.words[0]),
        mod: new i(this.modn(O.words[0]))
      } : this._wordDiv(O, u);
    }, i.prototype.div = function(O) {
      return this.divmod(O, "div", !1).div;
    }, i.prototype.mod = function(O) {
      return this.divmod(O, "mod", !1).mod;
    }, i.prototype.umod = function(O) {
      return this.divmod(O, "mod", !0).mod;
    }, i.prototype.divRound = function(O) {
      var u = this.divmod(O);
      if (u.mod.isZero())
        return u.div;
      var p = u.div.negative !== 0 ? u.mod.isub(O) : u.mod, d = O.ushrn(1), c = O.andln(1), y = p.cmp(d);
      return y < 0 || c === 1 && y === 0 ? u.div : u.div.negative !== 0 ? u.div.isubn(1) : u.div.iaddn(1);
    }, i.prototype.modn = function(O) {
      r(O <= 67108863);
      for (var u = (1 << 26) % O, p = 0, d = this.length - 1; d >= 0; d--)
        p = (u * p + (this.words[d] | 0)) % O;
      return p;
    }, i.prototype.idivn = function(O) {
      r(O <= 67108863);
      for (var u = 0, p = this.length - 1; p >= 0; p--) {
        var d = (this.words[p] | 0) + u * 67108864;
        this.words[p] = d / O | 0, u = d % O;
      }
      return this.strip();
    }, i.prototype.divn = function(O) {
      return this.clone().idivn(O);
    }, i.prototype.egcd = function(O) {
      r(O.negative === 0), r(!O.isZero());
      var u = this, p = O.clone();
      u.negative !== 0 ? u = u.umod(O) : u = u.clone();
      for (var d = new i(1), c = new i(0), y = new i(0), S = new i(1), T = 0; u.isEven() && p.isEven(); )
        u.iushrn(1), p.iushrn(1), ++T;
      for (var g = p.clone(), w = u.clone(); !u.isZero(); ) {
        for (var A = 0, h = 1; !(u.words[0] & h) && A < 26; ++A, h <<= 1)
          ;
        if (A > 0)
          for (u.iushrn(A); A-- > 0; )
            (d.isOdd() || c.isOdd()) && (d.iadd(g), c.isub(w)), d.iushrn(1), c.iushrn(1);
        for (var N = 0, Y = 1; !(p.words[0] & Y) && N < 26; ++N, Y <<= 1)
          ;
        if (N > 0)
          for (p.iushrn(N); N-- > 0; )
            (y.isOdd() || S.isOdd()) && (y.iadd(g), S.isub(w)), y.iushrn(1), S.iushrn(1);
        u.cmp(p) >= 0 ? (u.isub(p), d.isub(y), c.isub(S)) : (p.isub(u), y.isub(d), S.isub(c));
      }
      return {
        a: y,
        b: S,
        gcd: p.iushln(T)
      };
    }, i.prototype._invmp = function(O) {
      r(O.negative === 0), r(!O.isZero());
      var u = this, p = O.clone();
      u.negative !== 0 ? u = u.umod(O) : u = u.clone();
      for (var d = new i(1), c = new i(0), y = p.clone(); u.cmpn(1) > 0 && p.cmpn(1) > 0; ) {
        for (var S = 0, T = 1; !(u.words[0] & T) && S < 26; ++S, T <<= 1)
          ;
        if (S > 0)
          for (u.iushrn(S); S-- > 0; )
            d.isOdd() && d.iadd(y), d.iushrn(1);
        for (var g = 0, w = 1; !(p.words[0] & w) && g < 26; ++g, w <<= 1)
          ;
        if (g > 0)
          for (p.iushrn(g); g-- > 0; )
            c.isOdd() && c.iadd(y), c.iushrn(1);
        u.cmp(p) >= 0 ? (u.isub(p), d.isub(c)) : (p.isub(u), c.isub(d));
      }
      var A;
      return u.cmpn(1) === 0 ? A = d : A = c, A.cmpn(0) < 0 && A.iadd(O), A;
    }, i.prototype.gcd = function(O) {
      if (this.isZero())
        return O.abs();
      if (O.isZero())
        return this.abs();
      var u = this.clone(), p = O.clone();
      u.negative = 0, p.negative = 0;
      for (var d = 0; u.isEven() && p.isEven(); d++)
        u.iushrn(1), p.iushrn(1);
      do {
        for (; u.isEven(); )
          u.iushrn(1);
        for (; p.isEven(); )
          p.iushrn(1);
        var c = u.cmp(p);
        if (c < 0) {
          var y = u;
          u = p, p = y;
        } else if (c === 0 || p.cmpn(1) === 0)
          break;
        u.isub(p);
      } while (!0);
      return p.iushln(d);
    }, i.prototype.invm = function(O) {
      return this.egcd(O).a.umod(O);
    }, i.prototype.isEven = function() {
      return (this.words[0] & 1) === 0;
    }, i.prototype.isOdd = function() {
      return (this.words[0] & 1) === 1;
    }, i.prototype.andln = function(O) {
      return this.words[0] & O;
    }, i.prototype.bincn = function(O) {
      r(typeof O == "number");
      var u = O % 26, p = (O - u) / 26, d = 1 << u;
      if (this.length <= p)
        return this._expand(p + 1), this.words[p] |= d, this;
      for (var c = d, y = p; c !== 0 && y < this.length; y++) {
        var S = this.words[y] | 0;
        S += c, c = S >>> 26, S &= 67108863, this.words[y] = S;
      }
      return c !== 0 && (this.words[y] = c, this.length++), this;
    }, i.prototype.isZero = function() {
      return this.length === 1 && this.words[0] === 0;
    }, i.prototype.cmpn = function(O) {
      var u = O < 0;
      if (this.negative !== 0 && !u)
        return -1;
      if (this.negative === 0 && u)
        return 1;
      this.strip();
      var p;
      if (this.length > 1)
        p = 1;
      else {
        u && (O = -O), r(O <= 67108863, "Number is too big");
        var d = this.words[0] | 0;
        p = d === O ? 0 : d < O ? -1 : 1;
      }
      return this.negative !== 0 ? -p | 0 : p;
    }, i.prototype.cmp = function(O) {
      if (this.negative !== 0 && O.negative === 0)
        return -1;
      if (this.negative === 0 && O.negative !== 0)
        return 1;
      var u = this.ucmp(O);
      return this.negative !== 0 ? -u | 0 : u;
    }, i.prototype.ucmp = function(O) {
      if (this.length > O.length)
        return 1;
      if (this.length < O.length)
        return -1;
      for (var u = 0, p = this.length - 1; p >= 0; p--) {
        var d = this.words[p] | 0, c = O.words[p] | 0;
        if (d !== c) {
          d < c ? u = -1 : d > c && (u = 1);
          break;
        }
      }
      return u;
    }, i.prototype.gtn = function(O) {
      return this.cmpn(O) === 1;
    }, i.prototype.gt = function(O) {
      return this.cmp(O) === 1;
    }, i.prototype.gten = function(O) {
      return this.cmpn(O) >= 0;
    }, i.prototype.gte = function(O) {
      return this.cmp(O) >= 0;
    }, i.prototype.ltn = function(O) {
      return this.cmpn(O) === -1;
    }, i.prototype.lt = function(O) {
      return this.cmp(O) === -1;
    }, i.prototype.lten = function(O) {
      return this.cmpn(O) <= 0;
    }, i.prototype.lte = function(O) {
      return this.cmp(O) <= 0;
    }, i.prototype.eqn = function(O) {
      return this.cmpn(O) === 0;
    }, i.prototype.eq = function(O) {
      return this.cmp(O) === 0;
    }, i.red = function(O) {
      return new Z(O);
    }, i.prototype.toRed = function(O) {
      return r(!this.red, "Already a number in reduction context"), r(this.negative === 0, "red works only with positives"), O.convertTo(this)._forceRed(O);
    }, i.prototype.fromRed = function() {
      return r(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
    }, i.prototype._forceRed = function(O) {
      return this.red = O, this;
    }, i.prototype.forceRed = function(O) {
      return r(!this.red, "Already a number in reduction context"), this._forceRed(O);
    }, i.prototype.redAdd = function(O) {
      return r(this.red, "redAdd works only with red numbers"), this.red.add(this, O);
    }, i.prototype.redIAdd = function(O) {
      return r(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, O);
    }, i.prototype.redSub = function(O) {
      return r(this.red, "redSub works only with red numbers"), this.red.sub(this, O);
    }, i.prototype.redISub = function(O) {
      return r(this.red, "redISub works only with red numbers"), this.red.isub(this, O);
    }, i.prototype.redShl = function(O) {
      return r(this.red, "redShl works only with red numbers"), this.red.shl(this, O);
    }, i.prototype.redMul = function(O) {
      return r(this.red, "redMul works only with red numbers"), this.red._verify2(this, O), this.red.mul(this, O);
    }, i.prototype.redIMul = function(O) {
      return r(this.red, "redMul works only with red numbers"), this.red._verify2(this, O), this.red.imul(this, O);
    }, i.prototype.redSqr = function() {
      return r(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
    }, i.prototype.redISqr = function() {
      return r(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
    }, i.prototype.redSqrt = function() {
      return r(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
    }, i.prototype.redInvm = function() {
      return r(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
    }, i.prototype.redNeg = function() {
      return r(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
    }, i.prototype.redPow = function(O) {
      return r(this.red && !O.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, O);
    };
    var R = {
      k256: null,
      p224: null,
      p192: null,
      p25519: null
    };
    function F(G, O) {
      this.name = G, this.p = new i(O, 16), this.n = this.p.bitLength(), this.k = new i(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
    }
    F.prototype._tmp = function() {
      var O = new i(null);
      return O.words = new Array(Math.ceil(this.n / 13)), O;
    }, F.prototype.ireduce = function(O) {
      var u = O, p;
      do
        this.split(u, this.tmp), u = this.imulK(u), u = u.iadd(this.tmp), p = u.bitLength();
      while (p > this.n);
      var d = p < this.n ? -1 : u.ucmp(this.p);
      return d === 0 ? (u.words[0] = 0, u.length = 1) : d > 0 ? u.isub(this.p) : u.strip !== void 0 ? u.strip() : u._strip(), u;
    }, F.prototype.split = function(O, u) {
      O.iushrn(this.n, 0, u);
    }, F.prototype.imulK = function(O) {
      return O.imul(this.k);
    };
    function C() {
      F.call(
        this,
        "k256",
        "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f"
      );
    }
    f(C, F), C.prototype.split = function(O, u) {
      for (var p = 4194303, d = Math.min(O.length, 9), c = 0; c < d; c++)
        u.words[c] = O.words[c];
      if (u.length = d, O.length <= 9) {
        O.words[0] = 0, O.length = 1;
        return;
      }
      var y = O.words[9];
      for (u.words[u.length++] = y & p, c = 10; c < O.length; c++) {
        var S = O.words[c] | 0;
        O.words[c - 10] = (S & p) << 4 | y >>> 22, y = S;
      }
      y >>>= 22, O.words[c - 10] = y, y === 0 && O.length > 10 ? O.length -= 10 : O.length -= 9;
    }, C.prototype.imulK = function(O) {
      O.words[O.length] = 0, O.words[O.length + 1] = 0, O.length += 2;
      for (var u = 0, p = 0; p < O.length; p++) {
        var d = O.words[p] | 0;
        u += d * 977, O.words[p] = u & 67108863, u = d * 64 + (u / 67108864 | 0);
      }
      return O.words[O.length - 1] === 0 && (O.length--, O.words[O.length - 1] === 0 && O.length--), O;
    };
    function L() {
      F.call(
        this,
        "p224",
        "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001"
      );
    }
    f(L, F);
    function U() {
      F.call(
        this,
        "p192",
        "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff"
      );
    }
    f(U, F);
    function q() {
      F.call(
        this,
        "25519",
        "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed"
      );
    }
    f(q, F), q.prototype.imulK = function(O) {
      for (var u = 0, p = 0; p < O.length; p++) {
        var d = (O.words[p] | 0) * 19 + u, c = d & 67108863;
        d >>>= 26, O.words[p] = c, u = d;
      }
      return u !== 0 && (O.words[O.length++] = u), O;
    }, i._prime = function(O) {
      if (R[O])
        return R[O];
      var u;
      if (O === "k256")
        u = new C();
      else if (O === "p224")
        u = new L();
      else if (O === "p192")
        u = new U();
      else if (O === "p25519")
        u = new q();
      else
        throw new Error("Unknown prime " + O);
      return R[O] = u, u;
    };
    function Z(G) {
      if (typeof G == "string") {
        var O = i._prime(G);
        this.m = O.p, this.prime = O;
      } else
        r(G.gtn(1), "modulus must be greater than 1"), this.m = G, this.prime = null;
    }
    Z.prototype._verify1 = function(O) {
      r(O.negative === 0, "red works only with positives"), r(O.red, "red works only with red numbers");
    }, Z.prototype._verify2 = function(O, u) {
      r((O.negative | u.negative) === 0, "red works only with positives"), r(
        O.red && O.red === u.red,
        "red works only with red numbers"
      );
    }, Z.prototype.imod = function(O) {
      return this.prime ? this.prime.ireduce(O)._forceRed(this) : O.umod(this.m)._forceRed(this);
    }, Z.prototype.neg = function(O) {
      return O.isZero() ? O.clone() : this.m.sub(O)._forceRed(this);
    }, Z.prototype.add = function(O, u) {
      this._verify2(O, u);
      var p = O.add(u);
      return p.cmp(this.m) >= 0 && p.isub(this.m), p._forceRed(this);
    }, Z.prototype.iadd = function(O, u) {
      this._verify2(O, u);
      var p = O.iadd(u);
      return p.cmp(this.m) >= 0 && p.isub(this.m), p;
    }, Z.prototype.sub = function(O, u) {
      this._verify2(O, u);
      var p = O.sub(u);
      return p.cmpn(0) < 0 && p.iadd(this.m), p._forceRed(this);
    }, Z.prototype.isub = function(O, u) {
      this._verify2(O, u);
      var p = O.isub(u);
      return p.cmpn(0) < 0 && p.iadd(this.m), p;
    }, Z.prototype.shl = function(O, u) {
      return this._verify1(O), this.imod(O.ushln(u));
    }, Z.prototype.imul = function(O, u) {
      return this._verify2(O, u), this.imod(O.imul(u));
    }, Z.prototype.mul = function(O, u) {
      return this._verify2(O, u), this.imod(O.mul(u));
    }, Z.prototype.isqr = function(O) {
      return this.imul(O, O.clone());
    }, Z.prototype.sqr = function(O) {
      return this.mul(O, O);
    }, Z.prototype.sqrt = function(O) {
      if (O.isZero())
        return O.clone();
      var u = this.m.andln(3);
      if (r(u % 2 === 1), u === 3) {
        var p = this.m.add(new i(1)).iushrn(2);
        return this.pow(O, p);
      }
      for (var d = this.m.subn(1), c = 0; !d.isZero() && d.andln(1) === 0; )
        c++, d.iushrn(1);
      r(!d.isZero());
      var y = new i(1).toRed(this), S = y.redNeg(), T = this.m.subn(1).iushrn(1), g = this.m.bitLength();
      for (g = new i(2 * g * g).toRed(this); this.pow(g, T).cmp(S) !== 0; )
        g.redIAdd(S);
      for (var w = this.pow(g, d), A = this.pow(O, d.addn(1).iushrn(1)), h = this.pow(O, d), N = c; h.cmp(y) !== 0; ) {
        for (var Y = h, t7 = 0; Y.cmp(y) !== 0; t7++)
          Y = Y.redSqr();
        r(t7 < N);
        var H = this.pow(w, new i(1).iushln(N - t7 - 1));
        A = A.redMul(H), w = H.redSqr(), h = h.redMul(w), N = t7;
      }
      return A;
    }, Z.prototype.invm = function(O) {
      var u = O._invmp(this.m);
      return u.negative !== 0 ? (u.negative = 0, this.imod(u).redNeg()) : this.imod(u);
    }, Z.prototype.pow = function(O, u) {
      if (u.isZero())
        return new i(1).toRed(this);
      if (u.cmpn(1) === 0)
        return O.clone();
      var p = 4, d = new Array(1 << p);
      d[0] = new i(1).toRed(this), d[1] = O;
      for (var c = 2; c < d.length; c++)
        d[c] = this.mul(d[c - 1], O);
      var y = d[0], S = 0, T = 0, g = u.bitLength() % 26;
      for (g === 0 && (g = 26), c = u.length - 1; c >= 0; c--) {
        for (var w = u.words[c], A = g - 1; A >= 0; A--) {
          var h = w >> A & 1;
          if (y !== d[0] && (y = this.sqr(y)), h === 0 && S === 0) {
            T = 0;
            continue;
          }
          S <<= 1, S |= h, T++, !(T !== p && (c !== 0 || A !== 0)) && (y = this.mul(y, d[S]), T = 0, S = 0);
        }
        g = 26;
      }
      return y;
    }, Z.prototype.convertTo = function(O) {
      var u = O.umod(this.m);
      return u === O ? u.clone() : u;
    }, Z.prototype.convertFrom = function(O) {
      var u = O.clone();
      return u.red = null, u;
    }, i.mont = function(O) {
      return new z(O);
    };
    function z(G) {
      Z.call(this, G), this.shift = this.m.bitLength(), this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26), this.r = new i(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
    }
    f(z, Z), z.prototype.convertTo = function(O) {
      return this.imod(O.ushln(this.shift));
    }, z.prototype.convertFrom = function(O) {
      var u = this.imod(O.mul(this.rinv));
      return u.red = null, u;
    }, z.prototype.imul = function(O, u) {
      if (O.isZero() || u.isZero())
        return O.words[0] = 0, O.length = 1, O;
      var p = O.imul(u), d = p.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), c = p.isub(d).iushrn(this.shift), y = c;
      return c.cmp(this.m) >= 0 ? y = c.isub(this.m) : c.cmpn(0) < 0 && (y = c.iadd(this.m)), y._forceRed(this);
    }, z.prototype.mul = function(O, u) {
      if (O.isZero() || u.isZero())
        return new i(0)._forceRed(this);
      var p = O.mul(u), d = p.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), c = p.isub(d).iushrn(this.shift), y = c;
      return c.cmp(this.m) >= 0 ? y = c.isub(this.m) : c.cmpn(0) < 0 && (y = c.iadd(this.m)), y._forceRed(this);
    }, z.prototype.invm = function(O) {
      var u = this.imod(O._invmp(this.m).mul(this.r2));
      return u._forceRed(this);
    };
  })(e, I7);
})(Ds);
var lh = Ds.exports, Ls = { exports: {} }, Oe = {};
Oe.isArray = (e) => Array.isArray(e);
Oe.isNumber = (e) => typeof e == "number";
Oe.isObject = (e) => e && typeof e == "object";
Oe.isString = (e) => typeof e == "string";
Oe.isUndefined = (e) => typeof e > "u";
Oe.isFunction = (e) => typeof e == "function";
Oe.isNull = (e) => e === null;
Oe.isDate = (e) => e instanceof Date;
Oe.extend = (e, t) => Object.assign(e, t);
Oe.noop = () => {
};
Oe.every = (e, t) => e.every(t || ((a) => a));
Oe.map = (e, t) => Array.from(e).map(t || ((a) => a));
Oe.includes = (e, t) => e.includes(t);
Oe.each = (e, t) => e.forEach(t);
Oe.clone = (e) => Object.assign({}, e);
Oe.pick = (e, t) => {
  const a = {};
  return t.forEach((r) => {
    typeof e[r] < "u" && (a[r] = e[r]);
  }), a;
};
Oe.values = (e) => Object.values(e);
Oe.filter = (e, t) => e.filter(t);
Oe.reduce = (e, t, a) => e.reduce(t, a);
Oe.without = (e, t) => e.filter((a) => a !== t);
Oe.shuffle = (e) => {
  const t = e.slice(0);
  for (let a = t.length - 1; a > 0; a--) {
    const r = Math.floor(Math.random() * (a + 1));
    [t[a], t[r]] = [t[r], t[a]];
  }
  return t;
};
Oe.difference = (e, t) => e.filter((a) => !t.includes(a));
Oe.findIndex = (e, t) => e.findIndex(t);
Oe.some = (e, t) => e.some(t);
Oe.range = (e) => [...Array(e).keys()];
var Ee = Oe, mn, Lc;
function Rw() {
  if (Lc)
    return mn;
  Lc = 1;
  var e = "https://docs.moneybutton.com/";
  return mn = [{
    name: "InvalidB58Char",
    message: "Invalid Base58 character: {0} in {1}"
  }, {
    name: "InvalidB58Checksum",
    message: "Invalid Base58 checksum for {0}"
  }, {
    name: "InvalidNetwork",
    message: "Invalid version for network: got {0}"
  }, {
    name: "InvalidState",
    message: "Invalid state: {0}"
  }, {
    name: "NotImplemented",
    message: "Function {0} was not implemented yet"
  }, {
    name: "InvalidNetworkArgument",
    message: 'Invalid network: must be "livenet" or "testnet", got {0}'
  }, {
    name: "InvalidArgument",
    message: function() {
      return "Invalid Argument" + (arguments[0] ? ": " + arguments[0] : "") + (arguments[1] ? " Documentation: " + e + arguments[1] : "");
    }
  }, {
    name: "AbstractMethodInvoked",
    message: "Abstract Method Invocation: {0}"
  }, {
    name: "InvalidArgumentType",
    message: function() {
      return "Invalid Argument for " + arguments[2] + ", expected " + arguments[1] + " but got " + typeof arguments[0];
    }
  }, {
    name: "Unit",
    message: "Internal Error on Unit {0}",
    errors: [{
      name: "UnknownCode",
      message: "Unrecognized unit code: {0}"
    }, {
      name: "InvalidRate",
      message: "Invalid exchange rate: {0}"
    }]
  }, {
    name: "MerkleBlock",
    message: "Internal Error on MerkleBlock {0}",
    errors: [{
      name: "InvalidMerkleTree",
      message: "This MerkleBlock contain an invalid Merkle Tree"
    }]
  }, {
    name: "Transaction",
    message: "Internal Error on Transaction {0}",
    errors: [{
      name: "Input",
      message: "Internal Error on Input {0}",
      errors: [{
        name: "MissingScript",
        message: "Need a script to create an input"
      }, {
        name: "UnsupportedScript",
        message: "Unsupported input script type: {0}"
      }, {
        name: "MissingPreviousOutput",
        message: "No previous output information."
      }]
    }, {
      name: "NeedMoreInfo",
      message: "{0}"
    }, {
      name: "InvalidSorting",
      message: "The sorting function provided did not return the change output as one of the array elements"
    }, {
      name: "InvalidOutputAmountSum",
      message: "{0}"
    }, {
      name: "MissingSignatures",
      message: "Some inputs have not been fully signed"
    }, {
      name: "InvalidIndex",
      message: "Invalid index: {0} is not between 0, {1}"
    }, {
      name: "UnableToVerifySignature",
      message: "Unable to verify signature: {0}"
    }, {
      name: "DustOutputs",
      message: "Dust amount detected in one output"
    }, {
      name: "InvalidSatoshis",
      message: "Output satoshis are invalid"
    }, {
      name: "FeeError",
      message: "Internal Error on Fee {0}",
      errors: [{
        name: "TooSmall",
        message: "Fee is too small: {0}"
      }, {
        name: "TooLarge",
        message: "Fee is too large: {0}"
      }, {
        name: "Different",
        message: "Unspent value is different from specified fee: {0}"
      }]
    }, {
      name: "ChangeAddressMissing",
      message: "Change address is missing"
    }, {
      name: "BlockHeightTooHigh",
      message: "Block Height can be at most 2^32 -1"
    }, {
      name: "NLockTimeOutOfRange",
      message: "Block Height can only be between 0 and 499 999 999"
    }, {
      name: "LockTimeTooEarly",
      message: "Lock Time can't be earlier than UNIX date 500 000 000"
    }, {
      name: "TransactionAlreadySealed",
      message: "Cannot update sealed transaction"
    }]
  }, {
    name: "Script",
    message: "Internal Error on Script {0}",
    errors: [{
      name: "UnrecognizedAddress",
      message: "Expected argument {0} to be an address"
    }, {
      name: "CantDeriveAddress",
      message: "Can't derive address associated with script {0}, needs to be p2pkh in, p2pkh out, p2sh in, or p2sh out."
    }, {
      name: "InvalidBuffer",
      message: "Invalid script buffer: can't parse valid script from given buffer {0}"
    }, {
      name: "InvalidOpcode",
      message: 'Invalid Opcode: got "{0}"'
    }]
  }, {
    name: "HDPrivateKey",
    message: "Internal Error on HDPrivateKey {0}",
    errors: [{
      name: "InvalidDerivationArgument",
      message: "Invalid derivation argument {0}, expected string, or number and boolean"
    }, {
      name: "InvalidEntropyArgument",
      message: "Invalid entropy: must be an hexa string or binary buffer, got {0}",
      errors: [{
        name: "TooMuchEntropy",
        message: 'Invalid entropy: more than 512 bits is non standard, got "{0}"'
      }, {
        name: "NotEnoughEntropy",
        message: 'Invalid entropy: at least 128 bits needed, got "{0}"'
      }]
    }, {
      name: "InvalidLength",
      message: "Invalid length for xprivkey string in {0}"
    }, {
      name: "InvalidPath",
      message: "Invalid derivation path: {0}"
    }, {
      name: "UnrecognizedArgument",
      message: 'Invalid argument: creating a HDPrivateKey requires a string, buffer, json or object, got "{0}"'
    }]
  }, {
    name: "HDPublicKey",
    message: "Internal Error on HDPublicKey {0}",
    errors: [{
      name: "ArgumentIsPrivateExtended",
      message: "Argument is an extended private key: {0}"
    }, {
      name: "InvalidDerivationArgument",
      message: "Invalid derivation argument: got {0}"
    }, {
      name: "InvalidLength",
      message: 'Invalid length for xpubkey: got "{0}"'
    }, {
      name: "InvalidPath",
      message: 'Invalid derivation path, it should look like: "m/1/100", got "{0}"'
    }, {
      name: "InvalidIndexCantDeriveHardened",
      message: "Invalid argument: creating a hardened path requires an HDPrivateKey"
    }, {
      name: "MustSupplyArgument",
      message: "Must supply an argument to create a HDPublicKey"
    }, {
      name: "UnrecognizedArgument",
      message: "Invalid argument for creation, must be string, json, buffer, or object"
    }]
  }], mn;
}
var Eo = Ee;
function Bw(e, t) {
  return e.replace("{0}", t[0]).replace("{1}", t[1]).replace("{2}", t[2]);
}
var ph = function(e, t) {
  var a = function() {
    if (Eo.isString(t.message))
      this.message = Bw(t.message, arguments);
    else if (Eo.isFunction(t.message))
      this.message = t.message.apply(null, arguments);
    else
      throw new Error("Invalid error definition for " + t.name);
    this.stack = this.message + `
` + new Error().stack;
  };
  return a.prototype = Object.create(e.prototype), a.prototype.name = e.prototype.name + t.name, e[t.name] = a, t.errors && hh(a, t.errors), a;
}, hh = function(e, t) {
  Eo.each(t, function(a) {
    ph(e, a);
  });
}, Nw = function(e, t) {
  return hh(e, t), e;
}, g1 = {};
g1.Error = function() {
  this.message = "Internal error", this.stack = this.message + `
` + new Error().stack;
};
g1.Error.prototype = Object.create(Error.prototype);
g1.Error.prototype.name = "bsv.Error";
var Cw = Rw();
Nw(g1.Error, Cw);
Ls.exports = g1.Error;
Ls.exports.extend = function(e) {
  return ph(g1.Error, e);
};
var L5 = Ls.exports, U1 = L5, Dw = Ee, Ae = {
  checkState: function(e, t) {
    if (!e)
      throw new U1.InvalidState(t);
  },
  checkArgument: function(e, t, a, r) {
    if (!e)
      throw new U1.InvalidArgument(t, a, r);
  },
  checkArgumentType: function(e, t, a) {
    if (a = a || "(unknown name)", Dw.isString(t)) {
      if (t === "Buffer") {
        var r = Q;
        if (!r.Buffer.isBuffer(e))
          throw new U1.InvalidArgumentType(e, t, a);
      } else if (typeof e !== t)
        throw new U1.InvalidArgumentType(e, t, a);
    } else if (!(e instanceof t))
      throw new U1.InvalidArgumentType(e, t.name, a);
  }
}, ge = lh, Fs = Ae, bh = Ee, Kf = function(e) {
  for (var t = Q.Buffer.alloc(e.length), a = 0; a < e.length; a++)
    t[a] = e[e.length - 1 - a];
  return t;
};
ge.Zero = new ge(0);
ge.One = new ge(1);
ge.Minus1 = new ge(-1);
ge.fromNumber = function(e) {
  return Fs.checkArgument(bh.isNumber(e)), new ge(e);
};
ge.fromString = function(e, t) {
  return Fs.checkArgument(bh.isString(e)), new ge(e, t);
};
ge.fromBuffer = function(e, t) {
  typeof t < "u" && t.endian === "little" && (e = Kf(e));
  var a = e.toString("hex"), r = new ge(a, 16);
  return r;
};
ge.fromSM = function(e, t) {
  var a;
  if (e.length === 0)
    return ge.fromBuffer(Q.Buffer.from([0]));
  var r = "big";
  return t && (r = t.endian), r === "little" && (e = Kf(e)), e[0] & 128 ? (e[0] = e[0] & 127, a = ge.fromBuffer(e), a.neg().copy(a)) : a = ge.fromBuffer(e), a;
};
ge.prototype.toNumber = function() {
  return parseInt(this.toString(10), 10);
};
ge.prototype.toBuffer = function(e) {
  var t, a;
  if (e && e.size) {
    a = this.toString(16, 2);
    var r = a.length / 2;
    t = Q.Buffer.from(a, "hex"), r === e.size || (r > e.size ? t = ge.trim(t, r) : r < e.size && (t = ge.pad(t, r, e.size)));
  } else
    a = this.toString(16, 2), t = Q.Buffer.from(a, "hex");
  return typeof e < "u" && e.endian === "little" && (t = Kf(t)), t;
};
ge.prototype.toSMBigEndian = function() {
  var e;
  return this.cmp(ge.Zero) === -1 ? (e = this.neg().toBuffer(), e[0] & 128 ? e = Q.Buffer.concat([Q.Buffer.from([128]), e]) : e[0] = e[0] | 128) : (e = this.toBuffer(), e[0] & 128 && (e = Q.Buffer.concat([Q.Buffer.from([0]), e]))), e.length === 1 & e[0] === 0 && (e = Q.Buffer.from([])), e;
};
ge.prototype.toSM = function(e) {
  var t = e ? e.endian : "big", a = this.toSMBigEndian();
  return t === "little" && (a = Kf(a)), a;
};
ge.fromScriptNumBuffer = function(e, t, a) {
  var r = a || Number.MAX_SAFE_INTEGER;
  if (Fs.checkArgument(e.length <= r, new Error("script number overflow")), t && e.length > 0 && !(e[e.length - 1] & 127) && (e.length <= 1 || !(e[e.length - 2] & 128)))
    throw new Error("non-minimally encoded script number");
  return ge.fromSM(e, {
    endian: "little"
  });
};
ge.prototype.toScriptNumBuffer = function() {
  return this.toSM({
    endian: "little"
  });
};
ge.trim = function(e, t) {
  return e.slice(t - e.length, e.length);
};
ge.pad = function(e, t, a) {
  for (var r = Q.Buffer.alloc(a), f = 0; f < e.length; f++)
    r[r.length - 1 - f] = e[e.length - 1 - f];
  for (f = 0; f < a - t; f++)
    r[f] = 0;
  return r;
};
ge.prototype.toHex = function(...e) {
  return this.toBuffer(...e).toString("hex");
};
ge.fromHex = function(e, ...t) {
  return ge.fromBuffer(Q.Buffer.from(e, "hex"), ...t);
};
var O0 = ge, vn = {};
const Lw = "elliptic", Fw = "6.5.4", Hw = "EC cryptography", Uw = "lib/elliptic.js", $w = [
  "lib"
], jw = {
  lint: "eslint lib test",
  "lint:fix": "npm run lint -- --fix",
  unit: "istanbul test _mocha --reporter=spec test/index.js",
  test: "npm run lint && npm run unit",
  version: "grunt dist && git add dist/"
}, Vw = {
  type: "git",
  url: "git@github.com:indutny/elliptic"
}, zw = [
  "EC",
  "Elliptic",
  "curve",
  "Cryptography"
], qw = "Fedor Indutny <fedor@indutny.com>", Kw = "MIT", Gw = {
  url: "https://github.com/indutny/elliptic/issues"
}, Ww = "https://github.com/indutny/elliptic", Zw = {
  brfs: "^2.0.2",
  coveralls: "^3.1.0",
  eslint: "^7.6.0",
  grunt: "^1.2.1",
  "grunt-browserify": "^5.3.0",
  "grunt-cli": "^1.3.2",
  "grunt-contrib-connect": "^3.0.0",
  "grunt-contrib-copy": "^1.0.0",
  "grunt-contrib-uglify": "^5.0.0",
  "grunt-mocha-istanbul": "^5.0.2",
  "grunt-saucelabs": "^9.0.1",
  istanbul: "^0.4.5",
  mocha: "^8.0.1"
}, Yw = {
  "bn.js": "^4.11.9",
  brorand: "^1.1.0",
  "hash.js": "^1.0.0",
  "hmac-drbg": "^1.0.1",
  inherits: "^2.0.4",
  "minimalistic-assert": "^1.0.1",
  "minimalistic-crypto-utils": "^1.0.1"
}, Xw = {
  name: Lw,
  version: Fw,
  description: Hw,
  main: Uw,
  files: $w,
  scripts: jw,
  repository: Vw,
  keywords: zw,
  author: qw,
  license: Kw,
  bugs: Gw,
  homepage: Ww,
  devDependencies: Zw,
  dependencies: Yw
};
var J0 = {}, Hs = { exports: {} };
Hs.exports;
(function(e) {
  (function(t, a) {
    function r(O, u) {
      if (!O)
        throw new Error(u || "Assertion failed");
    }
    function f(O, u) {
      O.super_ = u;
      var p = function() {
      };
      p.prototype = u.prototype, O.prototype = new p(), O.prototype.constructor = O;
    }
    function i(O, u, p) {
      if (i.isBN(O))
        return O;
      this.negative = 0, this.words = null, this.length = 0, this.red = null, O !== null && ((u === "le" || u === "be") && (p = u, u = 10), this._init(O || 0, u || 10, p || "be"));
    }
    typeof t == "object" ? t.exports = i : a.BN = i, i.BN = i, i.wordSize = 26;
    var n;
    try {
      typeof window < "u" && typeof window.Buffer < "u" ? n = window.Buffer : n = Q.Buffer;
    } catch {
    }
    i.isBN = function(u) {
      return u instanceof i ? !0 : u !== null && typeof u == "object" && u.constructor.wordSize === i.wordSize && Array.isArray(u.words);
    }, i.max = function(u, p) {
      return u.cmp(p) > 0 ? u : p;
    }, i.min = function(u, p) {
      return u.cmp(p) < 0 ? u : p;
    }, i.prototype._init = function(u, p, d) {
      if (typeof u == "number")
        return this._initNumber(u, p, d);
      if (typeof u == "object")
        return this._initArray(u, p, d);
      p === "hex" && (p = 16), r(p === (p | 0) && p >= 2 && p <= 36), u = u.toString().replace(/\s+/g, "");
      var c = 0;
      u[0] === "-" && (c++, this.negative = 1), c < u.length && (p === 16 ? this._parseHex(u, c, d) : (this._parseBase(u, p, c), d === "le" && this._initArray(this.toArray(), p, d)));
    }, i.prototype._initNumber = function(u, p, d) {
      u < 0 && (this.negative = 1, u = -u), u < 67108864 ? (this.words = [u & 67108863], this.length = 1) : u < 4503599627370496 ? (this.words = [
        u & 67108863,
        u / 67108864 & 67108863
      ], this.length = 2) : (r(u < 9007199254740992), this.words = [
        u & 67108863,
        u / 67108864 & 67108863,
        1
      ], this.length = 3), d === "le" && this._initArray(this.toArray(), p, d);
    }, i.prototype._initArray = function(u, p, d) {
      if (r(typeof u.length == "number"), u.length <= 0)
        return this.words = [0], this.length = 1, this;
      this.length = Math.ceil(u.length / 3), this.words = new Array(this.length);
      for (var c = 0; c < this.length; c++)
        this.words[c] = 0;
      var y, S, T = 0;
      if (d === "be")
        for (c = u.length - 1, y = 0; c >= 0; c -= 3)
          S = u[c] | u[c - 1] << 8 | u[c - 2] << 16, this.words[y] |= S << T & 67108863, this.words[y + 1] = S >>> 26 - T & 67108863, T += 24, T >= 26 && (T -= 26, y++);
      else if (d === "le")
        for (c = 0, y = 0; c < u.length; c += 3)
          S = u[c] | u[c + 1] << 8 | u[c + 2] << 16, this.words[y] |= S << T & 67108863, this.words[y + 1] = S >>> 26 - T & 67108863, T += 24, T >= 26 && (T -= 26, y++);
      return this.strip();
    };
    function o(O, u) {
      var p = O.charCodeAt(u);
      return p >= 65 && p <= 70 ? p - 55 : p >= 97 && p <= 102 ? p - 87 : p - 48 & 15;
    }
    function s(O, u, p) {
      var d = o(O, p);
      return p - 1 >= u && (d |= o(O, p - 1) << 4), d;
    }
    i.prototype._parseHex = function(u, p, d) {
      this.length = Math.ceil((u.length - p) / 6), this.words = new Array(this.length);
      for (var c = 0; c < this.length; c++)
        this.words[c] = 0;
      var y = 0, S = 0, T;
      if (d === "be")
        for (c = u.length - 1; c >= p; c -= 2)
          T = s(u, p, c) << y, this.words[S] |= T & 67108863, y >= 18 ? (y -= 18, S += 1, this.words[S] |= T >>> 26) : y += 8;
      else {
        var g = u.length - p;
        for (c = g % 2 === 0 ? p + 1 : p; c < u.length; c += 2)
          T = s(u, p, c) << y, this.words[S] |= T & 67108863, y >= 18 ? (y -= 18, S += 1, this.words[S] |= T >>> 26) : y += 8;
      }
      this.strip();
    };
    function b(O, u, p, d) {
      for (var c = 0, y = Math.min(O.length, p), S = u; S < y; S++) {
        var T = O.charCodeAt(S) - 48;
        c *= d, T >= 49 ? c += T - 49 + 10 : T >= 17 ? c += T - 17 + 10 : c += T;
      }
      return c;
    }
    i.prototype._parseBase = function(u, p, d) {
      this.words = [0], this.length = 1;
      for (var c = 0, y = 1; y <= 67108863; y *= p)
        c++;
      c--, y = y / p | 0;
      for (var S = u.length - d, T = S % c, g = Math.min(S, S - T) + d, w = 0, A = d; A < g; A += c)
        w = b(u, A, A + c, p), this.imuln(y), this.words[0] + w < 67108864 ? this.words[0] += w : this._iaddn(w);
      if (T !== 0) {
        var h = 1;
        for (w = b(u, A, u.length, p), A = 0; A < T; A++)
          h *= p;
        this.imuln(h), this.words[0] + w < 67108864 ? this.words[0] += w : this._iaddn(w);
      }
      this.strip();
    }, i.prototype.copy = function(u) {
      u.words = new Array(this.length);
      for (var p = 0; p < this.length; p++)
        u.words[p] = this.words[p];
      u.length = this.length, u.negative = this.negative, u.red = this.red;
    }, i.prototype.clone = function() {
      var u = new i(null);
      return this.copy(u), u;
    }, i.prototype._expand = function(u) {
      for (; this.length < u; )
        this.words[this.length++] = 0;
      return this;
    }, i.prototype.strip = function() {
      for (; this.length > 1 && this.words[this.length - 1] === 0; )
        this.length--;
      return this._normSign();
    }, i.prototype._normSign = function() {
      return this.length === 1 && this.words[0] === 0 && (this.negative = 0), this;
    }, i.prototype.inspect = function() {
      return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
    };
    var l = [
      "",
      "0",
      "00",
      "000",
      "0000",
      "00000",
      "000000",
      "0000000",
      "00000000",
      "000000000",
      "0000000000",
      "00000000000",
      "000000000000",
      "0000000000000",
      "00000000000000",
      "000000000000000",
      "0000000000000000",
      "00000000000000000",
      "000000000000000000",
      "0000000000000000000",
      "00000000000000000000",
      "000000000000000000000",
      "0000000000000000000000",
      "00000000000000000000000",
      "000000000000000000000000",
      "0000000000000000000000000"
    ], v = [
      0,
      0,
      25,
      16,
      12,
      11,
      10,
      9,
      8,
      8,
      7,
      7,
      7,
      7,
      6,
      6,
      6,
      6,
      6,
      6,
      6,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5
    ], m = [
      0,
      0,
      33554432,
      43046721,
      16777216,
      48828125,
      60466176,
      40353607,
      16777216,
      43046721,
      1e7,
      19487171,
      35831808,
      62748517,
      7529536,
      11390625,
      16777216,
      24137569,
      34012224,
      47045881,
      64e6,
      4084101,
      5153632,
      6436343,
      7962624,
      9765625,
      11881376,
      14348907,
      17210368,
      20511149,
      243e5,
      28629151,
      33554432,
      39135393,
      45435424,
      52521875,
      60466176
    ];
    i.prototype.toString = function(u, p) {
      u = u || 10, p = p | 0 || 1;
      var d;
      if (u === 16 || u === "hex") {
        d = "";
        for (var c = 0, y = 0, S = 0; S < this.length; S++) {
          var T = this.words[S], g = ((T << c | y) & 16777215).toString(16);
          y = T >>> 24 - c & 16777215, y !== 0 || S !== this.length - 1 ? d = l[6 - g.length] + g + d : d = g + d, c += 2, c >= 26 && (c -= 26, S--);
        }
        for (y !== 0 && (d = y.toString(16) + d); d.length % p !== 0; )
          d = "0" + d;
        return this.negative !== 0 && (d = "-" + d), d;
      }
      if (u === (u | 0) && u >= 2 && u <= 36) {
        var w = v[u], A = m[u];
        d = "";
        var h = this.clone();
        for (h.negative = 0; !h.isZero(); ) {
          var N = h.modn(A).toString(u);
          h = h.idivn(A), h.isZero() ? d = N + d : d = l[w - N.length] + N + d;
        }
        for (this.isZero() && (d = "0" + d); d.length % p !== 0; )
          d = "0" + d;
        return this.negative !== 0 && (d = "-" + d), d;
      }
      r(!1, "Base should be between 2 and 36");
    }, i.prototype.toNumber = function() {
      var u = this.words[0];
      return this.length === 2 ? u += this.words[1] * 67108864 : this.length === 3 && this.words[2] === 1 ? u += 4503599627370496 + this.words[1] * 67108864 : this.length > 2 && r(!1, "Number can only safely store up to 53 bits"), this.negative !== 0 ? -u : u;
    }, i.prototype.toJSON = function() {
      return this.toString(16);
    }, i.prototype.toBuffer = function(u, p) {
      return r(typeof n < "u"), this.toArrayLike(n, u, p);
    }, i.prototype.toArray = function(u, p) {
      return this.toArrayLike(Array, u, p);
    }, i.prototype.toArrayLike = function(u, p, d) {
      var c = this.byteLength(), y = d || Math.max(1, c);
      r(c <= y, "byte array longer than desired length"), r(y > 0, "Requested array length <= 0"), this.strip();
      var S = p === "le", T = new u(y), g, w, A = this.clone();
      if (S) {
        for (w = 0; !A.isZero(); w++)
          g = A.andln(255), A.iushrn(8), T[w] = g;
        for (; w < y; w++)
          T[w] = 0;
      } else {
        for (w = 0; w < y - c; w++)
          T[w] = 0;
        for (w = 0; !A.isZero(); w++)
          g = A.andln(255), A.iushrn(8), T[y - w - 1] = g;
      }
      return T;
    }, Math.clz32 ? i.prototype._countBits = function(u) {
      return 32 - Math.clz32(u);
    } : i.prototype._countBits = function(u) {
      var p = u, d = 0;
      return p >= 4096 && (d += 13, p >>>= 13), p >= 64 && (d += 7, p >>>= 7), p >= 8 && (d += 4, p >>>= 4), p >= 2 && (d += 2, p >>>= 2), d + p;
    }, i.prototype._zeroBits = function(u) {
      if (u === 0)
        return 26;
      var p = u, d = 0;
      return p & 8191 || (d += 13, p >>>= 13), p & 127 || (d += 7, p >>>= 7), p & 15 || (d += 4, p >>>= 4), p & 3 || (d += 2, p >>>= 2), p & 1 || d++, d;
    }, i.prototype.bitLength = function() {
      var u = this.words[this.length - 1], p = this._countBits(u);
      return (this.length - 1) * 26 + p;
    };
    function x(O) {
      for (var u = new Array(O.bitLength()), p = 0; p < u.length; p++) {
        var d = p / 26 | 0, c = p % 26;
        u[p] = (O.words[d] & 1 << c) >>> c;
      }
      return u;
    }
    i.prototype.zeroBits = function() {
      if (this.isZero())
        return 0;
      for (var u = 0, p = 0; p < this.length; p++) {
        var d = this._zeroBits(this.words[p]);
        if (u += d, d !== 26)
          break;
      }
      return u;
    }, i.prototype.byteLength = function() {
      return Math.ceil(this.bitLength() / 8);
    }, i.prototype.toTwos = function(u) {
      return this.negative !== 0 ? this.abs().inotn(u).iaddn(1) : this.clone();
    }, i.prototype.fromTwos = function(u) {
      return this.testn(u - 1) ? this.notn(u).iaddn(1).ineg() : this.clone();
    }, i.prototype.isNeg = function() {
      return this.negative !== 0;
    }, i.prototype.neg = function() {
      return this.clone().ineg();
    }, i.prototype.ineg = function() {
      return this.isZero() || (this.negative ^= 1), this;
    }, i.prototype.iuor = function(u) {
      for (; this.length < u.length; )
        this.words[this.length++] = 0;
      for (var p = 0; p < u.length; p++)
        this.words[p] = this.words[p] | u.words[p];
      return this.strip();
    }, i.prototype.ior = function(u) {
      return r((this.negative | u.negative) === 0), this.iuor(u);
    }, i.prototype.or = function(u) {
      return this.length > u.length ? this.clone().ior(u) : u.clone().ior(this);
    }, i.prototype.uor = function(u) {
      return this.length > u.length ? this.clone().iuor(u) : u.clone().iuor(this);
    }, i.prototype.iuand = function(u) {
      var p;
      this.length > u.length ? p = u : p = this;
      for (var d = 0; d < p.length; d++)
        this.words[d] = this.words[d] & u.words[d];
      return this.length = p.length, this.strip();
    }, i.prototype.iand = function(u) {
      return r((this.negative | u.negative) === 0), this.iuand(u);
    }, i.prototype.and = function(u) {
      return this.length > u.length ? this.clone().iand(u) : u.clone().iand(this);
    }, i.prototype.uand = function(u) {
      return this.length > u.length ? this.clone().iuand(u) : u.clone().iuand(this);
    }, i.prototype.iuxor = function(u) {
      var p, d;
      this.length > u.length ? (p = this, d = u) : (p = u, d = this);
      for (var c = 0; c < d.length; c++)
        this.words[c] = p.words[c] ^ d.words[c];
      if (this !== p)
        for (; c < p.length; c++)
          this.words[c] = p.words[c];
      return this.length = p.length, this.strip();
    }, i.prototype.ixor = function(u) {
      return r((this.negative | u.negative) === 0), this.iuxor(u);
    }, i.prototype.xor = function(u) {
      return this.length > u.length ? this.clone().ixor(u) : u.clone().ixor(this);
    }, i.prototype.uxor = function(u) {
      return this.length > u.length ? this.clone().iuxor(u) : u.clone().iuxor(this);
    }, i.prototype.inotn = function(u) {
      r(typeof u == "number" && u >= 0);
      var p = Math.ceil(u / 26) | 0, d = u % 26;
      this._expand(p), d > 0 && p--;
      for (var c = 0; c < p; c++)
        this.words[c] = ~this.words[c] & 67108863;
      return d > 0 && (this.words[c] = ~this.words[c] & 67108863 >> 26 - d), this.strip();
    }, i.prototype.notn = function(u) {
      return this.clone().inotn(u);
    }, i.prototype.setn = function(u, p) {
      r(typeof u == "number" && u >= 0);
      var d = u / 26 | 0, c = u % 26;
      return this._expand(d + 1), p ? this.words[d] = this.words[d] | 1 << c : this.words[d] = this.words[d] & ~(1 << c), this.strip();
    }, i.prototype.iadd = function(u) {
      var p;
      if (this.negative !== 0 && u.negative === 0)
        return this.negative = 0, p = this.isub(u), this.negative ^= 1, this._normSign();
      if (this.negative === 0 && u.negative !== 0)
        return u.negative = 0, p = this.isub(u), u.negative = 1, p._normSign();
      var d, c;
      this.length > u.length ? (d = this, c = u) : (d = u, c = this);
      for (var y = 0, S = 0; S < c.length; S++)
        p = (d.words[S] | 0) + (c.words[S] | 0) + y, this.words[S] = p & 67108863, y = p >>> 26;
      for (; y !== 0 && S < d.length; S++)
        p = (d.words[S] | 0) + y, this.words[S] = p & 67108863, y = p >>> 26;
      if (this.length = d.length, y !== 0)
        this.words[this.length] = y, this.length++;
      else if (d !== this)
        for (; S < d.length; S++)
          this.words[S] = d.words[S];
      return this;
    }, i.prototype.add = function(u) {
      var p;
      return u.negative !== 0 && this.negative === 0 ? (u.negative = 0, p = this.sub(u), u.negative ^= 1, p) : u.negative === 0 && this.negative !== 0 ? (this.negative = 0, p = u.sub(this), this.negative = 1, p) : this.length > u.length ? this.clone().iadd(u) : u.clone().iadd(this);
    }, i.prototype.isub = function(u) {
      if (u.negative !== 0) {
        u.negative = 0;
        var p = this.iadd(u);
        return u.negative = 1, p._normSign();
      } else if (this.negative !== 0)
        return this.negative = 0, this.iadd(u), this.negative = 1, this._normSign();
      var d = this.cmp(u);
      if (d === 0)
        return this.negative = 0, this.length = 1, this.words[0] = 0, this;
      var c, y;
      d > 0 ? (c = this, y = u) : (c = u, y = this);
      for (var S = 0, T = 0; T < y.length; T++)
        p = (c.words[T] | 0) - (y.words[T] | 0) + S, S = p >> 26, this.words[T] = p & 67108863;
      for (; S !== 0 && T < c.length; T++)
        p = (c.words[T] | 0) + S, S = p >> 26, this.words[T] = p & 67108863;
      if (S === 0 && T < c.length && c !== this)
        for (; T < c.length; T++)
          this.words[T] = c.words[T];
      return this.length = Math.max(this.length, T), c !== this && (this.negative = 1), this.strip();
    }, i.prototype.sub = function(u) {
      return this.clone().isub(u);
    };
    function I(O, u, p) {
      p.negative = u.negative ^ O.negative;
      var d = O.length + u.length | 0;
      p.length = d, d = d - 1 | 0;
      var c = O.words[0] | 0, y = u.words[0] | 0, S = c * y, T = S & 67108863, g = S / 67108864 | 0;
      p.words[0] = T;
      for (var w = 1; w < d; w++) {
        for (var A = g >>> 26, h = g & 67108863, N = Math.min(w, u.length - 1), Y = Math.max(0, w - O.length + 1); Y <= N; Y++) {
          var t7 = w - Y | 0;
          c = O.words[t7] | 0, y = u.words[Y] | 0, S = c * y + h, A += S / 67108864 | 0, h = S & 67108863;
        }
        p.words[w] = h | 0, g = A | 0;
      }
      return g !== 0 ? p.words[w] = g | 0 : p.length--, p.strip();
    }
    var k = function(u, p, d) {
      var c = u.words, y = p.words, S = d.words, T = 0, g, w, A, h = c[0] | 0, N = h & 8191, Y = h >>> 13, t7 = c[1] | 0, H = t7 & 8191, $ = t7 >>> 13, X = c[2] | 0, i7 = X & 8191, J = X >>> 13, _ = c[3] | 0, E = _ & 8191, j = _ >>> 13, V = c[4] | 0, n7 = V & 8191, K = V >>> 13, B = c[5] | 0, D = B & 8191, W = B >>> 13, e7 = c[6] | 0, o7 = e7 & 8191, a7 = e7 >>> 13, s7 = c[7] | 0, u7 = s7 & 8191, m7 = s7 >>> 13, p7 = c[8] | 0, l7 = p7 & 8191, y7 = p7 >>> 13, x7 = c[9] | 0, _7 = x7 & 8191, F7 = x7 >>> 13, T7 = y[0] | 0, S7 = T7 & 8191, Y7 = T7 >>> 13, k7 = y[1] | 0, E7 = k7 & 8191, $7 = k7 >>> 13, H7 = y[2] | 0, P7 = H7 & 8191, pe = H7 >>> 13, q7 = y[3] | 0, N7 = q7 & 8191, xe = q7 >>> 13, K7 = y[4] | 0, R7 = K7 & 8191, be = K7 >>> 13, G7 = y[5] | 0, M7 = G7 & 8191, se = G7 >>> 13, V7 = y[6] | 0, B7 = V7 & 8191, ne = V7 >>> 13, z7 = y[7] | 0, C7 = z7 & 8191, me = z7 >>> 13, W7 = y[8] | 0, D7 = W7 & 8191, _e = W7 >>> 13, Z7 = y[9] | 0, L7 = Z7 & 8191, ve = Z7 >>> 13;
      d.negative = u.negative ^ p.negative, d.length = 19, g = Math.imul(N, S7), w = Math.imul(N, Y7), w = w + Math.imul(Y, S7) | 0, A = Math.imul(Y, Y7);
      var J7 = (T + g | 0) + ((w & 8191) << 13) | 0;
      T = (A + (w >>> 13) | 0) + (J7 >>> 26) | 0, J7 &= 67108863, g = Math.imul(H, S7), w = Math.imul(H, Y7), w = w + Math.imul($, S7) | 0, A = Math.imul($, Y7), g = g + Math.imul(N, E7) | 0, w = w + Math.imul(N, $7) | 0, w = w + Math.imul(Y, E7) | 0, A = A + Math.imul(Y, $7) | 0;
      var ee = (T + g | 0) + ((w & 8191) << 13) | 0;
      T = (A + (w >>> 13) | 0) + (ee >>> 26) | 0, ee &= 67108863, g = Math.imul(i7, S7), w = Math.imul(i7, Y7), w = w + Math.imul(J, S7) | 0, A = Math.imul(J, Y7), g = g + Math.imul(H, E7) | 0, w = w + Math.imul(H, $7) | 0, w = w + Math.imul($, E7) | 0, A = A + Math.imul($, $7) | 0, g = g + Math.imul(N, P7) | 0, w = w + Math.imul(N, pe) | 0, w = w + Math.imul(Y, P7) | 0, A = A + Math.imul(Y, pe) | 0;
      var We = (T + g | 0) + ((w & 8191) << 13) | 0;
      T = (A + (w >>> 13) | 0) + (We >>> 26) | 0, We &= 67108863, g = Math.imul(E, S7), w = Math.imul(E, Y7), w = w + Math.imul(j, S7) | 0, A = Math.imul(j, Y7), g = g + Math.imul(i7, E7) | 0, w = w + Math.imul(i7, $7) | 0, w = w + Math.imul(J, E7) | 0, A = A + Math.imul(J, $7) | 0, g = g + Math.imul(H, P7) | 0, w = w + Math.imul(H, pe) | 0, w = w + Math.imul($, P7) | 0, A = A + Math.imul($, pe) | 0, g = g + Math.imul(N, N7) | 0, w = w + Math.imul(N, xe) | 0, w = w + Math.imul(Y, N7) | 0, A = A + Math.imul(Y, xe) | 0;
      var Ze = (T + g | 0) + ((w & 8191) << 13) | 0;
      T = (A + (w >>> 13) | 0) + (Ze >>> 26) | 0, Ze &= 67108863, g = Math.imul(n7, S7), w = Math.imul(n7, Y7), w = w + Math.imul(K, S7) | 0, A = Math.imul(K, Y7), g = g + Math.imul(E, E7) | 0, w = w + Math.imul(E, $7) | 0, w = w + Math.imul(j, E7) | 0, A = A + Math.imul(j, $7) | 0, g = g + Math.imul(i7, P7) | 0, w = w + Math.imul(i7, pe) | 0, w = w + Math.imul(J, P7) | 0, A = A + Math.imul(J, pe) | 0, g = g + Math.imul(H, N7) | 0, w = w + Math.imul(H, xe) | 0, w = w + Math.imul($, N7) | 0, A = A + Math.imul($, xe) | 0, g = g + Math.imul(N, R7) | 0, w = w + Math.imul(N, be) | 0, w = w + Math.imul(Y, R7) | 0, A = A + Math.imul(Y, be) | 0;
      var Me = (T + g | 0) + ((w & 8191) << 13) | 0;
      T = (A + (w >>> 13) | 0) + (Me >>> 26) | 0, Me &= 67108863, g = Math.imul(D, S7), w = Math.imul(D, Y7), w = w + Math.imul(W, S7) | 0, A = Math.imul(W, Y7), g = g + Math.imul(n7, E7) | 0, w = w + Math.imul(n7, $7) | 0, w = w + Math.imul(K, E7) | 0, A = A + Math.imul(K, $7) | 0, g = g + Math.imul(E, P7) | 0, w = w + Math.imul(E, pe) | 0, w = w + Math.imul(j, P7) | 0, A = A + Math.imul(j, pe) | 0, g = g + Math.imul(i7, N7) | 0, w = w + Math.imul(i7, xe) | 0, w = w + Math.imul(J, N7) | 0, A = A + Math.imul(J, xe) | 0, g = g + Math.imul(H, R7) | 0, w = w + Math.imul(H, be) | 0, w = w + Math.imul($, R7) | 0, A = A + Math.imul($, be) | 0, g = g + Math.imul(N, M7) | 0, w = w + Math.imul(N, se) | 0, w = w + Math.imul(Y, M7) | 0, A = A + Math.imul(Y, se) | 0;
      var Ye = (T + g | 0) + ((w & 8191) << 13) | 0;
      T = (A + (w >>> 13) | 0) + (Ye >>> 26) | 0, Ye &= 67108863, g = Math.imul(o7, S7), w = Math.imul(o7, Y7), w = w + Math.imul(a7, S7) | 0, A = Math.imul(a7, Y7), g = g + Math.imul(D, E7) | 0, w = w + Math.imul(D, $7) | 0, w = w + Math.imul(W, E7) | 0, A = A + Math.imul(W, $7) | 0, g = g + Math.imul(n7, P7) | 0, w = w + Math.imul(n7, pe) | 0, w = w + Math.imul(K, P7) | 0, A = A + Math.imul(K, pe) | 0, g = g + Math.imul(E, N7) | 0, w = w + Math.imul(E, xe) | 0, w = w + Math.imul(j, N7) | 0, A = A + Math.imul(j, xe) | 0, g = g + Math.imul(i7, R7) | 0, w = w + Math.imul(i7, be) | 0, w = w + Math.imul(J, R7) | 0, A = A + Math.imul(J, be) | 0, g = g + Math.imul(H, M7) | 0, w = w + Math.imul(H, se) | 0, w = w + Math.imul($, M7) | 0, A = A + Math.imul($, se) | 0, g = g + Math.imul(N, B7) | 0, w = w + Math.imul(N, ne) | 0, w = w + Math.imul(Y, B7) | 0, A = A + Math.imul(Y, ne) | 0;
      var Xe = (T + g | 0) + ((w & 8191) << 13) | 0;
      T = (A + (w >>> 13) | 0) + (Xe >>> 26) | 0, Xe &= 67108863, g = Math.imul(u7, S7), w = Math.imul(u7, Y7), w = w + Math.imul(m7, S7) | 0, A = Math.imul(m7, Y7), g = g + Math.imul(o7, E7) | 0, w = w + Math.imul(o7, $7) | 0, w = w + Math.imul(a7, E7) | 0, A = A + Math.imul(a7, $7) | 0, g = g + Math.imul(D, P7) | 0, w = w + Math.imul(D, pe) | 0, w = w + Math.imul(W, P7) | 0, A = A + Math.imul(W, pe) | 0, g = g + Math.imul(n7, N7) | 0, w = w + Math.imul(n7, xe) | 0, w = w + Math.imul(K, N7) | 0, A = A + Math.imul(K, xe) | 0, g = g + Math.imul(E, R7) | 0, w = w + Math.imul(E, be) | 0, w = w + Math.imul(j, R7) | 0, A = A + Math.imul(j, be) | 0, g = g + Math.imul(i7, M7) | 0, w = w + Math.imul(i7, se) | 0, w = w + Math.imul(J, M7) | 0, A = A + Math.imul(J, se) | 0, g = g + Math.imul(H, B7) | 0, w = w + Math.imul(H, ne) | 0, w = w + Math.imul($, B7) | 0, A = A + Math.imul($, ne) | 0, g = g + Math.imul(N, C7) | 0, w = w + Math.imul(N, me) | 0, w = w + Math.imul(Y, C7) | 0, A = A + Math.imul(Y, me) | 0;
      var p0 = (T + g | 0) + ((w & 8191) << 13) | 0;
      T = (A + (w >>> 13) | 0) + (p0 >>> 26) | 0, p0 &= 67108863, g = Math.imul(l7, S7), w = Math.imul(l7, Y7), w = w + Math.imul(y7, S7) | 0, A = Math.imul(y7, Y7), g = g + Math.imul(u7, E7) | 0, w = w + Math.imul(u7, $7) | 0, w = w + Math.imul(m7, E7) | 0, A = A + Math.imul(m7, $7) | 0, g = g + Math.imul(o7, P7) | 0, w = w + Math.imul(o7, pe) | 0, w = w + Math.imul(a7, P7) | 0, A = A + Math.imul(a7, pe) | 0, g = g + Math.imul(D, N7) | 0, w = w + Math.imul(D, xe) | 0, w = w + Math.imul(W, N7) | 0, A = A + Math.imul(W, xe) | 0, g = g + Math.imul(n7, R7) | 0, w = w + Math.imul(n7, be) | 0, w = w + Math.imul(K, R7) | 0, A = A + Math.imul(K, be) | 0, g = g + Math.imul(E, M7) | 0, w = w + Math.imul(E, se) | 0, w = w + Math.imul(j, M7) | 0, A = A + Math.imul(j, se) | 0, g = g + Math.imul(i7, B7) | 0, w = w + Math.imul(i7, ne) | 0, w = w + Math.imul(J, B7) | 0, A = A + Math.imul(J, ne) | 0, g = g + Math.imul(H, C7) | 0, w = w + Math.imul(H, me) | 0, w = w + Math.imul($, C7) | 0, A = A + Math.imul($, me) | 0, g = g + Math.imul(N, D7) | 0, w = w + Math.imul(N, _e) | 0, w = w + Math.imul(Y, D7) | 0, A = A + Math.imul(Y, _e) | 0;
      var Je = (T + g | 0) + ((w & 8191) << 13) | 0;
      T = (A + (w >>> 13) | 0) + (Je >>> 26) | 0, Je &= 67108863, g = Math.imul(_7, S7), w = Math.imul(_7, Y7), w = w + Math.imul(F7, S7) | 0, A = Math.imul(F7, Y7), g = g + Math.imul(l7, E7) | 0, w = w + Math.imul(l7, $7) | 0, w = w + Math.imul(y7, E7) | 0, A = A + Math.imul(y7, $7) | 0, g = g + Math.imul(u7, P7) | 0, w = w + Math.imul(u7, pe) | 0, w = w + Math.imul(m7, P7) | 0, A = A + Math.imul(m7, pe) | 0, g = g + Math.imul(o7, N7) | 0, w = w + Math.imul(o7, xe) | 0, w = w + Math.imul(a7, N7) | 0, A = A + Math.imul(a7, xe) | 0, g = g + Math.imul(D, R7) | 0, w = w + Math.imul(D, be) | 0, w = w + Math.imul(W, R7) | 0, A = A + Math.imul(W, be) | 0, g = g + Math.imul(n7, M7) | 0, w = w + Math.imul(n7, se) | 0, w = w + Math.imul(K, M7) | 0, A = A + Math.imul(K, se) | 0, g = g + Math.imul(E, B7) | 0, w = w + Math.imul(E, ne) | 0, w = w + Math.imul(j, B7) | 0, A = A + Math.imul(j, ne) | 0, g = g + Math.imul(i7, C7) | 0, w = w + Math.imul(i7, me) | 0, w = w + Math.imul(J, C7) | 0, A = A + Math.imul(J, me) | 0, g = g + Math.imul(H, D7) | 0, w = w + Math.imul(H, _e) | 0, w = w + Math.imul($, D7) | 0, A = A + Math.imul($, _e) | 0, g = g + Math.imul(N, L7) | 0, w = w + Math.imul(N, ve) | 0, w = w + Math.imul(Y, L7) | 0, A = A + Math.imul(Y, ve) | 0;
      var h0 = (T + g | 0) + ((w & 8191) << 13) | 0;
      T = (A + (w >>> 13) | 0) + (h0 >>> 26) | 0, h0 &= 67108863, g = Math.imul(_7, E7), w = Math.imul(_7, $7), w = w + Math.imul(F7, E7) | 0, A = Math.imul(F7, $7), g = g + Math.imul(l7, P7) | 0, w = w + Math.imul(l7, pe) | 0, w = w + Math.imul(y7, P7) | 0, A = A + Math.imul(y7, pe) | 0, g = g + Math.imul(u7, N7) | 0, w = w + Math.imul(u7, xe) | 0, w = w + Math.imul(m7, N7) | 0, A = A + Math.imul(m7, xe) | 0, g = g + Math.imul(o7, R7) | 0, w = w + Math.imul(o7, be) | 0, w = w + Math.imul(a7, R7) | 0, A = A + Math.imul(a7, be) | 0, g = g + Math.imul(D, M7) | 0, w = w + Math.imul(D, se) | 0, w = w + Math.imul(W, M7) | 0, A = A + Math.imul(W, se) | 0, g = g + Math.imul(n7, B7) | 0, w = w + Math.imul(n7, ne) | 0, w = w + Math.imul(K, B7) | 0, A = A + Math.imul(K, ne) | 0, g = g + Math.imul(E, C7) | 0, w = w + Math.imul(E, me) | 0, w = w + Math.imul(j, C7) | 0, A = A + Math.imul(j, me) | 0, g = g + Math.imul(i7, D7) | 0, w = w + Math.imul(i7, _e) | 0, w = w + Math.imul(J, D7) | 0, A = A + Math.imul(J, _e) | 0, g = g + Math.imul(H, L7) | 0, w = w + Math.imul(H, ve) | 0, w = w + Math.imul($, L7) | 0, A = A + Math.imul($, ve) | 0;
      var b0 = (T + g | 0) + ((w & 8191) << 13) | 0;
      T = (A + (w >>> 13) | 0) + (b0 >>> 26) | 0, b0 &= 67108863, g = Math.imul(_7, P7), w = Math.imul(_7, pe), w = w + Math.imul(F7, P7) | 0, A = Math.imul(F7, pe), g = g + Math.imul(l7, N7) | 0, w = w + Math.imul(l7, xe) | 0, w = w + Math.imul(y7, N7) | 0, A = A + Math.imul(y7, xe) | 0, g = g + Math.imul(u7, R7) | 0, w = w + Math.imul(u7, be) | 0, w = w + Math.imul(m7, R7) | 0, A = A + Math.imul(m7, be) | 0, g = g + Math.imul(o7, M7) | 0, w = w + Math.imul(o7, se) | 0, w = w + Math.imul(a7, M7) | 0, A = A + Math.imul(a7, se) | 0, g = g + Math.imul(D, B7) | 0, w = w + Math.imul(D, ne) | 0, w = w + Math.imul(W, B7) | 0, A = A + Math.imul(W, ne) | 0, g = g + Math.imul(n7, C7) | 0, w = w + Math.imul(n7, me) | 0, w = w + Math.imul(K, C7) | 0, A = A + Math.imul(K, me) | 0, g = g + Math.imul(E, D7) | 0, w = w + Math.imul(E, _e) | 0, w = w + Math.imul(j, D7) | 0, A = A + Math.imul(j, _e) | 0, g = g + Math.imul(i7, L7) | 0, w = w + Math.imul(i7, ve) | 0, w = w + Math.imul(J, L7) | 0, A = A + Math.imul(J, ve) | 0;
      var Le = (T + g | 0) + ((w & 8191) << 13) | 0;
      T = (A + (w >>> 13) | 0) + (Le >>> 26) | 0, Le &= 67108863, g = Math.imul(_7, N7), w = Math.imul(_7, xe), w = w + Math.imul(F7, N7) | 0, A = Math.imul(F7, xe), g = g + Math.imul(l7, R7) | 0, w = w + Math.imul(l7, be) | 0, w = w + Math.imul(y7, R7) | 0, A = A + Math.imul(y7, be) | 0, g = g + Math.imul(u7, M7) | 0, w = w + Math.imul(u7, se) | 0, w = w + Math.imul(m7, M7) | 0, A = A + Math.imul(m7, se) | 0, g = g + Math.imul(o7, B7) | 0, w = w + Math.imul(o7, ne) | 0, w = w + Math.imul(a7, B7) | 0, A = A + Math.imul(a7, ne) | 0, g = g + Math.imul(D, C7) | 0, w = w + Math.imul(D, me) | 0, w = w + Math.imul(W, C7) | 0, A = A + Math.imul(W, me) | 0, g = g + Math.imul(n7, D7) | 0, w = w + Math.imul(n7, _e) | 0, w = w + Math.imul(K, D7) | 0, A = A + Math.imul(K, _e) | 0, g = g + Math.imul(E, L7) | 0, w = w + Math.imul(E, ve) | 0, w = w + Math.imul(j, L7) | 0, A = A + Math.imul(j, ve) | 0;
      var Ke = (T + g | 0) + ((w & 8191) << 13) | 0;
      T = (A + (w >>> 13) | 0) + (Ke >>> 26) | 0, Ke &= 67108863, g = Math.imul(_7, R7), w = Math.imul(_7, be), w = w + Math.imul(F7, R7) | 0, A = Math.imul(F7, be), g = g + Math.imul(l7, M7) | 0, w = w + Math.imul(l7, se) | 0, w = w + Math.imul(y7, M7) | 0, A = A + Math.imul(y7, se) | 0, g = g + Math.imul(u7, B7) | 0, w = w + Math.imul(u7, ne) | 0, w = w + Math.imul(m7, B7) | 0, A = A + Math.imul(m7, ne) | 0, g = g + Math.imul(o7, C7) | 0, w = w + Math.imul(o7, me) | 0, w = w + Math.imul(a7, C7) | 0, A = A + Math.imul(a7, me) | 0, g = g + Math.imul(D, D7) | 0, w = w + Math.imul(D, _e) | 0, w = w + Math.imul(W, D7) | 0, A = A + Math.imul(W, _e) | 0, g = g + Math.imul(n7, L7) | 0, w = w + Math.imul(n7, ve) | 0, w = w + Math.imul(K, L7) | 0, A = A + Math.imul(K, ve) | 0;
      var m0 = (T + g | 0) + ((w & 8191) << 13) | 0;
      T = (A + (w >>> 13) | 0) + (m0 >>> 26) | 0, m0 &= 67108863, g = Math.imul(_7, M7), w = Math.imul(_7, se), w = w + Math.imul(F7, M7) | 0, A = Math.imul(F7, se), g = g + Math.imul(l7, B7) | 0, w = w + Math.imul(l7, ne) | 0, w = w + Math.imul(y7, B7) | 0, A = A + Math.imul(y7, ne) | 0, g = g + Math.imul(u7, C7) | 0, w = w + Math.imul(u7, me) | 0, w = w + Math.imul(m7, C7) | 0, A = A + Math.imul(m7, me) | 0, g = g + Math.imul(o7, D7) | 0, w = w + Math.imul(o7, _e) | 0, w = w + Math.imul(a7, D7) | 0, A = A + Math.imul(a7, _e) | 0, g = g + Math.imul(D, L7) | 0, w = w + Math.imul(D, ve) | 0, w = w + Math.imul(W, L7) | 0, A = A + Math.imul(W, ve) | 0;
      var Qe = (T + g | 0) + ((w & 8191) << 13) | 0;
      T = (A + (w >>> 13) | 0) + (Qe >>> 26) | 0, Qe &= 67108863, g = Math.imul(_7, B7), w = Math.imul(_7, ne), w = w + Math.imul(F7, B7) | 0, A = Math.imul(F7, ne), g = g + Math.imul(l7, C7) | 0, w = w + Math.imul(l7, me) | 0, w = w + Math.imul(y7, C7) | 0, A = A + Math.imul(y7, me) | 0, g = g + Math.imul(u7, D7) | 0, w = w + Math.imul(u7, _e) | 0, w = w + Math.imul(m7, D7) | 0, A = A + Math.imul(m7, _e) | 0, g = g + Math.imul(o7, L7) | 0, w = w + Math.imul(o7, ve) | 0, w = w + Math.imul(a7, L7) | 0, A = A + Math.imul(a7, ve) | 0;
      var v0 = (T + g | 0) + ((w & 8191) << 13) | 0;
      T = (A + (w >>> 13) | 0) + (v0 >>> 26) | 0, v0 &= 67108863, g = Math.imul(_7, C7), w = Math.imul(_7, me), w = w + Math.imul(F7, C7) | 0, A = Math.imul(F7, me), g = g + Math.imul(l7, D7) | 0, w = w + Math.imul(l7, _e) | 0, w = w + Math.imul(y7, D7) | 0, A = A + Math.imul(y7, _e) | 0, g = g + Math.imul(u7, L7) | 0, w = w + Math.imul(u7, ve) | 0, w = w + Math.imul(m7, L7) | 0, A = A + Math.imul(m7, ve) | 0;
      var y0 = (T + g | 0) + ((w & 8191) << 13) | 0;
      T = (A + (w >>> 13) | 0) + (y0 >>> 26) | 0, y0 &= 67108863, g = Math.imul(_7, D7), w = Math.imul(_7, _e), w = w + Math.imul(F7, D7) | 0, A = Math.imul(F7, _e), g = g + Math.imul(l7, L7) | 0, w = w + Math.imul(l7, ve) | 0, w = w + Math.imul(y7, L7) | 0, A = A + Math.imul(y7, ve) | 0;
      var g0 = (T + g | 0) + ((w & 8191) << 13) | 0;
      T = (A + (w >>> 13) | 0) + (g0 >>> 26) | 0, g0 &= 67108863, g = Math.imul(_7, L7), w = Math.imul(_7, ve), w = w + Math.imul(F7, L7) | 0, A = Math.imul(F7, ve);
      var P0 = (T + g | 0) + ((w & 8191) << 13) | 0;
      return T = (A + (w >>> 13) | 0) + (P0 >>> 26) | 0, P0 &= 67108863, S[0] = J7, S[1] = ee, S[2] = We, S[3] = Ze, S[4] = Me, S[5] = Ye, S[6] = Xe, S[7] = p0, S[8] = Je, S[9] = h0, S[10] = b0, S[11] = Le, S[12] = Ke, S[13] = m0, S[14] = Qe, S[15] = v0, S[16] = y0, S[17] = g0, S[18] = P0, T !== 0 && (S[19] = T, d.length++), d;
    };
    Math.imul || (k = I);
    function P(O, u, p) {
      p.negative = u.negative ^ O.negative, p.length = O.length + u.length;
      for (var d = 0, c = 0, y = 0; y < p.length - 1; y++) {
        var S = c;
        c = 0;
        for (var T = d & 67108863, g = Math.min(y, u.length - 1), w = Math.max(0, y - O.length + 1); w <= g; w++) {
          var A = y - w, h = O.words[A] | 0, N = u.words[w] | 0, Y = h * N, t7 = Y & 67108863;
          S = S + (Y / 67108864 | 0) | 0, t7 = t7 + T | 0, T = t7 & 67108863, S = S + (t7 >>> 26) | 0, c += S >>> 26, S &= 67108863;
        }
        p.words[y] = T, d = S, S = c;
      }
      return d !== 0 ? p.words[y] = d : p.length--, p.strip();
    }
    function M(O, u, p) {
      var d = new R();
      return d.mulp(O, u, p);
    }
    i.prototype.mulTo = function(u, p) {
      var d, c = this.length + u.length;
      return this.length === 10 && u.length === 10 ? d = k(this, u, p) : c < 63 ? d = I(this, u, p) : c < 1024 ? d = P(this, u, p) : d = M(this, u, p), d;
    };
    function R(O, u) {
      this.x = O, this.y = u;
    }
    R.prototype.makeRBT = function(u) {
      for (var p = new Array(u), d = i.prototype._countBits(u) - 1, c = 0; c < u; c++)
        p[c] = this.revBin(c, d, u);
      return p;
    }, R.prototype.revBin = function(u, p, d) {
      if (u === 0 || u === d - 1)
        return u;
      for (var c = 0, y = 0; y < p; y++)
        c |= (u & 1) << p - y - 1, u >>= 1;
      return c;
    }, R.prototype.permute = function(u, p, d, c, y, S) {
      for (var T = 0; T < S; T++)
        c[T] = p[u[T]], y[T] = d[u[T]];
    }, R.prototype.transform = function(u, p, d, c, y, S) {
      this.permute(S, u, p, d, c, y);
      for (var T = 1; T < y; T <<= 1)
        for (var g = T << 1, w = Math.cos(2 * Math.PI / g), A = Math.sin(2 * Math.PI / g), h = 0; h < y; h += g)
          for (var N = w, Y = A, t7 = 0; t7 < T; t7++) {
            var H = d[h + t7], $ = c[h + t7], X = d[h + t7 + T], i7 = c[h + t7 + T], J = N * X - Y * i7;
            i7 = N * i7 + Y * X, X = J, d[h + t7] = H + X, c[h + t7] = $ + i7, d[h + t7 + T] = H - X, c[h + t7 + T] = $ - i7, t7 !== g && (J = w * N - A * Y, Y = w * Y + A * N, N = J);
          }
    }, R.prototype.guessLen13b = function(u, p) {
      var d = Math.max(p, u) | 1, c = d & 1, y = 0;
      for (d = d / 2 | 0; d; d = d >>> 1)
        y++;
      return 1 << y + 1 + c;
    }, R.prototype.conjugate = function(u, p, d) {
      if (!(d <= 1))
        for (var c = 0; c < d / 2; c++) {
          var y = u[c];
          u[c] = u[d - c - 1], u[d - c - 1] = y, y = p[c], p[c] = -p[d - c - 1], p[d - c - 1] = -y;
        }
    }, R.prototype.normalize13b = function(u, p) {
      for (var d = 0, c = 0; c < p / 2; c++) {
        var y = Math.round(u[2 * c + 1] / p) * 8192 + Math.round(u[2 * c] / p) + d;
        u[c] = y & 67108863, y < 67108864 ? d = 0 : d = y / 67108864 | 0;
      }
      return u;
    }, R.prototype.convert13b = function(u, p, d, c) {
      for (var y = 0, S = 0; S < p; S++)
        y = y + (u[S] | 0), d[2 * S] = y & 8191, y = y >>> 13, d[2 * S + 1] = y & 8191, y = y >>> 13;
      for (S = 2 * p; S < c; ++S)
        d[S] = 0;
      r(y === 0), r((y & -8192) === 0);
    }, R.prototype.stub = function(u) {
      for (var p = new Array(u), d = 0; d < u; d++)
        p[d] = 0;
      return p;
    }, R.prototype.mulp = function(u, p, d) {
      var c = 2 * this.guessLen13b(u.length, p.length), y = this.makeRBT(c), S = this.stub(c), T = new Array(c), g = new Array(c), w = new Array(c), A = new Array(c), h = new Array(c), N = new Array(c), Y = d.words;
      Y.length = c, this.convert13b(u.words, u.length, T, c), this.convert13b(p.words, p.length, A, c), this.transform(T, S, g, w, c, y), this.transform(A, S, h, N, c, y);
      for (var t7 = 0; t7 < c; t7++) {
        var H = g[t7] * h[t7] - w[t7] * N[t7];
        w[t7] = g[t7] * N[t7] + w[t7] * h[t7], g[t7] = H;
      }
      return this.conjugate(g, w, c), this.transform(g, w, Y, S, c, y), this.conjugate(Y, S, c), this.normalize13b(Y, c), d.negative = u.negative ^ p.negative, d.length = u.length + p.length, d.strip();
    }, i.prototype.mul = function(u) {
      var p = new i(null);
      return p.words = new Array(this.length + u.length), this.mulTo(u, p);
    }, i.prototype.mulf = function(u) {
      var p = new i(null);
      return p.words = new Array(this.length + u.length), M(this, u, p);
    }, i.prototype.imul = function(u) {
      return this.clone().mulTo(u, this);
    }, i.prototype.imuln = function(u) {
      r(typeof u == "number"), r(u < 67108864);
      for (var p = 0, d = 0; d < this.length; d++) {
        var c = (this.words[d] | 0) * u, y = (c & 67108863) + (p & 67108863);
        p >>= 26, p += c / 67108864 | 0, p += y >>> 26, this.words[d] = y & 67108863;
      }
      return p !== 0 && (this.words[d] = p, this.length++), this;
    }, i.prototype.muln = function(u) {
      return this.clone().imuln(u);
    }, i.prototype.sqr = function() {
      return this.mul(this);
    }, i.prototype.isqr = function() {
      return this.imul(this.clone());
    }, i.prototype.pow = function(u) {
      var p = x(u);
      if (p.length === 0)
        return new i(1);
      for (var d = this, c = 0; c < p.length && p[c] === 0; c++, d = d.sqr())
        ;
      if (++c < p.length)
        for (var y = d.sqr(); c < p.length; c++, y = y.sqr())
          p[c] !== 0 && (d = d.mul(y));
      return d;
    }, i.prototype.iushln = function(u) {
      r(typeof u == "number" && u >= 0);
      var p = u % 26, d = (u - p) / 26, c = 67108863 >>> 26 - p << 26 - p, y;
      if (p !== 0) {
        var S = 0;
        for (y = 0; y < this.length; y++) {
          var T = this.words[y] & c, g = (this.words[y] | 0) - T << p;
          this.words[y] = g | S, S = T >>> 26 - p;
        }
        S && (this.words[y] = S, this.length++);
      }
      if (d !== 0) {
        for (y = this.length - 1; y >= 0; y--)
          this.words[y + d] = this.words[y];
        for (y = 0; y < d; y++)
          this.words[y] = 0;
        this.length += d;
      }
      return this.strip();
    }, i.prototype.ishln = function(u) {
      return r(this.negative === 0), this.iushln(u);
    }, i.prototype.iushrn = function(u, p, d) {
      r(typeof u == "number" && u >= 0);
      var c;
      p ? c = (p - p % 26) / 26 : c = 0;
      var y = u % 26, S = Math.min((u - y) / 26, this.length), T = 67108863 ^ 67108863 >>> y << y, g = d;
      if (c -= S, c = Math.max(0, c), g) {
        for (var w = 0; w < S; w++)
          g.words[w] = this.words[w];
        g.length = S;
      }
      if (S !== 0)
        if (this.length > S)
          for (this.length -= S, w = 0; w < this.length; w++)
            this.words[w] = this.words[w + S];
        else
          this.words[0] = 0, this.length = 1;
      var A = 0;
      for (w = this.length - 1; w >= 0 && (A !== 0 || w >= c); w--) {
        var h = this.words[w] | 0;
        this.words[w] = A << 26 - y | h >>> y, A = h & T;
      }
      return g && A !== 0 && (g.words[g.length++] = A), this.length === 0 && (this.words[0] = 0, this.length = 1), this.strip();
    }, i.prototype.ishrn = function(u, p, d) {
      return r(this.negative === 0), this.iushrn(u, p, d);
    }, i.prototype.shln = function(u) {
      return this.clone().ishln(u);
    }, i.prototype.ushln = function(u) {
      return this.clone().iushln(u);
    }, i.prototype.shrn = function(u) {
      return this.clone().ishrn(u);
    }, i.prototype.ushrn = function(u) {
      return this.clone().iushrn(u);
    }, i.prototype.testn = function(u) {
      r(typeof u == "number" && u >= 0);
      var p = u % 26, d = (u - p) / 26, c = 1 << p;
      if (this.length <= d)
        return !1;
      var y = this.words[d];
      return !!(y & c);
    }, i.prototype.imaskn = function(u) {
      r(typeof u == "number" && u >= 0);
      var p = u % 26, d = (u - p) / 26;
      if (r(this.negative === 0, "imaskn works only with positive numbers"), this.length <= d)
        return this;
      if (p !== 0 && d++, this.length = Math.min(d, this.length), p !== 0) {
        var c = 67108863 ^ 67108863 >>> p << p;
        this.words[this.length - 1] &= c;
      }
      return this.strip();
    }, i.prototype.maskn = function(u) {
      return this.clone().imaskn(u);
    }, i.prototype.iaddn = function(u) {
      return r(typeof u == "number"), r(u < 67108864), u < 0 ? this.isubn(-u) : this.negative !== 0 ? this.length === 1 && (this.words[0] | 0) < u ? (this.words[0] = u - (this.words[0] | 0), this.negative = 0, this) : (this.negative = 0, this.isubn(u), this.negative = 1, this) : this._iaddn(u);
    }, i.prototype._iaddn = function(u) {
      this.words[0] += u;
      for (var p = 0; p < this.length && this.words[p] >= 67108864; p++)
        this.words[p] -= 67108864, p === this.length - 1 ? this.words[p + 1] = 1 : this.words[p + 1]++;
      return this.length = Math.max(this.length, p + 1), this;
    }, i.prototype.isubn = function(u) {
      if (r(typeof u == "number"), r(u < 67108864), u < 0)
        return this.iaddn(-u);
      if (this.negative !== 0)
        return this.negative = 0, this.iaddn(u), this.negative = 1, this;
      if (this.words[0] -= u, this.length === 1 && this.words[0] < 0)
        this.words[0] = -this.words[0], this.negative = 1;
      else
        for (var p = 0; p < this.length && this.words[p] < 0; p++)
          this.words[p] += 67108864, this.words[p + 1] -= 1;
      return this.strip();
    }, i.prototype.addn = function(u) {
      return this.clone().iaddn(u);
    }, i.prototype.subn = function(u) {
      return this.clone().isubn(u);
    }, i.prototype.iabs = function() {
      return this.negative = 0, this;
    }, i.prototype.abs = function() {
      return this.clone().iabs();
    }, i.prototype._ishlnsubmul = function(u, p, d) {
      var c = u.length + d, y;
      this._expand(c);
      var S, T = 0;
      for (y = 0; y < u.length; y++) {
        S = (this.words[y + d] | 0) + T;
        var g = (u.words[y] | 0) * p;
        S -= g & 67108863, T = (S >> 26) - (g / 67108864 | 0), this.words[y + d] = S & 67108863;
      }
      for (; y < this.length - d; y++)
        S = (this.words[y + d] | 0) + T, T = S >> 26, this.words[y + d] = S & 67108863;
      if (T === 0)
        return this.strip();
      for (r(T === -1), T = 0, y = 0; y < this.length; y++)
        S = -(this.words[y] | 0) + T, T = S >> 26, this.words[y] = S & 67108863;
      return this.negative = 1, this.strip();
    }, i.prototype._wordDiv = function(u, p) {
      var d = this.length - u.length, c = this.clone(), y = u, S = y.words[y.length - 1] | 0, T = this._countBits(S);
      d = 26 - T, d !== 0 && (y = y.ushln(d), c.iushln(d), S = y.words[y.length - 1] | 0);
      var g = c.length - y.length, w;
      if (p !== "mod") {
        w = new i(null), w.length = g + 1, w.words = new Array(w.length);
        for (var A = 0; A < w.length; A++)
          w.words[A] = 0;
      }
      var h = c.clone()._ishlnsubmul(y, 1, g);
      h.negative === 0 && (c = h, w && (w.words[g] = 1));
      for (var N = g - 1; N >= 0; N--) {
        var Y = (c.words[y.length + N] | 0) * 67108864 + (c.words[y.length + N - 1] | 0);
        for (Y = Math.min(Y / S | 0, 67108863), c._ishlnsubmul(y, Y, N); c.negative !== 0; )
          Y--, c.negative = 0, c._ishlnsubmul(y, 1, N), c.isZero() || (c.negative ^= 1);
        w && (w.words[N] = Y);
      }
      return w && w.strip(), c.strip(), p !== "div" && d !== 0 && c.iushrn(d), {
        div: w || null,
        mod: c
      };
    }, i.prototype.divmod = function(u, p, d) {
      if (r(!u.isZero()), this.isZero())
        return {
          div: new i(0),
          mod: new i(0)
        };
      var c, y, S;
      return this.negative !== 0 && u.negative === 0 ? (S = this.neg().divmod(u, p), p !== "mod" && (c = S.div.neg()), p !== "div" && (y = S.mod.neg(), d && y.negative !== 0 && y.iadd(u)), {
        div: c,
        mod: y
      }) : this.negative === 0 && u.negative !== 0 ? (S = this.divmod(u.neg(), p), p !== "mod" && (c = S.div.neg()), {
        div: c,
        mod: S.mod
      }) : this.negative & u.negative ? (S = this.neg().divmod(u.neg(), p), p !== "div" && (y = S.mod.neg(), d && y.negative !== 0 && y.isub(u)), {
        div: S.div,
        mod: y
      }) : u.length > this.length || this.cmp(u) < 0 ? {
        div: new i(0),
        mod: this
      } : u.length === 1 ? p === "div" ? {
        div: this.divn(u.words[0]),
        mod: null
      } : p === "mod" ? {
        div: null,
        mod: new i(this.modn(u.words[0]))
      } : {
        div: this.divn(u.words[0]),
        mod: new i(this.modn(u.words[0]))
      } : this._wordDiv(u, p);
    }, i.prototype.div = function(u) {
      return this.divmod(u, "div", !1).div;
    }, i.prototype.mod = function(u) {
      return this.divmod(u, "mod", !1).mod;
    }, i.prototype.umod = function(u) {
      return this.divmod(u, "mod", !0).mod;
    }, i.prototype.divRound = function(u) {
      var p = this.divmod(u);
      if (p.mod.isZero())
        return p.div;
      var d = p.div.negative !== 0 ? p.mod.isub(u) : p.mod, c = u.ushrn(1), y = u.andln(1), S = d.cmp(c);
      return S < 0 || y === 1 && S === 0 ? p.div : p.div.negative !== 0 ? p.div.isubn(1) : p.div.iaddn(1);
    }, i.prototype.modn = function(u) {
      r(u <= 67108863);
      for (var p = (1 << 26) % u, d = 0, c = this.length - 1; c >= 0; c--)
        d = (p * d + (this.words[c] | 0)) % u;
      return d;
    }, i.prototype.idivn = function(u) {
      r(u <= 67108863);
      for (var p = 0, d = this.length - 1; d >= 0; d--) {
        var c = (this.words[d] | 0) + p * 67108864;
        this.words[d] = c / u | 0, p = c % u;
      }
      return this.strip();
    }, i.prototype.divn = function(u) {
      return this.clone().idivn(u);
    }, i.prototype.egcd = function(u) {
      r(u.negative === 0), r(!u.isZero());
      var p = this, d = u.clone();
      p.negative !== 0 ? p = p.umod(u) : p = p.clone();
      for (var c = new i(1), y = new i(0), S = new i(0), T = new i(1), g = 0; p.isEven() && d.isEven(); )
        p.iushrn(1), d.iushrn(1), ++g;
      for (var w = d.clone(), A = p.clone(); !p.isZero(); ) {
        for (var h = 0, N = 1; !(p.words[0] & N) && h < 26; ++h, N <<= 1)
          ;
        if (h > 0)
          for (p.iushrn(h); h-- > 0; )
            (c.isOdd() || y.isOdd()) && (c.iadd(w), y.isub(A)), c.iushrn(1), y.iushrn(1);
        for (var Y = 0, t7 = 1; !(d.words[0] & t7) && Y < 26; ++Y, t7 <<= 1)
          ;
        if (Y > 0)
          for (d.iushrn(Y); Y-- > 0; )
            (S.isOdd() || T.isOdd()) && (S.iadd(w), T.isub(A)), S.iushrn(1), T.iushrn(1);
        p.cmp(d) >= 0 ? (p.isub(d), c.isub(S), y.isub(T)) : (d.isub(p), S.isub(c), T.isub(y));
      }
      return {
        a: S,
        b: T,
        gcd: d.iushln(g)
      };
    }, i.prototype._invmp = function(u) {
      r(u.negative === 0), r(!u.isZero());
      var p = this, d = u.clone();
      p.negative !== 0 ? p = p.umod(u) : p = p.clone();
      for (var c = new i(1), y = new i(0), S = d.clone(); p.cmpn(1) > 0 && d.cmpn(1) > 0; ) {
        for (var T = 0, g = 1; !(p.words[0] & g) && T < 26; ++T, g <<= 1)
          ;
        if (T > 0)
          for (p.iushrn(T); T-- > 0; )
            c.isOdd() && c.iadd(S), c.iushrn(1);
        for (var w = 0, A = 1; !(d.words[0] & A) && w < 26; ++w, A <<= 1)
          ;
        if (w > 0)
          for (d.iushrn(w); w-- > 0; )
            y.isOdd() && y.iadd(S), y.iushrn(1);
        p.cmp(d) >= 0 ? (p.isub(d), c.isub(y)) : (d.isub(p), y.isub(c));
      }
      var h;
      return p.cmpn(1) === 0 ? h = c : h = y, h.cmpn(0) < 0 && h.iadd(u), h;
    }, i.prototype.gcd = function(u) {
      if (this.isZero())
        return u.abs();
      if (u.isZero())
        return this.abs();
      var p = this.clone(), d = u.clone();
      p.negative = 0, d.negative = 0;
      for (var c = 0; p.isEven() && d.isEven(); c++)
        p.iushrn(1), d.iushrn(1);
      do {
        for (; p.isEven(); )
          p.iushrn(1);
        for (; d.isEven(); )
          d.iushrn(1);
        var y = p.cmp(d);
        if (y < 0) {
          var S = p;
          p = d, d = S;
        } else if (y === 0 || d.cmpn(1) === 0)
          break;
        p.isub(d);
      } while (!0);
      return d.iushln(c);
    }, i.prototype.invm = function(u) {
      return this.egcd(u).a.umod(u);
    }, i.prototype.isEven = function() {
      return (this.words[0] & 1) === 0;
    }, i.prototype.isOdd = function() {
      return (this.words[0] & 1) === 1;
    }, i.prototype.andln = function(u) {
      return this.words[0] & u;
    }, i.prototype.bincn = function(u) {
      r(typeof u == "number");
      var p = u % 26, d = (u - p) / 26, c = 1 << p;
      if (this.length <= d)
        return this._expand(d + 1), this.words[d] |= c, this;
      for (var y = c, S = d; y !== 0 && S < this.length; S++) {
        var T = this.words[S] | 0;
        T += y, y = T >>> 26, T &= 67108863, this.words[S] = T;
      }
      return y !== 0 && (this.words[S] = y, this.length++), this;
    }, i.prototype.isZero = function() {
      return this.length === 1 && this.words[0] === 0;
    }, i.prototype.cmpn = function(u) {
      var p = u < 0;
      if (this.negative !== 0 && !p)
        return -1;
      if (this.negative === 0 && p)
        return 1;
      this.strip();
      var d;
      if (this.length > 1)
        d = 1;
      else {
        p && (u = -u), r(u <= 67108863, "Number is too big");
        var c = this.words[0] | 0;
        d = c === u ? 0 : c < u ? -1 : 1;
      }
      return this.negative !== 0 ? -d | 0 : d;
    }, i.prototype.cmp = function(u) {
      if (this.negative !== 0 && u.negative === 0)
        return -1;
      if (this.negative === 0 && u.negative !== 0)
        return 1;
      var p = this.ucmp(u);
      return this.negative !== 0 ? -p | 0 : p;
    }, i.prototype.ucmp = function(u) {
      if (this.length > u.length)
        return 1;
      if (this.length < u.length)
        return -1;
      for (var p = 0, d = this.length - 1; d >= 0; d--) {
        var c = this.words[d] | 0, y = u.words[d] | 0;
        if (c !== y) {
          c < y ? p = -1 : c > y && (p = 1);
          break;
        }
      }
      return p;
    }, i.prototype.gtn = function(u) {
      return this.cmpn(u) === 1;
    }, i.prototype.gt = function(u) {
      return this.cmp(u) === 1;
    }, i.prototype.gten = function(u) {
      return this.cmpn(u) >= 0;
    }, i.prototype.gte = function(u) {
      return this.cmp(u) >= 0;
    }, i.prototype.ltn = function(u) {
      return this.cmpn(u) === -1;
    }, i.prototype.lt = function(u) {
      return this.cmp(u) === -1;
    }, i.prototype.lten = function(u) {
      return this.cmpn(u) <= 0;
    }, i.prototype.lte = function(u) {
      return this.cmp(u) <= 0;
    }, i.prototype.eqn = function(u) {
      return this.cmpn(u) === 0;
    }, i.prototype.eq = function(u) {
      return this.cmp(u) === 0;
    }, i.red = function(u) {
      return new z(u);
    }, i.prototype.toRed = function(u) {
      return r(!this.red, "Already a number in reduction context"), r(this.negative === 0, "red works only with positives"), u.convertTo(this)._forceRed(u);
    }, i.prototype.fromRed = function() {
      return r(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
    }, i.prototype._forceRed = function(u) {
      return this.red = u, this;
    }, i.prototype.forceRed = function(u) {
      return r(!this.red, "Already a number in reduction context"), this._forceRed(u);
    }, i.prototype.redAdd = function(u) {
      return r(this.red, "redAdd works only with red numbers"), this.red.add(this, u);
    }, i.prototype.redIAdd = function(u) {
      return r(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, u);
    }, i.prototype.redSub = function(u) {
      return r(this.red, "redSub works only with red numbers"), this.red.sub(this, u);
    }, i.prototype.redISub = function(u) {
      return r(this.red, "redISub works only with red numbers"), this.red.isub(this, u);
    }, i.prototype.redShl = function(u) {
      return r(this.red, "redShl works only with red numbers"), this.red.shl(this, u);
    }, i.prototype.redMul = function(u) {
      return r(this.red, "redMul works only with red numbers"), this.red._verify2(this, u), this.red.mul(this, u);
    }, i.prototype.redIMul = function(u) {
      return r(this.red, "redMul works only with red numbers"), this.red._verify2(this, u), this.red.imul(this, u);
    }, i.prototype.redSqr = function() {
      return r(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
    }, i.prototype.redISqr = function() {
      return r(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
    }, i.prototype.redSqrt = function() {
      return r(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
    }, i.prototype.redInvm = function() {
      return r(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
    }, i.prototype.redNeg = function() {
      return r(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
    }, i.prototype.redPow = function(u) {
      return r(this.red && !u.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, u);
    };
    var F = {
      k256: null,
      p224: null,
      p192: null,
      p25519: null
    };
    function C(O, u) {
      this.name = O, this.p = new i(u, 16), this.n = this.p.bitLength(), this.k = new i(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
    }
    C.prototype._tmp = function() {
      var u = new i(null);
      return u.words = new Array(Math.ceil(this.n / 13)), u;
    }, C.prototype.ireduce = function(u) {
      var p = u, d;
      do
        this.split(p, this.tmp), p = this.imulK(p), p = p.iadd(this.tmp), d = p.bitLength();
      while (d > this.n);
      var c = d < this.n ? -1 : p.ucmp(this.p);
      return c === 0 ? (p.words[0] = 0, p.length = 1) : c > 0 ? p.isub(this.p) : p.strip !== void 0 ? p.strip() : p._strip(), p;
    }, C.prototype.split = function(u, p) {
      u.iushrn(this.n, 0, p);
    }, C.prototype.imulK = function(u) {
      return u.imul(this.k);
    };
    function L() {
      C.call(
        this,
        "k256",
        "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f"
      );
    }
    f(L, C), L.prototype.split = function(u, p) {
      for (var d = 4194303, c = Math.min(u.length, 9), y = 0; y < c; y++)
        p.words[y] = u.words[y];
      if (p.length = c, u.length <= 9) {
        u.words[0] = 0, u.length = 1;
        return;
      }
      var S = u.words[9];
      for (p.words[p.length++] = S & d, y = 10; y < u.length; y++) {
        var T = u.words[y] | 0;
        u.words[y - 10] = (T & d) << 4 | S >>> 22, S = T;
      }
      S >>>= 22, u.words[y - 10] = S, S === 0 && u.length > 10 ? u.length -= 10 : u.length -= 9;
    }, L.prototype.imulK = function(u) {
      u.words[u.length] = 0, u.words[u.length + 1] = 0, u.length += 2;
      for (var p = 0, d = 0; d < u.length; d++) {
        var c = u.words[d] | 0;
        p += c * 977, u.words[d] = p & 67108863, p = c * 64 + (p / 67108864 | 0);
      }
      return u.words[u.length - 1] === 0 && (u.length--, u.words[u.length - 1] === 0 && u.length--), u;
    };
    function U() {
      C.call(
        this,
        "p224",
        "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001"
      );
    }
    f(U, C);
    function q() {
      C.call(
        this,
        "p192",
        "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff"
      );
    }
    f(q, C);
    function Z() {
      C.call(
        this,
        "25519",
        "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed"
      );
    }
    f(Z, C), Z.prototype.imulK = function(u) {
      for (var p = 0, d = 0; d < u.length; d++) {
        var c = (u.words[d] | 0) * 19 + p, y = c & 67108863;
        c >>>= 26, u.words[d] = y, p = c;
      }
      return p !== 0 && (u.words[u.length++] = p), u;
    }, i._prime = function(u) {
      if (F[u])
        return F[u];
      var p;
      if (u === "k256")
        p = new L();
      else if (u === "p224")
        p = new U();
      else if (u === "p192")
        p = new q();
      else if (u === "p25519")
        p = new Z();
      else
        throw new Error("Unknown prime " + u);
      return F[u] = p, p;
    };
    function z(O) {
      if (typeof O == "string") {
        var u = i._prime(O);
        this.m = u.p, this.prime = u;
      } else
        r(O.gtn(1), "modulus must be greater than 1"), this.m = O, this.prime = null;
    }
    z.prototype._verify1 = function(u) {
      r(u.negative === 0, "red works only with positives"), r(u.red, "red works only with red numbers");
    }, z.prototype._verify2 = function(u, p) {
      r((u.negative | p.negative) === 0, "red works only with positives"), r(
        u.red && u.red === p.red,
        "red works only with red numbers"
      );
    }, z.prototype.imod = function(u) {
      return this.prime ? this.prime.ireduce(u)._forceRed(this) : u.umod(this.m)._forceRed(this);
    }, z.prototype.neg = function(u) {
      return u.isZero() ? u.clone() : this.m.sub(u)._forceRed(this);
    }, z.prototype.add = function(u, p) {
      this._verify2(u, p);
      var d = u.add(p);
      return d.cmp(this.m) >= 0 && d.isub(this.m), d._forceRed(this);
    }, z.prototype.iadd = function(u, p) {
      this._verify2(u, p);
      var d = u.iadd(p);
      return d.cmp(this.m) >= 0 && d.isub(this.m), d;
    }, z.prototype.sub = function(u, p) {
      this._verify2(u, p);
      var d = u.sub(p);
      return d.cmpn(0) < 0 && d.iadd(this.m), d._forceRed(this);
    }, z.prototype.isub = function(u, p) {
      this._verify2(u, p);
      var d = u.isub(p);
      return d.cmpn(0) < 0 && d.iadd(this.m), d;
    }, z.prototype.shl = function(u, p) {
      return this._verify1(u), this.imod(u.ushln(p));
    }, z.prototype.imul = function(u, p) {
      return this._verify2(u, p), this.imod(u.imul(p));
    }, z.prototype.mul = function(u, p) {
      return this._verify2(u, p), this.imod(u.mul(p));
    }, z.prototype.isqr = function(u) {
      return this.imul(u, u.clone());
    }, z.prototype.sqr = function(u) {
      return this.mul(u, u);
    }, z.prototype.sqrt = function(u) {
      if (u.isZero())
        return u.clone();
      var p = this.m.andln(3);
      if (r(p % 2 === 1), p === 3) {
        var d = this.m.add(new i(1)).iushrn(2);
        return this.pow(u, d);
      }
      for (var c = this.m.subn(1), y = 0; !c.isZero() && c.andln(1) === 0; )
        y++, c.iushrn(1);
      r(!c.isZero());
      var S = new i(1).toRed(this), T = S.redNeg(), g = this.m.subn(1).iushrn(1), w = this.m.bitLength();
      for (w = new i(2 * w * w).toRed(this); this.pow(w, g).cmp(T) !== 0; )
        w.redIAdd(T);
      for (var A = this.pow(w, c), h = this.pow(u, c.addn(1).iushrn(1)), N = this.pow(u, c), Y = y; N.cmp(S) !== 0; ) {
        for (var t7 = N, H = 0; t7.cmp(S) !== 0; H++)
          t7 = t7.redSqr();
        r(H < Y);
        var $ = this.pow(A, new i(1).iushln(Y - H - 1));
        h = h.redMul($), A = $.redSqr(), N = N.redMul(A), Y = H;
      }
      return h;
    }, z.prototype.invm = function(u) {
      var p = u._invmp(this.m);
      return p.negative !== 0 ? (p.negative = 0, this.imod(p).redNeg()) : this.imod(p);
    }, z.prototype.pow = function(u, p) {
      if (p.isZero())
        return new i(1).toRed(this);
      if (p.cmpn(1) === 0)
        return u.clone();
      var d = 4, c = new Array(1 << d);
      c[0] = new i(1).toRed(this), c[1] = u;
      for (var y = 2; y < c.length; y++)
        c[y] = this.mul(c[y - 1], u);
      var S = c[0], T = 0, g = 0, w = p.bitLength() % 26;
      for (w === 0 && (w = 26), y = p.length - 1; y >= 0; y--) {
        for (var A = p.words[y], h = w - 1; h >= 0; h--) {
          var N = A >> h & 1;
          if (S !== c[0] && (S = this.sqr(S)), N === 0 && T === 0) {
            g = 0;
            continue;
          }
          T <<= 1, T |= N, g++, !(g !== d && (y !== 0 || h !== 0)) && (S = this.mul(S, c[T]), g = 0, T = 0);
        }
        w = 26;
      }
      return S;
    }, z.prototype.convertTo = function(u) {
      var p = u.umod(this.m);
      return p === u ? p.clone() : p;
    }, z.prototype.convertFrom = function(u) {
      var p = u.clone();
      return p.red = null, p;
    }, i.mont = function(u) {
      return new G(u);
    };
    function G(O) {
      z.call(this, O), this.shift = this.m.bitLength(), this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26), this.r = new i(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
    }
    f(G, z), G.prototype.convertTo = function(u) {
      return this.imod(u.ushln(this.shift));
    }, G.prototype.convertFrom = function(u) {
      var p = this.imod(u.mul(this.rinv));
      return p.red = null, p;
    }, G.prototype.imul = function(u, p) {
      if (u.isZero() || p.isZero())
        return u.words[0] = 0, u.length = 1, u;
      var d = u.imul(p), c = d.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), y = d.isub(c).iushrn(this.shift), S = y;
      return y.cmp(this.m) >= 0 ? S = y.isub(this.m) : y.cmpn(0) < 0 && (S = y.iadd(this.m)), S._forceRed(this);
    }, G.prototype.mul = function(u, p) {
      if (u.isZero() || p.isZero())
        return new i(0)._forceRed(this);
      var d = u.mul(p), c = d.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), y = d.isub(c).iushrn(this.shift), S = y;
      return y.cmp(this.m) >= 0 ? S = y.isub(this.m) : y.cmpn(0) < 0 && (S = y.iadd(this.m)), S._forceRed(this);
    }, G.prototype.invm = function(u) {
      var p = this.imod(u._invmp(this.m).mul(this.r2));
      return p._forceRed(this);
    };
  })(e, I7);
})(Hs);
var u0 = Hs.exports, m5 = mh;
function mh(e, t) {
  if (!e)
    throw new Error(t || "Assertion failed");
}
mh.equal = function(t, a, r) {
  if (t != a)
    throw new Error(r || "Assertion failed: " + t + " != " + a);
};
var Us = {};
(function(e) {
  var t = e;
  function a(i, n) {
    if (Array.isArray(i))
      return i.slice();
    if (!i)
      return [];
    var o = [];
    if (typeof i != "string") {
      for (var s = 0; s < i.length; s++)
        o[s] = i[s] | 0;
      return o;
    }
    if (n === "hex") {
      i = i.replace(/[^a-z0-9]+/ig, ""), i.length % 2 !== 0 && (i = "0" + i);
      for (var s = 0; s < i.length; s += 2)
        o.push(parseInt(i[s] + i[s + 1], 16));
    } else
      for (var s = 0; s < i.length; s++) {
        var b = i.charCodeAt(s), l = b >> 8, v = b & 255;
        l ? o.push(l, v) : o.push(v);
      }
    return o;
  }
  t.toArray = a;
  function r(i) {
    return i.length === 1 ? "0" + i : i;
  }
  t.zero2 = r;
  function f(i) {
    for (var n = "", o = 0; o < i.length; o++)
      n += r(i[o].toString(16));
    return n;
  }
  t.toHex = f, t.encode = function(n, o) {
    return o === "hex" ? f(n) : n;
  };
})(Us);
(function(e) {
  var t = e, a = u0, r = m5, f = Us;
  t.assert = r, t.toArray = f.toArray, t.zero2 = f.zero2, t.toHex = f.toHex, t.encode = f.encode;
  function i(l, v, m) {
    var x = new Array(Math.max(l.bitLength(), m) + 1);
    x.fill(0);
    for (var I = 1 << v + 1, k = l.clone(), P = 0; P < x.length; P++) {
      var M, R = k.andln(I - 1);
      k.isOdd() ? (R > (I >> 1) - 1 ? M = (I >> 1) - R : M = R, k.isubn(M)) : M = 0, x[P] = M, k.iushrn(1);
    }
    return x;
  }
  t.getNAF = i;
  function n(l, v) {
    var m = [
      [],
      []
    ];
    l = l.clone(), v = v.clone();
    for (var x = 0, I = 0, k; l.cmpn(-x) > 0 || v.cmpn(-I) > 0; ) {
      var P = l.andln(3) + x & 3, M = v.andln(3) + I & 3;
      P === 3 && (P = -1), M === 3 && (M = -1);
      var R;
      P & 1 ? (k = l.andln(7) + x & 7, (k === 3 || k === 5) && M === 2 ? R = -P : R = P) : R = 0, m[0].push(R);
      var F;
      M & 1 ? (k = v.andln(7) + I & 7, (k === 3 || k === 5) && P === 2 ? F = -M : F = M) : F = 0, m[1].push(F), 2 * x === R + 1 && (x = 1 - x), 2 * I === F + 1 && (I = 1 - I), l.iushrn(1), v.iushrn(1);
    }
    return m;
  }
  t.getJSF = n;
  function o(l, v, m) {
    var x = "_" + v;
    l.prototype[v] = function() {
      return this[x] !== void 0 ? this[x] : this[x] = m.call(this);
    };
  }
  t.cachedProperty = o;
  function s(l) {
    return typeof l == "string" ? t.toArray(l, "hex") : l;
  }
  t.parseBytes = s;
  function b(l) {
    return new a(l, "hex", "le");
  }
  t.intFromLE = b;
})(J0);
var T6 = { exports: {} }, re = {}, To = { exports: {} }, Ao = { exports: {} };
/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
(function(e, t) {
  var a = Q, r = a.Buffer;
  function f(n, o) {
    for (var s in n)
      o[s] = n[s];
  }
  r.from && r.alloc && r.allocUnsafe && r.allocUnsafeSlow ? e.exports = a : (f(a, t), t.Buffer = i);
  function i(n, o, s) {
    return r(n, o, s);
  }
  i.prototype = Object.create(r.prototype), f(r, i), i.from = function(n, o, s) {
    if (typeof n == "number")
      throw new TypeError("Argument must not be a number");
    return r(n, o, s);
  }, i.alloc = function(n, o, s) {
    if (typeof n != "number")
      throw new TypeError("Argument must be a number");
    var b = r(n);
    return o !== void 0 ? typeof s == "string" ? b.fill(o, s) : b.fill(o) : b.fill(0), b;
  }, i.allocUnsafe = function(n) {
    if (typeof n != "number")
      throw new TypeError("Argument must be a number");
    return r(n);
  }, i.allocUnsafeSlow = function(n) {
    if (typeof n != "number")
      throw new TypeError("Argument must be a number");
    return a.SlowBuffer(n);
  };
})(Ao, Ao.exports);
var fe = Ao.exports, yn = 65536, Jw = 4294967295;
function Qw() {
  throw new Error(`Secure random number generation is not supported by this browser.
Use Chrome, Firefox or Internet Explorer 11`);
}
var eS = fe.Buffer, Sf = I7.crypto || I7.msCrypto;
Sf && Sf.getRandomValues ? To.exports = tS : To.exports = Qw;
function tS(e, t) {
  if (e > Jw)
    throw new RangeError("requested too many random bytes");
  var a = eS.allocUnsafe(e);
  if (e > 0)
    if (e > yn)
      for (var r = 0; r < e; r += yn)
        Sf.getRandomValues(a.slice(r, r + yn));
    else
      Sf.getRandomValues(a);
  return typeof t == "function" ? g7.nextTick(function() {
    t(null, a);
  }) : a;
}
var x1 = To.exports, A6 = { exports: {} }, Fc;
function X7() {
  return Fc || (Fc = 1, typeof Object.create == "function" ? A6.exports = function(t, a) {
    a && (t.super_ = a, t.prototype = Object.create(a.prototype, {
      constructor: {
        value: t,
        enumerable: !1,
        writable: !0,
        configurable: !0
      }
    }));
  } : A6.exports = function(t, a) {
    if (a) {
      t.super_ = a;
      var r = function() {
      };
      r.prototype = a.prototype, t.prototype = new r(), t.prototype.constructor = t;
    }
  }), A6.exports;
}
var Io = { exports: {} }, I6 = { exports: {} }, Hc;
function gt() {
  if (Hc)
    return I6.exports;
  Hc = 1;
  var e = typeof Reflect == "object" ? Reflect : null, t = e && typeof e.apply == "function" ? e.apply : function(L, U, q) {
    return Function.prototype.apply.call(L, U, q);
  }, a;
  e && typeof e.ownKeys == "function" ? a = e.ownKeys : Object.getOwnPropertySymbols ? a = function(L) {
    return Object.getOwnPropertyNames(L).concat(Object.getOwnPropertySymbols(L));
  } : a = function(L) {
    return Object.getOwnPropertyNames(L);
  };
  function r(C) {
    console && console.warn && console.warn(C);
  }
  var f = Number.isNaN || function(L) {
    return L !== L;
  };
  function i() {
    i.init.call(this);
  }
  I6.exports = i, I6.exports.once = M, i.EventEmitter = i, i.prototype._events = void 0, i.prototype._eventsCount = 0, i.prototype._maxListeners = void 0;
  var n = 10;
  function o(C) {
    if (typeof C != "function")
      throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof C);
  }
  Object.defineProperty(i, "defaultMaxListeners", {
    enumerable: !0,
    get: function() {
      return n;
    },
    set: function(C) {
      if (typeof C != "number" || C < 0 || f(C))
        throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + C + ".");
      n = C;
    }
  }), i.init = function() {
    (this._events === void 0 || this._events === Object.getPrototypeOf(this)._events) && (this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || void 0;
  }, i.prototype.setMaxListeners = function(L) {
    if (typeof L != "number" || L < 0 || f(L))
      throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + L + ".");
    return this._maxListeners = L, this;
  };
  function s(C) {
    return C._maxListeners === void 0 ? i.defaultMaxListeners : C._maxListeners;
  }
  i.prototype.getMaxListeners = function() {
    return s(this);
  }, i.prototype.emit = function(L) {
    for (var U = [], q = 1; q < arguments.length; q++)
      U.push(arguments[q]);
    var Z = L === "error", z = this._events;
    if (z !== void 0)
      Z = Z && z.error === void 0;
    else if (!Z)
      return !1;
    if (Z) {
      var G;
      if (U.length > 0 && (G = U[0]), G instanceof Error)
        throw G;
      var O = new Error("Unhandled error." + (G ? " (" + G.message + ")" : ""));
      throw O.context = G, O;
    }
    var u = z[L];
    if (u === void 0)
      return !1;
    if (typeof u == "function")
      t(u, this, U);
    else
      for (var p = u.length, d = I(u, p), q = 0; q < p; ++q)
        t(d[q], this, U);
    return !0;
  };
  function b(C, L, U, q) {
    var Z, z, G;
    if (o(U), z = C._events, z === void 0 ? (z = C._events = /* @__PURE__ */ Object.create(null), C._eventsCount = 0) : (z.newListener !== void 0 && (C.emit(
      "newListener",
      L,
      U.listener ? U.listener : U
    ), z = C._events), G = z[L]), G === void 0)
      G = z[L] = U, ++C._eventsCount;
    else if (typeof G == "function" ? G = z[L] = q ? [U, G] : [G, U] : q ? G.unshift(U) : G.push(U), Z = s(C), Z > 0 && G.length > Z && !G.warned) {
      G.warned = !0;
      var O = new Error("Possible EventEmitter memory leak detected. " + G.length + " " + String(L) + " listeners added. Use emitter.setMaxListeners() to increase limit");
      O.name = "MaxListenersExceededWarning", O.emitter = C, O.type = L, O.count = G.length, r(O);
    }
    return C;
  }
  i.prototype.addListener = function(L, U) {
    return b(this, L, U, !1);
  }, i.prototype.on = i.prototype.addListener, i.prototype.prependListener = function(L, U) {
    return b(this, L, U, !0);
  };
  function l() {
    if (!this.fired)
      return this.target.removeListener(this.type, this.wrapFn), this.fired = !0, arguments.length === 0 ? this.listener.call(this.target) : this.listener.apply(this.target, arguments);
  }
  function v(C, L, U) {
    var q = { fired: !1, wrapFn: void 0, target: C, type: L, listener: U }, Z = l.bind(q);
    return Z.listener = U, q.wrapFn = Z, Z;
  }
  i.prototype.once = function(L, U) {
    return o(U), this.on(L, v(this, L, U)), this;
  }, i.prototype.prependOnceListener = function(L, U) {
    return o(U), this.prependListener(L, v(this, L, U)), this;
  }, i.prototype.removeListener = function(L, U) {
    var q, Z, z, G, O;
    if (o(U), Z = this._events, Z === void 0)
      return this;
    if (q = Z[L], q === void 0)
      return this;
    if (q === U || q.listener === U)
      --this._eventsCount === 0 ? this._events = /* @__PURE__ */ Object.create(null) : (delete Z[L], Z.removeListener && this.emit("removeListener", L, q.listener || U));
    else if (typeof q != "function") {
      for (z = -1, G = q.length - 1; G >= 0; G--)
        if (q[G] === U || q[G].listener === U) {
          O = q[G].listener, z = G;
          break;
        }
      if (z < 0)
        return this;
      z === 0 ? q.shift() : k(q, z), q.length === 1 && (Z[L] = q[0]), Z.removeListener !== void 0 && this.emit("removeListener", L, O || U);
    }
    return this;
  }, i.prototype.off = i.prototype.removeListener, i.prototype.removeAllListeners = function(L) {
    var U, q, Z;
    if (q = this._events, q === void 0)
      return this;
    if (q.removeListener === void 0)
      return arguments.length === 0 ? (this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0) : q[L] !== void 0 && (--this._eventsCount === 0 ? this._events = /* @__PURE__ */ Object.create(null) : delete q[L]), this;
    if (arguments.length === 0) {
      var z = Object.keys(q), G;
      for (Z = 0; Z < z.length; ++Z)
        G = z[Z], G !== "removeListener" && this.removeAllListeners(G);
      return this.removeAllListeners("removeListener"), this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0, this;
    }
    if (U = q[L], typeof U == "function")
      this.removeListener(L, U);
    else if (U !== void 0)
      for (Z = U.length - 1; Z >= 0; Z--)
        this.removeListener(L, U[Z]);
    return this;
  };
  function m(C, L, U) {
    var q = C._events;
    if (q === void 0)
      return [];
    var Z = q[L];
    return Z === void 0 ? [] : typeof Z == "function" ? U ? [Z.listener || Z] : [Z] : U ? P(Z) : I(Z, Z.length);
  }
  i.prototype.listeners = function(L) {
    return m(this, L, !0);
  }, i.prototype.rawListeners = function(L) {
    return m(this, L, !1);
  }, i.listenerCount = function(C, L) {
    return typeof C.listenerCount == "function" ? C.listenerCount(L) : x.call(C, L);
  }, i.prototype.listenerCount = x;
  function x(C) {
    var L = this._events;
    if (L !== void 0) {
      var U = L[C];
      if (typeof U == "function")
        return 1;
      if (U !== void 0)
        return U.length;
    }
    return 0;
  }
  i.prototype.eventNames = function() {
    return this._eventsCount > 0 ? a(this._events) : [];
  };
  function I(C, L) {
    for (var U = new Array(L), q = 0; q < L; ++q)
      U[q] = C[q];
    return U;
  }
  function k(C, L) {
    for (; L + 1 < C.length; L++)
      C[L] = C[L + 1];
    C.pop();
  }
  function P(C) {
    for (var L = new Array(C.length), U = 0; U < L.length; ++U)
      L[U] = C[U].listener || C[U];
    return L;
  }
  function M(C, L) {
    return new Promise(function(U, q) {
      function Z(G) {
        C.removeListener(L, z), q(G);
      }
      function z() {
        typeof C.removeListener == "function" && C.removeListener("error", Z), U([].slice.call(arguments));
      }
      F(C, L, z, { once: !0 }), L !== "error" && R(C, Z, { once: !0 });
    });
  }
  function R(C, L, U) {
    typeof C.on == "function" && F(C, "error", L, U);
  }
  function F(C, L, U, q) {
    if (typeof C.on == "function")
      q.once ? C.once(L, U) : C.on(L, U);
    else if (typeof C.addEventListener == "function")
      C.addEventListener(L, function Z(z) {
        q.once && C.removeEventListener(L, Z), U(z);
      });
    else
      throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof C);
  }
  return I6.exports;
}
var vh = gt().EventEmitter, R0 = {}, yh = {}, gh = function() {
  if (typeof Symbol != "function" || typeof Object.getOwnPropertySymbols != "function")
    return !1;
  if (typeof Symbol.iterator == "symbol")
    return !0;
  var t = {}, a = Symbol("test"), r = Object(a);
  if (typeof a == "string" || Object.prototype.toString.call(a) !== "[object Symbol]" || Object.prototype.toString.call(r) !== "[object Symbol]")
    return !1;
  var f = 42;
  t[a] = f;
  for (a in t)
    return !1;
  if (typeof Object.keys == "function" && Object.keys(t).length !== 0 || typeof Object.getOwnPropertyNames == "function" && Object.getOwnPropertyNames(t).length !== 0)
    return !1;
  var i = Object.getOwnPropertySymbols(t);
  if (i.length !== 1 || i[0] !== a || !Object.prototype.propertyIsEnumerable.call(t, a))
    return !1;
  if (typeof Object.getOwnPropertyDescriptor == "function") {
    var n = Object.getOwnPropertyDescriptor(t, a);
    if (n.value !== f || n.enumerable !== !0)
      return !1;
  }
  return !0;
}, aS = gh, Gf = function() {
  return aS() && !!Symbol.toStringTag;
}, gn, Uc;
function rS() {
  if (Uc)
    return gn;
  Uc = 1;
  var e = typeof Symbol < "u" && Symbol, t = gh;
  return gn = function() {
    return typeof e != "function" || typeof Symbol != "function" || typeof e("foo") != "symbol" || typeof Symbol("bar") != "symbol" ? !1 : t();
  }, gn;
}
var xn, $c;
function fS() {
  if ($c)
    return xn;
  $c = 1;
  var e = "Function.prototype.bind called on incompatible ", t = Array.prototype.slice, a = Object.prototype.toString, r = "[object Function]";
  return xn = function(i) {
    var n = this;
    if (typeof n != "function" || a.call(n) !== r)
      throw new TypeError(e + n);
    for (var o = t.call(arguments, 1), s, b = function() {
      if (this instanceof s) {
        var I = n.apply(
          this,
          o.concat(t.call(arguments))
        );
        return Object(I) === I ? I : this;
      } else
        return n.apply(
          i,
          o.concat(t.call(arguments))
        );
    }, l = Math.max(0, n.length - o.length), v = [], m = 0; m < l; m++)
      v.push("$" + m);
    if (s = Function("binder", "return function (" + v.join(",") + "){ return binder.apply(this,arguments); }")(b), n.prototype) {
      var x = function() {
      };
      x.prototype = n.prototype, s.prototype = new x(), x.prototype = null;
    }
    return s;
  }, xn;
}
var _n, jc;
function $s() {
  if (jc)
    return _n;
  jc = 1;
  var e = fS();
  return _n = Function.prototype.bind || e, _n;
}
var wn, Vc;
function iS() {
  if (Vc)
    return wn;
  Vc = 1;
  var e = $s();
  return wn = e.call(Function.call, Object.prototype.hasOwnProperty), wn;
}
var Sn, zc;
function Wf() {
  if (zc)
    return Sn;
  zc = 1;
  var e, t = SyntaxError, a = Function, r = TypeError, f = function(G) {
    try {
      return a('"use strict"; return (' + G + ").constructor;")();
    } catch {
    }
  }, i = Object.getOwnPropertyDescriptor;
  if (i)
    try {
      i({}, "");
    } catch {
      i = null;
    }
  var n = function() {
    throw new r();
  }, o = i ? function() {
    try {
      return arguments.callee, n;
    } catch {
      try {
        return i(arguments, "callee").get;
      } catch {
        return n;
      }
    }
  }() : n, s = rS()(), b = Object.getPrototypeOf || function(G) {
    return G.__proto__;
  }, l = {}, v = typeof Uint8Array > "u" ? e : b(Uint8Array), m = {
    "%AggregateError%": typeof AggregateError > "u" ? e : AggregateError,
    "%Array%": Array,
    "%ArrayBuffer%": typeof ArrayBuffer > "u" ? e : ArrayBuffer,
    "%ArrayIteratorPrototype%": s ? b([][Symbol.iterator]()) : e,
    "%AsyncFromSyncIteratorPrototype%": e,
    "%AsyncFunction%": l,
    "%AsyncGenerator%": l,
    "%AsyncGeneratorFunction%": l,
    "%AsyncIteratorPrototype%": l,
    "%Atomics%": typeof Atomics > "u" ? e : Atomics,
    "%BigInt%": typeof BigInt > "u" ? e : BigInt,
    "%Boolean%": Boolean,
    "%DataView%": typeof DataView > "u" ? e : DataView,
    "%Date%": Date,
    "%decodeURI%": decodeURI,
    "%decodeURIComponent%": decodeURIComponent,
    "%encodeURI%": encodeURI,
    "%encodeURIComponent%": encodeURIComponent,
    "%Error%": Error,
    "%eval%": eval,
    // eslint-disable-line no-eval
    "%EvalError%": EvalError,
    "%Float32Array%": typeof Float32Array > "u" ? e : Float32Array,
    "%Float64Array%": typeof Float64Array > "u" ? e : Float64Array,
    "%FinalizationRegistry%": typeof FinalizationRegistry > "u" ? e : FinalizationRegistry,
    "%Function%": a,
    "%GeneratorFunction%": l,
    "%Int8Array%": typeof Int8Array > "u" ? e : Int8Array,
    "%Int16Array%": typeof Int16Array > "u" ? e : Int16Array,
    "%Int32Array%": typeof Int32Array > "u" ? e : Int32Array,
    "%isFinite%": isFinite,
    "%isNaN%": isNaN,
    "%IteratorPrototype%": s ? b(b([][Symbol.iterator]())) : e,
    "%JSON%": typeof JSON == "object" ? JSON : e,
    "%Map%": typeof Map > "u" ? e : Map,
    "%MapIteratorPrototype%": typeof Map > "u" || !s ? e : b((/* @__PURE__ */ new Map())[Symbol.iterator]()),
    "%Math%": Math,
    "%Number%": Number,
    "%Object%": Object,
    "%parseFloat%": parseFloat,
    "%parseInt%": parseInt,
    "%Promise%": typeof Promise > "u" ? e : Promise,
    "%Proxy%": typeof Proxy > "u" ? e : Proxy,
    "%RangeError%": RangeError,
    "%ReferenceError%": ReferenceError,
    "%Reflect%": typeof Reflect > "u" ? e : Reflect,
    "%RegExp%": RegExp,
    "%Set%": typeof Set > "u" ? e : Set,
    "%SetIteratorPrototype%": typeof Set > "u" || !s ? e : b((/* @__PURE__ */ new Set())[Symbol.iterator]()),
    "%SharedArrayBuffer%": typeof SharedArrayBuffer > "u" ? e : SharedArrayBuffer,
    "%String%": String,
    "%StringIteratorPrototype%": s ? b(""[Symbol.iterator]()) : e,
    "%Symbol%": s ? Symbol : e,
    "%SyntaxError%": t,
    "%ThrowTypeError%": o,
    "%TypedArray%": v,
    "%TypeError%": r,
    "%Uint8Array%": typeof Uint8Array > "u" ? e : Uint8Array,
    "%Uint8ClampedArray%": typeof Uint8ClampedArray > "u" ? e : Uint8ClampedArray,
    "%Uint16Array%": typeof Uint16Array > "u" ? e : Uint16Array,
    "%Uint32Array%": typeof Uint32Array > "u" ? e : Uint32Array,
    "%URIError%": URIError,
    "%WeakMap%": typeof WeakMap > "u" ? e : WeakMap,
    "%WeakRef%": typeof WeakRef > "u" ? e : WeakRef,
    "%WeakSet%": typeof WeakSet > "u" ? e : WeakSet
  }, x = function G(O) {
    var u;
    if (O === "%AsyncFunction%")
      u = f("async function () {}");
    else if (O === "%GeneratorFunction%")
      u = f("function* () {}");
    else if (O === "%AsyncGeneratorFunction%")
      u = f("async function* () {}");
    else if (O === "%AsyncGenerator%") {
      var p = G("%AsyncGeneratorFunction%");
      p && (u = p.prototype);
    } else if (O === "%AsyncIteratorPrototype%") {
      var d = G("%AsyncGenerator%");
      d && (u = b(d.prototype));
    }
    return m[O] = u, u;
  }, I = {
    "%ArrayBufferPrototype%": ["ArrayBuffer", "prototype"],
    "%ArrayPrototype%": ["Array", "prototype"],
    "%ArrayProto_entries%": ["Array", "prototype", "entries"],
    "%ArrayProto_forEach%": ["Array", "prototype", "forEach"],
    "%ArrayProto_keys%": ["Array", "prototype", "keys"],
    "%ArrayProto_values%": ["Array", "prototype", "values"],
    "%AsyncFunctionPrototype%": ["AsyncFunction", "prototype"],
    "%AsyncGenerator%": ["AsyncGeneratorFunction", "prototype"],
    "%AsyncGeneratorPrototype%": ["AsyncGeneratorFunction", "prototype", "prototype"],
    "%BooleanPrototype%": ["Boolean", "prototype"],
    "%DataViewPrototype%": ["DataView", "prototype"],
    "%DatePrototype%": ["Date", "prototype"],
    "%ErrorPrototype%": ["Error", "prototype"],
    "%EvalErrorPrototype%": ["EvalError", "prototype"],
    "%Float32ArrayPrototype%": ["Float32Array", "prototype"],
    "%Float64ArrayPrototype%": ["Float64Array", "prototype"],
    "%FunctionPrototype%": ["Function", "prototype"],
    "%Generator%": ["GeneratorFunction", "prototype"],
    "%GeneratorPrototype%": ["GeneratorFunction", "prototype", "prototype"],
    "%Int8ArrayPrototype%": ["Int8Array", "prototype"],
    "%Int16ArrayPrototype%": ["Int16Array", "prototype"],
    "%Int32ArrayPrototype%": ["Int32Array", "prototype"],
    "%JSONParse%": ["JSON", "parse"],
    "%JSONStringify%": ["JSON", "stringify"],
    "%MapPrototype%": ["Map", "prototype"],
    "%NumberPrototype%": ["Number", "prototype"],
    "%ObjectPrototype%": ["Object", "prototype"],
    "%ObjProto_toString%": ["Object", "prototype", "toString"],
    "%ObjProto_valueOf%": ["Object", "prototype", "valueOf"],
    "%PromisePrototype%": ["Promise", "prototype"],
    "%PromiseProto_then%": ["Promise", "prototype", "then"],
    "%Promise_all%": ["Promise", "all"],
    "%Promise_reject%": ["Promise", "reject"],
    "%Promise_resolve%": ["Promise", "resolve"],
    "%RangeErrorPrototype%": ["RangeError", "prototype"],
    "%ReferenceErrorPrototype%": ["ReferenceError", "prototype"],
    "%RegExpPrototype%": ["RegExp", "prototype"],
    "%SetPrototype%": ["Set", "prototype"],
    "%SharedArrayBufferPrototype%": ["SharedArrayBuffer", "prototype"],
    "%StringPrototype%": ["String", "prototype"],
    "%SymbolPrototype%": ["Symbol", "prototype"],
    "%SyntaxErrorPrototype%": ["SyntaxError", "prototype"],
    "%TypedArrayPrototype%": ["TypedArray", "prototype"],
    "%TypeErrorPrototype%": ["TypeError", "prototype"],
    "%Uint8ArrayPrototype%": ["Uint8Array", "prototype"],
    "%Uint8ClampedArrayPrototype%": ["Uint8ClampedArray", "prototype"],
    "%Uint16ArrayPrototype%": ["Uint16Array", "prototype"],
    "%Uint32ArrayPrototype%": ["Uint32Array", "prototype"],
    "%URIErrorPrototype%": ["URIError", "prototype"],
    "%WeakMapPrototype%": ["WeakMap", "prototype"],
    "%WeakSetPrototype%": ["WeakSet", "prototype"]
  }, k = $s(), P = iS(), M = k.call(Function.call, Array.prototype.concat), R = k.call(Function.apply, Array.prototype.splice), F = k.call(Function.call, String.prototype.replace), C = k.call(Function.call, String.prototype.slice), L = k.call(Function.call, RegExp.prototype.exec), U = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g, q = /\\(\\)?/g, Z = function(O) {
    var u = C(O, 0, 1), p = C(O, -1);
    if (u === "%" && p !== "%")
      throw new t("invalid intrinsic syntax, expected closing `%`");
    if (p === "%" && u !== "%")
      throw new t("invalid intrinsic syntax, expected opening `%`");
    var d = [];
    return F(O, U, function(c, y, S, T) {
      d[d.length] = S ? F(T, q, "$1") : y || c;
    }), d;
  }, z = function(O, u) {
    var p = O, d;
    if (P(I, p) && (d = I[p], p = "%" + d[0] + "%"), P(m, p)) {
      var c = m[p];
      if (c === l && (c = x(p)), typeof c > "u" && !u)
        throw new r("intrinsic " + O + " exists, but is not available. Please file an issue!");
      return {
        alias: d,
        name: p,
        value: c
      };
    }
    throw new t("intrinsic " + O + " does not exist!");
  };
  return Sn = function(O, u) {
    if (typeof O != "string" || O.length === 0)
      throw new r("intrinsic name must be a non-empty string");
    if (arguments.length > 1 && typeof u != "boolean")
      throw new r('"allowMissing" argument must be a boolean');
    if (L(/^%?[^%]*%?$/g, O) === null)
      throw new t("`%` may not be present anywhere but at the beginning and end of the intrinsic name");
    var p = Z(O), d = p.length > 0 ? p[0] : "", c = z("%" + d + "%", u), y = c.name, S = c.value, T = !1, g = c.alias;
    g && (d = g[0], R(p, M([0, 1], g)));
    for (var w = 1, A = !0; w < p.length; w += 1) {
      var h = p[w], N = C(h, 0, 1), Y = C(h, -1);
      if ((N === '"' || N === "'" || N === "`" || Y === '"' || Y === "'" || Y === "`") && N !== Y)
        throw new t("property names with quotes must have matching quotes");
      if ((h === "constructor" || !A) && (T = !0), d += "." + h, y = "%" + d + "%", P(m, y))
        S = m[y];
      else if (S != null) {
        if (!(h in S)) {
          if (!u)
            throw new r("base intrinsic for " + O + " exists, but the property is not available.");
          return;
        }
        if (i && w + 1 >= p.length) {
          var t7 = i(S, h);
          A = !!t7, A && "get" in t7 && !("originalValue" in t7.get) ? S = t7.get : S = S[h];
        } else
          A = P(S, h), S = S[h];
        A && !T && (m[y] = S);
      }
    }
    return S;
  }, Sn;
}
var En = { exports: {} }, qc;
function js() {
  return qc || (qc = 1, function(e) {
    var t = $s(), a = Wf(), r = a("%Function.prototype.apply%"), f = a("%Function.prototype.call%"), i = a("%Reflect.apply%", !0) || t.call(f, r), n = a("%Object.getOwnPropertyDescriptor%", !0), o = a("%Object.defineProperty%", !0), s = a("%Math.max%");
    if (o)
      try {
        o({}, "a", { value: 1 });
      } catch {
        o = null;
      }
    e.exports = function(v) {
      var m = i(t, f, arguments);
      if (n && o) {
        var x = n(m, "length");
        x.configurable && o(
          m,
          "length",
          { value: 1 + s(0, v.length - (arguments.length - 1)) }
        );
      }
      return m;
    };
    var b = function() {
      return i(t, r, arguments);
    };
    o ? o(e.exports, "apply", { value: b }) : e.exports.apply = b;
  }(En)), En.exports;
}
var xh = Wf(), _h = js(), nS = _h(xh("String.prototype.indexOf")), Vs = function(t, a) {
  var r = xh(t, !!a);
  return typeof r == "function" && nS(t, ".prototype.") > -1 ? _h(r) : r;
}, oS = Gf(), sS = Vs, ko = sS("Object.prototype.toString"), Zf = function(t) {
  return oS && t && typeof t == "object" && Symbol.toStringTag in t ? !1 : ko(t) === "[object Arguments]";
}, wh = function(t) {
  return Zf(t) ? !0 : t !== null && typeof t == "object" && typeof t.length == "number" && t.length >= 0 && ko(t) !== "[object Array]" && ko(t.callee) === "[object Function]";
}, dS = function() {
  return Zf(arguments);
}();
Zf.isLegacyArguments = wh;
var cS = dS ? Zf : wh, uS = Object.prototype.toString, lS = Function.prototype.toString, pS = /^\s*(?:function)?\*/, Sh = Gf(), Tn = Object.getPrototypeOf, hS = function() {
  if (!Sh)
    return !1;
  try {
    return Function("return function*() {}")();
  } catch {
  }
}, An, bS = function(t) {
  if (typeof t != "function")
    return !1;
  if (pS.test(lS.call(t)))
    return !0;
  if (!Sh) {
    var a = uS.call(t);
    return a === "[object GeneratorFunction]";
  }
  if (!Tn)
    return !1;
  if (typeof An > "u") {
    var r = hS();
    An = r ? Tn(r) : !1;
  }
  return Tn(t) === An;
}, Eh = Function.prototype.toString, Hr = typeof Reflect == "object" && Reflect !== null && Reflect.apply, Oo, Z6;
if (typeof Hr == "function" && typeof Object.defineProperty == "function")
  try {
    Oo = Object.defineProperty({}, "length", {
      get: function() {
        throw Z6;
      }
    }), Z6 = {}, Hr(function() {
      throw 42;
    }, null, Oo);
  } catch (e) {
    e !== Z6 && (Hr = null);
  }
else
  Hr = null;
var mS = /^\s*class\b/, Po = function(t) {
  try {
    var a = Eh.call(t);
    return mS.test(a);
  } catch {
    return !1;
  }
}, vS = function(t) {
  try {
    return Po(t) ? !1 : (Eh.call(t), !0);
  } catch {
    return !1;
  }
}, yS = Object.prototype.toString, gS = "[object Function]", xS = "[object GeneratorFunction]", _S = typeof Symbol == "function" && !!Symbol.toStringTag, Kc = typeof document == "object" && typeof document.all > "u" && document.all !== void 0 ? document.all : {}, wS = Hr ? function(t) {
  if (t === Kc)
    return !0;
  if (!t || typeof t != "function" && typeof t != "object")
    return !1;
  if (typeof t == "function" && !t.prototype)
    return !0;
  try {
    Hr(t, null, Oo);
  } catch (a) {
    if (a !== Z6)
      return !1;
  }
  return !Po(t);
} : function(t) {
  if (t === Kc)
    return !0;
  if (!t || typeof t != "function" && typeof t != "object")
    return !1;
  if (typeof t == "function" && !t.prototype)
    return !0;
  if (_S)
    return vS(t);
  if (Po(t))
    return !1;
  var a = yS.call(t);
  return a === gS || a === xS;
}, SS = wS, ES = Object.prototype.toString, Th = Object.prototype.hasOwnProperty, TS = function(t, a, r) {
  for (var f = 0, i = t.length; f < i; f++)
    Th.call(t, f) && (r == null ? a(t[f], f, t) : a.call(r, t[f], f, t));
}, AS = function(t, a, r) {
  for (var f = 0, i = t.length; f < i; f++)
    r == null ? a(t.charAt(f), f, t) : a.call(r, t.charAt(f), f, t);
}, IS = function(t, a, r) {
  for (var f in t)
    Th.call(t, f) && (r == null ? a(t[f], f, t) : a.call(r, t[f], f, t));
}, kS = function(t, a, r) {
  if (!SS(a))
    throw new TypeError("iterator must be a function");
  var f;
  arguments.length >= 3 && (f = r), ES.call(t) === "[object Array]" ? TS(t, a, f) : typeof t == "string" ? AS(t, a, f) : IS(t, a, f);
}, Ah = kS, In = [
  "BigInt64Array",
  "BigUint64Array",
  "Float32Array",
  "Float64Array",
  "Int16Array",
  "Int32Array",
  "Int8Array",
  "Uint16Array",
  "Uint32Array",
  "Uint8Array",
  "Uint8ClampedArray"
], OS = typeof globalThis > "u" ? I7 : globalThis, Ih = function() {
  for (var t = [], a = 0; a < In.length; a++)
    typeof OS[In[a]] == "function" && (t[t.length] = In[a]);
  return t;
}, kn, Gc;
function kh() {
  if (Gc)
    return kn;
  Gc = 1;
  var e = Wf(), t = e("%Object.getOwnPropertyDescriptor%", !0);
  if (t)
    try {
      t([], "length");
    } catch {
      t = null;
    }
  return kn = t, kn;
}
var Oh = Ah, PS = Ih, zs = Vs, MS = zs("Object.prototype.toString"), Ph = Gf(), RS = typeof globalThis > "u" ? I7 : globalThis, Mh = PS(), BS = zs("Array.prototype.indexOf", !0) || function(t, a) {
  for (var r = 0; r < t.length; r += 1)
    if (t[r] === a)
      return r;
  return -1;
}, NS = zs("String.prototype.slice"), Rh = {}, Y6 = kh(), On = Object.getPrototypeOf;
Ph && Y6 && On && Oh(Mh, function(e) {
  var t = new RS[e]();
  if (Symbol.toStringTag in t) {
    var a = On(t), r = Y6(a, Symbol.toStringTag);
    if (!r) {
      var f = On(a);
      r = Y6(f, Symbol.toStringTag);
    }
    Rh[e] = r.get;
  }
});
var CS = function(t) {
  var a = !1;
  return Oh(Rh, function(r, f) {
    if (!a)
      try {
        a = r.call(t) === f;
      } catch {
      }
  }), a;
}, Bh = function(t) {
  if (!t || typeof t != "object")
    return !1;
  if (!Ph || !(Symbol.toStringTag in t)) {
    var a = NS(MS(t), 8, -1);
    return BS(Mh, a) > -1;
  }
  return Y6 ? CS(t) : !1;
}, Nh = Ah, DS = Ih, Ch = Vs, LS = Ch("Object.prototype.toString"), Dh = Gf(), Wc = typeof globalThis > "u" ? I7 : globalThis, FS = DS(), HS = Ch("String.prototype.slice"), Lh = {}, Pn = kh(), Mn = Object.getPrototypeOf;
Dh && Pn && Mn && Nh(FS, function(e) {
  if (typeof Wc[e] == "function") {
    var t = new Wc[e]();
    if (Symbol.toStringTag in t) {
      var a = Mn(t), r = Pn(a, Symbol.toStringTag);
      if (!r) {
        var f = Mn(a);
        r = Pn(f, Symbol.toStringTag);
      }
      Lh[e] = r.get;
    }
  }
});
var US = function(t) {
  var a = !1;
  return Nh(Lh, function(r, f) {
    if (!a)
      try {
        var i = r.call(t);
        i === f && (a = i);
      } catch {
      }
  }), a;
}, $S = Bh, jS = function(t) {
  return $S(t) ? !Dh || !(Symbol.toStringTag in t) ? HS(LS(t), 8, -1) : US(t) : !1;
};
(function(e) {
  var t = cS, a = bS, r = jS, f = Bh;
  function i(W) {
    return W.call.bind(W);
  }
  var n = typeof BigInt < "u", o = typeof Symbol < "u", s = i(Object.prototype.toString), b = i(Number.prototype.valueOf), l = i(String.prototype.valueOf), v = i(Boolean.prototype.valueOf);
  if (n)
    var m = i(BigInt.prototype.valueOf);
  if (o)
    var x = i(Symbol.prototype.valueOf);
  function I(W, e7) {
    if (typeof W != "object")
      return !1;
    try {
      return e7(W), !0;
    } catch {
      return !1;
    }
  }
  e.isArgumentsObject = t, e.isGeneratorFunction = a, e.isTypedArray = f;
  function k(W) {
    return typeof Promise < "u" && W instanceof Promise || W !== null && typeof W == "object" && typeof W.then == "function" && typeof W.catch == "function";
  }
  e.isPromise = k;
  function P(W) {
    return typeof ArrayBuffer < "u" && ArrayBuffer.isView ? ArrayBuffer.isView(W) : f(W) || N(W);
  }
  e.isArrayBufferView = P;
  function M(W) {
    return r(W) === "Uint8Array";
  }
  e.isUint8Array = M;
  function R(W) {
    return r(W) === "Uint8ClampedArray";
  }
  e.isUint8ClampedArray = R;
  function F(W) {
    return r(W) === "Uint16Array";
  }
  e.isUint16Array = F;
  function C(W) {
    return r(W) === "Uint32Array";
  }
  e.isUint32Array = C;
  function L(W) {
    return r(W) === "Int8Array";
  }
  e.isInt8Array = L;
  function U(W) {
    return r(W) === "Int16Array";
  }
  e.isInt16Array = U;
  function q(W) {
    return r(W) === "Int32Array";
  }
  e.isInt32Array = q;
  function Z(W) {
    return r(W) === "Float32Array";
  }
  e.isFloat32Array = Z;
  function z(W) {
    return r(W) === "Float64Array";
  }
  e.isFloat64Array = z;
  function G(W) {
    return r(W) === "BigInt64Array";
  }
  e.isBigInt64Array = G;
  function O(W) {
    return r(W) === "BigUint64Array";
  }
  e.isBigUint64Array = O;
  function u(W) {
    return s(W) === "[object Map]";
  }
  u.working = typeof Map < "u" && u(/* @__PURE__ */ new Map());
  function p(W) {
    return typeof Map > "u" ? !1 : u.working ? u(W) : W instanceof Map;
  }
  e.isMap = p;
  function d(W) {
    return s(W) === "[object Set]";
  }
  d.working = typeof Set < "u" && d(/* @__PURE__ */ new Set());
  function c(W) {
    return typeof Set > "u" ? !1 : d.working ? d(W) : W instanceof Set;
  }
  e.isSet = c;
  function y(W) {
    return s(W) === "[object WeakMap]";
  }
  y.working = typeof WeakMap < "u" && y(/* @__PURE__ */ new WeakMap());
  function S(W) {
    return typeof WeakMap > "u" ? !1 : y.working ? y(W) : W instanceof WeakMap;
  }
  e.isWeakMap = S;
  function T(W) {
    return s(W) === "[object WeakSet]";
  }
  T.working = typeof WeakSet < "u" && T(/* @__PURE__ */ new WeakSet());
  function g(W) {
    return T(W);
  }
  e.isWeakSet = g;
  function w(W) {
    return s(W) === "[object ArrayBuffer]";
  }
  w.working = typeof ArrayBuffer < "u" && w(new ArrayBuffer());
  function A(W) {
    return typeof ArrayBuffer > "u" ? !1 : w.working ? w(W) : W instanceof ArrayBuffer;
  }
  e.isArrayBuffer = A;
  function h(W) {
    return s(W) === "[object DataView]";
  }
  h.working = typeof ArrayBuffer < "u" && typeof DataView < "u" && h(new DataView(new ArrayBuffer(1), 0, 1));
  function N(W) {
    return typeof DataView > "u" ? !1 : h.working ? h(W) : W instanceof DataView;
  }
  e.isDataView = N;
  var Y = typeof SharedArrayBuffer < "u" ? SharedArrayBuffer : void 0;
  function t7(W) {
    return s(W) === "[object SharedArrayBuffer]";
  }
  function H(W) {
    return typeof Y > "u" ? !1 : (typeof t7.working > "u" && (t7.working = t7(new Y())), t7.working ? t7(W) : W instanceof Y);
  }
  e.isSharedArrayBuffer = H;
  function $(W) {
    return s(W) === "[object AsyncFunction]";
  }
  e.isAsyncFunction = $;
  function X(W) {
    return s(W) === "[object Map Iterator]";
  }
  e.isMapIterator = X;
  function i7(W) {
    return s(W) === "[object Set Iterator]";
  }
  e.isSetIterator = i7;
  function J(W) {
    return s(W) === "[object Generator]";
  }
  e.isGeneratorObject = J;
  function _(W) {
    return s(W) === "[object WebAssembly.Module]";
  }
  e.isWebAssemblyCompiledModule = _;
  function E(W) {
    return I(W, b);
  }
  e.isNumberObject = E;
  function j(W) {
    return I(W, l);
  }
  e.isStringObject = j;
  function V(W) {
    return I(W, v);
  }
  e.isBooleanObject = V;
  function n7(W) {
    return n && I(W, m);
  }
  e.isBigIntObject = n7;
  function K(W) {
    return o && I(W, x);
  }
  e.isSymbolObject = K;
  function B(W) {
    return E(W) || j(W) || V(W) || n7(W) || K(W);
  }
  e.isBoxedPrimitive = B;
  function D(W) {
    return typeof Uint8Array < "u" && (A(W) || H(W));
  }
  e.isAnyArrayBuffer = D, ["isProxy", "isExternal", "isModuleNamespaceObject"].forEach(function(W) {
    Object.defineProperty(e, W, {
      enumerable: !1,
      value: function() {
        throw new Error(W + " is not supported in userland");
      }
    });
  });
})(yh);
var VS = function(t) {
  return t && typeof t == "object" && typeof t.copy == "function" && typeof t.fill == "function" && typeof t.readUInt8 == "function";
};
(function(e) {
  var t = Object.getOwnPropertyDescriptors || function(N) {
    for (var Y = Object.keys(N), t7 = {}, H = 0; H < Y.length; H++)
      t7[Y[H]] = Object.getOwnPropertyDescriptor(N, Y[H]);
    return t7;
  }, a = /%[sdj%]/g;
  e.format = function(h) {
    if (!L(h)) {
      for (var N = [], Y = 0; Y < arguments.length; Y++)
        N.push(n(arguments[Y]));
      return N.join(" ");
    }
    for (var Y = 1, t7 = arguments, H = t7.length, $ = String(h).replace(a, function(i7) {
      if (i7 === "%%")
        return "%";
      if (Y >= H)
        return i7;
      switch (i7) {
        case "%s":
          return String(t7[Y++]);
        case "%d":
          return Number(t7[Y++]);
        case "%j":
          try {
            return JSON.stringify(t7[Y++]);
          } catch {
            return "[Circular]";
          }
        default:
          return i7;
      }
    }), X = t7[Y]; Y < H; X = t7[++Y])
      R(X) || !z(X) ? $ += " " + X : $ += " " + n(X);
    return $;
  }, e.deprecate = function(h, N) {
    if (typeof g7 < "u" && g7.noDeprecation === !0)
      return h;
    if (typeof g7 > "u")
      return function() {
        return e.deprecate(h, N).apply(this, arguments);
      };
    var Y = !1;
    function t7() {
      if (!Y) {
        if (g7.throwDeprecation)
          throw new Error(N);
        g7.traceDeprecation ? console.trace(N) : console.error(N), Y = !0;
      }
      return h.apply(this, arguments);
    }
    return t7;
  };
  var r = {}, f = /^$/;
  if (g7.env.NODE_DEBUG) {
    var i = g7.env.NODE_DEBUG;
    i = i.replace(/[|\\{}()[\]^$+?.]/g, "\\$&").replace(/\*/g, ".*").replace(/,/g, "$|^").toUpperCase(), f = new RegExp("^" + i + "$", "i");
  }
  e.debuglog = function(h) {
    if (h = h.toUpperCase(), !r[h])
      if (f.test(h)) {
        var N = g7.pid;
        r[h] = function() {
          var Y = e.format.apply(e, arguments);
          console.error("%s %d: %s", h, N, Y);
        };
      } else
        r[h] = function() {
        };
    return r[h];
  };
  function n(h, N) {
    var Y = {
      seen: [],
      stylize: s
    };
    return arguments.length >= 3 && (Y.depth = arguments[2]), arguments.length >= 4 && (Y.colors = arguments[3]), M(N) ? Y.showHidden = N : N && e._extend(Y, N), q(Y.showHidden) && (Y.showHidden = !1), q(Y.depth) && (Y.depth = 2), q(Y.colors) && (Y.colors = !1), q(Y.customInspect) && (Y.customInspect = !0), Y.colors && (Y.stylize = o), l(Y, h, Y.depth);
  }
  e.inspect = n, n.colors = {
    bold: [1, 22],
    italic: [3, 23],
    underline: [4, 24],
    inverse: [7, 27],
    white: [37, 39],
    grey: [90, 39],
    black: [30, 39],
    blue: [34, 39],
    cyan: [36, 39],
    green: [32, 39],
    magenta: [35, 39],
    red: [31, 39],
    yellow: [33, 39]
  }, n.styles = {
    special: "cyan",
    number: "yellow",
    boolean: "yellow",
    undefined: "grey",
    null: "bold",
    string: "green",
    date: "magenta",
    // "name": intentionally not styling
    regexp: "red"
  };
  function o(h, N) {
    var Y = n.styles[N];
    return Y ? "\x1B[" + n.colors[Y][0] + "m" + h + "\x1B[" + n.colors[Y][1] + "m" : h;
  }
  function s(h, N) {
    return h;
  }
  function b(h) {
    var N = {};
    return h.forEach(function(Y, t7) {
      N[Y] = !0;
    }), N;
  }
  function l(h, N, Y) {
    if (h.customInspect && N && u(N.inspect) && // Filter out the util module, it's inspect function is special
    N.inspect !== e.inspect && // Also filter out any prototype objects using the circular check.
    !(N.constructor && N.constructor.prototype === N)) {
      var t7 = N.inspect(Y, h);
      return L(t7) || (t7 = l(h, t7, Y)), t7;
    }
    var H = v(h, N);
    if (H)
      return H;
    var $ = Object.keys(N), X = b($);
    if (h.showHidden && ($ = Object.getOwnPropertyNames(N)), O(N) && ($.indexOf("message") >= 0 || $.indexOf("description") >= 0))
      return m(N);
    if ($.length === 0) {
      if (u(N)) {
        var i7 = N.name ? ": " + N.name : "";
        return h.stylize("[Function" + i7 + "]", "special");
      }
      if (Z(N))
        return h.stylize(RegExp.prototype.toString.call(N), "regexp");
      if (G(N))
        return h.stylize(Date.prototype.toString.call(N), "date");
      if (O(N))
        return m(N);
    }
    var J = "", _ = !1, E = ["{", "}"];
    if (P(N) && (_ = !0, E = ["[", "]"]), u(N)) {
      var j = N.name ? ": " + N.name : "";
      J = " [Function" + j + "]";
    }
    if (Z(N) && (J = " " + RegExp.prototype.toString.call(N)), G(N) && (J = " " + Date.prototype.toUTCString.call(N)), O(N) && (J = " " + m(N)), $.length === 0 && (!_ || N.length == 0))
      return E[0] + J + E[1];
    if (Y < 0)
      return Z(N) ? h.stylize(RegExp.prototype.toString.call(N), "regexp") : h.stylize("[Object]", "special");
    h.seen.push(N);
    var V;
    return _ ? V = x(h, N, Y, X, $) : V = $.map(function(n7) {
      return I(h, N, Y, X, n7, _);
    }), h.seen.pop(), k(V, J, E);
  }
  function v(h, N) {
    if (q(N))
      return h.stylize("undefined", "undefined");
    if (L(N)) {
      var Y = "'" + JSON.stringify(N).replace(/^"|"$/g, "").replace(/'/g, "\\'").replace(/\\"/g, '"') + "'";
      return h.stylize(Y, "string");
    }
    if (C(N))
      return h.stylize("" + N, "number");
    if (M(N))
      return h.stylize("" + N, "boolean");
    if (R(N))
      return h.stylize("null", "null");
  }
  function m(h) {
    return "[" + Error.prototype.toString.call(h) + "]";
  }
  function x(h, N, Y, t7, H) {
    for (var $ = [], X = 0, i7 = N.length; X < i7; ++X)
      T(N, String(X)) ? $.push(I(
        h,
        N,
        Y,
        t7,
        String(X),
        !0
      )) : $.push("");
    return H.forEach(function(J) {
      J.match(/^\d+$/) || $.push(I(
        h,
        N,
        Y,
        t7,
        J,
        !0
      ));
    }), $;
  }
  function I(h, N, Y, t7, H, $) {
    var X, i7, J;
    if (J = Object.getOwnPropertyDescriptor(N, H) || { value: N[H] }, J.get ? J.set ? i7 = h.stylize("[Getter/Setter]", "special") : i7 = h.stylize("[Getter]", "special") : J.set && (i7 = h.stylize("[Setter]", "special")), T(t7, H) || (X = "[" + H + "]"), i7 || (h.seen.indexOf(J.value) < 0 ? (R(Y) ? i7 = l(h, J.value, null) : i7 = l(h, J.value, Y - 1), i7.indexOf(`
`) > -1 && ($ ? i7 = i7.split(`
`).map(function(_) {
      return "  " + _;
    }).join(`
`).slice(2) : i7 = `
` + i7.split(`
`).map(function(_) {
      return "   " + _;
    }).join(`
`))) : i7 = h.stylize("[Circular]", "special")), q(X)) {
      if ($ && H.match(/^\d+$/))
        return i7;
      X = JSON.stringify("" + H), X.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/) ? (X = X.slice(1, -1), X = h.stylize(X, "name")) : (X = X.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'"), X = h.stylize(X, "string"));
    }
    return X + ": " + i7;
  }
  function k(h, N, Y) {
    var t7 = h.reduce(function(H, $) {
      return $.indexOf(`
`) >= 0, H + $.replace(/\u001b\[\d\d?m/g, "").length + 1;
    }, 0);
    return t7 > 60 ? Y[0] + (N === "" ? "" : N + `
 `) + " " + h.join(`,
  `) + " " + Y[1] : Y[0] + N + " " + h.join(", ") + " " + Y[1];
  }
  e.types = yh;
  function P(h) {
    return Array.isArray(h);
  }
  e.isArray = P;
  function M(h) {
    return typeof h == "boolean";
  }
  e.isBoolean = M;
  function R(h) {
    return h === null;
  }
  e.isNull = R;
  function F(h) {
    return h == null;
  }
  e.isNullOrUndefined = F;
  function C(h) {
    return typeof h == "number";
  }
  e.isNumber = C;
  function L(h) {
    return typeof h == "string";
  }
  e.isString = L;
  function U(h) {
    return typeof h == "symbol";
  }
  e.isSymbol = U;
  function q(h) {
    return h === void 0;
  }
  e.isUndefined = q;
  function Z(h) {
    return z(h) && d(h) === "[object RegExp]";
  }
  e.isRegExp = Z, e.types.isRegExp = Z;
  function z(h) {
    return typeof h == "object" && h !== null;
  }
  e.isObject = z;
  function G(h) {
    return z(h) && d(h) === "[object Date]";
  }
  e.isDate = G, e.types.isDate = G;
  function O(h) {
    return z(h) && (d(h) === "[object Error]" || h instanceof Error);
  }
  e.isError = O, e.types.isNativeError = O;
  function u(h) {
    return typeof h == "function";
  }
  e.isFunction = u;
  function p(h) {
    return h === null || typeof h == "boolean" || typeof h == "number" || typeof h == "string" || typeof h == "symbol" || // ES6 symbol
    typeof h > "u";
  }
  e.isPrimitive = p, e.isBuffer = VS;
  function d(h) {
    return Object.prototype.toString.call(h);
  }
  function c(h) {
    return h < 10 ? "0" + h.toString(10) : h.toString(10);
  }
  var y = [
    "Jan",
    "Feb",
    "Mar",
    "Apr",
    "May",
    "Jun",
    "Jul",
    "Aug",
    "Sep",
    "Oct",
    "Nov",
    "Dec"
  ];
  function S() {
    var h = /* @__PURE__ */ new Date(), N = [
      c(h.getHours()),
      c(h.getMinutes()),
      c(h.getSeconds())
    ].join(":");
    return [h.getDate(), y[h.getMonth()], N].join(" ");
  }
  e.log = function() {
    console.log("%s - %s", S(), e.format.apply(e, arguments));
  }, e.inherits = X7(), e._extend = function(h, N) {
    if (!N || !z(N))
      return h;
    for (var Y = Object.keys(N), t7 = Y.length; t7--; )
      h[Y[t7]] = N[Y[t7]];
    return h;
  };
  function T(h, N) {
    return Object.prototype.hasOwnProperty.call(h, N);
  }
  var g = typeof Symbol < "u" ? Symbol("util.promisify.custom") : void 0;
  e.promisify = function(N) {
    if (typeof N != "function")
      throw new TypeError('The "original" argument must be of type Function');
    if (g && N[g]) {
      var Y = N[g];
      if (typeof Y != "function")
        throw new TypeError('The "util.promisify.custom" argument must be of type Function');
      return Object.defineProperty(Y, g, {
        value: Y,
        enumerable: !1,
        writable: !1,
        configurable: !0
      }), Y;
    }
    function Y() {
      for (var t7, H, $ = new Promise(function(J, _) {
        t7 = J, H = _;
      }), X = [], i7 = 0; i7 < arguments.length; i7++)
        X.push(arguments[i7]);
      X.push(function(J, _) {
        J ? H(J) : t7(_);
      });
      try {
        N.apply(this, X);
      } catch (J) {
        H(J);
      }
      return $;
    }
    return Object.setPrototypeOf(Y, Object.getPrototypeOf(N)), g && Object.defineProperty(Y, g, {
      value: Y,
      enumerable: !1,
      writable: !1,
      configurable: !0
    }), Object.defineProperties(
      Y,
      t(N)
    );
  }, e.promisify.custom = g;
  function w(h, N) {
    if (!h) {
      var Y = new Error("Promise was rejected with a falsy value");
      Y.reason = h, h = Y;
    }
    return N(h);
  }
  function A(h) {
    if (typeof h != "function")
      throw new TypeError('The "original" argument must be of type Function');
    function N() {
      for (var Y = [], t7 = 0; t7 < arguments.length; t7++)
        Y.push(arguments[t7]);
      var H = Y.pop();
      if (typeof H != "function")
        throw new TypeError("The last argument must be of type Function");
      var $ = this, X = function() {
        return H.apply($, arguments);
      };
      h.apply(this, Y).then(
        function(i7) {
          g7.nextTick(X.bind(null, null, i7));
        },
        function(i7) {
          g7.nextTick(w.bind(null, i7, X));
        }
      );
    }
    return Object.setPrototypeOf(N, Object.getPrototypeOf(h)), Object.defineProperties(
      N,
      t(h)
    ), N;
  }
  e.callbackify = A;
})(R0);
var Rn, Zc;
function zS() {
  if (Zc)
    return Rn;
  Zc = 1;
  function e(m, x) {
    var I = Object.keys(m);
    if (Object.getOwnPropertySymbols) {
      var k = Object.getOwnPropertySymbols(m);
      x && (k = k.filter(function(P) {
        return Object.getOwnPropertyDescriptor(m, P).enumerable;
      })), I.push.apply(I, k);
    }
    return I;
  }
  function t(m) {
    for (var x = 1; x < arguments.length; x++) {
      var I = arguments[x] != null ? arguments[x] : {};
      x % 2 ? e(Object(I), !0).forEach(function(k) {
        a(m, k, I[k]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(m, Object.getOwnPropertyDescriptors(I)) : e(Object(I)).forEach(function(k) {
        Object.defineProperty(m, k, Object.getOwnPropertyDescriptor(I, k));
      });
    }
    return m;
  }
  function a(m, x, I) {
    return x in m ? Object.defineProperty(m, x, { value: I, enumerable: !0, configurable: !0, writable: !0 }) : m[x] = I, m;
  }
  function r(m, x) {
    if (!(m instanceof x))
      throw new TypeError("Cannot call a class as a function");
  }
  function f(m, x) {
    for (var I = 0; I < x.length; I++) {
      var k = x[I];
      k.enumerable = k.enumerable || !1, k.configurable = !0, "value" in k && (k.writable = !0), Object.defineProperty(m, k.key, k);
    }
  }
  function i(m, x, I) {
    return x && f(m.prototype, x), I && f(m, I), m;
  }
  var n = Q, o = n.Buffer, s = R0, b = s.inspect, l = b && b.custom || "inspect";
  function v(m, x, I) {
    o.prototype.copy.call(m, x, I);
  }
  return Rn = /* @__PURE__ */ function() {
    function m() {
      r(this, m), this.head = null, this.tail = null, this.length = 0;
    }
    return i(m, [{
      key: "push",
      value: function(I) {
        var k = {
          data: I,
          next: null
        };
        this.length > 0 ? this.tail.next = k : this.head = k, this.tail = k, ++this.length;
      }
    }, {
      key: "unshift",
      value: function(I) {
        var k = {
          data: I,
          next: this.head
        };
        this.length === 0 && (this.tail = k), this.head = k, ++this.length;
      }
    }, {
      key: "shift",
      value: function() {
        if (this.length !== 0) {
          var I = this.head.data;
          return this.length === 1 ? this.head = this.tail = null : this.head = this.head.next, --this.length, I;
        }
      }
    }, {
      key: "clear",
      value: function() {
        this.head = this.tail = null, this.length = 0;
      }
    }, {
      key: "join",
      value: function(I) {
        if (this.length === 0)
          return "";
        for (var k = this.head, P = "" + k.data; k = k.next; )
          P += I + k.data;
        return P;
      }
    }, {
      key: "concat",
      value: function(I) {
        if (this.length === 0)
          return o.alloc(0);
        for (var k = o.allocUnsafe(I >>> 0), P = this.head, M = 0; P; )
          v(P.data, k, M), M += P.data.length, P = P.next;
        return k;
      }
      // Consumes a specified amount of bytes or characters from the buffered data.
    }, {
      key: "consume",
      value: function(I, k) {
        var P;
        return I < this.head.data.length ? (P = this.head.data.slice(0, I), this.head.data = this.head.data.slice(I)) : I === this.head.data.length ? P = this.shift() : P = k ? this._getString(I) : this._getBuffer(I), P;
      }
    }, {
      key: "first",
      value: function() {
        return this.head.data;
      }
      // Consumes a specified amount of characters from the buffered data.
    }, {
      key: "_getString",
      value: function(I) {
        var k = this.head, P = 1, M = k.data;
        for (I -= M.length; k = k.next; ) {
          var R = k.data, F = I > R.length ? R.length : I;
          if (F === R.length ? M += R : M += R.slice(0, I), I -= F, I === 0) {
            F === R.length ? (++P, k.next ? this.head = k.next : this.head = this.tail = null) : (this.head = k, k.data = R.slice(F));
            break;
          }
          ++P;
        }
        return this.length -= P, M;
      }
      // Consumes a specified amount of bytes from the buffered data.
    }, {
      key: "_getBuffer",
      value: function(I) {
        var k = o.allocUnsafe(I), P = this.head, M = 1;
        for (P.data.copy(k), I -= P.data.length; P = P.next; ) {
          var R = P.data, F = I > R.length ? R.length : I;
          if (R.copy(k, k.length - I, 0, F), I -= F, I === 0) {
            F === R.length ? (++M, P.next ? this.head = P.next : this.head = this.tail = null) : (this.head = P, P.data = R.slice(F));
            break;
          }
          ++M;
        }
        return this.length -= M, k;
      }
      // Make sure the linked list only shows the minimal necessary information.
    }, {
      key: l,
      value: function(I, k) {
        return b(this, t({}, k, {
          // Only inspect one level.
          depth: 0,
          // It should not recurse.
          customInspect: !1
        }));
      }
    }]), m;
  }(), Rn;
}
function qS(e, t) {
  var a = this, r = this._readableState && this._readableState.destroyed, f = this._writableState && this._writableState.destroyed;
  return r || f ? (t ? t(e) : e && (this._writableState ? this._writableState.errorEmitted || (this._writableState.errorEmitted = !0, g7.nextTick(Mo, this, e)) : g7.nextTick(Mo, this, e)), this) : (this._readableState && (this._readableState.destroyed = !0), this._writableState && (this._writableState.destroyed = !0), this._destroy(e || null, function(i) {
    !t && i ? a._writableState ? a._writableState.errorEmitted ? g7.nextTick(X6, a) : (a._writableState.errorEmitted = !0, g7.nextTick(Yc, a, i)) : g7.nextTick(Yc, a, i) : t ? (g7.nextTick(X6, a), t(i)) : g7.nextTick(X6, a);
  }), this);
}
function Yc(e, t) {
  Mo(e, t), X6(e);
}
function X6(e) {
  e._writableState && !e._writableState.emitClose || e._readableState && !e._readableState.emitClose || e.emit("close");
}
function KS() {
  this._readableState && (this._readableState.destroyed = !1, this._readableState.reading = !1, this._readableState.ended = !1, this._readableState.endEmitted = !1), this._writableState && (this._writableState.destroyed = !1, this._writableState.ended = !1, this._writableState.ending = !1, this._writableState.finalCalled = !1, this._writableState.prefinished = !1, this._writableState.finished = !1, this._writableState.errorEmitted = !1);
}
function Mo(e, t) {
  e.emit("error", t);
}
function GS(e, t) {
  var a = e._readableState, r = e._writableState;
  a && a.autoDestroy || r && r.autoDestroy ? e.destroy(t) : e.emit("error", t);
}
var Fh = {
  destroy: qS,
  undestroy: KS,
  errorOrDestroy: GS
}, gr = {};
function WS(e, t) {
  e.prototype = Object.create(t.prototype), e.prototype.constructor = e, e.__proto__ = t;
}
var Hh = {};
function v5(e, t, a) {
  a || (a = Error);
  function r(i, n, o) {
    return typeof t == "string" ? t : t(i, n, o);
  }
  var f = /* @__PURE__ */ function(i) {
    WS(n, i);
    function n(o, s, b) {
      return i.call(this, r(o, s, b)) || this;
    }
    return n;
  }(a);
  f.prototype.name = a.name, f.prototype.code = e, Hh[e] = f;
}
function Xc(e, t) {
  if (Array.isArray(e)) {
    var a = e.length;
    return e = e.map(function(r) {
      return String(r);
    }), a > 2 ? "one of ".concat(t, " ").concat(e.slice(0, a - 1).join(", "), ", or ") + e[a - 1] : a === 2 ? "one of ".concat(t, " ").concat(e[0], " or ").concat(e[1]) : "of ".concat(t, " ").concat(e[0]);
  } else
    return "of ".concat(t, " ").concat(String(e));
}
function ZS(e, t, a) {
  return e.substr(!a || a < 0 ? 0 : +a, t.length) === t;
}
function YS(e, t, a) {
  return (a === void 0 || a > e.length) && (a = e.length), e.substring(a - t.length, a) === t;
}
function XS(e, t, a) {
  return typeof a != "number" && (a = 0), a + t.length > e.length ? !1 : e.indexOf(t, a) !== -1;
}
v5("ERR_INVALID_OPT_VALUE", function(e, t) {
  return 'The value "' + t + '" is invalid for option "' + e + '"';
}, TypeError);
v5("ERR_INVALID_ARG_TYPE", function(e, t, a) {
  var r;
  typeof t == "string" && ZS(t, "not ") ? (r = "must not be", t = t.replace(/^not /, "")) : r = "must be";
  var f;
  if (YS(e, " argument"))
    f = "The ".concat(e, " ").concat(r, " ").concat(Xc(t, "type"));
  else {
    var i = XS(e, ".") ? "property" : "argument";
    f = 'The "'.concat(e, '" ').concat(i, " ").concat(r, " ").concat(Xc(t, "type"));
  }
  return f += ". Received type ".concat(typeof a), f;
}, TypeError);
v5("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF");
v5("ERR_METHOD_NOT_IMPLEMENTED", function(e) {
  return "The " + e + " method is not implemented";
});
v5("ERR_STREAM_PREMATURE_CLOSE", "Premature close");
v5("ERR_STREAM_DESTROYED", function(e) {
  return "Cannot call " + e + " after a stream was destroyed";
});
v5("ERR_MULTIPLE_CALLBACK", "Callback called multiple times");
v5("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable");
v5("ERR_STREAM_WRITE_AFTER_END", "write after end");
v5("ERR_STREAM_NULL_VALUES", "May not write null values to stream", TypeError);
v5("ERR_UNKNOWN_ENCODING", function(e) {
  return "Unknown encoding: " + e;
}, TypeError);
v5("ERR_STREAM_UNSHIFT_AFTER_END_EVENT", "stream.unshift() after end event");
gr.codes = Hh;
var JS = gr.codes.ERR_INVALID_OPT_VALUE;
function QS(e, t, a) {
  return e.highWaterMark != null ? e.highWaterMark : t ? e[a] : null;
}
function eE(e, t, a, r) {
  var f = QS(t, r, a);
  if (f != null) {
    if (!(isFinite(f) && Math.floor(f) === f) || f < 0) {
      var i = r ? a : "highWaterMark";
      throw new JS(i, f);
    }
    return Math.floor(f);
  }
  return e.objectMode ? 16 : 16 * 1024;
}
var Uh = {
  getHighWaterMark: eE
}, Yf = tE;
function tE(e, t) {
  if (Bn("noDeprecation"))
    return e;
  var a = !1;
  function r() {
    if (!a) {
      if (Bn("throwDeprecation"))
        throw new Error(t);
      Bn("traceDeprecation") ? console.trace(t) : console.warn(t), a = !0;
    }
    return e.apply(this, arguments);
  }
  return r;
}
function Bn(e) {
  try {
    if (!I7.localStorage)
      return !1;
  } catch {
    return !1;
  }
  var t = I7.localStorage[e];
  return t == null ? !1 : String(t).toLowerCase() === "true";
}
var Nn, Jc;
function $h() {
  if (Jc)
    return Nn;
  Jc = 1, Nn = Z;
  function e(H) {
    var $ = this;
    this.next = null, this.entry = null, this.finish = function() {
      t7($, H);
    };
  }
  var t;
  Z.WritableState = U;
  var a = {
    deprecate: Yf
  }, r = vh, f = Q.Buffer, i = I7.Uint8Array || function() {
  };
  function n(H) {
    return f.from(H);
  }
  function o(H) {
    return f.isBuffer(H) || H instanceof i;
  }
  var s = Fh, b = Uh, l = b.getHighWaterMark, v = gr.codes, m = v.ERR_INVALID_ARG_TYPE, x = v.ERR_METHOD_NOT_IMPLEMENTED, I = v.ERR_MULTIPLE_CALLBACK, k = v.ERR_STREAM_CANNOT_PIPE, P = v.ERR_STREAM_DESTROYED, M = v.ERR_STREAM_NULL_VALUES, R = v.ERR_STREAM_WRITE_AFTER_END, F = v.ERR_UNKNOWN_ENCODING, C = s.errorOrDestroy;
  X7()(Z, r);
  function L() {
  }
  function U(H, $, X) {
    t = t || e1(), H = H || {}, typeof X != "boolean" && (X = $ instanceof t), this.objectMode = !!H.objectMode, X && (this.objectMode = this.objectMode || !!H.writableObjectMode), this.highWaterMark = l(this, H, "writableHighWaterMark", X), this.finalCalled = !1, this.needDrain = !1, this.ending = !1, this.ended = !1, this.finished = !1, this.destroyed = !1;
    var i7 = H.decodeStrings === !1;
    this.decodeStrings = !i7, this.defaultEncoding = H.defaultEncoding || "utf8", this.length = 0, this.writing = !1, this.corked = 0, this.sync = !0, this.bufferProcessing = !1, this.onwrite = function(J) {
      y($, J);
    }, this.writecb = null, this.writelen = 0, this.bufferedRequest = null, this.lastBufferedRequest = null, this.pendingcb = 0, this.prefinished = !1, this.errorEmitted = !1, this.emitClose = H.emitClose !== !1, this.autoDestroy = !!H.autoDestroy, this.bufferedRequestCount = 0, this.corkedRequestsFree = new e(this);
  }
  U.prototype.getBuffer = function() {
    for (var $ = this.bufferedRequest, X = []; $; )
      X.push($), $ = $.next;
    return X;
  }, function() {
    try {
      Object.defineProperty(U.prototype, "buffer", {
        get: a.deprecate(function() {
          return this.getBuffer();
        }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003")
      });
    } catch {
    }
  }();
  var q;
  typeof Symbol == "function" && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] == "function" ? (q = Function.prototype[Symbol.hasInstance], Object.defineProperty(Z, Symbol.hasInstance, {
    value: function($) {
      return q.call(this, $) ? !0 : this !== Z ? !1 : $ && $._writableState instanceof U;
    }
  })) : q = function($) {
    return $ instanceof this;
  };
  function Z(H) {
    t = t || e1();
    var $ = this instanceof t;
    if (!$ && !q.call(Z, this))
      return new Z(H);
    this._writableState = new U(H, this, $), this.writable = !0, H && (typeof H.write == "function" && (this._write = H.write), typeof H.writev == "function" && (this._writev = H.writev), typeof H.destroy == "function" && (this._destroy = H.destroy), typeof H.final == "function" && (this._final = H.final)), r.call(this);
  }
  Z.prototype.pipe = function() {
    C(this, new k());
  };
  function z(H, $) {
    var X = new R();
    C(H, X), g7.nextTick($, X);
  }
  function G(H, $, X, i7) {
    var J;
    return X === null ? J = new M() : typeof X != "string" && !$.objectMode && (J = new m("chunk", ["string", "Buffer"], X)), J ? (C(H, J), g7.nextTick(i7, J), !1) : !0;
  }
  Z.prototype.write = function(H, $, X) {
    var i7 = this._writableState, J = !1, _ = !i7.objectMode && o(H);
    return _ && !f.isBuffer(H) && (H = n(H)), typeof $ == "function" && (X = $, $ = null), _ ? $ = "buffer" : $ || ($ = i7.defaultEncoding), typeof X != "function" && (X = L), i7.ending ? z(this, X) : (_ || G(this, i7, H, X)) && (i7.pendingcb++, J = u(this, i7, _, H, $, X)), J;
  }, Z.prototype.cork = function() {
    this._writableState.corked++;
  }, Z.prototype.uncork = function() {
    var H = this._writableState;
    H.corked && (H.corked--, !H.writing && !H.corked && !H.bufferProcessing && H.bufferedRequest && g(this, H));
  }, Z.prototype.setDefaultEncoding = function($) {
    if (typeof $ == "string" && ($ = $.toLowerCase()), !(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf(($ + "").toLowerCase()) > -1))
      throw new F($);
    return this._writableState.defaultEncoding = $, this;
  }, Object.defineProperty(Z.prototype, "writableBuffer", {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: !1,
    get: function() {
      return this._writableState && this._writableState.getBuffer();
    }
  });
  function O(H, $, X) {
    return !H.objectMode && H.decodeStrings !== !1 && typeof $ == "string" && ($ = f.from($, X)), $;
  }
  Object.defineProperty(Z.prototype, "writableHighWaterMark", {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: !1,
    get: function() {
      return this._writableState.highWaterMark;
    }
  });
  function u(H, $, X, i7, J, _) {
    if (!X) {
      var E = O($, i7, J);
      i7 !== E && (X = !0, J = "buffer", i7 = E);
    }
    var j = $.objectMode ? 1 : i7.length;
    $.length += j;
    var V = $.length < $.highWaterMark;
    if (V || ($.needDrain = !0), $.writing || $.corked) {
      var n7 = $.lastBufferedRequest;
      $.lastBufferedRequest = {
        chunk: i7,
        encoding: J,
        isBuf: X,
        callback: _,
        next: null
      }, n7 ? n7.next = $.lastBufferedRequest : $.bufferedRequest = $.lastBufferedRequest, $.bufferedRequestCount += 1;
    } else
      p(H, $, !1, j, i7, J, _);
    return V;
  }
  function p(H, $, X, i7, J, _, E) {
    $.writelen = i7, $.writecb = E, $.writing = !0, $.sync = !0, $.destroyed ? $.onwrite(new P("write")) : X ? H._writev(J, $.onwrite) : H._write(J, _, $.onwrite), $.sync = !1;
  }
  function d(H, $, X, i7, J) {
    --$.pendingcb, X ? (g7.nextTick(J, i7), g7.nextTick(N, H, $), H._writableState.errorEmitted = !0, C(H, i7)) : (J(i7), H._writableState.errorEmitted = !0, C(H, i7), N(H, $));
  }
  function c(H) {
    H.writing = !1, H.writecb = null, H.length -= H.writelen, H.writelen = 0;
  }
  function y(H, $) {
    var X = H._writableState, i7 = X.sync, J = X.writecb;
    if (typeof J != "function")
      throw new I();
    if (c(X), $)
      d(H, X, i7, $, J);
    else {
      var _ = w(X) || H.destroyed;
      !_ && !X.corked && !X.bufferProcessing && X.bufferedRequest && g(H, X), i7 ? g7.nextTick(S, H, X, _, J) : S(H, X, _, J);
    }
  }
  function S(H, $, X, i7) {
    X || T(H, $), $.pendingcb--, i7(), N(H, $);
  }
  function T(H, $) {
    $.length === 0 && $.needDrain && ($.needDrain = !1, H.emit("drain"));
  }
  function g(H, $) {
    $.bufferProcessing = !0;
    var X = $.bufferedRequest;
    if (H._writev && X && X.next) {
      var i7 = $.bufferedRequestCount, J = new Array(i7), _ = $.corkedRequestsFree;
      _.entry = X;
      for (var E = 0, j = !0; X; )
        J[E] = X, X.isBuf || (j = !1), X = X.next, E += 1;
      J.allBuffers = j, p(H, $, !0, $.length, J, "", _.finish), $.pendingcb++, $.lastBufferedRequest = null, _.next ? ($.corkedRequestsFree = _.next, _.next = null) : $.corkedRequestsFree = new e($), $.bufferedRequestCount = 0;
    } else {
      for (; X; ) {
        var V = X.chunk, n7 = X.encoding, K = X.callback, B = $.objectMode ? 1 : V.length;
        if (p(H, $, !1, B, V, n7, K), X = X.next, $.bufferedRequestCount--, $.writing)
          break;
      }
      X === null && ($.lastBufferedRequest = null);
    }
    $.bufferedRequest = X, $.bufferProcessing = !1;
  }
  Z.prototype._write = function(H, $, X) {
    X(new x("_write()"));
  }, Z.prototype._writev = null, Z.prototype.end = function(H, $, X) {
    var i7 = this._writableState;
    return typeof H == "function" ? (X = H, H = null, $ = null) : typeof $ == "function" && (X = $, $ = null), H != null && this.write(H, $), i7.corked && (i7.corked = 1, this.uncork()), i7.ending || Y(this, i7, X), this;
  }, Object.defineProperty(Z.prototype, "writableLength", {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: !1,
    get: function() {
      return this._writableState.length;
    }
  });
  function w(H) {
    return H.ending && H.length === 0 && H.bufferedRequest === null && !H.finished && !H.writing;
  }
  function A(H, $) {
    H._final(function(X) {
      $.pendingcb--, X && C(H, X), $.prefinished = !0, H.emit("prefinish"), N(H, $);
    });
  }
  function h(H, $) {
    !$.prefinished && !$.finalCalled && (typeof H._final == "function" && !$.destroyed ? ($.pendingcb++, $.finalCalled = !0, g7.nextTick(A, H, $)) : ($.prefinished = !0, H.emit("prefinish")));
  }
  function N(H, $) {
    var X = w($);
    if (X && (h(H, $), $.pendingcb === 0 && ($.finished = !0, H.emit("finish"), $.autoDestroy))) {
      var i7 = H._readableState;
      (!i7 || i7.autoDestroy && i7.endEmitted) && H.destroy();
    }
    return X;
  }
  function Y(H, $, X) {
    $.ending = !0, N(H, $), X && ($.finished ? g7.nextTick(X) : H.once("finish", X)), $.ended = !0, H.writable = !1;
  }
  function t7(H, $, X) {
    var i7 = H.entry;
    for (H.entry = null; i7; ) {
      var J = i7.callback;
      $.pendingcb--, J(X), i7 = i7.next;
    }
    $.corkedRequestsFree.next = H;
  }
  return Object.defineProperty(Z.prototype, "destroyed", {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: !1,
    get: function() {
      return this._writableState === void 0 ? !1 : this._writableState.destroyed;
    },
    set: function($) {
      this._writableState && (this._writableState.destroyed = $);
    }
  }), Z.prototype.destroy = s.destroy, Z.prototype._undestroy = s.undestroy, Z.prototype._destroy = function(H, $) {
    $(H);
  }, Nn;
}
var Cn, Qc;
function e1() {
  if (Qc)
    return Cn;
  Qc = 1;
  var e = Object.keys || function(b) {
    var l = [];
    for (var v in b)
      l.push(v);
    return l;
  };
  Cn = n;
  var t = Vh(), a = $h();
  X7()(n, t);
  for (var r = e(a.prototype), f = 0; f < r.length; f++) {
    var i = r[f];
    n.prototype[i] || (n.prototype[i] = a.prototype[i]);
  }
  function n(b) {
    if (!(this instanceof n))
      return new n(b);
    t.call(this, b), a.call(this, b), this.allowHalfOpen = !0, b && (b.readable === !1 && (this.readable = !1), b.writable === !1 && (this.writable = !1), b.allowHalfOpen === !1 && (this.allowHalfOpen = !1, this.once("end", o)));
  }
  Object.defineProperty(n.prototype, "writableHighWaterMark", {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: !1,
    get: function() {
      return this._writableState.highWaterMark;
    }
  }), Object.defineProperty(n.prototype, "writableBuffer", {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: !1,
    get: function() {
      return this._writableState && this._writableState.getBuffer();
    }
  }), Object.defineProperty(n.prototype, "writableLength", {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: !1,
    get: function() {
      return this._writableState.length;
    }
  });
  function o() {
    this._writableState.ended || g7.nextTick(s, this);
  }
  function s(b) {
    b.end();
  }
  return Object.defineProperty(n.prototype, "destroyed", {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: !1,
    get: function() {
      return this._readableState === void 0 || this._writableState === void 0 ? !1 : this._readableState.destroyed && this._writableState.destroyed;
    },
    set: function(l) {
      this._readableState === void 0 || this._writableState === void 0 || (this._readableState.destroyed = l, this._writableState.destroyed = l);
    }
  }), Cn;
}
var pt = {}, qs = fe.Buffer, e3 = qs.isEncoding || function(e) {
  switch (e = "" + e, e && e.toLowerCase()) {
    case "hex":
    case "utf8":
    case "utf-8":
    case "ascii":
    case "binary":
    case "base64":
    case "ucs2":
    case "ucs-2":
    case "utf16le":
    case "utf-16le":
    case "raw":
      return !0;
    default:
      return !1;
  }
};
function aE(e) {
  if (!e)
    return "utf8";
  for (var t; ; )
    switch (e) {
      case "utf8":
      case "utf-8":
        return "utf8";
      case "ucs2":
      case "ucs-2":
      case "utf16le":
      case "utf-16le":
        return "utf16le";
      case "latin1":
      case "binary":
        return "latin1";
      case "base64":
      case "ascii":
      case "hex":
        return e;
      default:
        if (t)
          return;
        e = ("" + e).toLowerCase(), t = !0;
    }
}
function rE(e) {
  var t = aE(e);
  if (typeof t != "string" && (qs.isEncoding === e3 || !e3(e)))
    throw new Error("Unknown encoding: " + e);
  return t || e;
}
pt.StringDecoder = W9;
function W9(e) {
  this.encoding = rE(e);
  var t;
  switch (this.encoding) {
    case "utf16le":
      this.text = dE, this.end = cE, t = 4;
      break;
    case "utf8":
      this.fillLast = nE, t = 4;
      break;
    case "base64":
      this.text = uE, this.end = lE, t = 3;
      break;
    default:
      this.write = pE, this.end = hE;
      return;
  }
  this.lastNeed = 0, this.lastTotal = 0, this.lastChar = qs.allocUnsafe(t);
}
W9.prototype.write = function(e) {
  if (e.length === 0)
    return "";
  var t, a;
  if (this.lastNeed) {
    if (t = this.fillLast(e), t === void 0)
      return "";
    a = this.lastNeed, this.lastNeed = 0;
  } else
    a = 0;
  return a < e.length ? t ? t + this.text(e, a) : this.text(e, a) : t || "";
};
W9.prototype.end = sE;
W9.prototype.text = oE;
W9.prototype.fillLast = function(e) {
  if (this.lastNeed <= e.length)
    return e.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal);
  e.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, e.length), this.lastNeed -= e.length;
};
function Dn(e) {
  return e <= 127 ? 0 : e >> 5 === 6 ? 2 : e >> 4 === 14 ? 3 : e >> 3 === 30 ? 4 : e >> 6 === 2 ? -1 : -2;
}
function fE(e, t, a) {
  var r = t.length - 1;
  if (r < a)
    return 0;
  var f = Dn(t[r]);
  return f >= 0 ? (f > 0 && (e.lastNeed = f - 1), f) : --r < a || f === -2 ? 0 : (f = Dn(t[r]), f >= 0 ? (f > 0 && (e.lastNeed = f - 2), f) : --r < a || f === -2 ? 0 : (f = Dn(t[r]), f >= 0 ? (f > 0 && (f === 2 ? f = 0 : e.lastNeed = f - 3), f) : 0));
}
function iE(e, t, a) {
  if ((t[0] & 192) !== 128)
    return e.lastNeed = 0, "�";
  if (e.lastNeed > 1 && t.length > 1) {
    if ((t[1] & 192) !== 128)
      return e.lastNeed = 1, "�";
    if (e.lastNeed > 2 && t.length > 2 && (t[2] & 192) !== 128)
      return e.lastNeed = 2, "�";
  }
}
function nE(e) {
  var t = this.lastTotal - this.lastNeed, a = iE(this, e);
  if (a !== void 0)
    return a;
  if (this.lastNeed <= e.length)
    return e.copy(this.lastChar, t, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal);
  e.copy(this.lastChar, t, 0, e.length), this.lastNeed -= e.length;
}
function oE(e, t) {
  var a = fE(this, e, t);
  if (!this.lastNeed)
    return e.toString("utf8", t);
  this.lastTotal = a;
  var r = e.length - (a - this.lastNeed);
  return e.copy(this.lastChar, 0, r), e.toString("utf8", t, r);
}
function sE(e) {
  var t = e && e.length ? this.write(e) : "";
  return this.lastNeed ? t + "�" : t;
}
function dE(e, t) {
  if ((e.length - t) % 2 === 0) {
    var a = e.toString("utf16le", t);
    if (a) {
      var r = a.charCodeAt(a.length - 1);
      if (r >= 55296 && r <= 56319)
        return this.lastNeed = 2, this.lastTotal = 4, this.lastChar[0] = e[e.length - 2], this.lastChar[1] = e[e.length - 1], a.slice(0, -1);
    }
    return a;
  }
  return this.lastNeed = 1, this.lastTotal = 2, this.lastChar[0] = e[e.length - 1], e.toString("utf16le", t, e.length - 1);
}
function cE(e) {
  var t = e && e.length ? this.write(e) : "";
  if (this.lastNeed) {
    var a = this.lastTotal - this.lastNeed;
    return t + this.lastChar.toString("utf16le", 0, a);
  }
  return t;
}
function uE(e, t) {
  var a = (e.length - t) % 3;
  return a === 0 ? e.toString("base64", t) : (this.lastNeed = 3 - a, this.lastTotal = 3, a === 1 ? this.lastChar[0] = e[e.length - 1] : (this.lastChar[0] = e[e.length - 2], this.lastChar[1] = e[e.length - 1]), e.toString("base64", t, e.length - a));
}
function lE(e) {
  var t = e && e.length ? this.write(e) : "";
  return this.lastNeed ? t + this.lastChar.toString("base64", 0, 3 - this.lastNeed) : t;
}
function pE(e) {
  return e.toString(this.encoding);
}
function hE(e) {
  return e && e.length ? this.write(e) : "";
}
var t3 = gr.codes.ERR_STREAM_PREMATURE_CLOSE;
function bE(e) {
  var t = !1;
  return function() {
    if (!t) {
      t = !0;
      for (var a = arguments.length, r = new Array(a), f = 0; f < a; f++)
        r[f] = arguments[f];
      e.apply(this, r);
    }
  };
}
function mE() {
}
function vE(e) {
  return e.setHeader && typeof e.abort == "function";
}
function jh(e, t, a) {
  if (typeof t == "function")
    return jh(e, null, t);
  t || (t = {}), a = bE(a || mE);
  var r = t.readable || t.readable !== !1 && e.readable, f = t.writable || t.writable !== !1 && e.writable, i = function() {
    e.writable || o();
  }, n = e._writableState && e._writableState.finished, o = function() {
    f = !1, n = !0, r || a.call(e);
  }, s = e._readableState && e._readableState.endEmitted, b = function() {
    r = !1, s = !0, f || a.call(e);
  }, l = function(I) {
    a.call(e, I);
  }, v = function() {
    var I;
    if (r && !s)
      return (!e._readableState || !e._readableState.ended) && (I = new t3()), a.call(e, I);
    if (f && !n)
      return (!e._writableState || !e._writableState.ended) && (I = new t3()), a.call(e, I);
  }, m = function() {
    e.req.on("finish", o);
  };
  return vE(e) ? (e.on("complete", o), e.on("abort", v), e.req ? m() : e.on("request", m)) : f && !e._writableState && (e.on("end", i), e.on("close", i)), e.on("end", b), e.on("finish", o), t.error !== !1 && e.on("error", l), e.on("close", v), function() {
    e.removeListener("complete", o), e.removeListener("abort", v), e.removeListener("request", m), e.req && e.req.removeListener("finish", o), e.removeListener("end", i), e.removeListener("close", i), e.removeListener("finish", o), e.removeListener("end", b), e.removeListener("error", l), e.removeListener("close", v);
  };
}
var Ks = jh, Ln, a3;
function yE() {
  if (a3)
    return Ln;
  a3 = 1;
  var e;
  function t(M, R, F) {
    return R in M ? Object.defineProperty(M, R, { value: F, enumerable: !0, configurable: !0, writable: !0 }) : M[R] = F, M;
  }
  var a = Ks, r = Symbol("lastResolve"), f = Symbol("lastReject"), i = Symbol("error"), n = Symbol("ended"), o = Symbol("lastPromise"), s = Symbol("handlePromise"), b = Symbol("stream");
  function l(M, R) {
    return {
      value: M,
      done: R
    };
  }
  function v(M) {
    var R = M[r];
    if (R !== null) {
      var F = M[b].read();
      F !== null && (M[o] = null, M[r] = null, M[f] = null, R(l(F, !1)));
    }
  }
  function m(M) {
    g7.nextTick(v, M);
  }
  function x(M, R) {
    return function(F, C) {
      M.then(function() {
        if (R[n]) {
          F(l(void 0, !0));
          return;
        }
        R[s](F, C);
      }, C);
    };
  }
  var I = Object.getPrototypeOf(function() {
  }), k = Object.setPrototypeOf((e = {
    get stream() {
      return this[b];
    },
    next: function() {
      var R = this, F = this[i];
      if (F !== null)
        return Promise.reject(F);
      if (this[n])
        return Promise.resolve(l(void 0, !0));
      if (this[b].destroyed)
        return new Promise(function(q, Z) {
          g7.nextTick(function() {
            R[i] ? Z(R[i]) : q(l(void 0, !0));
          });
        });
      var C = this[o], L;
      if (C)
        L = new Promise(x(C, this));
      else {
        var U = this[b].read();
        if (U !== null)
          return Promise.resolve(l(U, !1));
        L = new Promise(this[s]);
      }
      return this[o] = L, L;
    }
  }, t(e, Symbol.asyncIterator, function() {
    return this;
  }), t(e, "return", function() {
    var R = this;
    return new Promise(function(F, C) {
      R[b].destroy(null, function(L) {
        if (L) {
          C(L);
          return;
        }
        F(l(void 0, !0));
      });
    });
  }), e), I), P = function(R) {
    var F, C = Object.create(k, (F = {}, t(F, b, {
      value: R,
      writable: !0
    }), t(F, r, {
      value: null,
      writable: !0
    }), t(F, f, {
      value: null,
      writable: !0
    }), t(F, i, {
      value: null,
      writable: !0
    }), t(F, n, {
      value: R._readableState.endEmitted,
      writable: !0
    }), t(F, s, {
      value: function(U, q) {
        var Z = C[b].read();
        Z ? (C[o] = null, C[r] = null, C[f] = null, U(l(Z, !1))) : (C[r] = U, C[f] = q);
      },
      writable: !0
    }), F));
    return C[o] = null, a(R, function(L) {
      if (L && L.code !== "ERR_STREAM_PREMATURE_CLOSE") {
        var U = C[f];
        U !== null && (C[o] = null, C[r] = null, C[f] = null, U(L)), C[i] = L;
        return;
      }
      var q = C[r];
      q !== null && (C[o] = null, C[r] = null, C[f] = null, q(l(void 0, !0))), C[n] = !0;
    }), R.on("readable", m.bind(null, C)), C;
  };
  return Ln = P, Ln;
}
var Fn, r3;
function gE() {
  return r3 || (r3 = 1, Fn = function() {
    throw new Error("Readable.from is not available in the browser");
  }), Fn;
}
var Hn, f3;
function Vh() {
  if (f3)
    return Hn;
  f3 = 1, Hn = z;
  var e;
  z.ReadableState = Z, gt().EventEmitter;
  var t = function(E, j) {
    return E.listeners(j).length;
  }, a = vh, r = Q.Buffer, f = I7.Uint8Array || function() {
  };
  function i(_) {
    return r.from(_);
  }
  function n(_) {
    return r.isBuffer(_) || _ instanceof f;
  }
  var o = R0, s;
  o && o.debuglog ? s = o.debuglog("stream") : s = function() {
  };
  var b = zS(), l = Fh, v = Uh, m = v.getHighWaterMark, x = gr.codes, I = x.ERR_INVALID_ARG_TYPE, k = x.ERR_STREAM_PUSH_AFTER_EOF, P = x.ERR_METHOD_NOT_IMPLEMENTED, M = x.ERR_STREAM_UNSHIFT_AFTER_END_EVENT, R, F, C;
  X7()(z, a);
  var L = l.errorOrDestroy, U = ["error", "close", "destroy", "pause", "resume"];
  function q(_, E, j) {
    if (typeof _.prependListener == "function")
      return _.prependListener(E, j);
    !_._events || !_._events[E] ? _.on(E, j) : Array.isArray(_._events[E]) ? _._events[E].unshift(j) : _._events[E] = [j, _._events[E]];
  }
  function Z(_, E, j) {
    e = e || e1(), _ = _ || {}, typeof j != "boolean" && (j = E instanceof e), this.objectMode = !!_.objectMode, j && (this.objectMode = this.objectMode || !!_.readableObjectMode), this.highWaterMark = m(this, _, "readableHighWaterMark", j), this.buffer = new b(), this.length = 0, this.pipes = null, this.pipesCount = 0, this.flowing = null, this.ended = !1, this.endEmitted = !1, this.reading = !1, this.sync = !0, this.needReadable = !1, this.emittedReadable = !1, this.readableListening = !1, this.resumeScheduled = !1, this.paused = !0, this.emitClose = _.emitClose !== !1, this.autoDestroy = !!_.autoDestroy, this.destroyed = !1, this.defaultEncoding = _.defaultEncoding || "utf8", this.awaitDrain = 0, this.readingMore = !1, this.decoder = null, this.encoding = null, _.encoding && (R || (R = pt.StringDecoder), this.decoder = new R(_.encoding), this.encoding = _.encoding);
  }
  function z(_) {
    if (e = e || e1(), !(this instanceof z))
      return new z(_);
    var E = this instanceof e;
    this._readableState = new Z(_, this, E), this.readable = !0, _ && (typeof _.read == "function" && (this._read = _.read), typeof _.destroy == "function" && (this._destroy = _.destroy)), a.call(this);
  }
  Object.defineProperty(z.prototype, "destroyed", {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: !1,
    get: function() {
      return this._readableState === void 0 ? !1 : this._readableState.destroyed;
    },
    set: function(E) {
      this._readableState && (this._readableState.destroyed = E);
    }
  }), z.prototype.destroy = l.destroy, z.prototype._undestroy = l.undestroy, z.prototype._destroy = function(_, E) {
    E(_);
  }, z.prototype.push = function(_, E) {
    var j = this._readableState, V;
    return j.objectMode ? V = !0 : typeof _ == "string" && (E = E || j.defaultEncoding, E !== j.encoding && (_ = r.from(_, E), E = ""), V = !0), G(this, _, E, !1, V);
  }, z.prototype.unshift = function(_) {
    return G(this, _, null, !0, !1);
  };
  function G(_, E, j, V, n7) {
    s("readableAddChunk", E);
    var K = _._readableState;
    if (E === null)
      K.reading = !1, y(_, K);
    else {
      var B;
      if (n7 || (B = u(K, E)), B)
        L(_, B);
      else if (K.objectMode || E && E.length > 0)
        if (typeof E != "string" && !K.objectMode && Object.getPrototypeOf(E) !== r.prototype && (E = i(E)), V)
          K.endEmitted ? L(_, new M()) : O(_, K, E, !0);
        else if (K.ended)
          L(_, new k());
        else {
          if (K.destroyed)
            return !1;
          K.reading = !1, K.decoder && !j ? (E = K.decoder.write(E), K.objectMode || E.length !== 0 ? O(_, K, E, !1) : g(_, K)) : O(_, K, E, !1);
        }
      else
        V || (K.reading = !1, g(_, K));
    }
    return !K.ended && (K.length < K.highWaterMark || K.length === 0);
  }
  function O(_, E, j, V) {
    E.flowing && E.length === 0 && !E.sync ? (E.awaitDrain = 0, _.emit("data", j)) : (E.length += E.objectMode ? 1 : j.length, V ? E.buffer.unshift(j) : E.buffer.push(j), E.needReadable && S(_)), g(_, E);
  }
  function u(_, E) {
    var j;
    return !n(E) && typeof E != "string" && E !== void 0 && !_.objectMode && (j = new I("chunk", ["string", "Buffer", "Uint8Array"], E)), j;
  }
  z.prototype.isPaused = function() {
    return this._readableState.flowing === !1;
  }, z.prototype.setEncoding = function(_) {
    R || (R = pt.StringDecoder);
    var E = new R(_);
    this._readableState.decoder = E, this._readableState.encoding = this._readableState.decoder.encoding;
    for (var j = this._readableState.buffer.head, V = ""; j !== null; )
      V += E.write(j.data), j = j.next;
    return this._readableState.buffer.clear(), V !== "" && this._readableState.buffer.push(V), this._readableState.length = V.length, this;
  };
  var p = 1073741824;
  function d(_) {
    return _ >= p ? _ = p : (_--, _ |= _ >>> 1, _ |= _ >>> 2, _ |= _ >>> 4, _ |= _ >>> 8, _ |= _ >>> 16, _++), _;
  }
  function c(_, E) {
    return _ <= 0 || E.length === 0 && E.ended ? 0 : E.objectMode ? 1 : _ !== _ ? E.flowing && E.length ? E.buffer.head.data.length : E.length : (_ > E.highWaterMark && (E.highWaterMark = d(_)), _ <= E.length ? _ : E.ended ? E.length : (E.needReadable = !0, 0));
  }
  z.prototype.read = function(_) {
    s("read", _), _ = parseInt(_, 10);
    var E = this._readableState, j = _;
    if (_ !== 0 && (E.emittedReadable = !1), _ === 0 && E.needReadable && ((E.highWaterMark !== 0 ? E.length >= E.highWaterMark : E.length > 0) || E.ended))
      return s("read: emitReadable", E.length, E.ended), E.length === 0 && E.ended ? X(this) : S(this), null;
    if (_ = c(_, E), _ === 0 && E.ended)
      return E.length === 0 && X(this), null;
    var V = E.needReadable;
    s("need readable", V), (E.length === 0 || E.length - _ < E.highWaterMark) && (V = !0, s("length less than watermark", V)), E.ended || E.reading ? (V = !1, s("reading or ended", V)) : V && (s("do read"), E.reading = !0, E.sync = !0, E.length === 0 && (E.needReadable = !0), this._read(E.highWaterMark), E.sync = !1, E.reading || (_ = c(j, E)));
    var n7;
    return _ > 0 ? n7 = $(_, E) : n7 = null, n7 === null ? (E.needReadable = E.length <= E.highWaterMark, _ = 0) : (E.length -= _, E.awaitDrain = 0), E.length === 0 && (E.ended || (E.needReadable = !0), j !== _ && E.ended && X(this)), n7 !== null && this.emit("data", n7), n7;
  };
  function y(_, E) {
    if (s("onEofChunk"), !E.ended) {
      if (E.decoder) {
        var j = E.decoder.end();
        j && j.length && (E.buffer.push(j), E.length += E.objectMode ? 1 : j.length);
      }
      E.ended = !0, E.sync ? S(_) : (E.needReadable = !1, E.emittedReadable || (E.emittedReadable = !0, T(_)));
    }
  }
  function S(_) {
    var E = _._readableState;
    s("emitReadable", E.needReadable, E.emittedReadable), E.needReadable = !1, E.emittedReadable || (s("emitReadable", E.flowing), E.emittedReadable = !0, g7.nextTick(T, _));
  }
  function T(_) {
    var E = _._readableState;
    s("emitReadable_", E.destroyed, E.length, E.ended), !E.destroyed && (E.length || E.ended) && (_.emit("readable"), E.emittedReadable = !1), E.needReadable = !E.flowing && !E.ended && E.length <= E.highWaterMark, H(_);
  }
  function g(_, E) {
    E.readingMore || (E.readingMore = !0, g7.nextTick(w, _, E));
  }
  function w(_, E) {
    for (; !E.reading && !E.ended && (E.length < E.highWaterMark || E.flowing && E.length === 0); ) {
      var j = E.length;
      if (s("maybeReadMore read 0"), _.read(0), j === E.length)
        break;
    }
    E.readingMore = !1;
  }
  z.prototype._read = function(_) {
    L(this, new P("_read()"));
  }, z.prototype.pipe = function(_, E) {
    var j = this, V = this._readableState;
    switch (V.pipesCount) {
      case 0:
        V.pipes = _;
        break;
      case 1:
        V.pipes = [V.pipes, _];
        break;
      default:
        V.pipes.push(_);
        break;
    }
    V.pipesCount += 1, s("pipe count=%d opts=%j", V.pipesCount, E);
    var n7 = (!E || E.end !== !1) && _ !== g7.stdout && _ !== g7.stderr, K = n7 ? D : p7;
    V.endEmitted ? g7.nextTick(K) : j.once("end", K), _.on("unpipe", B);
    function B(l7, y7) {
      s("onunpipe"), l7 === j && y7 && y7.hasUnpiped === !1 && (y7.hasUnpiped = !0, o7());
    }
    function D() {
      s("onend"), _.end();
    }
    var W = A(j);
    _.on("drain", W);
    var e7 = !1;
    function o7() {
      s("cleanup"), _.removeListener("close", u7), _.removeListener("finish", m7), _.removeListener("drain", W), _.removeListener("error", s7), _.removeListener("unpipe", B), j.removeListener("end", D), j.removeListener("end", p7), j.removeListener("data", a7), e7 = !0, V.awaitDrain && (!_._writableState || _._writableState.needDrain) && W();
    }
    j.on("data", a7);
    function a7(l7) {
      s("ondata");
      var y7 = _.write(l7);
      s("dest.write", y7), y7 === !1 && ((V.pipesCount === 1 && V.pipes === _ || V.pipesCount > 1 && J(V.pipes, _) !== -1) && !e7 && (s("false write response, pause", V.awaitDrain), V.awaitDrain++), j.pause());
    }
    function s7(l7) {
      s("onerror", l7), p7(), _.removeListener("error", s7), t(_, "error") === 0 && L(_, l7);
    }
    q(_, "error", s7);
    function u7() {
      _.removeListener("finish", m7), p7();
    }
    _.once("close", u7);
    function m7() {
      s("onfinish"), _.removeListener("close", u7), p7();
    }
    _.once("finish", m7);
    function p7() {
      s("unpipe"), j.unpipe(_);
    }
    return _.emit("pipe", j), V.flowing || (s("pipe resume"), j.resume()), _;
  };
  function A(_) {
    return function() {
      var j = _._readableState;
      s("pipeOnDrain", j.awaitDrain), j.awaitDrain && j.awaitDrain--, j.awaitDrain === 0 && t(_, "data") && (j.flowing = !0, H(_));
    };
  }
  z.prototype.unpipe = function(_) {
    var E = this._readableState, j = {
      hasUnpiped: !1
    };
    if (E.pipesCount === 0)
      return this;
    if (E.pipesCount === 1)
      return _ && _ !== E.pipes ? this : (_ || (_ = E.pipes), E.pipes = null, E.pipesCount = 0, E.flowing = !1, _ && _.emit("unpipe", this, j), this);
    if (!_) {
      var V = E.pipes, n7 = E.pipesCount;
      E.pipes = null, E.pipesCount = 0, E.flowing = !1;
      for (var K = 0; K < n7; K++)
        V[K].emit("unpipe", this, {
          hasUnpiped: !1
        });
      return this;
    }
    var B = J(E.pipes, _);
    return B === -1 ? this : (E.pipes.splice(B, 1), E.pipesCount -= 1, E.pipesCount === 1 && (E.pipes = E.pipes[0]), _.emit("unpipe", this, j), this);
  }, z.prototype.on = function(_, E) {
    var j = a.prototype.on.call(this, _, E), V = this._readableState;
    return _ === "data" ? (V.readableListening = this.listenerCount("readable") > 0, V.flowing !== !1 && this.resume()) : _ === "readable" && !V.endEmitted && !V.readableListening && (V.readableListening = V.needReadable = !0, V.flowing = !1, V.emittedReadable = !1, s("on readable", V.length, V.reading), V.length ? S(this) : V.reading || g7.nextTick(N, this)), j;
  }, z.prototype.addListener = z.prototype.on, z.prototype.removeListener = function(_, E) {
    var j = a.prototype.removeListener.call(this, _, E);
    return _ === "readable" && g7.nextTick(h, this), j;
  }, z.prototype.removeAllListeners = function(_) {
    var E = a.prototype.removeAllListeners.apply(this, arguments);
    return (_ === "readable" || _ === void 0) && g7.nextTick(h, this), E;
  };
  function h(_) {
    var E = _._readableState;
    E.readableListening = _.listenerCount("readable") > 0, E.resumeScheduled && !E.paused ? E.flowing = !0 : _.listenerCount("data") > 0 && _.resume();
  }
  function N(_) {
    s("readable nexttick read 0"), _.read(0);
  }
  z.prototype.resume = function() {
    var _ = this._readableState;
    return _.flowing || (s("resume"), _.flowing = !_.readableListening, Y(this, _)), _.paused = !1, this;
  };
  function Y(_, E) {
    E.resumeScheduled || (E.resumeScheduled = !0, g7.nextTick(t7, _, E));
  }
  function t7(_, E) {
    s("resume", E.reading), E.reading || _.read(0), E.resumeScheduled = !1, _.emit("resume"), H(_), E.flowing && !E.reading && _.read(0);
  }
  z.prototype.pause = function() {
    return s("call pause flowing=%j", this._readableState.flowing), this._readableState.flowing !== !1 && (s("pause"), this._readableState.flowing = !1, this.emit("pause")), this._readableState.paused = !0, this;
  };
  function H(_) {
    var E = _._readableState;
    for (s("flow", E.flowing); E.flowing && _.read() !== null; )
      ;
  }
  z.prototype.wrap = function(_) {
    var E = this, j = this._readableState, V = !1;
    _.on("end", function() {
      if (s("wrapped end"), j.decoder && !j.ended) {
        var B = j.decoder.end();
        B && B.length && E.push(B);
      }
      E.push(null);
    }), _.on("data", function(B) {
      if (s("wrapped data"), j.decoder && (B = j.decoder.write(B)), !(j.objectMode && B == null) && !(!j.objectMode && (!B || !B.length))) {
        var D = E.push(B);
        D || (V = !0, _.pause());
      }
    });
    for (var n7 in _)
      this[n7] === void 0 && typeof _[n7] == "function" && (this[n7] = function(D) {
        return function() {
          return _[D].apply(_, arguments);
        };
      }(n7));
    for (var K = 0; K < U.length; K++)
      _.on(U[K], this.emit.bind(this, U[K]));
    return this._read = function(B) {
      s("wrapped _read", B), V && (V = !1, _.resume());
    }, this;
  }, typeof Symbol == "function" && (z.prototype[Symbol.asyncIterator] = function() {
    return F === void 0 && (F = yE()), F(this);
  }), Object.defineProperty(z.prototype, "readableHighWaterMark", {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: !1,
    get: function() {
      return this._readableState.highWaterMark;
    }
  }), Object.defineProperty(z.prototype, "readableBuffer", {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: !1,
    get: function() {
      return this._readableState && this._readableState.buffer;
    }
  }), Object.defineProperty(z.prototype, "readableFlowing", {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: !1,
    get: function() {
      return this._readableState.flowing;
    },
    set: function(E) {
      this._readableState && (this._readableState.flowing = E);
    }
  }), z._fromList = $, Object.defineProperty(z.prototype, "readableLength", {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: !1,
    get: function() {
      return this._readableState.length;
    }
  });
  function $(_, E) {
    if (E.length === 0)
      return null;
    var j;
    return E.objectMode ? j = E.buffer.shift() : !_ || _ >= E.length ? (E.decoder ? j = E.buffer.join("") : E.buffer.length === 1 ? j = E.buffer.first() : j = E.buffer.concat(E.length), E.buffer.clear()) : j = E.buffer.consume(_, E.decoder), j;
  }
  function X(_) {
    var E = _._readableState;
    s("endReadable", E.endEmitted), E.endEmitted || (E.ended = !0, g7.nextTick(i7, E, _));
  }
  function i7(_, E) {
    if (s("endReadableNT", _.endEmitted, _.length), !_.endEmitted && _.length === 0 && (_.endEmitted = !0, E.readable = !1, E.emit("end"), _.autoDestroy)) {
      var j = E._writableState;
      (!j || j.autoDestroy && j.finished) && E.destroy();
    }
  }
  typeof Symbol == "function" && (z.from = function(_, E) {
    return C === void 0 && (C = gE()), C(z, _, E);
  });
  function J(_, E) {
    for (var j = 0, V = _.length; j < V; j++)
      if (_[j] === E)
        return j;
    return -1;
  }
  return Hn;
}
var zh = zt, Xf = gr.codes, xE = Xf.ERR_METHOD_NOT_IMPLEMENTED, _E = Xf.ERR_MULTIPLE_CALLBACK, wE = Xf.ERR_TRANSFORM_ALREADY_TRANSFORMING, SE = Xf.ERR_TRANSFORM_WITH_LENGTH_0, Jf = e1();
X7()(zt, Jf);
function EE(e, t) {
  var a = this._transformState;
  a.transforming = !1;
  var r = a.writecb;
  if (r === null)
    return this.emit("error", new _E());
  a.writechunk = null, a.writecb = null, t != null && this.push(t), r(e);
  var f = this._readableState;
  f.reading = !1, (f.needReadable || f.length < f.highWaterMark) && this._read(f.highWaterMark);
}
function zt(e) {
  if (!(this instanceof zt))
    return new zt(e);
  Jf.call(this, e), this._transformState = {
    afterTransform: EE.bind(this),
    needTransform: !1,
    transforming: !1,
    writecb: null,
    writechunk: null,
    writeencoding: null
  }, this._readableState.needReadable = !0, this._readableState.sync = !1, e && (typeof e.transform == "function" && (this._transform = e.transform), typeof e.flush == "function" && (this._flush = e.flush)), this.on("prefinish", TE);
}
function TE() {
  var e = this;
  typeof this._flush == "function" && !this._readableState.destroyed ? this._flush(function(t, a) {
    i3(e, t, a);
  }) : i3(this, null, null);
}
zt.prototype.push = function(e, t) {
  return this._transformState.needTransform = !1, Jf.prototype.push.call(this, e, t);
};
zt.prototype._transform = function(e, t, a) {
  a(new xE("_transform()"));
};
zt.prototype._write = function(e, t, a) {
  var r = this._transformState;
  if (r.writecb = a, r.writechunk = e, r.writeencoding = t, !r.transforming) {
    var f = this._readableState;
    (r.needTransform || f.needReadable || f.length < f.highWaterMark) && this._read(f.highWaterMark);
  }
};
zt.prototype._read = function(e) {
  var t = this._transformState;
  t.writechunk !== null && !t.transforming ? (t.transforming = !0, this._transform(t.writechunk, t.writeencoding, t.afterTransform)) : t.needTransform = !0;
};
zt.prototype._destroy = function(e, t) {
  Jf.prototype._destroy.call(this, e, function(a) {
    t(a);
  });
};
function i3(e, t, a) {
  if (t)
    return e.emit("error", t);
  if (a != null && e.push(a), e._writableState.length)
    throw new SE();
  if (e._transformState.transforming)
    throw new wE();
  return e.push(null);
}
var AE = I9, qh = zh;
X7()(I9, qh);
function I9(e) {
  if (!(this instanceof I9))
    return new I9(e);
  qh.call(this, e);
}
I9.prototype._transform = function(e, t, a) {
  a(null, e);
};
var Un;
function IE(e) {
  var t = !1;
  return function() {
    t || (t = !0, e.apply(void 0, arguments));
  };
}
var Kh = gr.codes, kE = Kh.ERR_MISSING_ARGS, OE = Kh.ERR_STREAM_DESTROYED;
function n3(e) {
  if (e)
    throw e;
}
function PE(e) {
  return e.setHeader && typeof e.abort == "function";
}
function ME(e, t, a, r) {
  r = IE(r);
  var f = !1;
  e.on("close", function() {
    f = !0;
  }), Un === void 0 && (Un = Ks), Un(e, {
    readable: t,
    writable: a
  }, function(n) {
    if (n)
      return r(n);
    f = !0, r();
  });
  var i = !1;
  return function(n) {
    if (!f && !i) {
      if (i = !0, PE(e))
        return e.abort();
      if (typeof e.destroy == "function")
        return e.destroy();
      r(n || new OE("pipe"));
    }
  };
}
function o3(e) {
  e();
}
function RE(e, t) {
  return e.pipe(t);
}
function BE(e) {
  return !e.length || typeof e[e.length - 1] != "function" ? n3 : e.pop();
}
function NE() {
  for (var e = arguments.length, t = new Array(e), a = 0; a < e; a++)
    t[a] = arguments[a];
  var r = BE(t);
  if (Array.isArray(t[0]) && (t = t[0]), t.length < 2)
    throw new kE("streams");
  var f, i = t.map(function(n, o) {
    var s = o < t.length - 1, b = o > 0;
    return ME(n, s, b, function(l) {
      f || (f = l), l && i.forEach(o3), !s && (i.forEach(o3), r(f));
    });
  });
  return t.reduce(RE);
}
var CE = NE;
(function(e, t) {
  t = e.exports = Vh(), t.Stream = t, t.Readable = t, t.Writable = $h(), t.Duplex = e1(), t.Transform = zh, t.PassThrough = AE, t.finished = Ks, t.pipeline = CE;
})(Io, Io.exports);
var DE = Io.exports, Ef = fe.Buffer, Gh = DE.Transform, LE = X7();
function FE(e, t) {
  if (!Ef.isBuffer(e) && typeof e != "string")
    throw new TypeError(t + " must be a string or a buffer");
}
function Pa(e) {
  Gh.call(this), this._block = Ef.allocUnsafe(e), this._blockSize = e, this._blockOffset = 0, this._length = [0, 0, 0, 0], this._finalized = !1;
}
LE(Pa, Gh);
Pa.prototype._transform = function(e, t, a) {
  var r = null;
  try {
    this.update(e, t);
  } catch (f) {
    r = f;
  }
  a(r);
};
Pa.prototype._flush = function(e) {
  var t = null;
  try {
    this.push(this.digest());
  } catch (a) {
    t = a;
  }
  e(t);
};
Pa.prototype.update = function(e, t) {
  if (FE(e, "Data"), this._finalized)
    throw new Error("Digest already called");
  Ef.isBuffer(e) || (e = Ef.from(e, t));
  for (var a = this._block, r = 0; this._blockOffset + e.length - r >= this._blockSize; ) {
    for (var f = this._blockOffset; f < this._blockSize; )
      a[f++] = e[r++];
    this._update(), this._blockOffset = 0;
  }
  for (; r < e.length; )
    a[this._blockOffset++] = e[r++];
  for (var i = 0, n = e.length * 8; n > 0; ++i)
    this._length[i] += n, n = this._length[i] / 4294967296 | 0, n > 0 && (this._length[i] -= 4294967296 * n);
  return this;
};
Pa.prototype._update = function() {
  throw new Error("_update is not implemented");
};
Pa.prototype.digest = function(e) {
  if (this._finalized)
    throw new Error("Digest already called");
  this._finalized = !0;
  var t = this._digest();
  e !== void 0 && (t = t.toString(e)), this._block.fill(0), this._blockOffset = 0;
  for (var a = 0; a < 4; ++a)
    this._length[a] = 0;
  return t;
};
Pa.prototype._digest = function() {
  throw new Error("_digest is not implemented");
};
var Wh = Pa, HE = X7(), Zh = Wh, UE = fe.Buffer, $E = new Array(16);
function Qf() {
  Zh.call(this, 64), this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878;
}
HE(Qf, Zh);
Qf.prototype._update = function() {
  for (var e = $E, t = 0; t < 16; ++t)
    e[t] = this._block.readInt32LE(t * 4);
  var a = this._a, r = this._b, f = this._c, i = this._d;
  a = w0(a, r, f, i, e[0], 3614090360, 7), i = w0(i, a, r, f, e[1], 3905402710, 12), f = w0(f, i, a, r, e[2], 606105819, 17), r = w0(r, f, i, a, e[3], 3250441966, 22), a = w0(a, r, f, i, e[4], 4118548399, 7), i = w0(i, a, r, f, e[5], 1200080426, 12), f = w0(f, i, a, r, e[6], 2821735955, 17), r = w0(r, f, i, a, e[7], 4249261313, 22), a = w0(a, r, f, i, e[8], 1770035416, 7), i = w0(i, a, r, f, e[9], 2336552879, 12), f = w0(f, i, a, r, e[10], 4294925233, 17), r = w0(r, f, i, a, e[11], 2304563134, 22), a = w0(a, r, f, i, e[12], 1804603682, 7), i = w0(i, a, r, f, e[13], 4254626195, 12), f = w0(f, i, a, r, e[14], 2792965006, 17), r = w0(r, f, i, a, e[15], 1236535329, 22), a = S0(a, r, f, i, e[1], 4129170786, 5), i = S0(i, a, r, f, e[6], 3225465664, 9), f = S0(f, i, a, r, e[11], 643717713, 14), r = S0(r, f, i, a, e[0], 3921069994, 20), a = S0(a, r, f, i, e[5], 3593408605, 5), i = S0(i, a, r, f, e[10], 38016083, 9), f = S0(f, i, a, r, e[15], 3634488961, 14), r = S0(r, f, i, a, e[4], 3889429448, 20), a = S0(a, r, f, i, e[9], 568446438, 5), i = S0(i, a, r, f, e[14], 3275163606, 9), f = S0(f, i, a, r, e[3], 4107603335, 14), r = S0(r, f, i, a, e[8], 1163531501, 20), a = S0(a, r, f, i, e[13], 2850285829, 5), i = S0(i, a, r, f, e[2], 4243563512, 9), f = S0(f, i, a, r, e[7], 1735328473, 14), r = S0(r, f, i, a, e[12], 2368359562, 20), a = E0(a, r, f, i, e[5], 4294588738, 4), i = E0(i, a, r, f, e[8], 2272392833, 11), f = E0(f, i, a, r, e[11], 1839030562, 16), r = E0(r, f, i, a, e[14], 4259657740, 23), a = E0(a, r, f, i, e[1], 2763975236, 4), i = E0(i, a, r, f, e[4], 1272893353, 11), f = E0(f, i, a, r, e[7], 4139469664, 16), r = E0(r, f, i, a, e[10], 3200236656, 23), a = E0(a, r, f, i, e[13], 681279174, 4), i = E0(i, a, r, f, e[0], 3936430074, 11), f = E0(f, i, a, r, e[3], 3572445317, 16), r = E0(r, f, i, a, e[6], 76029189, 23), a = E0(a, r, f, i, e[9], 3654602809, 4), i = E0(i, a, r, f, e[12], 3873151461, 11), f = E0(f, i, a, r, e[15], 530742520, 16), r = E0(r, f, i, a, e[2], 3299628645, 23), a = T0(a, r, f, i, e[0], 4096336452, 6), i = T0(i, a, r, f, e[7], 1126891415, 10), f = T0(f, i, a, r, e[14], 2878612391, 15), r = T0(r, f, i, a, e[5], 4237533241, 21), a = T0(a, r, f, i, e[12], 1700485571, 6), i = T0(i, a, r, f, e[3], 2399980690, 10), f = T0(f, i, a, r, e[10], 4293915773, 15), r = T0(r, f, i, a, e[1], 2240044497, 21), a = T0(a, r, f, i, e[8], 1873313359, 6), i = T0(i, a, r, f, e[15], 4264355552, 10), f = T0(f, i, a, r, e[6], 2734768916, 15), r = T0(r, f, i, a, e[13], 1309151649, 21), a = T0(a, r, f, i, e[4], 4149444226, 6), i = T0(i, a, r, f, e[11], 3174756917, 10), f = T0(f, i, a, r, e[2], 718787259, 15), r = T0(r, f, i, a, e[9], 3951481745, 21), this._a = this._a + a | 0, this._b = this._b + r | 0, this._c = this._c + f | 0, this._d = this._d + i | 0;
};
Qf.prototype._digest = function() {
  this._block[this._blockOffset++] = 128, this._blockOffset > 56 && (this._block.fill(0, this._blockOffset, 64), this._update(), this._blockOffset = 0), this._block.fill(0, this._blockOffset, 56), this._block.writeUInt32LE(this._length[0], 56), this._block.writeUInt32LE(this._length[1], 60), this._update();
  var e = UE.allocUnsafe(16);
  return e.writeInt32LE(this._a, 0), e.writeInt32LE(this._b, 4), e.writeInt32LE(this._c, 8), e.writeInt32LE(this._d, 12), e;
};
function ei(e, t) {
  return e << t | e >>> 32 - t;
}
function w0(e, t, a, r, f, i, n) {
  return ei(e + (t & a | ~t & r) + f + i | 0, n) + t | 0;
}
function S0(e, t, a, r, f, i, n) {
  return ei(e + (t & r | a & ~r) + f + i | 0, n) + t | 0;
}
function E0(e, t, a, r, f, i, n) {
  return ei(e + (t ^ a ^ r) + f + i | 0, n) + t | 0;
}
function T0(e, t, a, r, f, i, n) {
  return ei(e + (a ^ (t | ~r)) + f + i | 0, n) + t | 0;
}
var Gs = Qf, $n = Q.Buffer, jE = X7(), Yh = Wh, VE = new Array(16), $1 = [
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  7,
  4,
  13,
  1,
  10,
  6,
  15,
  3,
  12,
  0,
  9,
  5,
  2,
  14,
  11,
  8,
  3,
  10,
  14,
  4,
  9,
  15,
  8,
  1,
  2,
  7,
  0,
  6,
  13,
  11,
  5,
  12,
  1,
  9,
  11,
  10,
  0,
  8,
  12,
  4,
  13,
  3,
  7,
  15,
  14,
  5,
  6,
  2,
  4,
  0,
  5,
  9,
  7,
  12,
  2,
  10,
  14,
  1,
  3,
  8,
  11,
  6,
  15,
  13
], j1 = [
  5,
  14,
  7,
  0,
  9,
  2,
  11,
  4,
  13,
  6,
  15,
  8,
  1,
  10,
  3,
  12,
  6,
  11,
  3,
  7,
  0,
  13,
  5,
  10,
  14,
  15,
  8,
  12,
  4,
  9,
  1,
  2,
  15,
  5,
  1,
  3,
  7,
  14,
  6,
  9,
  11,
  8,
  12,
  2,
  10,
  0,
  4,
  13,
  8,
  6,
  4,
  1,
  3,
  11,
  15,
  0,
  5,
  12,
  2,
  13,
  9,
  7,
  10,
  14,
  12,
  15,
  10,
  4,
  1,
  5,
  8,
  7,
  6,
  2,
  13,
  14,
  0,
  3,
  9,
  11
], V1 = [
  11,
  14,
  15,
  12,
  5,
  8,
  7,
  9,
  11,
  13,
  14,
  15,
  6,
  7,
  9,
  8,
  7,
  6,
  8,
  13,
  11,
  9,
  7,
  15,
  7,
  12,
  15,
  9,
  11,
  7,
  13,
  12,
  11,
  13,
  6,
  7,
  14,
  9,
  13,
  15,
  14,
  8,
  13,
  6,
  5,
  12,
  7,
  5,
  11,
  12,
  14,
  15,
  14,
  15,
  9,
  8,
  9,
  14,
  5,
  6,
  8,
  6,
  5,
  12,
  9,
  15,
  5,
  11,
  6,
  8,
  13,
  12,
  5,
  12,
  13,
  14,
  11,
  8,
  5,
  6
], z1 = [
  8,
  9,
  9,
  11,
  13,
  15,
  15,
  5,
  7,
  7,
  8,
  11,
  14,
  14,
  12,
  6,
  9,
  13,
  15,
  7,
  12,
  8,
  9,
  11,
  7,
  7,
  12,
  7,
  6,
  15,
  13,
  11,
  9,
  7,
  15,
  11,
  8,
  6,
  6,
  14,
  12,
  13,
  5,
  14,
  13,
  13,
  7,
  5,
  15,
  5,
  8,
  11,
  14,
  14,
  6,
  14,
  6,
  9,
  12,
  9,
  12,
  5,
  15,
  8,
  8,
  5,
  12,
  9,
  12,
  5,
  14,
  6,
  8,
  13,
  6,
  5,
  15,
  13,
  11,
  11
], q1 = [0, 1518500249, 1859775393, 2400959708, 2840853838], K1 = [1352829926, 1548603684, 1836072691, 2053994217, 0];
function ti() {
  Yh.call(this, 64), this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520;
}
jE(ti, Yh);
ti.prototype._update = function() {
  for (var e = VE, t = 0; t < 16; ++t)
    e[t] = this._block.readInt32LE(t * 4);
  for (var a = this._a | 0, r = this._b | 0, f = this._c | 0, i = this._d | 0, n = this._e | 0, o = this._a | 0, s = this._b | 0, b = this._c | 0, l = this._d | 0, v = this._e | 0, m = 0; m < 80; m += 1) {
    var x, I;
    m < 16 ? (x = s3(a, r, f, i, n, e[$1[m]], q1[0], V1[m]), I = l3(o, s, b, l, v, e[j1[m]], K1[0], z1[m])) : m < 32 ? (x = d3(a, r, f, i, n, e[$1[m]], q1[1], V1[m]), I = u3(o, s, b, l, v, e[j1[m]], K1[1], z1[m])) : m < 48 ? (x = c3(a, r, f, i, n, e[$1[m]], q1[2], V1[m]), I = c3(o, s, b, l, v, e[j1[m]], K1[2], z1[m])) : m < 64 ? (x = u3(a, r, f, i, n, e[$1[m]], q1[3], V1[m]), I = d3(o, s, b, l, v, e[j1[m]], K1[3], z1[m])) : (x = l3(a, r, f, i, n, e[$1[m]], q1[4], V1[m]), I = s3(o, s, b, l, v, e[j1[m]], K1[4], z1[m])), a = n, n = i, i = or(f, 10), f = r, r = x, o = v, v = l, l = or(b, 10), b = s, s = I;
  }
  var k = this._b + f + l | 0;
  this._b = this._c + i + v | 0, this._c = this._d + n + o | 0, this._d = this._e + a + s | 0, this._e = this._a + r + b | 0, this._a = k;
};
ti.prototype._digest = function() {
  this._block[this._blockOffset++] = 128, this._blockOffset > 56 && (this._block.fill(0, this._blockOffset, 64), this._update(), this._blockOffset = 0), this._block.fill(0, this._blockOffset, 56), this._block.writeUInt32LE(this._length[0], 56), this._block.writeUInt32LE(this._length[1], 60), this._update();
  var e = $n.alloc ? $n.alloc(20) : new $n(20);
  return e.writeInt32LE(this._a, 0), e.writeInt32LE(this._b, 4), e.writeInt32LE(this._c, 8), e.writeInt32LE(this._d, 12), e.writeInt32LE(this._e, 16), e;
};
function or(e, t) {
  return e << t | e >>> 32 - t;
}
function s3(e, t, a, r, f, i, n, o) {
  return or(e + (t ^ a ^ r) + i + n | 0, o) + f | 0;
}
function d3(e, t, a, r, f, i, n, o) {
  return or(e + (t & a | ~t & r) + i + n | 0, o) + f | 0;
}
function c3(e, t, a, r, f, i, n, o) {
  return or(e + ((t | ~a) ^ r) + i + n | 0, o) + f | 0;
}
function u3(e, t, a, r, f, i, n, o) {
  return or(e + (t & r | a & ~r) + i + n | 0, o) + f | 0;
}
function l3(e, t, a, r, f, i, n, o) {
  return or(e + (t ^ (a | ~r)) + i + n | 0, o) + f | 0;
}
var Ws = ti, Xh = { exports: {} }, Jh = fe.Buffer;
function ai(e, t) {
  this._block = Jh.alloc(e), this._finalSize = t, this._blockSize = e, this._len = 0;
}
ai.prototype.update = function(e, t) {
  typeof e == "string" && (t = t || "utf8", e = Jh.from(e, t));
  for (var a = this._block, r = this._blockSize, f = e.length, i = this._len, n = 0; n < f; ) {
    for (var o = i % r, s = Math.min(f - n, r - o), b = 0; b < s; b++)
      a[o + b] = e[n + b];
    i += s, n += s, i % r === 0 && this._update(a);
  }
  return this._len += f, this;
};
ai.prototype.digest = function(e) {
  var t = this._len % this._blockSize;
  this._block[t] = 128, this._block.fill(0, t + 1), t >= this._finalSize && (this._update(this._block), this._block.fill(0));
  var a = this._len * 8;
  if (a <= 4294967295)
    this._block.writeUInt32BE(a, this._blockSize - 4);
  else {
    var r = (a & 4294967295) >>> 0, f = (a - r) / 4294967296;
    this._block.writeUInt32BE(f, this._blockSize - 8), this._block.writeUInt32BE(r, this._blockSize - 4);
  }
  this._update(this._block);
  var i = this._hash();
  return e ? i.toString(e) : i;
};
ai.prototype._update = function() {
  throw new Error("_update must be implemented by subclass");
};
var _1 = ai, zE = X7(), Qh = _1, qE = fe.Buffer, KE = [
  1518500249,
  1859775393,
  -1894007588,
  -899497514
], GE = new Array(80);
function Z9() {
  this.init(), this._w = GE, Qh.call(this, 64, 56);
}
zE(Z9, Qh);
Z9.prototype.init = function() {
  return this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520, this;
};
function WE(e) {
  return e << 5 | e >>> 27;
}
function ZE(e) {
  return e << 30 | e >>> 2;
}
function YE(e, t, a, r) {
  return e === 0 ? t & a | ~t & r : e === 2 ? t & a | t & r | a & r : t ^ a ^ r;
}
Z9.prototype._update = function(e) {
  for (var t = this._w, a = this._a | 0, r = this._b | 0, f = this._c | 0, i = this._d | 0, n = this._e | 0, o = 0; o < 16; ++o)
    t[o] = e.readInt32BE(o * 4);
  for (; o < 80; ++o)
    t[o] = t[o - 3] ^ t[o - 8] ^ t[o - 14] ^ t[o - 16];
  for (var s = 0; s < 80; ++s) {
    var b = ~~(s / 20), l = WE(a) + YE(b, r, f, i) + n + t[s] + KE[b] | 0;
    n = i, i = f, f = ZE(r), r = a, a = l;
  }
  this._a = a + this._a | 0, this._b = r + this._b | 0, this._c = f + this._c | 0, this._d = i + this._d | 0, this._e = n + this._e | 0;
};
Z9.prototype._hash = function() {
  var e = qE.allocUnsafe(20);
  return e.writeInt32BE(this._a | 0, 0), e.writeInt32BE(this._b | 0, 4), e.writeInt32BE(this._c | 0, 8), e.writeInt32BE(this._d | 0, 12), e.writeInt32BE(this._e | 0, 16), e;
};
var XE = Z9, JE = X7(), eb = _1, QE = fe.Buffer, eT = [
  1518500249,
  1859775393,
  -1894007588,
  -899497514
], tT = new Array(80);
function Y9() {
  this.init(), this._w = tT, eb.call(this, 64, 56);
}
JE(Y9, eb);
Y9.prototype.init = function() {
  return this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520, this;
};
function aT(e) {
  return e << 1 | e >>> 31;
}
function rT(e) {
  return e << 5 | e >>> 27;
}
function fT(e) {
  return e << 30 | e >>> 2;
}
function iT(e, t, a, r) {
  return e === 0 ? t & a | ~t & r : e === 2 ? t & a | t & r | a & r : t ^ a ^ r;
}
Y9.prototype._update = function(e) {
  for (var t = this._w, a = this._a | 0, r = this._b | 0, f = this._c | 0, i = this._d | 0, n = this._e | 0, o = 0; o < 16; ++o)
    t[o] = e.readInt32BE(o * 4);
  for (; o < 80; ++o)
    t[o] = aT(t[o - 3] ^ t[o - 8] ^ t[o - 14] ^ t[o - 16]);
  for (var s = 0; s < 80; ++s) {
    var b = ~~(s / 20), l = rT(a) + iT(b, r, f, i) + n + t[s] + eT[b] | 0;
    n = i, i = f, f = fT(r), r = a, a = l;
  }
  this._a = a + this._a | 0, this._b = r + this._b | 0, this._c = f + this._c | 0, this._d = i + this._d | 0, this._e = n + this._e | 0;
};
Y9.prototype._hash = function() {
  var e = QE.allocUnsafe(20);
  return e.writeInt32BE(this._a | 0, 0), e.writeInt32BE(this._b | 0, 4), e.writeInt32BE(this._c | 0, 8), e.writeInt32BE(this._d | 0, 12), e.writeInt32BE(this._e | 0, 16), e;
};
var nT = Y9, oT = X7(), tb = _1, sT = fe.Buffer, dT = [
  1116352408,
  1899447441,
  3049323471,
  3921009573,
  961987163,
  1508970993,
  2453635748,
  2870763221,
  3624381080,
  310598401,
  607225278,
  1426881987,
  1925078388,
  2162078206,
  2614888103,
  3248222580,
  3835390401,
  4022224774,
  264347078,
  604807628,
  770255983,
  1249150122,
  1555081692,
  1996064986,
  2554220882,
  2821834349,
  2952996808,
  3210313671,
  3336571891,
  3584528711,
  113926993,
  338241895,
  666307205,
  773529912,
  1294757372,
  1396182291,
  1695183700,
  1986661051,
  2177026350,
  2456956037,
  2730485921,
  2820302411,
  3259730800,
  3345764771,
  3516065817,
  3600352804,
  4094571909,
  275423344,
  430227734,
  506948616,
  659060556,
  883997877,
  958139571,
  1322822218,
  1537002063,
  1747873779,
  1955562222,
  2024104815,
  2227730452,
  2361852424,
  2428436474,
  2756734187,
  3204031479,
  3329325298
], cT = new Array(64);
function X9() {
  this.init(), this._w = cT, tb.call(this, 64, 56);
}
oT(X9, tb);
X9.prototype.init = function() {
  return this._a = 1779033703, this._b = 3144134277, this._c = 1013904242, this._d = 2773480762, this._e = 1359893119, this._f = 2600822924, this._g = 528734635, this._h = 1541459225, this;
};
function uT(e, t, a) {
  return a ^ e & (t ^ a);
}
function lT(e, t, a) {
  return e & t | a & (e | t);
}
function pT(e) {
  return (e >>> 2 | e << 30) ^ (e >>> 13 | e << 19) ^ (e >>> 22 | e << 10);
}
function hT(e) {
  return (e >>> 6 | e << 26) ^ (e >>> 11 | e << 21) ^ (e >>> 25 | e << 7);
}
function bT(e) {
  return (e >>> 7 | e << 25) ^ (e >>> 18 | e << 14) ^ e >>> 3;
}
function mT(e) {
  return (e >>> 17 | e << 15) ^ (e >>> 19 | e << 13) ^ e >>> 10;
}
X9.prototype._update = function(e) {
  for (var t = this._w, a = this._a | 0, r = this._b | 0, f = this._c | 0, i = this._d | 0, n = this._e | 0, o = this._f | 0, s = this._g | 0, b = this._h | 0, l = 0; l < 16; ++l)
    t[l] = e.readInt32BE(l * 4);
  for (; l < 64; ++l)
    t[l] = mT(t[l - 2]) + t[l - 7] + bT(t[l - 15]) + t[l - 16] | 0;
  for (var v = 0; v < 64; ++v) {
    var m = b + hT(n) + uT(n, o, s) + dT[v] + t[v] | 0, x = pT(a) + lT(a, r, f) | 0;
    b = s, s = o, o = n, n = i + m | 0, i = f, f = r, r = a, a = m + x | 0;
  }
  this._a = a + this._a | 0, this._b = r + this._b | 0, this._c = f + this._c | 0, this._d = i + this._d | 0, this._e = n + this._e | 0, this._f = o + this._f | 0, this._g = s + this._g | 0, this._h = b + this._h | 0;
};
X9.prototype._hash = function() {
  var e = sT.allocUnsafe(32);
  return e.writeInt32BE(this._a, 0), e.writeInt32BE(this._b, 4), e.writeInt32BE(this._c, 8), e.writeInt32BE(this._d, 12), e.writeInt32BE(this._e, 16), e.writeInt32BE(this._f, 20), e.writeInt32BE(this._g, 24), e.writeInt32BE(this._h, 28), e;
};
var ab = X9, vT = X7(), yT = ab, gT = _1, xT = fe.Buffer, _T = new Array(64);
function ri() {
  this.init(), this._w = _T, gT.call(this, 64, 56);
}
vT(ri, yT);
ri.prototype.init = function() {
  return this._a = 3238371032, this._b = 914150663, this._c = 812702999, this._d = 4144912697, this._e = 4290775857, this._f = 1750603025, this._g = 1694076839, this._h = 3204075428, this;
};
ri.prototype._hash = function() {
  var e = xT.allocUnsafe(28);
  return e.writeInt32BE(this._a, 0), e.writeInt32BE(this._b, 4), e.writeInt32BE(this._c, 8), e.writeInt32BE(this._d, 12), e.writeInt32BE(this._e, 16), e.writeInt32BE(this._f, 20), e.writeInt32BE(this._g, 24), e;
};
var wT = ri, ST = X7(), rb = _1, ET = fe.Buffer, p3 = [
  1116352408,
  3609767458,
  1899447441,
  602891725,
  3049323471,
  3964484399,
  3921009573,
  2173295548,
  961987163,
  4081628472,
  1508970993,
  3053834265,
  2453635748,
  2937671579,
  2870763221,
  3664609560,
  3624381080,
  2734883394,
  310598401,
  1164996542,
  607225278,
  1323610764,
  1426881987,
  3590304994,
  1925078388,
  4068182383,
  2162078206,
  991336113,
  2614888103,
  633803317,
  3248222580,
  3479774868,
  3835390401,
  2666613458,
  4022224774,
  944711139,
  264347078,
  2341262773,
  604807628,
  2007800933,
  770255983,
  1495990901,
  1249150122,
  1856431235,
  1555081692,
  3175218132,
  1996064986,
  2198950837,
  2554220882,
  3999719339,
  2821834349,
  766784016,
  2952996808,
  2566594879,
  3210313671,
  3203337956,
  3336571891,
  1034457026,
  3584528711,
  2466948901,
  113926993,
  3758326383,
  338241895,
  168717936,
  666307205,
  1188179964,
  773529912,
  1546045734,
  1294757372,
  1522805485,
  1396182291,
  2643833823,
  1695183700,
  2343527390,
  1986661051,
  1014477480,
  2177026350,
  1206759142,
  2456956037,
  344077627,
  2730485921,
  1290863460,
  2820302411,
  3158454273,
  3259730800,
  3505952657,
  3345764771,
  106217008,
  3516065817,
  3606008344,
  3600352804,
  1432725776,
  4094571909,
  1467031594,
  275423344,
  851169720,
  430227734,
  3100823752,
  506948616,
  1363258195,
  659060556,
  3750685593,
  883997877,
  3785050280,
  958139571,
  3318307427,
  1322822218,
  3812723403,
  1537002063,
  2003034995,
  1747873779,
  3602036899,
  1955562222,
  1575990012,
  2024104815,
  1125592928,
  2227730452,
  2716904306,
  2361852424,
  442776044,
  2428436474,
  593698344,
  2756734187,
  3733110249,
  3204031479,
  2999351573,
  3329325298,
  3815920427,
  3391569614,
  3928383900,
  3515267271,
  566280711,
  3940187606,
  3454069534,
  4118630271,
  4000239992,
  116418474,
  1914138554,
  174292421,
  2731055270,
  289380356,
  3203993006,
  460393269,
  320620315,
  685471733,
  587496836,
  852142971,
  1086792851,
  1017036298,
  365543100,
  1126000580,
  2618297676,
  1288033470,
  3409855158,
  1501505948,
  4234509866,
  1607167915,
  987167468,
  1816402316,
  1246189591
], TT = new Array(160);
function J9() {
  this.init(), this._w = TT, rb.call(this, 128, 112);
}
ST(J9, rb);
J9.prototype.init = function() {
  return this._ah = 1779033703, this._bh = 3144134277, this._ch = 1013904242, this._dh = 2773480762, this._eh = 1359893119, this._fh = 2600822924, this._gh = 528734635, this._hh = 1541459225, this._al = 4089235720, this._bl = 2227873595, this._cl = 4271175723, this._dl = 1595750129, this._el = 2917565137, this._fl = 725511199, this._gl = 4215389547, this._hl = 327033209, this;
};
function h3(e, t, a) {
  return a ^ e & (t ^ a);
}
function b3(e, t, a) {
  return e & t | a & (e | t);
}
function m3(e, t) {
  return (e >>> 28 | t << 4) ^ (t >>> 2 | e << 30) ^ (t >>> 7 | e << 25);
}
function v3(e, t) {
  return (e >>> 14 | t << 18) ^ (e >>> 18 | t << 14) ^ (t >>> 9 | e << 23);
}
function AT(e, t) {
  return (e >>> 1 | t << 31) ^ (e >>> 8 | t << 24) ^ e >>> 7;
}
function IT(e, t) {
  return (e >>> 1 | t << 31) ^ (e >>> 8 | t << 24) ^ (e >>> 7 | t << 25);
}
function kT(e, t) {
  return (e >>> 19 | t << 13) ^ (t >>> 29 | e << 3) ^ e >>> 6;
}
function OT(e, t) {
  return (e >>> 19 | t << 13) ^ (t >>> 29 | e << 3) ^ (e >>> 6 | t << 26);
}
function i0(e, t) {
  return e >>> 0 < t >>> 0 ? 1 : 0;
}
J9.prototype._update = function(e) {
  for (var t = this._w, a = this._ah | 0, r = this._bh | 0, f = this._ch | 0, i = this._dh | 0, n = this._eh | 0, o = this._fh | 0, s = this._gh | 0, b = this._hh | 0, l = this._al | 0, v = this._bl | 0, m = this._cl | 0, x = this._dl | 0, I = this._el | 0, k = this._fl | 0, P = this._gl | 0, M = this._hl | 0, R = 0; R < 32; R += 2)
    t[R] = e.readInt32BE(R * 4), t[R + 1] = e.readInt32BE(R * 4 + 4);
  for (; R < 160; R += 2) {
    var F = t[R - 30], C = t[R - 15 * 2 + 1], L = AT(F, C), U = IT(C, F);
    F = t[R - 2 * 2], C = t[R - 2 * 2 + 1];
    var q = kT(F, C), Z = OT(C, F), z = t[R - 7 * 2], G = t[R - 7 * 2 + 1], O = t[R - 16 * 2], u = t[R - 16 * 2 + 1], p = U + G | 0, d = L + z + i0(p, U) | 0;
    p = p + Z | 0, d = d + q + i0(p, Z) | 0, p = p + u | 0, d = d + O + i0(p, u) | 0, t[R] = d, t[R + 1] = p;
  }
  for (var c = 0; c < 160; c += 2) {
    d = t[c], p = t[c + 1];
    var y = b3(a, r, f), S = b3(l, v, m), T = m3(a, l), g = m3(l, a), w = v3(n, I), A = v3(I, n), h = p3[c], N = p3[c + 1], Y = h3(n, o, s), t7 = h3(I, k, P), H = M + A | 0, $ = b + w + i0(H, M) | 0;
    H = H + t7 | 0, $ = $ + Y + i0(H, t7) | 0, H = H + N | 0, $ = $ + h + i0(H, N) | 0, H = H + p | 0, $ = $ + d + i0(H, p) | 0;
    var X = g + S | 0, i7 = T + y + i0(X, g) | 0;
    b = s, M = P, s = o, P = k, o = n, k = I, I = x + H | 0, n = i + $ + i0(I, x) | 0, i = f, x = m, f = r, m = v, r = a, v = l, l = H + X | 0, a = $ + i7 + i0(l, H) | 0;
  }
  this._al = this._al + l | 0, this._bl = this._bl + v | 0, this._cl = this._cl + m | 0, this._dl = this._dl + x | 0, this._el = this._el + I | 0, this._fl = this._fl + k | 0, this._gl = this._gl + P | 0, this._hl = this._hl + M | 0, this._ah = this._ah + a + i0(this._al, l) | 0, this._bh = this._bh + r + i0(this._bl, v) | 0, this._ch = this._ch + f + i0(this._cl, m) | 0, this._dh = this._dh + i + i0(this._dl, x) | 0, this._eh = this._eh + n + i0(this._el, I) | 0, this._fh = this._fh + o + i0(this._fl, k) | 0, this._gh = this._gh + s + i0(this._gl, P) | 0, this._hh = this._hh + b + i0(this._hl, M) | 0;
};
J9.prototype._hash = function() {
  var e = ET.allocUnsafe(64);
  function t(a, r, f) {
    e.writeInt32BE(a, f), e.writeInt32BE(r, f + 4);
  }
  return t(this._ah, this._al, 0), t(this._bh, this._bl, 8), t(this._ch, this._cl, 16), t(this._dh, this._dl, 24), t(this._eh, this._el, 32), t(this._fh, this._fl, 40), t(this._gh, this._gl, 48), t(this._hh, this._hl, 56), e;
};
var fb = J9, PT = X7(), MT = fb, RT = _1, BT = fe.Buffer, NT = new Array(160);
function fi() {
  this.init(), this._w = NT, RT.call(this, 128, 112);
}
PT(fi, MT);
fi.prototype.init = function() {
  return this._ah = 3418070365, this._bh = 1654270250, this._ch = 2438529370, this._dh = 355462360, this._eh = 1731405415, this._fh = 2394180231, this._gh = 3675008525, this._hh = 1203062813, this._al = 3238371032, this._bl = 914150663, this._cl = 812702999, this._dl = 4144912697, this._el = 4290775857, this._fl = 1750603025, this._gl = 1694076839, this._hl = 3204075428, this;
};
fi.prototype._hash = function() {
  var e = BT.allocUnsafe(48);
  function t(a, r, f) {
    e.writeInt32BE(a, f), e.writeInt32BE(r, f + 4);
  }
  return t(this._ah, this._al, 0), t(this._bh, this._bl, 8), t(this._ch, this._cl, 16), t(this._dh, this._dl, 24), t(this._eh, this._el, 32), t(this._fh, this._fl, 40), e;
};
var CT = fi, xr = Xh.exports = function(t) {
  t = t.toLowerCase();
  var a = xr[t];
  if (!a)
    throw new Error(t + " is not supported (we accept pull requests)");
  return new a();
};
xr.sha = XE;
xr.sha1 = nT;
xr.sha224 = wT;
xr.sha256 = ab;
xr.sha384 = CT;
xr.sha512 = fb;
var Zs = Xh.exports, jn, y3;
function ib() {
  return y3 || (y3 = 1, jn = gt().EventEmitter), jn;
}
var Vn, g3;
function DT() {
  if (g3)
    return Vn;
  g3 = 1;
  function e(m, x) {
    var I = Object.keys(m);
    if (Object.getOwnPropertySymbols) {
      var k = Object.getOwnPropertySymbols(m);
      x && (k = k.filter(function(P) {
        return Object.getOwnPropertyDescriptor(m, P).enumerable;
      })), I.push.apply(I, k);
    }
    return I;
  }
  function t(m) {
    for (var x = 1; x < arguments.length; x++) {
      var I = arguments[x] != null ? arguments[x] : {};
      x % 2 ? e(Object(I), !0).forEach(function(k) {
        a(m, k, I[k]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(m, Object.getOwnPropertyDescriptors(I)) : e(Object(I)).forEach(function(k) {
        Object.defineProperty(m, k, Object.getOwnPropertyDescriptor(I, k));
      });
    }
    return m;
  }
  function a(m, x, I) {
    return x in m ? Object.defineProperty(m, x, { value: I, enumerable: !0, configurable: !0, writable: !0 }) : m[x] = I, m;
  }
  function r(m, x) {
    if (!(m instanceof x))
      throw new TypeError("Cannot call a class as a function");
  }
  function f(m, x) {
    for (var I = 0; I < x.length; I++) {
      var k = x[I];
      k.enumerable = k.enumerable || !1, k.configurable = !0, "value" in k && (k.writable = !0), Object.defineProperty(m, k.key, k);
    }
  }
  function i(m, x, I) {
    return x && f(m.prototype, x), I && f(m, I), m;
  }
  var n = Q, o = n.Buffer, s = R0, b = s.inspect, l = b && b.custom || "inspect";
  function v(m, x, I) {
    o.prototype.copy.call(m, x, I);
  }
  return Vn = /* @__PURE__ */ function() {
    function m() {
      r(this, m), this.head = null, this.tail = null, this.length = 0;
    }
    return i(m, [{
      key: "push",
      value: function(I) {
        var k = {
          data: I,
          next: null
        };
        this.length > 0 ? this.tail.next = k : this.head = k, this.tail = k, ++this.length;
      }
    }, {
      key: "unshift",
      value: function(I) {
        var k = {
          data: I,
          next: this.head
        };
        this.length === 0 && (this.tail = k), this.head = k, ++this.length;
      }
    }, {
      key: "shift",
      value: function() {
        if (this.length !== 0) {
          var I = this.head.data;
          return this.length === 1 ? this.head = this.tail = null : this.head = this.head.next, --this.length, I;
        }
      }
    }, {
      key: "clear",
      value: function() {
        this.head = this.tail = null, this.length = 0;
      }
    }, {
      key: "join",
      value: function(I) {
        if (this.length === 0)
          return "";
        for (var k = this.head, P = "" + k.data; k = k.next; )
          P += I + k.data;
        return P;
      }
    }, {
      key: "concat",
      value: function(I) {
        if (this.length === 0)
          return o.alloc(0);
        for (var k = o.allocUnsafe(I >>> 0), P = this.head, M = 0; P; )
          v(P.data, k, M), M += P.data.length, P = P.next;
        return k;
      }
      // Consumes a specified amount of bytes or characters from the buffered data.
    }, {
      key: "consume",
      value: function(I, k) {
        var P;
        return I < this.head.data.length ? (P = this.head.data.slice(0, I), this.head.data = this.head.data.slice(I)) : I === this.head.data.length ? P = this.shift() : P = k ? this._getString(I) : this._getBuffer(I), P;
      }
    }, {
      key: "first",
      value: function() {
        return this.head.data;
      }
      // Consumes a specified amount of characters from the buffered data.
    }, {
      key: "_getString",
      value: function(I) {
        var k = this.head, P = 1, M = k.data;
        for (I -= M.length; k = k.next; ) {
          var R = k.data, F = I > R.length ? R.length : I;
          if (F === R.length ? M += R : M += R.slice(0, I), I -= F, I === 0) {
            F === R.length ? (++P, k.next ? this.head = k.next : this.head = this.tail = null) : (this.head = k, k.data = R.slice(F));
            break;
          }
          ++P;
        }
        return this.length -= P, M;
      }
      // Consumes a specified amount of bytes from the buffered data.
    }, {
      key: "_getBuffer",
      value: function(I) {
        var k = o.allocUnsafe(I), P = this.head, M = 1;
        for (P.data.copy(k), I -= P.data.length; P = P.next; ) {
          var R = P.data, F = I > R.length ? R.length : I;
          if (R.copy(k, k.length - I, 0, F), I -= F, I === 0) {
            F === R.length ? (++M, P.next ? this.head = P.next : this.head = this.tail = null) : (this.head = P, P.data = R.slice(F));
            break;
          }
          ++M;
        }
        return this.length -= M, k;
      }
      // Make sure the linked list only shows the minimal necessary information.
    }, {
      key: l,
      value: function(I, k) {
        return b(this, t({}, k, {
          // Only inspect one level.
          depth: 0,
          // It should not recurse.
          customInspect: !1
        }));
      }
    }]), m;
  }(), Vn;
}
var zn, x3;
function nb() {
  if (x3)
    return zn;
  x3 = 1;
  function e(n, o) {
    var s = this, b = this._readableState && this._readableState.destroyed, l = this._writableState && this._writableState.destroyed;
    return b || l ? (o ? o(n) : n && (this._writableState ? this._writableState.errorEmitted || (this._writableState.errorEmitted = !0, g7.nextTick(f, this, n)) : g7.nextTick(f, this, n)), this) : (this._readableState && (this._readableState.destroyed = !0), this._writableState && (this._writableState.destroyed = !0), this._destroy(n || null, function(v) {
      !o && v ? s._writableState ? s._writableState.errorEmitted ? g7.nextTick(a, s) : (s._writableState.errorEmitted = !0, g7.nextTick(t, s, v)) : g7.nextTick(t, s, v) : o ? (g7.nextTick(a, s), o(v)) : g7.nextTick(a, s);
    }), this);
  }
  function t(n, o) {
    f(n, o), a(n);
  }
  function a(n) {
    n._writableState && !n._writableState.emitClose || n._readableState && !n._readableState.emitClose || n.emit("close");
  }
  function r() {
    this._readableState && (this._readableState.destroyed = !1, this._readableState.reading = !1, this._readableState.ended = !1, this._readableState.endEmitted = !1), this._writableState && (this._writableState.destroyed = !1, this._writableState.ended = !1, this._writableState.ending = !1, this._writableState.finalCalled = !1, this._writableState.prefinished = !1, this._writableState.finished = !1, this._writableState.errorEmitted = !1);
  }
  function f(n, o) {
    n.emit("error", o);
  }
  function i(n, o) {
    var s = n._readableState, b = n._writableState;
    s && s.autoDestroy || b && b.autoDestroy ? n.destroy(o) : n.emit("error", o);
  }
  return zn = {
    destroy: e,
    undestroy: r,
    errorOrDestroy: i
  }, zn;
}
var qn = {}, _3;
function w1() {
  if (_3)
    return qn;
  _3 = 1;
  function e(o, s) {
    o.prototype = Object.create(s.prototype), o.prototype.constructor = o, o.__proto__ = s;
  }
  var t = {};
  function a(o, s, b) {
    b || (b = Error);
    function l(m, x, I) {
      return typeof s == "string" ? s : s(m, x, I);
    }
    var v = /* @__PURE__ */ function(m) {
      e(x, m);
      function x(I, k, P) {
        return m.call(this, l(I, k, P)) || this;
      }
      return x;
    }(b);
    v.prototype.name = b.name, v.prototype.code = o, t[o] = v;
  }
  function r(o, s) {
    if (Array.isArray(o)) {
      var b = o.length;
      return o = o.map(function(l) {
        return String(l);
      }), b > 2 ? "one of ".concat(s, " ").concat(o.slice(0, b - 1).join(", "), ", or ") + o[b - 1] : b === 2 ? "one of ".concat(s, " ").concat(o[0], " or ").concat(o[1]) : "of ".concat(s, " ").concat(o[0]);
    } else
      return "of ".concat(s, " ").concat(String(o));
  }
  function f(o, s, b) {
    return o.substr(!b || b < 0 ? 0 : +b, s.length) === s;
  }
  function i(o, s, b) {
    return (b === void 0 || b > o.length) && (b = o.length), o.substring(b - s.length, b) === s;
  }
  function n(o, s, b) {
    return typeof b != "number" && (b = 0), b + s.length > o.length ? !1 : o.indexOf(s, b) !== -1;
  }
  return a("ERR_INVALID_OPT_VALUE", function(o, s) {
    return 'The value "' + s + '" is invalid for option "' + o + '"';
  }, TypeError), a("ERR_INVALID_ARG_TYPE", function(o, s, b) {
    var l;
    typeof s == "string" && f(s, "not ") ? (l = "must not be", s = s.replace(/^not /, "")) : l = "must be";
    var v;
    if (i(o, " argument"))
      v = "The ".concat(o, " ").concat(l, " ").concat(r(s, "type"));
    else {
      var m = n(o, ".") ? "property" : "argument";
      v = 'The "'.concat(o, '" ').concat(m, " ").concat(l, " ").concat(r(s, "type"));
    }
    return v += ". Received type ".concat(typeof b), v;
  }, TypeError), a("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF"), a("ERR_METHOD_NOT_IMPLEMENTED", function(o) {
    return "The " + o + " method is not implemented";
  }), a("ERR_STREAM_PREMATURE_CLOSE", "Premature close"), a("ERR_STREAM_DESTROYED", function(o) {
    return "Cannot call " + o + " after a stream was destroyed";
  }), a("ERR_MULTIPLE_CALLBACK", "Callback called multiple times"), a("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable"), a("ERR_STREAM_WRITE_AFTER_END", "write after end"), a("ERR_STREAM_NULL_VALUES", "May not write null values to stream", TypeError), a("ERR_UNKNOWN_ENCODING", function(o) {
    return "Unknown encoding: " + o;
  }, TypeError), a("ERR_STREAM_UNSHIFT_AFTER_END_EVENT", "stream.unshift() after end event"), qn.codes = t, qn;
}
var Kn, w3;
function ob() {
  if (w3)
    return Kn;
  w3 = 1;
  var e = w1().codes.ERR_INVALID_OPT_VALUE;
  function t(r, f, i) {
    return r.highWaterMark != null ? r.highWaterMark : f ? r[i] : null;
  }
  function a(r, f, i, n) {
    var o = t(f, n, i);
    if (o != null) {
      if (!(isFinite(o) && Math.floor(o) === o) || o < 0) {
        var s = n ? i : "highWaterMark";
        throw new e(s, o);
      }
      return Math.floor(o);
    }
    return r.objectMode ? 16 : 16 * 1024;
  }
  return Kn = {
    getHighWaterMark: a
  }, Kn;
}
var Gn, S3;
function sb() {
  if (S3)
    return Gn;
  S3 = 1, Gn = Z;
  function e(H) {
    var $ = this;
    this.next = null, this.entry = null, this.finish = function() {
      t7($, H);
    };
  }
  var t;
  Z.WritableState = U;
  var a = {
    deprecate: Yf
  }, r = ib(), f = Q.Buffer, i = I7.Uint8Array || function() {
  };
  function n(H) {
    return f.from(H);
  }
  function o(H) {
    return f.isBuffer(H) || H instanceof i;
  }
  var s = nb(), b = ob(), l = b.getHighWaterMark, v = w1().codes, m = v.ERR_INVALID_ARG_TYPE, x = v.ERR_METHOD_NOT_IMPLEMENTED, I = v.ERR_MULTIPLE_CALLBACK, k = v.ERR_STREAM_CANNOT_PIPE, P = v.ERR_STREAM_DESTROYED, M = v.ERR_STREAM_NULL_VALUES, R = v.ERR_STREAM_WRITE_AFTER_END, F = v.ERR_UNKNOWN_ENCODING, C = s.errorOrDestroy;
  X7()(Z, r);
  function L() {
  }
  function U(H, $, X) {
    t = t || t1(), H = H || {}, typeof X != "boolean" && (X = $ instanceof t), this.objectMode = !!H.objectMode, X && (this.objectMode = this.objectMode || !!H.writableObjectMode), this.highWaterMark = l(this, H, "writableHighWaterMark", X), this.finalCalled = !1, this.needDrain = !1, this.ending = !1, this.ended = !1, this.finished = !1, this.destroyed = !1;
    var i7 = H.decodeStrings === !1;
    this.decodeStrings = !i7, this.defaultEncoding = H.defaultEncoding || "utf8", this.length = 0, this.writing = !1, this.corked = 0, this.sync = !0, this.bufferProcessing = !1, this.onwrite = function(J) {
      y($, J);
    }, this.writecb = null, this.writelen = 0, this.bufferedRequest = null, this.lastBufferedRequest = null, this.pendingcb = 0, this.prefinished = !1, this.errorEmitted = !1, this.emitClose = H.emitClose !== !1, this.autoDestroy = !!H.autoDestroy, this.bufferedRequestCount = 0, this.corkedRequestsFree = new e(this);
  }
  U.prototype.getBuffer = function() {
    for (var $ = this.bufferedRequest, X = []; $; )
      X.push($), $ = $.next;
    return X;
  }, function() {
    try {
      Object.defineProperty(U.prototype, "buffer", {
        get: a.deprecate(function() {
          return this.getBuffer();
        }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003")
      });
    } catch {
    }
  }();
  var q;
  typeof Symbol == "function" && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] == "function" ? (q = Function.prototype[Symbol.hasInstance], Object.defineProperty(Z, Symbol.hasInstance, {
    value: function($) {
      return q.call(this, $) ? !0 : this !== Z ? !1 : $ && $._writableState instanceof U;
    }
  })) : q = function($) {
    return $ instanceof this;
  };
  function Z(H) {
    t = t || t1();
    var $ = this instanceof t;
    if (!$ && !q.call(Z, this))
      return new Z(H);
    this._writableState = new U(H, this, $), this.writable = !0, H && (typeof H.write == "function" && (this._write = H.write), typeof H.writev == "function" && (this._writev = H.writev), typeof H.destroy == "function" && (this._destroy = H.destroy), typeof H.final == "function" && (this._final = H.final)), r.call(this);
  }
  Z.prototype.pipe = function() {
    C(this, new k());
  };
  function z(H, $) {
    var X = new R();
    C(H, X), g7.nextTick($, X);
  }
  function G(H, $, X, i7) {
    var J;
    return X === null ? J = new M() : typeof X != "string" && !$.objectMode && (J = new m("chunk", ["string", "Buffer"], X)), J ? (C(H, J), g7.nextTick(i7, J), !1) : !0;
  }
  Z.prototype.write = function(H, $, X) {
    var i7 = this._writableState, J = !1, _ = !i7.objectMode && o(H);
    return _ && !f.isBuffer(H) && (H = n(H)), typeof $ == "function" && (X = $, $ = null), _ ? $ = "buffer" : $ || ($ = i7.defaultEncoding), typeof X != "function" && (X = L), i7.ending ? z(this, X) : (_ || G(this, i7, H, X)) && (i7.pendingcb++, J = u(this, i7, _, H, $, X)), J;
  }, Z.prototype.cork = function() {
    this._writableState.corked++;
  }, Z.prototype.uncork = function() {
    var H = this._writableState;
    H.corked && (H.corked--, !H.writing && !H.corked && !H.bufferProcessing && H.bufferedRequest && g(this, H));
  }, Z.prototype.setDefaultEncoding = function($) {
    if (typeof $ == "string" && ($ = $.toLowerCase()), !(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf(($ + "").toLowerCase()) > -1))
      throw new F($);
    return this._writableState.defaultEncoding = $, this;
  }, Object.defineProperty(Z.prototype, "writableBuffer", {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: !1,
    get: function() {
      return this._writableState && this._writableState.getBuffer();
    }
  });
  function O(H, $, X) {
    return !H.objectMode && H.decodeStrings !== !1 && typeof $ == "string" && ($ = f.from($, X)), $;
  }
  Object.defineProperty(Z.prototype, "writableHighWaterMark", {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: !1,
    get: function() {
      return this._writableState.highWaterMark;
    }
  });
  function u(H, $, X, i7, J, _) {
    if (!X) {
      var E = O($, i7, J);
      i7 !== E && (X = !0, J = "buffer", i7 = E);
    }
    var j = $.objectMode ? 1 : i7.length;
    $.length += j;
    var V = $.length < $.highWaterMark;
    if (V || ($.needDrain = !0), $.writing || $.corked) {
      var n7 = $.lastBufferedRequest;
      $.lastBufferedRequest = {
        chunk: i7,
        encoding: J,
        isBuf: X,
        callback: _,
        next: null
      }, n7 ? n7.next = $.lastBufferedRequest : $.bufferedRequest = $.lastBufferedRequest, $.bufferedRequestCount += 1;
    } else
      p(H, $, !1, j, i7, J, _);
    return V;
  }
  function p(H, $, X, i7, J, _, E) {
    $.writelen = i7, $.writecb = E, $.writing = !0, $.sync = !0, $.destroyed ? $.onwrite(new P("write")) : X ? H._writev(J, $.onwrite) : H._write(J, _, $.onwrite), $.sync = !1;
  }
  function d(H, $, X, i7, J) {
    --$.pendingcb, X ? (g7.nextTick(J, i7), g7.nextTick(N, H, $), H._writableState.errorEmitted = !0, C(H, i7)) : (J(i7), H._writableState.errorEmitted = !0, C(H, i7), N(H, $));
  }
  function c(H) {
    H.writing = !1, H.writecb = null, H.length -= H.writelen, H.writelen = 0;
  }
  function y(H, $) {
    var X = H._writableState, i7 = X.sync, J = X.writecb;
    if (typeof J != "function")
      throw new I();
    if (c(X), $)
      d(H, X, i7, $, J);
    else {
      var _ = w(X) || H.destroyed;
      !_ && !X.corked && !X.bufferProcessing && X.bufferedRequest && g(H, X), i7 ? g7.nextTick(S, H, X, _, J) : S(H, X, _, J);
    }
  }
  function S(H, $, X, i7) {
    X || T(H, $), $.pendingcb--, i7(), N(H, $);
  }
  function T(H, $) {
    $.length === 0 && $.needDrain && ($.needDrain = !1, H.emit("drain"));
  }
  function g(H, $) {
    $.bufferProcessing = !0;
    var X = $.bufferedRequest;
    if (H._writev && X && X.next) {
      var i7 = $.bufferedRequestCount, J = new Array(i7), _ = $.corkedRequestsFree;
      _.entry = X;
      for (var E = 0, j = !0; X; )
        J[E] = X, X.isBuf || (j = !1), X = X.next, E += 1;
      J.allBuffers = j, p(H, $, !0, $.length, J, "", _.finish), $.pendingcb++, $.lastBufferedRequest = null, _.next ? ($.corkedRequestsFree = _.next, _.next = null) : $.corkedRequestsFree = new e($), $.bufferedRequestCount = 0;
    } else {
      for (; X; ) {
        var V = X.chunk, n7 = X.encoding, K = X.callback, B = $.objectMode ? 1 : V.length;
        if (p(H, $, !1, B, V, n7, K), X = X.next, $.bufferedRequestCount--, $.writing)
          break;
      }
      X === null && ($.lastBufferedRequest = null);
    }
    $.bufferedRequest = X, $.bufferProcessing = !1;
  }
  Z.prototype._write = function(H, $, X) {
    X(new x("_write()"));
  }, Z.prototype._writev = null, Z.prototype.end = function(H, $, X) {
    var i7 = this._writableState;
    return typeof H == "function" ? (X = H, H = null, $ = null) : typeof $ == "function" && (X = $, $ = null), H != null && this.write(H, $), i7.corked && (i7.corked = 1, this.uncork()), i7.ending || Y(this, i7, X), this;
  }, Object.defineProperty(Z.prototype, "writableLength", {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: !1,
    get: function() {
      return this._writableState.length;
    }
  });
  function w(H) {
    return H.ending && H.length === 0 && H.bufferedRequest === null && !H.finished && !H.writing;
  }
  function A(H, $) {
    H._final(function(X) {
      $.pendingcb--, X && C(H, X), $.prefinished = !0, H.emit("prefinish"), N(H, $);
    });
  }
  function h(H, $) {
    !$.prefinished && !$.finalCalled && (typeof H._final == "function" && !$.destroyed ? ($.pendingcb++, $.finalCalled = !0, g7.nextTick(A, H, $)) : ($.prefinished = !0, H.emit("prefinish")));
  }
  function N(H, $) {
    var X = w($);
    if (X && (h(H, $), $.pendingcb === 0 && ($.finished = !0, H.emit("finish"), $.autoDestroy))) {
      var i7 = H._readableState;
      (!i7 || i7.autoDestroy && i7.endEmitted) && H.destroy();
    }
    return X;
  }
  function Y(H, $, X) {
    $.ending = !0, N(H, $), X && ($.finished ? g7.nextTick(X) : H.once("finish", X)), $.ended = !0, H.writable = !1;
  }
  function t7(H, $, X) {
    var i7 = H.entry;
    for (H.entry = null; i7; ) {
      var J = i7.callback;
      $.pendingcb--, J(X), i7 = i7.next;
    }
    $.corkedRequestsFree.next = H;
  }
  return Object.defineProperty(Z.prototype, "destroyed", {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: !1,
    get: function() {
      return this._writableState === void 0 ? !1 : this._writableState.destroyed;
    },
    set: function($) {
      this._writableState && (this._writableState.destroyed = $);
    }
  }), Z.prototype.destroy = s.destroy, Z.prototype._undestroy = s.undestroy, Z.prototype._destroy = function(H, $) {
    $(H);
  }, Gn;
}
var Wn, E3;
function t1() {
  if (E3)
    return Wn;
  E3 = 1;
  var e = Object.keys || function(b) {
    var l = [];
    for (var v in b)
      l.push(v);
    return l;
  };
  Wn = n;
  var t = db(), a = sb();
  X7()(n, t);
  for (var r = e(a.prototype), f = 0; f < r.length; f++) {
    var i = r[f];
    n.prototype[i] || (n.prototype[i] = a.prototype[i]);
  }
  function n(b) {
    if (!(this instanceof n))
      return new n(b);
    t.call(this, b), a.call(this, b), this.allowHalfOpen = !0, b && (b.readable === !1 && (this.readable = !1), b.writable === !1 && (this.writable = !1), b.allowHalfOpen === !1 && (this.allowHalfOpen = !1, this.once("end", o)));
  }
  Object.defineProperty(n.prototype, "writableHighWaterMark", {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: !1,
    get: function() {
      return this._writableState.highWaterMark;
    }
  }), Object.defineProperty(n.prototype, "writableBuffer", {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: !1,
    get: function() {
      return this._writableState && this._writableState.getBuffer();
    }
  }), Object.defineProperty(n.prototype, "writableLength", {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: !1,
    get: function() {
      return this._writableState.length;
    }
  });
  function o() {
    this._writableState.ended || g7.nextTick(s, this);
  }
  function s(b) {
    b.end();
  }
  return Object.defineProperty(n.prototype, "destroyed", {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: !1,
    get: function() {
      return this._readableState === void 0 || this._writableState === void 0 ? !1 : this._readableState.destroyed && this._writableState.destroyed;
    },
    set: function(l) {
      this._readableState === void 0 || this._writableState === void 0 || (this._readableState.destroyed = l, this._writableState.destroyed = l);
    }
  }), Wn;
}
var Zn, T3;
function Ys() {
  if (T3)
    return Zn;
  T3 = 1;
  var e = w1().codes.ERR_STREAM_PREMATURE_CLOSE;
  function t(i) {
    var n = !1;
    return function() {
      if (!n) {
        n = !0;
        for (var o = arguments.length, s = new Array(o), b = 0; b < o; b++)
          s[b] = arguments[b];
        i.apply(this, s);
      }
    };
  }
  function a() {
  }
  function r(i) {
    return i.setHeader && typeof i.abort == "function";
  }
  function f(i, n, o) {
    if (typeof n == "function")
      return f(i, null, n);
    n || (n = {}), o = t(o || a);
    var s = n.readable || n.readable !== !1 && i.readable, b = n.writable || n.writable !== !1 && i.writable, l = function() {
      i.writable || m();
    }, v = i._writableState && i._writableState.finished, m = function() {
      b = !1, v = !0, s || o.call(i);
    }, x = i._readableState && i._readableState.endEmitted, I = function() {
      s = !1, x = !0, b || o.call(i);
    }, k = function(F) {
      o.call(i, F);
    }, P = function() {
      var F;
      if (s && !x)
        return (!i._readableState || !i._readableState.ended) && (F = new e()), o.call(i, F);
      if (b && !v)
        return (!i._writableState || !i._writableState.ended) && (F = new e()), o.call(i, F);
    }, M = function() {
      i.req.on("finish", m);
    };
    return r(i) ? (i.on("complete", m), i.on("abort", P), i.req ? M() : i.on("request", M)) : b && !i._writableState && (i.on("end", l), i.on("close", l)), i.on("end", I), i.on("finish", m), n.error !== !1 && i.on("error", k), i.on("close", P), function() {
      i.removeListener("complete", m), i.removeListener("abort", P), i.removeListener("request", M), i.req && i.req.removeListener("finish", m), i.removeListener("end", l), i.removeListener("close", l), i.removeListener("finish", m), i.removeListener("end", I), i.removeListener("error", k), i.removeListener("close", P);
    };
  }
  return Zn = f, Zn;
}
var Yn, A3;
function LT() {
  if (A3)
    return Yn;
  A3 = 1;
  var e;
  function t(M, R, F) {
    return R in M ? Object.defineProperty(M, R, { value: F, enumerable: !0, configurable: !0, writable: !0 }) : M[R] = F, M;
  }
  var a = Ys(), r = Symbol("lastResolve"), f = Symbol("lastReject"), i = Symbol("error"), n = Symbol("ended"), o = Symbol("lastPromise"), s = Symbol("handlePromise"), b = Symbol("stream");
  function l(M, R) {
    return {
      value: M,
      done: R
    };
  }
  function v(M) {
    var R = M[r];
    if (R !== null) {
      var F = M[b].read();
      F !== null && (M[o] = null, M[r] = null, M[f] = null, R(l(F, !1)));
    }
  }
  function m(M) {
    g7.nextTick(v, M);
  }
  function x(M, R) {
    return function(F, C) {
      M.then(function() {
        if (R[n]) {
          F(l(void 0, !0));
          return;
        }
        R[s](F, C);
      }, C);
    };
  }
  var I = Object.getPrototypeOf(function() {
  }), k = Object.setPrototypeOf((e = {
    get stream() {
      return this[b];
    },
    next: function() {
      var R = this, F = this[i];
      if (F !== null)
        return Promise.reject(F);
      if (this[n])
        return Promise.resolve(l(void 0, !0));
      if (this[b].destroyed)
        return new Promise(function(q, Z) {
          g7.nextTick(function() {
            R[i] ? Z(R[i]) : q(l(void 0, !0));
          });
        });
      var C = this[o], L;
      if (C)
        L = new Promise(x(C, this));
      else {
        var U = this[b].read();
        if (U !== null)
          return Promise.resolve(l(U, !1));
        L = new Promise(this[s]);
      }
      return this[o] = L, L;
    }
  }, t(e, Symbol.asyncIterator, function() {
    return this;
  }), t(e, "return", function() {
    var R = this;
    return new Promise(function(F, C) {
      R[b].destroy(null, function(L) {
        if (L) {
          C(L);
          return;
        }
        F(l(void 0, !0));
      });
    });
  }), e), I), P = function(R) {
    var F, C = Object.create(k, (F = {}, t(F, b, {
      value: R,
      writable: !0
    }), t(F, r, {
      value: null,
      writable: !0
    }), t(F, f, {
      value: null,
      writable: !0
    }), t(F, i, {
      value: null,
      writable: !0
    }), t(F, n, {
      value: R._readableState.endEmitted,
      writable: !0
    }), t(F, s, {
      value: function(U, q) {
        var Z = C[b].read();
        Z ? (C[o] = null, C[r] = null, C[f] = null, U(l(Z, !1))) : (C[r] = U, C[f] = q);
      },
      writable: !0
    }), F));
    return C[o] = null, a(R, function(L) {
      if (L && L.code !== "ERR_STREAM_PREMATURE_CLOSE") {
        var U = C[f];
        U !== null && (C[o] = null, C[r] = null, C[f] = null, U(L)), C[i] = L;
        return;
      }
      var q = C[r];
      q !== null && (C[o] = null, C[r] = null, C[f] = null, q(l(void 0, !0))), C[n] = !0;
    }), R.on("readable", m.bind(null, C)), C;
  };
  return Yn = P, Yn;
}
var Xn, I3;
function FT() {
  return I3 || (I3 = 1, Xn = function() {
    throw new Error("Readable.from is not available in the browser");
  }), Xn;
}
var Jn, k3;
function db() {
  if (k3)
    return Jn;
  k3 = 1, Jn = z;
  var e;
  z.ReadableState = Z, gt().EventEmitter;
  var t = function(E, j) {
    return E.listeners(j).length;
  }, a = ib(), r = Q.Buffer, f = I7.Uint8Array || function() {
  };
  function i(_) {
    return r.from(_);
  }
  function n(_) {
    return r.isBuffer(_) || _ instanceof f;
  }
  var o = R0, s;
  o && o.debuglog ? s = o.debuglog("stream") : s = function() {
  };
  var b = DT(), l = nb(), v = ob(), m = v.getHighWaterMark, x = w1().codes, I = x.ERR_INVALID_ARG_TYPE, k = x.ERR_STREAM_PUSH_AFTER_EOF, P = x.ERR_METHOD_NOT_IMPLEMENTED, M = x.ERR_STREAM_UNSHIFT_AFTER_END_EVENT, R, F, C;
  X7()(z, a);
  var L = l.errorOrDestroy, U = ["error", "close", "destroy", "pause", "resume"];
  function q(_, E, j) {
    if (typeof _.prependListener == "function")
      return _.prependListener(E, j);
    !_._events || !_._events[E] ? _.on(E, j) : Array.isArray(_._events[E]) ? _._events[E].unshift(j) : _._events[E] = [j, _._events[E]];
  }
  function Z(_, E, j) {
    e = e || t1(), _ = _ || {}, typeof j != "boolean" && (j = E instanceof e), this.objectMode = !!_.objectMode, j && (this.objectMode = this.objectMode || !!_.readableObjectMode), this.highWaterMark = m(this, _, "readableHighWaterMark", j), this.buffer = new b(), this.length = 0, this.pipes = null, this.pipesCount = 0, this.flowing = null, this.ended = !1, this.endEmitted = !1, this.reading = !1, this.sync = !0, this.needReadable = !1, this.emittedReadable = !1, this.readableListening = !1, this.resumeScheduled = !1, this.paused = !0, this.emitClose = _.emitClose !== !1, this.autoDestroy = !!_.autoDestroy, this.destroyed = !1, this.defaultEncoding = _.defaultEncoding || "utf8", this.awaitDrain = 0, this.readingMore = !1, this.decoder = null, this.encoding = null, _.encoding && (R || (R = pt.StringDecoder), this.decoder = new R(_.encoding), this.encoding = _.encoding);
  }
  function z(_) {
    if (e = e || t1(), !(this instanceof z))
      return new z(_);
    var E = this instanceof e;
    this._readableState = new Z(_, this, E), this.readable = !0, _ && (typeof _.read == "function" && (this._read = _.read), typeof _.destroy == "function" && (this._destroy = _.destroy)), a.call(this);
  }
  Object.defineProperty(z.prototype, "destroyed", {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: !1,
    get: function() {
      return this._readableState === void 0 ? !1 : this._readableState.destroyed;
    },
    set: function(E) {
      this._readableState && (this._readableState.destroyed = E);
    }
  }), z.prototype.destroy = l.destroy, z.prototype._undestroy = l.undestroy, z.prototype._destroy = function(_, E) {
    E(_);
  }, z.prototype.push = function(_, E) {
    var j = this._readableState, V;
    return j.objectMode ? V = !0 : typeof _ == "string" && (E = E || j.defaultEncoding, E !== j.encoding && (_ = r.from(_, E), E = ""), V = !0), G(this, _, E, !1, V);
  }, z.prototype.unshift = function(_) {
    return G(this, _, null, !0, !1);
  };
  function G(_, E, j, V, n7) {
    s("readableAddChunk", E);
    var K = _._readableState;
    if (E === null)
      K.reading = !1, y(_, K);
    else {
      var B;
      if (n7 || (B = u(K, E)), B)
        L(_, B);
      else if (K.objectMode || E && E.length > 0)
        if (typeof E != "string" && !K.objectMode && Object.getPrototypeOf(E) !== r.prototype && (E = i(E)), V)
          K.endEmitted ? L(_, new M()) : O(_, K, E, !0);
        else if (K.ended)
          L(_, new k());
        else {
          if (K.destroyed)
            return !1;
          K.reading = !1, K.decoder && !j ? (E = K.decoder.write(E), K.objectMode || E.length !== 0 ? O(_, K, E, !1) : g(_, K)) : O(_, K, E, !1);
        }
      else
        V || (K.reading = !1, g(_, K));
    }
    return !K.ended && (K.length < K.highWaterMark || K.length === 0);
  }
  function O(_, E, j, V) {
    E.flowing && E.length === 0 && !E.sync ? (E.awaitDrain = 0, _.emit("data", j)) : (E.length += E.objectMode ? 1 : j.length, V ? E.buffer.unshift(j) : E.buffer.push(j), E.needReadable && S(_)), g(_, E);
  }
  function u(_, E) {
    var j;
    return !n(E) && typeof E != "string" && E !== void 0 && !_.objectMode && (j = new I("chunk", ["string", "Buffer", "Uint8Array"], E)), j;
  }
  z.prototype.isPaused = function() {
    return this._readableState.flowing === !1;
  }, z.prototype.setEncoding = function(_) {
    R || (R = pt.StringDecoder);
    var E = new R(_);
    this._readableState.decoder = E, this._readableState.encoding = this._readableState.decoder.encoding;
    for (var j = this._readableState.buffer.head, V = ""; j !== null; )
      V += E.write(j.data), j = j.next;
    return this._readableState.buffer.clear(), V !== "" && this._readableState.buffer.push(V), this._readableState.length = V.length, this;
  };
  var p = 1073741824;
  function d(_) {
    return _ >= p ? _ = p : (_--, _ |= _ >>> 1, _ |= _ >>> 2, _ |= _ >>> 4, _ |= _ >>> 8, _ |= _ >>> 16, _++), _;
  }
  function c(_, E) {
    return _ <= 0 || E.length === 0 && E.ended ? 0 : E.objectMode ? 1 : _ !== _ ? E.flowing && E.length ? E.buffer.head.data.length : E.length : (_ > E.highWaterMark && (E.highWaterMark = d(_)), _ <= E.length ? _ : E.ended ? E.length : (E.needReadable = !0, 0));
  }
  z.prototype.read = function(_) {
    s("read", _), _ = parseInt(_, 10);
    var E = this._readableState, j = _;
    if (_ !== 0 && (E.emittedReadable = !1), _ === 0 && E.needReadable && ((E.highWaterMark !== 0 ? E.length >= E.highWaterMark : E.length > 0) || E.ended))
      return s("read: emitReadable", E.length, E.ended), E.length === 0 && E.ended ? X(this) : S(this), null;
    if (_ = c(_, E), _ === 0 && E.ended)
      return E.length === 0 && X(this), null;
    var V = E.needReadable;
    s("need readable", V), (E.length === 0 || E.length - _ < E.highWaterMark) && (V = !0, s("length less than watermark", V)), E.ended || E.reading ? (V = !1, s("reading or ended", V)) : V && (s("do read"), E.reading = !0, E.sync = !0, E.length === 0 && (E.needReadable = !0), this._read(E.highWaterMark), E.sync = !1, E.reading || (_ = c(j, E)));
    var n7;
    return _ > 0 ? n7 = $(_, E) : n7 = null, n7 === null ? (E.needReadable = E.length <= E.highWaterMark, _ = 0) : (E.length -= _, E.awaitDrain = 0), E.length === 0 && (E.ended || (E.needReadable = !0), j !== _ && E.ended && X(this)), n7 !== null && this.emit("data", n7), n7;
  };
  function y(_, E) {
    if (s("onEofChunk"), !E.ended) {
      if (E.decoder) {
        var j = E.decoder.end();
        j && j.length && (E.buffer.push(j), E.length += E.objectMode ? 1 : j.length);
      }
      E.ended = !0, E.sync ? S(_) : (E.needReadable = !1, E.emittedReadable || (E.emittedReadable = !0, T(_)));
    }
  }
  function S(_) {
    var E = _._readableState;
    s("emitReadable", E.needReadable, E.emittedReadable), E.needReadable = !1, E.emittedReadable || (s("emitReadable", E.flowing), E.emittedReadable = !0, g7.nextTick(T, _));
  }
  function T(_) {
    var E = _._readableState;
    s("emitReadable_", E.destroyed, E.length, E.ended), !E.destroyed && (E.length || E.ended) && (_.emit("readable"), E.emittedReadable = !1), E.needReadable = !E.flowing && !E.ended && E.length <= E.highWaterMark, H(_);
  }
  function g(_, E) {
    E.readingMore || (E.readingMore = !0, g7.nextTick(w, _, E));
  }
  function w(_, E) {
    for (; !E.reading && !E.ended && (E.length < E.highWaterMark || E.flowing && E.length === 0); ) {
      var j = E.length;
      if (s("maybeReadMore read 0"), _.read(0), j === E.length)
        break;
    }
    E.readingMore = !1;
  }
  z.prototype._read = function(_) {
    L(this, new P("_read()"));
  }, z.prototype.pipe = function(_, E) {
    var j = this, V = this._readableState;
    switch (V.pipesCount) {
      case 0:
        V.pipes = _;
        break;
      case 1:
        V.pipes = [V.pipes, _];
        break;
      default:
        V.pipes.push(_);
        break;
    }
    V.pipesCount += 1, s("pipe count=%d opts=%j", V.pipesCount, E);
    var n7 = (!E || E.end !== !1) && _ !== g7.stdout && _ !== g7.stderr, K = n7 ? D : p7;
    V.endEmitted ? g7.nextTick(K) : j.once("end", K), _.on("unpipe", B);
    function B(l7, y7) {
      s("onunpipe"), l7 === j && y7 && y7.hasUnpiped === !1 && (y7.hasUnpiped = !0, o7());
    }
    function D() {
      s("onend"), _.end();
    }
    var W = A(j);
    _.on("drain", W);
    var e7 = !1;
    function o7() {
      s("cleanup"), _.removeListener("close", u7), _.removeListener("finish", m7), _.removeListener("drain", W), _.removeListener("error", s7), _.removeListener("unpipe", B), j.removeListener("end", D), j.removeListener("end", p7), j.removeListener("data", a7), e7 = !0, V.awaitDrain && (!_._writableState || _._writableState.needDrain) && W();
    }
    j.on("data", a7);
    function a7(l7) {
      s("ondata");
      var y7 = _.write(l7);
      s("dest.write", y7), y7 === !1 && ((V.pipesCount === 1 && V.pipes === _ || V.pipesCount > 1 && J(V.pipes, _) !== -1) && !e7 && (s("false write response, pause", V.awaitDrain), V.awaitDrain++), j.pause());
    }
    function s7(l7) {
      s("onerror", l7), p7(), _.removeListener("error", s7), t(_, "error") === 0 && L(_, l7);
    }
    q(_, "error", s7);
    function u7() {
      _.removeListener("finish", m7), p7();
    }
    _.once("close", u7);
    function m7() {
      s("onfinish"), _.removeListener("close", u7), p7();
    }
    _.once("finish", m7);
    function p7() {
      s("unpipe"), j.unpipe(_);
    }
    return _.emit("pipe", j), V.flowing || (s("pipe resume"), j.resume()), _;
  };
  function A(_) {
    return function() {
      var j = _._readableState;
      s("pipeOnDrain", j.awaitDrain), j.awaitDrain && j.awaitDrain--, j.awaitDrain === 0 && t(_, "data") && (j.flowing = !0, H(_));
    };
  }
  z.prototype.unpipe = function(_) {
    var E = this._readableState, j = {
      hasUnpiped: !1
    };
    if (E.pipesCount === 0)
      return this;
    if (E.pipesCount === 1)
      return _ && _ !== E.pipes ? this : (_ || (_ = E.pipes), E.pipes = null, E.pipesCount = 0, E.flowing = !1, _ && _.emit("unpipe", this, j), this);
    if (!_) {
      var V = E.pipes, n7 = E.pipesCount;
      E.pipes = null, E.pipesCount = 0, E.flowing = !1;
      for (var K = 0; K < n7; K++)
        V[K].emit("unpipe", this, {
          hasUnpiped: !1
        });
      return this;
    }
    var B = J(E.pipes, _);
    return B === -1 ? this : (E.pipes.splice(B, 1), E.pipesCount -= 1, E.pipesCount === 1 && (E.pipes = E.pipes[0]), _.emit("unpipe", this, j), this);
  }, z.prototype.on = function(_, E) {
    var j = a.prototype.on.call(this, _, E), V = this._readableState;
    return _ === "data" ? (V.readableListening = this.listenerCount("readable") > 0, V.flowing !== !1 && this.resume()) : _ === "readable" && !V.endEmitted && !V.readableListening && (V.readableListening = V.needReadable = !0, V.flowing = !1, V.emittedReadable = !1, s("on readable", V.length, V.reading), V.length ? S(this) : V.reading || g7.nextTick(N, this)), j;
  }, z.prototype.addListener = z.prototype.on, z.prototype.removeListener = function(_, E) {
    var j = a.prototype.removeListener.call(this, _, E);
    return _ === "readable" && g7.nextTick(h, this), j;
  }, z.prototype.removeAllListeners = function(_) {
    var E = a.prototype.removeAllListeners.apply(this, arguments);
    return (_ === "readable" || _ === void 0) && g7.nextTick(h, this), E;
  };
  function h(_) {
    var E = _._readableState;
    E.readableListening = _.listenerCount("readable") > 0, E.resumeScheduled && !E.paused ? E.flowing = !0 : _.listenerCount("data") > 0 && _.resume();
  }
  function N(_) {
    s("readable nexttick read 0"), _.read(0);
  }
  z.prototype.resume = function() {
    var _ = this._readableState;
    return _.flowing || (s("resume"), _.flowing = !_.readableListening, Y(this, _)), _.paused = !1, this;
  };
  function Y(_, E) {
    E.resumeScheduled || (E.resumeScheduled = !0, g7.nextTick(t7, _, E));
  }
  function t7(_, E) {
    s("resume", E.reading), E.reading || _.read(0), E.resumeScheduled = !1, _.emit("resume"), H(_), E.flowing && !E.reading && _.read(0);
  }
  z.prototype.pause = function() {
    return s("call pause flowing=%j", this._readableState.flowing), this._readableState.flowing !== !1 && (s("pause"), this._readableState.flowing = !1, this.emit("pause")), this._readableState.paused = !0, this;
  };
  function H(_) {
    var E = _._readableState;
    for (s("flow", E.flowing); E.flowing && _.read() !== null; )
      ;
  }
  z.prototype.wrap = function(_) {
    var E = this, j = this._readableState, V = !1;
    _.on("end", function() {
      if (s("wrapped end"), j.decoder && !j.ended) {
        var B = j.decoder.end();
        B && B.length && E.push(B);
      }
      E.push(null);
    }), _.on("data", function(B) {
      if (s("wrapped data"), j.decoder && (B = j.decoder.write(B)), !(j.objectMode && B == null) && !(!j.objectMode && (!B || !B.length))) {
        var D = E.push(B);
        D || (V = !0, _.pause());
      }
    });
    for (var n7 in _)
      this[n7] === void 0 && typeof _[n7] == "function" && (this[n7] = function(D) {
        return function() {
          return _[D].apply(_, arguments);
        };
      }(n7));
    for (var K = 0; K < U.length; K++)
      _.on(U[K], this.emit.bind(this, U[K]));
    return this._read = function(B) {
      s("wrapped _read", B), V && (V = !1, _.resume());
    }, this;
  }, typeof Symbol == "function" && (z.prototype[Symbol.asyncIterator] = function() {
    return F === void 0 && (F = LT()), F(this);
  }), Object.defineProperty(z.prototype, "readableHighWaterMark", {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: !1,
    get: function() {
      return this._readableState.highWaterMark;
    }
  }), Object.defineProperty(z.prototype, "readableBuffer", {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: !1,
    get: function() {
      return this._readableState && this._readableState.buffer;
    }
  }), Object.defineProperty(z.prototype, "readableFlowing", {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: !1,
    get: function() {
      return this._readableState.flowing;
    },
    set: function(E) {
      this._readableState && (this._readableState.flowing = E);
    }
  }), z._fromList = $, Object.defineProperty(z.prototype, "readableLength", {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: !1,
    get: function() {
      return this._readableState.length;
    }
  });
  function $(_, E) {
    if (E.length === 0)
      return null;
    var j;
    return E.objectMode ? j = E.buffer.shift() : !_ || _ >= E.length ? (E.decoder ? j = E.buffer.join("") : E.buffer.length === 1 ? j = E.buffer.first() : j = E.buffer.concat(E.length), E.buffer.clear()) : j = E.buffer.consume(_, E.decoder), j;
  }
  function X(_) {
    var E = _._readableState;
    s("endReadable", E.endEmitted), E.endEmitted || (E.ended = !0, g7.nextTick(i7, E, _));
  }
  function i7(_, E) {
    if (s("endReadableNT", _.endEmitted, _.length), !_.endEmitted && _.length === 0 && (_.endEmitted = !0, E.readable = !1, E.emit("end"), _.autoDestroy)) {
      var j = E._writableState;
      (!j || j.autoDestroy && j.finished) && E.destroy();
    }
  }
  typeof Symbol == "function" && (z.from = function(_, E) {
    return C === void 0 && (C = FT()), C(z, _, E);
  });
  function J(_, E) {
    for (var j = 0, V = _.length; j < V; j++)
      if (_[j] === E)
        return j;
    return -1;
  }
  return Jn;
}
var Qn, O3;
function cb() {
  if (O3)
    return Qn;
  O3 = 1, Qn = o;
  var e = w1().codes, t = e.ERR_METHOD_NOT_IMPLEMENTED, a = e.ERR_MULTIPLE_CALLBACK, r = e.ERR_TRANSFORM_ALREADY_TRANSFORMING, f = e.ERR_TRANSFORM_WITH_LENGTH_0, i = t1();
  X7()(o, i);
  function n(l, v) {
    var m = this._transformState;
    m.transforming = !1;
    var x = m.writecb;
    if (x === null)
      return this.emit("error", new a());
    m.writechunk = null, m.writecb = null, v != null && this.push(v), x(l);
    var I = this._readableState;
    I.reading = !1, (I.needReadable || I.length < I.highWaterMark) && this._read(I.highWaterMark);
  }
  function o(l) {
    if (!(this instanceof o))
      return new o(l);
    i.call(this, l), this._transformState = {
      afterTransform: n.bind(this),
      needTransform: !1,
      transforming: !1,
      writecb: null,
      writechunk: null,
      writeencoding: null
    }, this._readableState.needReadable = !0, this._readableState.sync = !1, l && (typeof l.transform == "function" && (this._transform = l.transform), typeof l.flush == "function" && (this._flush = l.flush)), this.on("prefinish", s);
  }
  function s() {
    var l = this;
    typeof this._flush == "function" && !this._readableState.destroyed ? this._flush(function(v, m) {
      b(l, v, m);
    }) : b(this, null, null);
  }
  o.prototype.push = function(l, v) {
    return this._transformState.needTransform = !1, i.prototype.push.call(this, l, v);
  }, o.prototype._transform = function(l, v, m) {
    m(new t("_transform()"));
  }, o.prototype._write = function(l, v, m) {
    var x = this._transformState;
    if (x.writecb = m, x.writechunk = l, x.writeencoding = v, !x.transforming) {
      var I = this._readableState;
      (x.needTransform || I.needReadable || I.length < I.highWaterMark) && this._read(I.highWaterMark);
    }
  }, o.prototype._read = function(l) {
    var v = this._transformState;
    v.writechunk !== null && !v.transforming ? (v.transforming = !0, this._transform(v.writechunk, v.writeencoding, v.afterTransform)) : v.needTransform = !0;
  }, o.prototype._destroy = function(l, v) {
    i.prototype._destroy.call(this, l, function(m) {
      v(m);
    });
  };
  function b(l, v, m) {
    if (v)
      return l.emit("error", v);
    if (m != null && l.push(m), l._writableState.length)
      throw new f();
    if (l._transformState.transforming)
      throw new r();
    return l.push(null);
  }
  return Qn;
}
var e8, P3;
function HT() {
  if (P3)
    return e8;
  P3 = 1, e8 = t;
  var e = cb();
  X7()(t, e);
  function t(a) {
    if (!(this instanceof t))
      return new t(a);
    e.call(this, a);
  }
  return t.prototype._transform = function(a, r, f) {
    f(null, a);
  }, e8;
}
var t8, M3;
function UT() {
  if (M3)
    return t8;
  M3 = 1;
  var e;
  function t(m) {
    var x = !1;
    return function() {
      x || (x = !0, m.apply(void 0, arguments));
    };
  }
  var a = w1().codes, r = a.ERR_MISSING_ARGS, f = a.ERR_STREAM_DESTROYED;
  function i(m) {
    if (m)
      throw m;
  }
  function n(m) {
    return m.setHeader && typeof m.abort == "function";
  }
  function o(m, x, I, k) {
    k = t(k);
    var P = !1;
    m.on("close", function() {
      P = !0;
    }), e === void 0 && (e = Ys()), e(m, {
      readable: x,
      writable: I
    }, function(R) {
      if (R)
        return k(R);
      P = !0, k();
    });
    var M = !1;
    return function(R) {
      if (!P && !M) {
        if (M = !0, n(m))
          return m.abort();
        if (typeof m.destroy == "function")
          return m.destroy();
        k(R || new f("pipe"));
      }
    };
  }
  function s(m) {
    m();
  }
  function b(m, x) {
    return m.pipe(x);
  }
  function l(m) {
    return !m.length || typeof m[m.length - 1] != "function" ? i : m.pop();
  }
  function v() {
    for (var m = arguments.length, x = new Array(m), I = 0; I < m; I++)
      x[I] = arguments[I];
    var k = l(x);
    if (Array.isArray(x[0]) && (x = x[0]), x.length < 2)
      throw new r("streams");
    var P, M = x.map(function(R, F) {
      var C = F < x.length - 1, L = F > 0;
      return o(R, C, L, function(U) {
        P || (P = U), U && M.forEach(s), !C && (M.forEach(s), k(P));
      });
    });
    return x.reduce(b);
  }
  return t8 = v, t8;
}
var Xs = l5, Js = gt().EventEmitter, $T = X7();
$T(l5, Js);
l5.Readable = db();
l5.Writable = sb();
l5.Duplex = t1();
l5.Transform = cb();
l5.PassThrough = HT();
l5.finished = Ys();
l5.pipeline = UT();
l5.Stream = l5;
function l5() {
  Js.call(this);
}
l5.prototype.pipe = function(e, t) {
  var a = this;
  function r(l) {
    e.writable && e.write(l) === !1 && a.pause && a.pause();
  }
  a.on("data", r);
  function f() {
    a.readable && a.resume && a.resume();
  }
  e.on("drain", f), !e._isStdio && (!t || t.end !== !1) && (a.on("end", n), a.on("close", o));
  var i = !1;
  function n() {
    i || (i = !0, e.end());
  }
  function o() {
    i || (i = !0, typeof e.destroy == "function" && e.destroy());
  }
  function s(l) {
    if (b(), Js.listenerCount(this, "error") === 0)
      throw l;
  }
  a.on("error", s), e.on("error", s);
  function b() {
    a.removeListener("data", r), e.removeListener("drain", f), a.removeListener("end", n), a.removeListener("close", o), a.removeListener("error", s), e.removeListener("error", s), a.removeListener("end", b), a.removeListener("close", b), e.removeListener("close", b);
  }
  return a.on("end", b), a.on("close", b), e.on("close", b), e.emit("pipe", a), e;
};
const B5 = /* @__PURE__ */ Qt(Xs);
var ub = fe.Buffer, lb = Xs.Transform, jT = pt.StringDecoder, VT = X7();
function F5(e) {
  lb.call(this), this.hashMode = typeof e == "string", this.hashMode ? this[e] = this._finalOrDigest : this.final = this._finalOrDigest, this._final && (this.__final = this._final, this._final = null), this._decoder = null, this._encoding = null;
}
VT(F5, lb);
F5.prototype.update = function(e, t, a) {
  typeof e == "string" && (e = ub.from(e, t));
  var r = this._update(e);
  return this.hashMode ? this : (a && (r = this._toString(r, a)), r);
};
F5.prototype.setAutoPadding = function() {
};
F5.prototype.getAuthTag = function() {
  throw new Error("trying to get auth tag in unsupported state");
};
F5.prototype.setAuthTag = function() {
  throw new Error("trying to set auth tag in unsupported state");
};
F5.prototype.setAAD = function() {
  throw new Error("trying to set aad in unsupported state");
};
F5.prototype._transform = function(e, t, a) {
  var r;
  try {
    this.hashMode ? this._update(e) : this.push(this._update(e));
  } catch (f) {
    r = f;
  } finally {
    a(r);
  }
};
F5.prototype._flush = function(e) {
  var t;
  try {
    this.push(this.__final());
  } catch (a) {
    t = a;
  }
  e(t);
};
F5.prototype._finalOrDigest = function(e) {
  var t = this.__final() || ub.alloc(0);
  return e && (t = this._toString(t, e, !0)), t;
};
F5.prototype._toString = function(e, t, a) {
  if (this._decoder || (this._decoder = new jT(t), this._encoding = t), this._encoding !== t)
    throw new Error("can't switch encodings");
  var r = this._decoder.write(e);
  return a && (r += this._decoder.end()), r;
};
var Ma = F5, zT = X7(), qT = Gs, KT = Ws, GT = Zs, pb = Ma;
function ii(e) {
  pb.call(this, "digest"), this._hash = e;
}
zT(ii, pb);
ii.prototype._update = function(e) {
  this._hash.update(e);
};
ii.prototype._final = function() {
  return this._hash.digest();
};
var Q9 = function(t) {
  return t = t.toLowerCase(), t === "md5" ? new qT() : t === "rmd160" || t === "ripemd160" ? new KT() : new ii(GT(t));
}, WT = X7(), Xa = fe.Buffer, hb = Ma, ZT = Xa.alloc(128), Pr = 64;
function ni(e, t) {
  hb.call(this, "digest"), typeof t == "string" && (t = Xa.from(t)), this._alg = e, this._key = t, t.length > Pr ? t = e(t) : t.length < Pr && (t = Xa.concat([t, ZT], Pr));
  for (var a = this._ipad = Xa.allocUnsafe(Pr), r = this._opad = Xa.allocUnsafe(Pr), f = 0; f < Pr; f++)
    a[f] = t[f] ^ 54, r[f] = t[f] ^ 92;
  this._hash = [a];
}
WT(ni, hb);
ni.prototype._update = function(e) {
  this._hash.push(e);
};
ni.prototype._final = function() {
  var e = this._alg(Xa.concat(this._hash));
  return this._alg(Xa.concat([this._opad, e]));
};
var YT = ni, XT = Gs, bb = function(e) {
  return new XT().update(e).digest();
}, JT = X7(), QT = YT, mb = Ma, r9 = fe.Buffer, eA = bb, Ro = Ws, Bo = Zs, tA = r9.alloc(128);
function k9(e, t) {
  mb.call(this, "digest"), typeof t == "string" && (t = r9.from(t));
  var a = e === "sha512" || e === "sha384" ? 128 : 64;
  if (this._alg = e, this._key = t, t.length > a) {
    var r = e === "rmd160" ? new Ro() : Bo(e);
    t = r.update(t).digest();
  } else
    t.length < a && (t = r9.concat([t, tA], a));
  for (var f = this._ipad = r9.allocUnsafe(a), i = this._opad = r9.allocUnsafe(a), n = 0; n < a; n++)
    f[n] = t[n] ^ 54, i[n] = t[n] ^ 92;
  this._hash = e === "rmd160" ? new Ro() : Bo(e), this._hash.update(f);
}
JT(k9, mb);
k9.prototype._update = function(e) {
  this._hash.update(e);
};
k9.prototype._final = function() {
  var e = this._hash.digest(), t = this._alg === "rmd160" ? new Ro() : Bo(this._alg);
  return t.update(this._opad).update(e).digest();
};
var vb = function(t, a) {
  return t = t.toLowerCase(), t === "rmd160" || t === "ripemd160" ? new k9("rmd160", a) : t === "md5" ? new QT(eA, a) : new k9(t, a);
};
const aA = {
  sign: "rsa",
  hash: "sha224",
  id: "302d300d06096086480165030402040500041c"
}, rA = {
  sign: "rsa",
  hash: "sha256",
  id: "3031300d060960864801650304020105000420"
}, fA = {
  sign: "rsa",
  hash: "sha384",
  id: "3041300d060960864801650304020205000430"
}, iA = {
  sign: "rsa",
  hash: "sha512",
  id: "3051300d060960864801650304020305000440"
}, nA = {
  sign: "ecdsa",
  hash: "sha256",
  id: ""
}, oA = {
  sign: "ecdsa",
  hash: "sha224",
  id: ""
}, sA = {
  sign: "ecdsa",
  hash: "sha384",
  id: ""
}, dA = {
  sign: "ecdsa",
  hash: "sha512",
  id: ""
}, cA = {
  sign: "dsa",
  hash: "sha1",
  id: ""
}, uA = {
  sign: "rsa",
  hash: "rmd160",
  id: "3021300906052b2403020105000414"
}, lA = {
  sign: "rsa",
  hash: "md5",
  id: "3020300c06082a864886f70d020505000410"
}, yb = {
  sha224WithRSAEncryption: aA,
  "RSA-SHA224": {
    sign: "ecdsa/rsa",
    hash: "sha224",
    id: "302d300d06096086480165030402040500041c"
  },
  sha256WithRSAEncryption: rA,
  "RSA-SHA256": {
    sign: "ecdsa/rsa",
    hash: "sha256",
    id: "3031300d060960864801650304020105000420"
  },
  sha384WithRSAEncryption: fA,
  "RSA-SHA384": {
    sign: "ecdsa/rsa",
    hash: "sha384",
    id: "3041300d060960864801650304020205000430"
  },
  sha512WithRSAEncryption: iA,
  "RSA-SHA512": {
    sign: "ecdsa/rsa",
    hash: "sha512",
    id: "3051300d060960864801650304020305000440"
  },
  "RSA-SHA1": {
    sign: "rsa",
    hash: "sha1",
    id: "3021300906052b0e03021a05000414"
  },
  "ecdsa-with-SHA1": {
    sign: "ecdsa",
    hash: "sha1",
    id: ""
  },
  sha256: nA,
  sha224: oA,
  sha384: sA,
  sha512: dA,
  "DSA-SHA": {
    sign: "dsa",
    hash: "sha1",
    id: ""
  },
  "DSA-SHA1": {
    sign: "dsa",
    hash: "sha1",
    id: ""
  },
  DSA: cA,
  "DSA-WITH-SHA224": {
    sign: "dsa",
    hash: "sha224",
    id: ""
  },
  "DSA-SHA224": {
    sign: "dsa",
    hash: "sha224",
    id: ""
  },
  "DSA-WITH-SHA256": {
    sign: "dsa",
    hash: "sha256",
    id: ""
  },
  "DSA-SHA256": {
    sign: "dsa",
    hash: "sha256",
    id: ""
  },
  "DSA-WITH-SHA384": {
    sign: "dsa",
    hash: "sha384",
    id: ""
  },
  "DSA-SHA384": {
    sign: "dsa",
    hash: "sha384",
    id: ""
  },
  "DSA-WITH-SHA512": {
    sign: "dsa",
    hash: "sha512",
    id: ""
  },
  "DSA-SHA512": {
    sign: "dsa",
    hash: "sha512",
    id: ""
  },
  "DSA-RIPEMD160": {
    sign: "dsa",
    hash: "rmd160",
    id: ""
  },
  ripemd160WithRSA: uA,
  "RSA-RIPEMD160": {
    sign: "rsa",
    hash: "rmd160",
    id: "3021300906052b2403020105000414"
  },
  md5WithRSAEncryption: lA,
  "RSA-MD5": {
    sign: "rsa",
    hash: "md5",
    id: "3020300c06082a864886f70d020505000410"
  }
};
var pA = yb, oi = {}, hA = Math.pow(2, 30) - 1, gb = function(e, t) {
  if (typeof e != "number")
    throw new TypeError("Iterations not a number");
  if (e < 0)
    throw new TypeError("Bad iterations");
  if (typeof t != "number")
    throw new TypeError("Key length not a number");
  if (t < 0 || t > hA || t !== t)
    throw new TypeError("Bad key length");
}, J6;
if (I7.process && I7.process.browser)
  J6 = "utf-8";
else if (I7.process && I7.process.version) {
  var bA = parseInt(g7.version.split(".")[0].slice(1), 10);
  J6 = bA >= 6 ? "utf-8" : "binary";
} else
  J6 = "utf-8";
var xb = J6, a8 = fe.Buffer, _b = function(e, t, a) {
  if (a8.isBuffer(e))
    return e;
  if (typeof e == "string")
    return a8.from(e, t);
  if (ArrayBuffer.isView(e))
    return a8.from(e.buffer);
  throw new TypeError(a + " must be a string, a Buffer, a typed array or a DataView");
}, mA = bb, vA = Ws, yA = Zs, Ja = fe.Buffer, gA = gb, R3 = xb, B3 = _b, xA = Ja.alloc(128), Q6 = {
  md5: 16,
  sha1: 20,
  sha224: 28,
  sha256: 32,
  sha384: 48,
  sha512: 64,
  rmd160: 20,
  ripemd160: 20
};
function wb(e, t, a) {
  var r = _A(e), f = e === "sha512" || e === "sha384" ? 128 : 64;
  t.length > f ? t = r(t) : t.length < f && (t = Ja.concat([t, xA], f));
  for (var i = Ja.allocUnsafe(f + Q6[e]), n = Ja.allocUnsafe(f + Q6[e]), o = 0; o < f; o++)
    i[o] = t[o] ^ 54, n[o] = t[o] ^ 92;
  var s = Ja.allocUnsafe(f + a + 4);
  i.copy(s, 0, 0, f), this.ipad1 = s, this.ipad2 = i, this.opad = n, this.alg = e, this.blocksize = f, this.hash = r, this.size = Q6[e];
}
wb.prototype.run = function(e, t) {
  e.copy(t, this.blocksize);
  var a = this.hash(t);
  return a.copy(this.opad, this.blocksize), this.hash(this.opad);
};
function _A(e) {
  function t(r) {
    return yA(e).update(r).digest();
  }
  function a(r) {
    return new vA().update(r).digest();
  }
  return e === "rmd160" || e === "ripemd160" ? a : e === "md5" ? mA : t;
}
function wA(e, t, a, r, f) {
  gA(a, r), e = B3(e, R3, "Password"), t = B3(t, R3, "Salt"), f = f || "sha1";
  var i = new wb(f, e, t.length), n = Ja.allocUnsafe(r), o = Ja.allocUnsafe(t.length + 4);
  t.copy(o, 0, 0, t.length);
  for (var s = 0, b = Q6[f], l = Math.ceil(r / b), v = 1; v <= l; v++) {
    o.writeUInt32BE(v, t.length);
    for (var m = i.run(o, i.ipad1), x = m, I = 1; I < a; I++) {
      x = i.run(x, i.ipad2);
      for (var k = 0; k < b; k++)
        m[k] ^= x[k];
    }
    m.copy(n, s), s += b;
  }
  return n;
}
var Sb = wA, Eb = fe.Buffer, SA = gb, N3 = xb, C3 = Sb, D3 = _b, k6, l9 = I7.crypto && I7.crypto.subtle, EA = {
  sha: "SHA-1",
  "sha-1": "SHA-1",
  sha1: "SHA-1",
  sha256: "SHA-256",
  "sha-256": "SHA-256",
  sha384: "SHA-384",
  "sha-384": "SHA-384",
  "sha-512": "SHA-512",
  sha512: "SHA-512"
}, r8 = [];
function TA(e) {
  if (I7.process && !I7.process.browser || !l9 || !l9.importKey || !l9.deriveBits)
    return Promise.resolve(!1);
  if (r8[e] !== void 0)
    return r8[e];
  k6 = k6 || Eb.alloc(8);
  var t = Tb(k6, k6, 10, 128, e).then(function() {
    return !0;
  }).catch(function() {
    return !1;
  });
  return r8[e] = t, t;
}
var Fa;
function No() {
  return Fa || (I7.process && I7.process.nextTick ? Fa = I7.process.nextTick : I7.queueMicrotask ? Fa = I7.queueMicrotask : I7.setImmediate ? Fa = I7.setImmediate : Fa = I7.setTimeout, Fa);
}
function Tb(e, t, a, r, f) {
  return l9.importKey(
    "raw",
    e,
    { name: "PBKDF2" },
    !1,
    ["deriveBits"]
  ).then(function(i) {
    return l9.deriveBits({
      name: "PBKDF2",
      salt: t,
      iterations: a,
      hash: {
        name: f
      }
    }, i, r << 3);
  }).then(function(i) {
    return Eb.from(i);
  });
}
function AA(e, t) {
  e.then(function(a) {
    No()(function() {
      t(null, a);
    });
  }, function(a) {
    No()(function() {
      t(a);
    });
  });
}
var IA = function(e, t, a, r, f, i) {
  typeof f == "function" && (i = f, f = void 0), f = f || "sha1";
  var n = EA[f.toLowerCase()];
  if (!n || typeof I7.Promise != "function") {
    No()(function() {
      var o;
      try {
        o = C3(e, t, a, r, f);
      } catch (s) {
        return i(s);
      }
      i(null, o);
    });
    return;
  }
  if (SA(a, r), e = D3(e, N3, "Password"), t = D3(t, N3, "Salt"), typeof i != "function")
    throw new Error("No callback provided to pbkdf2");
  AA(TA(n).then(function(o) {
    return o ? Tb(e, t, a, r, n) : C3(e, t, a, r, f);
  }), i);
};
oi.pbkdf2 = IA;
oi.pbkdf2Sync = Sb;
var N5 = {}, S1 = {}, Q0 = {};
Q0.readUInt32BE = function(t, a) {
  var r = t[0 + a] << 24 | t[1 + a] << 16 | t[2 + a] << 8 | t[3 + a];
  return r >>> 0;
};
Q0.writeUInt32BE = function(t, a, r) {
  t[0 + r] = a >>> 24, t[1 + r] = a >>> 16 & 255, t[2 + r] = a >>> 8 & 255, t[3 + r] = a & 255;
};
Q0.ip = function(t, a, r, f) {
  for (var i = 0, n = 0, o = 6; o >= 0; o -= 2) {
    for (var s = 0; s <= 24; s += 8)
      i <<= 1, i |= a >>> s + o & 1;
    for (var s = 0; s <= 24; s += 8)
      i <<= 1, i |= t >>> s + o & 1;
  }
  for (var o = 6; o >= 0; o -= 2) {
    for (var s = 1; s <= 25; s += 8)
      n <<= 1, n |= a >>> s + o & 1;
    for (var s = 1; s <= 25; s += 8)
      n <<= 1, n |= t >>> s + o & 1;
  }
  r[f + 0] = i >>> 0, r[f + 1] = n >>> 0;
};
Q0.rip = function(t, a, r, f) {
  for (var i = 0, n = 0, o = 0; o < 4; o++)
    for (var s = 24; s >= 0; s -= 8)
      i <<= 1, i |= a >>> s + o & 1, i <<= 1, i |= t >>> s + o & 1;
  for (var o = 4; o < 8; o++)
    for (var s = 24; s >= 0; s -= 8)
      n <<= 1, n |= a >>> s + o & 1, n <<= 1, n |= t >>> s + o & 1;
  r[f + 0] = i >>> 0, r[f + 1] = n >>> 0;
};
Q0.pc1 = function(t, a, r, f) {
  for (var i = 0, n = 0, o = 7; o >= 5; o--) {
    for (var s = 0; s <= 24; s += 8)
      i <<= 1, i |= a >> s + o & 1;
    for (var s = 0; s <= 24; s += 8)
      i <<= 1, i |= t >> s + o & 1;
  }
  for (var s = 0; s <= 24; s += 8)
    i <<= 1, i |= a >> s + o & 1;
  for (var o = 1; o <= 3; o++) {
    for (var s = 0; s <= 24; s += 8)
      n <<= 1, n |= a >> s + o & 1;
    for (var s = 0; s <= 24; s += 8)
      n <<= 1, n |= t >> s + o & 1;
  }
  for (var s = 0; s <= 24; s += 8)
    n <<= 1, n |= t >> s + o & 1;
  r[f + 0] = i >>> 0, r[f + 1] = n >>> 0;
};
Q0.r28shl = function(t, a) {
  return t << a & 268435455 | t >>> 28 - a;
};
var O6 = [
  // inL => outL
  14,
  11,
  17,
  4,
  27,
  23,
  25,
  0,
  13,
  22,
  7,
  18,
  5,
  9,
  16,
  24,
  2,
  20,
  12,
  21,
  1,
  8,
  15,
  26,
  // inR => outR
  15,
  4,
  25,
  19,
  9,
  1,
  26,
  16,
  5,
  11,
  23,
  8,
  12,
  7,
  17,
  0,
  22,
  3,
  10,
  14,
  6,
  20,
  27,
  24
];
Q0.pc2 = function(t, a, r, f) {
  for (var i = 0, n = 0, o = O6.length >>> 1, s = 0; s < o; s++)
    i <<= 1, i |= t >>> O6[s] & 1;
  for (var s = o; s < O6.length; s++)
    n <<= 1, n |= a >>> O6[s] & 1;
  r[f + 0] = i >>> 0, r[f + 1] = n >>> 0;
};
Q0.expand = function(t, a, r) {
  var f = 0, i = 0;
  f = (t & 1) << 5 | t >>> 27;
  for (var n = 23; n >= 15; n -= 4)
    f <<= 6, f |= t >>> n & 63;
  for (var n = 11; n >= 3; n -= 4)
    i |= t >>> n & 63, i <<= 6;
  i |= (t & 31) << 1 | t >>> 31, a[r + 0] = f >>> 0, a[r + 1] = i >>> 0;
};
var L3 = [
  14,
  0,
  4,
  15,
  13,
  7,
  1,
  4,
  2,
  14,
  15,
  2,
  11,
  13,
  8,
  1,
  3,
  10,
  10,
  6,
  6,
  12,
  12,
  11,
  5,
  9,
  9,
  5,
  0,
  3,
  7,
  8,
  4,
  15,
  1,
  12,
  14,
  8,
  8,
  2,
  13,
  4,
  6,
  9,
  2,
  1,
  11,
  7,
  15,
  5,
  12,
  11,
  9,
  3,
  7,
  14,
  3,
  10,
  10,
  0,
  5,
  6,
  0,
  13,
  15,
  3,
  1,
  13,
  8,
  4,
  14,
  7,
  6,
  15,
  11,
  2,
  3,
  8,
  4,
  14,
  9,
  12,
  7,
  0,
  2,
  1,
  13,
  10,
  12,
  6,
  0,
  9,
  5,
  11,
  10,
  5,
  0,
  13,
  14,
  8,
  7,
  10,
  11,
  1,
  10,
  3,
  4,
  15,
  13,
  4,
  1,
  2,
  5,
  11,
  8,
  6,
  12,
  7,
  6,
  12,
  9,
  0,
  3,
  5,
  2,
  14,
  15,
  9,
  10,
  13,
  0,
  7,
  9,
  0,
  14,
  9,
  6,
  3,
  3,
  4,
  15,
  6,
  5,
  10,
  1,
  2,
  13,
  8,
  12,
  5,
  7,
  14,
  11,
  12,
  4,
  11,
  2,
  15,
  8,
  1,
  13,
  1,
  6,
  10,
  4,
  13,
  9,
  0,
  8,
  6,
  15,
  9,
  3,
  8,
  0,
  7,
  11,
  4,
  1,
  15,
  2,
  14,
  12,
  3,
  5,
  11,
  10,
  5,
  14,
  2,
  7,
  12,
  7,
  13,
  13,
  8,
  14,
  11,
  3,
  5,
  0,
  6,
  6,
  15,
  9,
  0,
  10,
  3,
  1,
  4,
  2,
  7,
  8,
  2,
  5,
  12,
  11,
  1,
  12,
  10,
  4,
  14,
  15,
  9,
  10,
  3,
  6,
  15,
  9,
  0,
  0,
  6,
  12,
  10,
  11,
  1,
  7,
  13,
  13,
  8,
  15,
  9,
  1,
  4,
  3,
  5,
  14,
  11,
  5,
  12,
  2,
  7,
  8,
  2,
  4,
  14,
  2,
  14,
  12,
  11,
  4,
  2,
  1,
  12,
  7,
  4,
  10,
  7,
  11,
  13,
  6,
  1,
  8,
  5,
  5,
  0,
  3,
  15,
  15,
  10,
  13,
  3,
  0,
  9,
  14,
  8,
  9,
  6,
  4,
  11,
  2,
  8,
  1,
  12,
  11,
  7,
  10,
  1,
  13,
  14,
  7,
  2,
  8,
  13,
  15,
  6,
  9,
  15,
  12,
  0,
  5,
  9,
  6,
  10,
  3,
  4,
  0,
  5,
  14,
  3,
  12,
  10,
  1,
  15,
  10,
  4,
  15,
  2,
  9,
  7,
  2,
  12,
  6,
  9,
  8,
  5,
  0,
  6,
  13,
  1,
  3,
  13,
  4,
  14,
  14,
  0,
  7,
  11,
  5,
  3,
  11,
  8,
  9,
  4,
  14,
  3,
  15,
  2,
  5,
  12,
  2,
  9,
  8,
  5,
  12,
  15,
  3,
  10,
  7,
  11,
  0,
  14,
  4,
  1,
  10,
  7,
  1,
  6,
  13,
  0,
  11,
  8,
  6,
  13,
  4,
  13,
  11,
  0,
  2,
  11,
  14,
  7,
  15,
  4,
  0,
  9,
  8,
  1,
  13,
  10,
  3,
  14,
  12,
  3,
  9,
  5,
  7,
  12,
  5,
  2,
  10,
  15,
  6,
  8,
  1,
  6,
  1,
  6,
  4,
  11,
  11,
  13,
  13,
  8,
  12,
  1,
  3,
  4,
  7,
  10,
  14,
  7,
  10,
  9,
  15,
  5,
  6,
  0,
  8,
  15,
  0,
  14,
  5,
  2,
  9,
  3,
  2,
  12,
  13,
  1,
  2,
  15,
  8,
  13,
  4,
  8,
  6,
  10,
  15,
  3,
  11,
  7,
  1,
  4,
  10,
  12,
  9,
  5,
  3,
  6,
  14,
  11,
  5,
  0,
  0,
  14,
  12,
  9,
  7,
  2,
  7,
  2,
  11,
  1,
  4,
  14,
  1,
  7,
  9,
  4,
  12,
  10,
  14,
  8,
  2,
  13,
  0,
  15,
  6,
  12,
  10,
  9,
  13,
  0,
  15,
  3,
  3,
  5,
  5,
  6,
  8,
  11
];
Q0.substitute = function(t, a) {
  for (var r = 0, f = 0; f < 4; f++) {
    var i = t >>> 18 - f * 6 & 63, n = L3[f * 64 + i];
    r <<= 4, r |= n;
  }
  for (var f = 0; f < 4; f++) {
    var i = a >>> 18 - f * 6 & 63, n = L3[4 * 64 + f * 64 + i];
    r <<= 4, r |= n;
  }
  return r >>> 0;
};
var F3 = [
  16,
  25,
  12,
  11,
  3,
  20,
  4,
  15,
  31,
  17,
  9,
  6,
  27,
  14,
  1,
  22,
  30,
  24,
  8,
  18,
  0,
  5,
  29,
  23,
  13,
  19,
  2,
  26,
  10,
  21,
  28,
  7
];
Q0.permute = function(t) {
  for (var a = 0, r = 0; r < F3.length; r++)
    a <<= 1, a |= t >>> F3[r] & 1;
  return a >>> 0;
};
Q0.padSplit = function(t, a, r) {
  for (var f = t.toString(2); f.length < a; )
    f = "0" + f;
  for (var i = [], n = 0; n < a; n += r)
    i.push(f.slice(n, n + r));
  return i.join(" ");
};
var kA = m5;
function y5(e) {
  this.options = e, this.type = this.options.type, this.blockSize = 8, this._init(), this.buffer = new Array(this.blockSize), this.bufferOff = 0;
}
var Qs = y5;
y5.prototype._init = function() {
};
y5.prototype.update = function(t) {
  return t.length === 0 ? [] : this.type === "decrypt" ? this._updateDecrypt(t) : this._updateEncrypt(t);
};
y5.prototype._buffer = function(t, a) {
  for (var r = Math.min(this.buffer.length - this.bufferOff, t.length - a), f = 0; f < r; f++)
    this.buffer[this.bufferOff + f] = t[a + f];
  return this.bufferOff += r, r;
};
y5.prototype._flushBuffer = function(t, a) {
  return this._update(this.buffer, 0, t, a), this.bufferOff = 0, this.blockSize;
};
y5.prototype._updateEncrypt = function(t) {
  var a = 0, r = 0, f = (this.bufferOff + t.length) / this.blockSize | 0, i = new Array(f * this.blockSize);
  this.bufferOff !== 0 && (a += this._buffer(t, a), this.bufferOff === this.buffer.length && (r += this._flushBuffer(i, r)));
  for (var n = t.length - (t.length - a) % this.blockSize; a < n; a += this.blockSize)
    this._update(t, a, i, r), r += this.blockSize;
  for (; a < t.length; a++, this.bufferOff++)
    this.buffer[this.bufferOff] = t[a];
  return i;
};
y5.prototype._updateDecrypt = function(t) {
  for (var a = 0, r = 0, f = Math.ceil((this.bufferOff + t.length) / this.blockSize) - 1, i = new Array(f * this.blockSize); f > 0; f--)
    a += this._buffer(t, a), r += this._flushBuffer(i, r);
  return a += this._buffer(t, a), i;
};
y5.prototype.final = function(t) {
  var a;
  t && (a = this.update(t));
  var r;
  return this.type === "encrypt" ? r = this._finalEncrypt() : r = this._finalDecrypt(), a ? a.concat(r) : r;
};
y5.prototype._pad = function(t, a) {
  if (a === 0)
    return !1;
  for (; a < t.length; )
    t[a++] = 0;
  return !0;
};
y5.prototype._finalEncrypt = function() {
  if (!this._pad(this.buffer, this.bufferOff))
    return [];
  var t = new Array(this.blockSize);
  return this._update(this.buffer, 0, t, 0), t;
};
y5.prototype._unpad = function(t) {
  return t;
};
y5.prototype._finalDecrypt = function() {
  kA.equal(this.bufferOff, this.blockSize, "Not enough data to decrypt");
  var t = new Array(this.blockSize);
  return this._flushBuffer(t, 0), this._unpad(t);
};
var Ab = m5, OA = X7(), t0 = Q0, Ib = Qs;
function PA() {
  this.tmp = new Array(2), this.keys = null;
}
function ht(e) {
  Ib.call(this, e);
  var t = new PA();
  this._desState = t, this.deriveKeys(t, e.key);
}
OA(ht, Ib);
var kb = ht;
ht.create = function(t) {
  return new ht(t);
};
var MA = [
  1,
  1,
  2,
  2,
  2,
  2,
  2,
  2,
  1,
  2,
  2,
  2,
  2,
  2,
  2,
  1
];
ht.prototype.deriveKeys = function(t, a) {
  t.keys = new Array(16 * 2), Ab.equal(a.length, this.blockSize, "Invalid key length");
  var r = t0.readUInt32BE(a, 0), f = t0.readUInt32BE(a, 4);
  t0.pc1(r, f, t.tmp, 0), r = t.tmp[0], f = t.tmp[1];
  for (var i = 0; i < t.keys.length; i += 2) {
    var n = MA[i >>> 1];
    r = t0.r28shl(r, n), f = t0.r28shl(f, n), t0.pc2(r, f, t.keys, i);
  }
};
ht.prototype._update = function(t, a, r, f) {
  var i = this._desState, n = t0.readUInt32BE(t, a), o = t0.readUInt32BE(t, a + 4);
  t0.ip(n, o, i.tmp, 0), n = i.tmp[0], o = i.tmp[1], this.type === "encrypt" ? this._encrypt(i, n, o, i.tmp, 0) : this._decrypt(i, n, o, i.tmp, 0), n = i.tmp[0], o = i.tmp[1], t0.writeUInt32BE(r, n, f), t0.writeUInt32BE(r, o, f + 4);
};
ht.prototype._pad = function(t, a) {
  for (var r = t.length - a, f = a; f < t.length; f++)
    t[f] = r;
  return !0;
};
ht.prototype._unpad = function(t) {
  for (var a = t[t.length - 1], r = t.length - a; r < t.length; r++)
    Ab.equal(t[r], a);
  return t.slice(0, t.length - a);
};
ht.prototype._encrypt = function(t, a, r, f, i) {
  for (var n = a, o = r, s = 0; s < t.keys.length; s += 2) {
    var b = t.keys[s], l = t.keys[s + 1];
    t0.expand(o, t.tmp, 0), b ^= t.tmp[0], l ^= t.tmp[1];
    var v = t0.substitute(b, l), m = t0.permute(v), x = o;
    o = (n ^ m) >>> 0, n = x;
  }
  t0.rip(o, n, f, i);
};
ht.prototype._decrypt = function(t, a, r, f, i) {
  for (var n = r, o = a, s = t.keys.length - 2; s >= 0; s -= 2) {
    var b = t.keys[s], l = t.keys[s + 1];
    t0.expand(n, t.tmp, 0), b ^= t.tmp[0], l ^= t.tmp[1];
    var v = t0.substitute(b, l), m = t0.permute(v), x = n;
    n = (o ^ m) >>> 0, o = x;
  }
  t0.rip(n, o, f, i);
};
var Ob = {}, RA = m5, BA = X7(), Tf = {};
function NA(e) {
  RA.equal(e.length, 8, "Invalid IV length"), this.iv = new Array(8);
  for (var t = 0; t < this.iv.length; t++)
    this.iv[t] = e[t];
}
function CA(e) {
  function t(i) {
    e.call(this, i), this._cbcInit();
  }
  BA(t, e);
  for (var a = Object.keys(Tf), r = 0; r < a.length; r++) {
    var f = a[r];
    t.prototype[f] = Tf[f];
  }
  return t.create = function(n) {
    return new t(n);
  }, t;
}
Ob.instantiate = CA;
Tf._cbcInit = function() {
  var t = new NA(this.options.iv);
  this._cbcState = t;
};
Tf._update = function(t, a, r, f) {
  var i = this._cbcState, n = this.constructor.super_.prototype, o = i.iv;
  if (this.type === "encrypt") {
    for (var s = 0; s < this.blockSize; s++)
      o[s] ^= t[a + s];
    n._update.call(this, o, 0, r, f);
    for (var s = 0; s < this.blockSize; s++)
      o[s] = r[f + s];
  } else {
    n._update.call(this, t, a, r, f);
    for (var s = 0; s < this.blockSize; s++)
      r[f + s] ^= o[s];
    for (var s = 0; s < this.blockSize; s++)
      o[s] = t[a + s];
  }
};
var DA = m5, LA = X7(), Pb = Qs, pa = kb;
function FA(e, t) {
  DA.equal(t.length, 24, "Invalid key length");
  var a = t.slice(0, 8), r = t.slice(8, 16), f = t.slice(16, 24);
  e === "encrypt" ? this.ciphers = [
    pa.create({ type: "encrypt", key: a }),
    pa.create({ type: "decrypt", key: r }),
    pa.create({ type: "encrypt", key: f })
  ] : this.ciphers = [
    pa.create({ type: "decrypt", key: f }),
    pa.create({ type: "encrypt", key: r }),
    pa.create({ type: "decrypt", key: a })
  ];
}
function sr(e) {
  Pb.call(this, e);
  var t = new FA(this.type, this.options.key);
  this._edeState = t;
}
LA(sr, Pb);
var HA = sr;
sr.create = function(t) {
  return new sr(t);
};
sr.prototype._update = function(t, a, r, f) {
  var i = this._edeState;
  i.ciphers[0]._update(t, a, r, f), i.ciphers[1]._update(r, f, r, f), i.ciphers[2]._update(r, f, r, f);
};
sr.prototype._pad = pa.prototype._pad;
sr.prototype._unpad = pa.prototype._unpad;
S1.utils = Q0;
S1.Cipher = Qs;
S1.DES = kb;
S1.CBC = Ob;
S1.EDE = HA;
var Mb = Ma, kt = S1, UA = X7(), Ga = fe.Buffer, O9 = {
  "des-ede3-cbc": kt.CBC.instantiate(kt.EDE),
  "des-ede3": kt.EDE,
  "des-ede-cbc": kt.CBC.instantiate(kt.EDE),
  "des-ede": kt.EDE,
  "des-cbc": kt.CBC.instantiate(kt.DES),
  "des-ecb": kt.DES
};
O9.des = O9["des-cbc"];
O9.des3 = O9["des-ede3-cbc"];
var $A = si;
UA(si, Mb);
function si(e) {
  Mb.call(this);
  var t = e.mode.toLowerCase(), a = O9[t], r;
  e.decrypt ? r = "decrypt" : r = "encrypt";
  var f = e.key;
  Ga.isBuffer(f) || (f = Ga.from(f)), (t === "des-ede" || t === "des-ede-cbc") && (f = Ga.concat([f, f.slice(0, 8)]));
  var i = e.iv;
  Ga.isBuffer(i) || (i = Ga.from(i)), this._des = a.create({
    key: f,
    iv: i,
    type: r
  });
}
si.prototype._update = function(e) {
  return Ga.from(this._des.update(e));
};
si.prototype._final = function() {
  return Ga.from(this._des.final());
};
var X0 = {}, ed = {}, td = {};
td.encrypt = function(e, t) {
  return e._cipher.encryptBlock(t);
};
td.decrypt = function(e, t) {
  return e._cipher.decryptBlock(t);
};
var ad = {}, e6 = function(t, a) {
  for (var r = Math.min(t.length, a.length), f = new Q.Buffer(r), i = 0; i < r; ++i)
    f[i] = t[i] ^ a[i];
  return f;
}, Rb = e6;
ad.encrypt = function(e, t) {
  var a = Rb(t, e._prev);
  return e._prev = e._cipher.encryptBlock(a), e._prev;
};
ad.decrypt = function(e, t) {
  var a = e._prev;
  e._prev = t;
  var r = e._cipher.decryptBlock(t);
  return Rb(r, a);
};
var Bb = {}, f9 = fe.Buffer, jA = e6;
function H3(e, t, a) {
  var r = t.length, f = jA(t, e._cache);
  return e._cache = e._cache.slice(r), e._prev = f9.concat([e._prev, a ? t : f]), f;
}
Bb.encrypt = function(e, t, a) {
  for (var r = f9.allocUnsafe(0), f; t.length; )
    if (e._cache.length === 0 && (e._cache = e._cipher.encryptBlock(e._prev), e._prev = f9.allocUnsafe(0)), e._cache.length <= t.length)
      f = e._cache.length, r = f9.concat([r, H3(e, t.slice(0, f), a)]), t = t.slice(f);
    else {
      r = f9.concat([r, H3(e, t, a)]);
      break;
    }
  return r;
};
var Nb = {}, Co = fe.Buffer;
function VA(e, t, a) {
  var r = e._cipher.encryptBlock(e._prev), f = r[0] ^ t;
  return e._prev = Co.concat([
    e._prev.slice(1),
    Co.from([a ? t : f])
  ]), f;
}
Nb.encrypt = function(e, t, a) {
  for (var r = t.length, f = Co.allocUnsafe(r), i = -1; ++i < r; )
    f[i] = VA(e, t[i], a);
  return f;
};
var Cb = {}, ef = fe.Buffer;
function zA(e, t, a) {
  for (var r, f = -1, i = 8, n = 0, o, s; ++f < i; )
    r = e._cipher.encryptBlock(e._prev), o = t & 1 << 7 - f ? 128 : 0, s = r[0] ^ o, n += (s & 128) >> f % 8, e._prev = qA(e._prev, a ? o : s);
  return n;
}
function qA(e, t) {
  var a = e.length, r = -1, f = ef.allocUnsafe(e.length);
  for (e = ef.concat([e, ef.from([t])]); ++r < a; )
    f[r] = e[r] << 1 | e[r + 1] >> 7;
  return f;
}
Cb.encrypt = function(e, t, a) {
  for (var r = t.length, f = ef.allocUnsafe(r), i = -1; ++i < r; )
    f[i] = zA(e, t[i], a);
  return f;
};
var Db = {}, KA = e6;
function GA(e) {
  return e._prev = e._cipher.encryptBlock(e._prev), e._prev;
}
Db.encrypt = function(e, t) {
  for (; e._cache.length < t.length; )
    e._cache = Q.Buffer.concat([e._cache, GA(e)]);
  var a = e._cache.slice(0, t.length);
  return e._cache = e._cache.slice(t.length), KA(t, a);
};
var Do = {};
function WA(e) {
  for (var t = e.length, a; t--; )
    if (a = e.readUInt8(t), a === 255)
      e.writeUInt8(0, t);
    else {
      a++, e.writeUInt8(a, t);
      break;
    }
}
var Lb = WA, ZA = e6, U3 = fe.Buffer, YA = Lb;
function XA(e) {
  var t = e._cipher.encryptBlockRaw(e._prev);
  return YA(e._prev), t;
}
var f8 = 16;
Do.encrypt = function(e, t) {
  var a = Math.ceil(t.length / f8), r = e._cache.length;
  e._cache = U3.concat([
    e._cache,
    U3.allocUnsafe(a * f8)
  ]);
  for (var f = 0; f < a; f++) {
    var i = XA(e), n = r + f * f8;
    e._cache.writeUInt32BE(i[0], n + 0), e._cache.writeUInt32BE(i[1], n + 4), e._cache.writeUInt32BE(i[2], n + 8), e._cache.writeUInt32BE(i[3], n + 12);
  }
  var o = e._cache.slice(0, t.length);
  return e._cache = e._cache.slice(t.length), ZA(t, o);
};
const JA = {
  cipher: "AES",
  key: 128,
  iv: 16,
  mode: "CBC",
  type: "block"
}, QA = {
  cipher: "AES",
  key: 192,
  iv: 16,
  mode: "CBC",
  type: "block"
}, eI = {
  cipher: "AES",
  key: 256,
  iv: 16,
  mode: "CBC",
  type: "block"
}, Fb = {
  "aes-128-ecb": {
    cipher: "AES",
    key: 128,
    iv: 0,
    mode: "ECB",
    type: "block"
  },
  "aes-192-ecb": {
    cipher: "AES",
    key: 192,
    iv: 0,
    mode: "ECB",
    type: "block"
  },
  "aes-256-ecb": {
    cipher: "AES",
    key: 256,
    iv: 0,
    mode: "ECB",
    type: "block"
  },
  "aes-128-cbc": {
    cipher: "AES",
    key: 128,
    iv: 16,
    mode: "CBC",
    type: "block"
  },
  "aes-192-cbc": {
    cipher: "AES",
    key: 192,
    iv: 16,
    mode: "CBC",
    type: "block"
  },
  "aes-256-cbc": {
    cipher: "AES",
    key: 256,
    iv: 16,
    mode: "CBC",
    type: "block"
  },
  aes128: JA,
  aes192: QA,
  aes256: eI,
  "aes-128-cfb": {
    cipher: "AES",
    key: 128,
    iv: 16,
    mode: "CFB",
    type: "stream"
  },
  "aes-192-cfb": {
    cipher: "AES",
    key: 192,
    iv: 16,
    mode: "CFB",
    type: "stream"
  },
  "aes-256-cfb": {
    cipher: "AES",
    key: 256,
    iv: 16,
    mode: "CFB",
    type: "stream"
  },
  "aes-128-cfb8": {
    cipher: "AES",
    key: 128,
    iv: 16,
    mode: "CFB8",
    type: "stream"
  },
  "aes-192-cfb8": {
    cipher: "AES",
    key: 192,
    iv: 16,
    mode: "CFB8",
    type: "stream"
  },
  "aes-256-cfb8": {
    cipher: "AES",
    key: 256,
    iv: 16,
    mode: "CFB8",
    type: "stream"
  },
  "aes-128-cfb1": {
    cipher: "AES",
    key: 128,
    iv: 16,
    mode: "CFB1",
    type: "stream"
  },
  "aes-192-cfb1": {
    cipher: "AES",
    key: 192,
    iv: 16,
    mode: "CFB1",
    type: "stream"
  },
  "aes-256-cfb1": {
    cipher: "AES",
    key: 256,
    iv: 16,
    mode: "CFB1",
    type: "stream"
  },
  "aes-128-ofb": {
    cipher: "AES",
    key: 128,
    iv: 16,
    mode: "OFB",
    type: "stream"
  },
  "aes-192-ofb": {
    cipher: "AES",
    key: 192,
    iv: 16,
    mode: "OFB",
    type: "stream"
  },
  "aes-256-ofb": {
    cipher: "AES",
    key: 256,
    iv: 16,
    mode: "OFB",
    type: "stream"
  },
  "aes-128-ctr": {
    cipher: "AES",
    key: 128,
    iv: 16,
    mode: "CTR",
    type: "stream"
  },
  "aes-192-ctr": {
    cipher: "AES",
    key: 192,
    iv: 16,
    mode: "CTR",
    type: "stream"
  },
  "aes-256-ctr": {
    cipher: "AES",
    key: 256,
    iv: 16,
    mode: "CTR",
    type: "stream"
  },
  "aes-128-gcm": {
    cipher: "AES",
    key: 128,
    iv: 12,
    mode: "GCM",
    type: "auth"
  },
  "aes-192-gcm": {
    cipher: "AES",
    key: 192,
    iv: 12,
    mode: "GCM",
    type: "auth"
  },
  "aes-256-gcm": {
    cipher: "AES",
    key: 256,
    iv: 12,
    mode: "GCM",
    type: "auth"
  }
};
var tI = {
  ECB: td,
  CBC: ad,
  CFB: Bb,
  CFB8: Nb,
  CFB1: Cb,
  OFB: Db,
  CTR: Do,
  GCM: Do
}, tf = Fb;
for (var $3 in tf)
  tf[$3].module = tI[tf[$3].mode];
var rd = tf, t6 = {}, Af = fe.Buffer;
function fd(e) {
  Af.isBuffer(e) || (e = Af.from(e));
  for (var t = e.length / 4 | 0, a = new Array(t), r = 0; r < t; r++)
    a[r] = e.readUInt32BE(r * 4);
  return a;
}
function i8(e) {
  for (var t = 0; t < e.length; e++)
    e[t] = 0;
}
function Hb(e, t, a, r, f) {
  for (var i = a[0], n = a[1], o = a[2], s = a[3], b = e[0] ^ t[0], l = e[1] ^ t[1], v = e[2] ^ t[2], m = e[3] ^ t[3], x, I, k, P, M = 4, R = 1; R < f; R++)
    x = i[b >>> 24] ^ n[l >>> 16 & 255] ^ o[v >>> 8 & 255] ^ s[m & 255] ^ t[M++], I = i[l >>> 24] ^ n[v >>> 16 & 255] ^ o[m >>> 8 & 255] ^ s[b & 255] ^ t[M++], k = i[v >>> 24] ^ n[m >>> 16 & 255] ^ o[b >>> 8 & 255] ^ s[l & 255] ^ t[M++], P = i[m >>> 24] ^ n[b >>> 16 & 255] ^ o[l >>> 8 & 255] ^ s[v & 255] ^ t[M++], b = x, l = I, v = k, m = P;
  return x = (r[b >>> 24] << 24 | r[l >>> 16 & 255] << 16 | r[v >>> 8 & 255] << 8 | r[m & 255]) ^ t[M++], I = (r[l >>> 24] << 24 | r[v >>> 16 & 255] << 16 | r[m >>> 8 & 255] << 8 | r[b & 255]) ^ t[M++], k = (r[v >>> 24] << 24 | r[m >>> 16 & 255] << 16 | r[b >>> 8 & 255] << 8 | r[l & 255]) ^ t[M++], P = (r[m >>> 24] << 24 | r[b >>> 16 & 255] << 16 | r[l >>> 8 & 255] << 8 | r[v & 255]) ^ t[M++], x = x >>> 0, I = I >>> 0, k = k >>> 0, P = P >>> 0, [x, I, k, P];
}
var aI = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54], Ge = function() {
  for (var e = new Array(256), t = 0; t < 256; t++)
    t < 128 ? e[t] = t << 1 : e[t] = t << 1 ^ 283;
  for (var a = [], r = [], f = [[], [], [], []], i = [[], [], [], []], n = 0, o = 0, s = 0; s < 256; ++s) {
    var b = o ^ o << 1 ^ o << 2 ^ o << 3 ^ o << 4;
    b = b >>> 8 ^ b & 255 ^ 99, a[n] = b, r[b] = n;
    var l = e[n], v = e[l], m = e[v], x = e[b] * 257 ^ b * 16843008;
    f[0][n] = x << 24 | x >>> 8, f[1][n] = x << 16 | x >>> 16, f[2][n] = x << 8 | x >>> 24, f[3][n] = x, x = m * 16843009 ^ v * 65537 ^ l * 257 ^ n * 16843008, i[0][b] = x << 24 | x >>> 8, i[1][b] = x << 16 | x >>> 16, i[2][b] = x << 8 | x >>> 24, i[3][b] = x, n === 0 ? n = o = 1 : (n = l ^ e[e[e[m ^ l]]], o ^= e[e[o]]);
  }
  return {
    SBOX: a,
    INV_SBOX: r,
    SUB_MIX: f,
    INV_SUB_MIX: i
  };
}();
function p5(e) {
  this._key = fd(e), this._reset();
}
p5.blockSize = 4 * 4;
p5.keySize = 256 / 8;
p5.prototype.blockSize = p5.blockSize;
p5.prototype.keySize = p5.keySize;
p5.prototype._reset = function() {
  for (var e = this._key, t = e.length, a = t + 6, r = (a + 1) * 4, f = [], i = 0; i < t; i++)
    f[i] = e[i];
  for (i = t; i < r; i++) {
    var n = f[i - 1];
    i % t === 0 ? (n = n << 8 | n >>> 24, n = Ge.SBOX[n >>> 24] << 24 | Ge.SBOX[n >>> 16 & 255] << 16 | Ge.SBOX[n >>> 8 & 255] << 8 | Ge.SBOX[n & 255], n ^= aI[i / t | 0] << 24) : t > 6 && i % t === 4 && (n = Ge.SBOX[n >>> 24] << 24 | Ge.SBOX[n >>> 16 & 255] << 16 | Ge.SBOX[n >>> 8 & 255] << 8 | Ge.SBOX[n & 255]), f[i] = f[i - t] ^ n;
  }
  for (var o = [], s = 0; s < r; s++) {
    var b = r - s, l = f[b - (s % 4 ? 0 : 4)];
    s < 4 || b <= 4 ? o[s] = l : o[s] = Ge.INV_SUB_MIX[0][Ge.SBOX[l >>> 24]] ^ Ge.INV_SUB_MIX[1][Ge.SBOX[l >>> 16 & 255]] ^ Ge.INV_SUB_MIX[2][Ge.SBOX[l >>> 8 & 255]] ^ Ge.INV_SUB_MIX[3][Ge.SBOX[l & 255]];
  }
  this._nRounds = a, this._keySchedule = f, this._invKeySchedule = o;
};
p5.prototype.encryptBlockRaw = function(e) {
  return e = fd(e), Hb(e, this._keySchedule, Ge.SUB_MIX, Ge.SBOX, this._nRounds);
};
p5.prototype.encryptBlock = function(e) {
  var t = this.encryptBlockRaw(e), a = Af.allocUnsafe(16);
  return a.writeUInt32BE(t[0], 0), a.writeUInt32BE(t[1], 4), a.writeUInt32BE(t[2], 8), a.writeUInt32BE(t[3], 12), a;
};
p5.prototype.decryptBlock = function(e) {
  e = fd(e);
  var t = e[1];
  e[1] = e[3], e[3] = t;
  var a = Hb(e, this._invKeySchedule, Ge.INV_SUB_MIX, Ge.INV_SBOX, this._nRounds), r = Af.allocUnsafe(16);
  return r.writeUInt32BE(a[0], 0), r.writeUInt32BE(a[3], 4), r.writeUInt32BE(a[2], 8), r.writeUInt32BE(a[1], 12), r;
};
p5.prototype.scrub = function() {
  i8(this._keySchedule), i8(this._invKeySchedule), i8(this._key);
};
t6.AES = p5;
var a1 = fe.Buffer, rI = a1.alloc(16, 0);
function fI(e) {
  return [
    e.readUInt32BE(0),
    e.readUInt32BE(4),
    e.readUInt32BE(8),
    e.readUInt32BE(12)
  ];
}
function Ub(e) {
  var t = a1.allocUnsafe(16);
  return t.writeUInt32BE(e[0] >>> 0, 0), t.writeUInt32BE(e[1] >>> 0, 4), t.writeUInt32BE(e[2] >>> 0, 8), t.writeUInt32BE(e[3] >>> 0, 12), t;
}
function a6(e) {
  this.h = e, this.state = a1.alloc(16, 0), this.cache = a1.allocUnsafe(0);
}
a6.prototype.ghash = function(e) {
  for (var t = -1; ++t < e.length; )
    this.state[t] ^= e[t];
  this._multiply();
};
a6.prototype._multiply = function() {
  for (var e = fI(this.h), t = [0, 0, 0, 0], a, r, f, i = -1; ++i < 128; ) {
    for (r = (this.state[~~(i / 8)] & 1 << 7 - i % 8) !== 0, r && (t[0] ^= e[0], t[1] ^= e[1], t[2] ^= e[2], t[3] ^= e[3]), f = (e[3] & 1) !== 0, a = 3; a > 0; a--)
      e[a] = e[a] >>> 1 | (e[a - 1] & 1) << 31;
    e[0] = e[0] >>> 1, f && (e[0] = e[0] ^ 225 << 24);
  }
  this.state = Ub(t);
};
a6.prototype.update = function(e) {
  this.cache = a1.concat([this.cache, e]);
  for (var t; this.cache.length >= 16; )
    t = this.cache.slice(0, 16), this.cache = this.cache.slice(16), this.ghash(t);
};
a6.prototype.final = function(e, t) {
  return this.cache.length && this.ghash(a1.concat([this.cache, rI], 16)), this.ghash(Ub([0, e, 0, t])), this.state;
};
var iI = a6, nI = t6, L0 = fe.Buffer, $b = Ma, oI = X7(), jb = iI, sI = e6, dI = Lb;
function cI(e, t) {
  var a = 0;
  e.length !== t.length && a++;
  for (var r = Math.min(e.length, t.length), f = 0; f < r; ++f)
    a += e[f] ^ t[f];
  return a;
}
function uI(e, t, a) {
  if (t.length === 12)
    return e._finID = L0.concat([t, L0.from([0, 0, 0, 1])]), L0.concat([t, L0.from([0, 0, 0, 2])]);
  var r = new jb(a), f = t.length, i = f % 16;
  r.update(t), i && (i = 16 - i, r.update(L0.alloc(i, 0))), r.update(L0.alloc(8, 0));
  var n = f * 8, o = L0.alloc(8);
  o.writeUIntBE(n, 0, 8), r.update(o), e._finID = r.state;
  var s = L0.from(e._finID);
  return dI(s), s;
}
function _r(e, t, a, r) {
  $b.call(this);
  var f = L0.alloc(4, 0);
  this._cipher = new nI.AES(t);
  var i = this._cipher.encryptBlock(f);
  this._ghash = new jb(i), a = uI(this, a, i), this._prev = L0.from(a), this._cache = L0.allocUnsafe(0), this._secCache = L0.allocUnsafe(0), this._decrypt = r, this._alen = 0, this._len = 0, this._mode = e, this._authTag = null, this._called = !1;
}
oI(_r, $b);
_r.prototype._update = function(e) {
  if (!this._called && this._alen) {
    var t = 16 - this._alen % 16;
    t < 16 && (t = L0.alloc(t, 0), this._ghash.update(t));
  }
  this._called = !0;
  var a = this._mode.encrypt(this, e);
  return this._decrypt ? this._ghash.update(e) : this._ghash.update(a), this._len += e.length, a;
};
_r.prototype._final = function() {
  if (this._decrypt && !this._authTag)
    throw new Error("Unsupported state or unable to authenticate data");
  var e = sI(this._ghash.final(this._alen * 8, this._len * 8), this._cipher.encryptBlock(this._finID));
  if (this._decrypt && cI(e, this._authTag))
    throw new Error("Unsupported state or unable to authenticate data");
  this._authTag = e, this._cipher.scrub();
};
_r.prototype.getAuthTag = function() {
  if (this._decrypt || !L0.isBuffer(this._authTag))
    throw new Error("Attempting to get auth tag in unsupported state");
  return this._authTag;
};
_r.prototype.setAuthTag = function(t) {
  if (!this._decrypt)
    throw new Error("Attempting to set auth tag in unsupported state");
  this._authTag = t;
};
_r.prototype.setAAD = function(t) {
  if (this._called)
    throw new Error("Attempting to set AAD in unsupported state");
  this._ghash.update(t), this._alen += t.length;
};
var Vb = _r, lI = t6, n8 = fe.Buffer, zb = Ma, pI = X7();
function di(e, t, a, r) {
  zb.call(this), this._cipher = new lI.AES(t), this._prev = n8.from(a), this._cache = n8.allocUnsafe(0), this._secCache = n8.allocUnsafe(0), this._decrypt = r, this._mode = e;
}
pI(di, zb);
di.prototype._update = function(e) {
  return this._mode.encrypt(this, e, this._decrypt);
};
di.prototype._final = function() {
  this._cipher.scrub();
};
var qb = di, Ha = fe.Buffer, hI = Gs;
function bI(e, t, a, r) {
  if (Ha.isBuffer(e) || (e = Ha.from(e, "binary")), t && (Ha.isBuffer(t) || (t = Ha.from(t, "binary")), t.length !== 8))
    throw new RangeError("salt should be Buffer with 8 byte length");
  for (var f = a / 8, i = Ha.alloc(f), n = Ha.alloc(r || 0), o = Ha.alloc(0); f > 0 || r > 0; ) {
    var s = new hI();
    s.update(o), s.update(e), t && s.update(t), o = s.digest();
    var b = 0;
    if (f > 0) {
      var l = i.length - f;
      b = Math.min(f, o.length), o.copy(i, l, 0, b), f -= b;
    }
    if (b < o.length && r > 0) {
      var v = n.length - r, m = Math.min(r, o.length - b);
      o.copy(n, v, b, b + m), r -= m;
    }
  }
  return o.fill(0), { key: i, iv: n };
}
var ci = bI, Kb = rd, mI = Vb, qt = fe.Buffer, vI = qb, Gb = Ma, yI = t6, gI = ci, xI = X7();
function r6(e, t, a) {
  Gb.call(this), this._cache = new ui(), this._cipher = new yI.AES(t), this._prev = qt.from(a), this._mode = e, this._autopadding = !0;
}
xI(r6, Gb);
r6.prototype._update = function(e) {
  this._cache.add(e);
  for (var t, a, r = []; t = this._cache.get(); )
    a = this._mode.encrypt(this, t), r.push(a);
  return qt.concat(r);
};
var _I = qt.alloc(16, 16);
r6.prototype._final = function() {
  var e = this._cache.flush();
  if (this._autopadding)
    return e = this._mode.encrypt(this, e), this._cipher.scrub(), e;
  if (!e.equals(_I))
    throw this._cipher.scrub(), new Error("data not multiple of block length");
};
r6.prototype.setAutoPadding = function(e) {
  return this._autopadding = !!e, this;
};
function ui() {
  this.cache = qt.allocUnsafe(0);
}
ui.prototype.add = function(e) {
  this.cache = qt.concat([this.cache, e]);
};
ui.prototype.get = function() {
  if (this.cache.length > 15) {
    var e = this.cache.slice(0, 16);
    return this.cache = this.cache.slice(16), e;
  }
  return null;
};
ui.prototype.flush = function() {
  for (var e = 16 - this.cache.length, t = qt.allocUnsafe(e), a = -1; ++a < e; )
    t.writeUInt8(e, a);
  return qt.concat([this.cache, t]);
};
function Wb(e, t, a) {
  var r = Kb[e.toLowerCase()];
  if (!r)
    throw new TypeError("invalid suite type");
  if (typeof t == "string" && (t = qt.from(t)), t.length !== r.key / 8)
    throw new TypeError("invalid key length " + t.length);
  if (typeof a == "string" && (a = qt.from(a)), r.mode !== "GCM" && a.length !== r.iv)
    throw new TypeError("invalid iv length " + a.length);
  return r.type === "stream" ? new vI(r.module, t, a) : r.type === "auth" ? new mI(r.module, t, a) : new r6(r.module, t, a);
}
function wI(e, t) {
  var a = Kb[e.toLowerCase()];
  if (!a)
    throw new TypeError("invalid suite type");
  var r = gI(t, !1, a.key, a.iv);
  return Wb(e, r.key, r.iv);
}
ed.createCipheriv = Wb;
ed.createCipher = wI;
var id = {}, SI = Vb, r1 = fe.Buffer, Zb = rd, EI = qb, Yb = Ma, TI = t6, AI = ci, II = X7();
function f6(e, t, a) {
  Yb.call(this), this._cache = new li(), this._last = void 0, this._cipher = new TI.AES(t), this._prev = r1.from(a), this._mode = e, this._autopadding = !0;
}
II(f6, Yb);
f6.prototype._update = function(e) {
  this._cache.add(e);
  for (var t, a, r = []; t = this._cache.get(this._autopadding); )
    a = this._mode.decrypt(this, t), r.push(a);
  return r1.concat(r);
};
f6.prototype._final = function() {
  var e = this._cache.flush();
  if (this._autopadding)
    return kI(this._mode.decrypt(this, e));
  if (e)
    throw new Error("data not multiple of block length");
};
f6.prototype.setAutoPadding = function(e) {
  return this._autopadding = !!e, this;
};
function li() {
  this.cache = r1.allocUnsafe(0);
}
li.prototype.add = function(e) {
  this.cache = r1.concat([this.cache, e]);
};
li.prototype.get = function(e) {
  var t;
  if (e) {
    if (this.cache.length > 16)
      return t = this.cache.slice(0, 16), this.cache = this.cache.slice(16), t;
  } else if (this.cache.length >= 16)
    return t = this.cache.slice(0, 16), this.cache = this.cache.slice(16), t;
  return null;
};
li.prototype.flush = function() {
  if (this.cache.length)
    return this.cache;
};
function kI(e) {
  var t = e[15];
  if (t < 1 || t > 16)
    throw new Error("unable to decrypt data");
  for (var a = -1; ++a < t; )
    if (e[a + (16 - t)] !== t)
      throw new Error("unable to decrypt data");
  if (t !== 16)
    return e.slice(0, 16 - t);
}
function Xb(e, t, a) {
  var r = Zb[e.toLowerCase()];
  if (!r)
    throw new TypeError("invalid suite type");
  if (typeof a == "string" && (a = r1.from(a)), r.mode !== "GCM" && a.length !== r.iv)
    throw new TypeError("invalid iv length " + a.length);
  if (typeof t == "string" && (t = r1.from(t)), t.length !== r.key / 8)
    throw new TypeError("invalid key length " + t.length);
  return r.type === "stream" ? new EI(r.module, t, a, !0) : r.type === "auth" ? new SI(r.module, t, a, !0) : new f6(r.module, t, a);
}
function OI(e, t) {
  var a = Zb[e.toLowerCase()];
  if (!a)
    throw new TypeError("invalid suite type");
  var r = AI(t, !1, a.key, a.iv);
  return Xb(e, r.key, r.iv);
}
id.createDecipher = OI;
id.createDecipheriv = Xb;
var Jb = ed, Qb = id, PI = Fb;
function MI() {
  return Object.keys(PI);
}
X0.createCipher = X0.Cipher = Jb.createCipher;
X0.createCipheriv = X0.Cipheriv = Jb.createCipheriv;
X0.createDecipher = X0.Decipher = Qb.createDecipher;
X0.createDecipheriv = X0.Decipheriv = Qb.createDecipheriv;
X0.listCiphers = X0.getCiphers = MI;
var em = {};
(function(e) {
  e["des-ecb"] = {
    key: 8,
    iv: 0
  }, e["des-cbc"] = e.des = {
    key: 8,
    iv: 8
  }, e["des-ede3-cbc"] = e.des3 = {
    key: 24,
    iv: 8
  }, e["des-ede3"] = {
    key: 24,
    iv: 0
  }, e["des-ede-cbc"] = {
    key: 16,
    iv: 8
  }, e["des-ede"] = {
    key: 16,
    iv: 0
  };
})(em);
var tm = $A, nd = X0, _a = rd, $t = em, am = ci;
function RI(e, t) {
  e = e.toLowerCase();
  var a, r;
  if (_a[e])
    a = _a[e].key, r = _a[e].iv;
  else if ($t[e])
    a = $t[e].key * 8, r = $t[e].iv;
  else
    throw new TypeError("invalid suite type");
  var f = am(t, !1, a, r);
  return rm(e, f.key, f.iv);
}
function BI(e, t) {
  e = e.toLowerCase();
  var a, r;
  if (_a[e])
    a = _a[e].key, r = _a[e].iv;
  else if ($t[e])
    a = $t[e].key * 8, r = $t[e].iv;
  else
    throw new TypeError("invalid suite type");
  var f = am(t, !1, a, r);
  return fm(e, f.key, f.iv);
}
function rm(e, t, a) {
  if (e = e.toLowerCase(), _a[e])
    return nd.createCipheriv(e, t, a);
  if ($t[e])
    return new tm({ key: t, iv: a, mode: e });
  throw new TypeError("invalid suite type");
}
function fm(e, t, a) {
  if (e = e.toLowerCase(), _a[e])
    return nd.createDecipheriv(e, t, a);
  if ($t[e])
    return new tm({ key: t, iv: a, mode: e, decrypt: !0 });
  throw new TypeError("invalid suite type");
}
function NI() {
  return Object.keys($t).concat(nd.getCiphers());
}
N5.createCipher = N5.Cipher = RI;
N5.createCipheriv = N5.Cipheriv = rm;
N5.createDecipher = N5.Decipher = BI;
N5.createDecipheriv = N5.Decipheriv = fm;
N5.listCiphers = N5.getCiphers = NI;
var Ua = {}, o8, j3;
function im() {
  if (j3)
    return o8;
  j3 = 1;
  var e = u0, t = Sd();
  function a(r) {
    this.rand = r || new t.Rand();
  }
  return o8 = a, a.create = function(f) {
    return new a(f);
  }, a.prototype._randbelow = function(f) {
    var i = f.bitLength(), n = Math.ceil(i / 8);
    do
      var o = new e(this.rand.generate(n));
    while (o.cmp(f) >= 0);
    return o;
  }, a.prototype._randrange = function(f, i) {
    var n = i.sub(f);
    return f.add(this._randbelow(n));
  }, a.prototype.test = function(f, i, n) {
    var o = f.bitLength(), s = e.mont(f), b = new e(1).toRed(s);
    i || (i = Math.max(1, o / 48 | 0));
    for (var l = f.subn(1), v = 0; !l.testn(v); v++)
      ;
    for (var m = f.shrn(v), x = l.toRed(s), I = !0; i > 0; i--) {
      var k = this._randrange(new e(2), l);
      n && n(k);
      var P = k.toRed(s).redPow(m);
      if (!(P.cmp(b) === 0 || P.cmp(x) === 0)) {
        for (var M = 1; M < v; M++) {
          if (P = P.redSqr(), P.cmp(b) === 0)
            return !1;
          if (P.cmp(x) === 0)
            break;
        }
        if (M === v)
          return !1;
      }
    }
    return I;
  }, a.prototype.getDivisor = function(f, i) {
    var n = f.bitLength(), o = e.mont(f), s = new e(1).toRed(o);
    i || (i = Math.max(1, n / 48 | 0));
    for (var b = f.subn(1), l = 0; !b.testn(l); l++)
      ;
    for (var v = f.shrn(l), m = b.toRed(o); i > 0; i--) {
      var x = this._randrange(new e(2), b), I = f.gcd(x);
      if (I.cmpn(1) !== 0)
        return I;
      var k = x.toRed(o).redPow(v);
      if (!(k.cmp(s) === 0 || k.cmp(m) === 0)) {
        for (var P = 1; P < l; P++) {
          if (k = k.redSqr(), k.cmp(s) === 0)
            return k.fromRed().subn(1).gcd(f);
          if (k.cmp(m) === 0)
            break;
        }
        if (P === l)
          return k = k.redSqr(), k.fromRed().subn(1).gcd(f);
      }
    }
    return !1;
  }, o8;
}
var s8, V3;
function nm() {
  if (V3)
    return s8;
  V3 = 1;
  var e = x1;
  s8 = P, P.simpleSieve = I, P.fermatTest = k;
  var t = u0, a = new t(24), r = im(), f = new r(), i = new t(1), n = new t(2), o = new t(5);
  new t(16), new t(8);
  var s = new t(10), b = new t(3);
  new t(7);
  var l = new t(11), v = new t(4);
  new t(12);
  var m = null;
  function x() {
    if (m !== null)
      return m;
    var M = 1048576, R = [];
    R[0] = 2;
    for (var F = 1, C = 3; C < M; C += 2) {
      for (var L = Math.ceil(Math.sqrt(C)), U = 0; U < F && R[U] <= L && C % R[U] !== 0; U++)
        ;
      F !== U && R[U] <= L || (R[F++] = C);
    }
    return m = R, R;
  }
  function I(M) {
    for (var R = x(), F = 0; F < R.length; F++)
      if (M.modn(R[F]) === 0)
        return M.cmpn(R[F]) === 0;
    return !0;
  }
  function k(M) {
    var R = t.mont(M);
    return n.toRed(R).redPow(M.subn(1)).fromRed().cmpn(1) === 0;
  }
  function P(M, R) {
    if (M < 16)
      return R === 2 || R === 5 ? new t([140, 123]) : new t([140, 39]);
    R = new t(R);
    for (var F, C; ; ) {
      for (F = new t(e(Math.ceil(M / 8))); F.bitLength() > M; )
        F.ishrn(1);
      if (F.isEven() && F.iadd(i), F.testn(1) || F.iadd(n), R.cmp(n)) {
        if (!R.cmp(o))
          for (; F.mod(s).cmp(b); )
            F.iadd(v);
      } else
        for (; F.mod(a).cmp(l); )
          F.iadd(v);
      if (C = F.shrn(1), I(C) && I(F) && k(C) && k(F) && f.test(C) && f.test(F))
        return F;
    }
  }
  return s8;
}
const CI = {
  gen: "02",
  prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff"
}, DI = {
  gen: "02",
  prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff"
}, LI = {
  gen: "02",
  prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff"
}, FI = {
  gen: "02",
  prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff"
}, HI = {
  gen: "02",
  prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff"
}, UI = {
  gen: "02",
  prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff"
}, $I = {
  gen: "02",
  prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff"
}, jI = {
  gen: "02",
  prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff"
}, VI = {
  modp1: CI,
  modp2: DI,
  modp5: LI,
  modp14: FI,
  modp15: HI,
  modp16: UI,
  modp17: $I,
  modp18: jI
};
var d8, z3;
function zI() {
  if (z3)
    return d8;
  z3 = 1;
  var e = u0, t = im(), a = new t(), r = new e(24), f = new e(11), i = new e(10), n = new e(3), o = new e(7), s = nm(), b = x1;
  d8 = I;
  function l(P, M) {
    return M = M || "utf8", Q.Buffer.isBuffer(P) || (P = new Q.Buffer(P, M)), this._pub = new e(P), this;
  }
  function v(P, M) {
    return M = M || "utf8", Q.Buffer.isBuffer(P) || (P = new Q.Buffer(P, M)), this._priv = new e(P), this;
  }
  var m = {};
  function x(P, M) {
    var R = M.toString("hex"), F = [R, P.toString(16)].join("_");
    if (F in m)
      return m[F];
    var C = 0;
    if (P.isEven() || !s.simpleSieve || !s.fermatTest(P) || !a.test(P))
      return C += 1, R === "02" || R === "05" ? C += 8 : C += 4, m[F] = C, C;
    a.test(P.shrn(1)) || (C += 2);
    var L;
    switch (R) {
      case "02":
        P.mod(r).cmp(f) && (C += 8);
        break;
      case "05":
        L = P.mod(i), L.cmp(n) && L.cmp(o) && (C += 8);
        break;
      default:
        C += 4;
    }
    return m[F] = C, C;
  }
  function I(P, M, R) {
    this.setGenerator(M), this.__prime = new e(P), this._prime = e.mont(this.__prime), this._primeLen = P.length, this._pub = void 0, this._priv = void 0, this._primeCode = void 0, R ? (this.setPublicKey = l, this.setPrivateKey = v) : this._primeCode = 8;
  }
  Object.defineProperty(I.prototype, "verifyError", {
    enumerable: !0,
    get: function() {
      return typeof this._primeCode != "number" && (this._primeCode = x(this.__prime, this.__gen)), this._primeCode;
    }
  }), I.prototype.generateKeys = function() {
    return this._priv || (this._priv = new e(b(this._primeLen))), this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed(), this.getPublicKey();
  }, I.prototype.computeSecret = function(P) {
    P = new e(P), P = P.toRed(this._prime);
    var M = P.redPow(this._priv).fromRed(), R = new Q.Buffer(M.toArray()), F = this.getPrime();
    if (R.length < F.length) {
      var C = new Q.Buffer(F.length - R.length);
      C.fill(0), R = Q.Buffer.concat([C, R]);
    }
    return R;
  }, I.prototype.getPublicKey = function(M) {
    return k(this._pub, M);
  }, I.prototype.getPrivateKey = function(M) {
    return k(this._priv, M);
  }, I.prototype.getPrime = function(P) {
    return k(this.__prime, P);
  }, I.prototype.getGenerator = function(P) {
    return k(this._gen, P);
  }, I.prototype.setGenerator = function(P, M) {
    return M = M || "utf8", Q.Buffer.isBuffer(P) || (P = new Q.Buffer(P, M)), this.__gen = P, this._gen = new e(P), this;
  };
  function k(P, M) {
    var R = new Q.Buffer(P.toArray());
    return M ? R.toString(M) : R;
  }
  return d8;
}
var q3;
function qI() {
  if (q3)
    return Ua;
  q3 = 1;
  var e = nm(), t = VI, a = zI();
  function r(n) {
    var o = new Q.Buffer(t[n].prime, "hex"), s = new Q.Buffer(t[n].gen, "hex");
    return new a(o, s);
  }
  var f = {
    binary: !0,
    hex: !0,
    base64: !0
  };
  function i(n, o, s, b) {
    return Q.Buffer.isBuffer(o) || f[o] === void 0 ? i(n, "binary", o, s) : (o = o || "binary", b = b || "binary", s = s || new Q.Buffer([2]), Q.Buffer.isBuffer(s) || (s = new Q.Buffer(s, b)), typeof n == "number" ? new a(e(n, s), s, !0) : (Q.Buffer.isBuffer(n) || (n = new Q.Buffer(n, o)), new a(n, s, !0)));
  }
  return Ua.DiffieHellmanGroup = Ua.createDiffieHellmanGroup = Ua.getDiffieHellman = r, Ua.createDiffieHellman = Ua.DiffieHellman = i, Ua;
}
var Lo = { exports: {} }, om = gt().EventEmitter, c8, K3;
function KI() {
  if (K3)
    return c8;
  K3 = 1;
  function e(m, x) {
    var I = Object.keys(m);
    if (Object.getOwnPropertySymbols) {
      var k = Object.getOwnPropertySymbols(m);
      x && (k = k.filter(function(P) {
        return Object.getOwnPropertyDescriptor(m, P).enumerable;
      })), I.push.apply(I, k);
    }
    return I;
  }
  function t(m) {
    for (var x = 1; x < arguments.length; x++) {
      var I = arguments[x] != null ? arguments[x] : {};
      x % 2 ? e(Object(I), !0).forEach(function(k) {
        a(m, k, I[k]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(m, Object.getOwnPropertyDescriptors(I)) : e(Object(I)).forEach(function(k) {
        Object.defineProperty(m, k, Object.getOwnPropertyDescriptor(I, k));
      });
    }
    return m;
  }
  function a(m, x, I) {
    return x in m ? Object.defineProperty(m, x, { value: I, enumerable: !0, configurable: !0, writable: !0 }) : m[x] = I, m;
  }
  function r(m, x) {
    if (!(m instanceof x))
      throw new TypeError("Cannot call a class as a function");
  }
  function f(m, x) {
    for (var I = 0; I < x.length; I++) {
      var k = x[I];
      k.enumerable = k.enumerable || !1, k.configurable = !0, "value" in k && (k.writable = !0), Object.defineProperty(m, k.key, k);
    }
  }
  function i(m, x, I) {
    return x && f(m.prototype, x), I && f(m, I), m;
  }
  var n = Q, o = n.Buffer, s = R0, b = s.inspect, l = b && b.custom || "inspect";
  function v(m, x, I) {
    o.prototype.copy.call(m, x, I);
  }
  return c8 = /* @__PURE__ */ function() {
    function m() {
      r(this, m), this.head = null, this.tail = null, this.length = 0;
    }
    return i(m, [{
      key: "push",
      value: function(I) {
        var k = {
          data: I,
          next: null
        };
        this.length > 0 ? this.tail.next = k : this.head = k, this.tail = k, ++this.length;
      }
    }, {
      key: "unshift",
      value: function(I) {
        var k = {
          data: I,
          next: this.head
        };
        this.length === 0 && (this.tail = k), this.head = k, ++this.length;
      }
    }, {
      key: "shift",
      value: function() {
        if (this.length !== 0) {
          var I = this.head.data;
          return this.length === 1 ? this.head = this.tail = null : this.head = this.head.next, --this.length, I;
        }
      }
    }, {
      key: "clear",
      value: function() {
        this.head = this.tail = null, this.length = 0;
      }
    }, {
      key: "join",
      value: function(I) {
        if (this.length === 0)
          return "";
        for (var k = this.head, P = "" + k.data; k = k.next; )
          P += I + k.data;
        return P;
      }
    }, {
      key: "concat",
      value: function(I) {
        if (this.length === 0)
          return o.alloc(0);
        for (var k = o.allocUnsafe(I >>> 0), P = this.head, M = 0; P; )
          v(P.data, k, M), M += P.data.length, P = P.next;
        return k;
      }
      // Consumes a specified amount of bytes or characters from the buffered data.
    }, {
      key: "consume",
      value: function(I, k) {
        var P;
        return I < this.head.data.length ? (P = this.head.data.slice(0, I), this.head.data = this.head.data.slice(I)) : I === this.head.data.length ? P = this.shift() : P = k ? this._getString(I) : this._getBuffer(I), P;
      }
    }, {
      key: "first",
      value: function() {
        return this.head.data;
      }
      // Consumes a specified amount of characters from the buffered data.
    }, {
      key: "_getString",
      value: function(I) {
        var k = this.head, P = 1, M = k.data;
        for (I -= M.length; k = k.next; ) {
          var R = k.data, F = I > R.length ? R.length : I;
          if (F === R.length ? M += R : M += R.slice(0, I), I -= F, I === 0) {
            F === R.length ? (++P, k.next ? this.head = k.next : this.head = this.tail = null) : (this.head = k, k.data = R.slice(F));
            break;
          }
          ++P;
        }
        return this.length -= P, M;
      }
      // Consumes a specified amount of bytes from the buffered data.
    }, {
      key: "_getBuffer",
      value: function(I) {
        var k = o.allocUnsafe(I), P = this.head, M = 1;
        for (P.data.copy(k), I -= P.data.length; P = P.next; ) {
          var R = P.data, F = I > R.length ? R.length : I;
          if (R.copy(k, k.length - I, 0, F), I -= F, I === 0) {
            F === R.length ? (++M, P.next ? this.head = P.next : this.head = this.tail = null) : (this.head = P, P.data = R.slice(F));
            break;
          }
          ++M;
        }
        return this.length -= M, k;
      }
      // Make sure the linked list only shows the minimal necessary information.
    }, {
      key: l,
      value: function(I, k) {
        return b(this, t({}, k, {
          // Only inspect one level.
          depth: 0,
          // It should not recurse.
          customInspect: !1
        }));
      }
    }]), m;
  }(), c8;
}
function GI(e, t) {
  var a = this, r = this._readableState && this._readableState.destroyed, f = this._writableState && this._writableState.destroyed;
  return r || f ? (t ? t(e) : e && (this._writableState ? this._writableState.errorEmitted || (this._writableState.errorEmitted = !0, g7.nextTick(Fo, this, e)) : g7.nextTick(Fo, this, e)), this) : (this._readableState && (this._readableState.destroyed = !0), this._writableState && (this._writableState.destroyed = !0), this._destroy(e || null, function(i) {
    !t && i ? a._writableState ? a._writableState.errorEmitted ? g7.nextTick(af, a) : (a._writableState.errorEmitted = !0, g7.nextTick(G3, a, i)) : g7.nextTick(G3, a, i) : t ? (g7.nextTick(af, a), t(i)) : g7.nextTick(af, a);
  }), this);
}
function G3(e, t) {
  Fo(e, t), af(e);
}
function af(e) {
  e._writableState && !e._writableState.emitClose || e._readableState && !e._readableState.emitClose || e.emit("close");
}
function WI() {
  this._readableState && (this._readableState.destroyed = !1, this._readableState.reading = !1, this._readableState.ended = !1, this._readableState.endEmitted = !1), this._writableState && (this._writableState.destroyed = !1, this._writableState.ended = !1, this._writableState.ending = !1, this._writableState.finalCalled = !1, this._writableState.prefinished = !1, this._writableState.finished = !1, this._writableState.errorEmitted = !1);
}
function Fo(e, t) {
  e.emit("error", t);
}
function ZI(e, t) {
  var a = e._readableState, r = e._writableState;
  a && a.autoDestroy || r && r.autoDestroy ? e.destroy(t) : e.emit("error", t);
}
var sm = {
  destroy: GI,
  undestroy: WI,
  errorOrDestroy: ZI
}, wr = {};
function YI(e, t) {
  e.prototype = Object.create(t.prototype), e.prototype.constructor = e, e.__proto__ = t;
}
var dm = {};
function g5(e, t, a) {
  a || (a = Error);
  function r(i, n, o) {
    return typeof t == "string" ? t : t(i, n, o);
  }
  var f = /* @__PURE__ */ function(i) {
    YI(n, i);
    function n(o, s, b) {
      return i.call(this, r(o, s, b)) || this;
    }
    return n;
  }(a);
  f.prototype.name = a.name, f.prototype.code = e, dm[e] = f;
}
function W3(e, t) {
  if (Array.isArray(e)) {
    var a = e.length;
    return e = e.map(function(r) {
      return String(r);
    }), a > 2 ? "one of ".concat(t, " ").concat(e.slice(0, a - 1).join(", "), ", or ") + e[a - 1] : a === 2 ? "one of ".concat(t, " ").concat(e[0], " or ").concat(e[1]) : "of ".concat(t, " ").concat(e[0]);
  } else
    return "of ".concat(t, " ").concat(String(e));
}
function XI(e, t, a) {
  return e.substr(!a || a < 0 ? 0 : +a, t.length) === t;
}
function JI(e, t, a) {
  return (a === void 0 || a > e.length) && (a = e.length), e.substring(a - t.length, a) === t;
}
function QI(e, t, a) {
  return typeof a != "number" && (a = 0), a + t.length > e.length ? !1 : e.indexOf(t, a) !== -1;
}
g5("ERR_INVALID_OPT_VALUE", function(e, t) {
  return 'The value "' + t + '" is invalid for option "' + e + '"';
}, TypeError);
g5("ERR_INVALID_ARG_TYPE", function(e, t, a) {
  var r;
  typeof t == "string" && XI(t, "not ") ? (r = "must not be", t = t.replace(/^not /, "")) : r = "must be";
  var f;
  if (JI(e, " argument"))
    f = "The ".concat(e, " ").concat(r, " ").concat(W3(t, "type"));
  else {
    var i = QI(e, ".") ? "property" : "argument";
    f = 'The "'.concat(e, '" ').concat(i, " ").concat(r, " ").concat(W3(t, "type"));
  }
  return f += ". Received type ".concat(typeof a), f;
}, TypeError);
g5("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF");
g5("ERR_METHOD_NOT_IMPLEMENTED", function(e) {
  return "The " + e + " method is not implemented";
});
g5("ERR_STREAM_PREMATURE_CLOSE", "Premature close");
g5("ERR_STREAM_DESTROYED", function(e) {
  return "Cannot call " + e + " after a stream was destroyed";
});
g5("ERR_MULTIPLE_CALLBACK", "Callback called multiple times");
g5("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable");
g5("ERR_STREAM_WRITE_AFTER_END", "write after end");
g5("ERR_STREAM_NULL_VALUES", "May not write null values to stream", TypeError);
g5("ERR_UNKNOWN_ENCODING", function(e) {
  return "Unknown encoding: " + e;
}, TypeError);
g5("ERR_STREAM_UNSHIFT_AFTER_END_EVENT", "stream.unshift() after end event");
wr.codes = dm;
var ek = wr.codes.ERR_INVALID_OPT_VALUE;
function tk(e, t, a) {
  return e.highWaterMark != null ? e.highWaterMark : t ? e[a] : null;
}
function ak(e, t, a, r) {
  var f = tk(t, r, a);
  if (f != null) {
    if (!(isFinite(f) && Math.floor(f) === f) || f < 0) {
      var i = r ? a : "highWaterMark";
      throw new ek(i, f);
    }
    return Math.floor(f);
  }
  return e.objectMode ? 16 : 16 * 1024;
}
var cm = {
  getHighWaterMark: ak
}, u8, Z3;
function um() {
  if (Z3)
    return u8;
  Z3 = 1, u8 = Z;
  function e(H) {
    var $ = this;
    this.next = null, this.entry = null, this.finish = function() {
      t7($, H);
    };
  }
  var t;
  Z.WritableState = U;
  var a = {
    deprecate: Yf
  }, r = om, f = Q.Buffer, i = I7.Uint8Array || function() {
  };
  function n(H) {
    return f.from(H);
  }
  function o(H) {
    return f.isBuffer(H) || H instanceof i;
  }
  var s = sm, b = cm, l = b.getHighWaterMark, v = wr.codes, m = v.ERR_INVALID_ARG_TYPE, x = v.ERR_METHOD_NOT_IMPLEMENTED, I = v.ERR_MULTIPLE_CALLBACK, k = v.ERR_STREAM_CANNOT_PIPE, P = v.ERR_STREAM_DESTROYED, M = v.ERR_STREAM_NULL_VALUES, R = v.ERR_STREAM_WRITE_AFTER_END, F = v.ERR_UNKNOWN_ENCODING, C = s.errorOrDestroy;
  X7()(Z, r);
  function L() {
  }
  function U(H, $, X) {
    t = t || f1(), H = H || {}, typeof X != "boolean" && (X = $ instanceof t), this.objectMode = !!H.objectMode, X && (this.objectMode = this.objectMode || !!H.writableObjectMode), this.highWaterMark = l(this, H, "writableHighWaterMark", X), this.finalCalled = !1, this.needDrain = !1, this.ending = !1, this.ended = !1, this.finished = !1, this.destroyed = !1;
    var i7 = H.decodeStrings === !1;
    this.decodeStrings = !i7, this.defaultEncoding = H.defaultEncoding || "utf8", this.length = 0, this.writing = !1, this.corked = 0, this.sync = !0, this.bufferProcessing = !1, this.onwrite = function(J) {
      y($, J);
    }, this.writecb = null, this.writelen = 0, this.bufferedRequest = null, this.lastBufferedRequest = null, this.pendingcb = 0, this.prefinished = !1, this.errorEmitted = !1, this.emitClose = H.emitClose !== !1, this.autoDestroy = !!H.autoDestroy, this.bufferedRequestCount = 0, this.corkedRequestsFree = new e(this);
  }
  U.prototype.getBuffer = function() {
    for (var $ = this.bufferedRequest, X = []; $; )
      X.push($), $ = $.next;
    return X;
  }, function() {
    try {
      Object.defineProperty(U.prototype, "buffer", {
        get: a.deprecate(function() {
          return this.getBuffer();
        }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003")
      });
    } catch {
    }
  }();
  var q;
  typeof Symbol == "function" && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] == "function" ? (q = Function.prototype[Symbol.hasInstance], Object.defineProperty(Z, Symbol.hasInstance, {
    value: function($) {
      return q.call(this, $) ? !0 : this !== Z ? !1 : $ && $._writableState instanceof U;
    }
  })) : q = function($) {
    return $ instanceof this;
  };
  function Z(H) {
    t = t || f1();
    var $ = this instanceof t;
    if (!$ && !q.call(Z, this))
      return new Z(H);
    this._writableState = new U(H, this, $), this.writable = !0, H && (typeof H.write == "function" && (this._write = H.write), typeof H.writev == "function" && (this._writev = H.writev), typeof H.destroy == "function" && (this._destroy = H.destroy), typeof H.final == "function" && (this._final = H.final)), r.call(this);
  }
  Z.prototype.pipe = function() {
    C(this, new k());
  };
  function z(H, $) {
    var X = new R();
    C(H, X), g7.nextTick($, X);
  }
  function G(H, $, X, i7) {
    var J;
    return X === null ? J = new M() : typeof X != "string" && !$.objectMode && (J = new m("chunk", ["string", "Buffer"], X)), J ? (C(H, J), g7.nextTick(i7, J), !1) : !0;
  }
  Z.prototype.write = function(H, $, X) {
    var i7 = this._writableState, J = !1, _ = !i7.objectMode && o(H);
    return _ && !f.isBuffer(H) && (H = n(H)), typeof $ == "function" && (X = $, $ = null), _ ? $ = "buffer" : $ || ($ = i7.defaultEncoding), typeof X != "function" && (X = L), i7.ending ? z(this, X) : (_ || G(this, i7, H, X)) && (i7.pendingcb++, J = u(this, i7, _, H, $, X)), J;
  }, Z.prototype.cork = function() {
    this._writableState.corked++;
  }, Z.prototype.uncork = function() {
    var H = this._writableState;
    H.corked && (H.corked--, !H.writing && !H.corked && !H.bufferProcessing && H.bufferedRequest && g(this, H));
  }, Z.prototype.setDefaultEncoding = function($) {
    if (typeof $ == "string" && ($ = $.toLowerCase()), !(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf(($ + "").toLowerCase()) > -1))
      throw new F($);
    return this._writableState.defaultEncoding = $, this;
  }, Object.defineProperty(Z.prototype, "writableBuffer", {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: !1,
    get: function() {
      return this._writableState && this._writableState.getBuffer();
    }
  });
  function O(H, $, X) {
    return !H.objectMode && H.decodeStrings !== !1 && typeof $ == "string" && ($ = f.from($, X)), $;
  }
  Object.defineProperty(Z.prototype, "writableHighWaterMark", {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: !1,
    get: function() {
      return this._writableState.highWaterMark;
    }
  });
  function u(H, $, X, i7, J, _) {
    if (!X) {
      var E = O($, i7, J);
      i7 !== E && (X = !0, J = "buffer", i7 = E);
    }
    var j = $.objectMode ? 1 : i7.length;
    $.length += j;
    var V = $.length < $.highWaterMark;
    if (V || ($.needDrain = !0), $.writing || $.corked) {
      var n7 = $.lastBufferedRequest;
      $.lastBufferedRequest = {
        chunk: i7,
        encoding: J,
        isBuf: X,
        callback: _,
        next: null
      }, n7 ? n7.next = $.lastBufferedRequest : $.bufferedRequest = $.lastBufferedRequest, $.bufferedRequestCount += 1;
    } else
      p(H, $, !1, j, i7, J, _);
    return V;
  }
  function p(H, $, X, i7, J, _, E) {
    $.writelen = i7, $.writecb = E, $.writing = !0, $.sync = !0, $.destroyed ? $.onwrite(new P("write")) : X ? H._writev(J, $.onwrite) : H._write(J, _, $.onwrite), $.sync = !1;
  }
  function d(H, $, X, i7, J) {
    --$.pendingcb, X ? (g7.nextTick(J, i7), g7.nextTick(N, H, $), H._writableState.errorEmitted = !0, C(H, i7)) : (J(i7), H._writableState.errorEmitted = !0, C(H, i7), N(H, $));
  }
  function c(H) {
    H.writing = !1, H.writecb = null, H.length -= H.writelen, H.writelen = 0;
  }
  function y(H, $) {
    var X = H._writableState, i7 = X.sync, J = X.writecb;
    if (typeof J != "function")
      throw new I();
    if (c(X), $)
      d(H, X, i7, $, J);
    else {
      var _ = w(X) || H.destroyed;
      !_ && !X.corked && !X.bufferProcessing && X.bufferedRequest && g(H, X), i7 ? g7.nextTick(S, H, X, _, J) : S(H, X, _, J);
    }
  }
  function S(H, $, X, i7) {
    X || T(H, $), $.pendingcb--, i7(), N(H, $);
  }
  function T(H, $) {
    $.length === 0 && $.needDrain && ($.needDrain = !1, H.emit("drain"));
  }
  function g(H, $) {
    $.bufferProcessing = !0;
    var X = $.bufferedRequest;
    if (H._writev && X && X.next) {
      var i7 = $.bufferedRequestCount, J = new Array(i7), _ = $.corkedRequestsFree;
      _.entry = X;
      for (var E = 0, j = !0; X; )
        J[E] = X, X.isBuf || (j = !1), X = X.next, E += 1;
      J.allBuffers = j, p(H, $, !0, $.length, J, "", _.finish), $.pendingcb++, $.lastBufferedRequest = null, _.next ? ($.corkedRequestsFree = _.next, _.next = null) : $.corkedRequestsFree = new e($), $.bufferedRequestCount = 0;
    } else {
      for (; X; ) {
        var V = X.chunk, n7 = X.encoding, K = X.callback, B = $.objectMode ? 1 : V.length;
        if (p(H, $, !1, B, V, n7, K), X = X.next, $.bufferedRequestCount--, $.writing)
          break;
      }
      X === null && ($.lastBufferedRequest = null);
    }
    $.bufferedRequest = X, $.bufferProcessing = !1;
  }
  Z.prototype._write = function(H, $, X) {
    X(new x("_write()"));
  }, Z.prototype._writev = null, Z.prototype.end = function(H, $, X) {
    var i7 = this._writableState;
    return typeof H == "function" ? (X = H, H = null, $ = null) : typeof $ == "function" && (X = $, $ = null), H != null && this.write(H, $), i7.corked && (i7.corked = 1, this.uncork()), i7.ending || Y(this, i7, X), this;
  }, Object.defineProperty(Z.prototype, "writableLength", {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: !1,
    get: function() {
      return this._writableState.length;
    }
  });
  function w(H) {
    return H.ending && H.length === 0 && H.bufferedRequest === null && !H.finished && !H.writing;
  }
  function A(H, $) {
    H._final(function(X) {
      $.pendingcb--, X && C(H, X), $.prefinished = !0, H.emit("prefinish"), N(H, $);
    });
  }
  function h(H, $) {
    !$.prefinished && !$.finalCalled && (typeof H._final == "function" && !$.destroyed ? ($.pendingcb++, $.finalCalled = !0, g7.nextTick(A, H, $)) : ($.prefinished = !0, H.emit("prefinish")));
  }
  function N(H, $) {
    var X = w($);
    if (X && (h(H, $), $.pendingcb === 0 && ($.finished = !0, H.emit("finish"), $.autoDestroy))) {
      var i7 = H._readableState;
      (!i7 || i7.autoDestroy && i7.endEmitted) && H.destroy();
    }
    return X;
  }
  function Y(H, $, X) {
    $.ending = !0, N(H, $), X && ($.finished ? g7.nextTick(X) : H.once("finish", X)), $.ended = !0, H.writable = !1;
  }
  function t7(H, $, X) {
    var i7 = H.entry;
    for (H.entry = null; i7; ) {
      var J = i7.callback;
      $.pendingcb--, J(X), i7 = i7.next;
    }
    $.corkedRequestsFree.next = H;
  }
  return Object.defineProperty(Z.prototype, "destroyed", {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: !1,
    get: function() {
      return this._writableState === void 0 ? !1 : this._writableState.destroyed;
    },
    set: function($) {
      this._writableState && (this._writableState.destroyed = $);
    }
  }), Z.prototype.destroy = s.destroy, Z.prototype._undestroy = s.undestroy, Z.prototype._destroy = function(H, $) {
    $(H);
  }, u8;
}
var l8, Y3;
function f1() {
  if (Y3)
    return l8;
  Y3 = 1;
  var e = Object.keys || function(b) {
    var l = [];
    for (var v in b)
      l.push(v);
    return l;
  };
  l8 = n;
  var t = pm(), a = um();
  X7()(n, t);
  for (var r = e(a.prototype), f = 0; f < r.length; f++) {
    var i = r[f];
    n.prototype[i] || (n.prototype[i] = a.prototype[i]);
  }
  function n(b) {
    if (!(this instanceof n))
      return new n(b);
    t.call(this, b), a.call(this, b), this.allowHalfOpen = !0, b && (b.readable === !1 && (this.readable = !1), b.writable === !1 && (this.writable = !1), b.allowHalfOpen === !1 && (this.allowHalfOpen = !1, this.once("end", o)));
  }
  Object.defineProperty(n.prototype, "writableHighWaterMark", {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: !1,
    get: function() {
      return this._writableState.highWaterMark;
    }
  }), Object.defineProperty(n.prototype, "writableBuffer", {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: !1,
    get: function() {
      return this._writableState && this._writableState.getBuffer();
    }
  }), Object.defineProperty(n.prototype, "writableLength", {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: !1,
    get: function() {
      return this._writableState.length;
    }
  });
  function o() {
    this._writableState.ended || g7.nextTick(s, this);
  }
  function s(b) {
    b.end();
  }
  return Object.defineProperty(n.prototype, "destroyed", {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: !1,
    get: function() {
      return this._readableState === void 0 || this._writableState === void 0 ? !1 : this._readableState.destroyed && this._writableState.destroyed;
    },
    set: function(l) {
      this._readableState === void 0 || this._writableState === void 0 || (this._readableState.destroyed = l, this._writableState.destroyed = l);
    }
  }), l8;
}
var X3 = wr.codes.ERR_STREAM_PREMATURE_CLOSE;
function rk(e) {
  var t = !1;
  return function() {
    if (!t) {
      t = !0;
      for (var a = arguments.length, r = new Array(a), f = 0; f < a; f++)
        r[f] = arguments[f];
      e.apply(this, r);
    }
  };
}
function fk() {
}
function ik(e) {
  return e.setHeader && typeof e.abort == "function";
}
function lm(e, t, a) {
  if (typeof t == "function")
    return lm(e, null, t);
  t || (t = {}), a = rk(a || fk);
  var r = t.readable || t.readable !== !1 && e.readable, f = t.writable || t.writable !== !1 && e.writable, i = function() {
    e.writable || o();
  }, n = e._writableState && e._writableState.finished, o = function() {
    f = !1, n = !0, r || a.call(e);
  }, s = e._readableState && e._readableState.endEmitted, b = function() {
    r = !1, s = !0, f || a.call(e);
  }, l = function(I) {
    a.call(e, I);
  }, v = function() {
    var I;
    if (r && !s)
      return (!e._readableState || !e._readableState.ended) && (I = new X3()), a.call(e, I);
    if (f && !n)
      return (!e._writableState || !e._writableState.ended) && (I = new X3()), a.call(e, I);
  }, m = function() {
    e.req.on("finish", o);
  };
  return ik(e) ? (e.on("complete", o), e.on("abort", v), e.req ? m() : e.on("request", m)) : f && !e._writableState && (e.on("end", i), e.on("close", i)), e.on("end", b), e.on("finish", o), t.error !== !1 && e.on("error", l), e.on("close", v), function() {
    e.removeListener("complete", o), e.removeListener("abort", v), e.removeListener("request", m), e.req && e.req.removeListener("finish", o), e.removeListener("end", i), e.removeListener("close", i), e.removeListener("finish", o), e.removeListener("end", b), e.removeListener("error", l), e.removeListener("close", v);
  };
}
var od = lm, p8, J3;
function nk() {
  if (J3)
    return p8;
  J3 = 1;
  var e;
  function t(M, R, F) {
    return R in M ? Object.defineProperty(M, R, { value: F, enumerable: !0, configurable: !0, writable: !0 }) : M[R] = F, M;
  }
  var a = od, r = Symbol("lastResolve"), f = Symbol("lastReject"), i = Symbol("error"), n = Symbol("ended"), o = Symbol("lastPromise"), s = Symbol("handlePromise"), b = Symbol("stream");
  function l(M, R) {
    return {
      value: M,
      done: R
    };
  }
  function v(M) {
    var R = M[r];
    if (R !== null) {
      var F = M[b].read();
      F !== null && (M[o] = null, M[r] = null, M[f] = null, R(l(F, !1)));
    }
  }
  function m(M) {
    g7.nextTick(v, M);
  }
  function x(M, R) {
    return function(F, C) {
      M.then(function() {
        if (R[n]) {
          F(l(void 0, !0));
          return;
        }
        R[s](F, C);
      }, C);
    };
  }
  var I = Object.getPrototypeOf(function() {
  }), k = Object.setPrototypeOf((e = {
    get stream() {
      return this[b];
    },
    next: function() {
      var R = this, F = this[i];
      if (F !== null)
        return Promise.reject(F);
      if (this[n])
        return Promise.resolve(l(void 0, !0));
      if (this[b].destroyed)
        return new Promise(function(q, Z) {
          g7.nextTick(function() {
            R[i] ? Z(R[i]) : q(l(void 0, !0));
          });
        });
      var C = this[o], L;
      if (C)
        L = new Promise(x(C, this));
      else {
        var U = this[b].read();
        if (U !== null)
          return Promise.resolve(l(U, !1));
        L = new Promise(this[s]);
      }
      return this[o] = L, L;
    }
  }, t(e, Symbol.asyncIterator, function() {
    return this;
  }), t(e, "return", function() {
    var R = this;
    return new Promise(function(F, C) {
      R[b].destroy(null, function(L) {
        if (L) {
          C(L);
          return;
        }
        F(l(void 0, !0));
      });
    });
  }), e), I), P = function(R) {
    var F, C = Object.create(k, (F = {}, t(F, b, {
      value: R,
      writable: !0
    }), t(F, r, {
      value: null,
      writable: !0
    }), t(F, f, {
      value: null,
      writable: !0
    }), t(F, i, {
      value: null,
      writable: !0
    }), t(F, n, {
      value: R._readableState.endEmitted,
      writable: !0
    }), t(F, s, {
      value: function(U, q) {
        var Z = C[b].read();
        Z ? (C[o] = null, C[r] = null, C[f] = null, U(l(Z, !1))) : (C[r] = U, C[f] = q);
      },
      writable: !0
    }), F));
    return C[o] = null, a(R, function(L) {
      if (L && L.code !== "ERR_STREAM_PREMATURE_CLOSE") {
        var U = C[f];
        U !== null && (C[o] = null, C[r] = null, C[f] = null, U(L)), C[i] = L;
        return;
      }
      var q = C[r];
      q !== null && (C[o] = null, C[r] = null, C[f] = null, q(l(void 0, !0))), C[n] = !0;
    }), R.on("readable", m.bind(null, C)), C;
  };
  return p8 = P, p8;
}
var h8, Q3;
function ok() {
  return Q3 || (Q3 = 1, h8 = function() {
    throw new Error("Readable.from is not available in the browser");
  }), h8;
}
var b8, eu;
function pm() {
  if (eu)
    return b8;
  eu = 1, b8 = z;
  var e;
  z.ReadableState = Z, gt().EventEmitter;
  var t = function(E, j) {
    return E.listeners(j).length;
  }, a = om, r = Q.Buffer, f = I7.Uint8Array || function() {
  };
  function i(_) {
    return r.from(_);
  }
  function n(_) {
    return r.isBuffer(_) || _ instanceof f;
  }
  var o = R0, s;
  o && o.debuglog ? s = o.debuglog("stream") : s = function() {
  };
  var b = KI(), l = sm, v = cm, m = v.getHighWaterMark, x = wr.codes, I = x.ERR_INVALID_ARG_TYPE, k = x.ERR_STREAM_PUSH_AFTER_EOF, P = x.ERR_METHOD_NOT_IMPLEMENTED, M = x.ERR_STREAM_UNSHIFT_AFTER_END_EVENT, R, F, C;
  X7()(z, a);
  var L = l.errorOrDestroy, U = ["error", "close", "destroy", "pause", "resume"];
  function q(_, E, j) {
    if (typeof _.prependListener == "function")
      return _.prependListener(E, j);
    !_._events || !_._events[E] ? _.on(E, j) : Array.isArray(_._events[E]) ? _._events[E].unshift(j) : _._events[E] = [j, _._events[E]];
  }
  function Z(_, E, j) {
    e = e || f1(), _ = _ || {}, typeof j != "boolean" && (j = E instanceof e), this.objectMode = !!_.objectMode, j && (this.objectMode = this.objectMode || !!_.readableObjectMode), this.highWaterMark = m(this, _, "readableHighWaterMark", j), this.buffer = new b(), this.length = 0, this.pipes = null, this.pipesCount = 0, this.flowing = null, this.ended = !1, this.endEmitted = !1, this.reading = !1, this.sync = !0, this.needReadable = !1, this.emittedReadable = !1, this.readableListening = !1, this.resumeScheduled = !1, this.paused = !0, this.emitClose = _.emitClose !== !1, this.autoDestroy = !!_.autoDestroy, this.destroyed = !1, this.defaultEncoding = _.defaultEncoding || "utf8", this.awaitDrain = 0, this.readingMore = !1, this.decoder = null, this.encoding = null, _.encoding && (R || (R = pt.StringDecoder), this.decoder = new R(_.encoding), this.encoding = _.encoding);
  }
  function z(_) {
    if (e = e || f1(), !(this instanceof z))
      return new z(_);
    var E = this instanceof e;
    this._readableState = new Z(_, this, E), this.readable = !0, _ && (typeof _.read == "function" && (this._read = _.read), typeof _.destroy == "function" && (this._destroy = _.destroy)), a.call(this);
  }
  Object.defineProperty(z.prototype, "destroyed", {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: !1,
    get: function() {
      return this._readableState === void 0 ? !1 : this._readableState.destroyed;
    },
    set: function(E) {
      this._readableState && (this._readableState.destroyed = E);
    }
  }), z.prototype.destroy = l.destroy, z.prototype._undestroy = l.undestroy, z.prototype._destroy = function(_, E) {
    E(_);
  }, z.prototype.push = function(_, E) {
    var j = this._readableState, V;
    return j.objectMode ? V = !0 : typeof _ == "string" && (E = E || j.defaultEncoding, E !== j.encoding && (_ = r.from(_, E), E = ""), V = !0), G(this, _, E, !1, V);
  }, z.prototype.unshift = function(_) {
    return G(this, _, null, !0, !1);
  };
  function G(_, E, j, V, n7) {
    s("readableAddChunk", E);
    var K = _._readableState;
    if (E === null)
      K.reading = !1, y(_, K);
    else {
      var B;
      if (n7 || (B = u(K, E)), B)
        L(_, B);
      else if (K.objectMode || E && E.length > 0)
        if (typeof E != "string" && !K.objectMode && Object.getPrototypeOf(E) !== r.prototype && (E = i(E)), V)
          K.endEmitted ? L(_, new M()) : O(_, K, E, !0);
        else if (K.ended)
          L(_, new k());
        else {
          if (K.destroyed)
            return !1;
          K.reading = !1, K.decoder && !j ? (E = K.decoder.write(E), K.objectMode || E.length !== 0 ? O(_, K, E, !1) : g(_, K)) : O(_, K, E, !1);
        }
      else
        V || (K.reading = !1, g(_, K));
    }
    return !K.ended && (K.length < K.highWaterMark || K.length === 0);
  }
  function O(_, E, j, V) {
    E.flowing && E.length === 0 && !E.sync ? (E.awaitDrain = 0, _.emit("data", j)) : (E.length += E.objectMode ? 1 : j.length, V ? E.buffer.unshift(j) : E.buffer.push(j), E.needReadable && S(_)), g(_, E);
  }
  function u(_, E) {
    var j;
    return !n(E) && typeof E != "string" && E !== void 0 && !_.objectMode && (j = new I("chunk", ["string", "Buffer", "Uint8Array"], E)), j;
  }
  z.prototype.isPaused = function() {
    return this._readableState.flowing === !1;
  }, z.prototype.setEncoding = function(_) {
    R || (R = pt.StringDecoder);
    var E = new R(_);
    this._readableState.decoder = E, this._readableState.encoding = this._readableState.decoder.encoding;
    for (var j = this._readableState.buffer.head, V = ""; j !== null; )
      V += E.write(j.data), j = j.next;
    return this._readableState.buffer.clear(), V !== "" && this._readableState.buffer.push(V), this._readableState.length = V.length, this;
  };
  var p = 1073741824;
  function d(_) {
    return _ >= p ? _ = p : (_--, _ |= _ >>> 1, _ |= _ >>> 2, _ |= _ >>> 4, _ |= _ >>> 8, _ |= _ >>> 16, _++), _;
  }
  function c(_, E) {
    return _ <= 0 || E.length === 0 && E.ended ? 0 : E.objectMode ? 1 : _ !== _ ? E.flowing && E.length ? E.buffer.head.data.length : E.length : (_ > E.highWaterMark && (E.highWaterMark = d(_)), _ <= E.length ? _ : E.ended ? E.length : (E.needReadable = !0, 0));
  }
  z.prototype.read = function(_) {
    s("read", _), _ = parseInt(_, 10);
    var E = this._readableState, j = _;
    if (_ !== 0 && (E.emittedReadable = !1), _ === 0 && E.needReadable && ((E.highWaterMark !== 0 ? E.length >= E.highWaterMark : E.length > 0) || E.ended))
      return s("read: emitReadable", E.length, E.ended), E.length === 0 && E.ended ? X(this) : S(this), null;
    if (_ = c(_, E), _ === 0 && E.ended)
      return E.length === 0 && X(this), null;
    var V = E.needReadable;
    s("need readable", V), (E.length === 0 || E.length - _ < E.highWaterMark) && (V = !0, s("length less than watermark", V)), E.ended || E.reading ? (V = !1, s("reading or ended", V)) : V && (s("do read"), E.reading = !0, E.sync = !0, E.length === 0 && (E.needReadable = !0), this._read(E.highWaterMark), E.sync = !1, E.reading || (_ = c(j, E)));
    var n7;
    return _ > 0 ? n7 = $(_, E) : n7 = null, n7 === null ? (E.needReadable = E.length <= E.highWaterMark, _ = 0) : (E.length -= _, E.awaitDrain = 0), E.length === 0 && (E.ended || (E.needReadable = !0), j !== _ && E.ended && X(this)), n7 !== null && this.emit("data", n7), n7;
  };
  function y(_, E) {
    if (s("onEofChunk"), !E.ended) {
      if (E.decoder) {
        var j = E.decoder.end();
        j && j.length && (E.buffer.push(j), E.length += E.objectMode ? 1 : j.length);
      }
      E.ended = !0, E.sync ? S(_) : (E.needReadable = !1, E.emittedReadable || (E.emittedReadable = !0, T(_)));
    }
  }
  function S(_) {
    var E = _._readableState;
    s("emitReadable", E.needReadable, E.emittedReadable), E.needReadable = !1, E.emittedReadable || (s("emitReadable", E.flowing), E.emittedReadable = !0, g7.nextTick(T, _));
  }
  function T(_) {
    var E = _._readableState;
    s("emitReadable_", E.destroyed, E.length, E.ended), !E.destroyed && (E.length || E.ended) && (_.emit("readable"), E.emittedReadable = !1), E.needReadable = !E.flowing && !E.ended && E.length <= E.highWaterMark, H(_);
  }
  function g(_, E) {
    E.readingMore || (E.readingMore = !0, g7.nextTick(w, _, E));
  }
  function w(_, E) {
    for (; !E.reading && !E.ended && (E.length < E.highWaterMark || E.flowing && E.length === 0); ) {
      var j = E.length;
      if (s("maybeReadMore read 0"), _.read(0), j === E.length)
        break;
    }
    E.readingMore = !1;
  }
  z.prototype._read = function(_) {
    L(this, new P("_read()"));
  }, z.prototype.pipe = function(_, E) {
    var j = this, V = this._readableState;
    switch (V.pipesCount) {
      case 0:
        V.pipes = _;
        break;
      case 1:
        V.pipes = [V.pipes, _];
        break;
      default:
        V.pipes.push(_);
        break;
    }
    V.pipesCount += 1, s("pipe count=%d opts=%j", V.pipesCount, E);
    var n7 = (!E || E.end !== !1) && _ !== g7.stdout && _ !== g7.stderr, K = n7 ? D : p7;
    V.endEmitted ? g7.nextTick(K) : j.once("end", K), _.on("unpipe", B);
    function B(l7, y7) {
      s("onunpipe"), l7 === j && y7 && y7.hasUnpiped === !1 && (y7.hasUnpiped = !0, o7());
    }
    function D() {
      s("onend"), _.end();
    }
    var W = A(j);
    _.on("drain", W);
    var e7 = !1;
    function o7() {
      s("cleanup"), _.removeListener("close", u7), _.removeListener("finish", m7), _.removeListener("drain", W), _.removeListener("error", s7), _.removeListener("unpipe", B), j.removeListener("end", D), j.removeListener("end", p7), j.removeListener("data", a7), e7 = !0, V.awaitDrain && (!_._writableState || _._writableState.needDrain) && W();
    }
    j.on("data", a7);
    function a7(l7) {
      s("ondata");
      var y7 = _.write(l7);
      s("dest.write", y7), y7 === !1 && ((V.pipesCount === 1 && V.pipes === _ || V.pipesCount > 1 && J(V.pipes, _) !== -1) && !e7 && (s("false write response, pause", V.awaitDrain), V.awaitDrain++), j.pause());
    }
    function s7(l7) {
      s("onerror", l7), p7(), _.removeListener("error", s7), t(_, "error") === 0 && L(_, l7);
    }
    q(_, "error", s7);
    function u7() {
      _.removeListener("finish", m7), p7();
    }
    _.once("close", u7);
    function m7() {
      s("onfinish"), _.removeListener("close", u7), p7();
    }
    _.once("finish", m7);
    function p7() {
      s("unpipe"), j.unpipe(_);
    }
    return _.emit("pipe", j), V.flowing || (s("pipe resume"), j.resume()), _;
  };
  function A(_) {
    return function() {
      var j = _._readableState;
      s("pipeOnDrain", j.awaitDrain), j.awaitDrain && j.awaitDrain--, j.awaitDrain === 0 && t(_, "data") && (j.flowing = !0, H(_));
    };
  }
  z.prototype.unpipe = function(_) {
    var E = this._readableState, j = {
      hasUnpiped: !1
    };
    if (E.pipesCount === 0)
      return this;
    if (E.pipesCount === 1)
      return _ && _ !== E.pipes ? this : (_ || (_ = E.pipes), E.pipes = null, E.pipesCount = 0, E.flowing = !1, _ && _.emit("unpipe", this, j), this);
    if (!_) {
      var V = E.pipes, n7 = E.pipesCount;
      E.pipes = null, E.pipesCount = 0, E.flowing = !1;
      for (var K = 0; K < n7; K++)
        V[K].emit("unpipe", this, {
          hasUnpiped: !1
        });
      return this;
    }
    var B = J(E.pipes, _);
    return B === -1 ? this : (E.pipes.splice(B, 1), E.pipesCount -= 1, E.pipesCount === 1 && (E.pipes = E.pipes[0]), _.emit("unpipe", this, j), this);
  }, z.prototype.on = function(_, E) {
    var j = a.prototype.on.call(this, _, E), V = this._readableState;
    return _ === "data" ? (V.readableListening = this.listenerCount("readable") > 0, V.flowing !== !1 && this.resume()) : _ === "readable" && !V.endEmitted && !V.readableListening && (V.readableListening = V.needReadable = !0, V.flowing = !1, V.emittedReadable = !1, s("on readable", V.length, V.reading), V.length ? S(this) : V.reading || g7.nextTick(N, this)), j;
  }, z.prototype.addListener = z.prototype.on, z.prototype.removeListener = function(_, E) {
    var j = a.prototype.removeListener.call(this, _, E);
    return _ === "readable" && g7.nextTick(h, this), j;
  }, z.prototype.removeAllListeners = function(_) {
    var E = a.prototype.removeAllListeners.apply(this, arguments);
    return (_ === "readable" || _ === void 0) && g7.nextTick(h, this), E;
  };
  function h(_) {
    var E = _._readableState;
    E.readableListening = _.listenerCount("readable") > 0, E.resumeScheduled && !E.paused ? E.flowing = !0 : _.listenerCount("data") > 0 && _.resume();
  }
  function N(_) {
    s("readable nexttick read 0"), _.read(0);
  }
  z.prototype.resume = function() {
    var _ = this._readableState;
    return _.flowing || (s("resume"), _.flowing = !_.readableListening, Y(this, _)), _.paused = !1, this;
  };
  function Y(_, E) {
    E.resumeScheduled || (E.resumeScheduled = !0, g7.nextTick(t7, _, E));
  }
  function t7(_, E) {
    s("resume", E.reading), E.reading || _.read(0), E.resumeScheduled = !1, _.emit("resume"), H(_), E.flowing && !E.reading && _.read(0);
  }
  z.prototype.pause = function() {
    return s("call pause flowing=%j", this._readableState.flowing), this._readableState.flowing !== !1 && (s("pause"), this._readableState.flowing = !1, this.emit("pause")), this._readableState.paused = !0, this;
  };
  function H(_) {
    var E = _._readableState;
    for (s("flow", E.flowing); E.flowing && _.read() !== null; )
      ;
  }
  z.prototype.wrap = function(_) {
    var E = this, j = this._readableState, V = !1;
    _.on("end", function() {
      if (s("wrapped end"), j.decoder && !j.ended) {
        var B = j.decoder.end();
        B && B.length && E.push(B);
      }
      E.push(null);
    }), _.on("data", function(B) {
      if (s("wrapped data"), j.decoder && (B = j.decoder.write(B)), !(j.objectMode && B == null) && !(!j.objectMode && (!B || !B.length))) {
        var D = E.push(B);
        D || (V = !0, _.pause());
      }
    });
    for (var n7 in _)
      this[n7] === void 0 && typeof _[n7] == "function" && (this[n7] = function(D) {
        return function() {
          return _[D].apply(_, arguments);
        };
      }(n7));
    for (var K = 0; K < U.length; K++)
      _.on(U[K], this.emit.bind(this, U[K]));
    return this._read = function(B) {
      s("wrapped _read", B), V && (V = !1, _.resume());
    }, this;
  }, typeof Symbol == "function" && (z.prototype[Symbol.asyncIterator] = function() {
    return F === void 0 && (F = nk()), F(this);
  }), Object.defineProperty(z.prototype, "readableHighWaterMark", {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: !1,
    get: function() {
      return this._readableState.highWaterMark;
    }
  }), Object.defineProperty(z.prototype, "readableBuffer", {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: !1,
    get: function() {
      return this._readableState && this._readableState.buffer;
    }
  }), Object.defineProperty(z.prototype, "readableFlowing", {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: !1,
    get: function() {
      return this._readableState.flowing;
    },
    set: function(E) {
      this._readableState && (this._readableState.flowing = E);
    }
  }), z._fromList = $, Object.defineProperty(z.prototype, "readableLength", {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: !1,
    get: function() {
      return this._readableState.length;
    }
  });
  function $(_, E) {
    if (E.length === 0)
      return null;
    var j;
    return E.objectMode ? j = E.buffer.shift() : !_ || _ >= E.length ? (E.decoder ? j = E.buffer.join("") : E.buffer.length === 1 ? j = E.buffer.first() : j = E.buffer.concat(E.length), E.buffer.clear()) : j = E.buffer.consume(_, E.decoder), j;
  }
  function X(_) {
    var E = _._readableState;
    s("endReadable", E.endEmitted), E.endEmitted || (E.ended = !0, g7.nextTick(i7, E, _));
  }
  function i7(_, E) {
    if (s("endReadableNT", _.endEmitted, _.length), !_.endEmitted && _.length === 0 && (_.endEmitted = !0, E.readable = !1, E.emit("end"), _.autoDestroy)) {
      var j = E._writableState;
      (!j || j.autoDestroy && j.finished) && E.destroy();
    }
  }
  typeof Symbol == "function" && (z.from = function(_, E) {
    return C === void 0 && (C = ok()), C(z, _, E);
  });
  function J(_, E) {
    for (var j = 0, V = _.length; j < V; j++)
      if (_[j] === E)
        return j;
    return -1;
  }
  return b8;
}
var hm = Kt, pi = wr.codes, sk = pi.ERR_METHOD_NOT_IMPLEMENTED, dk = pi.ERR_MULTIPLE_CALLBACK, ck = pi.ERR_TRANSFORM_ALREADY_TRANSFORMING, uk = pi.ERR_TRANSFORM_WITH_LENGTH_0, hi = f1();
X7()(Kt, hi);
function lk(e, t) {
  var a = this._transformState;
  a.transforming = !1;
  var r = a.writecb;
  if (r === null)
    return this.emit("error", new dk());
  a.writechunk = null, a.writecb = null, t != null && this.push(t), r(e);
  var f = this._readableState;
  f.reading = !1, (f.needReadable || f.length < f.highWaterMark) && this._read(f.highWaterMark);
}
function Kt(e) {
  if (!(this instanceof Kt))
    return new Kt(e);
  hi.call(this, e), this._transformState = {
    afterTransform: lk.bind(this),
    needTransform: !1,
    transforming: !1,
    writecb: null,
    writechunk: null,
    writeencoding: null
  }, this._readableState.needReadable = !0, this._readableState.sync = !1, e && (typeof e.transform == "function" && (this._transform = e.transform), typeof e.flush == "function" && (this._flush = e.flush)), this.on("prefinish", pk);
}
function pk() {
  var e = this;
  typeof this._flush == "function" && !this._readableState.destroyed ? this._flush(function(t, a) {
    tu(e, t, a);
  }) : tu(this, null, null);
}
Kt.prototype.push = function(e, t) {
  return this._transformState.needTransform = !1, hi.prototype.push.call(this, e, t);
};
Kt.prototype._transform = function(e, t, a) {
  a(new sk("_transform()"));
};
Kt.prototype._write = function(e, t, a) {
  var r = this._transformState;
  if (r.writecb = a, r.writechunk = e, r.writeencoding = t, !r.transforming) {
    var f = this._readableState;
    (r.needTransform || f.needReadable || f.length < f.highWaterMark) && this._read(f.highWaterMark);
  }
};
Kt.prototype._read = function(e) {
  var t = this._transformState;
  t.writechunk !== null && !t.transforming ? (t.transforming = !0, this._transform(t.writechunk, t.writeencoding, t.afterTransform)) : t.needTransform = !0;
};
Kt.prototype._destroy = function(e, t) {
  hi.prototype._destroy.call(this, e, function(a) {
    t(a);
  });
};
function tu(e, t, a) {
  if (t)
    return e.emit("error", t);
  if (a != null && e.push(a), e._writableState.length)
    throw new uk();
  if (e._transformState.transforming)
    throw new ck();
  return e.push(null);
}
var hk = P9, bm = hm;
X7()(P9, bm);
function P9(e) {
  if (!(this instanceof P9))
    return new P9(e);
  bm.call(this, e);
}
P9.prototype._transform = function(e, t, a) {
  a(null, e);
};
var m8;
function bk(e) {
  var t = !1;
  return function() {
    t || (t = !0, e.apply(void 0, arguments));
  };
}
var mm = wr.codes, mk = mm.ERR_MISSING_ARGS, vk = mm.ERR_STREAM_DESTROYED;
function au(e) {
  if (e)
    throw e;
}
function yk(e) {
  return e.setHeader && typeof e.abort == "function";
}
function gk(e, t, a, r) {
  r = bk(r);
  var f = !1;
  e.on("close", function() {
    f = !0;
  }), m8 === void 0 && (m8 = od), m8(e, {
    readable: t,
    writable: a
  }, function(n) {
    if (n)
      return r(n);
    f = !0, r();
  });
  var i = !1;
  return function(n) {
    if (!f && !i) {
      if (i = !0, yk(e))
        return e.abort();
      if (typeof e.destroy == "function")
        return e.destroy();
      r(n || new vk("pipe"));
    }
  };
}
function ru(e) {
  e();
}
function xk(e, t) {
  return e.pipe(t);
}
function _k(e) {
  return !e.length || typeof e[e.length - 1] != "function" ? au : e.pop();
}
function wk() {
  for (var e = arguments.length, t = new Array(e), a = 0; a < e; a++)
    t[a] = arguments[a];
  var r = _k(t);
  if (Array.isArray(t[0]) && (t = t[0]), t.length < 2)
    throw new mk("streams");
  var f, i = t.map(function(n, o) {
    var s = o < t.length - 1, b = o > 0;
    return gk(n, s, b, function(l) {
      f || (f = l), l && i.forEach(ru), !s && (i.forEach(ru), r(f));
    });
  });
  return t.reduce(xk);
}
var Sk = wk;
(function(e, t) {
  t = e.exports = pm(), t.Stream = t, t.Readable = t, t.Writable = um(), t.Duplex = f1(), t.Transform = hm, t.PassThrough = hk, t.finished = od, t.pipeline = Sk;
})(Lo, Lo.exports);
var Ek = Lo.exports, G1 = { exports: {} }, sd = { exports: {} };
sd.exports;
(function(e) {
  (function(t, a) {
    function r(p, d) {
      if (!p)
        throw new Error(d || "Assertion failed");
    }
    function f(p, d) {
      p.super_ = d;
      var c = function() {
      };
      c.prototype = d.prototype, p.prototype = new c(), p.prototype.constructor = p;
    }
    function i(p, d, c) {
      if (i.isBN(p))
        return p;
      this.negative = 0, this.words = null, this.length = 0, this.red = null, p !== null && ((d === "le" || d === "be") && (c = d, d = 10), this._init(p || 0, d || 10, c || "be"));
    }
    typeof t == "object" ? t.exports = i : a.BN = i, i.BN = i, i.wordSize = 26;
    var n;
    try {
      typeof window < "u" && typeof window.Buffer < "u" ? n = window.Buffer : n = Q.Buffer;
    } catch {
    }
    i.isBN = function(d) {
      return d instanceof i ? !0 : d !== null && typeof d == "object" && d.constructor.wordSize === i.wordSize && Array.isArray(d.words);
    }, i.max = function(d, c) {
      return d.cmp(c) > 0 ? d : c;
    }, i.min = function(d, c) {
      return d.cmp(c) < 0 ? d : c;
    }, i.prototype._init = function(d, c, y) {
      if (typeof d == "number")
        return this._initNumber(d, c, y);
      if (typeof d == "object")
        return this._initArray(d, c, y);
      c === "hex" && (c = 16), r(c === (c | 0) && c >= 2 && c <= 36), d = d.toString().replace(/\s+/g, "");
      var S = 0;
      d[0] === "-" && (S++, this.negative = 1), S < d.length && (c === 16 ? this._parseHex(d, S, y) : (this._parseBase(d, c, S), y === "le" && this._initArray(this.toArray(), c, y)));
    }, i.prototype._initNumber = function(d, c, y) {
      d < 0 && (this.negative = 1, d = -d), d < 67108864 ? (this.words = [d & 67108863], this.length = 1) : d < 4503599627370496 ? (this.words = [
        d & 67108863,
        d / 67108864 & 67108863
      ], this.length = 2) : (r(d < 9007199254740992), this.words = [
        d & 67108863,
        d / 67108864 & 67108863,
        1
      ], this.length = 3), y === "le" && this._initArray(this.toArray(), c, y);
    }, i.prototype._initArray = function(d, c, y) {
      if (r(typeof d.length == "number"), d.length <= 0)
        return this.words = [0], this.length = 1, this;
      this.length = Math.ceil(d.length / 3), this.words = new Array(this.length);
      for (var S = 0; S < this.length; S++)
        this.words[S] = 0;
      var T, g, w = 0;
      if (y === "be")
        for (S = d.length - 1, T = 0; S >= 0; S -= 3)
          g = d[S] | d[S - 1] << 8 | d[S - 2] << 16, this.words[T] |= g << w & 67108863, this.words[T + 1] = g >>> 26 - w & 67108863, w += 24, w >= 26 && (w -= 26, T++);
      else if (y === "le")
        for (S = 0, T = 0; S < d.length; S += 3)
          g = d[S] | d[S + 1] << 8 | d[S + 2] << 16, this.words[T] |= g << w & 67108863, this.words[T + 1] = g >>> 26 - w & 67108863, w += 24, w >= 26 && (w -= 26, T++);
      return this._strip();
    };
    function o(p, d) {
      var c = p.charCodeAt(d);
      if (c >= 48 && c <= 57)
        return c - 48;
      if (c >= 65 && c <= 70)
        return c - 55;
      if (c >= 97 && c <= 102)
        return c - 87;
      r(!1, "Invalid character in " + p);
    }
    function s(p, d, c) {
      var y = o(p, c);
      return c - 1 >= d && (y |= o(p, c - 1) << 4), y;
    }
    i.prototype._parseHex = function(d, c, y) {
      this.length = Math.ceil((d.length - c) / 6), this.words = new Array(this.length);
      for (var S = 0; S < this.length; S++)
        this.words[S] = 0;
      var T = 0, g = 0, w;
      if (y === "be")
        for (S = d.length - 1; S >= c; S -= 2)
          w = s(d, c, S) << T, this.words[g] |= w & 67108863, T >= 18 ? (T -= 18, g += 1, this.words[g] |= w >>> 26) : T += 8;
      else {
        var A = d.length - c;
        for (S = A % 2 === 0 ? c + 1 : c; S < d.length; S += 2)
          w = s(d, c, S) << T, this.words[g] |= w & 67108863, T >= 18 ? (T -= 18, g += 1, this.words[g] |= w >>> 26) : T += 8;
      }
      this._strip();
    };
    function b(p, d, c, y) {
      for (var S = 0, T = 0, g = Math.min(p.length, c), w = d; w < g; w++) {
        var A = p.charCodeAt(w) - 48;
        S *= y, A >= 49 ? T = A - 49 + 10 : A >= 17 ? T = A - 17 + 10 : T = A, r(A >= 0 && T < y, "Invalid character"), S += T;
      }
      return S;
    }
    i.prototype._parseBase = function(d, c, y) {
      this.words = [0], this.length = 1;
      for (var S = 0, T = 1; T <= 67108863; T *= c)
        S++;
      S--, T = T / c | 0;
      for (var g = d.length - y, w = g % S, A = Math.min(g, g - w) + y, h = 0, N = y; N < A; N += S)
        h = b(d, N, N + S, c), this.imuln(T), this.words[0] + h < 67108864 ? this.words[0] += h : this._iaddn(h);
      if (w !== 0) {
        var Y = 1;
        for (h = b(d, N, d.length, c), N = 0; N < w; N++)
          Y *= c;
        this.imuln(Y), this.words[0] + h < 67108864 ? this.words[0] += h : this._iaddn(h);
      }
      this._strip();
    }, i.prototype.copy = function(d) {
      d.words = new Array(this.length);
      for (var c = 0; c < this.length; c++)
        d.words[c] = this.words[c];
      d.length = this.length, d.negative = this.negative, d.red = this.red;
    };
    function l(p, d) {
      p.words = d.words, p.length = d.length, p.negative = d.negative, p.red = d.red;
    }
    if (i.prototype._move = function(d) {
      l(d, this);
    }, i.prototype.clone = function() {
      var d = new i(null);
      return this.copy(d), d;
    }, i.prototype._expand = function(d) {
      for (; this.length < d; )
        this.words[this.length++] = 0;
      return this;
    }, i.prototype._strip = function() {
      for (; this.length > 1 && this.words[this.length - 1] === 0; )
        this.length--;
      return this._normSign();
    }, i.prototype._normSign = function() {
      return this.length === 1 && this.words[0] === 0 && (this.negative = 0), this;
    }, typeof Symbol < "u" && typeof Symbol.for == "function")
      try {
        i.prototype[Symbol.for("nodejs.util.inspect.custom")] = v;
      } catch {
        i.prototype.inspect = v;
      }
    else
      i.prototype.inspect = v;
    function v() {
      return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
    }
    var m = [
      "",
      "0",
      "00",
      "000",
      "0000",
      "00000",
      "000000",
      "0000000",
      "00000000",
      "000000000",
      "0000000000",
      "00000000000",
      "000000000000",
      "0000000000000",
      "00000000000000",
      "000000000000000",
      "0000000000000000",
      "00000000000000000",
      "000000000000000000",
      "0000000000000000000",
      "00000000000000000000",
      "000000000000000000000",
      "0000000000000000000000",
      "00000000000000000000000",
      "000000000000000000000000",
      "0000000000000000000000000"
    ], x = [
      0,
      0,
      25,
      16,
      12,
      11,
      10,
      9,
      8,
      8,
      7,
      7,
      7,
      7,
      6,
      6,
      6,
      6,
      6,
      6,
      6,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5
    ], I = [
      0,
      0,
      33554432,
      43046721,
      16777216,
      48828125,
      60466176,
      40353607,
      16777216,
      43046721,
      1e7,
      19487171,
      35831808,
      62748517,
      7529536,
      11390625,
      16777216,
      24137569,
      34012224,
      47045881,
      64e6,
      4084101,
      5153632,
      6436343,
      7962624,
      9765625,
      11881376,
      14348907,
      17210368,
      20511149,
      243e5,
      28629151,
      33554432,
      39135393,
      45435424,
      52521875,
      60466176
    ];
    i.prototype.toString = function(d, c) {
      d = d || 10, c = c | 0 || 1;
      var y;
      if (d === 16 || d === "hex") {
        y = "";
        for (var S = 0, T = 0, g = 0; g < this.length; g++) {
          var w = this.words[g], A = ((w << S | T) & 16777215).toString(16);
          T = w >>> 24 - S & 16777215, S += 2, S >= 26 && (S -= 26, g--), T !== 0 || g !== this.length - 1 ? y = m[6 - A.length] + A + y : y = A + y;
        }
        for (T !== 0 && (y = T.toString(16) + y); y.length % c !== 0; )
          y = "0" + y;
        return this.negative !== 0 && (y = "-" + y), y;
      }
      if (d === (d | 0) && d >= 2 && d <= 36) {
        var h = x[d], N = I[d];
        y = "";
        var Y = this.clone();
        for (Y.negative = 0; !Y.isZero(); ) {
          var t7 = Y.modrn(N).toString(d);
          Y = Y.idivn(N), Y.isZero() ? y = t7 + y : y = m[h - t7.length] + t7 + y;
        }
        for (this.isZero() && (y = "0" + y); y.length % c !== 0; )
          y = "0" + y;
        return this.negative !== 0 && (y = "-" + y), y;
      }
      r(!1, "Base should be between 2 and 36");
    }, i.prototype.toNumber = function() {
      var d = this.words[0];
      return this.length === 2 ? d += this.words[1] * 67108864 : this.length === 3 && this.words[2] === 1 ? d += 4503599627370496 + this.words[1] * 67108864 : this.length > 2 && r(!1, "Number can only safely store up to 53 bits"), this.negative !== 0 ? -d : d;
    }, i.prototype.toJSON = function() {
      return this.toString(16, 2);
    }, n && (i.prototype.toBuffer = function(d, c) {
      return this.toArrayLike(n, d, c);
    }), i.prototype.toArray = function(d, c) {
      return this.toArrayLike(Array, d, c);
    };
    var k = function(d, c) {
      return d.allocUnsafe ? d.allocUnsafe(c) : new d(c);
    };
    i.prototype.toArrayLike = function(d, c, y) {
      this._strip();
      var S = this.byteLength(), T = y || Math.max(1, S);
      r(S <= T, "byte array longer than desired length"), r(T > 0, "Requested array length <= 0");
      var g = k(d, T), w = c === "le" ? "LE" : "BE";
      return this["_toArrayLike" + w](g, S), g;
    }, i.prototype._toArrayLikeLE = function(d, c) {
      for (var y = 0, S = 0, T = 0, g = 0; T < this.length; T++) {
        var w = this.words[T] << g | S;
        d[y++] = w & 255, y < d.length && (d[y++] = w >> 8 & 255), y < d.length && (d[y++] = w >> 16 & 255), g === 6 ? (y < d.length && (d[y++] = w >> 24 & 255), S = 0, g = 0) : (S = w >>> 24, g += 2);
      }
      if (y < d.length)
        for (d[y++] = S; y < d.length; )
          d[y++] = 0;
    }, i.prototype._toArrayLikeBE = function(d, c) {
      for (var y = d.length - 1, S = 0, T = 0, g = 0; T < this.length; T++) {
        var w = this.words[T] << g | S;
        d[y--] = w & 255, y >= 0 && (d[y--] = w >> 8 & 255), y >= 0 && (d[y--] = w >> 16 & 255), g === 6 ? (y >= 0 && (d[y--] = w >> 24 & 255), S = 0, g = 0) : (S = w >>> 24, g += 2);
      }
      if (y >= 0)
        for (d[y--] = S; y >= 0; )
          d[y--] = 0;
    }, Math.clz32 ? i.prototype._countBits = function(d) {
      return 32 - Math.clz32(d);
    } : i.prototype._countBits = function(d) {
      var c = d, y = 0;
      return c >= 4096 && (y += 13, c >>>= 13), c >= 64 && (y += 7, c >>>= 7), c >= 8 && (y += 4, c >>>= 4), c >= 2 && (y += 2, c >>>= 2), y + c;
    }, i.prototype._zeroBits = function(d) {
      if (d === 0)
        return 26;
      var c = d, y = 0;
      return c & 8191 || (y += 13, c >>>= 13), c & 127 || (y += 7, c >>>= 7), c & 15 || (y += 4, c >>>= 4), c & 3 || (y += 2, c >>>= 2), c & 1 || y++, y;
    }, i.prototype.bitLength = function() {
      var d = this.words[this.length - 1], c = this._countBits(d);
      return (this.length - 1) * 26 + c;
    };
    function P(p) {
      for (var d = new Array(p.bitLength()), c = 0; c < d.length; c++) {
        var y = c / 26 | 0, S = c % 26;
        d[c] = p.words[y] >>> S & 1;
      }
      return d;
    }
    i.prototype.zeroBits = function() {
      if (this.isZero())
        return 0;
      for (var d = 0, c = 0; c < this.length; c++) {
        var y = this._zeroBits(this.words[c]);
        if (d += y, y !== 26)
          break;
      }
      return d;
    }, i.prototype.byteLength = function() {
      return Math.ceil(this.bitLength() / 8);
    }, i.prototype.toTwos = function(d) {
      return this.negative !== 0 ? this.abs().inotn(d).iaddn(1) : this.clone();
    }, i.prototype.fromTwos = function(d) {
      return this.testn(d - 1) ? this.notn(d).iaddn(1).ineg() : this.clone();
    }, i.prototype.isNeg = function() {
      return this.negative !== 0;
    }, i.prototype.neg = function() {
      return this.clone().ineg();
    }, i.prototype.ineg = function() {
      return this.isZero() || (this.negative ^= 1), this;
    }, i.prototype.iuor = function(d) {
      for (; this.length < d.length; )
        this.words[this.length++] = 0;
      for (var c = 0; c < d.length; c++)
        this.words[c] = this.words[c] | d.words[c];
      return this._strip();
    }, i.prototype.ior = function(d) {
      return r((this.negative | d.negative) === 0), this.iuor(d);
    }, i.prototype.or = function(d) {
      return this.length > d.length ? this.clone().ior(d) : d.clone().ior(this);
    }, i.prototype.uor = function(d) {
      return this.length > d.length ? this.clone().iuor(d) : d.clone().iuor(this);
    }, i.prototype.iuand = function(d) {
      var c;
      this.length > d.length ? c = d : c = this;
      for (var y = 0; y < c.length; y++)
        this.words[y] = this.words[y] & d.words[y];
      return this.length = c.length, this._strip();
    }, i.prototype.iand = function(d) {
      return r((this.negative | d.negative) === 0), this.iuand(d);
    }, i.prototype.and = function(d) {
      return this.length > d.length ? this.clone().iand(d) : d.clone().iand(this);
    }, i.prototype.uand = function(d) {
      return this.length > d.length ? this.clone().iuand(d) : d.clone().iuand(this);
    }, i.prototype.iuxor = function(d) {
      var c, y;
      this.length > d.length ? (c = this, y = d) : (c = d, y = this);
      for (var S = 0; S < y.length; S++)
        this.words[S] = c.words[S] ^ y.words[S];
      if (this !== c)
        for (; S < c.length; S++)
          this.words[S] = c.words[S];
      return this.length = c.length, this._strip();
    }, i.prototype.ixor = function(d) {
      return r((this.negative | d.negative) === 0), this.iuxor(d);
    }, i.prototype.xor = function(d) {
      return this.length > d.length ? this.clone().ixor(d) : d.clone().ixor(this);
    }, i.prototype.uxor = function(d) {
      return this.length > d.length ? this.clone().iuxor(d) : d.clone().iuxor(this);
    }, i.prototype.inotn = function(d) {
      r(typeof d == "number" && d >= 0);
      var c = Math.ceil(d / 26) | 0, y = d % 26;
      this._expand(c), y > 0 && c--;
      for (var S = 0; S < c; S++)
        this.words[S] = ~this.words[S] & 67108863;
      return y > 0 && (this.words[S] = ~this.words[S] & 67108863 >> 26 - y), this._strip();
    }, i.prototype.notn = function(d) {
      return this.clone().inotn(d);
    }, i.prototype.setn = function(d, c) {
      r(typeof d == "number" && d >= 0);
      var y = d / 26 | 0, S = d % 26;
      return this._expand(y + 1), c ? this.words[y] = this.words[y] | 1 << S : this.words[y] = this.words[y] & ~(1 << S), this._strip();
    }, i.prototype.iadd = function(d) {
      var c;
      if (this.negative !== 0 && d.negative === 0)
        return this.negative = 0, c = this.isub(d), this.negative ^= 1, this._normSign();
      if (this.negative === 0 && d.negative !== 0)
        return d.negative = 0, c = this.isub(d), d.negative = 1, c._normSign();
      var y, S;
      this.length > d.length ? (y = this, S = d) : (y = d, S = this);
      for (var T = 0, g = 0; g < S.length; g++)
        c = (y.words[g] | 0) + (S.words[g] | 0) + T, this.words[g] = c & 67108863, T = c >>> 26;
      for (; T !== 0 && g < y.length; g++)
        c = (y.words[g] | 0) + T, this.words[g] = c & 67108863, T = c >>> 26;
      if (this.length = y.length, T !== 0)
        this.words[this.length] = T, this.length++;
      else if (y !== this)
        for (; g < y.length; g++)
          this.words[g] = y.words[g];
      return this;
    }, i.prototype.add = function(d) {
      var c;
      return d.negative !== 0 && this.negative === 0 ? (d.negative = 0, c = this.sub(d), d.negative ^= 1, c) : d.negative === 0 && this.negative !== 0 ? (this.negative = 0, c = d.sub(this), this.negative = 1, c) : this.length > d.length ? this.clone().iadd(d) : d.clone().iadd(this);
    }, i.prototype.isub = function(d) {
      if (d.negative !== 0) {
        d.negative = 0;
        var c = this.iadd(d);
        return d.negative = 1, c._normSign();
      } else if (this.negative !== 0)
        return this.negative = 0, this.iadd(d), this.negative = 1, this._normSign();
      var y = this.cmp(d);
      if (y === 0)
        return this.negative = 0, this.length = 1, this.words[0] = 0, this;
      var S, T;
      y > 0 ? (S = this, T = d) : (S = d, T = this);
      for (var g = 0, w = 0; w < T.length; w++)
        c = (S.words[w] | 0) - (T.words[w] | 0) + g, g = c >> 26, this.words[w] = c & 67108863;
      for (; g !== 0 && w < S.length; w++)
        c = (S.words[w] | 0) + g, g = c >> 26, this.words[w] = c & 67108863;
      if (g === 0 && w < S.length && S !== this)
        for (; w < S.length; w++)
          this.words[w] = S.words[w];
      return this.length = Math.max(this.length, w), S !== this && (this.negative = 1), this._strip();
    }, i.prototype.sub = function(d) {
      return this.clone().isub(d);
    };
    function M(p, d, c) {
      c.negative = d.negative ^ p.negative;
      var y = p.length + d.length | 0;
      c.length = y, y = y - 1 | 0;
      var S = p.words[0] | 0, T = d.words[0] | 0, g = S * T, w = g & 67108863, A = g / 67108864 | 0;
      c.words[0] = w;
      for (var h = 1; h < y; h++) {
        for (var N = A >>> 26, Y = A & 67108863, t7 = Math.min(h, d.length - 1), H = Math.max(0, h - p.length + 1); H <= t7; H++) {
          var $ = h - H | 0;
          S = p.words[$] | 0, T = d.words[H] | 0, g = S * T + Y, N += g / 67108864 | 0, Y = g & 67108863;
        }
        c.words[h] = Y | 0, A = N | 0;
      }
      return A !== 0 ? c.words[h] = A | 0 : c.length--, c._strip();
    }
    var R = function(d, c, y) {
      var S = d.words, T = c.words, g = y.words, w = 0, A, h, N, Y = S[0] | 0, t7 = Y & 8191, H = Y >>> 13, $ = S[1] | 0, X = $ & 8191, i7 = $ >>> 13, J = S[2] | 0, _ = J & 8191, E = J >>> 13, j = S[3] | 0, V = j & 8191, n7 = j >>> 13, K = S[4] | 0, B = K & 8191, D = K >>> 13, W = S[5] | 0, e7 = W & 8191, o7 = W >>> 13, a7 = S[6] | 0, s7 = a7 & 8191, u7 = a7 >>> 13, m7 = S[7] | 0, p7 = m7 & 8191, l7 = m7 >>> 13, y7 = S[8] | 0, x7 = y7 & 8191, _7 = y7 >>> 13, F7 = S[9] | 0, T7 = F7 & 8191, S7 = F7 >>> 13, Y7 = T[0] | 0, k7 = Y7 & 8191, E7 = Y7 >>> 13, $7 = T[1] | 0, H7 = $7 & 8191, P7 = $7 >>> 13, pe = T[2] | 0, q7 = pe & 8191, N7 = pe >>> 13, xe = T[3] | 0, K7 = xe & 8191, R7 = xe >>> 13, be = T[4] | 0, G7 = be & 8191, M7 = be >>> 13, se = T[5] | 0, V7 = se & 8191, B7 = se >>> 13, ne = T[6] | 0, z7 = ne & 8191, C7 = ne >>> 13, me = T[7] | 0, W7 = me & 8191, D7 = me >>> 13, _e = T[8] | 0, Z7 = _e & 8191, L7 = _e >>> 13, ve = T[9] | 0, J7 = ve & 8191, ee = ve >>> 13;
      y.negative = d.negative ^ c.negative, y.length = 19, A = Math.imul(t7, k7), h = Math.imul(t7, E7), h = h + Math.imul(H, k7) | 0, N = Math.imul(H, E7);
      var We = (w + A | 0) + ((h & 8191) << 13) | 0;
      w = (N + (h >>> 13) | 0) + (We >>> 26) | 0, We &= 67108863, A = Math.imul(X, k7), h = Math.imul(X, E7), h = h + Math.imul(i7, k7) | 0, N = Math.imul(i7, E7), A = A + Math.imul(t7, H7) | 0, h = h + Math.imul(t7, P7) | 0, h = h + Math.imul(H, H7) | 0, N = N + Math.imul(H, P7) | 0;
      var Ze = (w + A | 0) + ((h & 8191) << 13) | 0;
      w = (N + (h >>> 13) | 0) + (Ze >>> 26) | 0, Ze &= 67108863, A = Math.imul(_, k7), h = Math.imul(_, E7), h = h + Math.imul(E, k7) | 0, N = Math.imul(E, E7), A = A + Math.imul(X, H7) | 0, h = h + Math.imul(X, P7) | 0, h = h + Math.imul(i7, H7) | 0, N = N + Math.imul(i7, P7) | 0, A = A + Math.imul(t7, q7) | 0, h = h + Math.imul(t7, N7) | 0, h = h + Math.imul(H, q7) | 0, N = N + Math.imul(H, N7) | 0;
      var Me = (w + A | 0) + ((h & 8191) << 13) | 0;
      w = (N + (h >>> 13) | 0) + (Me >>> 26) | 0, Me &= 67108863, A = Math.imul(V, k7), h = Math.imul(V, E7), h = h + Math.imul(n7, k7) | 0, N = Math.imul(n7, E7), A = A + Math.imul(_, H7) | 0, h = h + Math.imul(_, P7) | 0, h = h + Math.imul(E, H7) | 0, N = N + Math.imul(E, P7) | 0, A = A + Math.imul(X, q7) | 0, h = h + Math.imul(X, N7) | 0, h = h + Math.imul(i7, q7) | 0, N = N + Math.imul(i7, N7) | 0, A = A + Math.imul(t7, K7) | 0, h = h + Math.imul(t7, R7) | 0, h = h + Math.imul(H, K7) | 0, N = N + Math.imul(H, R7) | 0;
      var Ye = (w + A | 0) + ((h & 8191) << 13) | 0;
      w = (N + (h >>> 13) | 0) + (Ye >>> 26) | 0, Ye &= 67108863, A = Math.imul(B, k7), h = Math.imul(B, E7), h = h + Math.imul(D, k7) | 0, N = Math.imul(D, E7), A = A + Math.imul(V, H7) | 0, h = h + Math.imul(V, P7) | 0, h = h + Math.imul(n7, H7) | 0, N = N + Math.imul(n7, P7) | 0, A = A + Math.imul(_, q7) | 0, h = h + Math.imul(_, N7) | 0, h = h + Math.imul(E, q7) | 0, N = N + Math.imul(E, N7) | 0, A = A + Math.imul(X, K7) | 0, h = h + Math.imul(X, R7) | 0, h = h + Math.imul(i7, K7) | 0, N = N + Math.imul(i7, R7) | 0, A = A + Math.imul(t7, G7) | 0, h = h + Math.imul(t7, M7) | 0, h = h + Math.imul(H, G7) | 0, N = N + Math.imul(H, M7) | 0;
      var Xe = (w + A | 0) + ((h & 8191) << 13) | 0;
      w = (N + (h >>> 13) | 0) + (Xe >>> 26) | 0, Xe &= 67108863, A = Math.imul(e7, k7), h = Math.imul(e7, E7), h = h + Math.imul(o7, k7) | 0, N = Math.imul(o7, E7), A = A + Math.imul(B, H7) | 0, h = h + Math.imul(B, P7) | 0, h = h + Math.imul(D, H7) | 0, N = N + Math.imul(D, P7) | 0, A = A + Math.imul(V, q7) | 0, h = h + Math.imul(V, N7) | 0, h = h + Math.imul(n7, q7) | 0, N = N + Math.imul(n7, N7) | 0, A = A + Math.imul(_, K7) | 0, h = h + Math.imul(_, R7) | 0, h = h + Math.imul(E, K7) | 0, N = N + Math.imul(E, R7) | 0, A = A + Math.imul(X, G7) | 0, h = h + Math.imul(X, M7) | 0, h = h + Math.imul(i7, G7) | 0, N = N + Math.imul(i7, M7) | 0, A = A + Math.imul(t7, V7) | 0, h = h + Math.imul(t7, B7) | 0, h = h + Math.imul(H, V7) | 0, N = N + Math.imul(H, B7) | 0;
      var p0 = (w + A | 0) + ((h & 8191) << 13) | 0;
      w = (N + (h >>> 13) | 0) + (p0 >>> 26) | 0, p0 &= 67108863, A = Math.imul(s7, k7), h = Math.imul(s7, E7), h = h + Math.imul(u7, k7) | 0, N = Math.imul(u7, E7), A = A + Math.imul(e7, H7) | 0, h = h + Math.imul(e7, P7) | 0, h = h + Math.imul(o7, H7) | 0, N = N + Math.imul(o7, P7) | 0, A = A + Math.imul(B, q7) | 0, h = h + Math.imul(B, N7) | 0, h = h + Math.imul(D, q7) | 0, N = N + Math.imul(D, N7) | 0, A = A + Math.imul(V, K7) | 0, h = h + Math.imul(V, R7) | 0, h = h + Math.imul(n7, K7) | 0, N = N + Math.imul(n7, R7) | 0, A = A + Math.imul(_, G7) | 0, h = h + Math.imul(_, M7) | 0, h = h + Math.imul(E, G7) | 0, N = N + Math.imul(E, M7) | 0, A = A + Math.imul(X, V7) | 0, h = h + Math.imul(X, B7) | 0, h = h + Math.imul(i7, V7) | 0, N = N + Math.imul(i7, B7) | 0, A = A + Math.imul(t7, z7) | 0, h = h + Math.imul(t7, C7) | 0, h = h + Math.imul(H, z7) | 0, N = N + Math.imul(H, C7) | 0;
      var Je = (w + A | 0) + ((h & 8191) << 13) | 0;
      w = (N + (h >>> 13) | 0) + (Je >>> 26) | 0, Je &= 67108863, A = Math.imul(p7, k7), h = Math.imul(p7, E7), h = h + Math.imul(l7, k7) | 0, N = Math.imul(l7, E7), A = A + Math.imul(s7, H7) | 0, h = h + Math.imul(s7, P7) | 0, h = h + Math.imul(u7, H7) | 0, N = N + Math.imul(u7, P7) | 0, A = A + Math.imul(e7, q7) | 0, h = h + Math.imul(e7, N7) | 0, h = h + Math.imul(o7, q7) | 0, N = N + Math.imul(o7, N7) | 0, A = A + Math.imul(B, K7) | 0, h = h + Math.imul(B, R7) | 0, h = h + Math.imul(D, K7) | 0, N = N + Math.imul(D, R7) | 0, A = A + Math.imul(V, G7) | 0, h = h + Math.imul(V, M7) | 0, h = h + Math.imul(n7, G7) | 0, N = N + Math.imul(n7, M7) | 0, A = A + Math.imul(_, V7) | 0, h = h + Math.imul(_, B7) | 0, h = h + Math.imul(E, V7) | 0, N = N + Math.imul(E, B7) | 0, A = A + Math.imul(X, z7) | 0, h = h + Math.imul(X, C7) | 0, h = h + Math.imul(i7, z7) | 0, N = N + Math.imul(i7, C7) | 0, A = A + Math.imul(t7, W7) | 0, h = h + Math.imul(t7, D7) | 0, h = h + Math.imul(H, W7) | 0, N = N + Math.imul(H, D7) | 0;
      var h0 = (w + A | 0) + ((h & 8191) << 13) | 0;
      w = (N + (h >>> 13) | 0) + (h0 >>> 26) | 0, h0 &= 67108863, A = Math.imul(x7, k7), h = Math.imul(x7, E7), h = h + Math.imul(_7, k7) | 0, N = Math.imul(_7, E7), A = A + Math.imul(p7, H7) | 0, h = h + Math.imul(p7, P7) | 0, h = h + Math.imul(l7, H7) | 0, N = N + Math.imul(l7, P7) | 0, A = A + Math.imul(s7, q7) | 0, h = h + Math.imul(s7, N7) | 0, h = h + Math.imul(u7, q7) | 0, N = N + Math.imul(u7, N7) | 0, A = A + Math.imul(e7, K7) | 0, h = h + Math.imul(e7, R7) | 0, h = h + Math.imul(o7, K7) | 0, N = N + Math.imul(o7, R7) | 0, A = A + Math.imul(B, G7) | 0, h = h + Math.imul(B, M7) | 0, h = h + Math.imul(D, G7) | 0, N = N + Math.imul(D, M7) | 0, A = A + Math.imul(V, V7) | 0, h = h + Math.imul(V, B7) | 0, h = h + Math.imul(n7, V7) | 0, N = N + Math.imul(n7, B7) | 0, A = A + Math.imul(_, z7) | 0, h = h + Math.imul(_, C7) | 0, h = h + Math.imul(E, z7) | 0, N = N + Math.imul(E, C7) | 0, A = A + Math.imul(X, W7) | 0, h = h + Math.imul(X, D7) | 0, h = h + Math.imul(i7, W7) | 0, N = N + Math.imul(i7, D7) | 0, A = A + Math.imul(t7, Z7) | 0, h = h + Math.imul(t7, L7) | 0, h = h + Math.imul(H, Z7) | 0, N = N + Math.imul(H, L7) | 0;
      var b0 = (w + A | 0) + ((h & 8191) << 13) | 0;
      w = (N + (h >>> 13) | 0) + (b0 >>> 26) | 0, b0 &= 67108863, A = Math.imul(T7, k7), h = Math.imul(T7, E7), h = h + Math.imul(S7, k7) | 0, N = Math.imul(S7, E7), A = A + Math.imul(x7, H7) | 0, h = h + Math.imul(x7, P7) | 0, h = h + Math.imul(_7, H7) | 0, N = N + Math.imul(_7, P7) | 0, A = A + Math.imul(p7, q7) | 0, h = h + Math.imul(p7, N7) | 0, h = h + Math.imul(l7, q7) | 0, N = N + Math.imul(l7, N7) | 0, A = A + Math.imul(s7, K7) | 0, h = h + Math.imul(s7, R7) | 0, h = h + Math.imul(u7, K7) | 0, N = N + Math.imul(u7, R7) | 0, A = A + Math.imul(e7, G7) | 0, h = h + Math.imul(e7, M7) | 0, h = h + Math.imul(o7, G7) | 0, N = N + Math.imul(o7, M7) | 0, A = A + Math.imul(B, V7) | 0, h = h + Math.imul(B, B7) | 0, h = h + Math.imul(D, V7) | 0, N = N + Math.imul(D, B7) | 0, A = A + Math.imul(V, z7) | 0, h = h + Math.imul(V, C7) | 0, h = h + Math.imul(n7, z7) | 0, N = N + Math.imul(n7, C7) | 0, A = A + Math.imul(_, W7) | 0, h = h + Math.imul(_, D7) | 0, h = h + Math.imul(E, W7) | 0, N = N + Math.imul(E, D7) | 0, A = A + Math.imul(X, Z7) | 0, h = h + Math.imul(X, L7) | 0, h = h + Math.imul(i7, Z7) | 0, N = N + Math.imul(i7, L7) | 0, A = A + Math.imul(t7, J7) | 0, h = h + Math.imul(t7, ee) | 0, h = h + Math.imul(H, J7) | 0, N = N + Math.imul(H, ee) | 0;
      var Le = (w + A | 0) + ((h & 8191) << 13) | 0;
      w = (N + (h >>> 13) | 0) + (Le >>> 26) | 0, Le &= 67108863, A = Math.imul(T7, H7), h = Math.imul(T7, P7), h = h + Math.imul(S7, H7) | 0, N = Math.imul(S7, P7), A = A + Math.imul(x7, q7) | 0, h = h + Math.imul(x7, N7) | 0, h = h + Math.imul(_7, q7) | 0, N = N + Math.imul(_7, N7) | 0, A = A + Math.imul(p7, K7) | 0, h = h + Math.imul(p7, R7) | 0, h = h + Math.imul(l7, K7) | 0, N = N + Math.imul(l7, R7) | 0, A = A + Math.imul(s7, G7) | 0, h = h + Math.imul(s7, M7) | 0, h = h + Math.imul(u7, G7) | 0, N = N + Math.imul(u7, M7) | 0, A = A + Math.imul(e7, V7) | 0, h = h + Math.imul(e7, B7) | 0, h = h + Math.imul(o7, V7) | 0, N = N + Math.imul(o7, B7) | 0, A = A + Math.imul(B, z7) | 0, h = h + Math.imul(B, C7) | 0, h = h + Math.imul(D, z7) | 0, N = N + Math.imul(D, C7) | 0, A = A + Math.imul(V, W7) | 0, h = h + Math.imul(V, D7) | 0, h = h + Math.imul(n7, W7) | 0, N = N + Math.imul(n7, D7) | 0, A = A + Math.imul(_, Z7) | 0, h = h + Math.imul(_, L7) | 0, h = h + Math.imul(E, Z7) | 0, N = N + Math.imul(E, L7) | 0, A = A + Math.imul(X, J7) | 0, h = h + Math.imul(X, ee) | 0, h = h + Math.imul(i7, J7) | 0, N = N + Math.imul(i7, ee) | 0;
      var Ke = (w + A | 0) + ((h & 8191) << 13) | 0;
      w = (N + (h >>> 13) | 0) + (Ke >>> 26) | 0, Ke &= 67108863, A = Math.imul(T7, q7), h = Math.imul(T7, N7), h = h + Math.imul(S7, q7) | 0, N = Math.imul(S7, N7), A = A + Math.imul(x7, K7) | 0, h = h + Math.imul(x7, R7) | 0, h = h + Math.imul(_7, K7) | 0, N = N + Math.imul(_7, R7) | 0, A = A + Math.imul(p7, G7) | 0, h = h + Math.imul(p7, M7) | 0, h = h + Math.imul(l7, G7) | 0, N = N + Math.imul(l7, M7) | 0, A = A + Math.imul(s7, V7) | 0, h = h + Math.imul(s7, B7) | 0, h = h + Math.imul(u7, V7) | 0, N = N + Math.imul(u7, B7) | 0, A = A + Math.imul(e7, z7) | 0, h = h + Math.imul(e7, C7) | 0, h = h + Math.imul(o7, z7) | 0, N = N + Math.imul(o7, C7) | 0, A = A + Math.imul(B, W7) | 0, h = h + Math.imul(B, D7) | 0, h = h + Math.imul(D, W7) | 0, N = N + Math.imul(D, D7) | 0, A = A + Math.imul(V, Z7) | 0, h = h + Math.imul(V, L7) | 0, h = h + Math.imul(n7, Z7) | 0, N = N + Math.imul(n7, L7) | 0, A = A + Math.imul(_, J7) | 0, h = h + Math.imul(_, ee) | 0, h = h + Math.imul(E, J7) | 0, N = N + Math.imul(E, ee) | 0;
      var m0 = (w + A | 0) + ((h & 8191) << 13) | 0;
      w = (N + (h >>> 13) | 0) + (m0 >>> 26) | 0, m0 &= 67108863, A = Math.imul(T7, K7), h = Math.imul(T7, R7), h = h + Math.imul(S7, K7) | 0, N = Math.imul(S7, R7), A = A + Math.imul(x7, G7) | 0, h = h + Math.imul(x7, M7) | 0, h = h + Math.imul(_7, G7) | 0, N = N + Math.imul(_7, M7) | 0, A = A + Math.imul(p7, V7) | 0, h = h + Math.imul(p7, B7) | 0, h = h + Math.imul(l7, V7) | 0, N = N + Math.imul(l7, B7) | 0, A = A + Math.imul(s7, z7) | 0, h = h + Math.imul(s7, C7) | 0, h = h + Math.imul(u7, z7) | 0, N = N + Math.imul(u7, C7) | 0, A = A + Math.imul(e7, W7) | 0, h = h + Math.imul(e7, D7) | 0, h = h + Math.imul(o7, W7) | 0, N = N + Math.imul(o7, D7) | 0, A = A + Math.imul(B, Z7) | 0, h = h + Math.imul(B, L7) | 0, h = h + Math.imul(D, Z7) | 0, N = N + Math.imul(D, L7) | 0, A = A + Math.imul(V, J7) | 0, h = h + Math.imul(V, ee) | 0, h = h + Math.imul(n7, J7) | 0, N = N + Math.imul(n7, ee) | 0;
      var Qe = (w + A | 0) + ((h & 8191) << 13) | 0;
      w = (N + (h >>> 13) | 0) + (Qe >>> 26) | 0, Qe &= 67108863, A = Math.imul(T7, G7), h = Math.imul(T7, M7), h = h + Math.imul(S7, G7) | 0, N = Math.imul(S7, M7), A = A + Math.imul(x7, V7) | 0, h = h + Math.imul(x7, B7) | 0, h = h + Math.imul(_7, V7) | 0, N = N + Math.imul(_7, B7) | 0, A = A + Math.imul(p7, z7) | 0, h = h + Math.imul(p7, C7) | 0, h = h + Math.imul(l7, z7) | 0, N = N + Math.imul(l7, C7) | 0, A = A + Math.imul(s7, W7) | 0, h = h + Math.imul(s7, D7) | 0, h = h + Math.imul(u7, W7) | 0, N = N + Math.imul(u7, D7) | 0, A = A + Math.imul(e7, Z7) | 0, h = h + Math.imul(e7, L7) | 0, h = h + Math.imul(o7, Z7) | 0, N = N + Math.imul(o7, L7) | 0, A = A + Math.imul(B, J7) | 0, h = h + Math.imul(B, ee) | 0, h = h + Math.imul(D, J7) | 0, N = N + Math.imul(D, ee) | 0;
      var v0 = (w + A | 0) + ((h & 8191) << 13) | 0;
      w = (N + (h >>> 13) | 0) + (v0 >>> 26) | 0, v0 &= 67108863, A = Math.imul(T7, V7), h = Math.imul(T7, B7), h = h + Math.imul(S7, V7) | 0, N = Math.imul(S7, B7), A = A + Math.imul(x7, z7) | 0, h = h + Math.imul(x7, C7) | 0, h = h + Math.imul(_7, z7) | 0, N = N + Math.imul(_7, C7) | 0, A = A + Math.imul(p7, W7) | 0, h = h + Math.imul(p7, D7) | 0, h = h + Math.imul(l7, W7) | 0, N = N + Math.imul(l7, D7) | 0, A = A + Math.imul(s7, Z7) | 0, h = h + Math.imul(s7, L7) | 0, h = h + Math.imul(u7, Z7) | 0, N = N + Math.imul(u7, L7) | 0, A = A + Math.imul(e7, J7) | 0, h = h + Math.imul(e7, ee) | 0, h = h + Math.imul(o7, J7) | 0, N = N + Math.imul(o7, ee) | 0;
      var y0 = (w + A | 0) + ((h & 8191) << 13) | 0;
      w = (N + (h >>> 13) | 0) + (y0 >>> 26) | 0, y0 &= 67108863, A = Math.imul(T7, z7), h = Math.imul(T7, C7), h = h + Math.imul(S7, z7) | 0, N = Math.imul(S7, C7), A = A + Math.imul(x7, W7) | 0, h = h + Math.imul(x7, D7) | 0, h = h + Math.imul(_7, W7) | 0, N = N + Math.imul(_7, D7) | 0, A = A + Math.imul(p7, Z7) | 0, h = h + Math.imul(p7, L7) | 0, h = h + Math.imul(l7, Z7) | 0, N = N + Math.imul(l7, L7) | 0, A = A + Math.imul(s7, J7) | 0, h = h + Math.imul(s7, ee) | 0, h = h + Math.imul(u7, J7) | 0, N = N + Math.imul(u7, ee) | 0;
      var g0 = (w + A | 0) + ((h & 8191) << 13) | 0;
      w = (N + (h >>> 13) | 0) + (g0 >>> 26) | 0, g0 &= 67108863, A = Math.imul(T7, W7), h = Math.imul(T7, D7), h = h + Math.imul(S7, W7) | 0, N = Math.imul(S7, D7), A = A + Math.imul(x7, Z7) | 0, h = h + Math.imul(x7, L7) | 0, h = h + Math.imul(_7, Z7) | 0, N = N + Math.imul(_7, L7) | 0, A = A + Math.imul(p7, J7) | 0, h = h + Math.imul(p7, ee) | 0, h = h + Math.imul(l7, J7) | 0, N = N + Math.imul(l7, ee) | 0;
      var P0 = (w + A | 0) + ((h & 8191) << 13) | 0;
      w = (N + (h >>> 13) | 0) + (P0 >>> 26) | 0, P0 &= 67108863, A = Math.imul(T7, Z7), h = Math.imul(T7, L7), h = h + Math.imul(S7, Z7) | 0, N = Math.imul(S7, L7), A = A + Math.imul(x7, J7) | 0, h = h + Math.imul(x7, ee) | 0, h = h + Math.imul(_7, J7) | 0, N = N + Math.imul(_7, ee) | 0;
      var q0 = (w + A | 0) + ((h & 8191) << 13) | 0;
      w = (N + (h >>> 13) | 0) + (q0 >>> 26) | 0, q0 &= 67108863, A = Math.imul(T7, J7), h = Math.imul(T7, ee), h = h + Math.imul(S7, J7) | 0, N = Math.imul(S7, ee);
      var It = (w + A | 0) + ((h & 8191) << 13) | 0;
      return w = (N + (h >>> 13) | 0) + (It >>> 26) | 0, It &= 67108863, g[0] = We, g[1] = Ze, g[2] = Me, g[3] = Ye, g[4] = Xe, g[5] = p0, g[6] = Je, g[7] = h0, g[8] = b0, g[9] = Le, g[10] = Ke, g[11] = m0, g[12] = Qe, g[13] = v0, g[14] = y0, g[15] = g0, g[16] = P0, g[17] = q0, g[18] = It, w !== 0 && (g[19] = w, y.length++), y;
    };
    Math.imul || (R = M);
    function F(p, d, c) {
      c.negative = d.negative ^ p.negative, c.length = p.length + d.length;
      for (var y = 0, S = 0, T = 0; T < c.length - 1; T++) {
        var g = S;
        S = 0;
        for (var w = y & 67108863, A = Math.min(T, d.length - 1), h = Math.max(0, T - p.length + 1); h <= A; h++) {
          var N = T - h, Y = p.words[N] | 0, t7 = d.words[h] | 0, H = Y * t7, $ = H & 67108863;
          g = g + (H / 67108864 | 0) | 0, $ = $ + w | 0, w = $ & 67108863, g = g + ($ >>> 26) | 0, S += g >>> 26, g &= 67108863;
        }
        c.words[T] = w, y = g, g = S;
      }
      return y !== 0 ? c.words[T] = y : c.length--, c._strip();
    }
    function C(p, d, c) {
      return F(p, d, c);
    }
    i.prototype.mulTo = function(d, c) {
      var y, S = this.length + d.length;
      return this.length === 10 && d.length === 10 ? y = R(this, d, c) : S < 63 ? y = M(this, d, c) : S < 1024 ? y = F(this, d, c) : y = C(this, d, c), y;
    }, i.prototype.mul = function(d) {
      var c = new i(null);
      return c.words = new Array(this.length + d.length), this.mulTo(d, c);
    }, i.prototype.mulf = function(d) {
      var c = new i(null);
      return c.words = new Array(this.length + d.length), C(this, d, c);
    }, i.prototype.imul = function(d) {
      return this.clone().mulTo(d, this);
    }, i.prototype.imuln = function(d) {
      var c = d < 0;
      c && (d = -d), r(typeof d == "number"), r(d < 67108864);
      for (var y = 0, S = 0; S < this.length; S++) {
        var T = (this.words[S] | 0) * d, g = (T & 67108863) + (y & 67108863);
        y >>= 26, y += T / 67108864 | 0, y += g >>> 26, this.words[S] = g & 67108863;
      }
      return y !== 0 && (this.words[S] = y, this.length++), c ? this.ineg() : this;
    }, i.prototype.muln = function(d) {
      return this.clone().imuln(d);
    }, i.prototype.sqr = function() {
      return this.mul(this);
    }, i.prototype.isqr = function() {
      return this.imul(this.clone());
    }, i.prototype.pow = function(d) {
      var c = P(d);
      if (c.length === 0)
        return new i(1);
      for (var y = this, S = 0; S < c.length && c[S] === 0; S++, y = y.sqr())
        ;
      if (++S < c.length)
        for (var T = y.sqr(); S < c.length; S++, T = T.sqr())
          c[S] !== 0 && (y = y.mul(T));
      return y;
    }, i.prototype.iushln = function(d) {
      r(typeof d == "number" && d >= 0);
      var c = d % 26, y = (d - c) / 26, S = 67108863 >>> 26 - c << 26 - c, T;
      if (c !== 0) {
        var g = 0;
        for (T = 0; T < this.length; T++) {
          var w = this.words[T] & S, A = (this.words[T] | 0) - w << c;
          this.words[T] = A | g, g = w >>> 26 - c;
        }
        g && (this.words[T] = g, this.length++);
      }
      if (y !== 0) {
        for (T = this.length - 1; T >= 0; T--)
          this.words[T + y] = this.words[T];
        for (T = 0; T < y; T++)
          this.words[T] = 0;
        this.length += y;
      }
      return this._strip();
    }, i.prototype.ishln = function(d) {
      return r(this.negative === 0), this.iushln(d);
    }, i.prototype.iushrn = function(d, c, y) {
      r(typeof d == "number" && d >= 0);
      var S;
      c ? S = (c - c % 26) / 26 : S = 0;
      var T = d % 26, g = Math.min((d - T) / 26, this.length), w = 67108863 ^ 67108863 >>> T << T, A = y;
      if (S -= g, S = Math.max(0, S), A) {
        for (var h = 0; h < g; h++)
          A.words[h] = this.words[h];
        A.length = g;
      }
      if (g !== 0)
        if (this.length > g)
          for (this.length -= g, h = 0; h < this.length; h++)
            this.words[h] = this.words[h + g];
        else
          this.words[0] = 0, this.length = 1;
      var N = 0;
      for (h = this.length - 1; h >= 0 && (N !== 0 || h >= S); h--) {
        var Y = this.words[h] | 0;
        this.words[h] = N << 26 - T | Y >>> T, N = Y & w;
      }
      return A && N !== 0 && (A.words[A.length++] = N), this.length === 0 && (this.words[0] = 0, this.length = 1), this._strip();
    }, i.prototype.ishrn = function(d, c, y) {
      return r(this.negative === 0), this.iushrn(d, c, y);
    }, i.prototype.shln = function(d) {
      return this.clone().ishln(d);
    }, i.prototype.ushln = function(d) {
      return this.clone().iushln(d);
    }, i.prototype.shrn = function(d) {
      return this.clone().ishrn(d);
    }, i.prototype.ushrn = function(d) {
      return this.clone().iushrn(d);
    }, i.prototype.testn = function(d) {
      r(typeof d == "number" && d >= 0);
      var c = d % 26, y = (d - c) / 26, S = 1 << c;
      if (this.length <= y)
        return !1;
      var T = this.words[y];
      return !!(T & S);
    }, i.prototype.imaskn = function(d) {
      r(typeof d == "number" && d >= 0);
      var c = d % 26, y = (d - c) / 26;
      if (r(this.negative === 0, "imaskn works only with positive numbers"), this.length <= y)
        return this;
      if (c !== 0 && y++, this.length = Math.min(y, this.length), c !== 0) {
        var S = 67108863 ^ 67108863 >>> c << c;
        this.words[this.length - 1] &= S;
      }
      return this._strip();
    }, i.prototype.maskn = function(d) {
      return this.clone().imaskn(d);
    }, i.prototype.iaddn = function(d) {
      return r(typeof d == "number"), r(d < 67108864), d < 0 ? this.isubn(-d) : this.negative !== 0 ? this.length === 1 && (this.words[0] | 0) <= d ? (this.words[0] = d - (this.words[0] | 0), this.negative = 0, this) : (this.negative = 0, this.isubn(d), this.negative = 1, this) : this._iaddn(d);
    }, i.prototype._iaddn = function(d) {
      this.words[0] += d;
      for (var c = 0; c < this.length && this.words[c] >= 67108864; c++)
        this.words[c] -= 67108864, c === this.length - 1 ? this.words[c + 1] = 1 : this.words[c + 1]++;
      return this.length = Math.max(this.length, c + 1), this;
    }, i.prototype.isubn = function(d) {
      if (r(typeof d == "number"), r(d < 67108864), d < 0)
        return this.iaddn(-d);
      if (this.negative !== 0)
        return this.negative = 0, this.iaddn(d), this.negative = 1, this;
      if (this.words[0] -= d, this.length === 1 && this.words[0] < 0)
        this.words[0] = -this.words[0], this.negative = 1;
      else
        for (var c = 0; c < this.length && this.words[c] < 0; c++)
          this.words[c] += 67108864, this.words[c + 1] -= 1;
      return this._strip();
    }, i.prototype.addn = function(d) {
      return this.clone().iaddn(d);
    }, i.prototype.subn = function(d) {
      return this.clone().isubn(d);
    }, i.prototype.iabs = function() {
      return this.negative = 0, this;
    }, i.prototype.abs = function() {
      return this.clone().iabs();
    }, i.prototype._ishlnsubmul = function(d, c, y) {
      var S = d.length + y, T;
      this._expand(S);
      var g, w = 0;
      for (T = 0; T < d.length; T++) {
        g = (this.words[T + y] | 0) + w;
        var A = (d.words[T] | 0) * c;
        g -= A & 67108863, w = (g >> 26) - (A / 67108864 | 0), this.words[T + y] = g & 67108863;
      }
      for (; T < this.length - y; T++)
        g = (this.words[T + y] | 0) + w, w = g >> 26, this.words[T + y] = g & 67108863;
      if (w === 0)
        return this._strip();
      for (r(w === -1), w = 0, T = 0; T < this.length; T++)
        g = -(this.words[T] | 0) + w, w = g >> 26, this.words[T] = g & 67108863;
      return this.negative = 1, this._strip();
    }, i.prototype._wordDiv = function(d, c) {
      var y = this.length - d.length, S = this.clone(), T = d, g = T.words[T.length - 1] | 0, w = this._countBits(g);
      y = 26 - w, y !== 0 && (T = T.ushln(y), S.iushln(y), g = T.words[T.length - 1] | 0);
      var A = S.length - T.length, h;
      if (c !== "mod") {
        h = new i(null), h.length = A + 1, h.words = new Array(h.length);
        for (var N = 0; N < h.length; N++)
          h.words[N] = 0;
      }
      var Y = S.clone()._ishlnsubmul(T, 1, A);
      Y.negative === 0 && (S = Y, h && (h.words[A] = 1));
      for (var t7 = A - 1; t7 >= 0; t7--) {
        var H = (S.words[T.length + t7] | 0) * 67108864 + (S.words[T.length + t7 - 1] | 0);
        for (H = Math.min(H / g | 0, 67108863), S._ishlnsubmul(T, H, t7); S.negative !== 0; )
          H--, S.negative = 0, S._ishlnsubmul(T, 1, t7), S.isZero() || (S.negative ^= 1);
        h && (h.words[t7] = H);
      }
      return h && h._strip(), S._strip(), c !== "div" && y !== 0 && S.iushrn(y), {
        div: h || null,
        mod: S
      };
    }, i.prototype.divmod = function(d, c, y) {
      if (r(!d.isZero()), this.isZero())
        return {
          div: new i(0),
          mod: new i(0)
        };
      var S, T, g;
      return this.negative !== 0 && d.negative === 0 ? (g = this.neg().divmod(d, c), c !== "mod" && (S = g.div.neg()), c !== "div" && (T = g.mod.neg(), y && T.negative !== 0 && T.iadd(d)), {
        div: S,
        mod: T
      }) : this.negative === 0 && d.negative !== 0 ? (g = this.divmod(d.neg(), c), c !== "mod" && (S = g.div.neg()), {
        div: S,
        mod: g.mod
      }) : this.negative & d.negative ? (g = this.neg().divmod(d.neg(), c), c !== "div" && (T = g.mod.neg(), y && T.negative !== 0 && T.isub(d)), {
        div: g.div,
        mod: T
      }) : d.length > this.length || this.cmp(d) < 0 ? {
        div: new i(0),
        mod: this
      } : d.length === 1 ? c === "div" ? {
        div: this.divn(d.words[0]),
        mod: null
      } : c === "mod" ? {
        div: null,
        mod: new i(this.modrn(d.words[0]))
      } : {
        div: this.divn(d.words[0]),
        mod: new i(this.modrn(d.words[0]))
      } : this._wordDiv(d, c);
    }, i.prototype.div = function(d) {
      return this.divmod(d, "div", !1).div;
    }, i.prototype.mod = function(d) {
      return this.divmod(d, "mod", !1).mod;
    }, i.prototype.umod = function(d) {
      return this.divmod(d, "mod", !0).mod;
    }, i.prototype.divRound = function(d) {
      var c = this.divmod(d);
      if (c.mod.isZero())
        return c.div;
      var y = c.div.negative !== 0 ? c.mod.isub(d) : c.mod, S = d.ushrn(1), T = d.andln(1), g = y.cmp(S);
      return g < 0 || T === 1 && g === 0 ? c.div : c.div.negative !== 0 ? c.div.isubn(1) : c.div.iaddn(1);
    }, i.prototype.modrn = function(d) {
      var c = d < 0;
      c && (d = -d), r(d <= 67108863);
      for (var y = (1 << 26) % d, S = 0, T = this.length - 1; T >= 0; T--)
        S = (y * S + (this.words[T] | 0)) % d;
      return c ? -S : S;
    }, i.prototype.modn = function(d) {
      return this.modrn(d);
    }, i.prototype.idivn = function(d) {
      var c = d < 0;
      c && (d = -d), r(d <= 67108863);
      for (var y = 0, S = this.length - 1; S >= 0; S--) {
        var T = (this.words[S] | 0) + y * 67108864;
        this.words[S] = T / d | 0, y = T % d;
      }
      return this._strip(), c ? this.ineg() : this;
    }, i.prototype.divn = function(d) {
      return this.clone().idivn(d);
    }, i.prototype.egcd = function(d) {
      r(d.negative === 0), r(!d.isZero());
      var c = this, y = d.clone();
      c.negative !== 0 ? c = c.umod(d) : c = c.clone();
      for (var S = new i(1), T = new i(0), g = new i(0), w = new i(1), A = 0; c.isEven() && y.isEven(); )
        c.iushrn(1), y.iushrn(1), ++A;
      for (var h = y.clone(), N = c.clone(); !c.isZero(); ) {
        for (var Y = 0, t7 = 1; !(c.words[0] & t7) && Y < 26; ++Y, t7 <<= 1)
          ;
        if (Y > 0)
          for (c.iushrn(Y); Y-- > 0; )
            (S.isOdd() || T.isOdd()) && (S.iadd(h), T.isub(N)), S.iushrn(1), T.iushrn(1);
        for (var H = 0, $ = 1; !(y.words[0] & $) && H < 26; ++H, $ <<= 1)
          ;
        if (H > 0)
          for (y.iushrn(H); H-- > 0; )
            (g.isOdd() || w.isOdd()) && (g.iadd(h), w.isub(N)), g.iushrn(1), w.iushrn(1);
        c.cmp(y) >= 0 ? (c.isub(y), S.isub(g), T.isub(w)) : (y.isub(c), g.isub(S), w.isub(T));
      }
      return {
        a: g,
        b: w,
        gcd: y.iushln(A)
      };
    }, i.prototype._invmp = function(d) {
      r(d.negative === 0), r(!d.isZero());
      var c = this, y = d.clone();
      c.negative !== 0 ? c = c.umod(d) : c = c.clone();
      for (var S = new i(1), T = new i(0), g = y.clone(); c.cmpn(1) > 0 && y.cmpn(1) > 0; ) {
        for (var w = 0, A = 1; !(c.words[0] & A) && w < 26; ++w, A <<= 1)
          ;
        if (w > 0)
          for (c.iushrn(w); w-- > 0; )
            S.isOdd() && S.iadd(g), S.iushrn(1);
        for (var h = 0, N = 1; !(y.words[0] & N) && h < 26; ++h, N <<= 1)
          ;
        if (h > 0)
          for (y.iushrn(h); h-- > 0; )
            T.isOdd() && T.iadd(g), T.iushrn(1);
        c.cmp(y) >= 0 ? (c.isub(y), S.isub(T)) : (y.isub(c), T.isub(S));
      }
      var Y;
      return c.cmpn(1) === 0 ? Y = S : Y = T, Y.cmpn(0) < 0 && Y.iadd(d), Y;
    }, i.prototype.gcd = function(d) {
      if (this.isZero())
        return d.abs();
      if (d.isZero())
        return this.abs();
      var c = this.clone(), y = d.clone();
      c.negative = 0, y.negative = 0;
      for (var S = 0; c.isEven() && y.isEven(); S++)
        c.iushrn(1), y.iushrn(1);
      do {
        for (; c.isEven(); )
          c.iushrn(1);
        for (; y.isEven(); )
          y.iushrn(1);
        var T = c.cmp(y);
        if (T < 0) {
          var g = c;
          c = y, y = g;
        } else if (T === 0 || y.cmpn(1) === 0)
          break;
        c.isub(y);
      } while (!0);
      return y.iushln(S);
    }, i.prototype.invm = function(d) {
      return this.egcd(d).a.umod(d);
    }, i.prototype.isEven = function() {
      return (this.words[0] & 1) === 0;
    }, i.prototype.isOdd = function() {
      return (this.words[0] & 1) === 1;
    }, i.prototype.andln = function(d) {
      return this.words[0] & d;
    }, i.prototype.bincn = function(d) {
      r(typeof d == "number");
      var c = d % 26, y = (d - c) / 26, S = 1 << c;
      if (this.length <= y)
        return this._expand(y + 1), this.words[y] |= S, this;
      for (var T = S, g = y; T !== 0 && g < this.length; g++) {
        var w = this.words[g] | 0;
        w += T, T = w >>> 26, w &= 67108863, this.words[g] = w;
      }
      return T !== 0 && (this.words[g] = T, this.length++), this;
    }, i.prototype.isZero = function() {
      return this.length === 1 && this.words[0] === 0;
    }, i.prototype.cmpn = function(d) {
      var c = d < 0;
      if (this.negative !== 0 && !c)
        return -1;
      if (this.negative === 0 && c)
        return 1;
      this._strip();
      var y;
      if (this.length > 1)
        y = 1;
      else {
        c && (d = -d), r(d <= 67108863, "Number is too big");
        var S = this.words[0] | 0;
        y = S === d ? 0 : S < d ? -1 : 1;
      }
      return this.negative !== 0 ? -y | 0 : y;
    }, i.prototype.cmp = function(d) {
      if (this.negative !== 0 && d.negative === 0)
        return -1;
      if (this.negative === 0 && d.negative !== 0)
        return 1;
      var c = this.ucmp(d);
      return this.negative !== 0 ? -c | 0 : c;
    }, i.prototype.ucmp = function(d) {
      if (this.length > d.length)
        return 1;
      if (this.length < d.length)
        return -1;
      for (var c = 0, y = this.length - 1; y >= 0; y--) {
        var S = this.words[y] | 0, T = d.words[y] | 0;
        if (S !== T) {
          S < T ? c = -1 : S > T && (c = 1);
          break;
        }
      }
      return c;
    }, i.prototype.gtn = function(d) {
      return this.cmpn(d) === 1;
    }, i.prototype.gt = function(d) {
      return this.cmp(d) === 1;
    }, i.prototype.gten = function(d) {
      return this.cmpn(d) >= 0;
    }, i.prototype.gte = function(d) {
      return this.cmp(d) >= 0;
    }, i.prototype.ltn = function(d) {
      return this.cmpn(d) === -1;
    }, i.prototype.lt = function(d) {
      return this.cmp(d) === -1;
    }, i.prototype.lten = function(d) {
      return this.cmpn(d) <= 0;
    }, i.prototype.lte = function(d) {
      return this.cmp(d) <= 0;
    }, i.prototype.eqn = function(d) {
      return this.cmpn(d) === 0;
    }, i.prototype.eq = function(d) {
      return this.cmp(d) === 0;
    }, i.red = function(d) {
      return new O(d);
    }, i.prototype.toRed = function(d) {
      return r(!this.red, "Already a number in reduction context"), r(this.negative === 0, "red works only with positives"), d.convertTo(this)._forceRed(d);
    }, i.prototype.fromRed = function() {
      return r(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
    }, i.prototype._forceRed = function(d) {
      return this.red = d, this;
    }, i.prototype.forceRed = function(d) {
      return r(!this.red, "Already a number in reduction context"), this._forceRed(d);
    }, i.prototype.redAdd = function(d) {
      return r(this.red, "redAdd works only with red numbers"), this.red.add(this, d);
    }, i.prototype.redIAdd = function(d) {
      return r(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, d);
    }, i.prototype.redSub = function(d) {
      return r(this.red, "redSub works only with red numbers"), this.red.sub(this, d);
    }, i.prototype.redISub = function(d) {
      return r(this.red, "redISub works only with red numbers"), this.red.isub(this, d);
    }, i.prototype.redShl = function(d) {
      return r(this.red, "redShl works only with red numbers"), this.red.shl(this, d);
    }, i.prototype.redMul = function(d) {
      return r(this.red, "redMul works only with red numbers"), this.red._verify2(this, d), this.red.mul(this, d);
    }, i.prototype.redIMul = function(d) {
      return r(this.red, "redMul works only with red numbers"), this.red._verify2(this, d), this.red.imul(this, d);
    }, i.prototype.redSqr = function() {
      return r(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
    }, i.prototype.redISqr = function() {
      return r(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
    }, i.prototype.redSqrt = function() {
      return r(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
    }, i.prototype.redInvm = function() {
      return r(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
    }, i.prototype.redNeg = function() {
      return r(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
    }, i.prototype.redPow = function(d) {
      return r(this.red && !d.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, d);
    };
    var L = {
      k256: null,
      p224: null,
      p192: null,
      p25519: null
    };
    function U(p, d) {
      this.name = p, this.p = new i(d, 16), this.n = this.p.bitLength(), this.k = new i(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
    }
    U.prototype._tmp = function() {
      var d = new i(null);
      return d.words = new Array(Math.ceil(this.n / 13)), d;
    }, U.prototype.ireduce = function(d) {
      var c = d, y;
      do
        this.split(c, this.tmp), c = this.imulK(c), c = c.iadd(this.tmp), y = c.bitLength();
      while (y > this.n);
      var S = y < this.n ? -1 : c.ucmp(this.p);
      return S === 0 ? (c.words[0] = 0, c.length = 1) : S > 0 ? c.isub(this.p) : c.strip !== void 0 ? c.strip() : c._strip(), c;
    }, U.prototype.split = function(d, c) {
      d.iushrn(this.n, 0, c);
    }, U.prototype.imulK = function(d) {
      return d.imul(this.k);
    };
    function q() {
      U.call(
        this,
        "k256",
        "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f"
      );
    }
    f(q, U), q.prototype.split = function(d, c) {
      for (var y = 4194303, S = Math.min(d.length, 9), T = 0; T < S; T++)
        c.words[T] = d.words[T];
      if (c.length = S, d.length <= 9) {
        d.words[0] = 0, d.length = 1;
        return;
      }
      var g = d.words[9];
      for (c.words[c.length++] = g & y, T = 10; T < d.length; T++) {
        var w = d.words[T] | 0;
        d.words[T - 10] = (w & y) << 4 | g >>> 22, g = w;
      }
      g >>>= 22, d.words[T - 10] = g, g === 0 && d.length > 10 ? d.length -= 10 : d.length -= 9;
    }, q.prototype.imulK = function(d) {
      d.words[d.length] = 0, d.words[d.length + 1] = 0, d.length += 2;
      for (var c = 0, y = 0; y < d.length; y++) {
        var S = d.words[y] | 0;
        c += S * 977, d.words[y] = c & 67108863, c = S * 64 + (c / 67108864 | 0);
      }
      return d.words[d.length - 1] === 0 && (d.length--, d.words[d.length - 1] === 0 && d.length--), d;
    };
    function Z() {
      U.call(
        this,
        "p224",
        "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001"
      );
    }
    f(Z, U);
    function z() {
      U.call(
        this,
        "p192",
        "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff"
      );
    }
    f(z, U);
    function G() {
      U.call(
        this,
        "25519",
        "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed"
      );
    }
    f(G, U), G.prototype.imulK = function(d) {
      for (var c = 0, y = 0; y < d.length; y++) {
        var S = (d.words[y] | 0) * 19 + c, T = S & 67108863;
        S >>>= 26, d.words[y] = T, c = S;
      }
      return c !== 0 && (d.words[d.length++] = c), d;
    }, i._prime = function(d) {
      if (L[d])
        return L[d];
      var c;
      if (d === "k256")
        c = new q();
      else if (d === "p224")
        c = new Z();
      else if (d === "p192")
        c = new z();
      else if (d === "p25519")
        c = new G();
      else
        throw new Error("Unknown prime " + d);
      return L[d] = c, c;
    };
    function O(p) {
      if (typeof p == "string") {
        var d = i._prime(p);
        this.m = d.p, this.prime = d;
      } else
        r(p.gtn(1), "modulus must be greater than 1"), this.m = p, this.prime = null;
    }
    O.prototype._verify1 = function(d) {
      r(d.negative === 0, "red works only with positives"), r(d.red, "red works only with red numbers");
    }, O.prototype._verify2 = function(d, c) {
      r((d.negative | c.negative) === 0, "red works only with positives"), r(
        d.red && d.red === c.red,
        "red works only with red numbers"
      );
    }, O.prototype.imod = function(d) {
      return this.prime ? this.prime.ireduce(d)._forceRed(this) : (l(d, d.umod(this.m)._forceRed(this)), d);
    }, O.prototype.neg = function(d) {
      return d.isZero() ? d.clone() : this.m.sub(d)._forceRed(this);
    }, O.prototype.add = function(d, c) {
      this._verify2(d, c);
      var y = d.add(c);
      return y.cmp(this.m) >= 0 && y.isub(this.m), y._forceRed(this);
    }, O.prototype.iadd = function(d, c) {
      this._verify2(d, c);
      var y = d.iadd(c);
      return y.cmp(this.m) >= 0 && y.isub(this.m), y;
    }, O.prototype.sub = function(d, c) {
      this._verify2(d, c);
      var y = d.sub(c);
      return y.cmpn(0) < 0 && y.iadd(this.m), y._forceRed(this);
    }, O.prototype.isub = function(d, c) {
      this._verify2(d, c);
      var y = d.isub(c);
      return y.cmpn(0) < 0 && y.iadd(this.m), y;
    }, O.prototype.shl = function(d, c) {
      return this._verify1(d), this.imod(d.ushln(c));
    }, O.prototype.imul = function(d, c) {
      return this._verify2(d, c), this.imod(d.imul(c));
    }, O.prototype.mul = function(d, c) {
      return this._verify2(d, c), this.imod(d.mul(c));
    }, O.prototype.isqr = function(d) {
      return this.imul(d, d.clone());
    }, O.prototype.sqr = function(d) {
      return this.mul(d, d);
    }, O.prototype.sqrt = function(d) {
      if (d.isZero())
        return d.clone();
      var c = this.m.andln(3);
      if (r(c % 2 === 1), c === 3) {
        var y = this.m.add(new i(1)).iushrn(2);
        return this.pow(d, y);
      }
      for (var S = this.m.subn(1), T = 0; !S.isZero() && S.andln(1) === 0; )
        T++, S.iushrn(1);
      r(!S.isZero());
      var g = new i(1).toRed(this), w = g.redNeg(), A = this.m.subn(1).iushrn(1), h = this.m.bitLength();
      for (h = new i(2 * h * h).toRed(this); this.pow(h, A).cmp(w) !== 0; )
        h.redIAdd(w);
      for (var N = this.pow(h, S), Y = this.pow(d, S.addn(1).iushrn(1)), t7 = this.pow(d, S), H = T; t7.cmp(g) !== 0; ) {
        for (var $ = t7, X = 0; $.cmp(g) !== 0; X++)
          $ = $.redSqr();
        r(X < H);
        var i7 = this.pow(N, new i(1).iushln(H - X - 1));
        Y = Y.redMul(i7), N = i7.redSqr(), t7 = t7.redMul(N), H = X;
      }
      return Y;
    }, O.prototype.invm = function(d) {
      var c = d._invmp(this.m);
      return c.negative !== 0 ? (c.negative = 0, this.imod(c).redNeg()) : this.imod(c);
    }, O.prototype.pow = function(d, c) {
      if (c.isZero())
        return new i(1).toRed(this);
      if (c.cmpn(1) === 0)
        return d.clone();
      var y = 4, S = new Array(1 << y);
      S[0] = new i(1).toRed(this), S[1] = d;
      for (var T = 2; T < S.length; T++)
        S[T] = this.mul(S[T - 1], d);
      var g = S[0], w = 0, A = 0, h = c.bitLength() % 26;
      for (h === 0 && (h = 26), T = c.length - 1; T >= 0; T--) {
        for (var N = c.words[T], Y = h - 1; Y >= 0; Y--) {
          var t7 = N >> Y & 1;
          if (g !== S[0] && (g = this.sqr(g)), t7 === 0 && w === 0) {
            A = 0;
            continue;
          }
          w <<= 1, w |= t7, A++, !(A !== y && (T !== 0 || Y !== 0)) && (g = this.mul(g, S[w]), A = 0, w = 0);
        }
        h = 26;
      }
      return g;
    }, O.prototype.convertTo = function(d) {
      var c = d.umod(this.m);
      return c === d ? c.clone() : c;
    }, O.prototype.convertFrom = function(d) {
      var c = d.clone();
      return c.red = null, c;
    }, i.mont = function(d) {
      return new u(d);
    };
    function u(p) {
      O.call(this, p), this.shift = this.m.bitLength(), this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26), this.r = new i(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
    }
    f(u, O), u.prototype.convertTo = function(d) {
      return this.imod(d.ushln(this.shift));
    }, u.prototype.convertFrom = function(d) {
      var c = this.imod(d.mul(this.rinv));
      return c.red = null, c;
    }, u.prototype.imul = function(d, c) {
      if (d.isZero() || c.isZero())
        return d.words[0] = 0, d.length = 1, d;
      var y = d.imul(c), S = y.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), T = y.isub(S).iushrn(this.shift), g = T;
      return T.cmp(this.m) >= 0 ? g = T.isub(this.m) : T.cmpn(0) < 0 && (g = T.iadd(this.m)), g._forceRed(this);
    }, u.prototype.mul = function(d, c) {
      if (d.isZero() || c.isZero())
        return new i(0)._forceRed(this);
      var y = d.mul(c), S = y.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), T = y.isub(S).iushrn(this.shift), g = T;
      return T.cmp(this.m) >= 0 ? g = T.isub(this.m) : T.cmpn(0) < 0 && (g = T.iadd(this.m)), g._forceRed(this);
    }, u.prototype.invm = function(d) {
      var c = this.imod(d._invmp(this.m).mul(this.r2));
      return c._forceRed(this);
    };
  })(e, I7);
})(sd);
var Tk = sd.exports, zr = Tk, Ak = x1;
function Ik(e) {
  var t = vm(e), a = t.toRed(zr.mont(e.modulus)).redPow(new zr(e.publicExponent)).fromRed();
  return { blinder: a, unblinder: t.invm(e.modulus) };
}
function vm(e) {
  var t = e.modulus.byteLength(), a;
  do
    a = new zr(Ak(t));
  while (a.cmp(e.modulus) >= 0 || !a.umod(e.prime1) || !a.umod(e.prime2));
  return a;
}
function ym(e, t) {
  var a = Ik(t), r = t.modulus.byteLength(), f = new zr(e).mul(a.blinder).umod(t.modulus), i = f.toRed(zr.mont(t.prime1)), n = f.toRed(zr.mont(t.prime2)), o = t.coefficient, s = t.prime1, b = t.prime2, l = i.redPow(t.exponent1).fromRed(), v = n.redPow(t.exponent2).fromRed(), m = l.isub(v).imul(o).umod(s).imul(b);
  return v.iadd(m).imul(a.unblinder).umod(t.modulus).toArrayLike(Q.Buffer, "be", r);
}
ym.getr = vm;
var dd = ym, cd = { exports: {} };
cd.exports;
(function(e) {
  (function(t, a) {
    function r(p, d) {
      if (!p)
        throw new Error(d || "Assertion failed");
    }
    function f(p, d) {
      p.super_ = d;
      var c = function() {
      };
      c.prototype = d.prototype, p.prototype = new c(), p.prototype.constructor = p;
    }
    function i(p, d, c) {
      if (i.isBN(p))
        return p;
      this.negative = 0, this.words = null, this.length = 0, this.red = null, p !== null && ((d === "le" || d === "be") && (c = d, d = 10), this._init(p || 0, d || 10, c || "be"));
    }
    typeof t == "object" ? t.exports = i : a.BN = i, i.BN = i, i.wordSize = 26;
    var n;
    try {
      typeof window < "u" && typeof window.Buffer < "u" ? n = window.Buffer : n = Q.Buffer;
    } catch {
    }
    i.isBN = function(d) {
      return d instanceof i ? !0 : d !== null && typeof d == "object" && d.constructor.wordSize === i.wordSize && Array.isArray(d.words);
    }, i.max = function(d, c) {
      return d.cmp(c) > 0 ? d : c;
    }, i.min = function(d, c) {
      return d.cmp(c) < 0 ? d : c;
    }, i.prototype._init = function(d, c, y) {
      if (typeof d == "number")
        return this._initNumber(d, c, y);
      if (typeof d == "object")
        return this._initArray(d, c, y);
      c === "hex" && (c = 16), r(c === (c | 0) && c >= 2 && c <= 36), d = d.toString().replace(/\s+/g, "");
      var S = 0;
      d[0] === "-" && (S++, this.negative = 1), S < d.length && (c === 16 ? this._parseHex(d, S, y) : (this._parseBase(d, c, S), y === "le" && this._initArray(this.toArray(), c, y)));
    }, i.prototype._initNumber = function(d, c, y) {
      d < 0 && (this.negative = 1, d = -d), d < 67108864 ? (this.words = [d & 67108863], this.length = 1) : d < 4503599627370496 ? (this.words = [
        d & 67108863,
        d / 67108864 & 67108863
      ], this.length = 2) : (r(d < 9007199254740992), this.words = [
        d & 67108863,
        d / 67108864 & 67108863,
        1
      ], this.length = 3), y === "le" && this._initArray(this.toArray(), c, y);
    }, i.prototype._initArray = function(d, c, y) {
      if (r(typeof d.length == "number"), d.length <= 0)
        return this.words = [0], this.length = 1, this;
      this.length = Math.ceil(d.length / 3), this.words = new Array(this.length);
      for (var S = 0; S < this.length; S++)
        this.words[S] = 0;
      var T, g, w = 0;
      if (y === "be")
        for (S = d.length - 1, T = 0; S >= 0; S -= 3)
          g = d[S] | d[S - 1] << 8 | d[S - 2] << 16, this.words[T] |= g << w & 67108863, this.words[T + 1] = g >>> 26 - w & 67108863, w += 24, w >= 26 && (w -= 26, T++);
      else if (y === "le")
        for (S = 0, T = 0; S < d.length; S += 3)
          g = d[S] | d[S + 1] << 8 | d[S + 2] << 16, this.words[T] |= g << w & 67108863, this.words[T + 1] = g >>> 26 - w & 67108863, w += 24, w >= 26 && (w -= 26, T++);
      return this._strip();
    };
    function o(p, d) {
      var c = p.charCodeAt(d);
      if (c >= 48 && c <= 57)
        return c - 48;
      if (c >= 65 && c <= 70)
        return c - 55;
      if (c >= 97 && c <= 102)
        return c - 87;
      r(!1, "Invalid character in " + p);
    }
    function s(p, d, c) {
      var y = o(p, c);
      return c - 1 >= d && (y |= o(p, c - 1) << 4), y;
    }
    i.prototype._parseHex = function(d, c, y) {
      this.length = Math.ceil((d.length - c) / 6), this.words = new Array(this.length);
      for (var S = 0; S < this.length; S++)
        this.words[S] = 0;
      var T = 0, g = 0, w;
      if (y === "be")
        for (S = d.length - 1; S >= c; S -= 2)
          w = s(d, c, S) << T, this.words[g] |= w & 67108863, T >= 18 ? (T -= 18, g += 1, this.words[g] |= w >>> 26) : T += 8;
      else {
        var A = d.length - c;
        for (S = A % 2 === 0 ? c + 1 : c; S < d.length; S += 2)
          w = s(d, c, S) << T, this.words[g] |= w & 67108863, T >= 18 ? (T -= 18, g += 1, this.words[g] |= w >>> 26) : T += 8;
      }
      this._strip();
    };
    function b(p, d, c, y) {
      for (var S = 0, T = 0, g = Math.min(p.length, c), w = d; w < g; w++) {
        var A = p.charCodeAt(w) - 48;
        S *= y, A >= 49 ? T = A - 49 + 10 : A >= 17 ? T = A - 17 + 10 : T = A, r(A >= 0 && T < y, "Invalid character"), S += T;
      }
      return S;
    }
    i.prototype._parseBase = function(d, c, y) {
      this.words = [0], this.length = 1;
      for (var S = 0, T = 1; T <= 67108863; T *= c)
        S++;
      S--, T = T / c | 0;
      for (var g = d.length - y, w = g % S, A = Math.min(g, g - w) + y, h = 0, N = y; N < A; N += S)
        h = b(d, N, N + S, c), this.imuln(T), this.words[0] + h < 67108864 ? this.words[0] += h : this._iaddn(h);
      if (w !== 0) {
        var Y = 1;
        for (h = b(d, N, d.length, c), N = 0; N < w; N++)
          Y *= c;
        this.imuln(Y), this.words[0] + h < 67108864 ? this.words[0] += h : this._iaddn(h);
      }
      this._strip();
    }, i.prototype.copy = function(d) {
      d.words = new Array(this.length);
      for (var c = 0; c < this.length; c++)
        d.words[c] = this.words[c];
      d.length = this.length, d.negative = this.negative, d.red = this.red;
    };
    function l(p, d) {
      p.words = d.words, p.length = d.length, p.negative = d.negative, p.red = d.red;
    }
    if (i.prototype._move = function(d) {
      l(d, this);
    }, i.prototype.clone = function() {
      var d = new i(null);
      return this.copy(d), d;
    }, i.prototype._expand = function(d) {
      for (; this.length < d; )
        this.words[this.length++] = 0;
      return this;
    }, i.prototype._strip = function() {
      for (; this.length > 1 && this.words[this.length - 1] === 0; )
        this.length--;
      return this._normSign();
    }, i.prototype._normSign = function() {
      return this.length === 1 && this.words[0] === 0 && (this.negative = 0), this;
    }, typeof Symbol < "u" && typeof Symbol.for == "function")
      try {
        i.prototype[Symbol.for("nodejs.util.inspect.custom")] = v;
      } catch {
        i.prototype.inspect = v;
      }
    else
      i.prototype.inspect = v;
    function v() {
      return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
    }
    var m = [
      "",
      "0",
      "00",
      "000",
      "0000",
      "00000",
      "000000",
      "0000000",
      "00000000",
      "000000000",
      "0000000000",
      "00000000000",
      "000000000000",
      "0000000000000",
      "00000000000000",
      "000000000000000",
      "0000000000000000",
      "00000000000000000",
      "000000000000000000",
      "0000000000000000000",
      "00000000000000000000",
      "000000000000000000000",
      "0000000000000000000000",
      "00000000000000000000000",
      "000000000000000000000000",
      "0000000000000000000000000"
    ], x = [
      0,
      0,
      25,
      16,
      12,
      11,
      10,
      9,
      8,
      8,
      7,
      7,
      7,
      7,
      6,
      6,
      6,
      6,
      6,
      6,
      6,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5
    ], I = [
      0,
      0,
      33554432,
      43046721,
      16777216,
      48828125,
      60466176,
      40353607,
      16777216,
      43046721,
      1e7,
      19487171,
      35831808,
      62748517,
      7529536,
      11390625,
      16777216,
      24137569,
      34012224,
      47045881,
      64e6,
      4084101,
      5153632,
      6436343,
      7962624,
      9765625,
      11881376,
      14348907,
      17210368,
      20511149,
      243e5,
      28629151,
      33554432,
      39135393,
      45435424,
      52521875,
      60466176
    ];
    i.prototype.toString = function(d, c) {
      d = d || 10, c = c | 0 || 1;
      var y;
      if (d === 16 || d === "hex") {
        y = "";
        for (var S = 0, T = 0, g = 0; g < this.length; g++) {
          var w = this.words[g], A = ((w << S | T) & 16777215).toString(16);
          T = w >>> 24 - S & 16777215, S += 2, S >= 26 && (S -= 26, g--), T !== 0 || g !== this.length - 1 ? y = m[6 - A.length] + A + y : y = A + y;
        }
        for (T !== 0 && (y = T.toString(16) + y); y.length % c !== 0; )
          y = "0" + y;
        return this.negative !== 0 && (y = "-" + y), y;
      }
      if (d === (d | 0) && d >= 2 && d <= 36) {
        var h = x[d], N = I[d];
        y = "";
        var Y = this.clone();
        for (Y.negative = 0; !Y.isZero(); ) {
          var t7 = Y.modrn(N).toString(d);
          Y = Y.idivn(N), Y.isZero() ? y = t7 + y : y = m[h - t7.length] + t7 + y;
        }
        for (this.isZero() && (y = "0" + y); y.length % c !== 0; )
          y = "0" + y;
        return this.negative !== 0 && (y = "-" + y), y;
      }
      r(!1, "Base should be between 2 and 36");
    }, i.prototype.toNumber = function() {
      var d = this.words[0];
      return this.length === 2 ? d += this.words[1] * 67108864 : this.length === 3 && this.words[2] === 1 ? d += 4503599627370496 + this.words[1] * 67108864 : this.length > 2 && r(!1, "Number can only safely store up to 53 bits"), this.negative !== 0 ? -d : d;
    }, i.prototype.toJSON = function() {
      return this.toString(16, 2);
    }, n && (i.prototype.toBuffer = function(d, c) {
      return this.toArrayLike(n, d, c);
    }), i.prototype.toArray = function(d, c) {
      return this.toArrayLike(Array, d, c);
    };
    var k = function(d, c) {
      return d.allocUnsafe ? d.allocUnsafe(c) : new d(c);
    };
    i.prototype.toArrayLike = function(d, c, y) {
      this._strip();
      var S = this.byteLength(), T = y || Math.max(1, S);
      r(S <= T, "byte array longer than desired length"), r(T > 0, "Requested array length <= 0");
      var g = k(d, T), w = c === "le" ? "LE" : "BE";
      return this["_toArrayLike" + w](g, S), g;
    }, i.prototype._toArrayLikeLE = function(d, c) {
      for (var y = 0, S = 0, T = 0, g = 0; T < this.length; T++) {
        var w = this.words[T] << g | S;
        d[y++] = w & 255, y < d.length && (d[y++] = w >> 8 & 255), y < d.length && (d[y++] = w >> 16 & 255), g === 6 ? (y < d.length && (d[y++] = w >> 24 & 255), S = 0, g = 0) : (S = w >>> 24, g += 2);
      }
      if (y < d.length)
        for (d[y++] = S; y < d.length; )
          d[y++] = 0;
    }, i.prototype._toArrayLikeBE = function(d, c) {
      for (var y = d.length - 1, S = 0, T = 0, g = 0; T < this.length; T++) {
        var w = this.words[T] << g | S;
        d[y--] = w & 255, y >= 0 && (d[y--] = w >> 8 & 255), y >= 0 && (d[y--] = w >> 16 & 255), g === 6 ? (y >= 0 && (d[y--] = w >> 24 & 255), S = 0, g = 0) : (S = w >>> 24, g += 2);
      }
      if (y >= 0)
        for (d[y--] = S; y >= 0; )
          d[y--] = 0;
    }, Math.clz32 ? i.prototype._countBits = function(d) {
      return 32 - Math.clz32(d);
    } : i.prototype._countBits = function(d) {
      var c = d, y = 0;
      return c >= 4096 && (y += 13, c >>>= 13), c >= 64 && (y += 7, c >>>= 7), c >= 8 && (y += 4, c >>>= 4), c >= 2 && (y += 2, c >>>= 2), y + c;
    }, i.prototype._zeroBits = function(d) {
      if (d === 0)
        return 26;
      var c = d, y = 0;
      return c & 8191 || (y += 13, c >>>= 13), c & 127 || (y += 7, c >>>= 7), c & 15 || (y += 4, c >>>= 4), c & 3 || (y += 2, c >>>= 2), c & 1 || y++, y;
    }, i.prototype.bitLength = function() {
      var d = this.words[this.length - 1], c = this._countBits(d);
      return (this.length - 1) * 26 + c;
    };
    function P(p) {
      for (var d = new Array(p.bitLength()), c = 0; c < d.length; c++) {
        var y = c / 26 | 0, S = c % 26;
        d[c] = p.words[y] >>> S & 1;
      }
      return d;
    }
    i.prototype.zeroBits = function() {
      if (this.isZero())
        return 0;
      for (var d = 0, c = 0; c < this.length; c++) {
        var y = this._zeroBits(this.words[c]);
        if (d += y, y !== 26)
          break;
      }
      return d;
    }, i.prototype.byteLength = function() {
      return Math.ceil(this.bitLength() / 8);
    }, i.prototype.toTwos = function(d) {
      return this.negative !== 0 ? this.abs().inotn(d).iaddn(1) : this.clone();
    }, i.prototype.fromTwos = function(d) {
      return this.testn(d - 1) ? this.notn(d).iaddn(1).ineg() : this.clone();
    }, i.prototype.isNeg = function() {
      return this.negative !== 0;
    }, i.prototype.neg = function() {
      return this.clone().ineg();
    }, i.prototype.ineg = function() {
      return this.isZero() || (this.negative ^= 1), this;
    }, i.prototype.iuor = function(d) {
      for (; this.length < d.length; )
        this.words[this.length++] = 0;
      for (var c = 0; c < d.length; c++)
        this.words[c] = this.words[c] | d.words[c];
      return this._strip();
    }, i.prototype.ior = function(d) {
      return r((this.negative | d.negative) === 0), this.iuor(d);
    }, i.prototype.or = function(d) {
      return this.length > d.length ? this.clone().ior(d) : d.clone().ior(this);
    }, i.prototype.uor = function(d) {
      return this.length > d.length ? this.clone().iuor(d) : d.clone().iuor(this);
    }, i.prototype.iuand = function(d) {
      var c;
      this.length > d.length ? c = d : c = this;
      for (var y = 0; y < c.length; y++)
        this.words[y] = this.words[y] & d.words[y];
      return this.length = c.length, this._strip();
    }, i.prototype.iand = function(d) {
      return r((this.negative | d.negative) === 0), this.iuand(d);
    }, i.prototype.and = function(d) {
      return this.length > d.length ? this.clone().iand(d) : d.clone().iand(this);
    }, i.prototype.uand = function(d) {
      return this.length > d.length ? this.clone().iuand(d) : d.clone().iuand(this);
    }, i.prototype.iuxor = function(d) {
      var c, y;
      this.length > d.length ? (c = this, y = d) : (c = d, y = this);
      for (var S = 0; S < y.length; S++)
        this.words[S] = c.words[S] ^ y.words[S];
      if (this !== c)
        for (; S < c.length; S++)
          this.words[S] = c.words[S];
      return this.length = c.length, this._strip();
    }, i.prototype.ixor = function(d) {
      return r((this.negative | d.negative) === 0), this.iuxor(d);
    }, i.prototype.xor = function(d) {
      return this.length > d.length ? this.clone().ixor(d) : d.clone().ixor(this);
    }, i.prototype.uxor = function(d) {
      return this.length > d.length ? this.clone().iuxor(d) : d.clone().iuxor(this);
    }, i.prototype.inotn = function(d) {
      r(typeof d == "number" && d >= 0);
      var c = Math.ceil(d / 26) | 0, y = d % 26;
      this._expand(c), y > 0 && c--;
      for (var S = 0; S < c; S++)
        this.words[S] = ~this.words[S] & 67108863;
      return y > 0 && (this.words[S] = ~this.words[S] & 67108863 >> 26 - y), this._strip();
    }, i.prototype.notn = function(d) {
      return this.clone().inotn(d);
    }, i.prototype.setn = function(d, c) {
      r(typeof d == "number" && d >= 0);
      var y = d / 26 | 0, S = d % 26;
      return this._expand(y + 1), c ? this.words[y] = this.words[y] | 1 << S : this.words[y] = this.words[y] & ~(1 << S), this._strip();
    }, i.prototype.iadd = function(d) {
      var c;
      if (this.negative !== 0 && d.negative === 0)
        return this.negative = 0, c = this.isub(d), this.negative ^= 1, this._normSign();
      if (this.negative === 0 && d.negative !== 0)
        return d.negative = 0, c = this.isub(d), d.negative = 1, c._normSign();
      var y, S;
      this.length > d.length ? (y = this, S = d) : (y = d, S = this);
      for (var T = 0, g = 0; g < S.length; g++)
        c = (y.words[g] | 0) + (S.words[g] | 0) + T, this.words[g] = c & 67108863, T = c >>> 26;
      for (; T !== 0 && g < y.length; g++)
        c = (y.words[g] | 0) + T, this.words[g] = c & 67108863, T = c >>> 26;
      if (this.length = y.length, T !== 0)
        this.words[this.length] = T, this.length++;
      else if (y !== this)
        for (; g < y.length; g++)
          this.words[g] = y.words[g];
      return this;
    }, i.prototype.add = function(d) {
      var c;
      return d.negative !== 0 && this.negative === 0 ? (d.negative = 0, c = this.sub(d), d.negative ^= 1, c) : d.negative === 0 && this.negative !== 0 ? (this.negative = 0, c = d.sub(this), this.negative = 1, c) : this.length > d.length ? this.clone().iadd(d) : d.clone().iadd(this);
    }, i.prototype.isub = function(d) {
      if (d.negative !== 0) {
        d.negative = 0;
        var c = this.iadd(d);
        return d.negative = 1, c._normSign();
      } else if (this.negative !== 0)
        return this.negative = 0, this.iadd(d), this.negative = 1, this._normSign();
      var y = this.cmp(d);
      if (y === 0)
        return this.negative = 0, this.length = 1, this.words[0] = 0, this;
      var S, T;
      y > 0 ? (S = this, T = d) : (S = d, T = this);
      for (var g = 0, w = 0; w < T.length; w++)
        c = (S.words[w] | 0) - (T.words[w] | 0) + g, g = c >> 26, this.words[w] = c & 67108863;
      for (; g !== 0 && w < S.length; w++)
        c = (S.words[w] | 0) + g, g = c >> 26, this.words[w] = c & 67108863;
      if (g === 0 && w < S.length && S !== this)
        for (; w < S.length; w++)
          this.words[w] = S.words[w];
      return this.length = Math.max(this.length, w), S !== this && (this.negative = 1), this._strip();
    }, i.prototype.sub = function(d) {
      return this.clone().isub(d);
    };
    function M(p, d, c) {
      c.negative = d.negative ^ p.negative;
      var y = p.length + d.length | 0;
      c.length = y, y = y - 1 | 0;
      var S = p.words[0] | 0, T = d.words[0] | 0, g = S * T, w = g & 67108863, A = g / 67108864 | 0;
      c.words[0] = w;
      for (var h = 1; h < y; h++) {
        for (var N = A >>> 26, Y = A & 67108863, t7 = Math.min(h, d.length - 1), H = Math.max(0, h - p.length + 1); H <= t7; H++) {
          var $ = h - H | 0;
          S = p.words[$] | 0, T = d.words[H] | 0, g = S * T + Y, N += g / 67108864 | 0, Y = g & 67108863;
        }
        c.words[h] = Y | 0, A = N | 0;
      }
      return A !== 0 ? c.words[h] = A | 0 : c.length--, c._strip();
    }
    var R = function(d, c, y) {
      var S = d.words, T = c.words, g = y.words, w = 0, A, h, N, Y = S[0] | 0, t7 = Y & 8191, H = Y >>> 13, $ = S[1] | 0, X = $ & 8191, i7 = $ >>> 13, J = S[2] | 0, _ = J & 8191, E = J >>> 13, j = S[3] | 0, V = j & 8191, n7 = j >>> 13, K = S[4] | 0, B = K & 8191, D = K >>> 13, W = S[5] | 0, e7 = W & 8191, o7 = W >>> 13, a7 = S[6] | 0, s7 = a7 & 8191, u7 = a7 >>> 13, m7 = S[7] | 0, p7 = m7 & 8191, l7 = m7 >>> 13, y7 = S[8] | 0, x7 = y7 & 8191, _7 = y7 >>> 13, F7 = S[9] | 0, T7 = F7 & 8191, S7 = F7 >>> 13, Y7 = T[0] | 0, k7 = Y7 & 8191, E7 = Y7 >>> 13, $7 = T[1] | 0, H7 = $7 & 8191, P7 = $7 >>> 13, pe = T[2] | 0, q7 = pe & 8191, N7 = pe >>> 13, xe = T[3] | 0, K7 = xe & 8191, R7 = xe >>> 13, be = T[4] | 0, G7 = be & 8191, M7 = be >>> 13, se = T[5] | 0, V7 = se & 8191, B7 = se >>> 13, ne = T[6] | 0, z7 = ne & 8191, C7 = ne >>> 13, me = T[7] | 0, W7 = me & 8191, D7 = me >>> 13, _e = T[8] | 0, Z7 = _e & 8191, L7 = _e >>> 13, ve = T[9] | 0, J7 = ve & 8191, ee = ve >>> 13;
      y.negative = d.negative ^ c.negative, y.length = 19, A = Math.imul(t7, k7), h = Math.imul(t7, E7), h = h + Math.imul(H, k7) | 0, N = Math.imul(H, E7);
      var We = (w + A | 0) + ((h & 8191) << 13) | 0;
      w = (N + (h >>> 13) | 0) + (We >>> 26) | 0, We &= 67108863, A = Math.imul(X, k7), h = Math.imul(X, E7), h = h + Math.imul(i7, k7) | 0, N = Math.imul(i7, E7), A = A + Math.imul(t7, H7) | 0, h = h + Math.imul(t7, P7) | 0, h = h + Math.imul(H, H7) | 0, N = N + Math.imul(H, P7) | 0;
      var Ze = (w + A | 0) + ((h & 8191) << 13) | 0;
      w = (N + (h >>> 13) | 0) + (Ze >>> 26) | 0, Ze &= 67108863, A = Math.imul(_, k7), h = Math.imul(_, E7), h = h + Math.imul(E, k7) | 0, N = Math.imul(E, E7), A = A + Math.imul(X, H7) | 0, h = h + Math.imul(X, P7) | 0, h = h + Math.imul(i7, H7) | 0, N = N + Math.imul(i7, P7) | 0, A = A + Math.imul(t7, q7) | 0, h = h + Math.imul(t7, N7) | 0, h = h + Math.imul(H, q7) | 0, N = N + Math.imul(H, N7) | 0;
      var Me = (w + A | 0) + ((h & 8191) << 13) | 0;
      w = (N + (h >>> 13) | 0) + (Me >>> 26) | 0, Me &= 67108863, A = Math.imul(V, k7), h = Math.imul(V, E7), h = h + Math.imul(n7, k7) | 0, N = Math.imul(n7, E7), A = A + Math.imul(_, H7) | 0, h = h + Math.imul(_, P7) | 0, h = h + Math.imul(E, H7) | 0, N = N + Math.imul(E, P7) | 0, A = A + Math.imul(X, q7) | 0, h = h + Math.imul(X, N7) | 0, h = h + Math.imul(i7, q7) | 0, N = N + Math.imul(i7, N7) | 0, A = A + Math.imul(t7, K7) | 0, h = h + Math.imul(t7, R7) | 0, h = h + Math.imul(H, K7) | 0, N = N + Math.imul(H, R7) | 0;
      var Ye = (w + A | 0) + ((h & 8191) << 13) | 0;
      w = (N + (h >>> 13) | 0) + (Ye >>> 26) | 0, Ye &= 67108863, A = Math.imul(B, k7), h = Math.imul(B, E7), h = h + Math.imul(D, k7) | 0, N = Math.imul(D, E7), A = A + Math.imul(V, H7) | 0, h = h + Math.imul(V, P7) | 0, h = h + Math.imul(n7, H7) | 0, N = N + Math.imul(n7, P7) | 0, A = A + Math.imul(_, q7) | 0, h = h + Math.imul(_, N7) | 0, h = h + Math.imul(E, q7) | 0, N = N + Math.imul(E, N7) | 0, A = A + Math.imul(X, K7) | 0, h = h + Math.imul(X, R7) | 0, h = h + Math.imul(i7, K7) | 0, N = N + Math.imul(i7, R7) | 0, A = A + Math.imul(t7, G7) | 0, h = h + Math.imul(t7, M7) | 0, h = h + Math.imul(H, G7) | 0, N = N + Math.imul(H, M7) | 0;
      var Xe = (w + A | 0) + ((h & 8191) << 13) | 0;
      w = (N + (h >>> 13) | 0) + (Xe >>> 26) | 0, Xe &= 67108863, A = Math.imul(e7, k7), h = Math.imul(e7, E7), h = h + Math.imul(o7, k7) | 0, N = Math.imul(o7, E7), A = A + Math.imul(B, H7) | 0, h = h + Math.imul(B, P7) | 0, h = h + Math.imul(D, H7) | 0, N = N + Math.imul(D, P7) | 0, A = A + Math.imul(V, q7) | 0, h = h + Math.imul(V, N7) | 0, h = h + Math.imul(n7, q7) | 0, N = N + Math.imul(n7, N7) | 0, A = A + Math.imul(_, K7) | 0, h = h + Math.imul(_, R7) | 0, h = h + Math.imul(E, K7) | 0, N = N + Math.imul(E, R7) | 0, A = A + Math.imul(X, G7) | 0, h = h + Math.imul(X, M7) | 0, h = h + Math.imul(i7, G7) | 0, N = N + Math.imul(i7, M7) | 0, A = A + Math.imul(t7, V7) | 0, h = h + Math.imul(t7, B7) | 0, h = h + Math.imul(H, V7) | 0, N = N + Math.imul(H, B7) | 0;
      var p0 = (w + A | 0) + ((h & 8191) << 13) | 0;
      w = (N + (h >>> 13) | 0) + (p0 >>> 26) | 0, p0 &= 67108863, A = Math.imul(s7, k7), h = Math.imul(s7, E7), h = h + Math.imul(u7, k7) | 0, N = Math.imul(u7, E7), A = A + Math.imul(e7, H7) | 0, h = h + Math.imul(e7, P7) | 0, h = h + Math.imul(o7, H7) | 0, N = N + Math.imul(o7, P7) | 0, A = A + Math.imul(B, q7) | 0, h = h + Math.imul(B, N7) | 0, h = h + Math.imul(D, q7) | 0, N = N + Math.imul(D, N7) | 0, A = A + Math.imul(V, K7) | 0, h = h + Math.imul(V, R7) | 0, h = h + Math.imul(n7, K7) | 0, N = N + Math.imul(n7, R7) | 0, A = A + Math.imul(_, G7) | 0, h = h + Math.imul(_, M7) | 0, h = h + Math.imul(E, G7) | 0, N = N + Math.imul(E, M7) | 0, A = A + Math.imul(X, V7) | 0, h = h + Math.imul(X, B7) | 0, h = h + Math.imul(i7, V7) | 0, N = N + Math.imul(i7, B7) | 0, A = A + Math.imul(t7, z7) | 0, h = h + Math.imul(t7, C7) | 0, h = h + Math.imul(H, z7) | 0, N = N + Math.imul(H, C7) | 0;
      var Je = (w + A | 0) + ((h & 8191) << 13) | 0;
      w = (N + (h >>> 13) | 0) + (Je >>> 26) | 0, Je &= 67108863, A = Math.imul(p7, k7), h = Math.imul(p7, E7), h = h + Math.imul(l7, k7) | 0, N = Math.imul(l7, E7), A = A + Math.imul(s7, H7) | 0, h = h + Math.imul(s7, P7) | 0, h = h + Math.imul(u7, H7) | 0, N = N + Math.imul(u7, P7) | 0, A = A + Math.imul(e7, q7) | 0, h = h + Math.imul(e7, N7) | 0, h = h + Math.imul(o7, q7) | 0, N = N + Math.imul(o7, N7) | 0, A = A + Math.imul(B, K7) | 0, h = h + Math.imul(B, R7) | 0, h = h + Math.imul(D, K7) | 0, N = N + Math.imul(D, R7) | 0, A = A + Math.imul(V, G7) | 0, h = h + Math.imul(V, M7) | 0, h = h + Math.imul(n7, G7) | 0, N = N + Math.imul(n7, M7) | 0, A = A + Math.imul(_, V7) | 0, h = h + Math.imul(_, B7) | 0, h = h + Math.imul(E, V7) | 0, N = N + Math.imul(E, B7) | 0, A = A + Math.imul(X, z7) | 0, h = h + Math.imul(X, C7) | 0, h = h + Math.imul(i7, z7) | 0, N = N + Math.imul(i7, C7) | 0, A = A + Math.imul(t7, W7) | 0, h = h + Math.imul(t7, D7) | 0, h = h + Math.imul(H, W7) | 0, N = N + Math.imul(H, D7) | 0;
      var h0 = (w + A | 0) + ((h & 8191) << 13) | 0;
      w = (N + (h >>> 13) | 0) + (h0 >>> 26) | 0, h0 &= 67108863, A = Math.imul(x7, k7), h = Math.imul(x7, E7), h = h + Math.imul(_7, k7) | 0, N = Math.imul(_7, E7), A = A + Math.imul(p7, H7) | 0, h = h + Math.imul(p7, P7) | 0, h = h + Math.imul(l7, H7) | 0, N = N + Math.imul(l7, P7) | 0, A = A + Math.imul(s7, q7) | 0, h = h + Math.imul(s7, N7) | 0, h = h + Math.imul(u7, q7) | 0, N = N + Math.imul(u7, N7) | 0, A = A + Math.imul(e7, K7) | 0, h = h + Math.imul(e7, R7) | 0, h = h + Math.imul(o7, K7) | 0, N = N + Math.imul(o7, R7) | 0, A = A + Math.imul(B, G7) | 0, h = h + Math.imul(B, M7) | 0, h = h + Math.imul(D, G7) | 0, N = N + Math.imul(D, M7) | 0, A = A + Math.imul(V, V7) | 0, h = h + Math.imul(V, B7) | 0, h = h + Math.imul(n7, V7) | 0, N = N + Math.imul(n7, B7) | 0, A = A + Math.imul(_, z7) | 0, h = h + Math.imul(_, C7) | 0, h = h + Math.imul(E, z7) | 0, N = N + Math.imul(E, C7) | 0, A = A + Math.imul(X, W7) | 0, h = h + Math.imul(X, D7) | 0, h = h + Math.imul(i7, W7) | 0, N = N + Math.imul(i7, D7) | 0, A = A + Math.imul(t7, Z7) | 0, h = h + Math.imul(t7, L7) | 0, h = h + Math.imul(H, Z7) | 0, N = N + Math.imul(H, L7) | 0;
      var b0 = (w + A | 0) + ((h & 8191) << 13) | 0;
      w = (N + (h >>> 13) | 0) + (b0 >>> 26) | 0, b0 &= 67108863, A = Math.imul(T7, k7), h = Math.imul(T7, E7), h = h + Math.imul(S7, k7) | 0, N = Math.imul(S7, E7), A = A + Math.imul(x7, H7) | 0, h = h + Math.imul(x7, P7) | 0, h = h + Math.imul(_7, H7) | 0, N = N + Math.imul(_7, P7) | 0, A = A + Math.imul(p7, q7) | 0, h = h + Math.imul(p7, N7) | 0, h = h + Math.imul(l7, q7) | 0, N = N + Math.imul(l7, N7) | 0, A = A + Math.imul(s7, K7) | 0, h = h + Math.imul(s7, R7) | 0, h = h + Math.imul(u7, K7) | 0, N = N + Math.imul(u7, R7) | 0, A = A + Math.imul(e7, G7) | 0, h = h + Math.imul(e7, M7) | 0, h = h + Math.imul(o7, G7) | 0, N = N + Math.imul(o7, M7) | 0, A = A + Math.imul(B, V7) | 0, h = h + Math.imul(B, B7) | 0, h = h + Math.imul(D, V7) | 0, N = N + Math.imul(D, B7) | 0, A = A + Math.imul(V, z7) | 0, h = h + Math.imul(V, C7) | 0, h = h + Math.imul(n7, z7) | 0, N = N + Math.imul(n7, C7) | 0, A = A + Math.imul(_, W7) | 0, h = h + Math.imul(_, D7) | 0, h = h + Math.imul(E, W7) | 0, N = N + Math.imul(E, D7) | 0, A = A + Math.imul(X, Z7) | 0, h = h + Math.imul(X, L7) | 0, h = h + Math.imul(i7, Z7) | 0, N = N + Math.imul(i7, L7) | 0, A = A + Math.imul(t7, J7) | 0, h = h + Math.imul(t7, ee) | 0, h = h + Math.imul(H, J7) | 0, N = N + Math.imul(H, ee) | 0;
      var Le = (w + A | 0) + ((h & 8191) << 13) | 0;
      w = (N + (h >>> 13) | 0) + (Le >>> 26) | 0, Le &= 67108863, A = Math.imul(T7, H7), h = Math.imul(T7, P7), h = h + Math.imul(S7, H7) | 0, N = Math.imul(S7, P7), A = A + Math.imul(x7, q7) | 0, h = h + Math.imul(x7, N7) | 0, h = h + Math.imul(_7, q7) | 0, N = N + Math.imul(_7, N7) | 0, A = A + Math.imul(p7, K7) | 0, h = h + Math.imul(p7, R7) | 0, h = h + Math.imul(l7, K7) | 0, N = N + Math.imul(l7, R7) | 0, A = A + Math.imul(s7, G7) | 0, h = h + Math.imul(s7, M7) | 0, h = h + Math.imul(u7, G7) | 0, N = N + Math.imul(u7, M7) | 0, A = A + Math.imul(e7, V7) | 0, h = h + Math.imul(e7, B7) | 0, h = h + Math.imul(o7, V7) | 0, N = N + Math.imul(o7, B7) | 0, A = A + Math.imul(B, z7) | 0, h = h + Math.imul(B, C7) | 0, h = h + Math.imul(D, z7) | 0, N = N + Math.imul(D, C7) | 0, A = A + Math.imul(V, W7) | 0, h = h + Math.imul(V, D7) | 0, h = h + Math.imul(n7, W7) | 0, N = N + Math.imul(n7, D7) | 0, A = A + Math.imul(_, Z7) | 0, h = h + Math.imul(_, L7) | 0, h = h + Math.imul(E, Z7) | 0, N = N + Math.imul(E, L7) | 0, A = A + Math.imul(X, J7) | 0, h = h + Math.imul(X, ee) | 0, h = h + Math.imul(i7, J7) | 0, N = N + Math.imul(i7, ee) | 0;
      var Ke = (w + A | 0) + ((h & 8191) << 13) | 0;
      w = (N + (h >>> 13) | 0) + (Ke >>> 26) | 0, Ke &= 67108863, A = Math.imul(T7, q7), h = Math.imul(T7, N7), h = h + Math.imul(S7, q7) | 0, N = Math.imul(S7, N7), A = A + Math.imul(x7, K7) | 0, h = h + Math.imul(x7, R7) | 0, h = h + Math.imul(_7, K7) | 0, N = N + Math.imul(_7, R7) | 0, A = A + Math.imul(p7, G7) | 0, h = h + Math.imul(p7, M7) | 0, h = h + Math.imul(l7, G7) | 0, N = N + Math.imul(l7, M7) | 0, A = A + Math.imul(s7, V7) | 0, h = h + Math.imul(s7, B7) | 0, h = h + Math.imul(u7, V7) | 0, N = N + Math.imul(u7, B7) | 0, A = A + Math.imul(e7, z7) | 0, h = h + Math.imul(e7, C7) | 0, h = h + Math.imul(o7, z7) | 0, N = N + Math.imul(o7, C7) | 0, A = A + Math.imul(B, W7) | 0, h = h + Math.imul(B, D7) | 0, h = h + Math.imul(D, W7) | 0, N = N + Math.imul(D, D7) | 0, A = A + Math.imul(V, Z7) | 0, h = h + Math.imul(V, L7) | 0, h = h + Math.imul(n7, Z7) | 0, N = N + Math.imul(n7, L7) | 0, A = A + Math.imul(_, J7) | 0, h = h + Math.imul(_, ee) | 0, h = h + Math.imul(E, J7) | 0, N = N + Math.imul(E, ee) | 0;
      var m0 = (w + A | 0) + ((h & 8191) << 13) | 0;
      w = (N + (h >>> 13) | 0) + (m0 >>> 26) | 0, m0 &= 67108863, A = Math.imul(T7, K7), h = Math.imul(T7, R7), h = h + Math.imul(S7, K7) | 0, N = Math.imul(S7, R7), A = A + Math.imul(x7, G7) | 0, h = h + Math.imul(x7, M7) | 0, h = h + Math.imul(_7, G7) | 0, N = N + Math.imul(_7, M7) | 0, A = A + Math.imul(p7, V7) | 0, h = h + Math.imul(p7, B7) | 0, h = h + Math.imul(l7, V7) | 0, N = N + Math.imul(l7, B7) | 0, A = A + Math.imul(s7, z7) | 0, h = h + Math.imul(s7, C7) | 0, h = h + Math.imul(u7, z7) | 0, N = N + Math.imul(u7, C7) | 0, A = A + Math.imul(e7, W7) | 0, h = h + Math.imul(e7, D7) | 0, h = h + Math.imul(o7, W7) | 0, N = N + Math.imul(o7, D7) | 0, A = A + Math.imul(B, Z7) | 0, h = h + Math.imul(B, L7) | 0, h = h + Math.imul(D, Z7) | 0, N = N + Math.imul(D, L7) | 0, A = A + Math.imul(V, J7) | 0, h = h + Math.imul(V, ee) | 0, h = h + Math.imul(n7, J7) | 0, N = N + Math.imul(n7, ee) | 0;
      var Qe = (w + A | 0) + ((h & 8191) << 13) | 0;
      w = (N + (h >>> 13) | 0) + (Qe >>> 26) | 0, Qe &= 67108863, A = Math.imul(T7, G7), h = Math.imul(T7, M7), h = h + Math.imul(S7, G7) | 0, N = Math.imul(S7, M7), A = A + Math.imul(x7, V7) | 0, h = h + Math.imul(x7, B7) | 0, h = h + Math.imul(_7, V7) | 0, N = N + Math.imul(_7, B7) | 0, A = A + Math.imul(p7, z7) | 0, h = h + Math.imul(p7, C7) | 0, h = h + Math.imul(l7, z7) | 0, N = N + Math.imul(l7, C7) | 0, A = A + Math.imul(s7, W7) | 0, h = h + Math.imul(s7, D7) | 0, h = h + Math.imul(u7, W7) | 0, N = N + Math.imul(u7, D7) | 0, A = A + Math.imul(e7, Z7) | 0, h = h + Math.imul(e7, L7) | 0, h = h + Math.imul(o7, Z7) | 0, N = N + Math.imul(o7, L7) | 0, A = A + Math.imul(B, J7) | 0, h = h + Math.imul(B, ee) | 0, h = h + Math.imul(D, J7) | 0, N = N + Math.imul(D, ee) | 0;
      var v0 = (w + A | 0) + ((h & 8191) << 13) | 0;
      w = (N + (h >>> 13) | 0) + (v0 >>> 26) | 0, v0 &= 67108863, A = Math.imul(T7, V7), h = Math.imul(T7, B7), h = h + Math.imul(S7, V7) | 0, N = Math.imul(S7, B7), A = A + Math.imul(x7, z7) | 0, h = h + Math.imul(x7, C7) | 0, h = h + Math.imul(_7, z7) | 0, N = N + Math.imul(_7, C7) | 0, A = A + Math.imul(p7, W7) | 0, h = h + Math.imul(p7, D7) | 0, h = h + Math.imul(l7, W7) | 0, N = N + Math.imul(l7, D7) | 0, A = A + Math.imul(s7, Z7) | 0, h = h + Math.imul(s7, L7) | 0, h = h + Math.imul(u7, Z7) | 0, N = N + Math.imul(u7, L7) | 0, A = A + Math.imul(e7, J7) | 0, h = h + Math.imul(e7, ee) | 0, h = h + Math.imul(o7, J7) | 0, N = N + Math.imul(o7, ee) | 0;
      var y0 = (w + A | 0) + ((h & 8191) << 13) | 0;
      w = (N + (h >>> 13) | 0) + (y0 >>> 26) | 0, y0 &= 67108863, A = Math.imul(T7, z7), h = Math.imul(T7, C7), h = h + Math.imul(S7, z7) | 0, N = Math.imul(S7, C7), A = A + Math.imul(x7, W7) | 0, h = h + Math.imul(x7, D7) | 0, h = h + Math.imul(_7, W7) | 0, N = N + Math.imul(_7, D7) | 0, A = A + Math.imul(p7, Z7) | 0, h = h + Math.imul(p7, L7) | 0, h = h + Math.imul(l7, Z7) | 0, N = N + Math.imul(l7, L7) | 0, A = A + Math.imul(s7, J7) | 0, h = h + Math.imul(s7, ee) | 0, h = h + Math.imul(u7, J7) | 0, N = N + Math.imul(u7, ee) | 0;
      var g0 = (w + A | 0) + ((h & 8191) << 13) | 0;
      w = (N + (h >>> 13) | 0) + (g0 >>> 26) | 0, g0 &= 67108863, A = Math.imul(T7, W7), h = Math.imul(T7, D7), h = h + Math.imul(S7, W7) | 0, N = Math.imul(S7, D7), A = A + Math.imul(x7, Z7) | 0, h = h + Math.imul(x7, L7) | 0, h = h + Math.imul(_7, Z7) | 0, N = N + Math.imul(_7, L7) | 0, A = A + Math.imul(p7, J7) | 0, h = h + Math.imul(p7, ee) | 0, h = h + Math.imul(l7, J7) | 0, N = N + Math.imul(l7, ee) | 0;
      var P0 = (w + A | 0) + ((h & 8191) << 13) | 0;
      w = (N + (h >>> 13) | 0) + (P0 >>> 26) | 0, P0 &= 67108863, A = Math.imul(T7, Z7), h = Math.imul(T7, L7), h = h + Math.imul(S7, Z7) | 0, N = Math.imul(S7, L7), A = A + Math.imul(x7, J7) | 0, h = h + Math.imul(x7, ee) | 0, h = h + Math.imul(_7, J7) | 0, N = N + Math.imul(_7, ee) | 0;
      var q0 = (w + A | 0) + ((h & 8191) << 13) | 0;
      w = (N + (h >>> 13) | 0) + (q0 >>> 26) | 0, q0 &= 67108863, A = Math.imul(T7, J7), h = Math.imul(T7, ee), h = h + Math.imul(S7, J7) | 0, N = Math.imul(S7, ee);
      var It = (w + A | 0) + ((h & 8191) << 13) | 0;
      return w = (N + (h >>> 13) | 0) + (It >>> 26) | 0, It &= 67108863, g[0] = We, g[1] = Ze, g[2] = Me, g[3] = Ye, g[4] = Xe, g[5] = p0, g[6] = Je, g[7] = h0, g[8] = b0, g[9] = Le, g[10] = Ke, g[11] = m0, g[12] = Qe, g[13] = v0, g[14] = y0, g[15] = g0, g[16] = P0, g[17] = q0, g[18] = It, w !== 0 && (g[19] = w, y.length++), y;
    };
    Math.imul || (R = M);
    function F(p, d, c) {
      c.negative = d.negative ^ p.negative, c.length = p.length + d.length;
      for (var y = 0, S = 0, T = 0; T < c.length - 1; T++) {
        var g = S;
        S = 0;
        for (var w = y & 67108863, A = Math.min(T, d.length - 1), h = Math.max(0, T - p.length + 1); h <= A; h++) {
          var N = T - h, Y = p.words[N] | 0, t7 = d.words[h] | 0, H = Y * t7, $ = H & 67108863;
          g = g + (H / 67108864 | 0) | 0, $ = $ + w | 0, w = $ & 67108863, g = g + ($ >>> 26) | 0, S += g >>> 26, g &= 67108863;
        }
        c.words[T] = w, y = g, g = S;
      }
      return y !== 0 ? c.words[T] = y : c.length--, c._strip();
    }
    function C(p, d, c) {
      return F(p, d, c);
    }
    i.prototype.mulTo = function(d, c) {
      var y, S = this.length + d.length;
      return this.length === 10 && d.length === 10 ? y = R(this, d, c) : S < 63 ? y = M(this, d, c) : S < 1024 ? y = F(this, d, c) : y = C(this, d, c), y;
    }, i.prototype.mul = function(d) {
      var c = new i(null);
      return c.words = new Array(this.length + d.length), this.mulTo(d, c);
    }, i.prototype.mulf = function(d) {
      var c = new i(null);
      return c.words = new Array(this.length + d.length), C(this, d, c);
    }, i.prototype.imul = function(d) {
      return this.clone().mulTo(d, this);
    }, i.prototype.imuln = function(d) {
      var c = d < 0;
      c && (d = -d), r(typeof d == "number"), r(d < 67108864);
      for (var y = 0, S = 0; S < this.length; S++) {
        var T = (this.words[S] | 0) * d, g = (T & 67108863) + (y & 67108863);
        y >>= 26, y += T / 67108864 | 0, y += g >>> 26, this.words[S] = g & 67108863;
      }
      return y !== 0 && (this.words[S] = y, this.length++), c ? this.ineg() : this;
    }, i.prototype.muln = function(d) {
      return this.clone().imuln(d);
    }, i.prototype.sqr = function() {
      return this.mul(this);
    }, i.prototype.isqr = function() {
      return this.imul(this.clone());
    }, i.prototype.pow = function(d) {
      var c = P(d);
      if (c.length === 0)
        return new i(1);
      for (var y = this, S = 0; S < c.length && c[S] === 0; S++, y = y.sqr())
        ;
      if (++S < c.length)
        for (var T = y.sqr(); S < c.length; S++, T = T.sqr())
          c[S] !== 0 && (y = y.mul(T));
      return y;
    }, i.prototype.iushln = function(d) {
      r(typeof d == "number" && d >= 0);
      var c = d % 26, y = (d - c) / 26, S = 67108863 >>> 26 - c << 26 - c, T;
      if (c !== 0) {
        var g = 0;
        for (T = 0; T < this.length; T++) {
          var w = this.words[T] & S, A = (this.words[T] | 0) - w << c;
          this.words[T] = A | g, g = w >>> 26 - c;
        }
        g && (this.words[T] = g, this.length++);
      }
      if (y !== 0) {
        for (T = this.length - 1; T >= 0; T--)
          this.words[T + y] = this.words[T];
        for (T = 0; T < y; T++)
          this.words[T] = 0;
        this.length += y;
      }
      return this._strip();
    }, i.prototype.ishln = function(d) {
      return r(this.negative === 0), this.iushln(d);
    }, i.prototype.iushrn = function(d, c, y) {
      r(typeof d == "number" && d >= 0);
      var S;
      c ? S = (c - c % 26) / 26 : S = 0;
      var T = d % 26, g = Math.min((d - T) / 26, this.length), w = 67108863 ^ 67108863 >>> T << T, A = y;
      if (S -= g, S = Math.max(0, S), A) {
        for (var h = 0; h < g; h++)
          A.words[h] = this.words[h];
        A.length = g;
      }
      if (g !== 0)
        if (this.length > g)
          for (this.length -= g, h = 0; h < this.length; h++)
            this.words[h] = this.words[h + g];
        else
          this.words[0] = 0, this.length = 1;
      var N = 0;
      for (h = this.length - 1; h >= 0 && (N !== 0 || h >= S); h--) {
        var Y = this.words[h] | 0;
        this.words[h] = N << 26 - T | Y >>> T, N = Y & w;
      }
      return A && N !== 0 && (A.words[A.length++] = N), this.length === 0 && (this.words[0] = 0, this.length = 1), this._strip();
    }, i.prototype.ishrn = function(d, c, y) {
      return r(this.negative === 0), this.iushrn(d, c, y);
    }, i.prototype.shln = function(d) {
      return this.clone().ishln(d);
    }, i.prototype.ushln = function(d) {
      return this.clone().iushln(d);
    }, i.prototype.shrn = function(d) {
      return this.clone().ishrn(d);
    }, i.prototype.ushrn = function(d) {
      return this.clone().iushrn(d);
    }, i.prototype.testn = function(d) {
      r(typeof d == "number" && d >= 0);
      var c = d % 26, y = (d - c) / 26, S = 1 << c;
      if (this.length <= y)
        return !1;
      var T = this.words[y];
      return !!(T & S);
    }, i.prototype.imaskn = function(d) {
      r(typeof d == "number" && d >= 0);
      var c = d % 26, y = (d - c) / 26;
      if (r(this.negative === 0, "imaskn works only with positive numbers"), this.length <= y)
        return this;
      if (c !== 0 && y++, this.length = Math.min(y, this.length), c !== 0) {
        var S = 67108863 ^ 67108863 >>> c << c;
        this.words[this.length - 1] &= S;
      }
      return this._strip();
    }, i.prototype.maskn = function(d) {
      return this.clone().imaskn(d);
    }, i.prototype.iaddn = function(d) {
      return r(typeof d == "number"), r(d < 67108864), d < 0 ? this.isubn(-d) : this.negative !== 0 ? this.length === 1 && (this.words[0] | 0) <= d ? (this.words[0] = d - (this.words[0] | 0), this.negative = 0, this) : (this.negative = 0, this.isubn(d), this.negative = 1, this) : this._iaddn(d);
    }, i.prototype._iaddn = function(d) {
      this.words[0] += d;
      for (var c = 0; c < this.length && this.words[c] >= 67108864; c++)
        this.words[c] -= 67108864, c === this.length - 1 ? this.words[c + 1] = 1 : this.words[c + 1]++;
      return this.length = Math.max(this.length, c + 1), this;
    }, i.prototype.isubn = function(d) {
      if (r(typeof d == "number"), r(d < 67108864), d < 0)
        return this.iaddn(-d);
      if (this.negative !== 0)
        return this.negative = 0, this.iaddn(d), this.negative = 1, this;
      if (this.words[0] -= d, this.length === 1 && this.words[0] < 0)
        this.words[0] = -this.words[0], this.negative = 1;
      else
        for (var c = 0; c < this.length && this.words[c] < 0; c++)
          this.words[c] += 67108864, this.words[c + 1] -= 1;
      return this._strip();
    }, i.prototype.addn = function(d) {
      return this.clone().iaddn(d);
    }, i.prototype.subn = function(d) {
      return this.clone().isubn(d);
    }, i.prototype.iabs = function() {
      return this.negative = 0, this;
    }, i.prototype.abs = function() {
      return this.clone().iabs();
    }, i.prototype._ishlnsubmul = function(d, c, y) {
      var S = d.length + y, T;
      this._expand(S);
      var g, w = 0;
      for (T = 0; T < d.length; T++) {
        g = (this.words[T + y] | 0) + w;
        var A = (d.words[T] | 0) * c;
        g -= A & 67108863, w = (g >> 26) - (A / 67108864 | 0), this.words[T + y] = g & 67108863;
      }
      for (; T < this.length - y; T++)
        g = (this.words[T + y] | 0) + w, w = g >> 26, this.words[T + y] = g & 67108863;
      if (w === 0)
        return this._strip();
      for (r(w === -1), w = 0, T = 0; T < this.length; T++)
        g = -(this.words[T] | 0) + w, w = g >> 26, this.words[T] = g & 67108863;
      return this.negative = 1, this._strip();
    }, i.prototype._wordDiv = function(d, c) {
      var y = this.length - d.length, S = this.clone(), T = d, g = T.words[T.length - 1] | 0, w = this._countBits(g);
      y = 26 - w, y !== 0 && (T = T.ushln(y), S.iushln(y), g = T.words[T.length - 1] | 0);
      var A = S.length - T.length, h;
      if (c !== "mod") {
        h = new i(null), h.length = A + 1, h.words = new Array(h.length);
        for (var N = 0; N < h.length; N++)
          h.words[N] = 0;
      }
      var Y = S.clone()._ishlnsubmul(T, 1, A);
      Y.negative === 0 && (S = Y, h && (h.words[A] = 1));
      for (var t7 = A - 1; t7 >= 0; t7--) {
        var H = (S.words[T.length + t7] | 0) * 67108864 + (S.words[T.length + t7 - 1] | 0);
        for (H = Math.min(H / g | 0, 67108863), S._ishlnsubmul(T, H, t7); S.negative !== 0; )
          H--, S.negative = 0, S._ishlnsubmul(T, 1, t7), S.isZero() || (S.negative ^= 1);
        h && (h.words[t7] = H);
      }
      return h && h._strip(), S._strip(), c !== "div" && y !== 0 && S.iushrn(y), {
        div: h || null,
        mod: S
      };
    }, i.prototype.divmod = function(d, c, y) {
      if (r(!d.isZero()), this.isZero())
        return {
          div: new i(0),
          mod: new i(0)
        };
      var S, T, g;
      return this.negative !== 0 && d.negative === 0 ? (g = this.neg().divmod(d, c), c !== "mod" && (S = g.div.neg()), c !== "div" && (T = g.mod.neg(), y && T.negative !== 0 && T.iadd(d)), {
        div: S,
        mod: T
      }) : this.negative === 0 && d.negative !== 0 ? (g = this.divmod(d.neg(), c), c !== "mod" && (S = g.div.neg()), {
        div: S,
        mod: g.mod
      }) : this.negative & d.negative ? (g = this.neg().divmod(d.neg(), c), c !== "div" && (T = g.mod.neg(), y && T.negative !== 0 && T.isub(d)), {
        div: g.div,
        mod: T
      }) : d.length > this.length || this.cmp(d) < 0 ? {
        div: new i(0),
        mod: this
      } : d.length === 1 ? c === "div" ? {
        div: this.divn(d.words[0]),
        mod: null
      } : c === "mod" ? {
        div: null,
        mod: new i(this.modrn(d.words[0]))
      } : {
        div: this.divn(d.words[0]),
        mod: new i(this.modrn(d.words[0]))
      } : this._wordDiv(d, c);
    }, i.prototype.div = function(d) {
      return this.divmod(d, "div", !1).div;
    }, i.prototype.mod = function(d) {
      return this.divmod(d, "mod", !1).mod;
    }, i.prototype.umod = function(d) {
      return this.divmod(d, "mod", !0).mod;
    }, i.prototype.divRound = function(d) {
      var c = this.divmod(d);
      if (c.mod.isZero())
        return c.div;
      var y = c.div.negative !== 0 ? c.mod.isub(d) : c.mod, S = d.ushrn(1), T = d.andln(1), g = y.cmp(S);
      return g < 0 || T === 1 && g === 0 ? c.div : c.div.negative !== 0 ? c.div.isubn(1) : c.div.iaddn(1);
    }, i.prototype.modrn = function(d) {
      var c = d < 0;
      c && (d = -d), r(d <= 67108863);
      for (var y = (1 << 26) % d, S = 0, T = this.length - 1; T >= 0; T--)
        S = (y * S + (this.words[T] | 0)) % d;
      return c ? -S : S;
    }, i.prototype.modn = function(d) {
      return this.modrn(d);
    }, i.prototype.idivn = function(d) {
      var c = d < 0;
      c && (d = -d), r(d <= 67108863);
      for (var y = 0, S = this.length - 1; S >= 0; S--) {
        var T = (this.words[S] | 0) + y * 67108864;
        this.words[S] = T / d | 0, y = T % d;
      }
      return this._strip(), c ? this.ineg() : this;
    }, i.prototype.divn = function(d) {
      return this.clone().idivn(d);
    }, i.prototype.egcd = function(d) {
      r(d.negative === 0), r(!d.isZero());
      var c = this, y = d.clone();
      c.negative !== 0 ? c = c.umod(d) : c = c.clone();
      for (var S = new i(1), T = new i(0), g = new i(0), w = new i(1), A = 0; c.isEven() && y.isEven(); )
        c.iushrn(1), y.iushrn(1), ++A;
      for (var h = y.clone(), N = c.clone(); !c.isZero(); ) {
        for (var Y = 0, t7 = 1; !(c.words[0] & t7) && Y < 26; ++Y, t7 <<= 1)
          ;
        if (Y > 0)
          for (c.iushrn(Y); Y-- > 0; )
            (S.isOdd() || T.isOdd()) && (S.iadd(h), T.isub(N)), S.iushrn(1), T.iushrn(1);
        for (var H = 0, $ = 1; !(y.words[0] & $) && H < 26; ++H, $ <<= 1)
          ;
        if (H > 0)
          for (y.iushrn(H); H-- > 0; )
            (g.isOdd() || w.isOdd()) && (g.iadd(h), w.isub(N)), g.iushrn(1), w.iushrn(1);
        c.cmp(y) >= 0 ? (c.isub(y), S.isub(g), T.isub(w)) : (y.isub(c), g.isub(S), w.isub(T));
      }
      return {
        a: g,
        b: w,
        gcd: y.iushln(A)
      };
    }, i.prototype._invmp = function(d) {
      r(d.negative === 0), r(!d.isZero());
      var c = this, y = d.clone();
      c.negative !== 0 ? c = c.umod(d) : c = c.clone();
      for (var S = new i(1), T = new i(0), g = y.clone(); c.cmpn(1) > 0 && y.cmpn(1) > 0; ) {
        for (var w = 0, A = 1; !(c.words[0] & A) && w < 26; ++w, A <<= 1)
          ;
        if (w > 0)
          for (c.iushrn(w); w-- > 0; )
            S.isOdd() && S.iadd(g), S.iushrn(1);
        for (var h = 0, N = 1; !(y.words[0] & N) && h < 26; ++h, N <<= 1)
          ;
        if (h > 0)
          for (y.iushrn(h); h-- > 0; )
            T.isOdd() && T.iadd(g), T.iushrn(1);
        c.cmp(y) >= 0 ? (c.isub(y), S.isub(T)) : (y.isub(c), T.isub(S));
      }
      var Y;
      return c.cmpn(1) === 0 ? Y = S : Y = T, Y.cmpn(0) < 0 && Y.iadd(d), Y;
    }, i.prototype.gcd = function(d) {
      if (this.isZero())
        return d.abs();
      if (d.isZero())
        return this.abs();
      var c = this.clone(), y = d.clone();
      c.negative = 0, y.negative = 0;
      for (var S = 0; c.isEven() && y.isEven(); S++)
        c.iushrn(1), y.iushrn(1);
      do {
        for (; c.isEven(); )
          c.iushrn(1);
        for (; y.isEven(); )
          y.iushrn(1);
        var T = c.cmp(y);
        if (T < 0) {
          var g = c;
          c = y, y = g;
        } else if (T === 0 || y.cmpn(1) === 0)
          break;
        c.isub(y);
      } while (!0);
      return y.iushln(S);
    }, i.prototype.invm = function(d) {
      return this.egcd(d).a.umod(d);
    }, i.prototype.isEven = function() {
      return (this.words[0] & 1) === 0;
    }, i.prototype.isOdd = function() {
      return (this.words[0] & 1) === 1;
    }, i.prototype.andln = function(d) {
      return this.words[0] & d;
    }, i.prototype.bincn = function(d) {
      r(typeof d == "number");
      var c = d % 26, y = (d - c) / 26, S = 1 << c;
      if (this.length <= y)
        return this._expand(y + 1), this.words[y] |= S, this;
      for (var T = S, g = y; T !== 0 && g < this.length; g++) {
        var w = this.words[g] | 0;
        w += T, T = w >>> 26, w &= 67108863, this.words[g] = w;
      }
      return T !== 0 && (this.words[g] = T, this.length++), this;
    }, i.prototype.isZero = function() {
      return this.length === 1 && this.words[0] === 0;
    }, i.prototype.cmpn = function(d) {
      var c = d < 0;
      if (this.negative !== 0 && !c)
        return -1;
      if (this.negative === 0 && c)
        return 1;
      this._strip();
      var y;
      if (this.length > 1)
        y = 1;
      else {
        c && (d = -d), r(d <= 67108863, "Number is too big");
        var S = this.words[0] | 0;
        y = S === d ? 0 : S < d ? -1 : 1;
      }
      return this.negative !== 0 ? -y | 0 : y;
    }, i.prototype.cmp = function(d) {
      if (this.negative !== 0 && d.negative === 0)
        return -1;
      if (this.negative === 0 && d.negative !== 0)
        return 1;
      var c = this.ucmp(d);
      return this.negative !== 0 ? -c | 0 : c;
    }, i.prototype.ucmp = function(d) {
      if (this.length > d.length)
        return 1;
      if (this.length < d.length)
        return -1;
      for (var c = 0, y = this.length - 1; y >= 0; y--) {
        var S = this.words[y] | 0, T = d.words[y] | 0;
        if (S !== T) {
          S < T ? c = -1 : S > T && (c = 1);
          break;
        }
      }
      return c;
    }, i.prototype.gtn = function(d) {
      return this.cmpn(d) === 1;
    }, i.prototype.gt = function(d) {
      return this.cmp(d) === 1;
    }, i.prototype.gten = function(d) {
      return this.cmpn(d) >= 0;
    }, i.prototype.gte = function(d) {
      return this.cmp(d) >= 0;
    }, i.prototype.ltn = function(d) {
      return this.cmpn(d) === -1;
    }, i.prototype.lt = function(d) {
      return this.cmp(d) === -1;
    }, i.prototype.lten = function(d) {
      return this.cmpn(d) <= 0;
    }, i.prototype.lte = function(d) {
      return this.cmp(d) <= 0;
    }, i.prototype.eqn = function(d) {
      return this.cmpn(d) === 0;
    }, i.prototype.eq = function(d) {
      return this.cmp(d) === 0;
    }, i.red = function(d) {
      return new O(d);
    }, i.prototype.toRed = function(d) {
      return r(!this.red, "Already a number in reduction context"), r(this.negative === 0, "red works only with positives"), d.convertTo(this)._forceRed(d);
    }, i.prototype.fromRed = function() {
      return r(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
    }, i.prototype._forceRed = function(d) {
      return this.red = d, this;
    }, i.prototype.forceRed = function(d) {
      return r(!this.red, "Already a number in reduction context"), this._forceRed(d);
    }, i.prototype.redAdd = function(d) {
      return r(this.red, "redAdd works only with red numbers"), this.red.add(this, d);
    }, i.prototype.redIAdd = function(d) {
      return r(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, d);
    }, i.prototype.redSub = function(d) {
      return r(this.red, "redSub works only with red numbers"), this.red.sub(this, d);
    }, i.prototype.redISub = function(d) {
      return r(this.red, "redISub works only with red numbers"), this.red.isub(this, d);
    }, i.prototype.redShl = function(d) {
      return r(this.red, "redShl works only with red numbers"), this.red.shl(this, d);
    }, i.prototype.redMul = function(d) {
      return r(this.red, "redMul works only with red numbers"), this.red._verify2(this, d), this.red.mul(this, d);
    }, i.prototype.redIMul = function(d) {
      return r(this.red, "redMul works only with red numbers"), this.red._verify2(this, d), this.red.imul(this, d);
    }, i.prototype.redSqr = function() {
      return r(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
    }, i.prototype.redISqr = function() {
      return r(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
    }, i.prototype.redSqrt = function() {
      return r(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
    }, i.prototype.redInvm = function() {
      return r(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
    }, i.prototype.redNeg = function() {
      return r(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
    }, i.prototype.redPow = function(d) {
      return r(this.red && !d.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, d);
    };
    var L = {
      k256: null,
      p224: null,
      p192: null,
      p25519: null
    };
    function U(p, d) {
      this.name = p, this.p = new i(d, 16), this.n = this.p.bitLength(), this.k = new i(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
    }
    U.prototype._tmp = function() {
      var d = new i(null);
      return d.words = new Array(Math.ceil(this.n / 13)), d;
    }, U.prototype.ireduce = function(d) {
      var c = d, y;
      do
        this.split(c, this.tmp), c = this.imulK(c), c = c.iadd(this.tmp), y = c.bitLength();
      while (y > this.n);
      var S = y < this.n ? -1 : c.ucmp(this.p);
      return S === 0 ? (c.words[0] = 0, c.length = 1) : S > 0 ? c.isub(this.p) : c.strip !== void 0 ? c.strip() : c._strip(), c;
    }, U.prototype.split = function(d, c) {
      d.iushrn(this.n, 0, c);
    }, U.prototype.imulK = function(d) {
      return d.imul(this.k);
    };
    function q() {
      U.call(
        this,
        "k256",
        "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f"
      );
    }
    f(q, U), q.prototype.split = function(d, c) {
      for (var y = 4194303, S = Math.min(d.length, 9), T = 0; T < S; T++)
        c.words[T] = d.words[T];
      if (c.length = S, d.length <= 9) {
        d.words[0] = 0, d.length = 1;
        return;
      }
      var g = d.words[9];
      for (c.words[c.length++] = g & y, T = 10; T < d.length; T++) {
        var w = d.words[T] | 0;
        d.words[T - 10] = (w & y) << 4 | g >>> 22, g = w;
      }
      g >>>= 22, d.words[T - 10] = g, g === 0 && d.length > 10 ? d.length -= 10 : d.length -= 9;
    }, q.prototype.imulK = function(d) {
      d.words[d.length] = 0, d.words[d.length + 1] = 0, d.length += 2;
      for (var c = 0, y = 0; y < d.length; y++) {
        var S = d.words[y] | 0;
        c += S * 977, d.words[y] = c & 67108863, c = S * 64 + (c / 67108864 | 0);
      }
      return d.words[d.length - 1] === 0 && (d.length--, d.words[d.length - 1] === 0 && d.length--), d;
    };
    function Z() {
      U.call(
        this,
        "p224",
        "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001"
      );
    }
    f(Z, U);
    function z() {
      U.call(
        this,
        "p192",
        "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff"
      );
    }
    f(z, U);
    function G() {
      U.call(
        this,
        "25519",
        "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed"
      );
    }
    f(G, U), G.prototype.imulK = function(d) {
      for (var c = 0, y = 0; y < d.length; y++) {
        var S = (d.words[y] | 0) * 19 + c, T = S & 67108863;
        S >>>= 26, d.words[y] = T, c = S;
      }
      return c !== 0 && (d.words[d.length++] = c), d;
    }, i._prime = function(d) {
      if (L[d])
        return L[d];
      var c;
      if (d === "k256")
        c = new q();
      else if (d === "p224")
        c = new Z();
      else if (d === "p192")
        c = new z();
      else if (d === "p25519")
        c = new G();
      else
        throw new Error("Unknown prime " + d);
      return L[d] = c, c;
    };
    function O(p) {
      if (typeof p == "string") {
        var d = i._prime(p);
        this.m = d.p, this.prime = d;
      } else
        r(p.gtn(1), "modulus must be greater than 1"), this.m = p, this.prime = null;
    }
    O.prototype._verify1 = function(d) {
      r(d.negative === 0, "red works only with positives"), r(d.red, "red works only with red numbers");
    }, O.prototype._verify2 = function(d, c) {
      r((d.negative | c.negative) === 0, "red works only with positives"), r(
        d.red && d.red === c.red,
        "red works only with red numbers"
      );
    }, O.prototype.imod = function(d) {
      return this.prime ? this.prime.ireduce(d)._forceRed(this) : (l(d, d.umod(this.m)._forceRed(this)), d);
    }, O.prototype.neg = function(d) {
      return d.isZero() ? d.clone() : this.m.sub(d)._forceRed(this);
    }, O.prototype.add = function(d, c) {
      this._verify2(d, c);
      var y = d.add(c);
      return y.cmp(this.m) >= 0 && y.isub(this.m), y._forceRed(this);
    }, O.prototype.iadd = function(d, c) {
      this._verify2(d, c);
      var y = d.iadd(c);
      return y.cmp(this.m) >= 0 && y.isub(this.m), y;
    }, O.prototype.sub = function(d, c) {
      this._verify2(d, c);
      var y = d.sub(c);
      return y.cmpn(0) < 0 && y.iadd(this.m), y._forceRed(this);
    }, O.prototype.isub = function(d, c) {
      this._verify2(d, c);
      var y = d.isub(c);
      return y.cmpn(0) < 0 && y.iadd(this.m), y;
    }, O.prototype.shl = function(d, c) {
      return this._verify1(d), this.imod(d.ushln(c));
    }, O.prototype.imul = function(d, c) {
      return this._verify2(d, c), this.imod(d.imul(c));
    }, O.prototype.mul = function(d, c) {
      return this._verify2(d, c), this.imod(d.mul(c));
    }, O.prototype.isqr = function(d) {
      return this.imul(d, d.clone());
    }, O.prototype.sqr = function(d) {
      return this.mul(d, d);
    }, O.prototype.sqrt = function(d) {
      if (d.isZero())
        return d.clone();
      var c = this.m.andln(3);
      if (r(c % 2 === 1), c === 3) {
        var y = this.m.add(new i(1)).iushrn(2);
        return this.pow(d, y);
      }
      for (var S = this.m.subn(1), T = 0; !S.isZero() && S.andln(1) === 0; )
        T++, S.iushrn(1);
      r(!S.isZero());
      var g = new i(1).toRed(this), w = g.redNeg(), A = this.m.subn(1).iushrn(1), h = this.m.bitLength();
      for (h = new i(2 * h * h).toRed(this); this.pow(h, A).cmp(w) !== 0; )
        h.redIAdd(w);
      for (var N = this.pow(h, S), Y = this.pow(d, S.addn(1).iushrn(1)), t7 = this.pow(d, S), H = T; t7.cmp(g) !== 0; ) {
        for (var $ = t7, X = 0; $.cmp(g) !== 0; X++)
          $ = $.redSqr();
        r(X < H);
        var i7 = this.pow(N, new i(1).iushln(H - X - 1));
        Y = Y.redMul(i7), N = i7.redSqr(), t7 = t7.redMul(N), H = X;
      }
      return Y;
    }, O.prototype.invm = function(d) {
      var c = d._invmp(this.m);
      return c.negative !== 0 ? (c.negative = 0, this.imod(c).redNeg()) : this.imod(c);
    }, O.prototype.pow = function(d, c) {
      if (c.isZero())
        return new i(1).toRed(this);
      if (c.cmpn(1) === 0)
        return d.clone();
      var y = 4, S = new Array(1 << y);
      S[0] = new i(1).toRed(this), S[1] = d;
      for (var T = 2; T < S.length; T++)
        S[T] = this.mul(S[T - 1], d);
      var g = S[0], w = 0, A = 0, h = c.bitLength() % 26;
      for (h === 0 && (h = 26), T = c.length - 1; T >= 0; T--) {
        for (var N = c.words[T], Y = h - 1; Y >= 0; Y--) {
          var t7 = N >> Y & 1;
          if (g !== S[0] && (g = this.sqr(g)), t7 === 0 && w === 0) {
            A = 0;
            continue;
          }
          w <<= 1, w |= t7, A++, !(A !== y && (T !== 0 || Y !== 0)) && (g = this.mul(g, S[w]), A = 0, w = 0);
        }
        h = 26;
      }
      return g;
    }, O.prototype.convertTo = function(d) {
      var c = d.umod(this.m);
      return c === d ? c.clone() : c;
    }, O.prototype.convertFrom = function(d) {
      var c = d.clone();
      return c.red = null, c;
    }, i.mont = function(d) {
      return new u(d);
    };
    function u(p) {
      O.call(this, p), this.shift = this.m.bitLength(), this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26), this.r = new i(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
    }
    f(u, O), u.prototype.convertTo = function(d) {
      return this.imod(d.ushln(this.shift));
    }, u.prototype.convertFrom = function(d) {
      var c = this.imod(d.mul(this.rinv));
      return c.red = null, c;
    }, u.prototype.imul = function(d, c) {
      if (d.isZero() || c.isZero())
        return d.words[0] = 0, d.length = 1, d;
      var y = d.imul(c), S = y.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), T = y.isub(S).iushrn(this.shift), g = T;
      return T.cmp(this.m) >= 0 ? g = T.isub(this.m) : T.cmpn(0) < 0 && (g = T.iadd(this.m)), g._forceRed(this);
    }, u.prototype.mul = function(d, c) {
      if (d.isZero() || c.isZero())
        return new i(0)._forceRed(this);
      var y = d.mul(c), S = y.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), T = y.isub(S).iushrn(this.shift), g = T;
      return T.cmp(this.m) >= 0 ? g = T.isub(this.m) : T.cmpn(0) < 0 && (g = T.iadd(this.m)), g._forceRed(this);
    }, u.prototype.invm = function(d) {
      var c = this.imod(d._invmp(this.m).mul(this.r2));
      return c._forceRed(this);
    };
  })(e, I7);
})(cd);
var gm = cd.exports, H5 = {}, ud = {}, xm = {}, ld = {}, rf = Q, qr = rf.Buffer, o5 = {}, s5;
for (s5 in rf)
  rf.hasOwnProperty(s5) && (s5 === "SlowBuffer" || s5 === "Buffer" || (o5[s5] = rf[s5]));
var Kr = o5.Buffer = {};
for (s5 in qr)
  qr.hasOwnProperty(s5) && (s5 === "allocUnsafe" || s5 === "allocUnsafeSlow" || (Kr[s5] = qr[s5]));
o5.Buffer.prototype = qr.prototype;
(!Kr.from || Kr.from === Uint8Array.from) && (Kr.from = function(e, t, a) {
  if (typeof e == "number")
    throw new TypeError('The "value" argument must not be of type number. Received type ' + typeof e);
  if (e && typeof e.length > "u")
    throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof e);
  return qr(e, t, a);
});
Kr.alloc || (Kr.alloc = function(e, t, a) {
  if (typeof e != "number")
    throw new TypeError('The "size" argument must be of type number. Received type ' + typeof e);
  if (e < 0 || e >= 2 * (1 << 30))
    throw new RangeError('The value "' + e + '" is invalid for option "size"');
  var r = qr(e);
  return !t || t.length === 0 ? r.fill(0) : typeof a == "string" ? r.fill(t, a) : r.fill(t), r;
});
if (!o5.kStringMaxLength)
  try {
    o5.kStringMaxLength = g7.binding("buffer").kStringMaxLength;
  } catch {
  }
o5.constants || (o5.constants = {
  MAX_LENGTH: o5.kMaxLength
}, o5.kStringMaxLength && (o5.constants.MAX_STRING_LENGTH = o5.kStringMaxLength));
var pd = o5, bi = {};
const kk = X7();
function x5(e) {
  this._reporterState = {
    obj: null,
    path: [],
    options: e || {},
    errors: []
  };
}
bi.Reporter = x5;
x5.prototype.isError = function(t) {
  return t instanceof i1;
};
x5.prototype.save = function() {
  const t = this._reporterState;
  return { obj: t.obj, pathLen: t.path.length };
};
x5.prototype.restore = function(t) {
  const a = this._reporterState;
  a.obj = t.obj, a.path = a.path.slice(0, t.pathLen);
};
x5.prototype.enterKey = function(t) {
  return this._reporterState.path.push(t);
};
x5.prototype.exitKey = function(t) {
  const a = this._reporterState;
  a.path = a.path.slice(0, t - 1);
};
x5.prototype.leaveKey = function(t, a, r) {
  const f = this._reporterState;
  this.exitKey(t), f.obj !== null && (f.obj[a] = r);
};
x5.prototype.path = function() {
  return this._reporterState.path.join("/");
};
x5.prototype.enterObject = function() {
  const t = this._reporterState, a = t.obj;
  return t.obj = {}, a;
};
x5.prototype.leaveObject = function(t) {
  const a = this._reporterState, r = a.obj;
  return a.obj = t, r;
};
x5.prototype.error = function(t) {
  let a;
  const r = this._reporterState, f = t instanceof i1;
  if (f ? a = t : a = new i1(r.path.map(function(i) {
    return "[" + JSON.stringify(i) + "]";
  }).join(""), t.message || t, t.stack), !r.options.partial)
    throw a;
  return f || r.errors.push(a), a;
};
x5.prototype.wrapResult = function(t) {
  const a = this._reporterState;
  return a.options.partial ? {
    result: this.isError(t) ? null : t,
    errors: a.errors
  } : t;
};
function i1(e, t) {
  this.path = e, this.rethrow(t);
}
kk(i1, Error);
i1.prototype.rethrow = function(t) {
  if (this.message = t + " at: " + (this.path || "(shallow)"), Error.captureStackTrace && Error.captureStackTrace(this, i1), !this.stack)
    try {
      throw new Error(this.message);
    } catch (a) {
      this.stack = a.stack;
    }
  return this;
};
var dr = {};
const Ok = X7(), mi = bi.Reporter, n1 = pd.Buffer;
function h5(e, t) {
  if (mi.call(this, t), !n1.isBuffer(e)) {
    this.error("Input not Buffer");
    return;
  }
  this.base = e, this.offset = 0, this.length = e.length;
}
Ok(h5, mi);
dr.DecoderBuffer = h5;
h5.isDecoderBuffer = function(t) {
  return t instanceof h5 ? !0 : typeof t == "object" && n1.isBuffer(t.base) && t.constructor.name === "DecoderBuffer" && typeof t.offset == "number" && typeof t.length == "number" && typeof t.save == "function" && typeof t.restore == "function" && typeof t.isEmpty == "function" && typeof t.readUInt8 == "function" && typeof t.skip == "function" && typeof t.raw == "function";
};
h5.prototype.save = function() {
  return { offset: this.offset, reporter: mi.prototype.save.call(this) };
};
h5.prototype.restore = function(t) {
  const a = new h5(this.base);
  return a.offset = t.offset, a.length = this.offset, this.offset = t.offset, mi.prototype.restore.call(this, t.reporter), a;
};
h5.prototype.isEmpty = function() {
  return this.offset === this.length;
};
h5.prototype.readUInt8 = function(t) {
  return this.offset + 1 <= this.length ? this.base.readUInt8(this.offset++, !0) : this.error(t || "DecoderBuffer overrun");
};
h5.prototype.skip = function(t, a) {
  if (!(this.offset + t <= this.length))
    return this.error(a || "DecoderBuffer overrun");
  const r = new h5(this.base);
  return r._reporterState = this._reporterState, r.offset = this.offset, r.length = this.offset + t, this.offset += t, r;
};
h5.prototype.raw = function(t) {
  return this.base.slice(t ? t.offset : this.offset, this.length);
};
function o1(e, t) {
  if (Array.isArray(e))
    this.length = 0, this.value = e.map(function(a) {
      return o1.isEncoderBuffer(a) || (a = new o1(a, t)), this.length += a.length, a;
    }, this);
  else if (typeof e == "number") {
    if (!(0 <= e && e <= 255))
      return t.error("non-byte EncoderBuffer value");
    this.value = e, this.length = 1;
  } else if (typeof e == "string")
    this.value = e, this.length = n1.byteLength(e);
  else if (n1.isBuffer(e))
    this.value = e, this.length = e.length;
  else
    return t.error("Unsupported type: " + typeof e);
}
dr.EncoderBuffer = o1;
o1.isEncoderBuffer = function(t) {
  return t instanceof o1 ? !0 : typeof t == "object" && t.constructor.name === "EncoderBuffer" && typeof t.length == "number" && typeof t.join == "function";
};
o1.prototype.join = function(t, a) {
  return t || (t = n1.alloc(this.length)), a || (a = 0), this.length === 0 || (Array.isArray(this.value) ? this.value.forEach(function(r) {
    r.join(t, a), a += r.length;
  }) : (typeof this.value == "number" ? t[a] = this.value : typeof this.value == "string" ? t.write(this.value, a) : n1.isBuffer(this.value) && this.value.copy(t, a), a += this.length)), t;
};
const Pk = bi.Reporter, Mk = dr.EncoderBuffer, Rk = dr.DecoderBuffer, B0 = m5, _m = [
  "seq",
  "seqof",
  "set",
  "setof",
  "objid",
  "bool",
  "gentime",
  "utctime",
  "null_",
  "enum",
  "int",
  "objDesc",
  "bitstr",
  "bmpstr",
  "charstr",
  "genstr",
  "graphstr",
  "ia5str",
  "iso646str",
  "numstr",
  "octstr",
  "printstr",
  "t61str",
  "unistr",
  "utf8str",
  "videostr"
], Bk = [
  "key",
  "obj",
  "use",
  "optional",
  "explicit",
  "implicit",
  "def",
  "choice",
  "any",
  "contains"
].concat(_m), Nk = [
  "_peekTag",
  "_decodeTag",
  "_use",
  "_decodeStr",
  "_decodeObjid",
  "_decodeTime",
  "_decodeNull",
  "_decodeInt",
  "_decodeBool",
  "_decodeList",
  "_encodeComposite",
  "_encodeStr",
  "_encodeObjid",
  "_encodeTime",
  "_encodeNull",
  "_encodeInt",
  "_encodeBool"
];
function Ie(e, t, a) {
  const r = {};
  this._baseState = r, r.name = a, r.enc = e, r.parent = t || null, r.children = null, r.tag = null, r.args = null, r.reverseArgs = null, r.choice = null, r.optional = !1, r.any = !1, r.obj = !1, r.use = null, r.useDecoder = null, r.key = null, r.default = null, r.explicit = null, r.implicit = null, r.contains = null, r.parent || (r.children = [], this._wrap());
}
var hd = Ie;
const Ck = [
  "enc",
  "parent",
  "children",
  "tag",
  "args",
  "reverseArgs",
  "choice",
  "optional",
  "any",
  "obj",
  "use",
  "alteredUse",
  "key",
  "default",
  "explicit",
  "implicit",
  "contains"
];
Ie.prototype.clone = function() {
  const t = this._baseState, a = {};
  Ck.forEach(function(f) {
    a[f] = t[f];
  });
  const r = new this.constructor(a.parent);
  return r._baseState = a, r;
};
Ie.prototype._wrap = function() {
  const t = this._baseState;
  Bk.forEach(function(a) {
    this[a] = function() {
      const f = new this.constructor(this);
      return t.children.push(f), f[a].apply(f, arguments);
    };
  }, this);
};
Ie.prototype._init = function(t) {
  const a = this._baseState;
  B0(a.parent === null), t.call(this), a.children = a.children.filter(function(r) {
    return r._baseState.parent === this;
  }, this), B0.equal(a.children.length, 1, "Root node can have only one child");
};
Ie.prototype._useArgs = function(t) {
  const a = this._baseState, r = t.filter(function(f) {
    return f instanceof this.constructor;
  }, this);
  t = t.filter(function(f) {
    return !(f instanceof this.constructor);
  }, this), r.length !== 0 && (B0(a.children === null), a.children = r, r.forEach(function(f) {
    f._baseState.parent = this;
  }, this)), t.length !== 0 && (B0(a.args === null), a.args = t, a.reverseArgs = t.map(function(f) {
    if (typeof f != "object" || f.constructor !== Object)
      return f;
    const i = {};
    return Object.keys(f).forEach(function(n) {
      n == (n | 0) && (n |= 0);
      const o = f[n];
      i[o] = n;
    }), i;
  }));
};
Nk.forEach(function(e) {
  Ie.prototype[e] = function() {
    const a = this._baseState;
    throw new Error(e + " not implemented for encoding: " + a.enc);
  };
});
_m.forEach(function(e) {
  Ie.prototype[e] = function() {
    const a = this._baseState, r = Array.prototype.slice.call(arguments);
    return B0(a.tag === null), a.tag = e, this._useArgs(r), this;
  };
});
Ie.prototype.use = function(t) {
  B0(t);
  const a = this._baseState;
  return B0(a.use === null), a.use = t, this;
};
Ie.prototype.optional = function() {
  const t = this._baseState;
  return t.optional = !0, this;
};
Ie.prototype.def = function(t) {
  const a = this._baseState;
  return B0(a.default === null), a.default = t, a.optional = !0, this;
};
Ie.prototype.explicit = function(t) {
  const a = this._baseState;
  return B0(a.explicit === null && a.implicit === null), a.explicit = t, this;
};
Ie.prototype.implicit = function(t) {
  const a = this._baseState;
  return B0(a.explicit === null && a.implicit === null), a.implicit = t, this;
};
Ie.prototype.obj = function() {
  const t = this._baseState, a = Array.prototype.slice.call(arguments);
  return t.obj = !0, a.length !== 0 && this._useArgs(a), this;
};
Ie.prototype.key = function(t) {
  const a = this._baseState;
  return B0(a.key === null), a.key = t, this;
};
Ie.prototype.any = function() {
  const t = this._baseState;
  return t.any = !0, this;
};
Ie.prototype.choice = function(t) {
  const a = this._baseState;
  return B0(a.choice === null), a.choice = t, this._useArgs(Object.keys(t).map(function(r) {
    return t[r];
  })), this;
};
Ie.prototype.contains = function(t) {
  const a = this._baseState;
  return B0(a.use === null), a.contains = t, this;
};
Ie.prototype._decode = function(t, a) {
  const r = this._baseState;
  if (r.parent === null)
    return t.wrapResult(r.children[0]._decode(t, a));
  let f = r.default, i = !0, n = null;
  if (r.key !== null && (n = t.enterKey(r.key)), r.optional) {
    let s = null;
    if (r.explicit !== null ? s = r.explicit : r.implicit !== null ? s = r.implicit : r.tag !== null && (s = r.tag), s === null && !r.any) {
      const b = t.save();
      try {
        r.choice === null ? this._decodeGeneric(r.tag, t, a) : this._decodeChoice(t, a), i = !0;
      } catch {
        i = !1;
      }
      t.restore(b);
    } else if (i = this._peekTag(t, s, r.any), t.isError(i))
      return i;
  }
  let o;
  if (r.obj && i && (o = t.enterObject()), i) {
    if (r.explicit !== null) {
      const b = this._decodeTag(t, r.explicit);
      if (t.isError(b))
        return b;
      t = b;
    }
    const s = t.offset;
    if (r.use === null && r.choice === null) {
      let b;
      r.any && (b = t.save());
      const l = this._decodeTag(
        t,
        r.implicit !== null ? r.implicit : r.tag,
        r.any
      );
      if (t.isError(l))
        return l;
      r.any ? f = t.raw(b) : t = l;
    }
    if (a && a.track && r.tag !== null && a.track(t.path(), s, t.length, "tagged"), a && a.track && r.tag !== null && a.track(t.path(), t.offset, t.length, "content"), r.any || (r.choice === null ? f = this._decodeGeneric(r.tag, t, a) : f = this._decodeChoice(t, a)), t.isError(f))
      return f;
    if (!r.any && r.choice === null && r.children !== null && r.children.forEach(function(l) {
      l._decode(t, a);
    }), r.contains && (r.tag === "octstr" || r.tag === "bitstr")) {
      const b = new Rk(f);
      f = this._getUse(r.contains, t._reporterState.obj)._decode(b, a);
    }
  }
  return r.obj && i && (f = t.leaveObject(o)), r.key !== null && (f !== null || i === !0) ? t.leaveKey(n, r.key, f) : n !== null && t.exitKey(n), f;
};
Ie.prototype._decodeGeneric = function(t, a, r) {
  const f = this._baseState;
  return t === "seq" || t === "set" ? null : t === "seqof" || t === "setof" ? this._decodeList(a, t, f.args[0], r) : /str$/.test(t) ? this._decodeStr(a, t, r) : t === "objid" && f.args ? this._decodeObjid(a, f.args[0], f.args[1], r) : t === "objid" ? this._decodeObjid(a, null, null, r) : t === "gentime" || t === "utctime" ? this._decodeTime(a, t, r) : t === "null_" ? this._decodeNull(a, r) : t === "bool" ? this._decodeBool(a, r) : t === "objDesc" ? this._decodeStr(a, t, r) : t === "int" || t === "enum" ? this._decodeInt(a, f.args && f.args[0], r) : f.use !== null ? this._getUse(f.use, a._reporterState.obj)._decode(a, r) : a.error("unknown tag: " + t);
};
Ie.prototype._getUse = function(t, a) {
  const r = this._baseState;
  return r.useDecoder = this._use(t, a), B0(r.useDecoder._baseState.parent === null), r.useDecoder = r.useDecoder._baseState.children[0], r.implicit !== r.useDecoder._baseState.implicit && (r.useDecoder = r.useDecoder.clone(), r.useDecoder._baseState.implicit = r.implicit), r.useDecoder;
};
Ie.prototype._decodeChoice = function(t, a) {
  const r = this._baseState;
  let f = null, i = !1;
  return Object.keys(r.choice).some(function(n) {
    const o = t.save(), s = r.choice[n];
    try {
      const b = s._decode(t, a);
      if (t.isError(b))
        return !1;
      f = { type: n, value: b }, i = !0;
    } catch {
      return t.restore(o), !1;
    }
    return !0;
  }, this), i ? f : t.error("Choice not matched");
};
Ie.prototype._createEncoderBuffer = function(t) {
  return new Mk(t, this.reporter);
};
Ie.prototype._encode = function(t, a, r) {
  const f = this._baseState;
  if (f.default !== null && f.default === t)
    return;
  const i = this._encodeValue(t, a, r);
  if (i !== void 0 && !this._skipDefault(i, a, r))
    return i;
};
Ie.prototype._encodeValue = function(t, a, r) {
  const f = this._baseState;
  if (f.parent === null)
    return f.children[0]._encode(t, a || new Pk());
  let i = null;
  if (this.reporter = a, f.optional && t === void 0)
    if (f.default !== null)
      t = f.default;
    else
      return;
  let n = null, o = !1;
  if (f.any)
    i = this._createEncoderBuffer(t);
  else if (f.choice)
    i = this._encodeChoice(t, a);
  else if (f.contains)
    n = this._getUse(f.contains, r)._encode(t, a), o = !0;
  else if (f.children)
    n = f.children.map(function(s) {
      if (s._baseState.tag === "null_")
        return s._encode(null, a, t);
      if (s._baseState.key === null)
        return a.error("Child should have a key");
      const b = a.enterKey(s._baseState.key);
      if (typeof t != "object")
        return a.error("Child expected, but input is not object");
      const l = s._encode(t[s._baseState.key], a, t);
      return a.leaveKey(b), l;
    }, this).filter(function(s) {
      return s;
    }), n = this._createEncoderBuffer(n);
  else if (f.tag === "seqof" || f.tag === "setof") {
    if (!(f.args && f.args.length === 1))
      return a.error("Too many args for : " + f.tag);
    if (!Array.isArray(t))
      return a.error("seqof/setof, but data is not Array");
    const s = this.clone();
    s._baseState.implicit = null, n = this._createEncoderBuffer(t.map(function(b) {
      const l = this._baseState;
      return this._getUse(l.args[0], t)._encode(b, a);
    }, s));
  } else
    f.use !== null ? i = this._getUse(f.use, r)._encode(t, a) : (n = this._encodePrimitive(f.tag, t), o = !0);
  if (!f.any && f.choice === null) {
    const s = f.implicit !== null ? f.implicit : f.tag, b = f.implicit === null ? "universal" : "context";
    s === null ? f.use === null && a.error("Tag could be omitted only for .use()") : f.use === null && (i = this._encodeComposite(s, o, b, n));
  }
  return f.explicit !== null && (i = this._encodeComposite(f.explicit, !1, "context", i)), i;
};
Ie.prototype._encodeChoice = function(t, a) {
  const r = this._baseState, f = r.choice[t.type];
  return f || B0(
    !1,
    t.type + " not found in " + JSON.stringify(Object.keys(r.choice))
  ), f._encode(t.value, a);
};
Ie.prototype._encodePrimitive = function(t, a) {
  const r = this._baseState;
  if (/str$/.test(t))
    return this._encodeStr(a, t);
  if (t === "objid" && r.args)
    return this._encodeObjid(a, r.reverseArgs[0], r.args[1]);
  if (t === "objid")
    return this._encodeObjid(a, null, null);
  if (t === "gentime" || t === "utctime")
    return this._encodeTime(a, t);
  if (t === "null_")
    return this._encodeNull();
  if (t === "int" || t === "enum")
    return this._encodeInt(a, r.args && r.reverseArgs[0]);
  if (t === "bool")
    return this._encodeBool(a);
  if (t === "objDesc")
    return this._encodeStr(a, t);
  throw new Error("Unsupported tag: " + t);
};
Ie.prototype._isNumstr = function(t) {
  return /^[0-9 ]*$/.test(t);
};
Ie.prototype._isPrintstr = function(t) {
  return /^[A-Za-z0-9 '()+,-./:=?]*$/.test(t);
};
var vi = {};
(function(e) {
  function t(a) {
    const r = {};
    return Object.keys(a).forEach(function(f) {
      (f | 0) == f && (f = f | 0);
      const i = a[f];
      r[i] = f;
    }), r;
  }
  e.tagClass = {
    0: "universal",
    1: "application",
    2: "context",
    3: "private"
  }, e.tagClassByName = t(e.tagClass), e.tag = {
    0: "end",
    1: "bool",
    2: "int",
    3: "bitstr",
    4: "octstr",
    5: "null_",
    6: "objid",
    7: "objDesc",
    8: "external",
    9: "real",
    10: "enum",
    11: "embed",
    12: "utf8str",
    13: "relativeOid",
    16: "seq",
    17: "set",
    18: "numstr",
    19: "printstr",
    20: "t61str",
    21: "videostr",
    22: "ia5str",
    23: "utctime",
    24: "gentime",
    25: "graphstr",
    26: "iso646str",
    27: "genstr",
    28: "unistr",
    29: "charstr",
    30: "bmpstr"
  }, e.tagByName = t(e.tag);
})(vi);
const Dk = X7(), Ct = pd.Buffer, wm = hd, v8 = vi;
function Sm(e) {
  this.enc = "der", this.name = e.name, this.entity = e, this.tree = new U5(), this.tree._init(e.body);
}
var Em = Sm;
Sm.prototype.encode = function(t, a) {
  return this.tree._encode(t, a).join();
};
function U5(e) {
  wm.call(this, "der", e);
}
Dk(U5, wm);
U5.prototype._encodeComposite = function(t, a, r, f) {
  const i = Lk(t, a, r, this.reporter);
  if (f.length < 128) {
    const s = Ct.alloc(2);
    return s[0] = i, s[1] = f.length, this._createEncoderBuffer([s, f]);
  }
  let n = 1;
  for (let s = f.length; s >= 256; s >>= 8)
    n++;
  const o = Ct.alloc(1 + 1 + n);
  o[0] = i, o[1] = 128 | n;
  for (let s = 1 + n, b = f.length; b > 0; s--, b >>= 8)
    o[s] = b & 255;
  return this._createEncoderBuffer([o, f]);
};
U5.prototype._encodeStr = function(t, a) {
  if (a === "bitstr")
    return this._createEncoderBuffer([t.unused | 0, t.data]);
  if (a === "bmpstr") {
    const r = Ct.alloc(t.length * 2);
    for (let f = 0; f < t.length; f++)
      r.writeUInt16BE(t.charCodeAt(f), f * 2);
    return this._createEncoderBuffer(r);
  } else
    return a === "numstr" ? this._isNumstr(t) ? this._createEncoderBuffer(t) : this.reporter.error("Encoding of string type: numstr supports only digits and space") : a === "printstr" ? this._isPrintstr(t) ? this._createEncoderBuffer(t) : this.reporter.error("Encoding of string type: printstr supports only latin upper and lower case letters, digits, space, apostrophe, left and rigth parenthesis, plus sign, comma, hyphen, dot, slash, colon, equal sign, question mark") : /str$/.test(a) ? this._createEncoderBuffer(t) : a === "objDesc" ? this._createEncoderBuffer(t) : this.reporter.error("Encoding of string type: " + a + " unsupported");
};
U5.prototype._encodeObjid = function(t, a, r) {
  if (typeof t == "string") {
    if (!a)
      return this.reporter.error("string objid given, but no values map found");
    if (!a.hasOwnProperty(t))
      return this.reporter.error("objid not found in values map");
    t = a[t].split(/[\s.]+/g);
    for (let o = 0; o < t.length; o++)
      t[o] |= 0;
  } else if (Array.isArray(t)) {
    t = t.slice();
    for (let o = 0; o < t.length; o++)
      t[o] |= 0;
  }
  if (!Array.isArray(t))
    return this.reporter.error("objid() should be either array or string, got: " + JSON.stringify(t));
  if (!r) {
    if (t[1] >= 40)
      return this.reporter.error("Second objid identifier OOB");
    t.splice(0, 2, t[0] * 40 + t[1]);
  }
  let f = 0;
  for (let o = 0; o < t.length; o++) {
    let s = t[o];
    for (f++; s >= 128; s >>= 7)
      f++;
  }
  const i = Ct.alloc(f);
  let n = i.length - 1;
  for (let o = t.length - 1; o >= 0; o--) {
    let s = t[o];
    for (i[n--] = s & 127; (s >>= 7) > 0; )
      i[n--] = 128 | s & 127;
  }
  return this._createEncoderBuffer(i);
};
function t5(e) {
  return e < 10 ? "0" + e : e;
}
U5.prototype._encodeTime = function(t, a) {
  let r;
  const f = new Date(t);
  return a === "gentime" ? r = [
    t5(f.getUTCFullYear()),
    t5(f.getUTCMonth() + 1),
    t5(f.getUTCDate()),
    t5(f.getUTCHours()),
    t5(f.getUTCMinutes()),
    t5(f.getUTCSeconds()),
    "Z"
  ].join("") : a === "utctime" ? r = [
    t5(f.getUTCFullYear() % 100),
    t5(f.getUTCMonth() + 1),
    t5(f.getUTCDate()),
    t5(f.getUTCHours()),
    t5(f.getUTCMinutes()),
    t5(f.getUTCSeconds()),
    "Z"
  ].join("") : this.reporter.error("Encoding " + a + " time is not supported yet"), this._encodeStr(r, "octstr");
};
U5.prototype._encodeNull = function() {
  return this._createEncoderBuffer("");
};
U5.prototype._encodeInt = function(t, a) {
  if (typeof t == "string") {
    if (!a)
      return this.reporter.error("String int or enum given, but no values map");
    if (!a.hasOwnProperty(t))
      return this.reporter.error("Values map doesn't contain: " + JSON.stringify(t));
    t = a[t];
  }
  if (typeof t != "number" && !Ct.isBuffer(t)) {
    const i = t.toArray();
    !t.sign && i[0] & 128 && i.unshift(0), t = Ct.from(i);
  }
  if (Ct.isBuffer(t)) {
    let i = t.length;
    t.length === 0 && i++;
    const n = Ct.alloc(i);
    return t.copy(n), t.length === 0 && (n[0] = 0), this._createEncoderBuffer(n);
  }
  if (t < 128)
    return this._createEncoderBuffer(t);
  if (t < 256)
    return this._createEncoderBuffer([0, t]);
  let r = 1;
  for (let i = t; i >= 256; i >>= 8)
    r++;
  const f = new Array(r);
  for (let i = f.length - 1; i >= 0; i--)
    f[i] = t & 255, t >>= 8;
  return f[0] & 128 && f.unshift(0), this._createEncoderBuffer(Ct.from(f));
};
U5.prototype._encodeBool = function(t) {
  return this._createEncoderBuffer(t ? 255 : 0);
};
U5.prototype._use = function(t, a) {
  return typeof t == "function" && (t = t(a)), t._getEncoder("der").tree;
};
U5.prototype._skipDefault = function(t, a, r) {
  const f = this._baseState;
  let i;
  if (f.default === null)
    return !1;
  const n = t.join();
  if (f.defaultBuffer === void 0 && (f.defaultBuffer = this._encodeValue(f.default, a, r).join()), n.length !== f.defaultBuffer.length)
    return !1;
  for (i = 0; i < n.length; i++)
    if (n[i] !== f.defaultBuffer[i])
      return !1;
  return !0;
};
function Lk(e, t, a, r) {
  let f;
  if (e === "seqof" ? e = "seq" : e === "setof" && (e = "set"), v8.tagByName.hasOwnProperty(e))
    f = v8.tagByName[e];
  else if (typeof e == "number" && (e | 0) === e)
    f = e;
  else
    return r.error("Unknown tag: " + e);
  return f >= 31 ? r.error("Multi-octet tag encoding unsupported") : (t || (f |= 32), f |= v8.tagClassByName[a || "universal"] << 6, f);
}
const Fk = X7(), bd = Em;
function md(e) {
  bd.call(this, e), this.enc = "pem";
}
Fk(md, bd);
var Hk = md;
md.prototype.encode = function(t, a) {
  const f = bd.prototype.encode.call(this, t).toString("base64"), i = ["-----BEGIN " + a.label + "-----"];
  for (let n = 0; n < f.length; n += 64)
    i.push(f.slice(n, n + 64));
  return i.push("-----END " + a.label + "-----"), i.join(`
`);
};
(function(e) {
  const t = e;
  t.der = Em, t.pem = Hk;
})(ld);
var vd = {};
const Uk = X7(), $k = u0, fu = dr.DecoderBuffer, Tm = hd, iu = vi;
function Am(e) {
  this.enc = "der", this.name = e.name, this.entity = e, this.tree = new e5(), this.tree._init(e.body);
}
var Im = Am;
Am.prototype.decode = function(t, a) {
  return fu.isDecoderBuffer(t) || (t = new fu(t, a)), this.tree._decode(t, a);
};
function e5(e) {
  Tm.call(this, "der", e);
}
Uk(e5, Tm);
e5.prototype._peekTag = function(t, a, r) {
  if (t.isEmpty())
    return !1;
  const f = t.save(), i = yd(t, 'Failed to peek tag: "' + a + '"');
  return t.isError(i) ? i : (t.restore(f), i.tag === a || i.tagStr === a || i.tagStr + "of" === a || r);
};
e5.prototype._decodeTag = function(t, a, r) {
  const f = yd(
    t,
    'Failed to decode tag of "' + a + '"'
  );
  if (t.isError(f))
    return f;
  let i = km(
    t,
    f.primitive,
    'Failed to get length of "' + a + '"'
  );
  if (t.isError(i))
    return i;
  if (!r && f.tag !== a && f.tagStr !== a && f.tagStr + "of" !== a)
    return t.error('Failed to match tag: "' + a + '"');
  if (f.primitive || i !== null)
    return t.skip(i, 'Failed to match body of: "' + a + '"');
  const n = t.save(), o = this._skipUntilEnd(
    t,
    'Failed to skip indefinite length body: "' + this.tag + '"'
  );
  return t.isError(o) ? o : (i = t.offset - n.offset, t.restore(n), t.skip(i, 'Failed to match body of: "' + a + '"'));
};
e5.prototype._skipUntilEnd = function(t, a) {
  for (; ; ) {
    const r = yd(t, a);
    if (t.isError(r))
      return r;
    const f = km(t, r.primitive, a);
    if (t.isError(f))
      return f;
    let i;
    if (r.primitive || f !== null ? i = t.skip(f) : i = this._skipUntilEnd(t, a), t.isError(i))
      return i;
    if (r.tagStr === "end")
      break;
  }
};
e5.prototype._decodeList = function(t, a, r, f) {
  const i = [];
  for (; !t.isEmpty(); ) {
    const n = this._peekTag(t, "end");
    if (t.isError(n))
      return n;
    const o = r.decode(t, "der", f);
    if (t.isError(o) && n)
      break;
    i.push(o);
  }
  return i;
};
e5.prototype._decodeStr = function(t, a) {
  if (a === "bitstr") {
    const r = t.readUInt8();
    return t.isError(r) ? r : { unused: r, data: t.raw() };
  } else if (a === "bmpstr") {
    const r = t.raw();
    if (r.length % 2 === 1)
      return t.error("Decoding of string type: bmpstr length mismatch");
    let f = "";
    for (let i = 0; i < r.length / 2; i++)
      f += String.fromCharCode(r.readUInt16BE(i * 2));
    return f;
  } else if (a === "numstr") {
    const r = t.raw().toString("ascii");
    return this._isNumstr(r) ? r : t.error("Decoding of string type: numstr unsupported characters");
  } else {
    if (a === "octstr")
      return t.raw();
    if (a === "objDesc")
      return t.raw();
    if (a === "printstr") {
      const r = t.raw().toString("ascii");
      return this._isPrintstr(r) ? r : t.error("Decoding of string type: printstr unsupported characters");
    } else
      return /str$/.test(a) ? t.raw().toString() : t.error("Decoding of string type: " + a + " unsupported");
  }
};
e5.prototype._decodeObjid = function(t, a, r) {
  let f;
  const i = [];
  let n = 0, o = 0;
  for (; !t.isEmpty(); )
    o = t.readUInt8(), n <<= 7, n |= o & 127, o & 128 || (i.push(n), n = 0);
  o & 128 && i.push(n);
  const s = i[0] / 40 | 0, b = i[0] % 40;
  if (r ? f = i : f = [s, b].concat(i.slice(1)), a) {
    let l = a[f.join(" ")];
    l === void 0 && (l = a[f.join(".")]), l !== void 0 && (f = l);
  }
  return f;
};
e5.prototype._decodeTime = function(t, a) {
  const r = t.raw().toString();
  let f, i, n, o, s, b;
  if (a === "gentime")
    f = r.slice(0, 4) | 0, i = r.slice(4, 6) | 0, n = r.slice(6, 8) | 0, o = r.slice(8, 10) | 0, s = r.slice(10, 12) | 0, b = r.slice(12, 14) | 0;
  else if (a === "utctime")
    f = r.slice(0, 2) | 0, i = r.slice(2, 4) | 0, n = r.slice(4, 6) | 0, o = r.slice(6, 8) | 0, s = r.slice(8, 10) | 0, b = r.slice(10, 12) | 0, f < 70 ? f = 2e3 + f : f = 1900 + f;
  else
    return t.error("Decoding " + a + " time is not supported yet");
  return Date.UTC(f, i - 1, n, o, s, b, 0);
};
e5.prototype._decodeNull = function() {
  return null;
};
e5.prototype._decodeBool = function(t) {
  const a = t.readUInt8();
  return t.isError(a) ? a : a !== 0;
};
e5.prototype._decodeInt = function(t, a) {
  const r = t.raw();
  let f = new $k(r);
  return a && (f = a[f.toString(10)] || f), f;
};
e5.prototype._use = function(t, a) {
  return typeof t == "function" && (t = t(a)), t._getDecoder("der").tree;
};
function yd(e, t) {
  let a = e.readUInt8(t);
  if (e.isError(a))
    return a;
  const r = iu.tagClass[a >> 6], f = (a & 32) === 0;
  if ((a & 31) === 31) {
    let n = a;
    for (a = 0; (n & 128) === 128; ) {
      if (n = e.readUInt8(t), e.isError(n))
        return n;
      a <<= 7, a |= n & 127;
    }
  } else
    a &= 31;
  const i = iu.tag[a];
  return {
    cls: r,
    primitive: f,
    tag: a,
    tagStr: i
  };
}
function km(e, t, a) {
  let r = e.readUInt8(a);
  if (e.isError(r))
    return r;
  if (!t && r === 128)
    return null;
  if (!(r & 128))
    return r;
  const f = r & 127;
  if (f > 4)
    return e.error("length octect is too long");
  r = 0;
  for (let i = 0; i < f; i++) {
    r <<= 8;
    const n = e.readUInt8(a);
    if (e.isError(n))
      return n;
    r |= n;
  }
  return r;
}
const jk = X7(), Vk = pd.Buffer, gd = Im;
function xd(e) {
  gd.call(this, e), this.enc = "pem";
}
jk(xd, gd);
var zk = xd;
xd.prototype.decode = function(t, a) {
  const r = t.toString().split(/[\r\n]+/g), f = a.label.toUpperCase(), i = /^-----(BEGIN|END) ([^-]+)-----$/;
  let n = -1, o = -1;
  for (let l = 0; l < r.length; l++) {
    const v = r[l].match(i);
    if (v !== null && v[2] === f)
      if (n === -1) {
        if (v[1] !== "BEGIN")
          break;
        n = l;
      } else {
        if (v[1] !== "END")
          break;
        o = l;
        break;
      }
  }
  if (n === -1 || o === -1)
    throw new Error("PEM section not found for: " + f);
  const s = r.slice(n + 1, o).join("");
  s.replace(/[^a-z0-9+/=]+/gi, "");
  const b = Vk.from(s, "base64");
  return gd.prototype.decode.call(this, b, a);
};
(function(e) {
  const t = e;
  t.der = Im, t.pem = zk;
})(vd);
(function(e) {
  const t = ld, a = vd, r = X7(), f = e;
  f.define = function(o, s) {
    return new i(o, s);
  };
  function i(n, o) {
    this.name = n, this.body = o, this.decoders = {}, this.encoders = {};
  }
  i.prototype._createNamed = function(o) {
    const s = this.name;
    function b(l) {
      this._initNamed(l, s);
    }
    return r(b, o), b.prototype._initNamed = function(v, m) {
      o.call(this, v, m);
    }, new b(this);
  }, i.prototype._getDecoder = function(o) {
    return o = o || "der", this.decoders.hasOwnProperty(o) || (this.decoders[o] = this._createNamed(a[o])), this.decoders[o];
  }, i.prototype.decode = function(o, s, b) {
    return this._getDecoder(s).decode(o, b);
  }, i.prototype._getEncoder = function(o) {
    return o = o || "der", this.encoders.hasOwnProperty(o) || (this.encoders[o] = this._createNamed(t[o])), this.encoders[o];
  }, i.prototype.encode = function(o, s, b) {
    return this._getEncoder(s).encode(o, b);
  };
})(xm);
var Om = {};
(function(e) {
  const t = e;
  t.Reporter = bi.Reporter, t.DecoderBuffer = dr.DecoderBuffer, t.EncoderBuffer = dr.EncoderBuffer, t.Node = hd;
})(Om);
var Pm = {};
(function(e) {
  const t = e;
  t._reverse = function(r) {
    const f = {};
    return Object.keys(r).forEach(function(i) {
      (i | 0) == i && (i = i | 0);
      const n = r[i];
      f[n] = i;
    }), f;
  }, t.der = vi;
})(Pm);
(function(e) {
  const t = e;
  t.bignum = u0, t.define = xm.define, t.base = Om, t.constants = Pm, t.decoders = vd, t.encoders = ld;
})(ud);
var $5 = ud, nu = $5.define("Time", function() {
  this.choice({
    utcTime: this.utctime(),
    generalTime: this.gentime()
  });
}), qk = $5.define("AttributeTypeValue", function() {
  this.seq().obj(
    this.key("type").objid(),
    this.key("value").any()
  );
}), _d = $5.define("AlgorithmIdentifier", function() {
  this.seq().obj(
    this.key("algorithm").objid(),
    this.key("parameters").optional(),
    this.key("curve").objid().optional()
  );
}), Kk = $5.define("SubjectPublicKeyInfo", function() {
  this.seq().obj(
    this.key("algorithm").use(_d),
    this.key("subjectPublicKey").bitstr()
  );
}), Gk = $5.define("RelativeDistinguishedName", function() {
  this.setof(qk);
}), Wk = $5.define("RDNSequence", function() {
  this.seqof(Gk);
}), ou = $5.define("Name", function() {
  this.choice({
    rdnSequence: this.use(Wk)
  });
}), Zk = $5.define("Validity", function() {
  this.seq().obj(
    this.key("notBefore").use(nu),
    this.key("notAfter").use(nu)
  );
}), Yk = $5.define("Extension", function() {
  this.seq().obj(
    this.key("extnID").objid(),
    this.key("critical").bool().def(!1),
    this.key("extnValue").octstr()
  );
}), Xk = $5.define("TBSCertificate", function() {
  this.seq().obj(
    this.key("version").explicit(0).int().optional(),
    this.key("serialNumber").int(),
    this.key("signature").use(_d),
    this.key("issuer").use(ou),
    this.key("validity").use(Zk),
    this.key("subject").use(ou),
    this.key("subjectPublicKeyInfo").use(Kk),
    this.key("issuerUniqueID").implicit(1).bitstr().optional(),
    this.key("subjectUniqueID").implicit(2).bitstr().optional(),
    this.key("extensions").explicit(3).seqof(Yk).optional()
  );
}), Jk = $5.define("X509Certificate", function() {
  this.seq().obj(
    this.key("tbsCertificate").use(Xk),
    this.key("signatureAlgorithm").use(_d),
    this.key("signatureValue").bitstr()
  );
}), Qk = Jk, j5 = ud;
H5.certificate = Qk;
var eO = j5.define("RSAPrivateKey", function() {
  this.seq().obj(
    this.key("version").int(),
    this.key("modulus").int(),
    this.key("publicExponent").int(),
    this.key("privateExponent").int(),
    this.key("prime1").int(),
    this.key("prime2").int(),
    this.key("exponent1").int(),
    this.key("exponent2").int(),
    this.key("coefficient").int()
  );
});
H5.RSAPrivateKey = eO;
var tO = j5.define("RSAPublicKey", function() {
  this.seq().obj(
    this.key("modulus").int(),
    this.key("publicExponent").int()
  );
});
H5.RSAPublicKey = tO;
var aO = j5.define("SubjectPublicKeyInfo", function() {
  this.seq().obj(
    this.key("algorithm").use(Mm),
    this.key("subjectPublicKey").bitstr()
  );
});
H5.PublicKey = aO;
var Mm = j5.define("AlgorithmIdentifier", function() {
  this.seq().obj(
    this.key("algorithm").objid(),
    this.key("none").null_().optional(),
    this.key("curve").objid().optional(),
    this.key("params").seq().obj(
      this.key("p").int(),
      this.key("q").int(),
      this.key("g").int()
    ).optional()
  );
}), rO = j5.define("PrivateKeyInfo", function() {
  this.seq().obj(
    this.key("version").int(),
    this.key("algorithm").use(Mm),
    this.key("subjectPrivateKey").octstr()
  );
});
H5.PrivateKey = rO;
var fO = j5.define("EncryptedPrivateKeyInfo", function() {
  this.seq().obj(
    this.key("algorithm").seq().obj(
      this.key("id").objid(),
      this.key("decrypt").seq().obj(
        this.key("kde").seq().obj(
          this.key("id").objid(),
          this.key("kdeparams").seq().obj(
            this.key("salt").octstr(),
            this.key("iters").int()
          )
        ),
        this.key("cipher").seq().obj(
          this.key("algo").objid(),
          this.key("iv").octstr()
        )
      )
    ),
    this.key("subjectPrivateKey").octstr()
  );
});
H5.EncryptedPrivateKey = fO;
var iO = j5.define("DSAPrivateKey", function() {
  this.seq().obj(
    this.key("version").int(),
    this.key("p").int(),
    this.key("q").int(),
    this.key("g").int(),
    this.key("pub_key").int(),
    this.key("priv_key").int()
  );
});
H5.DSAPrivateKey = iO;
H5.DSAparam = j5.define("DSAparam", function() {
  this.int();
});
var nO = j5.define("ECPrivateKey", function() {
  this.seq().obj(
    this.key("version").int(),
    this.key("privateKey").octstr(),
    this.key("parameters").optional().explicit(0).use(oO),
    this.key("publicKey").optional().explicit(1).bitstr()
  );
});
H5.ECPrivateKey = nO;
var oO = j5.define("ECParameters", function() {
  this.choice({
    namedCurve: this.objid()
  });
});
H5.signature = j5.define("signature", function() {
  this.seq().obj(
    this.key("r").int(),
    this.key("s").int()
  );
});
const sO = {
  "2.16.840.1.101.3.4.1.1": "aes-128-ecb",
  "2.16.840.1.101.3.4.1.2": "aes-128-cbc",
  "2.16.840.1.101.3.4.1.3": "aes-128-ofb",
  "2.16.840.1.101.3.4.1.4": "aes-128-cfb",
  "2.16.840.1.101.3.4.1.21": "aes-192-ecb",
  "2.16.840.1.101.3.4.1.22": "aes-192-cbc",
  "2.16.840.1.101.3.4.1.23": "aes-192-ofb",
  "2.16.840.1.101.3.4.1.24": "aes-192-cfb",
  "2.16.840.1.101.3.4.1.41": "aes-256-ecb",
  "2.16.840.1.101.3.4.1.42": "aes-256-cbc",
  "2.16.840.1.101.3.4.1.43": "aes-256-ofb",
  "2.16.840.1.101.3.4.1.44": "aes-256-cfb"
};
var dO = /Proc-Type: 4,ENCRYPTED[\n\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\n\r]+([0-9A-z\n\r+/=]+)[\n\r]+/m, cO = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----/m, uO = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----([0-9A-z\n\r+/=]+)-----END \1-----$/m, lO = ci, pO = X0, P6 = fe.Buffer, hO = function(e, t) {
  var a = e.toString(), r = a.match(dO), f;
  if (r) {
    var n = "aes" + r[1], o = P6.from(r[2], "hex"), s = P6.from(r[3].replace(/[\r\n]/g, ""), "base64"), b = lO(t, o.slice(0, 8), parseInt(r[1], 10)).key, l = [], v = pO.createDecipheriv(n, b, o);
    l.push(v.update(s)), l.push(v.final()), f = P6.concat(l);
  } else {
    var i = a.match(uO);
    f = P6.from(i[2].replace(/[\r\n]/g, ""), "base64");
  }
  var m = a.match(cO)[1];
  return {
    tag: m,
    data: f
  };
}, D0 = H5, bO = sO, mO = hO, vO = X0, yO = oi, Ho = fe.Buffer, yi = Rm;
function Rm(e) {
  var t;
  typeof e == "object" && !Ho.isBuffer(e) && (t = e.passphrase, e = e.key), typeof e == "string" && (e = Ho.from(e));
  var a = mO(e, t), r = a.tag, f = a.data, i, n;
  switch (r) {
    case "CERTIFICATE":
      n = D0.certificate.decode(f, "der").tbsCertificate.subjectPublicKeyInfo;
    case "PUBLIC KEY":
      switch (n || (n = D0.PublicKey.decode(f, "der")), i = n.algorithm.algorithm.join("."), i) {
        case "1.2.840.113549.1.1.1":
          return D0.RSAPublicKey.decode(n.subjectPublicKey.data, "der");
        case "1.2.840.10045.2.1":
          return n.subjectPrivateKey = n.subjectPublicKey, {
            type: "ec",
            data: n
          };
        case "1.2.840.10040.4.1":
          return n.algorithm.params.pub_key = D0.DSAparam.decode(n.subjectPublicKey.data, "der"), {
            type: "dsa",
            data: n.algorithm.params
          };
        default:
          throw new Error("unknown key id " + i);
      }
    case "ENCRYPTED PRIVATE KEY":
      f = D0.EncryptedPrivateKey.decode(f, "der"), f = gO(f, t);
    case "PRIVATE KEY":
      switch (n = D0.PrivateKey.decode(f, "der"), i = n.algorithm.algorithm.join("."), i) {
        case "1.2.840.113549.1.1.1":
          return D0.RSAPrivateKey.decode(n.subjectPrivateKey, "der");
        case "1.2.840.10045.2.1":
          return {
            curve: n.algorithm.curve,
            privateKey: D0.ECPrivateKey.decode(n.subjectPrivateKey, "der").privateKey
          };
        case "1.2.840.10040.4.1":
          return n.algorithm.params.priv_key = D0.DSAparam.decode(n.subjectPrivateKey, "der"), {
            type: "dsa",
            params: n.algorithm.params
          };
        default:
          throw new Error("unknown key id " + i);
      }
    case "RSA PUBLIC KEY":
      return D0.RSAPublicKey.decode(f, "der");
    case "RSA PRIVATE KEY":
      return D0.RSAPrivateKey.decode(f, "der");
    case "DSA PRIVATE KEY":
      return {
        type: "dsa",
        params: D0.DSAPrivateKey.decode(f, "der")
      };
    case "EC PRIVATE KEY":
      return f = D0.ECPrivateKey.decode(f, "der"), {
        curve: f.parameters.value,
        privateKey: f.privateKey
      };
    default:
      throw new Error("unknown key type " + r);
  }
}
Rm.signature = D0.signature;
function gO(e, t) {
  var a = e.algorithm.decrypt.kde.kdeparams.salt, r = parseInt(e.algorithm.decrypt.kde.kdeparams.iters.toString(), 10), f = bO[e.algorithm.decrypt.cipher.algo.join(".")], i = e.algorithm.decrypt.cipher.iv, n = e.subjectPrivateKey, o = parseInt(f.split("-")[1], 10) / 8, s = yO.pbkdf2Sync(t, a, r, o, "sha1"), b = vO.createDecipheriv(f, s, i), l = [];
  return l.push(b.update(n)), l.push(b.final()), Ho.concat(l);
}
const Bm = {
  "1.3.132.0.10": "secp256k1",
  "1.3.132.0.33": "p224",
  "1.2.840.10045.3.1.1": "p192",
  "1.2.840.10045.3.1.7": "p256",
  "1.3.132.0.34": "p384",
  "1.3.132.0.35": "p521"
};
var su;
function xO() {
  if (su)
    return G1.exports;
  su = 1;
  var e = fe.Buffer, t = vb, a = dd, r = s6().ec, f = gm, i = yi, n = Bm;
  function o(P, M, R, F, C) {
    var L = i(M);
    if (L.curve) {
      if (F !== "ecdsa" && F !== "ecdsa/rsa")
        throw new Error("wrong private key type");
      return s(P, L);
    } else if (L.type === "dsa") {
      if (F !== "dsa")
        throw new Error("wrong private key type");
      return b(P, L, R);
    } else if (F !== "rsa" && F !== "ecdsa/rsa")
      throw new Error("wrong private key type");
    P = e.concat([C, P]);
    for (var U = L.modulus.byteLength(), q = [0, 1]; P.length + q.length + 1 < U; )
      q.push(255);
    q.push(0);
    for (var Z = -1; ++Z < P.length; )
      q.push(P[Z]);
    var z = a(q, L);
    return z;
  }
  function s(P, M) {
    var R = n[M.curve.join(".")];
    if (!R)
      throw new Error("unknown curve " + M.curve.join("."));
    var F = new r(R), C = F.keyFromPrivate(M.privateKey), L = C.sign(P);
    return e.from(L.toDER());
  }
  function b(P, M, R) {
    for (var F = M.params.priv_key, C = M.params.p, L = M.params.q, U = M.params.g, q = new f(0), Z, z = m(P, L).mod(L), G = !1, O = v(F, L, P, R); G === !1; )
      Z = I(L, O, R), q = k(U, Z, C, L), G = Z.invm(L).imul(z.add(F.mul(q))).mod(L), G.cmpn(0) === 0 && (G = !1, q = new f(0));
    return l(q, G);
  }
  function l(P, M) {
    P = P.toArray(), M = M.toArray(), P[0] & 128 && (P = [0].concat(P)), M[0] & 128 && (M = [0].concat(M));
    var R = P.length + M.length + 4, F = [48, R, 2, P.length];
    return F = F.concat(P, [2, M.length], M), e.from(F);
  }
  function v(P, M, R, F) {
    if (P = e.from(P.toArray()), P.length < M.byteLength()) {
      var C = e.alloc(M.byteLength() - P.length);
      P = e.concat([C, P]);
    }
    var L = R.length, U = x(R, M), q = e.alloc(L);
    q.fill(1);
    var Z = e.alloc(L);
    return Z = t(F, Z).update(q).update(e.from([0])).update(P).update(U).digest(), q = t(F, Z).update(q).digest(), Z = t(F, Z).update(q).update(e.from([1])).update(P).update(U).digest(), q = t(F, Z).update(q).digest(), { k: Z, v: q };
  }
  function m(P, M) {
    var R = new f(P), F = (P.length << 3) - M.bitLength();
    return F > 0 && R.ishrn(F), R;
  }
  function x(P, M) {
    P = m(P, M), P = P.mod(M);
    var R = e.from(P.toArray());
    if (R.length < M.byteLength()) {
      var F = e.alloc(M.byteLength() - R.length);
      R = e.concat([F, R]);
    }
    return R;
  }
  function I(P, M, R) {
    var F, C;
    do {
      for (F = e.alloc(0); F.length * 8 < P.bitLength(); )
        M.v = t(R, M.k).update(M.v).digest(), F = e.concat([F, M.v]);
      C = m(F, P), M.k = t(R, M.k).update(M.v).update(e.from([0])).digest(), M.v = t(R, M.k).update(M.v).digest();
    } while (C.cmp(P) !== -1);
    return C;
  }
  function k(P, M, R, F) {
    return P.toRed(f.mont(R)).redPow(M).fromRed().mod(F);
  }
  return G1.exports = o, G1.exports.getKey = v, G1.exports.makeKey = I, G1.exports;
}
var y8, du;
function _O() {
  if (du)
    return y8;
  du = 1;
  var e = fe.Buffer, t = gm, a = s6().ec, r = yi, f = Bm;
  function i(b, l, v, m, x) {
    var I = r(v);
    if (I.type === "ec") {
      if (m !== "ecdsa" && m !== "ecdsa/rsa")
        throw new Error("wrong public key type");
      return n(b, l, I);
    } else if (I.type === "dsa") {
      if (m !== "dsa")
        throw new Error("wrong public key type");
      return o(b, l, I);
    } else if (m !== "rsa" && m !== "ecdsa/rsa")
      throw new Error("wrong public key type");
    l = e.concat([x, l]);
    for (var k = I.modulus.byteLength(), P = [1], M = 0; l.length + P.length + 2 < k; )
      P.push(255), M++;
    P.push(0);
    for (var R = -1; ++R < l.length; )
      P.push(l[R]);
    P = e.from(P);
    var F = t.mont(I.modulus);
    b = new t(b).toRed(F), b = b.redPow(new t(I.publicExponent)), b = e.from(b.fromRed().toArray());
    var C = M < 8 ? 1 : 0;
    for (k = Math.min(b.length, P.length), b.length !== P.length && (C = 1), R = -1; ++R < k; )
      C |= b[R] ^ P[R];
    return C === 0;
  }
  function n(b, l, v) {
    var m = f[v.data.algorithm.curve.join(".")];
    if (!m)
      throw new Error("unknown curve " + v.data.algorithm.curve.join("."));
    var x = new a(m), I = v.data.subjectPrivateKey.data;
    return x.verify(l, b, I);
  }
  function o(b, l, v) {
    var m = v.data.p, x = v.data.q, I = v.data.g, k = v.data.pub_key, P = r.signature.decode(b, "der"), M = P.s, R = P.r;
    s(M, x), s(R, x);
    var F = t.mont(m), C = M.invm(x), L = I.toRed(F).redPow(new t(l).mul(C).mod(x)).fromRed().mul(k.toRed(F).redPow(R.mul(C).mod(x)).fromRed()).mod(m).mod(x);
    return L.cmp(R) === 0;
  }
  function s(b, l) {
    if (b.cmpn(0) <= 0)
      throw new Error("invalid sig");
    if (b.cmp(l) >= l)
      throw new Error("invalid sig");
  }
  return y8 = i, y8;
}
var g8, cu;
function wO() {
  if (cu)
    return g8;
  cu = 1;
  var e = fe.Buffer, t = Q9, a = Ek, r = X7(), f = xO(), i = _O(), n = yb;
  Object.keys(n).forEach(function(v) {
    n[v].id = e.from(n[v].id, "hex"), n[v.toLowerCase()] = n[v];
  });
  function o(v) {
    a.Writable.call(this);
    var m = n[v];
    if (!m)
      throw new Error("Unknown message digest");
    this._hashType = m.hash, this._hash = t(m.hash), this._tag = m.id, this._signType = m.sign;
  }
  r(o, a.Writable), o.prototype._write = function(m, x, I) {
    this._hash.update(m), I();
  }, o.prototype.update = function(m, x) {
    return typeof m == "string" && (m = e.from(m, x)), this._hash.update(m), this;
  }, o.prototype.sign = function(m, x) {
    this.end();
    var I = this._hash.digest(), k = f(I, m, this._hashType, this._signType, this._tag);
    return x ? k.toString(x) : k;
  };
  function s(v) {
    a.Writable.call(this);
    var m = n[v];
    if (!m)
      throw new Error("Unknown message digest");
    this._hash = t(m.hash), this._tag = m.id, this._signType = m.sign;
  }
  r(s, a.Writable), s.prototype._write = function(m, x, I) {
    this._hash.update(m), I();
  }, s.prototype.update = function(m, x) {
    return typeof m == "string" && (m = e.from(m, x)), this._hash.update(m), this;
  }, s.prototype.verify = function(m, x, I) {
    typeof x == "string" && (x = e.from(x, I)), this.end();
    var k = this._hash.digest();
    return i(x, k, m, this._signType, this._tag);
  };
  function b(v) {
    return new o(v);
  }
  function l(v) {
    return new s(v);
  }
  return g8 = {
    Sign: b,
    Verify: l,
    createSign: b,
    createVerify: l
  }, g8;
}
var x8, uu;
function SO() {
  if (uu)
    return x8;
  uu = 1;
  var e = s6(), t = u0;
  x8 = function(n) {
    return new r(n);
  };
  var a = {
    secp256k1: {
      name: "secp256k1",
      byteLength: 32
    },
    secp224r1: {
      name: "p224",
      byteLength: 28
    },
    prime256v1: {
      name: "p256",
      byteLength: 32
    },
    prime192v1: {
      name: "p192",
      byteLength: 24
    },
    ed25519: {
      name: "ed25519",
      byteLength: 32
    },
    secp384r1: {
      name: "p384",
      byteLength: 48
    },
    secp521r1: {
      name: "p521",
      byteLength: 66
    }
  };
  a.p224 = a.secp224r1, a.p256 = a.secp256r1 = a.prime256v1, a.p192 = a.secp192r1 = a.prime192v1, a.p384 = a.secp384r1, a.p521 = a.secp521r1;
  function r(i) {
    this.curveType = a[i], this.curveType || (this.curveType = {
      name: i
    }), this.curve = new e.ec(this.curveType.name), this.keys = void 0;
  }
  r.prototype.generateKeys = function(i, n) {
    return this.keys = this.curve.genKeyPair(), this.getPublicKey(i, n);
  }, r.prototype.computeSecret = function(i, n, o) {
    n = n || "utf8", Q.Buffer.isBuffer(i) || (i = new Q.Buffer(i, n));
    var s = this.curve.keyFromPublic(i).getPublic(), b = s.mul(this.keys.getPrivate()).getX();
    return f(b, o, this.curveType.byteLength);
  }, r.prototype.getPublicKey = function(i, n) {
    var o = this.keys.getPublic(n === "compressed", !0);
    return n === "hybrid" && (o[o.length - 1] % 2 ? o[0] = 7 : o[0] = 6), f(o, i);
  }, r.prototype.getPrivateKey = function(i) {
    return f(this.keys.getPrivate(), i);
  }, r.prototype.setPublicKey = function(i, n) {
    return n = n || "utf8", Q.Buffer.isBuffer(i) || (i = new Q.Buffer(i, n)), this.keys._importPublic(i), this;
  }, r.prototype.setPrivateKey = function(i, n) {
    n = n || "utf8", Q.Buffer.isBuffer(i) || (i = new Q.Buffer(i, n));
    var o = new t(i);
    return o = o.toString(16), this.keys = this.curve.genKeyPair(), this.keys._importPrivate(o), this;
  };
  function f(i, n, o) {
    Array.isArray(i) || (i = i.toArray());
    var s = new Q.Buffer(i);
    if (o && s.length < o) {
      var b = new Q.Buffer(o - s.length);
      b.fill(0), s = Q.Buffer.concat([b, s]);
    }
    return n ? s.toString(n) : s;
  }
  return x8;
}
var Nm = {}, EO = Q9, Uo = fe.Buffer, Cm = function(e, t) {
  for (var a = Uo.alloc(0), r = 0, f; a.length < t; )
    f = TO(r++), a = Uo.concat([a, EO("sha1").update(e).update(f).digest()]);
  return a.slice(0, t);
};
function TO(e) {
  var t = Uo.allocUnsafe(4);
  return t.writeUInt32BE(e, 0), t;
}
var Dm = function(t, a) {
  for (var r = t.length, f = -1; ++f < r; )
    t[f] ^= a[f];
  return t;
}, lu = u0, AO = fe.Buffer;
function IO(e, t) {
  return AO.from(e.toRed(lu.mont(t.modulus)).redPow(new lu(t.publicExponent)).fromRed().toArray());
}
var Lm = IO, kO = yi, $o = x1, OO = Q9, pu = Cm, hu = Dm, wd = u0, PO = Lm, MO = dd, k5 = fe.Buffer, RO = function(t, a, r) {
  var f;
  t.padding ? f = t.padding : r ? f = 1 : f = 4;
  var i = kO(t), n;
  if (f === 4)
    n = BO(i, a);
  else if (f === 1)
    n = NO(i, a, r);
  else if (f === 3) {
    if (n = new wd(a), n.cmp(i.modulus) >= 0)
      throw new Error("data too long for modulus");
  } else
    throw new Error("unknown padding");
  return r ? MO(n, i) : PO(n, i);
};
function BO(e, t) {
  var a = e.modulus.byteLength(), r = t.length, f = OO("sha1").update(k5.alloc(0)).digest(), i = f.length, n = 2 * i;
  if (r > a - n - 2)
    throw new Error("message too long");
  var o = k5.alloc(a - r - n - 2), s = a - i - 1, b = $o(i), l = hu(k5.concat([f, o, k5.alloc(1, 1), t], s), pu(b, s)), v = hu(b, pu(l, i));
  return new wd(k5.concat([k5.alloc(1), v, l], a));
}
function NO(e, t, a) {
  var r = t.length, f = e.modulus.byteLength();
  if (r > f - 11)
    throw new Error("message too long");
  var i;
  return a ? i = k5.alloc(f - r - 3, 255) : i = CO(f - r - 3), new wd(k5.concat([k5.from([0, a ? 1 : 2]), i, k5.alloc(1), t], f));
}
function CO(e) {
  for (var t = k5.allocUnsafe(e), a = 0, r = $o(e * 2), f = 0, i; a < e; )
    f === r.length && (r = $o(e * 2), f = 0), i = r[f++], i && (t[a++] = i);
  return t;
}
var DO = yi, bu = Cm, mu = Dm, vu = u0, LO = dd, FO = Q9, HO = Lm, M9 = fe.Buffer, UO = function(t, a, r) {
  var f;
  t.padding ? f = t.padding : r ? f = 1 : f = 4;
  var i = DO(t), n = i.modulus.byteLength();
  if (a.length > n || new vu(a).cmp(i.modulus) >= 0)
    throw new Error("decryption error");
  var o;
  r ? o = HO(new vu(a), i) : o = LO(a, i);
  var s = M9.alloc(n - o.length);
  if (o = M9.concat([s, o], n), f === 4)
    return $O(i, o);
  if (f === 1)
    return jO(i, o, r);
  if (f === 3)
    return o;
  throw new Error("unknown padding");
};
function $O(e, t) {
  var a = e.modulus.byteLength(), r = FO("sha1").update(M9.alloc(0)).digest(), f = r.length;
  if (t[0] !== 0)
    throw new Error("decryption error");
  var i = t.slice(1, f + 1), n = t.slice(f + 1), o = mu(i, bu(n, f)), s = mu(n, bu(o, a - f - 1));
  if (VO(r, s.slice(0, f)))
    throw new Error("decryption error");
  for (var b = f; s[b] === 0; )
    b++;
  if (s[b++] !== 1)
    throw new Error("decryption error");
  return s.slice(b);
}
function jO(e, t, a) {
  for (var r = t.slice(0, 2), f = 2, i = 0; t[f++] !== 0; )
    if (f >= t.length) {
      i++;
      break;
    }
  var n = t.slice(2, f - 1);
  if ((r.toString("hex") !== "0002" && !a || r.toString("hex") !== "0001" && a) && i++, n.length < 8 && i++, i)
    throw new Error("decryption error");
  return t.slice(f);
}
function VO(e, t) {
  e = M9.from(e), t = M9.from(t);
  var a = 0, r = e.length;
  e.length !== t.length && (a++, r = Math.min(e.length, t.length));
  for (var f = -1; ++f < r; )
    a += e[f] ^ t[f];
  return a;
}
(function(e) {
  e.publicEncrypt = RO, e.privateDecrypt = UO, e.privateEncrypt = function(a, r) {
    return e.publicEncrypt(a, r, !0);
  }, e.publicDecrypt = function(a, r) {
    return e.privateDecrypt(a, r, !0);
  };
})(Nm);
var i9 = {};
function yu() {
  throw new Error(`secure random number generation not supported by this browser
use chrome, FireFox or Internet Explorer 11`);
}
var Fm = fe, gu = x1, Hm = Fm.Buffer, Um = Fm.kMaxLength, jo = I7.crypto || I7.msCrypto, $m = Math.pow(2, 32) - 1;
function jm(e, t) {
  if (typeof e != "number" || e !== e)
    throw new TypeError("offset must be a number");
  if (e > $m || e < 0)
    throw new TypeError("offset must be a uint32");
  if (e > Um || e > t)
    throw new RangeError("offset out of range");
}
function Vm(e, t, a) {
  if (typeof e != "number" || e !== e)
    throw new TypeError("size must be a number");
  if (e > $m || e < 0)
    throw new TypeError("size must be a uint32");
  if (e + t > a || e > Um)
    throw new RangeError("buffer too small");
}
jo && jo.getRandomValues || !g7.browser ? (i9.randomFill = zO, i9.randomFillSync = qO) : (i9.randomFill = yu, i9.randomFillSync = yu);
function zO(e, t, a, r) {
  if (!Hm.isBuffer(e) && !(e instanceof I7.Uint8Array))
    throw new TypeError('"buf" argument must be a Buffer or Uint8Array');
  if (typeof t == "function")
    r = t, t = 0, a = e.length;
  else if (typeof a == "function")
    r = a, a = e.length - t;
  else if (typeof r != "function")
    throw new TypeError('"cb" argument must be a function');
  return jm(t, e.length), Vm(a, t, e.length), zm(e, t, a, r);
}
function zm(e, t, a, r) {
  if (g7.browser) {
    var f = e.buffer, i = new Uint8Array(f, t, a);
    if (jo.getRandomValues(i), r) {
      g7.nextTick(function() {
        r(null, e);
      });
      return;
    }
    return e;
  }
  if (r) {
    gu(a, function(o, s) {
      if (o)
        return r(o);
      s.copy(e, t), r(null, e);
    });
    return;
  }
  var n = gu(a);
  return n.copy(e, t), e;
}
function qO(e, t, a) {
  if (typeof t > "u" && (t = 0), !Hm.isBuffer(e) && !(e instanceof I7.Uint8Array))
    throw new TypeError('"buf" argument must be a Buffer or Uint8Array');
  return jm(t, e.length), a === void 0 && (a = e.length - t), Vm(a, t, e.length), zm(e, t, a);
}
var xu;
function gi() {
  if (xu)
    return re;
  xu = 1, re.randomBytes = re.rng = re.pseudoRandomBytes = re.prng = x1, re.createHash = re.Hash = Q9, re.createHmac = re.Hmac = vb;
  var e = pA, t = Object.keys(e), a = ["sha1", "sha224", "sha256", "sha384", "sha512", "md5", "rmd160"].concat(t);
  re.getHashes = function() {
    return a;
  };
  var r = oi;
  re.pbkdf2 = r.pbkdf2, re.pbkdf2Sync = r.pbkdf2Sync;
  var f = N5;
  re.Cipher = f.Cipher, re.createCipher = f.createCipher, re.Cipheriv = f.Cipheriv, re.createCipheriv = f.createCipheriv, re.Decipher = f.Decipher, re.createDecipher = f.createDecipher, re.Decipheriv = f.Decipheriv, re.createDecipheriv = f.createDecipheriv, re.getCiphers = f.getCiphers, re.listCiphers = f.listCiphers;
  var i = qI();
  re.DiffieHellmanGroup = i.DiffieHellmanGroup, re.createDiffieHellmanGroup = i.createDiffieHellmanGroup, re.getDiffieHellman = i.getDiffieHellman, re.createDiffieHellman = i.createDiffieHellman, re.DiffieHellman = i.DiffieHellman;
  var n = wO();
  re.createSign = n.createSign, re.Sign = n.Sign, re.createVerify = n.createVerify, re.Verify = n.Verify, re.createECDH = SO();
  var o = Nm;
  re.publicEncrypt = o.publicEncrypt, re.privateEncrypt = o.privateEncrypt, re.publicDecrypt = o.publicDecrypt, re.privateDecrypt = o.privateDecrypt;
  var s = i9;
  return re.randomFill = s.randomFill, re.randomFillSync = s.randomFillSync, re.createCredentials = function() {
    throw new Error([
      "sorry, createCredentials is not implemented yet",
      "we accept pull requests",
      "https://github.com/crypto-browserify/crypto-browserify"
    ].join(`
`));
  }, re.constants = {
    DH_CHECK_P_NOT_SAFE_PRIME: 2,
    DH_CHECK_P_NOT_PRIME: 1,
    DH_UNABLE_TO_CHECK_GENERATOR: 4,
    DH_NOT_SUITABLE_GENERATOR: 8,
    NPN_ENABLED: 1,
    ALPN_ENABLED: 1,
    RSA_PKCS1_PADDING: 1,
    RSA_SSLV23_PADDING: 2,
    RSA_NO_PADDING: 3,
    RSA_PKCS1_OAEP_PADDING: 4,
    RSA_X931_PADDING: 5,
    RSA_PKCS1_PSS_PADDING: 6,
    POINT_CONVERSION_COMPRESSED: 2,
    POINT_CONVERSION_UNCOMPRESSED: 4,
    POINT_CONVERSION_HYBRID: 6
  }, re;
}
var _u;
function Sd() {
  if (_u)
    return T6.exports;
  _u = 1;
  var e;
  T6.exports = function(f) {
    return e || (e = new t(null)), e.generate(f);
  };
  function t(r) {
    this.rand = r;
  }
  if (T6.exports.Rand = t, t.prototype.generate = function(f) {
    return this._rand(f);
  }, t.prototype._rand = function(f) {
    if (this.rand.getBytes)
      return this.rand.getBytes(f);
    for (var i = new Uint8Array(f), n = 0; n < i.length; n++)
      i[n] = this.rand.getByte();
    return i;
  }, typeof self == "object")
    self.crypto && self.crypto.getRandomValues ? t.prototype._rand = function(f) {
      var i = new Uint8Array(f);
      return self.crypto.getRandomValues(i), i;
    } : self.msCrypto && self.msCrypto.getRandomValues ? t.prototype._rand = function(f) {
      var i = new Uint8Array(f);
      return self.msCrypto.getRandomValues(i), i;
    } : typeof window == "object" && (t.prototype._rand = function() {
      throw new Error("Not implemented yet");
    });
  else
    try {
      var a = gi();
      if (typeof a.randomBytes != "function")
        throw new Error("Not supported");
      t.prototype._rand = function(f) {
        return a.randomBytes(f);
      };
    } catch {
    }
  return T6.exports;
}
var Ed = {}, $a = u0, i6 = J0, If = i6.getNAF, KO = i6.getJSF, kf = i6.assert;
function Ra(e, t) {
  this.type = e, this.p = new $a(t.p, 16), this.red = t.prime ? $a.red(t.prime) : $a.mont(this.p), this.zero = new $a(0).toRed(this.red), this.one = new $a(1).toRed(this.red), this.two = new $a(2).toRed(this.red), this.n = t.n && new $a(t.n, 16), this.g = t.g && this.pointFromJSON(t.g, t.gRed), this._wnafT1 = new Array(4), this._wnafT2 = new Array(4), this._wnafT3 = new Array(4), this._wnafT4 = new Array(4), this._bitLength = this.n ? this.n.bitLength() : 0;
  var a = this.n && this.p.div(this.n);
  !a || a.cmpn(100) > 0 ? this.redN = null : (this._maxwellTrick = !0, this.redN = this.n.toRed(this.red));
}
var xi = Ra;
Ra.prototype.point = function() {
  throw new Error("Not implemented");
};
Ra.prototype.validate = function() {
  throw new Error("Not implemented");
};
Ra.prototype._fixedNafMul = function(t, a) {
  kf(t.precomputed);
  var r = t._getDoubles(), f = If(a, 1, this._bitLength), i = (1 << r.step + 1) - (r.step % 2 === 0 ? 2 : 1);
  i /= 3;
  var n = [], o, s;
  for (o = 0; o < f.length; o += r.step) {
    s = 0;
    for (var b = o + r.step - 1; b >= o; b--)
      s = (s << 1) + f[b];
    n.push(s);
  }
  for (var l = this.jpoint(null, null, null), v = this.jpoint(null, null, null), m = i; m > 0; m--) {
    for (o = 0; o < n.length; o++)
      s = n[o], s === m ? v = v.mixedAdd(r.points[o]) : s === -m && (v = v.mixedAdd(r.points[o].neg()));
    l = l.add(v);
  }
  return l.toP();
};
Ra.prototype._wnafMul = function(t, a) {
  var r = 4, f = t._getNAFPoints(r);
  r = f.wnd;
  for (var i = f.points, n = If(a, r, this._bitLength), o = this.jpoint(null, null, null), s = n.length - 1; s >= 0; s--) {
    for (var b = 0; s >= 0 && n[s] === 0; s--)
      b++;
    if (s >= 0 && b++, o = o.dblp(b), s < 0)
      break;
    var l = n[s];
    kf(l !== 0), t.type === "affine" ? l > 0 ? o = o.mixedAdd(i[l - 1 >> 1]) : o = o.mixedAdd(i[-l - 1 >> 1].neg()) : l > 0 ? o = o.add(i[l - 1 >> 1]) : o = o.add(i[-l - 1 >> 1].neg());
  }
  return t.type === "affine" ? o.toP() : o;
};
Ra.prototype._wnafMulAdd = function(t, a, r, f, i) {
  var n = this._wnafT1, o = this._wnafT2, s = this._wnafT3, b = 0, l, v, m;
  for (l = 0; l < f; l++) {
    m = a[l];
    var x = m._getNAFPoints(t);
    n[l] = x.wnd, o[l] = x.points;
  }
  for (l = f - 1; l >= 1; l -= 2) {
    var I = l - 1, k = l;
    if (n[I] !== 1 || n[k] !== 1) {
      s[I] = If(r[I], n[I], this._bitLength), s[k] = If(r[k], n[k], this._bitLength), b = Math.max(s[I].length, b), b = Math.max(s[k].length, b);
      continue;
    }
    var P = [
      a[I],
      /* 1 */
      null,
      /* 3 */
      null,
      /* 5 */
      a[k]
      /* 7 */
    ];
    a[I].y.cmp(a[k].y) === 0 ? (P[1] = a[I].add(a[k]), P[2] = a[I].toJ().mixedAdd(a[k].neg())) : a[I].y.cmp(a[k].y.redNeg()) === 0 ? (P[1] = a[I].toJ().mixedAdd(a[k]), P[2] = a[I].add(a[k].neg())) : (P[1] = a[I].toJ().mixedAdd(a[k]), P[2] = a[I].toJ().mixedAdd(a[k].neg()));
    var M = [
      -3,
      /* -1 -1 */
      -1,
      /* -1 0 */
      -5,
      /* -1 1 */
      -7,
      /* 0 -1 */
      0,
      /* 0 0 */
      7,
      /* 0 1 */
      5,
      /* 1 -1 */
      1,
      /* 1 0 */
      3
      /* 1 1 */
    ], R = KO(r[I], r[k]);
    for (b = Math.max(R[0].length, b), s[I] = new Array(b), s[k] = new Array(b), v = 0; v < b; v++) {
      var F = R[0][v] | 0, C = R[1][v] | 0;
      s[I][v] = M[(F + 1) * 3 + (C + 1)], s[k][v] = 0, o[I] = P;
    }
  }
  var L = this.jpoint(null, null, null), U = this._wnafT4;
  for (l = b; l >= 0; l--) {
    for (var q = 0; l >= 0; ) {
      var Z = !0;
      for (v = 0; v < f; v++)
        U[v] = s[v][l] | 0, U[v] !== 0 && (Z = !1);
      if (!Z)
        break;
      q++, l--;
    }
    if (l >= 0 && q++, L = L.dblp(q), l < 0)
      break;
    for (v = 0; v < f; v++) {
      var z = U[v];
      z !== 0 && (z > 0 ? m = o[v][z - 1 >> 1] : z < 0 && (m = o[v][-z - 1 >> 1].neg()), m.type === "affine" ? L = L.mixedAdd(m) : L = L.add(m));
    }
  }
  for (l = 0; l < f; l++)
    o[l] = null;
  return i ? L : L.toP();
};
function _5(e, t) {
  this.curve = e, this.type = t, this.precomputed = null;
}
Ra.BasePoint = _5;
_5.prototype.eq = function() {
  throw new Error("Not implemented");
};
_5.prototype.validate = function() {
  return this.curve.validate(this);
};
Ra.prototype.decodePoint = function(t, a) {
  t = i6.toArray(t, a);
  var r = this.p.byteLength();
  if ((t[0] === 4 || t[0] === 6 || t[0] === 7) && t.length - 1 === 2 * r) {
    t[0] === 6 ? kf(t[t.length - 1] % 2 === 0) : t[0] === 7 && kf(t[t.length - 1] % 2 === 1);
    var f = this.point(
      t.slice(1, 1 + r),
      t.slice(1 + r, 1 + 2 * r)
    );
    return f;
  } else if ((t[0] === 2 || t[0] === 3) && t.length - 1 === r)
    return this.pointFromX(t.slice(1, 1 + r), t[0] === 3);
  throw new Error("Unknown point format");
};
_5.prototype.encodeCompressed = function(t) {
  return this.encode(t, !0);
};
_5.prototype._encode = function(t) {
  var a = this.curve.p.byteLength(), r = this.getX().toArray("be", a);
  return t ? [this.getY().isEven() ? 2 : 3].concat(r) : [4].concat(r, this.getY().toArray("be", a));
};
_5.prototype.encode = function(t, a) {
  return i6.encode(this._encode(a), t);
};
_5.prototype.precompute = function(t) {
  if (this.precomputed)
    return this;
  var a = {
    doubles: null,
    naf: null,
    beta: null
  };
  return a.naf = this._getNAFPoints(8), a.doubles = this._getDoubles(4, t), a.beta = this._getBeta(), this.precomputed = a, this;
};
_5.prototype._hasDoubles = function(t) {
  if (!this.precomputed)
    return !1;
  var a = this.precomputed.doubles;
  return a ? a.points.length >= Math.ceil((t.bitLength() + 1) / a.step) : !1;
};
_5.prototype._getDoubles = function(t, a) {
  if (this.precomputed && this.precomputed.doubles)
    return this.precomputed.doubles;
  for (var r = [this], f = this, i = 0; i < a; i += t) {
    for (var n = 0; n < t; n++)
      f = f.dbl();
    r.push(f);
  }
  return {
    step: t,
    points: r
  };
};
_5.prototype._getNAFPoints = function(t) {
  if (this.precomputed && this.precomputed.naf)
    return this.precomputed.naf;
  for (var a = [this], r = (1 << t) - 1, f = r === 1 ? null : this.dbl(), i = 1; i < r; i++)
    a[i] = a[i - 1].add(f);
  return {
    wnd: t,
    points: a
  };
};
_5.prototype._getBeta = function() {
  return null;
};
_5.prototype.dblp = function(t) {
  for (var a = this, r = 0; r < t; r++)
    a = a.dbl();
  return a;
};
var GO = J0, Ue = u0, Td = X7(), E1 = xi, WO = GO.assert;
function w5(e) {
  E1.call(this, "short", e), this.a = new Ue(e.a, 16).toRed(this.red), this.b = new Ue(e.b, 16).toRed(this.red), this.tinv = this.two.redInvm(), this.zeroA = this.a.fromRed().cmpn(0) === 0, this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0, this.endo = this._getEndomorphism(e), this._endoWnafT1 = new Array(4), this._endoWnafT2 = new Array(4);
}
Td(w5, E1);
var ZO = w5;
w5.prototype._getEndomorphism = function(t) {
  if (!(!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)) {
    var a, r;
    if (t.beta)
      a = new Ue(t.beta, 16).toRed(this.red);
    else {
      var f = this._getEndoRoots(this.p);
      a = f[0].cmp(f[1]) < 0 ? f[0] : f[1], a = a.toRed(this.red);
    }
    if (t.lambda)
      r = new Ue(t.lambda, 16);
    else {
      var i = this._getEndoRoots(this.n);
      this.g.mul(i[0]).x.cmp(this.g.x.redMul(a)) === 0 ? r = i[0] : (r = i[1], WO(this.g.mul(r).x.cmp(this.g.x.redMul(a)) === 0));
    }
    var n;
    return t.basis ? n = t.basis.map(function(o) {
      return {
        a: new Ue(o.a, 16),
        b: new Ue(o.b, 16)
      };
    }) : n = this._getEndoBasis(r), {
      beta: a,
      lambda: r,
      basis: n
    };
  }
};
w5.prototype._getEndoRoots = function(t) {
  var a = t === this.p ? this.red : Ue.mont(t), r = new Ue(2).toRed(a).redInvm(), f = r.redNeg(), i = new Ue(3).toRed(a).redNeg().redSqrt().redMul(r), n = f.redAdd(i).fromRed(), o = f.redSub(i).fromRed();
  return [n, o];
};
w5.prototype._getEndoBasis = function(t) {
  for (var a = this.n.ushrn(Math.floor(this.n.bitLength() / 2)), r = t, f = this.n.clone(), i = new Ue(1), n = new Ue(0), o = new Ue(0), s = new Ue(1), b, l, v, m, x, I, k, P = 0, M, R; r.cmpn(0) !== 0; ) {
    var F = f.div(r);
    M = f.sub(F.mul(r)), R = o.sub(F.mul(i));
    var C = s.sub(F.mul(n));
    if (!v && M.cmp(a) < 0)
      b = k.neg(), l = i, v = M.neg(), m = R;
    else if (v && ++P === 2)
      break;
    k = M, f = r, r = M, o = i, i = R, s = n, n = C;
  }
  x = M.neg(), I = R;
  var L = v.sqr().add(m.sqr()), U = x.sqr().add(I.sqr());
  return U.cmp(L) >= 0 && (x = b, I = l), v.negative && (v = v.neg(), m = m.neg()), x.negative && (x = x.neg(), I = I.neg()), [
    { a: v, b: m },
    { a: x, b: I }
  ];
};
w5.prototype._endoSplit = function(t) {
  var a = this.endo.basis, r = a[0], f = a[1], i = f.b.mul(t).divRound(this.n), n = r.b.neg().mul(t).divRound(this.n), o = i.mul(r.a), s = n.mul(f.a), b = i.mul(r.b), l = n.mul(f.b), v = t.sub(o).sub(s), m = b.add(l).neg();
  return { k1: v, k2: m };
};
w5.prototype.pointFromX = function(t, a) {
  t = new Ue(t, 16), t.red || (t = t.toRed(this.red));
  var r = t.redSqr().redMul(t).redIAdd(t.redMul(this.a)).redIAdd(this.b), f = r.redSqrt();
  if (f.redSqr().redSub(r).cmp(this.zero) !== 0)
    throw new Error("invalid point");
  var i = f.fromRed().isOdd();
  return (a && !i || !a && i) && (f = f.redNeg()), this.point(t, f);
};
w5.prototype.validate = function(t) {
  if (t.inf)
    return !0;
  var a = t.x, r = t.y, f = this.a.redMul(a), i = a.redSqr().redMul(a).redIAdd(f).redIAdd(this.b);
  return r.redSqr().redISub(i).cmpn(0) === 0;
};
w5.prototype._endoWnafMulAdd = function(t, a, r) {
  for (var f = this._endoWnafT1, i = this._endoWnafT2, n = 0; n < t.length; n++) {
    var o = this._endoSplit(a[n]), s = t[n], b = s._getBeta();
    o.k1.negative && (o.k1.ineg(), s = s.neg(!0)), o.k2.negative && (o.k2.ineg(), b = b.neg(!0)), f[n * 2] = s, f[n * 2 + 1] = b, i[n * 2] = o.k1, i[n * 2 + 1] = o.k2;
  }
  for (var l = this._wnafMulAdd(1, f, i, n * 2, r), v = 0; v < n * 2; v++)
    f[v] = null, i[v] = null;
  return l;
};
function l0(e, t, a, r) {
  E1.BasePoint.call(this, e, "affine"), t === null && a === null ? (this.x = null, this.y = null, this.inf = !0) : (this.x = new Ue(t, 16), this.y = new Ue(a, 16), r && (this.x.forceRed(this.curve.red), this.y.forceRed(this.curve.red)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.inf = !1);
}
Td(l0, E1.BasePoint);
w5.prototype.point = function(t, a, r) {
  return new l0(this, t, a, r);
};
w5.prototype.pointFromJSON = function(t, a) {
  return l0.fromJSON(this, t, a);
};
l0.prototype._getBeta = function() {
  if (this.curve.endo) {
    var t = this.precomputed;
    if (t && t.beta)
      return t.beta;
    var a = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
    if (t) {
      var r = this.curve, f = function(i) {
        return r.point(i.x.redMul(r.endo.beta), i.y);
      };
      t.beta = a, a.precomputed = {
        beta: null,
        naf: t.naf && {
          wnd: t.naf.wnd,
          points: t.naf.points.map(f)
        },
        doubles: t.doubles && {
          step: t.doubles.step,
          points: t.doubles.points.map(f)
        }
      };
    }
    return a;
  }
};
l0.prototype.toJSON = function() {
  return this.precomputed ? [this.x, this.y, this.precomputed && {
    doubles: this.precomputed.doubles && {
      step: this.precomputed.doubles.step,
      points: this.precomputed.doubles.points.slice(1)
    },
    naf: this.precomputed.naf && {
      wnd: this.precomputed.naf.wnd,
      points: this.precomputed.naf.points.slice(1)
    }
  }] : [this.x, this.y];
};
l0.fromJSON = function(t, a, r) {
  typeof a == "string" && (a = JSON.parse(a));
  var f = t.point(a[0], a[1], r);
  if (!a[2])
    return f;
  function i(o) {
    return t.point(o[0], o[1], r);
  }
  var n = a[2];
  return f.precomputed = {
    beta: null,
    doubles: n.doubles && {
      step: n.doubles.step,
      points: [f].concat(n.doubles.points.map(i))
    },
    naf: n.naf && {
      wnd: n.naf.wnd,
      points: [f].concat(n.naf.points.map(i))
    }
  }, f;
};
l0.prototype.inspect = function() {
  return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + ">";
};
l0.prototype.isInfinity = function() {
  return this.inf;
};
l0.prototype.add = function(t) {
  if (this.inf)
    return t;
  if (t.inf)
    return this;
  if (this.eq(t))
    return this.dbl();
  if (this.neg().eq(t))
    return this.curve.point(null, null);
  if (this.x.cmp(t.x) === 0)
    return this.curve.point(null, null);
  var a = this.y.redSub(t.y);
  a.cmpn(0) !== 0 && (a = a.redMul(this.x.redSub(t.x).redInvm()));
  var r = a.redSqr().redISub(this.x).redISub(t.x), f = a.redMul(this.x.redSub(r)).redISub(this.y);
  return this.curve.point(r, f);
};
l0.prototype.dbl = function() {
  if (this.inf)
    return this;
  var t = this.y.redAdd(this.y);
  if (t.cmpn(0) === 0)
    return this.curve.point(null, null);
  var a = this.curve.a, r = this.x.redSqr(), f = t.redInvm(), i = r.redAdd(r).redIAdd(r).redIAdd(a).redMul(f), n = i.redSqr().redISub(this.x.redAdd(this.x)), o = i.redMul(this.x.redSub(n)).redISub(this.y);
  return this.curve.point(n, o);
};
l0.prototype.getX = function() {
  return this.x.fromRed();
};
l0.prototype.getY = function() {
  return this.y.fromRed();
};
l0.prototype.mul = function(t) {
  return t = new Ue(t, 16), this.isInfinity() ? this : this._hasDoubles(t) ? this.curve._fixedNafMul(this, t) : this.curve.endo ? this.curve._endoWnafMulAdd([this], [t]) : this.curve._wnafMul(this, t);
};
l0.prototype.mulAdd = function(t, a, r) {
  var f = [this, a], i = [t, r];
  return this.curve.endo ? this.curve._endoWnafMulAdd(f, i) : this.curve._wnafMulAdd(1, f, i, 2);
};
l0.prototype.jmulAdd = function(t, a, r) {
  var f = [this, a], i = [t, r];
  return this.curve.endo ? this.curve._endoWnafMulAdd(f, i, !0) : this.curve._wnafMulAdd(1, f, i, 2, !0);
};
l0.prototype.eq = function(t) {
  return this === t || this.inf === t.inf && (this.inf || this.x.cmp(t.x) === 0 && this.y.cmp(t.y) === 0);
};
l0.prototype.neg = function(t) {
  if (this.inf)
    return this;
  var a = this.curve.point(this.x, this.y.redNeg());
  if (t && this.precomputed) {
    var r = this.precomputed, f = function(i) {
      return i.neg();
    };
    a.precomputed = {
      naf: r.naf && {
        wnd: r.naf.wnd,
        points: r.naf.points.map(f)
      },
      doubles: r.doubles && {
        step: r.doubles.step,
        points: r.doubles.points.map(f)
      }
    };
  }
  return a;
};
l0.prototype.toJ = function() {
  if (this.inf)
    return this.curve.jpoint(null, null, null);
  var t = this.curve.jpoint(this.x, this.y, this.curve.one);
  return t;
};
function _0(e, t, a, r) {
  E1.BasePoint.call(this, e, "jacobian"), t === null && a === null && r === null ? (this.x = this.curve.one, this.y = this.curve.one, this.z = new Ue(0)) : (this.x = new Ue(t, 16), this.y = new Ue(a, 16), this.z = new Ue(r, 16)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.zOne = this.z === this.curve.one;
}
Td(_0, E1.BasePoint);
w5.prototype.jpoint = function(t, a, r) {
  return new _0(this, t, a, r);
};
_0.prototype.toP = function() {
  if (this.isInfinity())
    return this.curve.point(null, null);
  var t = this.z.redInvm(), a = t.redSqr(), r = this.x.redMul(a), f = this.y.redMul(a).redMul(t);
  return this.curve.point(r, f);
};
_0.prototype.neg = function() {
  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
};
_0.prototype.add = function(t) {
  if (this.isInfinity())
    return t;
  if (t.isInfinity())
    return this;
  var a = t.z.redSqr(), r = this.z.redSqr(), f = this.x.redMul(a), i = t.x.redMul(r), n = this.y.redMul(a.redMul(t.z)), o = t.y.redMul(r.redMul(this.z)), s = f.redSub(i), b = n.redSub(o);
  if (s.cmpn(0) === 0)
    return b.cmpn(0) !== 0 ? this.curve.jpoint(null, null, null) : this.dbl();
  var l = s.redSqr(), v = l.redMul(s), m = f.redMul(l), x = b.redSqr().redIAdd(v).redISub(m).redISub(m), I = b.redMul(m.redISub(x)).redISub(n.redMul(v)), k = this.z.redMul(t.z).redMul(s);
  return this.curve.jpoint(x, I, k);
};
_0.prototype.mixedAdd = function(t) {
  if (this.isInfinity())
    return t.toJ();
  if (t.isInfinity())
    return this;
  var a = this.z.redSqr(), r = this.x, f = t.x.redMul(a), i = this.y, n = t.y.redMul(a).redMul(this.z), o = r.redSub(f), s = i.redSub(n);
  if (o.cmpn(0) === 0)
    return s.cmpn(0) !== 0 ? this.curve.jpoint(null, null, null) : this.dbl();
  var b = o.redSqr(), l = b.redMul(o), v = r.redMul(b), m = s.redSqr().redIAdd(l).redISub(v).redISub(v), x = s.redMul(v.redISub(m)).redISub(i.redMul(l)), I = this.z.redMul(o);
  return this.curve.jpoint(m, x, I);
};
_0.prototype.dblp = function(t) {
  if (t === 0)
    return this;
  if (this.isInfinity())
    return this;
  if (!t)
    return this.dbl();
  var a;
  if (this.curve.zeroA || this.curve.threeA) {
    var r = this;
    for (a = 0; a < t; a++)
      r = r.dbl();
    return r;
  }
  var f = this.curve.a, i = this.curve.tinv, n = this.x, o = this.y, s = this.z, b = s.redSqr().redSqr(), l = o.redAdd(o);
  for (a = 0; a < t; a++) {
    var v = n.redSqr(), m = l.redSqr(), x = m.redSqr(), I = v.redAdd(v).redIAdd(v).redIAdd(f.redMul(b)), k = n.redMul(m), P = I.redSqr().redISub(k.redAdd(k)), M = k.redISub(P), R = I.redMul(M);
    R = R.redIAdd(R).redISub(x);
    var F = l.redMul(s);
    a + 1 < t && (b = b.redMul(x)), n = P, s = F, l = R;
  }
  return this.curve.jpoint(n, l.redMul(i), s);
};
_0.prototype.dbl = function() {
  return this.isInfinity() ? this : this.curve.zeroA ? this._zeroDbl() : this.curve.threeA ? this._threeDbl() : this._dbl();
};
_0.prototype._zeroDbl = function() {
  var t, a, r;
  if (this.zOne) {
    var f = this.x.redSqr(), i = this.y.redSqr(), n = i.redSqr(), o = this.x.redAdd(i).redSqr().redISub(f).redISub(n);
    o = o.redIAdd(o);
    var s = f.redAdd(f).redIAdd(f), b = s.redSqr().redISub(o).redISub(o), l = n.redIAdd(n);
    l = l.redIAdd(l), l = l.redIAdd(l), t = b, a = s.redMul(o.redISub(b)).redISub(l), r = this.y.redAdd(this.y);
  } else {
    var v = this.x.redSqr(), m = this.y.redSqr(), x = m.redSqr(), I = this.x.redAdd(m).redSqr().redISub(v).redISub(x);
    I = I.redIAdd(I);
    var k = v.redAdd(v).redIAdd(v), P = k.redSqr(), M = x.redIAdd(x);
    M = M.redIAdd(M), M = M.redIAdd(M), t = P.redISub(I).redISub(I), a = k.redMul(I.redISub(t)).redISub(M), r = this.y.redMul(this.z), r = r.redIAdd(r);
  }
  return this.curve.jpoint(t, a, r);
};
_0.prototype._threeDbl = function() {
  var t, a, r;
  if (this.zOne) {
    var f = this.x.redSqr(), i = this.y.redSqr(), n = i.redSqr(), o = this.x.redAdd(i).redSqr().redISub(f).redISub(n);
    o = o.redIAdd(o);
    var s = f.redAdd(f).redIAdd(f).redIAdd(this.curve.a), b = s.redSqr().redISub(o).redISub(o);
    t = b;
    var l = n.redIAdd(n);
    l = l.redIAdd(l), l = l.redIAdd(l), a = s.redMul(o.redISub(b)).redISub(l), r = this.y.redAdd(this.y);
  } else {
    var v = this.z.redSqr(), m = this.y.redSqr(), x = this.x.redMul(m), I = this.x.redSub(v).redMul(this.x.redAdd(v));
    I = I.redAdd(I).redIAdd(I);
    var k = x.redIAdd(x);
    k = k.redIAdd(k);
    var P = k.redAdd(k);
    t = I.redSqr().redISub(P), r = this.y.redAdd(this.z).redSqr().redISub(m).redISub(v);
    var M = m.redSqr();
    M = M.redIAdd(M), M = M.redIAdd(M), M = M.redIAdd(M), a = I.redMul(k.redISub(t)).redISub(M);
  }
  return this.curve.jpoint(t, a, r);
};
_0.prototype._dbl = function() {
  var t = this.curve.a, a = this.x, r = this.y, f = this.z, i = f.redSqr().redSqr(), n = a.redSqr(), o = r.redSqr(), s = n.redAdd(n).redIAdd(n).redIAdd(t.redMul(i)), b = a.redAdd(a);
  b = b.redIAdd(b);
  var l = b.redMul(o), v = s.redSqr().redISub(l.redAdd(l)), m = l.redISub(v), x = o.redSqr();
  x = x.redIAdd(x), x = x.redIAdd(x), x = x.redIAdd(x);
  var I = s.redMul(m).redISub(x), k = r.redAdd(r).redMul(f);
  return this.curve.jpoint(v, I, k);
};
_0.prototype.trpl = function() {
  if (!this.curve.zeroA)
    return this.dbl().add(this);
  var t = this.x.redSqr(), a = this.y.redSqr(), r = this.z.redSqr(), f = a.redSqr(), i = t.redAdd(t).redIAdd(t), n = i.redSqr(), o = this.x.redAdd(a).redSqr().redISub(t).redISub(f);
  o = o.redIAdd(o), o = o.redAdd(o).redIAdd(o), o = o.redISub(n);
  var s = o.redSqr(), b = f.redIAdd(f);
  b = b.redIAdd(b), b = b.redIAdd(b), b = b.redIAdd(b);
  var l = i.redIAdd(o).redSqr().redISub(n).redISub(s).redISub(b), v = a.redMul(l);
  v = v.redIAdd(v), v = v.redIAdd(v);
  var m = this.x.redMul(s).redISub(v);
  m = m.redIAdd(m), m = m.redIAdd(m);
  var x = this.y.redMul(l.redMul(b.redISub(l)).redISub(o.redMul(s)));
  x = x.redIAdd(x), x = x.redIAdd(x), x = x.redIAdd(x);
  var I = this.z.redAdd(o).redSqr().redISub(r).redISub(s);
  return this.curve.jpoint(m, x, I);
};
_0.prototype.mul = function(t, a) {
  return t = new Ue(t, a), this.curve._wnafMul(this, t);
};
_0.prototype.eq = function(t) {
  if (t.type === "affine")
    return this.eq(t.toJ());
  if (this === t)
    return !0;
  var a = this.z.redSqr(), r = t.z.redSqr();
  if (this.x.redMul(r).redISub(t.x.redMul(a)).cmpn(0) !== 0)
    return !1;
  var f = a.redMul(this.z), i = r.redMul(t.z);
  return this.y.redMul(i).redISub(t.y.redMul(f)).cmpn(0) === 0;
};
_0.prototype.eqXToP = function(t) {
  var a = this.z.redSqr(), r = t.toRed(this.curve.red).redMul(a);
  if (this.x.cmp(r) === 0)
    return !0;
  for (var f = t.clone(), i = this.curve.redN.redMul(a); ; ) {
    if (f.iadd(this.curve.n), f.cmp(this.curve.p) >= 0)
      return !1;
    if (r.redIAdd(i), this.x.cmp(r) === 0)
      return !0;
  }
};
_0.prototype.inspect = function() {
  return this.isInfinity() ? "<EC JPoint Infinity>" : "<EC JPoint x: " + this.x.toString(16, 2) + " y: " + this.y.toString(16, 2) + " z: " + this.z.toString(16, 2) + ">";
};
_0.prototype.isInfinity = function() {
  return this.z.cmpn(0) === 0;
};
var Ur = u0, qm = X7(), _i = xi, YO = J0;
function T1(e) {
  _i.call(this, "mont", e), this.a = new Ur(e.a, 16).toRed(this.red), this.b = new Ur(e.b, 16).toRed(this.red), this.i4 = new Ur(4).toRed(this.red).redInvm(), this.two = new Ur(2).toRed(this.red), this.a24 = this.i4.redMul(this.a.redAdd(this.two));
}
qm(T1, _i);
var XO = T1;
T1.prototype.validate = function(t) {
  var a = t.normalize().x, r = a.redSqr(), f = r.redMul(a).redAdd(r.redMul(this.a)).redAdd(a), i = f.redSqrt();
  return i.redSqr().cmp(f) === 0;
};
function s0(e, t, a) {
  _i.BasePoint.call(this, e, "projective"), t === null && a === null ? (this.x = this.curve.one, this.z = this.curve.zero) : (this.x = new Ur(t, 16), this.z = new Ur(a, 16), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)));
}
qm(s0, _i.BasePoint);
T1.prototype.decodePoint = function(t, a) {
  return this.point(YO.toArray(t, a), 1);
};
T1.prototype.point = function(t, a) {
  return new s0(this, t, a);
};
T1.prototype.pointFromJSON = function(t) {
  return s0.fromJSON(this, t);
};
s0.prototype.precompute = function() {
};
s0.prototype._encode = function() {
  return this.getX().toArray("be", this.curve.p.byteLength());
};
s0.fromJSON = function(t, a) {
  return new s0(t, a[0], a[1] || t.one);
};
s0.prototype.inspect = function() {
  return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">";
};
s0.prototype.isInfinity = function() {
  return this.z.cmpn(0) === 0;
};
s0.prototype.dbl = function() {
  var t = this.x.redAdd(this.z), a = t.redSqr(), r = this.x.redSub(this.z), f = r.redSqr(), i = a.redSub(f), n = a.redMul(f), o = i.redMul(f.redAdd(this.curve.a24.redMul(i)));
  return this.curve.point(n, o);
};
s0.prototype.add = function() {
  throw new Error("Not supported on Montgomery curve");
};
s0.prototype.diffAdd = function(t, a) {
  var r = this.x.redAdd(this.z), f = this.x.redSub(this.z), i = t.x.redAdd(t.z), n = t.x.redSub(t.z), o = n.redMul(r), s = i.redMul(f), b = a.z.redMul(o.redAdd(s).redSqr()), l = a.x.redMul(o.redISub(s).redSqr());
  return this.curve.point(b, l);
};
s0.prototype.mul = function(t) {
  for (var a = t.clone(), r = this, f = this.curve.point(null, null), i = this, n = []; a.cmpn(0) !== 0; a.iushrn(1))
    n.push(a.andln(1));
  for (var o = n.length - 1; o >= 0; o--)
    n[o] === 0 ? (r = r.diffAdd(f, i), f = f.dbl()) : (f = r.diffAdd(f, i), r = r.dbl());
  return f;
};
s0.prototype.mulAdd = function() {
  throw new Error("Not supported on Montgomery curve");
};
s0.prototype.jumlAdd = function() {
  throw new Error("Not supported on Montgomery curve");
};
s0.prototype.eq = function(t) {
  return this.getX().cmp(t.getX()) === 0;
};
s0.prototype.normalize = function() {
  return this.x = this.x.redMul(this.z.redInvm()), this.z = this.curve.one, this;
};
s0.prototype.getX = function() {
  return this.normalize(), this.x.fromRed();
};
var JO = J0, Lt = u0, Km = X7(), wi = xi, QO = JO.assert;
function xt(e) {
  this.twisted = (e.a | 0) !== 1, this.mOneA = this.twisted && (e.a | 0) === -1, this.extended = this.mOneA, wi.call(this, "edwards", e), this.a = new Lt(e.a, 16).umod(this.red.m), this.a = this.a.toRed(this.red), this.c = new Lt(e.c, 16).toRed(this.red), this.c2 = this.c.redSqr(), this.d = new Lt(e.d, 16).toRed(this.red), this.dd = this.d.redAdd(this.d), QO(!this.twisted || this.c.fromRed().cmpn(1) === 0), this.oneC = (e.c | 0) === 1;
}
Km(xt, wi);
var eP = xt;
xt.prototype._mulA = function(t) {
  return this.mOneA ? t.redNeg() : this.a.redMul(t);
};
xt.prototype._mulC = function(t) {
  return this.oneC ? t : this.c.redMul(t);
};
xt.prototype.jpoint = function(t, a, r, f) {
  return this.point(t, a, r, f);
};
xt.prototype.pointFromX = function(t, a) {
  t = new Lt(t, 16), t.red || (t = t.toRed(this.red));
  var r = t.redSqr(), f = this.c2.redSub(this.a.redMul(r)), i = this.one.redSub(this.c2.redMul(this.d).redMul(r)), n = f.redMul(i.redInvm()), o = n.redSqrt();
  if (o.redSqr().redSub(n).cmp(this.zero) !== 0)
    throw new Error("invalid point");
  var s = o.fromRed().isOdd();
  return (a && !s || !a && s) && (o = o.redNeg()), this.point(t, o);
};
xt.prototype.pointFromY = function(t, a) {
  t = new Lt(t, 16), t.red || (t = t.toRed(this.red));
  var r = t.redSqr(), f = r.redSub(this.c2), i = r.redMul(this.d).redMul(this.c2).redSub(this.a), n = f.redMul(i.redInvm());
  if (n.cmp(this.zero) === 0) {
    if (a)
      throw new Error("invalid point");
    return this.point(this.zero, t);
  }
  var o = n.redSqrt();
  if (o.redSqr().redSub(n).cmp(this.zero) !== 0)
    throw new Error("invalid point");
  return o.fromRed().isOdd() !== a && (o = o.redNeg()), this.point(o, t);
};
xt.prototype.validate = function(t) {
  if (t.isInfinity())
    return !0;
  t.normalize();
  var a = t.x.redSqr(), r = t.y.redSqr(), f = a.redMul(this.a).redAdd(r), i = this.c2.redMul(this.one.redAdd(this.d.redMul(a).redMul(r)));
  return f.cmp(i) === 0;
};
function ke(e, t, a, r, f) {
  wi.BasePoint.call(this, e, "projective"), t === null && a === null && r === null ? (this.x = this.curve.zero, this.y = this.curve.one, this.z = this.curve.one, this.t = this.curve.zero, this.zOne = !0) : (this.x = new Lt(t, 16), this.y = new Lt(a, 16), this.z = r ? new Lt(r, 16) : this.curve.one, this.t = f && new Lt(f, 16), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.t && !this.t.red && (this.t = this.t.toRed(this.curve.red)), this.zOne = this.z === this.curve.one, this.curve.extended && !this.t && (this.t = this.x.redMul(this.y), this.zOne || (this.t = this.t.redMul(this.z.redInvm()))));
}
Km(ke, wi.BasePoint);
xt.prototype.pointFromJSON = function(t) {
  return ke.fromJSON(this, t);
};
xt.prototype.point = function(t, a, r, f) {
  return new ke(this, t, a, r, f);
};
ke.fromJSON = function(t, a) {
  return new ke(t, a[0], a[1], a[2]);
};
ke.prototype.inspect = function() {
  return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">";
};
ke.prototype.isInfinity = function() {
  return this.x.cmpn(0) === 0 && (this.y.cmp(this.z) === 0 || this.zOne && this.y.cmp(this.curve.c) === 0);
};
ke.prototype._extDbl = function() {
  var t = this.x.redSqr(), a = this.y.redSqr(), r = this.z.redSqr();
  r = r.redIAdd(r);
  var f = this.curve._mulA(t), i = this.x.redAdd(this.y).redSqr().redISub(t).redISub(a), n = f.redAdd(a), o = n.redSub(r), s = f.redSub(a), b = i.redMul(o), l = n.redMul(s), v = i.redMul(s), m = o.redMul(n);
  return this.curve.point(b, l, m, v);
};
ke.prototype._projDbl = function() {
  var t = this.x.redAdd(this.y).redSqr(), a = this.x.redSqr(), r = this.y.redSqr(), f, i, n, o, s, b;
  if (this.curve.twisted) {
    o = this.curve._mulA(a);
    var l = o.redAdd(r);
    this.zOne ? (f = t.redSub(a).redSub(r).redMul(l.redSub(this.curve.two)), i = l.redMul(o.redSub(r)), n = l.redSqr().redSub(l).redSub(l)) : (s = this.z.redSqr(), b = l.redSub(s).redISub(s), f = t.redSub(a).redISub(r).redMul(b), i = l.redMul(o.redSub(r)), n = l.redMul(b));
  } else
    o = a.redAdd(r), s = this.curve._mulC(this.z).redSqr(), b = o.redSub(s).redSub(s), f = this.curve._mulC(t.redISub(o)).redMul(b), i = this.curve._mulC(o).redMul(a.redISub(r)), n = o.redMul(b);
  return this.curve.point(f, i, n);
};
ke.prototype.dbl = function() {
  return this.isInfinity() ? this : this.curve.extended ? this._extDbl() : this._projDbl();
};
ke.prototype._extAdd = function(t) {
  var a = this.y.redSub(this.x).redMul(t.y.redSub(t.x)), r = this.y.redAdd(this.x).redMul(t.y.redAdd(t.x)), f = this.t.redMul(this.curve.dd).redMul(t.t), i = this.z.redMul(t.z.redAdd(t.z)), n = r.redSub(a), o = i.redSub(f), s = i.redAdd(f), b = r.redAdd(a), l = n.redMul(o), v = s.redMul(b), m = n.redMul(b), x = o.redMul(s);
  return this.curve.point(l, v, x, m);
};
ke.prototype._projAdd = function(t) {
  var a = this.z.redMul(t.z), r = a.redSqr(), f = this.x.redMul(t.x), i = this.y.redMul(t.y), n = this.curve.d.redMul(f).redMul(i), o = r.redSub(n), s = r.redAdd(n), b = this.x.redAdd(this.y).redMul(t.x.redAdd(t.y)).redISub(f).redISub(i), l = a.redMul(o).redMul(b), v, m;
  return this.curve.twisted ? (v = a.redMul(s).redMul(i.redSub(this.curve._mulA(f))), m = o.redMul(s)) : (v = a.redMul(s).redMul(i.redSub(f)), m = this.curve._mulC(o).redMul(s)), this.curve.point(l, v, m);
};
ke.prototype.add = function(t) {
  return this.isInfinity() ? t : t.isInfinity() ? this : this.curve.extended ? this._extAdd(t) : this._projAdd(t);
};
ke.prototype.mul = function(t) {
  return this._hasDoubles(t) ? this.curve._fixedNafMul(this, t) : this.curve._wnafMul(this, t);
};
ke.prototype.mulAdd = function(t, a, r) {
  return this.curve._wnafMulAdd(1, [this, a], [t, r], 2, !1);
};
ke.prototype.jmulAdd = function(t, a, r) {
  return this.curve._wnafMulAdd(1, [this, a], [t, r], 2, !0);
};
ke.prototype.normalize = function() {
  if (this.zOne)
    return this;
  var t = this.z.redInvm();
  return this.x = this.x.redMul(t), this.y = this.y.redMul(t), this.t && (this.t = this.t.redMul(t)), this.z = this.curve.one, this.zOne = !0, this;
};
ke.prototype.neg = function() {
  return this.curve.point(
    this.x.redNeg(),
    this.y,
    this.z,
    this.t && this.t.redNeg()
  );
};
ke.prototype.getX = function() {
  return this.normalize(), this.x.fromRed();
};
ke.prototype.getY = function() {
  return this.normalize(), this.y.fromRed();
};
ke.prototype.eq = function(t) {
  return this === t || this.getX().cmp(t.getX()) === 0 && this.getY().cmp(t.getY()) === 0;
};
ke.prototype.eqXToP = function(t) {
  var a = t.toRed(this.curve.red).redMul(this.z);
  if (this.x.cmp(a) === 0)
    return !0;
  for (var r = t.clone(), f = this.curve.redN.redMul(this.z); ; ) {
    if (r.iadd(this.curve.n), r.cmp(this.curve.p) >= 0)
      return !1;
    if (a.redIAdd(f), this.x.cmp(a) === 0)
      return !0;
  }
};
ke.prototype.toP = ke.prototype.normalize;
ke.prototype.mixedAdd = ke.prototype.add;
(function(e) {
  var t = e;
  t.base = xi, t.short = ZO, t.mont = XO, t.edwards = eP;
})(Ed);
var Si = {}, n6 = {}, ce = {}, tP = m5, aP = X7();
ce.inherits = aP;
function rP(e, t) {
  return (e.charCodeAt(t) & 64512) !== 55296 || t < 0 || t + 1 >= e.length ? !1 : (e.charCodeAt(t + 1) & 64512) === 56320;
}
function fP(e, t) {
  if (Array.isArray(e))
    return e.slice();
  if (!e)
    return [];
  var a = [];
  if (typeof e == "string")
    if (t) {
      if (t === "hex")
        for (e = e.replace(/[^a-z0-9]+/ig, ""), e.length % 2 !== 0 && (e = "0" + e), f = 0; f < e.length; f += 2)
          a.push(parseInt(e[f] + e[f + 1], 16));
    } else
      for (var r = 0, f = 0; f < e.length; f++) {
        var i = e.charCodeAt(f);
        i < 128 ? a[r++] = i : i < 2048 ? (a[r++] = i >> 6 | 192, a[r++] = i & 63 | 128) : rP(e, f) ? (i = 65536 + ((i & 1023) << 10) + (e.charCodeAt(++f) & 1023), a[r++] = i >> 18 | 240, a[r++] = i >> 12 & 63 | 128, a[r++] = i >> 6 & 63 | 128, a[r++] = i & 63 | 128) : (a[r++] = i >> 12 | 224, a[r++] = i >> 6 & 63 | 128, a[r++] = i & 63 | 128);
      }
  else
    for (f = 0; f < e.length; f++)
      a[f] = e[f] | 0;
  return a;
}
ce.toArray = fP;
function iP(e) {
  for (var t = "", a = 0; a < e.length; a++)
    t += Wm(e[a].toString(16));
  return t;
}
ce.toHex = iP;
function Gm(e) {
  var t = e >>> 24 | e >>> 8 & 65280 | e << 8 & 16711680 | (e & 255) << 24;
  return t >>> 0;
}
ce.htonl = Gm;
function nP(e, t) {
  for (var a = "", r = 0; r < e.length; r++) {
    var f = e[r];
    t === "little" && (f = Gm(f)), a += Zm(f.toString(16));
  }
  return a;
}
ce.toHex32 = nP;
function Wm(e) {
  return e.length === 1 ? "0" + e : e;
}
ce.zero2 = Wm;
function Zm(e) {
  return e.length === 7 ? "0" + e : e.length === 6 ? "00" + e : e.length === 5 ? "000" + e : e.length === 4 ? "0000" + e : e.length === 3 ? "00000" + e : e.length === 2 ? "000000" + e : e.length === 1 ? "0000000" + e : e;
}
ce.zero8 = Zm;
function oP(e, t, a, r) {
  var f = a - t;
  tP(f % 4 === 0);
  for (var i = new Array(f / 4), n = 0, o = t; n < i.length; n++, o += 4) {
    var s;
    r === "big" ? s = e[o] << 24 | e[o + 1] << 16 | e[o + 2] << 8 | e[o + 3] : s = e[o + 3] << 24 | e[o + 2] << 16 | e[o + 1] << 8 | e[o], i[n] = s >>> 0;
  }
  return i;
}
ce.join32 = oP;
function sP(e, t) {
  for (var a = new Array(e.length * 4), r = 0, f = 0; r < e.length; r++, f += 4) {
    var i = e[r];
    t === "big" ? (a[f] = i >>> 24, a[f + 1] = i >>> 16 & 255, a[f + 2] = i >>> 8 & 255, a[f + 3] = i & 255) : (a[f + 3] = i >>> 24, a[f + 2] = i >>> 16 & 255, a[f + 1] = i >>> 8 & 255, a[f] = i & 255);
  }
  return a;
}
ce.split32 = sP;
function dP(e, t) {
  return e >>> t | e << 32 - t;
}
ce.rotr32 = dP;
function cP(e, t) {
  return e << t | e >>> 32 - t;
}
ce.rotl32 = cP;
function uP(e, t) {
  return e + t >>> 0;
}
ce.sum32 = uP;
function lP(e, t, a) {
  return e + t + a >>> 0;
}
ce.sum32_3 = lP;
function pP(e, t, a, r) {
  return e + t + a + r >>> 0;
}
ce.sum32_4 = pP;
function hP(e, t, a, r, f) {
  return e + t + a + r + f >>> 0;
}
ce.sum32_5 = hP;
function bP(e, t, a, r) {
  var f = e[t], i = e[t + 1], n = r + i >>> 0, o = (n < r ? 1 : 0) + a + f;
  e[t] = o >>> 0, e[t + 1] = n;
}
ce.sum64 = bP;
function mP(e, t, a, r) {
  var f = t + r >>> 0, i = (f < t ? 1 : 0) + e + a;
  return i >>> 0;
}
ce.sum64_hi = mP;
function vP(e, t, a, r) {
  var f = t + r;
  return f >>> 0;
}
ce.sum64_lo = vP;
function yP(e, t, a, r, f, i, n, o) {
  var s = 0, b = t;
  b = b + r >>> 0, s += b < t ? 1 : 0, b = b + i >>> 0, s += b < i ? 1 : 0, b = b + o >>> 0, s += b < o ? 1 : 0;
  var l = e + a + f + n + s;
  return l >>> 0;
}
ce.sum64_4_hi = yP;
function gP(e, t, a, r, f, i, n, o) {
  var s = t + r + i + o;
  return s >>> 0;
}
ce.sum64_4_lo = gP;
function xP(e, t, a, r, f, i, n, o, s, b) {
  var l = 0, v = t;
  v = v + r >>> 0, l += v < t ? 1 : 0, v = v + i >>> 0, l += v < i ? 1 : 0, v = v + o >>> 0, l += v < o ? 1 : 0, v = v + b >>> 0, l += v < b ? 1 : 0;
  var m = e + a + f + n + s + l;
  return m >>> 0;
}
ce.sum64_5_hi = xP;
function _P(e, t, a, r, f, i, n, o, s, b) {
  var l = t + r + i + o + b;
  return l >>> 0;
}
ce.sum64_5_lo = _P;
function wP(e, t, a) {
  var r = t << 32 - a | e >>> a;
  return r >>> 0;
}
ce.rotr64_hi = wP;
function SP(e, t, a) {
  var r = e << 32 - a | t >>> a;
  return r >>> 0;
}
ce.rotr64_lo = SP;
function EP(e, t, a) {
  return e >>> a;
}
ce.shr64_hi = EP;
function TP(e, t, a) {
  var r = e << 32 - a | t >>> a;
  return r >>> 0;
}
ce.shr64_lo = TP;
var A1 = {}, wu = ce, AP = m5;
function Ei() {
  this.pending = null, this.pendingTotal = 0, this.blockSize = this.constructor.blockSize, this.outSize = this.constructor.outSize, this.hmacStrength = this.constructor.hmacStrength, this.padLength = this.constructor.padLength / 8, this.endian = "big", this._delta8 = this.blockSize / 8, this._delta32 = this.blockSize / 32;
}
A1.BlockHash = Ei;
Ei.prototype.update = function(t, a) {
  if (t = wu.toArray(t, a), this.pending ? this.pending = this.pending.concat(t) : this.pending = t, this.pendingTotal += t.length, this.pending.length >= this._delta8) {
    t = this.pending;
    var r = t.length % this._delta8;
    this.pending = t.slice(t.length - r, t.length), this.pending.length === 0 && (this.pending = null), t = wu.join32(t, 0, t.length - r, this.endian);
    for (var f = 0; f < t.length; f += this._delta32)
      this._update(t, f, f + this._delta32);
  }
  return this;
};
Ei.prototype.digest = function(t) {
  return this.update(this._pad()), AP(this.pending === null), this._digest(t);
};
Ei.prototype._pad = function() {
  var t = this.pendingTotal, a = this._delta8, r = a - (t + this.padLength) % a, f = new Array(r + this.padLength);
  f[0] = 128;
  for (var i = 1; i < r; i++)
    f[i] = 0;
  if (t <<= 3, this.endian === "big") {
    for (var n = 8; n < this.padLength; n++)
      f[i++] = 0;
    f[i++] = 0, f[i++] = 0, f[i++] = 0, f[i++] = 0, f[i++] = t >>> 24 & 255, f[i++] = t >>> 16 & 255, f[i++] = t >>> 8 & 255, f[i++] = t & 255;
  } else
    for (f[i++] = t & 255, f[i++] = t >>> 8 & 255, f[i++] = t >>> 16 & 255, f[i++] = t >>> 24 & 255, f[i++] = 0, f[i++] = 0, f[i++] = 0, f[i++] = 0, n = 8; n < this.padLength; n++)
      f[i++] = 0;
  return f;
};
var I1 = {}, _t = {}, IP = ce, ct = IP.rotr32;
function kP(e, t, a, r) {
  if (e === 0)
    return Ym(t, a, r);
  if (e === 1 || e === 3)
    return Jm(t, a, r);
  if (e === 2)
    return Xm(t, a, r);
}
_t.ft_1 = kP;
function Ym(e, t, a) {
  return e & t ^ ~e & a;
}
_t.ch32 = Ym;
function Xm(e, t, a) {
  return e & t ^ e & a ^ t & a;
}
_t.maj32 = Xm;
function Jm(e, t, a) {
  return e ^ t ^ a;
}
_t.p32 = Jm;
function OP(e) {
  return ct(e, 2) ^ ct(e, 13) ^ ct(e, 22);
}
_t.s0_256 = OP;
function PP(e) {
  return ct(e, 6) ^ ct(e, 11) ^ ct(e, 25);
}
_t.s1_256 = PP;
function MP(e) {
  return ct(e, 7) ^ ct(e, 18) ^ e >>> 3;
}
_t.g0_256 = MP;
function RP(e) {
  return ct(e, 17) ^ ct(e, 19) ^ e >>> 10;
}
_t.g1_256 = RP;
var s1 = ce, BP = A1, NP = _t, _8 = s1.rotl32, W1 = s1.sum32, CP = s1.sum32_5, DP = NP.ft_1, Qm = BP.BlockHash, LP = [
  1518500249,
  1859775393,
  2400959708,
  3395469782
];
function bt() {
  if (!(this instanceof bt))
    return new bt();
  Qm.call(this), this.h = [
    1732584193,
    4023233417,
    2562383102,
    271733878,
    3285377520
  ], this.W = new Array(80);
}
s1.inherits(bt, Qm);
var FP = bt;
bt.blockSize = 512;
bt.outSize = 160;
bt.hmacStrength = 80;
bt.padLength = 64;
bt.prototype._update = function(t, a) {
  for (var r = this.W, f = 0; f < 16; f++)
    r[f] = t[a + f];
  for (; f < r.length; f++)
    r[f] = _8(r[f - 3] ^ r[f - 8] ^ r[f - 14] ^ r[f - 16], 1);
  var i = this.h[0], n = this.h[1], o = this.h[2], s = this.h[3], b = this.h[4];
  for (f = 0; f < r.length; f++) {
    var l = ~~(f / 20), v = CP(_8(i, 5), DP(l, n, o, s), b, r[f], LP[l]);
    b = s, s = o, o = _8(n, 30), n = i, i = v;
  }
  this.h[0] = W1(this.h[0], i), this.h[1] = W1(this.h[1], n), this.h[2] = W1(this.h[2], o), this.h[3] = W1(this.h[3], s), this.h[4] = W1(this.h[4], b);
};
bt.prototype._digest = function(t) {
  return t === "hex" ? s1.toHex32(this.h, "big") : s1.split32(this.h, "big");
};
var d1 = ce, HP = A1, k1 = _t, UP = m5, T5 = d1.sum32, $P = d1.sum32_4, jP = d1.sum32_5, VP = k1.ch32, zP = k1.maj32, qP = k1.s0_256, KP = k1.s1_256, GP = k1.g0_256, WP = k1.g1_256, ev = HP.BlockHash, ZP = [
  1116352408,
  1899447441,
  3049323471,
  3921009573,
  961987163,
  1508970993,
  2453635748,
  2870763221,
  3624381080,
  310598401,
  607225278,
  1426881987,
  1925078388,
  2162078206,
  2614888103,
  3248222580,
  3835390401,
  4022224774,
  264347078,
  604807628,
  770255983,
  1249150122,
  1555081692,
  1996064986,
  2554220882,
  2821834349,
  2952996808,
  3210313671,
  3336571891,
  3584528711,
  113926993,
  338241895,
  666307205,
  773529912,
  1294757372,
  1396182291,
  1695183700,
  1986661051,
  2177026350,
  2456956037,
  2730485921,
  2820302411,
  3259730800,
  3345764771,
  3516065817,
  3600352804,
  4094571909,
  275423344,
  430227734,
  506948616,
  659060556,
  883997877,
  958139571,
  1322822218,
  1537002063,
  1747873779,
  1955562222,
  2024104815,
  2227730452,
  2361852424,
  2428436474,
  2756734187,
  3204031479,
  3329325298
];
function mt() {
  if (!(this instanceof mt))
    return new mt();
  ev.call(this), this.h = [
    1779033703,
    3144134277,
    1013904242,
    2773480762,
    1359893119,
    2600822924,
    528734635,
    1541459225
  ], this.k = ZP, this.W = new Array(64);
}
d1.inherits(mt, ev);
var tv = mt;
mt.blockSize = 512;
mt.outSize = 256;
mt.hmacStrength = 192;
mt.padLength = 64;
mt.prototype._update = function(t, a) {
  for (var r = this.W, f = 0; f < 16; f++)
    r[f] = t[a + f];
  for (; f < r.length; f++)
    r[f] = $P(WP(r[f - 2]), r[f - 7], GP(r[f - 15]), r[f - 16]);
  var i = this.h[0], n = this.h[1], o = this.h[2], s = this.h[3], b = this.h[4], l = this.h[5], v = this.h[6], m = this.h[7];
  for (UP(this.k.length === r.length), f = 0; f < r.length; f++) {
    var x = jP(m, KP(b), VP(b, l, v), this.k[f], r[f]), I = T5(qP(i), zP(i, n, o));
    m = v, v = l, l = b, b = T5(s, x), s = o, o = n, n = i, i = T5(x, I);
  }
  this.h[0] = T5(this.h[0], i), this.h[1] = T5(this.h[1], n), this.h[2] = T5(this.h[2], o), this.h[3] = T5(this.h[3], s), this.h[4] = T5(this.h[4], b), this.h[5] = T5(this.h[5], l), this.h[6] = T5(this.h[6], v), this.h[7] = T5(this.h[7], m);
};
mt.prototype._digest = function(t) {
  return t === "hex" ? d1.toHex32(this.h, "big") : d1.split32(this.h, "big");
};
var Vo = ce, av = tv;
function Gt() {
  if (!(this instanceof Gt))
    return new Gt();
  av.call(this), this.h = [
    3238371032,
    914150663,
    812702999,
    4144912697,
    4290775857,
    1750603025,
    1694076839,
    3204075428
  ];
}
Vo.inherits(Gt, av);
var YP = Gt;
Gt.blockSize = 512;
Gt.outSize = 224;
Gt.hmacStrength = 192;
Gt.padLength = 64;
Gt.prototype._digest = function(t) {
  return t === "hex" ? Vo.toHex32(this.h.slice(0, 7), "big") : Vo.split32(this.h.slice(0, 7), "big");
};
var V0 = ce, XP = A1, JP = m5, ut = V0.rotr64_hi, lt = V0.rotr64_lo, rv = V0.shr64_hi, fv = V0.shr64_lo, fa = V0.sum64, w8 = V0.sum64_hi, S8 = V0.sum64_lo, QP = V0.sum64_4_hi, eM = V0.sum64_4_lo, tM = V0.sum64_5_hi, aM = V0.sum64_5_lo, iv = XP.BlockHash, rM = [
  1116352408,
  3609767458,
  1899447441,
  602891725,
  3049323471,
  3964484399,
  3921009573,
  2173295548,
  961987163,
  4081628472,
  1508970993,
  3053834265,
  2453635748,
  2937671579,
  2870763221,
  3664609560,
  3624381080,
  2734883394,
  310598401,
  1164996542,
  607225278,
  1323610764,
  1426881987,
  3590304994,
  1925078388,
  4068182383,
  2162078206,
  991336113,
  2614888103,
  633803317,
  3248222580,
  3479774868,
  3835390401,
  2666613458,
  4022224774,
  944711139,
  264347078,
  2341262773,
  604807628,
  2007800933,
  770255983,
  1495990901,
  1249150122,
  1856431235,
  1555081692,
  3175218132,
  1996064986,
  2198950837,
  2554220882,
  3999719339,
  2821834349,
  766784016,
  2952996808,
  2566594879,
  3210313671,
  3203337956,
  3336571891,
  1034457026,
  3584528711,
  2466948901,
  113926993,
  3758326383,
  338241895,
  168717936,
  666307205,
  1188179964,
  773529912,
  1546045734,
  1294757372,
  1522805485,
  1396182291,
  2643833823,
  1695183700,
  2343527390,
  1986661051,
  1014477480,
  2177026350,
  1206759142,
  2456956037,
  344077627,
  2730485921,
  1290863460,
  2820302411,
  3158454273,
  3259730800,
  3505952657,
  3345764771,
  106217008,
  3516065817,
  3606008344,
  3600352804,
  1432725776,
  4094571909,
  1467031594,
  275423344,
  851169720,
  430227734,
  3100823752,
  506948616,
  1363258195,
  659060556,
  3750685593,
  883997877,
  3785050280,
  958139571,
  3318307427,
  1322822218,
  3812723403,
  1537002063,
  2003034995,
  1747873779,
  3602036899,
  1955562222,
  1575990012,
  2024104815,
  1125592928,
  2227730452,
  2716904306,
  2361852424,
  442776044,
  2428436474,
  593698344,
  2756734187,
  3733110249,
  3204031479,
  2999351573,
  3329325298,
  3815920427,
  3391569614,
  3928383900,
  3515267271,
  566280711,
  3940187606,
  3454069534,
  4118630271,
  4000239992,
  116418474,
  1914138554,
  174292421,
  2731055270,
  289380356,
  3203993006,
  460393269,
  320620315,
  685471733,
  587496836,
  852142971,
  1086792851,
  1017036298,
  365543100,
  1126000580,
  2618297676,
  1288033470,
  3409855158,
  1501505948,
  4234509866,
  1607167915,
  987167468,
  1816402316,
  1246189591
];
function C5() {
  if (!(this instanceof C5))
    return new C5();
  iv.call(this), this.h = [
    1779033703,
    4089235720,
    3144134277,
    2227873595,
    1013904242,
    4271175723,
    2773480762,
    1595750129,
    1359893119,
    2917565137,
    2600822924,
    725511199,
    528734635,
    4215389547,
    1541459225,
    327033209
  ], this.k = rM, this.W = new Array(160);
}
V0.inherits(C5, iv);
var nv = C5;
C5.blockSize = 1024;
C5.outSize = 512;
C5.hmacStrength = 192;
C5.padLength = 128;
C5.prototype._prepareBlock = function(t, a) {
  for (var r = this.W, f = 0; f < 32; f++)
    r[f] = t[a + f];
  for (; f < r.length; f += 2) {
    var i = hM(r[f - 4], r[f - 3]), n = bM(r[f - 4], r[f - 3]), o = r[f - 14], s = r[f - 13], b = lM(r[f - 30], r[f - 29]), l = pM(r[f - 30], r[f - 29]), v = r[f - 32], m = r[f - 31];
    r[f] = QP(
      i,
      n,
      o,
      s,
      b,
      l,
      v,
      m
    ), r[f + 1] = eM(
      i,
      n,
      o,
      s,
      b,
      l,
      v,
      m
    );
  }
};
C5.prototype._update = function(t, a) {
  this._prepareBlock(t, a);
  var r = this.W, f = this.h[0], i = this.h[1], n = this.h[2], o = this.h[3], s = this.h[4], b = this.h[5], l = this.h[6], v = this.h[7], m = this.h[8], x = this.h[9], I = this.h[10], k = this.h[11], P = this.h[12], M = this.h[13], R = this.h[14], F = this.h[15];
  JP(this.k.length === r.length);
  for (var C = 0; C < r.length; C += 2) {
    var L = R, U = F, q = cM(m, x), Z = uM(m, x), z = fM(m, x, I, k, P), G = iM(m, x, I, k, P, M), O = this.k[C], u = this.k[C + 1], p = r[C], d = r[C + 1], c = tM(
      L,
      U,
      q,
      Z,
      z,
      G,
      O,
      u,
      p,
      d
    ), y = aM(
      L,
      U,
      q,
      Z,
      z,
      G,
      O,
      u,
      p,
      d
    );
    L = sM(f, i), U = dM(f, i), q = nM(f, i, n, o, s), Z = oM(f, i, n, o, s, b);
    var S = w8(L, U, q, Z), T = S8(L, U, q, Z);
    R = P, F = M, P = I, M = k, I = m, k = x, m = w8(l, v, c, y), x = S8(v, v, c, y), l = s, v = b, s = n, b = o, n = f, o = i, f = w8(c, y, S, T), i = S8(c, y, S, T);
  }
  fa(this.h, 0, f, i), fa(this.h, 2, n, o), fa(this.h, 4, s, b), fa(this.h, 6, l, v), fa(this.h, 8, m, x), fa(this.h, 10, I, k), fa(this.h, 12, P, M), fa(this.h, 14, R, F);
};
C5.prototype._digest = function(t) {
  return t === "hex" ? V0.toHex32(this.h, "big") : V0.split32(this.h, "big");
};
function fM(e, t, a, r, f) {
  var i = e & a ^ ~e & f;
  return i < 0 && (i += 4294967296), i;
}
function iM(e, t, a, r, f, i) {
  var n = t & r ^ ~t & i;
  return n < 0 && (n += 4294967296), n;
}
function nM(e, t, a, r, f) {
  var i = e & a ^ e & f ^ a & f;
  return i < 0 && (i += 4294967296), i;
}
function oM(e, t, a, r, f, i) {
  var n = t & r ^ t & i ^ r & i;
  return n < 0 && (n += 4294967296), n;
}
function sM(e, t) {
  var a = ut(e, t, 28), r = ut(t, e, 2), f = ut(t, e, 7), i = a ^ r ^ f;
  return i < 0 && (i += 4294967296), i;
}
function dM(e, t) {
  var a = lt(e, t, 28), r = lt(t, e, 2), f = lt(t, e, 7), i = a ^ r ^ f;
  return i < 0 && (i += 4294967296), i;
}
function cM(e, t) {
  var a = ut(e, t, 14), r = ut(e, t, 18), f = ut(t, e, 9), i = a ^ r ^ f;
  return i < 0 && (i += 4294967296), i;
}
function uM(e, t) {
  var a = lt(e, t, 14), r = lt(e, t, 18), f = lt(t, e, 9), i = a ^ r ^ f;
  return i < 0 && (i += 4294967296), i;
}
function lM(e, t) {
  var a = ut(e, t, 1), r = ut(e, t, 8), f = rv(e, t, 7), i = a ^ r ^ f;
  return i < 0 && (i += 4294967296), i;
}
function pM(e, t) {
  var a = lt(e, t, 1), r = lt(e, t, 8), f = fv(e, t, 7), i = a ^ r ^ f;
  return i < 0 && (i += 4294967296), i;
}
function hM(e, t) {
  var a = ut(e, t, 19), r = ut(t, e, 29), f = rv(e, t, 6), i = a ^ r ^ f;
  return i < 0 && (i += 4294967296), i;
}
function bM(e, t) {
  var a = lt(e, t, 19), r = lt(t, e, 29), f = fv(e, t, 6), i = a ^ r ^ f;
  return i < 0 && (i += 4294967296), i;
}
var zo = ce, ov = nv;
function Wt() {
  if (!(this instanceof Wt))
    return new Wt();
  ov.call(this), this.h = [
    3418070365,
    3238371032,
    1654270250,
    914150663,
    2438529370,
    812702999,
    355462360,
    4144912697,
    1731405415,
    4290775857,
    2394180231,
    1750603025,
    3675008525,
    1694076839,
    1203062813,
    3204075428
  ];
}
zo.inherits(Wt, ov);
var mM = Wt;
Wt.blockSize = 1024;
Wt.outSize = 384;
Wt.hmacStrength = 192;
Wt.padLength = 128;
Wt.prototype._digest = function(t) {
  return t === "hex" ? zo.toHex32(this.h.slice(0, 12), "big") : zo.split32(this.h.slice(0, 12), "big");
};
I1.sha1 = FP;
I1.sha224 = YP;
I1.sha256 = tv;
I1.sha384 = mM;
I1.sha512 = nv;
var sv = {}, cr = ce, vM = A1, M6 = cr.rotl32, Su = cr.sum32, Z1 = cr.sum32_3, Eu = cr.sum32_4, dv = vM.BlockHash;
function vt() {
  if (!(this instanceof vt))
    return new vt();
  dv.call(this), this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520], this.endian = "little";
}
cr.inherits(vt, dv);
sv.ripemd160 = vt;
vt.blockSize = 512;
vt.outSize = 160;
vt.hmacStrength = 192;
vt.padLength = 64;
vt.prototype._update = function(t, a) {
  for (var r = this.h[0], f = this.h[1], i = this.h[2], n = this.h[3], o = this.h[4], s = r, b = f, l = i, v = n, m = o, x = 0; x < 80; x++) {
    var I = Su(
      M6(
        Eu(r, Tu(x, f, i, n), t[xM[x] + a], yM(x)),
        wM[x]
      ),
      o
    );
    r = o, o = n, n = M6(i, 10), i = f, f = I, I = Su(
      M6(
        Eu(s, Tu(79 - x, b, l, v), t[_M[x] + a], gM(x)),
        SM[x]
      ),
      m
    ), s = m, m = v, v = M6(l, 10), l = b, b = I;
  }
  I = Z1(this.h[1], i, v), this.h[1] = Z1(this.h[2], n, m), this.h[2] = Z1(this.h[3], o, s), this.h[3] = Z1(this.h[4], r, b), this.h[4] = Z1(this.h[0], f, l), this.h[0] = I;
};
vt.prototype._digest = function(t) {
  return t === "hex" ? cr.toHex32(this.h, "little") : cr.split32(this.h, "little");
};
function Tu(e, t, a, r) {
  return e <= 15 ? t ^ a ^ r : e <= 31 ? t & a | ~t & r : e <= 47 ? (t | ~a) ^ r : e <= 63 ? t & r | a & ~r : t ^ (a | ~r);
}
function yM(e) {
  return e <= 15 ? 0 : e <= 31 ? 1518500249 : e <= 47 ? 1859775393 : e <= 63 ? 2400959708 : 2840853838;
}
function gM(e) {
  return e <= 15 ? 1352829926 : e <= 31 ? 1548603684 : e <= 47 ? 1836072691 : e <= 63 ? 2053994217 : 0;
}
var xM = [
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  7,
  4,
  13,
  1,
  10,
  6,
  15,
  3,
  12,
  0,
  9,
  5,
  2,
  14,
  11,
  8,
  3,
  10,
  14,
  4,
  9,
  15,
  8,
  1,
  2,
  7,
  0,
  6,
  13,
  11,
  5,
  12,
  1,
  9,
  11,
  10,
  0,
  8,
  12,
  4,
  13,
  3,
  7,
  15,
  14,
  5,
  6,
  2,
  4,
  0,
  5,
  9,
  7,
  12,
  2,
  10,
  14,
  1,
  3,
  8,
  11,
  6,
  15,
  13
], _M = [
  5,
  14,
  7,
  0,
  9,
  2,
  11,
  4,
  13,
  6,
  15,
  8,
  1,
  10,
  3,
  12,
  6,
  11,
  3,
  7,
  0,
  13,
  5,
  10,
  14,
  15,
  8,
  12,
  4,
  9,
  1,
  2,
  15,
  5,
  1,
  3,
  7,
  14,
  6,
  9,
  11,
  8,
  12,
  2,
  10,
  0,
  4,
  13,
  8,
  6,
  4,
  1,
  3,
  11,
  15,
  0,
  5,
  12,
  2,
  13,
  9,
  7,
  10,
  14,
  12,
  15,
  10,
  4,
  1,
  5,
  8,
  7,
  6,
  2,
  13,
  14,
  0,
  3,
  9,
  11
], wM = [
  11,
  14,
  15,
  12,
  5,
  8,
  7,
  9,
  11,
  13,
  14,
  15,
  6,
  7,
  9,
  8,
  7,
  6,
  8,
  13,
  11,
  9,
  7,
  15,
  7,
  12,
  15,
  9,
  11,
  7,
  13,
  12,
  11,
  13,
  6,
  7,
  14,
  9,
  13,
  15,
  14,
  8,
  13,
  6,
  5,
  12,
  7,
  5,
  11,
  12,
  14,
  15,
  14,
  15,
  9,
  8,
  9,
  14,
  5,
  6,
  8,
  6,
  5,
  12,
  9,
  15,
  5,
  11,
  6,
  8,
  13,
  12,
  5,
  12,
  13,
  14,
  11,
  8,
  5,
  6
], SM = [
  8,
  9,
  9,
  11,
  13,
  15,
  15,
  5,
  7,
  7,
  8,
  11,
  14,
  14,
  12,
  6,
  9,
  13,
  15,
  7,
  12,
  8,
  9,
  11,
  7,
  7,
  12,
  7,
  6,
  15,
  13,
  11,
  9,
  7,
  15,
  11,
  8,
  6,
  6,
  14,
  12,
  13,
  5,
  14,
  13,
  13,
  7,
  5,
  15,
  5,
  8,
  11,
  14,
  14,
  6,
  14,
  6,
  9,
  12,
  9,
  12,
  5,
  15,
  8,
  8,
  5,
  12,
  9,
  12,
  5,
  14,
  6,
  8,
  13,
  6,
  5,
  15,
  13,
  11,
  11
], EM = ce, TM = m5;
function c1(e, t, a) {
  if (!(this instanceof c1))
    return new c1(e, t, a);
  this.Hash = e, this.blockSize = e.blockSize / 8, this.outSize = e.outSize / 8, this.inner = null, this.outer = null, this._init(EM.toArray(t, a));
}
var AM = c1;
c1.prototype._init = function(t) {
  t.length > this.blockSize && (t = new this.Hash().update(t).digest()), TM(t.length <= this.blockSize);
  for (var a = t.length; a < this.blockSize; a++)
    t.push(0);
  for (a = 0; a < t.length; a++)
    t[a] ^= 54;
  for (this.inner = new this.Hash().update(t), a = 0; a < t.length; a++)
    t[a] ^= 106;
  this.outer = new this.Hash().update(t);
};
c1.prototype.update = function(t, a) {
  return this.inner.update(t, a), this;
};
c1.prototype.digest = function(t) {
  return this.outer.update(this.inner.digest()), this.outer.digest(t);
};
(function(e) {
  var t = e;
  t.utils = ce, t.common = A1, t.sha = I1, t.ripemd = sv, t.hmac = AM, t.sha1 = t.sha.sha1, t.sha256 = t.sha.sha256, t.sha224 = t.sha.sha224, t.sha384 = t.sha.sha384, t.sha512 = t.sha.sha512, t.ripemd160 = t.ripemd.ripemd160;
})(n6);
var E8, Au;
function IM() {
  return Au || (Au = 1, E8 = {
    doubles: {
      step: 4,
      points: [
        [
          "e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a",
          "f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821"
        ],
        [
          "8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508",
          "11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf"
        ],
        [
          "175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739",
          "d3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695"
        ],
        [
          "363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640",
          "4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9"
        ],
        [
          "8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c",
          "4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36"
        ],
        [
          "723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda",
          "96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f"
        ],
        [
          "eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa",
          "5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999"
        ],
        [
          "100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0",
          "cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09"
        ],
        [
          "e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d",
          "9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d"
        ],
        [
          "feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d",
          "e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088"
        ],
        [
          "da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1",
          "9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d"
        ],
        [
          "53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0",
          "5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8"
        ],
        [
          "8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047",
          "10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a"
        ],
        [
          "385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862",
          "283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453"
        ],
        [
          "6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7",
          "7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160"
        ],
        [
          "3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd",
          "56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0"
        ],
        [
          "85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83",
          "7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6"
        ],
        [
          "948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a",
          "53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589"
        ],
        [
          "6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8",
          "bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17"
        ],
        [
          "e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d",
          "4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda"
        ],
        [
          "e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725",
          "7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd"
        ],
        [
          "213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754",
          "4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2"
        ],
        [
          "4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c",
          "17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6"
        ],
        [
          "fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6",
          "6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f"
        ],
        [
          "76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39",
          "c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01"
        ],
        [
          "c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891",
          "893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3"
        ],
        [
          "d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b",
          "febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f"
        ],
        [
          "b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03",
          "2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7"
        ],
        [
          "e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d",
          "eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78"
        ],
        [
          "a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070",
          "7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1"
        ],
        [
          "90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4",
          "e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150"
        ],
        [
          "8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da",
          "662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82"
        ],
        [
          "e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11",
          "1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc"
        ],
        [
          "8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e",
          "efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b"
        ],
        [
          "e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41",
          "2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51"
        ],
        [
          "b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef",
          "67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45"
        ],
        [
          "d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8",
          "db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120"
        ],
        [
          "324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d",
          "648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84"
        ],
        [
          "4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96",
          "35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d"
        ],
        [
          "9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd",
          "ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d"
        ],
        [
          "6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5",
          "9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8"
        ],
        [
          "a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266",
          "40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8"
        ],
        [
          "7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71",
          "34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac"
        ],
        [
          "928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac",
          "c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f"
        ],
        [
          "85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751",
          "1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962"
        ],
        [
          "ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e",
          "493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907"
        ],
        [
          "827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241",
          "c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec"
        ],
        [
          "eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3",
          "be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d"
        ],
        [
          "e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f",
          "4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414"
        ],
        [
          "1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19",
          "aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd"
        ],
        [
          "146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be",
          "b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0"
        ],
        [
          "fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9",
          "6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811"
        ],
        [
          "da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2",
          "8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1"
        ],
        [
          "a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13",
          "7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c"
        ],
        [
          "174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c",
          "ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73"
        ],
        [
          "959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba",
          "2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd"
        ],
        [
          "d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151",
          "e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405"
        ],
        [
          "64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073",
          "d99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589"
        ],
        [
          "8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458",
          "38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e"
        ],
        [
          "13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b",
          "69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27"
        ],
        [
          "bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366",
          "d3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1"
        ],
        [
          "8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa",
          "40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482"
        ],
        [
          "8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0",
          "620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945"
        ],
        [
          "dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787",
          "7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573"
        ],
        [
          "f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e",
          "ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82"
        ]
      ]
    },
    naf: {
      wnd: 7,
      points: [
        [
          "f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9",
          "388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672"
        ],
        [
          "2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4",
          "d8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6"
        ],
        [
          "5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc",
          "6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da"
        ],
        [
          "acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe",
          "cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37"
        ],
        [
          "774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb",
          "d984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b"
        ],
        [
          "f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8",
          "ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81"
        ],
        [
          "d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e",
          "581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58"
        ],
        [
          "defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34",
          "4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77"
        ],
        [
          "2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c",
          "85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a"
        ],
        [
          "352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5",
          "321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c"
        ],
        [
          "2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f",
          "2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67"
        ],
        [
          "9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714",
          "73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402"
        ],
        [
          "daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729",
          "a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55"
        ],
        [
          "c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db",
          "2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482"
        ],
        [
          "6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4",
          "e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82"
        ],
        [
          "1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5",
          "b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396"
        ],
        [
          "605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479",
          "2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49"
        ],
        [
          "62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d",
          "80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf"
        ],
        [
          "80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f",
          "1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a"
        ],
        [
          "7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb",
          "d0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7"
        ],
        [
          "d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9",
          "eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933"
        ],
        [
          "49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963",
          "758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a"
        ],
        [
          "77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74",
          "958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6"
        ],
        [
          "f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530",
          "e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37"
        ],
        [
          "463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b",
          "5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e"
        ],
        [
          "f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247",
          "cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6"
        ],
        [
          "caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1",
          "cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476"
        ],
        [
          "2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120",
          "4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40"
        ],
        [
          "7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435",
          "91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61"
        ],
        [
          "754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18",
          "673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683"
        ],
        [
          "e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8",
          "59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5"
        ],
        [
          "186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb",
          "3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b"
        ],
        [
          "df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f",
          "55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417"
        ],
        [
          "5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143",
          "efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868"
        ],
        [
          "290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba",
          "e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a"
        ],
        [
          "af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45",
          "f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6"
        ],
        [
          "766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a",
          "744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996"
        ],
        [
          "59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e",
          "c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e"
        ],
        [
          "f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8",
          "e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d"
        ],
        [
          "7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c",
          "30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2"
        ],
        [
          "948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519",
          "e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e"
        ],
        [
          "7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab",
          "100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437"
        ],
        [
          "3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca",
          "ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311"
        ],
        [
          "d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf",
          "8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4"
        ],
        [
          "1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610",
          "68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575"
        ],
        [
          "733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4",
          "f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d"
        ],
        [
          "15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c",
          "d56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d"
        ],
        [
          "a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940",
          "edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629"
        ],
        [
          "e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980",
          "a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06"
        ],
        [
          "311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3",
          "66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374"
        ],
        [
          "34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf",
          "9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee"
        ],
        [
          "f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63",
          "4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1"
        ],
        [
          "d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448",
          "fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b"
        ],
        [
          "32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf",
          "5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661"
        ],
        [
          "7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5",
          "8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6"
        ],
        [
          "ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6",
          "8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e"
        ],
        [
          "16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5",
          "5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d"
        ],
        [
          "eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99",
          "f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc"
        ],
        [
          "78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51",
          "f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4"
        ],
        [
          "494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5",
          "42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c"
        ],
        [
          "a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5",
          "204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b"
        ],
        [
          "c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997",
          "4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913"
        ],
        [
          "841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881",
          "73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154"
        ],
        [
          "5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5",
          "39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865"
        ],
        [
          "36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66",
          "d2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc"
        ],
        [
          "336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726",
          "ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224"
        ],
        [
          "8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede",
          "6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e"
        ],
        [
          "1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94",
          "60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6"
        ],
        [
          "85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31",
          "3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511"
        ],
        [
          "29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51",
          "b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b"
        ],
        [
          "a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252",
          "ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2"
        ],
        [
          "4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5",
          "cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c"
        ],
        [
          "d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b",
          "6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3"
        ],
        [
          "ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4",
          "322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d"
        ],
        [
          "af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f",
          "6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700"
        ],
        [
          "e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889",
          "2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4"
        ],
        [
          "591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246",
          "b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196"
        ],
        [
          "11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984",
          "998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4"
        ],
        [
          "3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a",
          "b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257"
        ],
        [
          "cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030",
          "bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13"
        ],
        [
          "c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197",
          "6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096"
        ],
        [
          "c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593",
          "c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38"
        ],
        [
          "a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef",
          "21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f"
        ],
        [
          "347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38",
          "60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448"
        ],
        [
          "da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a",
          "49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a"
        ],
        [
          "c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111",
          "5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4"
        ],
        [
          "4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502",
          "7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437"
        ],
        [
          "3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea",
          "be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7"
        ],
        [
          "cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26",
          "8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d"
        ],
        [
          "b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986",
          "39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a"
        ],
        [
          "d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e",
          "62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54"
        ],
        [
          "48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4",
          "25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77"
        ],
        [
          "dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda",
          "ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517"
        ],
        [
          "6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859",
          "cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10"
        ],
        [
          "e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f",
          "f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125"
        ],
        [
          "eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c",
          "6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e"
        ],
        [
          "13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942",
          "fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1"
        ],
        [
          "ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a",
          "1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2"
        ],
        [
          "b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80",
          "5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423"
        ],
        [
          "ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d",
          "438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8"
        ],
        [
          "8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1",
          "cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758"
        ],
        [
          "52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63",
          "c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375"
        ],
        [
          "e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352",
          "6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d"
        ],
        [
          "7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193",
          "ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec"
        ],
        [
          "5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00",
          "9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0"
        ],
        [
          "32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58",
          "ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c"
        ],
        [
          "e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7",
          "d3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4"
        ],
        [
          "8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8",
          "c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f"
        ],
        [
          "4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e",
          "67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649"
        ],
        [
          "3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d",
          "cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826"
        ],
        [
          "674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b",
          "299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5"
        ],
        [
          "d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f",
          "f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87"
        ],
        [
          "30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6",
          "462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b"
        ],
        [
          "be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297",
          "62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc"
        ],
        [
          "93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a",
          "7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c"
        ],
        [
          "b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c",
          "ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f"
        ],
        [
          "d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52",
          "4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a"
        ],
        [
          "d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb",
          "bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46"
        ],
        [
          "463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065",
          "bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f"
        ],
        [
          "7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917",
          "603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03"
        ],
        [
          "74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9",
          "cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08"
        ],
        [
          "30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3",
          "553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8"
        ],
        [
          "9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57",
          "712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373"
        ],
        [
          "176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66",
          "ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3"
        ],
        [
          "75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8",
          "9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8"
        ],
        [
          "809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721",
          "9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1"
        ],
        [
          "1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180",
          "4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9"
        ]
      ]
    }
  }), E8;
}
(function(e) {
  var t = e, a = n6, r = Ed, f = J0, i = f.assert;
  function n(b) {
    b.type === "short" ? this.curve = new r.short(b) : b.type === "edwards" ? this.curve = new r.edwards(b) : this.curve = new r.mont(b), this.g = this.curve.g, this.n = this.curve.n, this.hash = b.hash, i(this.g.validate(), "Invalid curve"), i(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O");
  }
  t.PresetCurve = n;
  function o(b, l) {
    Object.defineProperty(t, b, {
      configurable: !0,
      enumerable: !0,
      get: function() {
        var v = new n(l);
        return Object.defineProperty(t, b, {
          configurable: !0,
          enumerable: !0,
          value: v
        }), v;
      }
    });
  }
  o("p192", {
    type: "short",
    prime: "p192",
    p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",
    a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",
    b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",
    n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",
    hash: a.sha256,
    gRed: !1,
    g: [
      "188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012",
      "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"
    ]
  }), o("p224", {
    type: "short",
    prime: "p224",
    p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",
    a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",
    b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",
    n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",
    hash: a.sha256,
    gRed: !1,
    g: [
      "b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21",
      "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"
    ]
  }), o("p256", {
    type: "short",
    prime: null,
    p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",
    a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",
    b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",
    n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",
    hash: a.sha256,
    gRed: !1,
    g: [
      "6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296",
      "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"
    ]
  }), o("p384", {
    type: "short",
    prime: null,
    p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",
    a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",
    b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",
    n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",
    hash: a.sha384,
    gRed: !1,
    g: [
      "aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7",
      "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"
    ]
  }), o("p521", {
    type: "short",
    prime: null,
    p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",
    a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",
    b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",
    n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",
    hash: a.sha512,
    gRed: !1,
    g: [
      "000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66",
      "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"
    ]
  }), o("curve25519", {
    type: "mont",
    prime: "p25519",
    p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
    a: "76d06",
    b: "1",
    n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
    hash: a.sha256,
    gRed: !1,
    g: [
      "9"
    ]
  }), o("ed25519", {
    type: "edwards",
    prime: "p25519",
    p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
    a: "-1",
    c: "1",
    // -121665 * (121666^(-1)) (mod P)
    d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",
    n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
    hash: a.sha256,
    gRed: !1,
    g: [
      "216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a",
      // 4/5
      "6666666666666666666666666666666666666666666666666666666666666658"
    ]
  });
  var s;
  try {
    s = IM();
  } catch {
    s = void 0;
  }
  o("secp256k1", {
    type: "short",
    prime: "k256",
    p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",
    a: "0",
    b: "7",
    n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",
    h: "1",
    hash: a.sha256,
    // Precomputed endomorphism
    beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",
    lambda: "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",
    basis: [
      {
        a: "3086d221a7d46bcde86c90e49284eb15",
        b: "-e4437ed6010e88286f547fa90abfe4c3"
      },
      {
        a: "114ca50f7a8e2f3f657c1108d9d44cfd8",
        b: "3086d221a7d46bcde86c90e49284eb15"
      }
    ],
    gRed: !1,
    g: [
      "79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798",
      "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8",
      s
    ]
  });
})(Si);
var kM = n6, ir = Us, cv = m5;
function ka(e) {
  if (!(this instanceof ka))
    return new ka(e);
  this.hash = e.hash, this.predResist = !!e.predResist, this.outLen = this.hash.outSize, this.minEntropy = e.minEntropy || this.hash.hmacStrength, this._reseed = null, this.reseedInterval = null, this.K = null, this.V = null;
  var t = ir.toArray(e.entropy, e.entropyEnc || "hex"), a = ir.toArray(e.nonce, e.nonceEnc || "hex"), r = ir.toArray(e.pers, e.persEnc || "hex");
  cv(
    t.length >= this.minEntropy / 8,
    "Not enough entropy. Minimum is: " + this.minEntropy + " bits"
  ), this._init(t, a, r);
}
var OM = ka;
ka.prototype._init = function(t, a, r) {
  var f = t.concat(a).concat(r);
  this.K = new Array(this.outLen / 8), this.V = new Array(this.outLen / 8);
  for (var i = 0; i < this.V.length; i++)
    this.K[i] = 0, this.V[i] = 1;
  this._update(f), this._reseed = 1, this.reseedInterval = 281474976710656;
};
ka.prototype._hmac = function() {
  return new kM.hmac(this.hash, this.K);
};
ka.prototype._update = function(t) {
  var a = this._hmac().update(this.V).update([0]);
  t && (a = a.update(t)), this.K = a.digest(), this.V = this._hmac().update(this.V).digest(), t && (this.K = this._hmac().update(this.V).update([1]).update(t).digest(), this.V = this._hmac().update(this.V).digest());
};
ka.prototype.reseed = function(t, a, r, f) {
  typeof a != "string" && (f = r, r = a, a = null), t = ir.toArray(t, a), r = ir.toArray(r, f), cv(
    t.length >= this.minEntropy / 8,
    "Not enough entropy. Minimum is: " + this.minEntropy + " bits"
  ), this._update(t.concat(r || [])), this._reseed = 1;
};
ka.prototype.generate = function(t, a, r, f) {
  if (this._reseed > this.reseedInterval)
    throw new Error("Reseed is required");
  typeof a != "string" && (f = r, r = a, a = null), r && (r = ir.toArray(r, f || "hex"), this._update(r));
  for (var i = []; i.length < t; )
    this.V = this._hmac().update(this.V).digest(), i = i.concat(this.V);
  var n = i.slice(0, t);
  return this._update(r), this._reseed++, ir.encode(n, a);
};
var PM = u0, MM = J0, qo = MM.assert;
function I0(e, t) {
  this.ec = e, this.priv = null, this.pub = null, t.priv && this._importPrivate(t.priv, t.privEnc), t.pub && this._importPublic(t.pub, t.pubEnc);
}
var RM = I0;
I0.fromPublic = function(t, a, r) {
  return a instanceof I0 ? a : new I0(t, {
    pub: a,
    pubEnc: r
  });
};
I0.fromPrivate = function(t, a, r) {
  return a instanceof I0 ? a : new I0(t, {
    priv: a,
    privEnc: r
  });
};
I0.prototype.validate = function() {
  var t = this.getPublic();
  return t.isInfinity() ? { result: !1, reason: "Invalid public key" } : t.validate() ? t.mul(this.ec.curve.n).isInfinity() ? { result: !0, reason: null } : { result: !1, reason: "Public key * N != O" } : { result: !1, reason: "Public key is not a point" };
};
I0.prototype.getPublic = function(t, a) {
  return typeof t == "string" && (a = t, t = null), this.pub || (this.pub = this.ec.g.mul(this.priv)), a ? this.pub.encode(a, t) : this.pub;
};
I0.prototype.getPrivate = function(t) {
  return t === "hex" ? this.priv.toString(16, 2) : this.priv;
};
I0.prototype._importPrivate = function(t, a) {
  this.priv = new PM(t, a || 16), this.priv = this.priv.umod(this.ec.curve.n);
};
I0.prototype._importPublic = function(t, a) {
  if (t.x || t.y) {
    this.ec.curve.type === "mont" ? qo(t.x, "Need x coordinate") : (this.ec.curve.type === "short" || this.ec.curve.type === "edwards") && qo(t.x && t.y, "Need both x and y coordinate"), this.pub = this.ec.curve.point(t.x, t.y);
    return;
  }
  this.pub = this.ec.curve.decodePoint(t, a);
};
I0.prototype.derive = function(t) {
  return t.validate() || qo(t.validate(), "public point not validated"), t.mul(this.priv).getX();
};
I0.prototype.sign = function(t, a, r) {
  return this.ec.sign(t, this, a, r);
};
I0.prototype.verify = function(t, a) {
  return this.ec.verify(t, a, this);
};
I0.prototype.inspect = function() {
  return "<Key priv: " + (this.priv && this.priv.toString(16, 2)) + " pub: " + (this.pub && this.pub.inspect()) + " >";
};
var Of = u0, Ad = J0, BM = Ad.assert;
function Ti(e, t) {
  if (e instanceof Ti)
    return e;
  this._importDER(e, t) || (BM(e.r && e.s, "Signature without r or s"), this.r = new Of(e.r, 16), this.s = new Of(e.s, 16), e.recoveryParam === void 0 ? this.recoveryParam = null : this.recoveryParam = e.recoveryParam);
}
var NM = Ti;
function CM() {
  this.place = 0;
}
function T8(e, t) {
  var a = e[t.place++];
  if (!(a & 128))
    return a;
  var r = a & 15;
  if (r === 0 || r > 4)
    return !1;
  for (var f = 0, i = 0, n = t.place; i < r; i++, n++)
    f <<= 8, f |= e[n], f >>>= 0;
  return f <= 127 ? !1 : (t.place = n, f);
}
function Iu(e) {
  for (var t = 0, a = e.length - 1; !e[t] && !(e[t + 1] & 128) && t < a; )
    t++;
  return t === 0 ? e : e.slice(t);
}
Ti.prototype._importDER = function(t, a) {
  t = Ad.toArray(t, a);
  var r = new CM();
  if (t[r.place++] !== 48)
    return !1;
  var f = T8(t, r);
  if (f === !1 || f + r.place !== t.length || t[r.place++] !== 2)
    return !1;
  var i = T8(t, r);
  if (i === !1)
    return !1;
  var n = t.slice(r.place, i + r.place);
  if (r.place += i, t[r.place++] !== 2)
    return !1;
  var o = T8(t, r);
  if (o === !1 || t.length !== o + r.place)
    return !1;
  var s = t.slice(r.place, o + r.place);
  if (n[0] === 0)
    if (n[1] & 128)
      n = n.slice(1);
    else
      return !1;
  if (s[0] === 0)
    if (s[1] & 128)
      s = s.slice(1);
    else
      return !1;
  return this.r = new Of(n), this.s = new Of(s), this.recoveryParam = null, !0;
};
function A8(e, t) {
  if (t < 128) {
    e.push(t);
    return;
  }
  var a = 1 + (Math.log(t) / Math.LN2 >>> 3);
  for (e.push(a | 128); --a; )
    e.push(t >>> (a << 3) & 255);
  e.push(t);
}
Ti.prototype.toDER = function(t) {
  var a = this.r.toArray(), r = this.s.toArray();
  for (a[0] & 128 && (a = [0].concat(a)), r[0] & 128 && (r = [0].concat(r)), a = Iu(a), r = Iu(r); !r[0] && !(r[1] & 128); )
    r = r.slice(1);
  var f = [2];
  A8(f, a.length), f = f.concat(a), f.push(2), A8(f, r.length);
  var i = f.concat(r), n = [48];
  return A8(n, i.length), n = n.concat(i), Ad.encode(n, t);
};
var I8, ku;
function DM() {
  if (ku)
    return I8;
  ku = 1;
  var e = u0, t = OM, a = J0, r = Si, f = Sd(), i = a.assert, n = RM, o = NM;
  function s(b) {
    if (!(this instanceof s))
      return new s(b);
    typeof b == "string" && (i(
      Object.prototype.hasOwnProperty.call(r, b),
      "Unknown curve " + b
    ), b = r[b]), b instanceof r.PresetCurve && (b = { curve: b }), this.curve = b.curve.curve, this.n = this.curve.n, this.nh = this.n.ushrn(1), this.g = this.curve.g, this.g = b.curve.g, this.g.precompute(b.curve.n.bitLength() + 1), this.hash = b.hash || b.curve.hash;
  }
  return I8 = s, s.prototype.keyPair = function(l) {
    return new n(this, l);
  }, s.prototype.keyFromPrivate = function(l, v) {
    return n.fromPrivate(this, l, v);
  }, s.prototype.keyFromPublic = function(l, v) {
    return n.fromPublic(this, l, v);
  }, s.prototype.genKeyPair = function(l) {
    l || (l = {});
    for (var v = new t({
      hash: this.hash,
      pers: l.pers,
      persEnc: l.persEnc || "utf8",
      entropy: l.entropy || f(this.hash.hmacStrength),
      entropyEnc: l.entropy && l.entropyEnc || "utf8",
      nonce: this.n.toArray()
    }), m = this.n.byteLength(), x = this.n.sub(new e(2)); ; ) {
      var I = new e(v.generate(m));
      if (!(I.cmp(x) > 0))
        return I.iaddn(1), this.keyFromPrivate(I);
    }
  }, s.prototype._truncateToN = function(l, v) {
    var m = l.byteLength() * 8 - this.n.bitLength();
    return m > 0 && (l = l.ushrn(m)), !v && l.cmp(this.n) >= 0 ? l.sub(this.n) : l;
  }, s.prototype.sign = function(l, v, m, x) {
    typeof m == "object" && (x = m, m = null), x || (x = {}), v = this.keyFromPrivate(v, m), l = this._truncateToN(new e(l, 16));
    for (var I = this.n.byteLength(), k = v.getPrivate().toArray("be", I), P = l.toArray("be", I), M = new t({
      hash: this.hash,
      entropy: k,
      nonce: P,
      pers: x.pers,
      persEnc: x.persEnc || "utf8"
    }), R = this.n.sub(new e(1)), F = 0; ; F++) {
      var C = x.k ? x.k(F) : new e(M.generate(this.n.byteLength()));
      if (C = this._truncateToN(C, !0), !(C.cmpn(1) <= 0 || C.cmp(R) >= 0)) {
        var L = this.g.mul(C);
        if (!L.isInfinity()) {
          var U = L.getX(), q = U.umod(this.n);
          if (q.cmpn(0) !== 0) {
            var Z = C.invm(this.n).mul(q.mul(v.getPrivate()).iadd(l));
            if (Z = Z.umod(this.n), Z.cmpn(0) !== 0) {
              var z = (L.getY().isOdd() ? 1 : 0) | (U.cmp(q) !== 0 ? 2 : 0);
              return x.canonical && Z.cmp(this.nh) > 0 && (Z = this.n.sub(Z), z ^= 1), new o({ r: q, s: Z, recoveryParam: z });
            }
          }
        }
      }
    }
  }, s.prototype.verify = function(l, v, m, x) {
    l = this._truncateToN(new e(l, 16)), m = this.keyFromPublic(m, x), v = new o(v, "hex");
    var I = v.r, k = v.s;
    if (I.cmpn(1) < 0 || I.cmp(this.n) >= 0 || k.cmpn(1) < 0 || k.cmp(this.n) >= 0)
      return !1;
    var P = k.invm(this.n), M = P.mul(l).umod(this.n), R = P.mul(I).umod(this.n), F;
    return this.curve._maxwellTrick ? (F = this.g.jmulAdd(M, m.getPublic(), R), F.isInfinity() ? !1 : F.eqXToP(I)) : (F = this.g.mulAdd(M, m.getPublic(), R), F.isInfinity() ? !1 : F.getX().umod(this.n).cmp(I) === 0);
  }, s.prototype.recoverPubKey = function(b, l, v, m) {
    i((3 & v) === v, "The recovery param is more than two bits"), l = new o(l, m);
    var x = this.n, I = new e(b), k = l.r, P = l.s, M = v & 1, R = v >> 1;
    if (k.cmp(this.curve.p.umod(this.curve.n)) >= 0 && R)
      throw new Error("Unable to find sencond key candinate");
    R ? k = this.curve.pointFromX(k.add(this.curve.n), M) : k = this.curve.pointFromX(k, M);
    var F = l.r.invm(x), C = x.sub(I).mul(F).umod(x), L = P.mul(F).umod(x);
    return this.g.mulAdd(C, k, L);
  }, s.prototype.getKeyRecoveryParam = function(b, l, v, m) {
    if (l = new o(l, m), l.recoveryParam !== null)
      return l.recoveryParam;
    for (var x = 0; x < 4; x++) {
      var I;
      try {
        I = this.recoverPubKey(b, l, x);
      } catch {
        continue;
      }
      if (I.eq(v))
        return x;
    }
    throw new Error("Unable to find valid recovery factor");
  }, I8;
}
var o6 = J0, uv = o6.assert, Ou = o6.parseBytes, O1 = o6.cachedProperty;
function o0(e, t) {
  this.eddsa = e, this._secret = Ou(t.secret), e.isPoint(t.pub) ? this._pub = t.pub : this._pubBytes = Ou(t.pub);
}
o0.fromPublic = function(t, a) {
  return a instanceof o0 ? a : new o0(t, { pub: a });
};
o0.fromSecret = function(t, a) {
  return a instanceof o0 ? a : new o0(t, { secret: a });
};
o0.prototype.secret = function() {
  return this._secret;
};
O1(o0, "pubBytes", function() {
  return this.eddsa.encodePoint(this.pub());
});
O1(o0, "pub", function() {
  return this._pubBytes ? this.eddsa.decodePoint(this._pubBytes) : this.eddsa.g.mul(this.priv());
});
O1(o0, "privBytes", function() {
  var t = this.eddsa, a = this.hash(), r = t.encodingLength - 1, f = a.slice(0, t.encodingLength);
  return f[0] &= 248, f[r] &= 127, f[r] |= 64, f;
});
O1(o0, "priv", function() {
  return this.eddsa.decodeInt(this.privBytes());
});
O1(o0, "hash", function() {
  return this.eddsa.hash().update(this.secret()).digest();
});
O1(o0, "messagePrefix", function() {
  return this.hash().slice(this.eddsa.encodingLength);
});
o0.prototype.sign = function(t) {
  return uv(this._secret, "KeyPair can only verify"), this.eddsa.sign(t, this);
};
o0.prototype.verify = function(t, a) {
  return this.eddsa.verify(t, a, this);
};
o0.prototype.getSecret = function(t) {
  return uv(this._secret, "KeyPair is public only"), o6.encode(this.secret(), t);
};
o0.prototype.getPublic = function(t) {
  return o6.encode(this.pubBytes(), t);
};
var LM = o0, FM = u0, Ai = J0, HM = Ai.assert, Ii = Ai.cachedProperty, UM = Ai.parseBytes;
function Sr(e, t) {
  this.eddsa = e, typeof t != "object" && (t = UM(t)), Array.isArray(t) && (t = {
    R: t.slice(0, e.encodingLength),
    S: t.slice(e.encodingLength)
  }), HM(t.R && t.S, "Signature without R or S"), e.isPoint(t.R) && (this._R = t.R), t.S instanceof FM && (this._S = t.S), this._Rencoded = Array.isArray(t.R) ? t.R : t.Rencoded, this._Sencoded = Array.isArray(t.S) ? t.S : t.Sencoded;
}
Ii(Sr, "S", function() {
  return this.eddsa.decodeInt(this.Sencoded());
});
Ii(Sr, "R", function() {
  return this.eddsa.decodePoint(this.Rencoded());
});
Ii(Sr, "Rencoded", function() {
  return this.eddsa.encodePoint(this.R());
});
Ii(Sr, "Sencoded", function() {
  return this.eddsa.encodeInt(this.S());
});
Sr.prototype.toBytes = function() {
  return this.Rencoded().concat(this.Sencoded());
};
Sr.prototype.toHex = function() {
  return Ai.encode(this.toBytes(), "hex").toUpperCase();
};
var $M = Sr, jM = n6, VM = Si, u1 = J0, zM = u1.assert, lv = u1.parseBytes, pv = LM, Pu = $M;
function z0(e) {
  if (zM(e === "ed25519", "only tested with ed25519 so far"), !(this instanceof z0))
    return new z0(e);
  e = VM[e].curve, this.curve = e, this.g = e.g, this.g.precompute(e.n.bitLength() + 1), this.pointClass = e.point().constructor, this.encodingLength = Math.ceil(e.n.bitLength() / 8), this.hash = jM.sha512;
}
var qM = z0;
z0.prototype.sign = function(t, a) {
  t = lv(t);
  var r = this.keyFromSecret(a), f = this.hashInt(r.messagePrefix(), t), i = this.g.mul(f), n = this.encodePoint(i), o = this.hashInt(n, r.pubBytes(), t).mul(r.priv()), s = f.add(o).umod(this.curve.n);
  return this.makeSignature({ R: i, S: s, Rencoded: n });
};
z0.prototype.verify = function(t, a, r) {
  t = lv(t), a = this.makeSignature(a);
  var f = this.keyFromPublic(r), i = this.hashInt(a.Rencoded(), f.pubBytes(), t), n = this.g.mul(a.S()), o = a.R().add(f.pub().mul(i));
  return o.eq(n);
};
z0.prototype.hashInt = function() {
  for (var t = this.hash(), a = 0; a < arguments.length; a++)
    t.update(arguments[a]);
  return u1.intFromLE(t.digest()).umod(this.curve.n);
};
z0.prototype.keyFromPublic = function(t) {
  return pv.fromPublic(this, t);
};
z0.prototype.keyFromSecret = function(t) {
  return pv.fromSecret(this, t);
};
z0.prototype.makeSignature = function(t) {
  return t instanceof Pu ? t : new Pu(this, t);
};
z0.prototype.encodePoint = function(t) {
  var a = t.getY().toArray("le", this.encodingLength);
  return a[this.encodingLength - 1] |= t.getX().isOdd() ? 128 : 0, a;
};
z0.prototype.decodePoint = function(t) {
  t = u1.parseBytes(t);
  var a = t.length - 1, r = t.slice(0, a).concat(t[a] & -129), f = (t[a] & 128) !== 0, i = u1.intFromLE(r);
  return this.curve.pointFromY(i, f);
};
z0.prototype.encodeInt = function(t) {
  return t.toArray("le", this.encodingLength);
};
z0.prototype.decodeInt = function(t) {
  return u1.intFromLE(t);
};
z0.prototype.isPoint = function(t) {
  return t instanceof this.pointClass;
};
var Mu;
function s6() {
  return Mu || (Mu = 1, function(e) {
    var t = e;
    t.version = Xw.version, t.utils = J0, t.rand = Sd(), t.curve = Ed, t.curves = Si, t.ec = DM(), t.eddsa = qM;
  }(vn)), vn;
}
var ki = O0, KM = s6().ec, ur = new KM("secp256k1"), GM = ur.curve.point.bind(ur.curve), hv = ur.curve.pointFromX.bind(ur.curve), Pe = function(t, a, r) {
  try {
    var f = GM(t, a, r);
  } catch {
    throw new Error("Invalid Point");
  }
  return f.validate(), f;
};
Pe.prototype = Object.getPrototypeOf(ur.curve.point());
Pe.fromX = function(t, a) {
  try {
    var r = hv(a, t);
  } catch {
    throw new Error("Invalid X");
  }
  return r.validate(), r;
};
Pe.getG = function() {
  return ur.curve.g;
};
Pe.getN = function() {
  return new ki(ur.curve.n.toArray());
};
Pe.prototype._getX || (Pe.prototype._getX = Pe.prototype.getX);
Pe.prototype.getX = function() {
  return new ki(this._getX().toArray());
};
Pe.prototype._getY || (Pe.prototype._getY = Pe.prototype.getY);
Pe.prototype.getY = function() {
  return new ki(this._getY().toArray());
};
Pe.prototype.validate = function() {
  if (this.isInfinity())
    throw new Error("Point cannot be equal to Infinity");
  var t;
  try {
    t = hv(this.getX(), this.getY().isOdd());
  } catch {
    throw new Error("Point does not lie on the curve");
  }
  if (t.y.cmp(this.y) !== 0)
    throw new Error("Invalid y value for curve.");
  if (!this.mul(Pe.getN()).isInfinity())
    throw new Error("Point times N must be infinity");
  return this;
};
Pe.pointToCompressed = function(t) {
  var a = t.getX().toBuffer({ size: 32 }), r = t.getY().toBuffer({ size: 32 }), f, i = r[r.length - 1] % 2;
  return i ? f = Q.Buffer.from([3]) : f = Q.Buffer.from([2]), Q.Buffer.concat([f, a]);
};
Pe.pointFromCompressed = function(e) {
  if (e.length !== 33)
    throw new Error("invalid buffer length");
  let t = e[0], a;
  if (t === 3)
    a = !0;
  else if (t === 2)
    a = !1;
  else
    throw new Error("invalid value of compressed prefix");
  let r = e.slice(1, 33), f = ki.fromBuffer(r);
  return Pe.fromX(a, f);
};
Pe.prototype.toBuffer = function() {
  return Pe.pointToCompressed(this);
};
Pe.prototype.toHex = function() {
  return this.toBuffer().toString("hex");
};
Pe.fromBuffer = function(e) {
  return Pe.pointFromCompressed(e);
};
Pe.fromHex = function(e) {
  return Pe.fromBuffer(Q.Buffer.from(e, "hex"));
};
var P1 = Pe, bv = Ee, WM = Ae, Ru = function(t) {
  return bv.isString(t) ? /^[0-9a-fA-F]+$/.test(t) : !1;
}, N0 = {
  /**
   * Test if an argument is a valid JSON object. If it is, returns a truthy
   * value (the json object decoded), so no double JSON.parse call is necessary
   *
   * @param {string} arg
   * @return {Object|boolean} false if the argument is not a JSON string.
   */
  isValidJSON: function(t) {
    var a;
    if (!bv.isString(t))
      return !1;
    try {
      a = JSON.parse(t);
    } catch {
      return !1;
    }
    return typeof a == "object";
  },
  isHexa: Ru,
  isHexaString: Ru,
  /**
   * Define immutable properties on a target object
   *
   * @param {Object} target - An object to be extended
   * @param {Object} values - An object of properties
   * @return {Object} The target object
   */
  defineImmutable: function(t, a) {
    return Object.keys(a).forEach(function(r) {
      Object.defineProperty(t, r, {
        configurable: !1,
        enumerable: !0,
        value: a[r]
      });
    }), t;
  },
  /**
   * Checks that a value is a natural number, a positive integer or zero.
   *
   * @param {*} value
   * @return {Boolean}
   */
  isNaturalNumber: function(t) {
    return typeof t == "number" && isFinite(t) && Math.floor(t) === t && t >= 0;
  },
  /**
   * Transform a 4-byte integer (unsigned value) into a Buffer of length 4 (Big Endian Byte Order)
   *
   * @param {number} integer
   * @return {Buffer}
   */
  integerAsBuffer: function(t) {
    WM.checkArgumentType(t, "number", "integer");
    const a = Q.Buffer.allocUnsafe(4);
    return a.writeUInt32BE(t, 0), a;
  }
}, lr = O0, ZM = Ee, i5 = Ae, YM = N0, Te = function e(t, a) {
  if (!(this instanceof e))
    return new e(t, a);
  if (t instanceof lr)
    this.set({
      r: t,
      s: a
    });
  else if (t) {
    var r = t;
    this.set(r);
  }
};
Te.prototype.set = function(e) {
  return this.r = e.r || this.r || void 0, this.s = e.s || this.s || void 0, this.i = typeof e.i < "u" ? e.i : this.i, this.compressed = typeof e.compressed < "u" ? e.compressed : this.compressed, this.nhashtype = e.nhashtype || this.nhashtype || void 0, this;
};
Te.fromCompact = function(e) {
  i5.checkArgument(Q.Buffer.isBuffer(e), "Argument is expected to be a Buffer");
  var t = new Te(), a = !0, r = e.slice(0, 1)[0] - 27 - 4;
  r < 0 && (a = !1, r = r + 4);
  var f = e.slice(1, 33), i = e.slice(33, 65);
  return i5.checkArgument(r === 0 || r === 1 || r === 2 || r === 3, new Error("i must be 0, 1, 2, or 3")), i5.checkArgument(f.length === 32, new Error("r must be 32 bytes")), i5.checkArgument(i.length === 32, new Error("s must be 32 bytes")), t.compressed = a, t.i = r, t.r = lr.fromBuffer(f), t.s = lr.fromBuffer(i), t;
};
Te.fromDER = Te.fromBuffer = function(e, t) {
  var a = Te.parseDER(e, t), r = new Te();
  return r.r = a.r, r.s = a.s, r;
};
Te.fromTxFormat = function(e) {
  var t = e.readUInt8(e.length - 1), a = e.slice(0, e.length - 1), r = Te.fromDER(a, !1);
  return r.nhashtype = t, r;
};
Te.fromString = function(e) {
  var t = Q.Buffer.from(e, "hex");
  return Te.fromDER(t);
};
Te.parseDER = function(e, t) {
  i5.checkArgument(Q.Buffer.isBuffer(e), new Error("DER formatted signature should be a buffer")), ZM.isUndefined(t) && (t = !0);
  var a = e[0];
  i5.checkArgument(a === 48, new Error("Header byte should be 0x30"));
  var r = e[1], f = e.slice(2).length;
  i5.checkArgument(!t || r === f, new Error("Length byte should length of what follows")), r = r < f ? r : f;
  var i = e[2 + 0];
  i5.checkArgument(i === 2, new Error("Integer byte for r should be 0x02"));
  var n = e[2 + 1], o = e.slice(2 + 2, 2 + 2 + n), s = lr.fromBuffer(o), b = e[2 + 1 + 1] === 0;
  i5.checkArgument(n === o.length, new Error("Length of r incorrect"));
  var l = e[2 + 2 + n + 0];
  i5.checkArgument(l === 2, new Error("Integer byte for s should be 0x02"));
  var v = e[2 + 2 + n + 1], m = e.slice(2 + 2 + n + 2, 2 + 2 + n + 2 + v), x = lr.fromBuffer(m), I = e[2 + 2 + n + 2 + 2] === 0;
  i5.checkArgument(v === m.length, new Error("Length of s incorrect"));
  var k = 2 + 2 + n + 2 + v;
  i5.checkArgument(r === k - 2, new Error("Length of signature incorrect"));
  var P = {
    header: a,
    length: r,
    rheader: i,
    rlength: n,
    rneg: b,
    rbuf: o,
    r: s,
    sheader: l,
    slength: v,
    sneg: I,
    sbuf: m,
    s: x
  };
  return P;
};
Te.prototype.toCompact = function(e, t) {
  if (e = typeof e == "number" ? e : this.i, t = typeof t == "boolean" ? t : this.compressed, !(e === 0 || e === 1 || e === 2 || e === 3))
    throw new Error("i must be equal to 0, 1, 2, or 3");
  var a = e + 27 + 4;
  t === !1 && (a = a - 4);
  var r = Q.Buffer.from([a]), f = this.r.toBuffer({
    size: 32
  }), i = this.s.toBuffer({
    size: 32
  });
  return Q.Buffer.concat([r, f, i]);
};
Te.prototype.toBuffer = Te.prototype.toDER = function() {
  var e = this.r.toBuffer(), t = this.s.toBuffer(), a = !!(e[0] & 128), r = !!(t[0] & 128), f = a ? Q.Buffer.concat([Q.Buffer.from([0]), e]) : e, i = r ? Q.Buffer.concat([Q.Buffer.from([0]), t]) : t, n = f.length, o = i.length, s = 2 + n + 2 + o, b = 2, l = 2, v = 48, m = Q.Buffer.concat([Q.Buffer.from([v, s, b, n]), f, Q.Buffer.from([l, o]), i]);
  return m;
};
Te.prototype.toString = function() {
  var e = this.toDER();
  return e.toString("hex");
};
Te.isTxDER = function(e) {
  if (e.length < 9 || e.length > 73 || e[0] !== 48 || e[1] !== e.length - 3)
    return !1;
  var t = e[3];
  if (5 + t >= e.length)
    return !1;
  var a = e[5 + t];
  if (t + a + 7 !== e.length)
    return !1;
  var r = e.slice(4);
  if (e[4 - 2] !== 2 || t === 0 || r[0] & 128 || t > 1 && r[0] === 0 && !(r[1] & 128))
    return !1;
  var f = e.slice(6 + t);
  return !(e[6 + t - 2] !== 2 || a === 0 || f[0] & 128 || a > 1 && f[0] === 0 && !(f[1] & 128));
};
Te.prototype.hasLowS = function() {
  return !(this.s.lt(new lr(1)) || this.s.gt(new lr("7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0", "hex")));
};
Te.prototype.hasDefinedHashtype = function() {
  if (!YM.isNaturalNumber(this.nhashtype))
    return !1;
  var e = this.nhashtype & 31;
  return !(e < Te.SIGHASH_ALL || e > Te.SIGHASH_SINGLE);
};
Te.prototype.toTxFormat = function() {
  var e = this.toDER(), t = Q.Buffer.alloc(1);
  return t.writeUInt8(this.nhashtype, 0), Q.Buffer.concat([e, t]);
};
Te.SIGHASH_ALL = 1;
Te.SIGHASH_NONE = 2;
Te.SIGHASH_SINGLE = 3;
Te.SIGHASH_FORKID = 64;
Te.SIGHASH_ANYONECANPAY = 128;
var V5 = Te, Ko = { exports: {} }, k8 = { exports: {} }, Bu;
function XM() {
  return Bu || (Bu = 1, function(e) {
    var t = n6, a = Ae, r = e.exports;
    r.sha1 = function(f) {
      return a.checkArgument(Q.Buffer.isBuffer(f)), Q.Buffer.from(t.sha1().update(f).digest("hex"), "hex");
    }, r.sha1.blocksize = 512, r.sha256 = function(f) {
      return a.checkArgument(Q.Buffer.isBuffer(f)), Q.Buffer.from(t.sha256().update(f).digest("hex"), "hex");
    }, r.sha256.blocksize = 512, r.sha256sha256 = function(f) {
      return a.checkArgument(Q.Buffer.isBuffer(f)), r.sha256(r.sha256(f));
    }, r.ripemd160 = function(f) {
      return a.checkArgument(Q.Buffer.isBuffer(f)), Q.Buffer.from(t.ripemd160().update(f).digest("hex"), "hex");
    }, r.sha256ripemd160 = function(f) {
      return a.checkArgument(Q.Buffer.isBuffer(f)), r.ripemd160(r.sha256(f));
    }, r.sha512 = function(f) {
      return a.checkArgument(Q.Buffer.isBuffer(f)), Q.Buffer.from(t.sha512().update(f).digest("hex"), "hex");
    }, r.sha512.blocksize = 1024, r.hmac = function(f, i, n) {
      a.checkArgument(Q.Buffer.isBuffer(i)), a.checkArgument(Q.Buffer.isBuffer(n)), a.checkArgument(f.blocksize);
      var o = f.blocksize / 8;
      if (n.length > o)
        n = f(n);
      else if (n < o) {
        var s = Q.Buffer.alloc(o);
        s.fill(0), n.copy(s), n = s;
      }
      var b = Q.Buffer.alloc(o);
      b.fill(92);
      var l = Q.Buffer.alloc(o);
      l.fill(54);
      for (var v = Q.Buffer.alloc(o), m = Q.Buffer.alloc(o), x = 0; x < o; x++)
        v[x] = b[x] ^ n[x], m[x] = l[x] ^ n[x];
      return f(Q.Buffer.concat([v, f(Q.Buffer.concat([m, i]))]));
    }, r.sha256hmac = function(f, i) {
      return r.hmac(r.sha256, f, i);
    }, r.sha512hmac = function(f, i) {
      return r.hmac(r.sha512, f, i);
    };
  }(k8)), k8.exports;
}
var O8 = { exports: {} }, Nu;
function JM() {
  return Nu || (Nu = 1, function(e) {
    var t = gi(), a = Ae, r = e.exports;
    r.sha1 = function(f) {
      return a.checkArgument(Q.Buffer.isBuffer(f)), t.createHash("sha1").update(f).digest();
    }, r.sha1.blocksize = 512, r.sha256 = function(f) {
      return a.checkArgument(Q.Buffer.isBuffer(f)), t.createHash("sha256").update(f).digest();
    }, r.sha256.blocksize = 512, r.sha256sha256 = function(f) {
      return a.checkArgument(Q.Buffer.isBuffer(f)), r.sha256(r.sha256(f));
    }, r.ripemd160 = function(f) {
      return a.checkArgument(Q.Buffer.isBuffer(f)), t.createHash("ripemd160").update(f).digest();
    }, r.sha256ripemd160 = function(f) {
      return a.checkArgument(Q.Buffer.isBuffer(f)), r.ripemd160(r.sha256(f));
    }, r.sha512 = function(f) {
      return a.checkArgument(Q.Buffer.isBuffer(f)), t.createHash("sha512").update(f).digest();
    }, r.sha512.blocksize = 1024, r.hmac = function(f, i, n) {
      a.checkArgument(Q.Buffer.isBuffer(i)), a.checkArgument(Q.Buffer.isBuffer(n)), a.checkArgument(f.blocksize);
      var o = f.blocksize / 8;
      if (n.length > o)
        n = f(n);
      else if (n < o) {
        var s = Q.Buffer.alloc(o);
        s.fill(0), n.copy(s), n = s;
      }
      var b = Q.Buffer.alloc(o);
      b.fill(92);
      var l = Q.Buffer.alloc(o);
      l.fill(54);
      for (var v = Q.Buffer.alloc(o), m = Q.Buffer.alloc(o), x = 0; x < o; x++)
        v[x] = b[x] ^ n[x], m[x] = l[x] ^ n[x];
      return f(Q.Buffer.concat([v, f(Q.Buffer.concat([m, i]))]));
    }, r.sha256hmac = function(f, i) {
      return r.hmac(r.sha256, f, i);
    }, r.sha512hmac = function(f, i) {
      return r.hmac(r.sha512, f, i);
    };
  }(O8)), O8.exports;
}
g7.browser ? Ko.exports = XM() : Ko.exports = JM();
var C0 = Ko.exports, Ft = Ee, p9 = N0, nr = [], R9 = {};
function mv() {
}
mv.prototype.toString = function() {
  return this.name;
};
function d6(e, t) {
  if (~nr.indexOf(e))
    return e;
  if (t) {
    Ft.isArray(t) || (t = [t]);
    for (var a = 0; a < nr.length; a++) {
      var r = nr[a], f = Ft.pick(r, t), i = Ft.values(f);
      if (~i.indexOf(e))
        return r;
    }
    return;
  }
  return R9[e];
}
function Go(e) {
  for (var t = [], a = 0; a < e.length; a++)
    t.push(e.charCodeAt(a) & 31);
  return t;
}
function c6(e) {
  var t = new mv();
  p9.defineImmutable(t, {
    name: e.name,
    alias: e.alias,
    pubkeyhash: e.pubkeyhash,
    privatekey: e.privatekey,
    scripthash: e.scripthash,
    xpubkey: e.xpubkey,
    xprivkey: e.xprivkey
  });
  var a = e.indexBy || Object.keys(e);
  return e.cashAddrPrefix && Ft.extend(t, {
    cashAddrPrefix: e.cashAddrPrefix,
    cashAddrPrefixArray: Go(e.cashAddrPrefix)
  }), e.networkMagic && Ft.extend(t, {
    networkMagic: p9.integerAsBuffer(e.networkMagic)
  }), e.port && Ft.extend(t, {
    port: e.port
  }), e.dnsSeeds && Ft.extend(t, {
    dnsSeeds: e.dnsSeeds
  }), nr.push(t), QM(t, a), t;
}
function QM(e, t) {
  for (var a = 0; a < t.length; a++) {
    var r = t[a], f = e[r];
    !Ft.isUndefined(f) && !Ft.isObject(f) && (R9[f] = e);
  }
}
function eR(e, t) {
  for (var a = 0; a < t.length; a++) {
    var r = t[a];
    R9[r] === e && delete R9[r];
  }
}
function tR(e) {
  for (var t = 0; t < nr.length; t++)
    nr[t] === e && nr.splice(t, 1);
  eR(e, Object.keys(R9));
}
var Oi = {
  livenet: 3823236072,
  testnet: 4108710900,
  regtest: 3669344250,
  stn: 4224632057
}, vv = [
  "seed.bitcoinsv.org",
  "seed.bitcoinunlimited.info"
], wa = {
  PORT: 18333,
  NETWORK_MAGIC: Oi.testnet,
  DNS_SEEDS: vv,
  PREFIX: "testnet",
  CASHADDRPREFIX: "bchtest"
}, Ht = {
  PORT: 18444,
  NETWORK_MAGIC: Oi.regtest,
  DNS_SEEDS: [],
  PREFIX: "regtest",
  CASHADDRPREFIX: "bchreg"
}, jt = {
  PORT: 9333,
  NETWORK_MAGIC: Oi.stn,
  DNS_SEEDS: ["stn-seed.bitcoinsv.io"],
  PREFIX: "stn",
  CASHADDRPREFIX: "bsvstn"
}, aR = {
  name: "livenet",
  alias: "mainnet",
  prefix: "bitcoin",
  cashAddrPrefix: "bitcoincash",
  pubkeyhash: 0,
  privatekey: 128,
  scripthash: 5,
  xpubkey: 76067358,
  xprivkey: 76066276,
  networkMagic: Oi.livenet,
  port: 8333,
  dnsSeeds: vv
}, rR = {
  name: "testnet",
  prefix: wa.PREFIX,
  cashAddrPrefix: wa.CASHADDRPREFIX,
  pubkeyhash: 111,
  privatekey: 239,
  scripthash: 196,
  xpubkey: 70617039,
  xprivkey: 70615956,
  networkMagic: wa.NETWORK_MAGIC
}, fR = {
  name: "regtest",
  prefix: Ht.PREFIX,
  cashAddrPrefix: Ht.CASHADDRPREFIX,
  pubkeyhash: 111,
  privatekey: 239,
  scripthash: 196,
  xpubkey: 70617039,
  xprivkey: 70615956,
  networkMagic: Ht.NETWORK_MAGIC,
  port: Ht.PORT,
  dnsSeeds: [],
  indexBy: [
    "port",
    "name",
    "cashAddrPrefix",
    "networkMagic"
  ]
}, iR = {
  name: "stn",
  prefix: jt.PREFIX,
  cashAddrPrefix: jt.CASHADDRPREFIX,
  pubkeyhash: 111,
  privatekey: 239,
  scripthash: 196,
  xpubkey: 70617039,
  xprivkey: 70615956,
  networkMagic: jt.NETWORK_MAGIC,
  indexBy: [
    "port",
    "name",
    "cashAddrPrefix",
    "networkMagic"
  ]
};
c6(rR);
c6(iR);
c6(fR);
c6(aR);
var P8 = d6("livenet"), nR = d6("regtest"), wt = d6("testnet"), oR = d6("stn");
Object.defineProperty(wt, "port", {
  enumerable: !0,
  configurable: !1,
  get: function() {
    return this.regtestEnabled ? Ht.PORT : this.stnEnabled ? jt.PORT : wa.PORT;
  }
});
Object.defineProperty(wt, "networkMagic", {
  enumerable: !0,
  configurable: !1,
  get: function() {
    return this.regtestEnabled ? p9.integerAsBuffer(Ht.NETWORK_MAGIC) : this.stnEnabled ? p9.integerAsBuffer(jt.NETWORK_MAGIC) : p9.integerAsBuffer(wa.NETWORK_MAGIC);
  }
});
Object.defineProperty(wt, "dnsSeeds", {
  enumerable: !0,
  configurable: !1,
  get: function() {
    return this.regtestEnabled ? Ht.DNS_SEEDS : this.stnEnabled ? jt.DNS_SEEDS : wa.DNS_SEEDS;
  }
});
Object.defineProperty(wt, "cashAddrPrefix", {
  enumerable: !0,
  configurable: !1,
  get: function() {
    return this.regtestEnabled ? Ht.CASHADDRPREFIX : this.stnEnabled ? jt.CASHADDRPREFIX : wa.CASHADDRPREFIX;
  }
});
Object.defineProperty(wt, "cashAddrPrefixArray", {
  enumerable: !0,
  configurable: !1,
  get: function() {
    return this.regtestEnabled ? Go(Ht.CASHADDRPREFIX) : this.stnEnabled ? jt.cashAddrPrefixToArray(jt.CASHADDRPREFIX) : Go(wa.CASHADDRPREFIX);
  }
});
function sR() {
  wt.regtestEnabled = !0;
}
function dR() {
  wt.regtestEnabled = !1;
}
function cR() {
  wt.stnEnabled = !0;
}
function uR() {
  wt.stnEnabled = !1;
}
var Er = {
  add: c6,
  remove: tR,
  defaultNetwork: P8,
  livenet: P8,
  mainnet: P8,
  testnet: wt,
  regtest: nR,
  stn: oR,
  get: d6,
  enableRegtest: sR,
  disableRegtest: dR,
  enableStn: cR,
  disableStn: uR
}, R6 = fe.Buffer;
function lR(e) {
  if (e.length >= 255)
    throw new TypeError("Alphabet too long");
  for (var t = new Uint8Array(256), a = 0; a < t.length; a++)
    t[a] = 255;
  for (var r = 0; r < e.length; r++) {
    var f = e.charAt(r), i = f.charCodeAt(0);
    if (t[i] !== 255)
      throw new TypeError(f + " is ambiguous");
    t[i] = r;
  }
  var n = e.length, o = e.charAt(0), s = Math.log(n) / Math.log(256), b = Math.log(256) / Math.log(n);
  function l(x) {
    if ((Array.isArray(x) || x instanceof Uint8Array) && (x = R6.from(x)), !R6.isBuffer(x))
      throw new TypeError("Expected Buffer");
    if (x.length === 0)
      return "";
    for (var I = 0, k = 0, P = 0, M = x.length; P !== M && x[P] === 0; )
      P++, I++;
    for (var R = (M - P) * b + 1 >>> 0, F = new Uint8Array(R); P !== M; ) {
      for (var C = x[P], L = 0, U = R - 1; (C !== 0 || L < k) && U !== -1; U--, L++)
        C += 256 * F[U] >>> 0, F[U] = C % n >>> 0, C = C / n >>> 0;
      if (C !== 0)
        throw new Error("Non-zero carry");
      k = L, P++;
    }
    for (var q = R - k; q !== R && F[q] === 0; )
      q++;
    for (var Z = o.repeat(I); q < R; ++q)
      Z += e.charAt(F[q]);
    return Z;
  }
  function v(x) {
    if (typeof x != "string")
      throw new TypeError("Expected String");
    if (x.length === 0)
      return R6.alloc(0);
    for (var I = 0, k = 0, P = 0; x[I] === o; )
      k++, I++;
    for (var M = (x.length - I) * s + 1 >>> 0, R = new Uint8Array(M); x[I]; ) {
      var F = t[x.charCodeAt(I)];
      if (F === 255)
        return;
      for (var C = 0, L = M - 1; (F !== 0 || C < P) && L !== -1; L--, C++)
        F += n * R[L] >>> 0, R[L] = F % 256 >>> 0, F = F / 256 >>> 0;
      if (F !== 0)
        throw new Error("Non-zero carry");
      P = C, I++;
    }
    for (var U = M - P; U !== M && R[U] === 0; )
      U++;
    var q = R6.allocUnsafe(k + (M - U));
    q.fill(0, 0, k);
    for (var Z = k; U !== M; )
      q[Z++] = R[U++];
    return q;
  }
  function m(x) {
    var I = v(x);
    if (I)
      return I;
    throw new Error("Non-base" + n + " character");
  }
  return {
    encode: l,
    decodeUnsafe: v,
    decode: m
  };
}
var pR = lR, hR = pR, bR = "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz", yv = hR(bR), M8 = Ee, gv = yv, xv = Q, mR = "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz".split(""), d0 = function e(t) {
  if (!(this instanceof e))
    return new e(t);
  if (Q.Buffer.isBuffer(t)) {
    var a = t;
    this.fromBuffer(a);
  } else if (typeof t == "string") {
    var r = t;
    this.fromString(r);
  }
};
d0.validCharacters = function(t) {
  return xv.Buffer.isBuffer(t) && (t = t.toString()), M8.every(M8.map(t, function(a) {
    return M8.includes(mR, a);
  }));
};
d0.prototype.set = function(e) {
  return this.buf = e.buf || this.buf || void 0, this;
};
d0.encode = function(e) {
  if (!xv.Buffer.isBuffer(e))
    throw new Error("Input should be a buffer");
  return gv.encode(e);
};
d0.decode = function(e) {
  if (typeof e != "string")
    throw new Error("Input should be a string");
  return Q.Buffer.from(gv.decode(e));
};
d0.prototype.fromBuffer = function(e) {
  return this.buf = e, this;
};
d0.fromBuffer = function(e) {
  return new d0().fromBuffer(e);
};
d0.fromHex = function(e) {
  return d0.fromBuffer(Q.Buffer.from(e, "hex"));
};
d0.prototype.fromString = function(e) {
  var t = d0.decode(e);
  return this.buf = t, this;
};
d0.fromString = function(e) {
  return new d0().fromString(e);
};
d0.prototype.toBuffer = function() {
  return this.buf;
};
d0.prototype.toHex = function() {
  return this.toBuffer().toString("hex");
};
d0.prototype.toString = function() {
  return d0.encode(this.buf);
};
var Pi = d0, Cu = Ee, B9 = Pi, Du = Q, _v = C0.sha256sha256, Ve = function e(t) {
  if (!(this instanceof e))
    return new e(t);
  if (Q.Buffer.isBuffer(t)) {
    var a = t;
    this.fromBuffer(a);
  } else if (typeof t == "string") {
    var r = t;
    this.fromString(r);
  }
};
Ve.prototype.set = function(e) {
  return this.buf = e.buf || this.buf || void 0, this;
};
Ve.validChecksum = function(t, a) {
  return Cu.isString(t) && (t = Du.Buffer.from(B9.decode(t))), Cu.isString(a) && (a = Du.Buffer.from(B9.decode(a))), a || (a = t.slice(-4), t = t.slice(0, -4)), Ve.checksum(t).toString("hex") === a.toString("hex");
};
Ve.decode = function(e) {
  if (typeof e != "string")
    throw new Error("Input must be a string");
  var t = Q.Buffer.from(B9.decode(e));
  if (t.length < 4)
    throw new Error("Input string too short");
  var a = t.slice(0, -4), r = t.slice(-4), f = _v(a), i = f.slice(0, 4);
  if (r.toString("hex") !== i.toString("hex"))
    throw new Error("Checksum mismatch");
  return a;
};
Ve.checksum = function(e) {
  return _v(e).slice(0, 4);
};
Ve.encode = function(e) {
  if (!Q.Buffer.isBuffer(e))
    throw new Error("Input must be a buffer");
  var t = Q.Buffer.alloc(e.length + 4), a = Ve.checksum(e);
  return e.copy(t), a.copy(t, e.length), B9.encode(t);
};
Ve.prototype.fromBuffer = function(e) {
  return this.buf = e, this;
};
Ve.fromBuffer = function(e) {
  return new Ve().fromBuffer(e);
};
Ve.fromHex = function(e) {
  return Ve.fromBuffer(Q.Buffer.from(e, "hex"));
};
Ve.prototype.fromString = function(e) {
  var t = Ve.decode(e);
  return this.buf = t, this;
};
Ve.fromString = function(e) {
  var t = Ve.decode(e);
  return new B9(t);
};
Ve.prototype.toBuffer = function() {
  return this.buf;
};
Ve.prototype.toHex = function() {
  return this.toBuffer().toString("hex");
};
Ve.prototype.toString = function() {
  return Ve.encode(this.buf);
};
var u6 = Ve, Y1 = { exports: {} }, R8 = { exports: {} }, B8 = {}, Lu;
function wv() {
  if (Lu)
    return B8;
  Lu = 1;
  function e(k) {
    return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? e = function(M) {
      return typeof M;
    } : e = function(M) {
      return M && typeof Symbol == "function" && M.constructor === Symbol && M !== Symbol.prototype ? "symbol" : typeof M;
    }, e(k);
  }
  function t(k, P) {
    if (!(k instanceof P))
      throw new TypeError("Cannot call a class as a function");
  }
  function a(k, P) {
    return P && (e(P) === "object" || typeof P == "function") ? P : r(k);
  }
  function r(k) {
    if (k === void 0)
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return k;
  }
  function f(k) {
    return f = Object.setPrototypeOf ? Object.getPrototypeOf : function(M) {
      return M.__proto__ || Object.getPrototypeOf(M);
    }, f(k);
  }
  function i(k, P) {
    if (typeof P != "function" && P !== null)
      throw new TypeError("Super expression must either be null or a function");
    k.prototype = Object.create(P && P.prototype, { constructor: { value: k, writable: !0, configurable: !0 } }), P && n(k, P);
  }
  function n(k, P) {
    return n = Object.setPrototypeOf || function(R, F) {
      return R.__proto__ = F, R;
    }, n(k, P);
  }
  var o = {}, s, b;
  function l(k, P, M) {
    M || (M = Error);
    function R(C, L, U) {
      return typeof P == "string" ? P : P(C, L, U);
    }
    var F = /* @__PURE__ */ function(C) {
      i(L, C);
      function L(U, q, Z) {
        var z;
        return t(this, L), z = a(this, f(L).call(this, R(U, q, Z))), z.code = k, z;
      }
      return L;
    }(M);
    o[k] = F;
  }
  function v(k, P) {
    if (Array.isArray(k)) {
      var M = k.length;
      return k = k.map(function(R) {
        return String(R);
      }), M > 2 ? "one of ".concat(P, " ").concat(k.slice(0, M - 1).join(", "), ", or ") + k[M - 1] : M === 2 ? "one of ".concat(P, " ").concat(k[0], " or ").concat(k[1]) : "of ".concat(P, " ").concat(k[0]);
    } else
      return "of ".concat(P, " ").concat(String(k));
  }
  function m(k, P, M) {
    return k.substr(!M || M < 0 ? 0 : +M, P.length) === P;
  }
  function x(k, P, M) {
    return (M === void 0 || M > k.length) && (M = k.length), k.substring(M - P.length, M) === P;
  }
  function I(k, P, M) {
    return typeof M != "number" && (M = 0), M + P.length > k.length ? !1 : k.indexOf(P, M) !== -1;
  }
  return l("ERR_AMBIGUOUS_ARGUMENT", 'The "%s" argument is ambiguous. %s', TypeError), l("ERR_INVALID_ARG_TYPE", function(k, P, M) {
    s === void 0 && (s = yt()), s(typeof k == "string", "'name' must be a string");
    var R;
    typeof P == "string" && m(P, "not ") ? (R = "must not be", P = P.replace(/^not /, "")) : R = "must be";
    var F;
    if (x(k, " argument"))
      F = "The ".concat(k, " ").concat(R, " ").concat(v(P, "type"));
    else {
      var C = I(k, ".") ? "property" : "argument";
      F = 'The "'.concat(k, '" ').concat(C, " ").concat(R, " ").concat(v(P, "type"));
    }
    return F += ". Received type ".concat(e(M)), F;
  }, TypeError), l("ERR_INVALID_ARG_VALUE", function(k, P) {
    var M = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "is invalid";
    b === void 0 && (b = R0);
    var R = b.inspect(P);
    return R.length > 128 && (R = "".concat(R.slice(0, 128), "...")), "The argument '".concat(k, "' ").concat(M, ". Received ").concat(R);
  }, TypeError), l("ERR_INVALID_RETURN_VALUE", function(k, P, M) {
    var R;
    return M && M.constructor && M.constructor.name ? R = "instance of ".concat(M.constructor.name) : R = "type ".concat(e(M)), "Expected ".concat(k, ' to be returned from the "').concat(P, '"') + " function but got ".concat(R, ".");
  }, TypeError), l("ERR_MISSING_ARGS", function() {
    for (var k = arguments.length, P = new Array(k), M = 0; M < k; M++)
      P[M] = arguments[M];
    s === void 0 && (s = yt()), s(P.length > 0, "At least one arg needs to be specified");
    var R = "The ", F = P.length;
    switch (P = P.map(function(C) {
      return '"'.concat(C, '"');
    }), F) {
      case 1:
        R += "".concat(P[0], " argument");
        break;
      case 2:
        R += "".concat(P[0], " and ").concat(P[1], " arguments");
        break;
      default:
        R += P.slice(0, F - 1).join(", "), R += ", and ".concat(P[F - 1], " arguments");
        break;
    }
    return "".concat(R, " must be specified");
  }, TypeError), B8.codes = o, B8;
}
var N8, Fu;
function vR() {
  if (Fu)
    return N8;
  Fu = 1;
  function e(c) {
    for (var y = 1; y < arguments.length; y++) {
      var S = arguments[y] != null ? arguments[y] : {}, T = Object.keys(S);
      typeof Object.getOwnPropertySymbols == "function" && (T = T.concat(Object.getOwnPropertySymbols(S).filter(function(g) {
        return Object.getOwnPropertyDescriptor(S, g).enumerable;
      }))), T.forEach(function(g) {
        t(c, g, S[g]);
      });
    }
    return c;
  }
  function t(c, y, S) {
    return y in c ? Object.defineProperty(c, y, { value: S, enumerable: !0, configurable: !0, writable: !0 }) : c[y] = S, c;
  }
  function a(c, y) {
    if (!(c instanceof y))
      throw new TypeError("Cannot call a class as a function");
  }
  function r(c, y) {
    for (var S = 0; S < y.length; S++) {
      var T = y[S];
      T.enumerable = T.enumerable || !1, T.configurable = !0, "value" in T && (T.writable = !0), Object.defineProperty(c, T.key, T);
    }
  }
  function f(c, y, S) {
    return y && r(c.prototype, y), S && r(c, S), c;
  }
  function i(c, y) {
    return y && (I(y) === "object" || typeof y == "function") ? y : n(c);
  }
  function n(c) {
    if (c === void 0)
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return c;
  }
  function o(c, y) {
    if (typeof y != "function" && y !== null)
      throw new TypeError("Super expression must either be null or a function");
    c.prototype = Object.create(y && y.prototype, { constructor: { value: c, writable: !0, configurable: !0 } }), y && m(c, y);
  }
  function s(c) {
    var y = typeof Map == "function" ? /* @__PURE__ */ new Map() : void 0;
    return s = function(T) {
      if (T === null || !v(T))
        return T;
      if (typeof T != "function")
        throw new TypeError("Super expression must either be null or a function");
      if (typeof y < "u") {
        if (y.has(T))
          return y.get(T);
        y.set(T, g);
      }
      function g() {
        return l(T, arguments, x(this).constructor);
      }
      return g.prototype = Object.create(T.prototype, { constructor: { value: g, enumerable: !1, writable: !0, configurable: !0 } }), m(g, T);
    }, s(c);
  }
  function b() {
    if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
      return !1;
    if (typeof Proxy == "function")
      return !0;
    try {
      return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      })), !0;
    } catch {
      return !1;
    }
  }
  function l(c, y, S) {
    return b() ? l = Reflect.construct : l = function(g, w, A) {
      var h = [null];
      h.push.apply(h, w);
      var N = Function.bind.apply(g, h), Y = new N();
      return A && m(Y, A.prototype), Y;
    }, l.apply(null, arguments);
  }
  function v(c) {
    return Function.toString.call(c).indexOf("[native code]") !== -1;
  }
  function m(c, y) {
    return m = Object.setPrototypeOf || function(T, g) {
      return T.__proto__ = g, T;
    }, m(c, y);
  }
  function x(c) {
    return x = Object.setPrototypeOf ? Object.getPrototypeOf : function(S) {
      return S.__proto__ || Object.getPrototypeOf(S);
    }, x(c);
  }
  function I(c) {
    return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? I = function(S) {
      return typeof S;
    } : I = function(S) {
      return S && typeof Symbol == "function" && S.constructor === Symbol && S !== Symbol.prototype ? "symbol" : typeof S;
    }, I(c);
  }
  var k = R0, P = k.inspect, M = wv(), R = M.codes.ERR_INVALID_ARG_TYPE;
  function F(c, y, S) {
    return (S === void 0 || S > c.length) && (S = c.length), c.substring(S - y.length, S) === y;
  }
  function C(c, y) {
    if (y = Math.floor(y), c.length == 0 || y == 0)
      return "";
    var S = c.length * y;
    for (y = Math.floor(Math.log(y) / Math.log(2)); y; )
      c += c, y--;
    return c += c.substring(0, S - c.length), c;
  }
  var L = "", U = "", q = "", Z = "", z = {
    deepStrictEqual: "Expected values to be strictly deep-equal:",
    strictEqual: "Expected values to be strictly equal:",
    strictEqualObject: 'Expected "actual" to be reference-equal to "expected":',
    deepEqual: "Expected values to be loosely deep-equal:",
    equal: "Expected values to be loosely equal:",
    notDeepStrictEqual: 'Expected "actual" not to be strictly deep-equal to:',
    notStrictEqual: 'Expected "actual" to be strictly unequal to:',
    notStrictEqualObject: 'Expected "actual" not to be reference-equal to "expected":',
    notDeepEqual: 'Expected "actual" not to be loosely deep-equal to:',
    notEqual: 'Expected "actual" to be loosely unequal to:',
    notIdentical: "Values identical but not reference-equal:"
  }, G = 10;
  function O(c) {
    var y = Object.keys(c), S = Object.create(Object.getPrototypeOf(c));
    return y.forEach(function(T) {
      S[T] = c[T];
    }), Object.defineProperty(S, "message", {
      value: c.message
    }), S;
  }
  function u(c) {
    return P(c, {
      compact: !1,
      customInspect: !1,
      depth: 1e3,
      maxArrayLength: 1 / 0,
      // Assert compares only enumerable properties (with a few exceptions).
      showHidden: !1,
      // Having a long line as error is better than wrapping the line for
      // comparison for now.
      // TODO(BridgeAR): `breakLength` should be limited as soon as soon as we
      // have meta information about the inspected properties (i.e., know where
      // in what line the property starts and ends).
      breakLength: 1 / 0,
      // Assert does not detect proxies currently.
      showProxy: !1,
      sorted: !0,
      // Inspect getters as we also check them when comparing entries.
      getters: !0
    });
  }
  function p(c, y, S) {
    var T = "", g = "", w = 0, A = "", h = !1, N = u(c), Y = N.split(`
`), t7 = u(y).split(`
`), H = 0, $ = "";
    if (S === "strictEqual" && I(c) === "object" && I(y) === "object" && c !== null && y !== null && (S = "strictEqualObject"), Y.length === 1 && t7.length === 1 && Y[0] !== t7[0]) {
      var X = Y[0].length + t7[0].length;
      if (X <= G) {
        if ((I(c) !== "object" || c === null) && (I(y) !== "object" || y === null) && (c !== 0 || y !== 0))
          return "".concat(z[S], `

`) + "".concat(Y[0], " !== ").concat(t7[0], `
`);
      } else if (S !== "strictEqualObject") {
        var i7 = g7.stderr && g7.stderr.isTTY ? g7.stderr.columns : 80;
        if (X < i7) {
          for (; Y[0][H] === t7[0][H]; )
            H++;
          H > 2 && ($ = `
  `.concat(C(" ", H), "^"), H = 0);
        }
      }
    }
    for (var J = Y[Y.length - 1], _ = t7[t7.length - 1]; J === _ && (H++ < 2 ? A = `
  `.concat(J).concat(A) : T = J, Y.pop(), t7.pop(), !(Y.length === 0 || t7.length === 0)); )
      J = Y[Y.length - 1], _ = t7[t7.length - 1];
    var E = Math.max(Y.length, t7.length);
    if (E === 0) {
      var j = N.split(`
`);
      if (j.length > 30)
        for (j[26] = "".concat(L, "...").concat(Z); j.length > 27; )
          j.pop();
      return "".concat(z.notIdentical, `

`).concat(j.join(`
`), `
`);
    }
    H > 3 && (A = `
`.concat(L, "...").concat(Z).concat(A), h = !0), T !== "" && (A = `
  `.concat(T).concat(A), T = "");
    var V = 0, n7 = z[S] + `
`.concat(U, "+ actual").concat(Z, " ").concat(q, "- expected").concat(Z), K = " ".concat(L, "...").concat(Z, " Lines skipped");
    for (H = 0; H < E; H++) {
      var B = H - w;
      if (Y.length < H + 1)
        B > 1 && H > 2 && (B > 4 ? (g += `
`.concat(L, "...").concat(Z), h = !0) : B > 3 && (g += `
  `.concat(t7[H - 2]), V++), g += `
  `.concat(t7[H - 1]), V++), w = H, T += `
`.concat(q, "-").concat(Z, " ").concat(t7[H]), V++;
      else if (t7.length < H + 1)
        B > 1 && H > 2 && (B > 4 ? (g += `
`.concat(L, "...").concat(Z), h = !0) : B > 3 && (g += `
  `.concat(Y[H - 2]), V++), g += `
  `.concat(Y[H - 1]), V++), w = H, g += `
`.concat(U, "+").concat(Z, " ").concat(Y[H]), V++;
      else {
        var D = t7[H], W = Y[H], e7 = W !== D && (!F(W, ",") || W.slice(0, -1) !== D);
        e7 && F(D, ",") && D.slice(0, -1) === W && (e7 = !1, W += ","), e7 ? (B > 1 && H > 2 && (B > 4 ? (g += `
`.concat(L, "...").concat(Z), h = !0) : B > 3 && (g += `
  `.concat(Y[H - 2]), V++), g += `
  `.concat(Y[H - 1]), V++), w = H, g += `
`.concat(U, "+").concat(Z, " ").concat(W), T += `
`.concat(q, "-").concat(Z, " ").concat(D), V += 2) : (g += T, T = "", (B === 1 || H === 0) && (g += `
  `.concat(W), V++));
      }
      if (V > 20 && H < E - 2)
        return "".concat(n7).concat(K, `
`).concat(g, `
`).concat(L, "...").concat(Z).concat(T, `
`) + "".concat(L, "...").concat(Z);
    }
    return "".concat(n7).concat(h ? K : "", `
`).concat(g).concat(T).concat(A).concat($);
  }
  var d = /* @__PURE__ */ function(c) {
    o(y, c);
    function y(S) {
      var T;
      if (a(this, y), I(S) !== "object" || S === null)
        throw new R("options", "Object", S);
      var g = S.message, w = S.operator, A = S.stackStartFn, h = S.actual, N = S.expected, Y = Error.stackTraceLimit;
      if (Error.stackTraceLimit = 0, g != null)
        T = i(this, x(y).call(this, String(g)));
      else if (g7.stderr && g7.stderr.isTTY && (g7.stderr && g7.stderr.getColorDepth && g7.stderr.getColorDepth() !== 1 ? (L = "\x1B[34m", U = "\x1B[32m", Z = "\x1B[39m", q = "\x1B[31m") : (L = "", U = "", Z = "", q = "")), I(h) === "object" && h !== null && I(N) === "object" && N !== null && "stack" in h && h instanceof Error && "stack" in N && N instanceof Error && (h = O(h), N = O(N)), w === "deepStrictEqual" || w === "strictEqual")
        T = i(this, x(y).call(this, p(h, N, w)));
      else if (w === "notDeepStrictEqual" || w === "notStrictEqual") {
        var t7 = z[w], H = u(h).split(`
`);
        if (w === "notStrictEqual" && I(h) === "object" && h !== null && (t7 = z.notStrictEqualObject), H.length > 30)
          for (H[26] = "".concat(L, "...").concat(Z); H.length > 27; )
            H.pop();
        H.length === 1 ? T = i(this, x(y).call(this, "".concat(t7, " ").concat(H[0]))) : T = i(this, x(y).call(this, "".concat(t7, `

`).concat(H.join(`
`), `
`)));
      } else {
        var $ = u(h), X = "", i7 = z[w];
        w === "notDeepEqual" || w === "notEqual" ? ($ = "".concat(z[w], `

`).concat($), $.length > 1024 && ($ = "".concat($.slice(0, 1021), "..."))) : (X = "".concat(u(N)), $.length > 512 && ($ = "".concat($.slice(0, 509), "...")), X.length > 512 && (X = "".concat(X.slice(0, 509), "...")), w === "deepEqual" || w === "equal" ? $ = "".concat(i7, `

`).concat($, `

should equal

`) : X = " ".concat(w, " ").concat(X)), T = i(this, x(y).call(this, "".concat($).concat(X)));
      }
      return Error.stackTraceLimit = Y, T.generatedMessage = !g, Object.defineProperty(n(T), "name", {
        value: "AssertionError [ERR_ASSERTION]",
        enumerable: !1,
        writable: !0,
        configurable: !0
      }), T.code = "ERR_ASSERTION", T.actual = h, T.expected = N, T.operator = w, Error.captureStackTrace && Error.captureStackTrace(n(T), A), T.stack, T.name = "AssertionError", i(T);
    }
    return f(y, [{
      key: "toString",
      value: function() {
        return "".concat(this.name, " [").concat(this.code, "]: ").concat(this.message);
      }
    }, {
      key: P.custom,
      value: function(T, g) {
        return P(this, e({}, g, {
          customInspect: !1,
          depth: 0
        }));
      }
    }]), y;
  }(s(Error));
  return N8 = d, N8;
}
var C8, Hu;
function yR() {
  if (Hu)
    return C8;
  Hu = 1;
  function e(a, r) {
    if (a == null)
      throw new TypeError("Cannot convert first argument to object");
    for (var f = Object(a), i = 1; i < arguments.length; i++) {
      var n = arguments[i];
      if (n != null)
        for (var o = Object.keys(Object(n)), s = 0, b = o.length; s < b; s++) {
          var l = o[s], v = Object.getOwnPropertyDescriptor(n, l);
          v !== void 0 && v.enumerable && (f[l] = n[l]);
        }
    }
    return f;
  }
  function t() {
    Object.assign || Object.defineProperty(Object, "assign", {
      enumerable: !1,
      configurable: !0,
      writable: !0,
      value: e
    });
  }
  return C8 = {
    assign: e,
    polyfill: t
  }, C8;
}
var D8, Uu;
function Sv() {
  if (Uu)
    return D8;
  Uu = 1;
  var e = Object.prototype.toString;
  return D8 = function(a) {
    var r = e.call(a), f = r === "[object Arguments]";
    return f || (f = r !== "[object Array]" && a !== null && typeof a == "object" && typeof a.length == "number" && a.length >= 0 && e.call(a.callee) === "[object Function]"), f;
  }, D8;
}
var L8, $u;
function gR() {
  if ($u)
    return L8;
  $u = 1;
  var e;
  if (!Object.keys) {
    var t = Object.prototype.hasOwnProperty, a = Object.prototype.toString, r = Sv(), f = Object.prototype.propertyIsEnumerable, i = !f.call({ toString: null }, "toString"), n = f.call(function() {
    }, "prototype"), o = [
      "toString",
      "toLocaleString",
      "valueOf",
      "hasOwnProperty",
      "isPrototypeOf",
      "propertyIsEnumerable",
      "constructor"
    ], s = function(m) {
      var x = m.constructor;
      return x && x.prototype === m;
    }, b = {
      $applicationCache: !0,
      $console: !0,
      $external: !0,
      $frame: !0,
      $frameElement: !0,
      $frames: !0,
      $innerHeight: !0,
      $innerWidth: !0,
      $onmozfullscreenchange: !0,
      $onmozfullscreenerror: !0,
      $outerHeight: !0,
      $outerWidth: !0,
      $pageXOffset: !0,
      $pageYOffset: !0,
      $parent: !0,
      $scrollLeft: !0,
      $scrollTop: !0,
      $scrollX: !0,
      $scrollY: !0,
      $self: !0,
      $webkitIndexedDB: !0,
      $webkitStorageInfo: !0,
      $window: !0
    }, l = function() {
      if (typeof window > "u")
        return !1;
      for (var m in window)
        try {
          if (!b["$" + m] && t.call(window, m) && window[m] !== null && typeof window[m] == "object")
            try {
              s(window[m]);
            } catch {
              return !0;
            }
        } catch {
          return !0;
        }
      return !1;
    }(), v = function(m) {
      if (typeof window > "u" || !l)
        return s(m);
      try {
        return s(m);
      } catch {
        return !1;
      }
    };
    e = function(x) {
      var I = x !== null && typeof x == "object", k = a.call(x) === "[object Function]", P = r(x), M = I && a.call(x) === "[object String]", R = [];
      if (!I && !k && !P)
        throw new TypeError("Object.keys called on a non-object");
      var F = n && k;
      if (M && x.length > 0 && !t.call(x, 0))
        for (var C = 0; C < x.length; ++C)
          R.push(String(C));
      if (P && x.length > 0)
        for (var L = 0; L < x.length; ++L)
          R.push(String(L));
      else
        for (var U in x)
          !(F && U === "prototype") && t.call(x, U) && R.push(String(U));
      if (i)
        for (var q = v(x), Z = 0; Z < o.length; ++Z)
          !(q && o[Z] === "constructor") && t.call(x, o[Z]) && R.push(o[Z]);
      return R;
    };
  }
  return L8 = e, L8;
}
var F8, ju;
function xR() {
  if (ju)
    return F8;
  ju = 1;
  var e = Array.prototype.slice, t = Sv(), a = Object.keys, r = a ? function(n) {
    return a(n);
  } : gR(), f = Object.keys;
  return r.shim = function() {
    if (Object.keys) {
      var n = function() {
        var o = Object.keys(arguments);
        return o && o.length === arguments.length;
      }(1, 2);
      n || (Object.keys = function(s) {
        return t(s) ? f(e.call(s)) : f(s);
      });
    } else
      Object.keys = r;
    return Object.keys || r;
  }, F8 = r, F8;
}
var H8, Vu;
function _R() {
  if (Vu)
    return H8;
  Vu = 1;
  var e = Wf(), t = e("%Object.defineProperty%", !0), a = function() {
    if (t)
      try {
        return t({}, "a", { value: 1 }), !0;
      } catch {
        return !1;
      }
    return !1;
  };
  return a.hasArrayLengthDefineBug = function() {
    if (!a())
      return null;
    try {
      return t([], "length", { value: 1 }).length !== 1;
    } catch {
      return !0;
    }
  }, H8 = a, H8;
}
var U8, zu;
function Mi() {
  if (zu)
    return U8;
  zu = 1;
  var e = xR(), t = typeof Symbol == "function" && typeof Symbol("foo") == "symbol", a = Object.prototype.toString, r = Array.prototype.concat, f = Object.defineProperty, i = function(l) {
    return typeof l == "function" && a.call(l) === "[object Function]";
  }, n = _R()(), o = f && n, s = function(l, v, m, x) {
    v in l && (!i(x) || !x()) || (o ? f(l, v, {
      configurable: !0,
      enumerable: !1,
      value: m,
      writable: !0
    }) : l[v] = m);
  }, b = function(l, v) {
    var m = arguments.length > 2 ? arguments[2] : {}, x = e(v);
    t && (x = r.call(x, Object.getOwnPropertySymbols(v)));
    for (var I = 0; I < x.length; I += 1)
      s(l, x[I], v[x[I]], m[x[I]]);
  };
  return b.supportsDescriptors = !!o, U8 = b, U8;
}
var $8, qu;
function Ev() {
  if (qu)
    return $8;
  qu = 1;
  var e = function(t) {
    return t !== t;
  };
  return $8 = function(a, r) {
    return a === 0 && r === 0 ? 1 / a === 1 / r : !!(a === r || e(a) && e(r));
  }, $8;
}
var j8, Ku;
function Tv() {
  if (Ku)
    return j8;
  Ku = 1;
  var e = Ev();
  return j8 = function() {
    return typeof Object.is == "function" ? Object.is : e;
  }, j8;
}
var V8, Gu;
function wR() {
  if (Gu)
    return V8;
  Gu = 1;
  var e = Tv(), t = Mi();
  return V8 = function() {
    var r = e();
    return t(Object, { is: r }, {
      is: function() {
        return Object.is !== r;
      }
    }), r;
  }, V8;
}
var z8, Wu;
function Av() {
  if (Wu)
    return z8;
  Wu = 1;
  var e = Mi(), t = js(), a = Ev(), r = Tv(), f = wR(), i = t(r(), Object);
  return e(i, {
    getPolyfill: r,
    implementation: a,
    shim: f
  }), z8 = i, z8;
}
var q8, Zu;
function Iv() {
  return Zu || (Zu = 1, q8 = function(t) {
    return t !== t;
  }), q8;
}
var K8, Yu;
function kv() {
  if (Yu)
    return K8;
  Yu = 1;
  var e = Iv();
  return K8 = function() {
    return Number.isNaN && Number.isNaN(NaN) && !Number.isNaN("a") ? Number.isNaN : e;
  }, K8;
}
var G8, Xu;
function SR() {
  if (Xu)
    return G8;
  Xu = 1;
  var e = Mi(), t = kv();
  return G8 = function() {
    var r = t();
    return e(Number, { isNaN: r }, {
      isNaN: function() {
        return Number.isNaN !== r;
      }
    }), r;
  }, G8;
}
var W8, Ju;
function ER() {
  if (Ju)
    return W8;
  Ju = 1;
  var e = js(), t = Mi(), a = Iv(), r = kv(), f = SR(), i = e(r(), Number);
  return t(i, {
    getPolyfill: r,
    implementation: a,
    shim: f
  }), W8 = i, W8;
}
var Z8, Qu;
function TR() {
  if (Qu)
    return Z8;
  Qu = 1;
  function e(a7, s7) {
    return r(a7) || a(a7, s7) || t();
  }
  function t() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance");
  }
  function a(a7, s7) {
    var u7 = [], m7 = !0, p7 = !1, l7 = void 0;
    try {
      for (var y7 = a7[Symbol.iterator](), x7; !(m7 = (x7 = y7.next()).done) && (u7.push(x7.value), !(s7 && u7.length === s7)); m7 = !0)
        ;
    } catch (_7) {
      p7 = !0, l7 = _7;
    } finally {
      try {
        !m7 && y7.return != null && y7.return();
      } finally {
        if (p7)
          throw l7;
      }
    }
    return u7;
  }
  function r(a7) {
    if (Array.isArray(a7))
      return a7;
  }
  function f(a7) {
    return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? f = function(u7) {
      return typeof u7;
    } : f = function(u7) {
      return u7 && typeof Symbol == "function" && u7.constructor === Symbol && u7 !== Symbol.prototype ? "symbol" : typeof u7;
    }, f(a7);
  }
  var i = /a/g.flags !== void 0, n = function(s7) {
    var u7 = [];
    return s7.forEach(function(m7) {
      return u7.push(m7);
    }), u7;
  }, o = function(s7) {
    var u7 = [];
    return s7.forEach(function(m7, p7) {
      return u7.push([p7, m7]);
    }), u7;
  }, s = Object.is ? Object.is : Av(), b = Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols : function() {
    return [];
  }, l = Number.isNaN ? Number.isNaN : ER();
  function v(a7) {
    return a7.call.bind(a7);
  }
  var m = v(Object.prototype.hasOwnProperty), x = v(Object.prototype.propertyIsEnumerable), I = v(Object.prototype.toString), k = R0.types, P = k.isAnyArrayBuffer, M = k.isArrayBufferView, R = k.isDate, F = k.isMap, C = k.isRegExp, L = k.isSet, U = k.isNativeError, q = k.isBoxedPrimitive, Z = k.isNumberObject, z = k.isStringObject, G = k.isBooleanObject, O = k.isBigIntObject, u = k.isSymbolObject, p = k.isFloat32Array, d = k.isFloat64Array;
  function c(a7) {
    if (a7.length === 0 || a7.length > 10)
      return !0;
    for (var s7 = 0; s7 < a7.length; s7++) {
      var u7 = a7.charCodeAt(s7);
      if (u7 < 48 || u7 > 57)
        return !0;
    }
    return a7.length === 10 && a7 >= Math.pow(2, 32);
  }
  function y(a7) {
    return Object.keys(a7).filter(c).concat(b(a7).filter(Object.prototype.propertyIsEnumerable.bind(a7)));
  }
  /*!
   * The buffer module from node.js, for the browser.
   *
   * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
   * @license  MIT
   */
  function S(a7, s7) {
    if (a7 === s7)
      return 0;
    for (var u7 = a7.length, m7 = s7.length, p7 = 0, l7 = Math.min(u7, m7); p7 < l7; ++p7)
      if (a7[p7] !== s7[p7]) {
        u7 = a7[p7], m7 = s7[p7];
        break;
      }
    return u7 < m7 ? -1 : m7 < u7 ? 1 : 0;
  }
  var T = !0, g = !1, w = 0, A = 1, h = 2, N = 3;
  function Y(a7, s7) {
    return i ? a7.source === s7.source && a7.flags === s7.flags : RegExp.prototype.toString.call(a7) === RegExp.prototype.toString.call(s7);
  }
  function t7(a7, s7) {
    if (a7.byteLength !== s7.byteLength)
      return !1;
    for (var u7 = 0; u7 < a7.byteLength; u7++)
      if (a7[u7] !== s7[u7])
        return !1;
    return !0;
  }
  function H(a7, s7) {
    return a7.byteLength !== s7.byteLength ? !1 : S(new Uint8Array(a7.buffer, a7.byteOffset, a7.byteLength), new Uint8Array(s7.buffer, s7.byteOffset, s7.byteLength)) === 0;
  }
  function $(a7, s7) {
    return a7.byteLength === s7.byteLength && S(new Uint8Array(a7), new Uint8Array(s7)) === 0;
  }
  function X(a7, s7) {
    return Z(a7) ? Z(s7) && s(Number.prototype.valueOf.call(a7), Number.prototype.valueOf.call(s7)) : z(a7) ? z(s7) && String.prototype.valueOf.call(a7) === String.prototype.valueOf.call(s7) : G(a7) ? G(s7) && Boolean.prototype.valueOf.call(a7) === Boolean.prototype.valueOf.call(s7) : O(a7) ? O(s7) && BigInt.prototype.valueOf.call(a7) === BigInt.prototype.valueOf.call(s7) : u(s7) && Symbol.prototype.valueOf.call(a7) === Symbol.prototype.valueOf.call(s7);
  }
  function i7(a7, s7, u7, m7) {
    if (a7 === s7)
      return a7 !== 0 ? !0 : u7 ? s(a7, s7) : !0;
    if (u7) {
      if (f(a7) !== "object")
        return typeof a7 == "number" && l(a7) && l(s7);
      if (f(s7) !== "object" || a7 === null || s7 === null || Object.getPrototypeOf(a7) !== Object.getPrototypeOf(s7))
        return !1;
    } else {
      if (a7 === null || f(a7) !== "object")
        return s7 === null || f(s7) !== "object" ? a7 == s7 : !1;
      if (s7 === null || f(s7) !== "object")
        return !1;
    }
    var p7 = I(a7), l7 = I(s7);
    if (p7 !== l7)
      return !1;
    if (Array.isArray(a7)) {
      if (a7.length !== s7.length)
        return !1;
      var y7 = y(a7), x7 = y(s7);
      return y7.length !== x7.length ? !1 : _(a7, s7, u7, m7, A, y7);
    }
    if (p7 === "[object Object]" && (!F(a7) && F(s7) || !L(a7) && L(s7)))
      return !1;
    if (R(a7)) {
      if (!R(s7) || Date.prototype.getTime.call(a7) !== Date.prototype.getTime.call(s7))
        return !1;
    } else if (C(a7)) {
      if (!C(s7) || !Y(a7, s7))
        return !1;
    } else if (U(a7) || a7 instanceof Error) {
      if (a7.message !== s7.message || a7.name !== s7.name)
        return !1;
    } else if (M(a7)) {
      if (!u7 && (p(a7) || d(a7))) {
        if (!t7(a7, s7))
          return !1;
      } else if (!H(a7, s7))
        return !1;
      var _7 = y(a7), F7 = y(s7);
      return _7.length !== F7.length ? !1 : _(a7, s7, u7, m7, w, _7);
    } else {
      if (L(a7))
        return !L(s7) || a7.size !== s7.size ? !1 : _(a7, s7, u7, m7, h);
      if (F(a7))
        return !F(s7) || a7.size !== s7.size ? !1 : _(a7, s7, u7, m7, N);
      if (P(a7)) {
        if (!$(a7, s7))
          return !1;
      } else if (q(a7) && !X(a7, s7))
        return !1;
    }
    return _(a7, s7, u7, m7, w);
  }
  function J(a7, s7) {
    return s7.filter(function(u7) {
      return x(a7, u7);
    });
  }
  function _(a7, s7, u7, m7, p7, l7) {
    if (arguments.length === 5) {
      l7 = Object.keys(a7);
      var y7 = Object.keys(s7);
      if (l7.length !== y7.length)
        return !1;
    }
    for (var x7 = 0; x7 < l7.length; x7++)
      if (!m(s7, l7[x7]))
        return !1;
    if (u7 && arguments.length === 5) {
      var _7 = b(a7);
      if (_7.length !== 0) {
        var F7 = 0;
        for (x7 = 0; x7 < _7.length; x7++) {
          var T7 = _7[x7];
          if (x(a7, T7)) {
            if (!x(s7, T7))
              return !1;
            l7.push(T7), F7++;
          } else if (x(s7, T7))
            return !1;
        }
        var S7 = b(s7);
        if (_7.length !== S7.length && J(s7, S7).length !== F7)
          return !1;
      } else {
        var Y7 = b(s7);
        if (Y7.length !== 0 && J(s7, Y7).length !== 0)
          return !1;
      }
    }
    if (l7.length === 0 && (p7 === w || p7 === A && a7.length === 0 || a7.size === 0))
      return !0;
    if (m7 === void 0)
      m7 = {
        val1: /* @__PURE__ */ new Map(),
        val2: /* @__PURE__ */ new Map(),
        position: 0
      };
    else {
      var k7 = m7.val1.get(a7);
      if (k7 !== void 0) {
        var E7 = m7.val2.get(s7);
        if (E7 !== void 0)
          return k7 === E7;
      }
      m7.position++;
    }
    m7.val1.set(a7, m7.position), m7.val2.set(s7, m7.position);
    var $7 = W(a7, s7, u7, l7, m7, p7);
    return m7.val1.delete(a7), m7.val2.delete(s7), $7;
  }
  function E(a7, s7, u7, m7) {
    for (var p7 = n(a7), l7 = 0; l7 < p7.length; l7++) {
      var y7 = p7[l7];
      if (i7(s7, y7, u7, m7))
        return a7.delete(y7), !0;
    }
    return !1;
  }
  function j(a7) {
    switch (f(a7)) {
      case "undefined":
        return null;
      case "object":
        return;
      case "symbol":
        return !1;
      case "string":
        a7 = +a7;
      case "number":
        if (l(a7))
          return !1;
    }
    return !0;
  }
  function V(a7, s7, u7) {
    var m7 = j(u7);
    return m7 ?? (s7.has(m7) && !a7.has(m7));
  }
  function n7(a7, s7, u7, m7, p7) {
    var l7 = j(u7);
    if (l7 != null)
      return l7;
    var y7 = s7.get(l7);
    return y7 === void 0 && !s7.has(l7) || !i7(m7, y7, !1, p7) ? !1 : !a7.has(l7) && i7(m7, y7, !1, p7);
  }
  function K(a7, s7, u7, m7) {
    for (var p7 = null, l7 = n(a7), y7 = 0; y7 < l7.length; y7++) {
      var x7 = l7[y7];
      if (f(x7) === "object" && x7 !== null)
        p7 === null && (p7 = /* @__PURE__ */ new Set()), p7.add(x7);
      else if (!s7.has(x7)) {
        if (u7 || !V(a7, s7, x7))
          return !1;
        p7 === null && (p7 = /* @__PURE__ */ new Set()), p7.add(x7);
      }
    }
    if (p7 !== null) {
      for (var _7 = n(s7), F7 = 0; F7 < _7.length; F7++) {
        var T7 = _7[F7];
        if (f(T7) === "object" && T7 !== null) {
          if (!E(p7, T7, u7, m7))
            return !1;
        } else if (!u7 && !a7.has(T7) && !E(p7, T7, u7, m7))
          return !1;
      }
      return p7.size === 0;
    }
    return !0;
  }
  function B(a7, s7, u7, m7, p7, l7) {
    for (var y7 = n(a7), x7 = 0; x7 < y7.length; x7++) {
      var _7 = y7[x7];
      if (i7(u7, _7, p7, l7) && i7(m7, s7.get(_7), p7, l7))
        return a7.delete(_7), !0;
    }
    return !1;
  }
  function D(a7, s7, u7, m7) {
    for (var p7 = null, l7 = o(a7), y7 = 0; y7 < l7.length; y7++) {
      var x7 = e(l7[y7], 2), _7 = x7[0], F7 = x7[1];
      if (f(_7) === "object" && _7 !== null)
        p7 === null && (p7 = /* @__PURE__ */ new Set()), p7.add(_7);
      else {
        var T7 = s7.get(_7);
        if (T7 === void 0 && !s7.has(_7) || !i7(F7, T7, u7, m7)) {
          if (u7 || !n7(a7, s7, _7, F7, m7))
            return !1;
          p7 === null && (p7 = /* @__PURE__ */ new Set()), p7.add(_7);
        }
      }
    }
    if (p7 !== null) {
      for (var S7 = o(s7), Y7 = 0; Y7 < S7.length; Y7++) {
        var k7 = e(S7[Y7], 2), _7 = k7[0], E7 = k7[1];
        if (f(_7) === "object" && _7 !== null) {
          if (!B(p7, a7, _7, E7, u7, m7))
            return !1;
        } else if (!u7 && (!a7.has(_7) || !i7(a7.get(_7), E7, !1, m7)) && !B(p7, a7, _7, E7, !1, m7))
          return !1;
      }
      return p7.size === 0;
    }
    return !0;
  }
  function W(a7, s7, u7, m7, p7, l7) {
    var y7 = 0;
    if (l7 === h) {
      if (!K(a7, s7, u7, p7))
        return !1;
    } else if (l7 === N) {
      if (!D(a7, s7, u7, p7))
        return !1;
    } else if (l7 === A)
      for (; y7 < a7.length; y7++)
        if (m(a7, y7)) {
          if (!m(s7, y7) || !i7(a7[y7], s7[y7], u7, p7))
            return !1;
        } else {
          if (m(s7, y7))
            return !1;
          for (var x7 = Object.keys(a7); y7 < x7.length; y7++) {
            var _7 = x7[y7];
            if (!m(s7, _7) || !i7(a7[_7], s7[_7], u7, p7))
              return !1;
          }
          return x7.length === Object.keys(s7).length;
        }
    for (y7 = 0; y7 < m7.length; y7++) {
      var F7 = m7[y7];
      if (!i7(a7[F7], s7[F7], u7, p7))
        return !1;
    }
    return !0;
  }
  function e7(a7, s7) {
    return i7(a7, s7, g);
  }
  function o7(a7, s7) {
    return i7(a7, s7, T);
  }
  return Z8 = {
    isDeepEqual: e7,
    isDeepStrictEqual: o7
  }, Z8;
}
var e4;
function yt() {
  if (e4)
    return R8.exports;
  e4 = 1;
  function e(A) {
    return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? e = function(N) {
      return typeof N;
    } : e = function(N) {
      return N && typeof Symbol == "function" && N.constructor === Symbol && N !== Symbol.prototype ? "symbol" : typeof N;
    }, e(A);
  }
  function t(A, h) {
    if (!(A instanceof h))
      throw new TypeError("Cannot call a class as a function");
  }
  var a = wv(), r = a.codes, f = r.ERR_AMBIGUOUS_ARGUMENT, i = r.ERR_INVALID_ARG_TYPE, n = r.ERR_INVALID_ARG_VALUE, o = r.ERR_INVALID_RETURN_VALUE, s = r.ERR_MISSING_ARGS, b = vR(), l = R0, v = l.inspect, m = R0.types, x = m.isPromise, I = m.isRegExp, k = Object.assign ? Object.assign : yR().assign, P = Object.is ? Object.is : Av(), M, R;
  function F() {
    var A = TR();
    M = A.isDeepEqual, R = A.isDeepStrictEqual;
  }
  var C = !1, L = R8.exports = G, U = {};
  function q(A) {
    throw A.message instanceof Error ? A.message : new b(A);
  }
  function Z(A, h, N, Y, t7) {
    var H = arguments.length, $;
    if (H === 0)
      $ = "Failed";
    else if (H === 1)
      N = A, A = void 0;
    else {
      if (C === !1) {
        C = !0;
        var X = g7.emitWarning ? g7.emitWarning : console.warn.bind(console);
        X("assert.fail() with more than one argument is deprecated. Please use assert.strictEqual() instead or only pass a message.", "DeprecationWarning", "DEP0094");
      }
      H === 2 && (Y = "!=");
    }
    if (N instanceof Error)
      throw N;
    var i7 = {
      actual: A,
      expected: h,
      operator: Y === void 0 ? "fail" : Y,
      stackStartFn: t7 || Z
    };
    N !== void 0 && (i7.message = N);
    var J = new b(i7);
    throw $ && (J.message = $, J.generatedMessage = !0), J;
  }
  L.fail = Z, L.AssertionError = b;
  function z(A, h, N, Y) {
    if (!N) {
      var t7 = !1;
      if (h === 0)
        t7 = !0, Y = "No value argument passed to `assert.ok()`";
      else if (Y instanceof Error)
        throw Y;
      var H = new b({
        actual: N,
        expected: !0,
        message: Y,
        operator: "==",
        stackStartFn: A
      });
      throw H.generatedMessage = t7, H;
    }
  }
  function G() {
    for (var A = arguments.length, h = new Array(A), N = 0; N < A; N++)
      h[N] = arguments[N];
    z.apply(void 0, [G, h.length].concat(h));
  }
  L.ok = G, L.equal = function A(h, N, Y) {
    if (arguments.length < 2)
      throw new s("actual", "expected");
    h != N && q({
      actual: h,
      expected: N,
      message: Y,
      operator: "==",
      stackStartFn: A
    });
  }, L.notEqual = function A(h, N, Y) {
    if (arguments.length < 2)
      throw new s("actual", "expected");
    h == N && q({
      actual: h,
      expected: N,
      message: Y,
      operator: "!=",
      stackStartFn: A
    });
  }, L.deepEqual = function A(h, N, Y) {
    if (arguments.length < 2)
      throw new s("actual", "expected");
    M === void 0 && F(), M(h, N) || q({
      actual: h,
      expected: N,
      message: Y,
      operator: "deepEqual",
      stackStartFn: A
    });
  }, L.notDeepEqual = function A(h, N, Y) {
    if (arguments.length < 2)
      throw new s("actual", "expected");
    M === void 0 && F(), M(h, N) && q({
      actual: h,
      expected: N,
      message: Y,
      operator: "notDeepEqual",
      stackStartFn: A
    });
  }, L.deepStrictEqual = function A(h, N, Y) {
    if (arguments.length < 2)
      throw new s("actual", "expected");
    M === void 0 && F(), R(h, N) || q({
      actual: h,
      expected: N,
      message: Y,
      operator: "deepStrictEqual",
      stackStartFn: A
    });
  }, L.notDeepStrictEqual = O;
  function O(A, h, N) {
    if (arguments.length < 2)
      throw new s("actual", "expected");
    M === void 0 && F(), R(A, h) && q({
      actual: A,
      expected: h,
      message: N,
      operator: "notDeepStrictEqual",
      stackStartFn: O
    });
  }
  L.strictEqual = function A(h, N, Y) {
    if (arguments.length < 2)
      throw new s("actual", "expected");
    P(h, N) || q({
      actual: h,
      expected: N,
      message: Y,
      operator: "strictEqual",
      stackStartFn: A
    });
  }, L.notStrictEqual = function A(h, N, Y) {
    if (arguments.length < 2)
      throw new s("actual", "expected");
    P(h, N) && q({
      actual: h,
      expected: N,
      message: Y,
      operator: "notStrictEqual",
      stackStartFn: A
    });
  };
  var u = function A(h, N, Y) {
    var t7 = this;
    t(this, A), N.forEach(function(H) {
      H in h && (Y !== void 0 && typeof Y[H] == "string" && I(h[H]) && h[H].test(Y[H]) ? t7[H] = Y[H] : t7[H] = h[H]);
    });
  };
  function p(A, h, N, Y, t7, H) {
    if (!(N in A) || !R(A[N], h[N])) {
      if (!Y) {
        var $ = new u(A, t7), X = new u(h, t7, A), i7 = new b({
          actual: $,
          expected: X,
          operator: "deepStrictEqual",
          stackStartFn: H
        });
        throw i7.actual = A, i7.expected = h, i7.operator = H.name, i7;
      }
      q({
        actual: A,
        expected: h,
        message: Y,
        operator: H.name,
        stackStartFn: H
      });
    }
  }
  function d(A, h, N, Y) {
    if (typeof h != "function") {
      if (I(h))
        return h.test(A);
      if (arguments.length === 2)
        throw new i("expected", ["Function", "RegExp"], h);
      if (e(A) !== "object" || A === null) {
        var t7 = new b({
          actual: A,
          expected: h,
          message: N,
          operator: "deepStrictEqual",
          stackStartFn: Y
        });
        throw t7.operator = Y.name, t7;
      }
      var H = Object.keys(h);
      if (h instanceof Error)
        H.push("name", "message");
      else if (H.length === 0)
        throw new n("error", h, "may not be an empty object");
      return M === void 0 && F(), H.forEach(function($) {
        typeof A[$] == "string" && I(h[$]) && h[$].test(A[$]) || p(A, h, $, N, H, Y);
      }), !0;
    }
    return h.prototype !== void 0 && A instanceof h ? !0 : Error.isPrototypeOf(h) ? !1 : h.call({}, A) === !0;
  }
  function c(A) {
    if (typeof A != "function")
      throw new i("fn", "Function", A);
    try {
      A();
    } catch (h) {
      return h;
    }
    return U;
  }
  function y(A) {
    return x(A) || A !== null && e(A) === "object" && typeof A.then == "function" && typeof A.catch == "function";
  }
  function S(A) {
    return Promise.resolve().then(function() {
      var h;
      if (typeof A == "function") {
        if (h = A(), !y(h))
          throw new o("instance of Promise", "promiseFn", h);
      } else if (y(A))
        h = A;
      else
        throw new i("promiseFn", ["Function", "Promise"], A);
      return Promise.resolve().then(function() {
        return h;
      }).then(function() {
        return U;
      }).catch(function(N) {
        return N;
      });
    });
  }
  function T(A, h, N, Y) {
    if (typeof N == "string") {
      if (arguments.length === 4)
        throw new i("error", ["Object", "Error", "Function", "RegExp"], N);
      if (e(h) === "object" && h !== null) {
        if (h.message === N)
          throw new f("error/message", 'The error message "'.concat(h.message, '" is identical to the message.'));
      } else if (h === N)
        throw new f("error/message", 'The error "'.concat(h, '" is identical to the message.'));
      Y = N, N = void 0;
    } else if (N != null && e(N) !== "object" && typeof N != "function")
      throw new i("error", ["Object", "Error", "Function", "RegExp"], N);
    if (h === U) {
      var t7 = "";
      N && N.name && (t7 += " (".concat(N.name, ")")), t7 += Y ? ": ".concat(Y) : ".";
      var H = A.name === "rejects" ? "rejection" : "exception";
      q({
        actual: void 0,
        expected: N,
        operator: A.name,
        message: "Missing expected ".concat(H).concat(t7),
        stackStartFn: A
      });
    }
    if (N && !d(h, N, Y, A))
      throw h;
  }
  function g(A, h, N, Y) {
    if (h !== U) {
      if (typeof N == "string" && (Y = N, N = void 0), !N || d(h, N)) {
        var t7 = Y ? ": ".concat(Y) : ".", H = A.name === "doesNotReject" ? "rejection" : "exception";
        q({
          actual: h,
          expected: N,
          operator: A.name,
          message: "Got unwanted ".concat(H).concat(t7, `
`) + 'Actual message: "'.concat(h && h.message, '"'),
          stackStartFn: A
        });
      }
      throw h;
    }
  }
  L.throws = function A(h) {
    for (var N = arguments.length, Y = new Array(N > 1 ? N - 1 : 0), t7 = 1; t7 < N; t7++)
      Y[t7 - 1] = arguments[t7];
    T.apply(void 0, [A, c(h)].concat(Y));
  }, L.rejects = function A(h) {
    for (var N = arguments.length, Y = new Array(N > 1 ? N - 1 : 0), t7 = 1; t7 < N; t7++)
      Y[t7 - 1] = arguments[t7];
    return S(h).then(function(H) {
      return T.apply(void 0, [A, H].concat(Y));
    });
  }, L.doesNotThrow = function A(h) {
    for (var N = arguments.length, Y = new Array(N > 1 ? N - 1 : 0), t7 = 1; t7 < N; t7++)
      Y[t7 - 1] = arguments[t7];
    g.apply(void 0, [A, c(h)].concat(Y));
  }, L.doesNotReject = function A(h) {
    for (var N = arguments.length, Y = new Array(N > 1 ? N - 1 : 0), t7 = 1; t7 < N; t7++)
      Y[t7 - 1] = arguments[t7];
    return S(h).then(function(H) {
      return g.apply(void 0, [A, H].concat(Y));
    });
  }, L.ifError = function A(h) {
    if (h != null) {
      var N = "ifError got unwanted exception: ";
      e(h) === "object" && typeof h.message == "string" ? h.message.length === 0 && h.constructor ? N += h.constructor.name : N += h.message : N += v(h);
      var Y = new b({
        actual: h,
        expected: null,
        operator: "ifError",
        message: N,
        stackStartFn: A
      }), t7 = h.stack;
      if (typeof t7 == "string") {
        var H = t7.split(`
`);
        H.shift();
        for (var $ = Y.stack.split(`
`), X = 0; X < H.length; X++) {
          var i7 = $.indexOf(H[X]);
          if (i7 !== -1) {
            $ = $.slice(0, i7);
            break;
          }
        }
        Y.stack = "".concat($.join(`
`), `
`).concat(H.join(`
`));
      }
      throw Y;
    }
  };
  function w() {
    for (var A = arguments.length, h = new Array(A), N = 0; N < A; N++)
      h[N] = arguments[N];
    z.apply(void 0, [w, h.length].concat(h));
  }
  return L.strict = k(w, L, {
    equal: L.strictEqual,
    deepEqual: L.deepStrictEqual,
    notEqual: L.notStrictEqual,
    notDeepEqual: L.notDeepStrictEqual
  }), L.strict.strict = L.strict, R8.exports;
}
function AR(e, t) {
  if (t > 255)
    throw new Error("number too large");
  const a = new Uint8Array(1);
  return a[0] = t, e.write(a);
}
var IR = AR;
function kR(e, t) {
  if (t > 65535)
    throw new Error("number too large");
  const a = new Uint8Array(2);
  return a[0] = t % 256, t = t >> 8, a[1] = t % 256, e.write(a);
}
var OR = kR;
function PR(e, t) {
  if (t > 4294967295)
    throw new Error("number too large");
  const a = new Uint8Array(4);
  return a[0] = t % 256, t = Math.floor(t / 256), a[1] = t % 256, t = t >> 8, a[2] = t % 256, t = t >> 8, a[3] = t, e.write(a);
}
var MR = PR;
function RR(e, t) {
  if (t < -2147483648 || t > 2147483647)
    throw new Error("Out of range. It must be >= -2147483648 and <= 2147483647.");
  const a = new Uint8Array(4);
  return a[0] = t % 256, t = Math.floor(t / 256), a[1] = t % 256, t = t >> 8, a[2] = t % 256, t = t >> 8, a[3] = t, e.write(a);
}
var BR = RR;
function NR(e, t) {
  if (t > Number.MAX_SAFE_INTEGER)
    throw new Error("varint too large");
  if (t <= 252)
    return e.write([t]);
  if (t <= 65535)
    return e.write([253, t % 256, Math.floor(t / 256)]);
  if (t <= 4294967295) {
    const r = new Uint8Array(5);
    return r[0] = 254, r[1] = t % 256, t = Math.floor(t / 256), r[2] = t % 256, t = Math.floor(t / 256), r[3] = t % 256, t = Math.floor(t / 256), r[4] = t, e.write(r);
  }
  const a = new Uint8Array(9);
  return a[0] = 255, a[1] = t % 256, t = Math.floor(t / 256), a[2] = t % 256, t = Math.floor(t / 256), a[3] = t % 256, t = Math.floor(t / 256), a[4] = t % 256, t = Math.floor(t / 256), a[5] = t % 256, t = Math.floor(t / 256), a[6] = t % 256, t = Math.floor(t / 256), a[7] = t % 256, t = Math.floor(t / 256), a[8] = t, e.write(a);
}
var CR = NR, DR = yt();
const B6 = IR, t4 = OR, a4 = MR, LR = BR, FR = CR;
let HR = class Dr {
  constructor(t) {
    t ? this.set(t) : (this.buffers = [], this.length = 0);
  }
  write(t) {
    return this.buffers.push(t), this.length += t.length, this;
  }
  set(t) {
    return this.buffers = t.buffers || t.bufs || this.buffers || [], this.length = this.buffers.reduce(function(a, r) {
      return a + r.length;
    }, 0), this;
  }
  concat() {
    return this.toBuffer();
  }
  toBuffer() {
    if (this.buffers.length === 1)
      return Q.Buffer.from(this.buffers[0]);
    const t = new Uint8Array(this.length);
    let a = 0;
    return this.buffers.forEach((r) => {
      t.set(r, a), a += r.length;
    }), Q.Buffer.from(t);
  }
  writeReverse(t) {
    return DR(Q.Buffer.isBuffer(t)), this.write(Q.Buffer.from(t).reverse()), this;
  }
  writeUInt16LE(t) {
    return t4(this, t), this;
  }
  writeUInt16BE(t) {
    var a = new Dr();
    return a.writeUInt16LE(t), this.writeReverse(a.toBuffer()), this;
  }
  writeUInt32LE(t) {
    return a4(this, t), this;
  }
  writeUInt32BE(t) {
    var a = new Dr();
    return a.writeUInt32LE(t), this.writeReverse(a.toBuffer()), this;
  }
  writeUInt8(t) {
    return B6(this, t), this;
  }
  writeUInt64LEBN(t) {
    var a = t.toBuffer({ size: 8 });
    return this.writeReverse(a), this;
  }
  writeUInt64BEBN(t) {
    var a = new Dr();
    return a.writeUInt64LEBN(t), this.writeReverse(a.toBuffer()), this;
  }
  writeVarintNum(t) {
    return FR(this, t), this;
  }
  writeInt32LE(t) {
    return LR(this, t), this;
  }
  static varintBufNum(t) {
    var a = new Dr();
    return a.writeVarintNum(t), a.toBuffer();
  }
  writeVarintBN(t) {
    var a = t.toNumber();
    if (a < 253)
      B6(this, a);
    else if (a < 65536)
      B6(this, 253), t4(this, a);
    else if (a < 4294967296)
      B6(this, 254), a4(this, a);
    else {
      var r = new Dr();
      r.writeUInt8(255), r.writeUInt64LEBN(t);
      var f = r.toBuffer();
      this.write(f);
    }
    return this;
  }
};
var z5 = HR, l1 = Ee, N9 = Ae, UR = N0;
function le(e) {
  if (!(this instanceof le))
    return new le(e);
  var t;
  if (l1.isNumber(e))
    t = e;
  else if (l1.isString(e))
    t = le.map[e];
  else
    throw new TypeError('Unrecognized num type: "' + typeof e + '" for Opcode');
  return UR.defineImmutable(this, {
    num: t
  }), this;
}
le.fromBuffer = function(e) {
  return N9.checkArgument(Q.Buffer.isBuffer(e)), new le(+("0x" + e.toString("hex")));
};
le.fromNumber = function(e) {
  return N9.checkArgument(l1.isNumber(e)), new le(e);
};
le.fromString = function(e) {
  N9.checkArgument(l1.isString(e));
  var t = le.map[e];
  if (typeof t > "u")
    throw new TypeError("Invalid opcodestr");
  return new le(t);
};
le.prototype.toHex = function() {
  return this.num.toString(16);
};
le.prototype.toBuffer = function() {
  return Q.Buffer.from(this.toHex(), "hex");
};
le.prototype.toNumber = function() {
  return this.num;
};
le.prototype.toString = function() {
  var e = le.reverseMap[this.num];
  if (typeof e > "u")
    throw new Error("Opcode does not have a string representation");
  return e;
};
le.prototype.toSafeString = function() {
  var e = le.reverseMap[this.num];
  return typeof e > "u" ? this.toHex() : e;
};
le.smallInt = function(e) {
  return N9.checkArgument(l1.isNumber(e), "Invalid Argument: n should be number"), N9.checkArgument(e >= 0 && e <= 16, "Invalid Argument: n must be between 0 and 16"), e === 0 ? le("OP_0") : new le(le.map.OP_1 + e - 1);
};
le.map = {
  // push value
  OP_FALSE: 0,
  OP_0: 0,
  OP_PUSHDATA1: 76,
  OP_PUSHDATA2: 77,
  OP_PUSHDATA4: 78,
  OP_1NEGATE: 79,
  OP_RESERVED: 80,
  OP_TRUE: 81,
  OP_1: 81,
  OP_2: 82,
  OP_3: 83,
  OP_4: 84,
  OP_5: 85,
  OP_6: 86,
  OP_7: 87,
  OP_8: 88,
  OP_9: 89,
  OP_10: 90,
  OP_11: 91,
  OP_12: 92,
  OP_13: 93,
  OP_14: 94,
  OP_15: 95,
  OP_16: 96,
  // control
  OP_NOP: 97,
  OP_VER: 98,
  OP_IF: 99,
  OP_NOTIF: 100,
  OP_VERIF: 101,
  OP_VERNOTIF: 102,
  OP_ELSE: 103,
  OP_ENDIF: 104,
  OP_VERIFY: 105,
  OP_RETURN: 106,
  // stack ops
  OP_TOALTSTACK: 107,
  OP_FROMALTSTACK: 108,
  OP_2DROP: 109,
  OP_2DUP: 110,
  OP_3DUP: 111,
  OP_2OVER: 112,
  OP_2ROT: 113,
  OP_2SWAP: 114,
  OP_IFDUP: 115,
  OP_DEPTH: 116,
  OP_DROP: 117,
  OP_DUP: 118,
  OP_NIP: 119,
  OP_OVER: 120,
  OP_PICK: 121,
  OP_ROLL: 122,
  OP_ROT: 123,
  OP_SWAP: 124,
  OP_TUCK: 125,
  // splice ops
  OP_CAT: 126,
  OP_SPLIT: 127,
  OP_NUM2BIN: 128,
  OP_BIN2NUM: 129,
  OP_SIZE: 130,
  // bit logic
  OP_INVERT: 131,
  OP_AND: 132,
  OP_OR: 133,
  OP_XOR: 134,
  OP_EQUAL: 135,
  OP_EQUALVERIFY: 136,
  OP_RESERVED1: 137,
  OP_RESERVED2: 138,
  // numeric
  OP_1ADD: 139,
  OP_1SUB: 140,
  OP_2MUL: 141,
  OP_2DIV: 142,
  OP_NEGATE: 143,
  OP_ABS: 144,
  OP_NOT: 145,
  OP_0NOTEQUAL: 146,
  OP_ADD: 147,
  OP_SUB: 148,
  OP_MUL: 149,
  OP_DIV: 150,
  OP_MOD: 151,
  OP_LSHIFT: 152,
  OP_RSHIFT: 153,
  OP_BOOLAND: 154,
  OP_BOOLOR: 155,
  OP_NUMEQUAL: 156,
  OP_NUMEQUALVERIFY: 157,
  OP_NUMNOTEQUAL: 158,
  OP_LESSTHAN: 159,
  OP_GREATERTHAN: 160,
  OP_LESSTHANOREQUAL: 161,
  OP_GREATERTHANOREQUAL: 162,
  OP_MIN: 163,
  OP_MAX: 164,
  OP_WITHIN: 165,
  // crypto
  OP_RIPEMD160: 166,
  OP_SHA1: 167,
  OP_SHA256: 168,
  OP_HASH160: 169,
  OP_HASH256: 170,
  OP_CODESEPARATOR: 171,
  OP_CHECKSIG: 172,
  OP_CHECKSIGVERIFY: 173,
  OP_CHECKMULTISIG: 174,
  OP_CHECKMULTISIGVERIFY: 175,
  OP_CHECKLOCKTIMEVERIFY: 177,
  OP_CHECKSEQUENCEVERIFY: 178,
  // expansion
  OP_NOP1: 176,
  OP_NOP2: 177,
  OP_NOP3: 178,
  OP_NOP4: 179,
  OP_NOP5: 180,
  OP_NOP6: 181,
  OP_NOP7: 182,
  OP_NOP8: 183,
  OP_NOP9: 184,
  OP_NOP10: 185,
  // template matching params
  OP_PUBKEYHASH: 253,
  OP_PUBKEY: 254,
  OP_INVALIDOPCODE: 255
};
le.reverseMap = [];
for (var r4 in le.map)
  le.reverseMap[le.map[r4]] = r4;
l1.extend(le, le.map);
le.isSmallIntOp = function(e) {
  return e instanceof le && (e = e.toNumber()), e === le.map.OP_0 || e >= le.map.OP_1 && e <= le.map.OP_16;
};
le.prototype.inspect = function() {
  return "<Opcode: " + this.toString() + ", hex: " + this.toHex() + ", decimal: " + this.num + ">";
};
var Ri = le;
function $R(e) {
  const t = [];
  let a = 0, r = 0;
  for (; a < e.length; ) {
    const f = e[a];
    a += 1, f === 0 ? (r = f, t.push({ opcodenum: f, len: r })) : f < 76 ? (r = f, t.push({ opcodenum: f, buf: e.slice(a, a + f), len: r }), a += f) : f === 76 ? (r = e[a], a += 1, t.push({ opcodenum: f, buf: e.slice(a, a + r), len: r }), a += r) : f === 77 ? (r = e[a] | e[a + 1] << 8, a += 2, t.push({ opcodenum: f, buf: e.slice(a, a + r), len: r }), a += r) : f === 78 ? (r = e[a] + e[a + 1] * 256 + e[a + 2] * 65536 + e[a + 3] * 16777216, a += 4, t.push({ opcodenum: f, buf: e.slice(a, a + r), len: r }), a += r) : t.push({ opcodenum: f });
  }
  return t;
}
var jR = $R;
const VR = /^(?:[a-fA-F0-9][a-fA-F0-9])*$/;
function zR(e) {
  return VR.test(e);
}
var qR = zR;
const KR = qR;
function GR(e) {
  if (typeof e != "string")
    throw new Error("not a string");
  if (e.startsWith("0x") && (e = e.slice(2)), e.length % 2 === 1 && (e = "0" + e), !KR(e))
    throw new Error("invalid hex string in script");
  if (typeof VARIANT > "u" || VARIANT === "browser") {
    const t = e.length / 2, a = new Uint8Array(t), r = (f) => f !== f;
    for (let f = 0; f < t; ++f) {
      const i = parseInt(e.substr(f * 2, 2), 16);
      if (r(i))
        throw new Error("bad hex char");
      a[f] = i;
    }
    return a;
  } else
    return Q.Buffer.from(e, "hex");
}
var WR = GR;
function ZR(e, t) {
  if (t.length === 0)
    e.write([0]);
  else if (t.length <= 75)
    e.write([t.length]), e.write(t);
  else if (t.length <= 255)
    e.write([76, t.length]), e.write(t);
  else if (t.length <= 65535)
    e.write([77, t.length % 256, t.length >> 8]), e.write(t);
  else if (t.length <= 4294967295) {
    const a = new Uint8Array(5);
    a[0] = 78;
    let r = t.length;
    a[1] = r % 256, r = Math.floor(r / 256), a[2] = r % 256, r = Math.floor(r / 256), a[3] = r % 256, r = Math.floor(r / 256), a[4] = r, e.write(a), e.write(t);
  } else
    throw new Error("data too large");
  return e;
}
var YR = ZR;
const XR = WR, N6 = Ri, JR = z5, QR = YR;
function eB(e) {
  const t = e.split(" "), a = new JR();
  return t.forEach((r) => {
    if (r in N6)
      a.write([N6[r]]);
    else if (r === "0")
      a.write([N6.OP_0]);
    else if (r === "-1")
      a.write([N6.OP_1NEGATE]);
    else {
      const f = XR(r);
      QR(a, f);
    }
  }), a.toBuffer();
}
var tB = eB;
let Wo = null;
if (typeof VARIANT > "u" || VARIANT === "browser") {
  const e = [
    "00",
    "01",
    "02",
    "03",
    "04",
    "05",
    "06",
    "07",
    "08",
    "09",
    "0a",
    "0b",
    "0c",
    "0d",
    "0e",
    "0f",
    "10",
    "11",
    "12",
    "13",
    "14",
    "15",
    "16",
    "17",
    "18",
    "19",
    "1a",
    "1b",
    "1c",
    "1d",
    "1e",
    "1f",
    "20",
    "21",
    "22",
    "23",
    "24",
    "25",
    "26",
    "27",
    "28",
    "29",
    "2a",
    "2b",
    "2c",
    "2d",
    "2e",
    "2f",
    "30",
    "31",
    "32",
    "33",
    "34",
    "35",
    "36",
    "37",
    "38",
    "39",
    "3a",
    "3b",
    "3c",
    "3d",
    "3e",
    "3f",
    "40",
    "41",
    "42",
    "43",
    "44",
    "45",
    "46",
    "47",
    "48",
    "49",
    "4a",
    "4b",
    "4c",
    "4d",
    "4e",
    "4f",
    "50",
    "51",
    "52",
    "53",
    "54",
    "55",
    "56",
    "57",
    "58",
    "59",
    "5a",
    "5b",
    "5c",
    "5d",
    "5e",
    "5f",
    "60",
    "61",
    "62",
    "63",
    "64",
    "65",
    "66",
    "67",
    "68",
    "69",
    "6a",
    "6b",
    "6c",
    "6d",
    "6e",
    "6f",
    "70",
    "71",
    "72",
    "73",
    "74",
    "75",
    "76",
    "77",
    "78",
    "79",
    "7a",
    "7b",
    "7c",
    "7d",
    "7e",
    "7f",
    "80",
    "81",
    "82",
    "83",
    "84",
    "85",
    "86",
    "87",
    "88",
    "89",
    "8a",
    "8b",
    "8c",
    "8d",
    "8e",
    "8f",
    "90",
    "91",
    "92",
    "93",
    "94",
    "95",
    "96",
    "97",
    "98",
    "99",
    "9a",
    "9b",
    "9c",
    "9d",
    "9e",
    "9f",
    "a0",
    "a1",
    "a2",
    "a3",
    "a4",
    "a5",
    "a6",
    "a7",
    "a8",
    "a9",
    "aa",
    "ab",
    "ac",
    "ad",
    "ae",
    "af",
    "b0",
    "b1",
    "b2",
    "b3",
    "b4",
    "b5",
    "b6",
    "b7",
    "b8",
    "b9",
    "ba",
    "bb",
    "bc",
    "bd",
    "be",
    "bf",
    "c0",
    "c1",
    "c2",
    "c3",
    "c4",
    "c5",
    "c6",
    "c7",
    "c8",
    "c9",
    "ca",
    "cb",
    "cc",
    "cd",
    "ce",
    "cf",
    "d0",
    "d1",
    "d2",
    "d3",
    "d4",
    "d5",
    "d6",
    "d7",
    "d8",
    "d9",
    "da",
    "db",
    "dc",
    "dd",
    "de",
    "df",
    "e0",
    "e1",
    "e2",
    "e3",
    "e4",
    "e5",
    "e6",
    "e7",
    "e8",
    "e9",
    "ea",
    "eb",
    "ec",
    "ed",
    "ee",
    "ef",
    "f0",
    "f1",
    "f2",
    "f3",
    "f4",
    "f5",
    "f6",
    "f7",
    "f8",
    "f9",
    "fa",
    "fb",
    "fc",
    "fd",
    "fe",
    "ff"
  ];
  Wo = function(t) {
    const a = t.length, r = new Array(a);
    for (let f = 0; f < a; ++f)
      r[f] = e[t[f]];
    return r.join("");
  };
} else
  Wo = function(e) {
    return e instanceof Q.Buffer ? e.toString("hex") : Q.Buffer.from(e).toString("hex");
  };
var aB = Wo, Y8, f4;
function Ov() {
  if (f4)
    return Y8;
  f4 = 1;
  var e = M1(), t = z5, a = C0, r = Ri, f = St(), i = V5, n = Er, o = Ae, s = Ee, b = L5, l = Q, v = N0;
  const m = jR, x = tB, I = aB, k = /* @__PURE__ */ new WeakMap();
  var P = function M(R) {
    if (!(this instanceof M))
      return new M(R);
    if (this.buffer = Q.Buffer.from([]), Q.Buffer.isBuffer(R))
      return M.fromBuffer(R);
    if (R instanceof e)
      return M.fromAddress(R);
    if (R instanceof M)
      return M.fromBuffer(R.toBuffer());
    if (s.isString(R))
      return M.fromString(R);
    if (s.isObject(R) && s.isArray(R.chunks))
      return M.fromChunks(R.chunks);
    if (s.isObject(R) && Q.Buffer.isBuffer(R.buffer))
      return M.fromBuffer(R.buffer);
  };
  return P.prototype.set = function(M) {
    if (o.checkArgument(s.isObject(M)), M.chunks && s.isArray(M.chunks)) {
      var R = P.fromChunks(M.chunks);
      return this.buffer = R.buffer, this;
    }
    return o.checkArgument(Q.Buffer.isBuffer(M.buffer)), this.buffer = M.buffer, this;
  }, P.fromBuffer = function(M) {
    o.checkArgument(Q.Buffer.isBuffer(M));
    var R = new P();
    return R.buffer = M, R;
  }, P.fromChunks = function(M) {
    var R = new P();
    const F = new t();
    for (let C = 0; C < M.length; C++) {
      const L = M[C];
      F.writeUInt8(L.opcodenum), L.buf && (L.opcodenum < r.OP_PUSHDATA1 ? F.write(L.buf) : L.opcodenum === r.OP_PUSHDATA1 ? (F.writeUInt8(L.len), F.write(L.buf)) : L.opcodenum === r.OP_PUSHDATA2 ? (F.writeUInt16LE(L.len), F.write(L.buf)) : L.opcodenum === r.OP_PUSHDATA4 && (F.writeUInt32LE(L.len), F.write(L.buf)));
    }
    return R.buffer = F.toBuffer(), R;
  }, P.prototype.toBuffer = function() {
    return this.buffer;
  }, P.fromASM = function(M) {
    return P.fromBuffer(x(M));
  }, P.fromHex = function(M) {
    return new P(l.Buffer.from(M, "hex"));
  }, P.fromString = function(M) {
    if (v.isHexa(M) || M.length === 0)
      return new P(l.Buffer.from(M, "hex"));
    for (var R = [], F = M.split(" "), C = 0; C < F.length; ) {
      var L = F[C], U = r(L), q = U.toNumber();
      if (s.isUndefined(q))
        if (q = parseInt(L), q > 0 && q < r.OP_PUSHDATA1) {
          var Z = Q.Buffer.from(F[C + 1].slice(2), "hex");
          if (Z.length !== q)
            throw new Error("Invalid script buf len: " + JSON.stringify(M));
          R.push({
            buf: Q.Buffer.from(F[C + 1].slice(2), "hex"),
            len: q,
            opcodenum: q
          }), C = C + 2;
        } else
          throw new Error("Invalid script: " + JSON.stringify(M));
      else if (q === r.OP_PUSHDATA1 || q === r.OP_PUSHDATA2 || q === r.OP_PUSHDATA4) {
        if (F[C + 2].slice(0, 2) !== "0x")
          throw new Error("Pushdata data must start with 0x");
        R.push({
          buf: Q.Buffer.from(F[C + 2].slice(2), "hex"),
          len: parseInt(F[C + 1]),
          opcodenum: q
        }), C = C + 3;
      } else
        R.push({
          opcodenum: q
        }), C = C + 1;
    }
    return P.fromChunks(R);
  }, P.prototype.slice = function(M, R) {
    return this.buffer.slice(M, R);
  }, Object.defineProperty(P.prototype, "chunks", {
    get() {
      if (k.has(this))
        return k.get(this);
      const M = m(this.buffer);
      return k.set(this, M), M;
    }
  }), Object.defineProperty(P.prototype, "length", {
    get() {
      return this.buffer.length;
    }
  }), P.prototype._chunkToString = function(M, R) {
    var F = M.opcodenum, C = R === "asm", L = "";
    if (M.buf)
      !C && (F === r.OP_PUSHDATA1 || F === r.OP_PUSHDATA2 || F === r.OP_PUSHDATA4) && (L = L + " " + r(F).toString()), M.len > 0 && (C ? L = L + " " + M.buf.toString("hex") : L = L + " " + M.len + " 0x" + M.buf.toString("hex"));
    else if (typeof r.reverseMap[F] < "u")
      C ? F === 0 ? L = L + " 0" : F === 79 ? L = L + " -1" : L = L + " " + r(F).toString() : L = L + " " + r(F).toString();
    else {
      var U = F.toString(16);
      U.length % 2 !== 0 && (U = "0" + U), C ? L = L + " " + U : L = L + " 0x" + U;
    }
    return L;
  }, P.prototype.toASM = function() {
    for (var M = "", R = this.chunks, F = 0; F < R.length; F++) {
      var C = this.chunks[F];
      M += this._chunkToString(C, "asm");
    }
    return M.substr(1);
  }, P.prototype.toString = function() {
    for (var M = "", R = 0; R < this.chunks.length; R++) {
      var F = this.chunks[R];
      M += this._chunkToString(F);
    }
    return M.substr(1);
  }, P.prototype.toHex = function() {
    return I(this.buffer);
  }, P.prototype.inspect = function() {
    return "<Script: " + this.toString() + ">";
  }, P.prototype.isPublicKeyHashOut = function() {
    return !!(this.chunks.length === 5 && this.chunks[0].opcodenum === r.OP_DUP && this.chunks[1].opcodenum === r.OP_HASH160 && this.chunks[2].buf && this.chunks[2].buf.length === 20 && this.chunks[3].opcodenum === r.OP_EQUALVERIFY && this.chunks[4].opcodenum === r.OP_CHECKSIG);
  }, P.prototype.isPublicKeyHashIn = function() {
    if (this.chunks.length === 2) {
      var M = this.chunks[0].buf, R = this.chunks[1].buf;
      if (M && M.length && M[0] === 48 && R && R.length) {
        var F = R[0];
        if ((F === 4 || F === 6 || F === 7) && R.length === 65)
          return !0;
        if ((F === 3 || F === 2) && R.length === 33)
          return !0;
      }
    }
    return !1;
  }, P.prototype.getPublicKey = function() {
    return o.checkState(this.isPublicKeyOut(), "Can't retrieve PublicKey from a non-PK output"), this.chunks[0].buf;
  }, P.prototype.getPublicKeyHash = function() {
    return o.checkState(this.isPublicKeyHashOut(), "Can't retrieve PublicKeyHash from a non-PKH output"), this.chunks[2].buf;
  }, P.prototype.isPublicKeyOut = function() {
    if (this.chunks.length === 2 && this.chunks[0].buf && this.chunks[0].buf.length && this.chunks[1].opcodenum === r.OP_CHECKSIG) {
      var M = this.chunks[0].buf, R = M[0], F = !1;
      if (((R === 4 || R === 6 || R === 7) && M.length === 65 || (R === 3 || R === 2) && M.length === 33) && (F = !0), F)
        return f.isValid(M);
    }
    return !1;
  }, P.prototype.isPublicKeyIn = function() {
    if (this.chunks.length === 1) {
      var M = this.chunks[0].buf;
      if (M && M.length && M[0] === 48)
        return !0;
    }
    return !1;
  }, P.prototype.isScriptHashOut = function() {
    var M = this.toBuffer();
    return M.length === 23 && M[0] === r.OP_HASH160 && M[1] === 20 && M[M.length - 1] === r.OP_EQUAL;
  }, P.prototype.isScriptHashIn = function() {
    if (this.chunks.length <= 1)
      return !1;
    var M = this.chunks[this.chunks.length - 1], R = M.buf;
    if (!R)
      return !1;
    var F;
    try {
      F = P.fromBuffer(R);
    } catch (L) {
      if (L instanceof b.Script.InvalidBuffer)
        return !1;
      throw L;
    }
    var C = F.classify();
    return C !== P.types.UNKNOWN;
  }, P.prototype.isMultisigOut = function() {
    return this.chunks.length > 3 && r.isSmallIntOp(this.chunks[0].opcodenum) && this.chunks.slice(1, this.chunks.length - 2).every(function(M) {
      return M.buf && Q.Buffer.isBuffer(M.buf);
    }) && r.isSmallIntOp(this.chunks[this.chunks.length - 2].opcodenum) && this.chunks[this.chunks.length - 1].opcodenum === r.OP_CHECKMULTISIG;
  }, P.prototype.isMultisigIn = function() {
    return this.chunks.length >= 2 && this.chunks[0].opcodenum === 0 && this.chunks.slice(1, this.chunks.length).every(function(M) {
      return M.buf && Q.Buffer.isBuffer(M.buf) && i.isTxDER(M.buf);
    });
  }, P.prototype.isDataOut = function() {
    var M = this.buffer.length >= 1 && this.buffer[0] === r.OP_RETURN;
    if (!M)
      return !1;
    var R = this.buffer.slice(1), F = new P({ buffer: R });
    return F.isPushOnly();
  }, P.prototype.isSafeDataOut = function() {
    if (this.buffer.length < 2 || this.buffer[0] !== r.OP_FALSE)
      return !1;
    var M = this.buffer.slice(1), R = new P({ buffer: M });
    return R.isDataOut();
  }, P.prototype.getData = function() {
    if (this.isSafeDataOut()) {
      var M = this.chunks.slice(2), R = M.map((F) => F.buf);
      return R;
    }
    if (this.isDataOut() || this.isScriptHashOut())
      return s.isUndefined(this.chunks[1]) ? Q.Buffer.alloc(0) : Q.Buffer.from(this.chunks[1].buf);
    if (this.isPublicKeyHashOut())
      return Q.Buffer.from(this.chunks[2].buf);
    throw new Error("Unrecognized script type to get data from");
  }, P.prototype.isPushOnly = function() {
    return s.every(this.chunks, function(M) {
      return M.opcodenum <= r.OP_16 || M.opcodenum === r.OP_PUSHDATA1 || M.opcodenum === r.OP_PUSHDATA2 || M.opcodenum === r.OP_PUSHDATA4;
    });
  }, P.types = {}, P.types.UNKNOWN = "Unknown", P.types.PUBKEY_OUT = "Pay to public key", P.types.PUBKEY_IN = "Spend from public key", P.types.PUBKEYHASH_OUT = "Pay to public key hash", P.types.PUBKEYHASH_IN = "Spend from public key hash", P.types.SCRIPTHASH_OUT = "Pay to script hash", P.types.SCRIPTHASH_IN = "Spend from script hash", P.types.MULTISIG_OUT = "Pay to multisig", P.types.MULTISIG_IN = "Spend from multisig", P.types.DATA_OUT = "Data push", P.types.SAFE_DATA_OUT = "Safe data push", P.OP_RETURN_STANDARD_SIZE = 220, P.prototype.classify = function() {
    if (this._isInput)
      return this.classifyInput();
    if (this._isOutput)
      return this.classifyOutput();
    var M = this.classifyOutput();
    return M !== P.types.UNKNOWN ? M : this.classifyInput();
  }, P.outputIdentifiers = {}, P.outputIdentifiers.PUBKEY_OUT = P.prototype.isPublicKeyOut, P.outputIdentifiers.PUBKEYHASH_OUT = P.prototype.isPublicKeyHashOut, P.outputIdentifiers.MULTISIG_OUT = P.prototype.isMultisigOut, P.outputIdentifiers.SCRIPTHASH_OUT = P.prototype.isScriptHashOut, P.outputIdentifiers.DATA_OUT = P.prototype.isDataOut, P.outputIdentifiers.SAFE_DATA_OUT = P.prototype.isSafeDataOut, P.prototype.classifyOutput = function() {
    for (var M in P.outputIdentifiers)
      if (P.outputIdentifiers[M].bind(this)())
        return P.types[M];
    return P.types.UNKNOWN;
  }, P.inputIdentifiers = {}, P.inputIdentifiers.PUBKEY_IN = P.prototype.isPublicKeyIn, P.inputIdentifiers.PUBKEYHASH_IN = P.prototype.isPublicKeyHashIn, P.inputIdentifiers.MULTISIG_IN = P.prototype.isMultisigIn, P.inputIdentifiers.SCRIPTHASH_IN = P.prototype.isScriptHashIn, P.prototype.classifyInput = function() {
    for (var M in P.inputIdentifiers)
      if (P.inputIdentifiers[M].bind(this)())
        return P.types[M];
    return P.types.UNKNOWN;
  }, P.prototype.isStandard = function() {
    return this.classify() !== P.types.UNKNOWN;
  }, P.prototype.prepend = function(M) {
    return this._addByType(M, !0), this;
  }, P.prototype.equals = function(M) {
    if (o.checkState(M instanceof P, "Must provide another script"), this.buffer.length !== M.buffer.length)
      return !1;
    var R;
    for (R = 0; R < this.buffer.length; R++)
      if (this.buffer[R] !== M.buffer[R])
        return !1;
    return !0;
  }, P.prototype.add = function(M) {
    return this._addByType(M, !1), this;
  }, P.prototype._addByType = function(M, R) {
    if (typeof M == "string")
      this._addOpcode(M, R);
    else if (typeof M == "number")
      this._addOpcode(M, R);
    else if (M instanceof r)
      this._addOpcode(M, R);
    else if (Q.Buffer.isBuffer(M))
      this._addBuffer(M, R);
    else if (M instanceof P)
      this._insertAtPosition(M.buffer, R);
    else if (typeof M == "object") {
      var F = P.fromChunks([M]);
      this._insertAtPosition(F.toBuffer(), R);
    } else
      throw new Error("Invalid script chunk");
  }, P.prototype._insertAtPosition = function(M, R) {
    var F = new t();
    R ? (F.write(M), F.write(this.buffer)) : (F.write(this.buffer), F.write(M)), this.buffer = F.toBuffer();
  }, P.prototype._addOpcode = function(M, R) {
    var F;
    if (typeof M == "number" ? F = M : M instanceof r ? F = M.toNumber() : F = r(M).toNumber(), F > 255)
      throw new b.Script.InvalidOpcode(F);
    return this._insertAtPosition(P.fromChunks([{
      opcodenum: F
    }]).toBuffer(), R), this;
  }, P.prototype._addBuffer = function(M, R) {
    var F = new t(), C, L = M.length;
    if (L === 0)
      C = 0, F.writeUInt8(C);
    else if (L > 0 && L < r.OP_PUSHDATA1)
      C = L, F.writeUInt8(C), F.write(M);
    else if (L < Math.pow(2, 8))
      C = r.OP_PUSHDATA1, F.writeUInt8(C), F.writeUInt8(L), F.write(M);
    else if (L < Math.pow(2, 16))
      C = r.OP_PUSHDATA2, F.writeUInt8(C), F.writeUInt16LE(L), F.write(M);
    else if (L < Math.pow(2, 32))
      C = r.OP_PUSHDATA4, F.writeUInt8(C), F.writeUInt32LE(L), F.write(M);
    else
      throw new Error("You can't push that much data");
    return this._insertAtPosition(F.toBuffer(), R), this;
  }, P.prototype.clone = function() {
    return P.fromBuffer(this.buffer.slice());
  }, P.prototype.removeCodeseparators = function() {
    for (var M = [], R = 0; R < this.chunks.length; R++)
      this.chunks[R].opcodenum !== r.OP_CODESEPARATOR && M.push(this.chunks[R]);
    return k.delete(this), this.buffer = P.fromChunks(M).toBuffer(), this;
  }, P.prototype.subScript = function(M) {
    for (var R = 0, F = 0; F < this.chunks.length; F++)
      if (this.chunks[F].opcodenum === r.OP_CODESEPARATOR) {
        if (R === M)
          return P.fromChunks(this.chunks.slice(F + 1));
        R++;
      }
    return this;
  }, P.buildMultisigOut = function(M, R, F) {
    o.checkArgument(
      R <= M.length,
      "Number of required signatures must be less than or equal to the number of public keys"
    ), F = F || {};
    var C = new P();
    C.add(r.smallInt(R)), M = s.map(M, f);
    var L = M;
    F.noSorting || (L = M.map((Z) => Z.toString("hex")).sort().map((Z) => new f(Z)));
    for (var U = 0; U < L.length; U++) {
      var q = L[U];
      C.add(q.toBuffer());
    }
    return C.add(r.smallInt(M.length)), C.add(r.OP_CHECKMULTISIG), C;
  }, P.buildMultisigIn = function(M, R, F, C) {
    o.checkArgument(s.isArray(M)), o.checkArgument(s.isNumber(R)), o.checkArgument(s.isArray(F));
    var L = new P();
    return L.add(r.OP_0), s.each(F, function(U) {
      o.checkArgument(Q.Buffer.isBuffer(U), "Signatures must be an array of Buffers"), L.add(U);
    }), L;
  }, P.buildP2SHMultisigIn = function(M, R, F, C) {
    o.checkArgument(s.isArray(M)), o.checkArgument(s.isNumber(R)), o.checkArgument(s.isArray(F)), C = C || {};
    var L = new P();
    return L.add(r.OP_0), s.each(F, function(U) {
      o.checkArgument(Q.Buffer.isBuffer(U), "Signatures must be an array of Buffers"), L.add(U);
    }), L.add((C.cachedMultisig || P.buildMultisigOut(M, R, C)).toBuffer()), L;
  }, P.buildPublicKeyHashOut = function(M) {
    o.checkArgument(!s.isUndefined(M)), o.checkArgument(M instanceof f || M instanceof e || s.isString(M)), M instanceof f ? M = M.toAddress() : s.isString(M) && (M = new e(M));
    var R = new P();
    return R.add(r.OP_DUP).add(r.OP_HASH160).add(M.hashBuffer).add(r.OP_EQUALVERIFY).add(r.OP_CHECKSIG), R._network = M.network, R;
  }, P.buildPublicKeyOut = function(M) {
    o.checkArgument(M instanceof f);
    var R = new P();
    return R.add(M.toBuffer()).add(r.OP_CHECKSIG), R;
  }, P.buildDataOut = function(M, R) {
    o.checkArgument(s.isUndefined(M) || s.isString(M) || s.isArray(M) || Q.Buffer.isBuffer(M));
    var F = M;
    s.isArray(F) || (F = [M]);
    var C = new P();
    C.add(r.OP_RETURN);
    for (let L of F)
      o.checkArgument(s.isUndefined(L) || s.isString(L) || Q.Buffer.isBuffer(L)), s.isString(L) && (L = Q.Buffer.from(L, R)), s.isUndefined(L) || C.add(L);
    return C;
  }, P.buildSafeDataOut = function(M, R) {
    var F = P.buildDataOut(M, R), C = new P();
    return C.add(r.OP_FALSE), C.add(F), C;
  }, P.buildScriptHashOut = function(M) {
    o.checkArgument(M instanceof P || M instanceof e && M.isPayToScriptHash());
    var R = new P();
    return R.add(r.OP_HASH160).add(M instanceof e ? M.hashBuffer : a.sha256ripemd160(M.toBuffer())).add(r.OP_EQUAL), R._network = M._network || M.network, R;
  }, P.buildPublicKeyIn = function(M, R) {
    o.checkArgument(M instanceof i || Q.Buffer.isBuffer(M)), o.checkArgument(s.isUndefined(R) || s.isNumber(R)), M instanceof i && (M = M.toBuffer());
    var F = new P();
    return F.add(Q.Buffer.concat([
      M,
      Q.Buffer.from([(R || i.SIGHASH_ALL) & 255])
    ])), F;
  }, P.buildPublicKeyHashIn = function(M, R, F) {
    o.checkArgument(R instanceof i || Q.Buffer.isBuffer(R)), o.checkArgument(s.isUndefined(F) || s.isNumber(F)), R instanceof i && (R = R.toBuffer());
    var C = new P().add(Q.Buffer.concat([
      R,
      Q.Buffer.from([(F || i.SIGHASH_ALL) & 255])
    ])).add(new f(M).toBuffer());
    return C;
  }, P.empty = function() {
    return new P();
  }, P.prototype.toScriptHashOut = function() {
    return P.buildScriptHashOut(this);
  }, P.fromAddress = function(M) {
    if (M = e(M), M.isPayToScriptHash())
      return P.buildScriptHashOut(M);
    if (M.isPayToPublicKeyHash())
      return P.buildPublicKeyHashOut(M);
    throw new b.Script.UnrecognizedAddress(M);
  }, P.prototype.getAddressInfo = function(M) {
    if (this._isInput)
      return this._getInputAddressInfo();
    if (this._isOutput)
      return this._getOutputAddressInfo();
    var R = this._getOutputAddressInfo();
    return R || this._getInputAddressInfo();
  }, P.prototype._getOutputAddressInfo = function() {
    var M = {};
    if (this.isScriptHashOut())
      M.hashBuffer = this.getData(), M.type = e.PayToScriptHash;
    else if (this.isPublicKeyHashOut())
      M.hashBuffer = this.getData(), M.type = e.PayToPublicKeyHash;
    else
      return !1;
    return M;
  }, P.prototype._getInputAddressInfo = function() {
    var M = {};
    if (this.isPublicKeyHashIn())
      M.hashBuffer = a.sha256ripemd160(this.chunks[1].buf), M.type = e.PayToPublicKeyHash;
    else if (this.isScriptHashIn())
      M.hashBuffer = a.sha256ripemd160(this.chunks[this.chunks.length - 1].buf), M.type = e.PayToScriptHash;
    else
      return !1;
    return M;
  }, P.prototype.toAddress = function(M) {
    var R = this.getAddressInfo();
    return R ? (R.network = n.get(M) || this._network || n.defaultNetwork, new e(R)) : !1;
  }, P.prototype.findAndDelete = function(M) {
    for (var R = M.toBuffer(), F = R.toString("hex"), C = this.chunks, L = 0; L < C.length; L++) {
      var U = P.fromChunks([C[L]]), q = U.toBuffer(), Z = q.toString("hex");
      F === Z && (C.splice(L, 1), this.buffer = P.fromChunks(C).toBuffer());
    }
    return this;
  }, P.prototype.checkMinimalPush = function(M) {
    var R = this.chunks[M], F = R.buf, C = R.opcodenum;
    return F ? F.length === 0 ? C === r.OP_0 : F.length === 1 && F[0] >= 1 && F[0] <= 16 ? C === r.OP_1 + (F[0] - 1) : F.length === 1 && F[0] === 129 ? C === r.OP_1NEGATE : F.length <= 75 ? C === F.length : F.length <= 255 ? C === r.OP_PUSHDATA1 : F.length <= 65535 ? C === r.OP_PUSHDATA2 : !0 : !0;
  }, P.prototype._decodeOP_N = function(M) {
    if (M === r.OP_0)
      return 0;
    if (M >= r.OP_1 && M <= r.OP_16)
      return M - (r.OP_1 - 1);
    throw new Error("Invalid opcode: " + JSON.stringify(M));
  }, P.prototype.getSignatureOperationsCount = function(M) {
    M = s.isUndefined(M) ? !0 : M;
    var R = this, F = 0, C = r.OP_INVALIDOPCODE;
    return s.each(R.chunks, function(U) {
      var q = U.opcodenum;
      q === r.OP_CHECKSIG || q === r.OP_CHECKSIGVERIFY ? F++ : (q === r.OP_CHECKMULTISIG || q === r.OP_CHECKMULTISIGVERIFY) && (M && C >= r.OP_1 && C <= r.OP_16 ? F += R._decodeOP_N(C) : F += 20), C = q;
    }), F;
  }, Y8 = P, Y8;
}
var c0 = function(t, a) {
  this.stack = t, this.varStack = a || [];
}, Pv = c0;
c0.prototype.pushVar = function(e) {
  this.varStack.push(e || "$tmp");
};
c0.prototype.popVar = function() {
  this.varStack.pop();
};
c0.prototype.push = function(e, t) {
  this.pushVar(t), this.stack.push(e), this.checkConsistency();
};
c0.prototype.pop = function() {
  this.popVar();
  let e = this.stack.pop();
  return this.checkConsistency(), e;
};
c0.prototype.updateTopVars = function(e) {
  if (e.length > this.varStack.length)
    throw new Error(`updateTopVars fail, stack: ${this.stack.length},  varStack: ${this.varStack.length}, vars:${e.length}`);
  e = e.reverse(), this.varStack.splice(this.varStack.length - e.length, e.length, ...e);
};
c0.prototype.stacktop = function(e) {
  return this.stack[this.stack.length + e];
};
c0.prototype.vartop = function(e) {
  return this.varStack[this.varStack.length + e];
};
c0.prototype.slice = function(e, t) {
  return this.stack.slice(e, t);
};
c0.prototype.splice = function(e, t, ...a) {
  return this.varStack.splice(e, t, ...a), this.stack.splice(e, t, ...a);
};
c0.prototype.write = function(e, t) {
  this.stack[this.stack.length + e] = t;
};
c0.prototype.copy = function() {
  return new c0(this.stack.slice() || [], this.varStack.slice() || []);
};
function rB(e) {
  return e.reduce(function(t, a) {
    return t += ("0" + (a & 255).toString(16)).slice(-2), t;
  }, "");
}
c0.prototype.printVarStack = function() {
  let e = this.varStack.map((t, a) => ({
    name: t,
    value: rB(this.rawstack[a].data)
  }));
  console.log(JSON.stringify(e, null, 4));
};
c0.prototype.checkConsistency = function() {
  if (this.stack.length !== this.varStack.length)
    throw this.printVarStack(), new Error(`checkConsistency fail, stack: ${this.stack.length}, varStack:${this.varStack.length}`);
};
c0.prototype.checkConsistencyWithVars = function(e) {
  if (this.stack.length < e.length)
    throw this.printVarStack(), new Error(`checkConsistencyWithVars fail, stack: ${this.stack.length}, varStack:${e.length}`);
};
Object.defineProperty(c0.prototype, "length", {
  get: function() {
    return this.stack.length;
  }
});
Object.defineProperty(c0.prototype, "rawstack", {
  get: function() {
    return this.stack;
  }
});
var ia = { exports: {} }, h9 = Ee, Mv = Ae, Gr = O0, ze = function e(t) {
  if (!(this instanceof e))
    return new e(t);
  if (!h9.isUndefined(t))
    if (Q.Buffer.isBuffer(t))
      this.set({
        buf: t
      });
    else if (h9.isString(t)) {
      var a = Q.Buffer.from(t, "hex");
      if (a.length * 2 !== t.length)
        throw new TypeError("Invalid hex string");
      this.set({
        buf: a
      });
    } else if (h9.isObject(t)) {
      var r = t;
      this.set(r);
    } else
      throw new TypeError("Unrecognized argument for BufferReader");
};
ze.prototype.set = function(e) {
  return this.buf = e.buf || this.buf || void 0, this.pos = e.pos || this.pos || 0, this;
};
ze.prototype.eof = function() {
  return this.pos >= this.buf.length;
};
ze.prototype.finished = ze.prototype.eof;
ze.prototype.read = function(e) {
  Mv.checkArgument(!h9.isUndefined(e), "Must specify a length");
  var t = this.buf.slice(this.pos, this.pos + e);
  return this.pos = this.pos + e, t;
};
ze.prototype.readAll = function() {
  var e = this.buf.slice(this.pos, this.buf.length);
  return this.pos = this.buf.length, e;
};
ze.prototype.readUInt8 = function() {
  var e = this.buf.readUInt8(this.pos);
  return this.pos = this.pos + 1, e;
};
ze.prototype.readUInt16BE = function() {
  var e = this.buf.readUInt16BE(this.pos);
  return this.pos = this.pos + 2, e;
};
ze.prototype.readUInt16LE = function() {
  var e = this.buf.readUInt16LE(this.pos);
  return this.pos = this.pos + 2, e;
};
ze.prototype.readUInt32BE = function() {
  var e = this.buf.readUInt32BE(this.pos);
  return this.pos = this.pos + 4, e;
};
ze.prototype.readUInt32LE = function() {
  var e = this.buf.readUInt32LE(this.pos);
  return this.pos = this.pos + 4, e;
};
ze.prototype.readInt32LE = function() {
  var e = this.buf.readInt32LE(this.pos);
  return this.pos = this.pos + 4, e;
};
ze.prototype.readUInt64BEBN = function() {
  var e = this.buf.slice(this.pos, this.pos + 8), t = Gr.fromBuffer(e);
  return this.pos = this.pos + 8, t;
};
ze.prototype.readUInt64LEBN = function() {
  var e = this.buf.readUInt32LE(this.pos), t = this.buf.readUInt32LE(this.pos + 4), a = t * 4294967296 + e, r;
  if (a <= 9007199254740991)
    r = new Gr(a);
  else {
    var f = Array.prototype.slice.call(this.buf, this.pos, this.pos + 8);
    r = new Gr(f, 10, "le");
  }
  return this.pos = this.pos + 8, r;
};
ze.prototype.readVarintNum = function() {
  var e = this.readUInt8();
  switch (e) {
    case 253:
      return this.readUInt16LE();
    case 254:
      return this.readUInt32LE();
    case 255:
      var t = this.readUInt64LEBN(), a = t.toNumber();
      if (a <= Math.pow(2, 53))
        return a;
      throw new Error("number too large to retain precision - use readVarintBN");
    default:
      return e;
  }
};
ze.prototype.readVarLengthBuffer = function() {
  var e = this.readVarintNum(), t = this.read(e);
  return Mv.checkState(t.length === e, "Invalid length while reading varlength buffer. Expected to read: " + e + " and read " + t.length), t;
};
ze.prototype.readVarintBuf = function() {
  var e = this.buf.readUInt8(this.pos);
  switch (e) {
    case 253:
      return this.read(1 + 2);
    case 254:
      return this.read(1 + 4);
    case 255:
      return this.read(1 + 8);
    default:
      return this.read(1);
  }
};
ze.prototype.readVarintBN = function() {
  var e = this.readUInt8();
  switch (e) {
    case 253:
      return new Gr(this.readUInt16LE());
    case 254:
      return new Gr(this.readUInt32LE());
    case 255:
      return this.readUInt64LEBN();
    default:
      return new Gr(e);
  }
};
ze.prototype.reverse = function() {
  for (var e = Q.Buffer.alloc(this.buf.length), t = 0; t < e.length; t++)
    e[t] = this.buf[this.buf.length - 1 - t];
  return this.buf = e, this;
};
ze.prototype.readReverse = function(e) {
  h9.isUndefined(e) && (e = this.buf.length);
  var t = this.buf.slice(this.pos, this.pos + e);
  return this.pos = this.pos + e, Q.Buffer.from(t).reverse();
};
var Tr = ze, Rv = z5, Bv = Tr, fB = O0, q5 = function e(t) {
  if (!(this instanceof e))
    return new e(t);
  if (Q.Buffer.isBuffer(t))
    this.buf = t;
  else if (typeof t == "number") {
    var a = t;
    this.fromNumber(a);
  } else if (t instanceof fB) {
    var r = t;
    this.fromBN(r);
  } else if (t) {
    var f = t;
    this.set(f);
  }
};
q5.prototype.set = function(e) {
  return this.buf = e.buf || this.buf, this;
};
q5.prototype.fromString = function(e) {
  return this.set({
    buf: Q.Buffer.from(e, "hex")
  }), this;
};
q5.prototype.toString = function() {
  return this.buf.toString("hex");
};
q5.prototype.fromBuffer = function(e) {
  return this.buf = e, this;
};
q5.prototype.fromBufferReader = function(e) {
  return this.buf = e.readVarintBuf(), this;
};
q5.prototype.fromBN = function(e) {
  var t = new Rv();
  return this.buf = t.writeVarintBN(e).toBuffer(), this;
};
q5.prototype.fromNumber = function(e) {
  var t = new Rv();
  return this.buf = t.writeVarintNum(e).toBuffer(), this;
};
q5.prototype.toBuffer = function() {
  return this.buf;
};
q5.prototype.toBN = function() {
  return Bv(this.buf).readVarintBN();
};
q5.prototype.toNumber = function() {
  return Bv(this.buf).readVarintNum();
};
var l6 = q5, X8, i4;
function Ba() {
  if (i4)
    return X8;
  i4 = 1;
  var e = Ee, t = O0, a = Q, r = N0, f = z5, i = l6, n = K5(), o = Ae, s = L5, b = 9007199254740991;
  function l(v) {
    if (!(this instanceof l))
      return new l(v);
    if (e.isObject(v))
      if (this.satoshis = v.satoshis, Q.Buffer.isBuffer(v.script))
        this.setScriptFromBuffer(v.script);
      else {
        var m;
        e.isString(v.script) && r.isHexa(v.script) ? m = a.Buffer.from(v.script, "hex") : m = v.script, this.setScript(m);
      }
    else
      throw new TypeError("Unrecognized argument for Output");
  }
  return Object.defineProperty(l.prototype, "script", {
    configurable: !1,
    enumerable: !0,
    get: function() {
      return this._script;
    }
  }), Object.defineProperty(l.prototype, "satoshis", {
    configurable: !1,
    enumerable: !0,
    get: function() {
      return this._satoshis;
    },
    set: function(v) {
      v instanceof t ? (this._satoshisBN = v, this._satoshis = v.toNumber()) : e.isString(v) ? (this._satoshis = parseInt(v), this._satoshisBN = t.fromNumber(this._satoshis)) : (o.checkArgument(
        r.isNaturalNumber(v),
        "Output satoshis is not a natural number"
      ), this._satoshisBN = t.fromNumber(v), this._satoshis = v), o.checkState(
        r.isNaturalNumber(this._satoshis),
        "Output satoshis is not a natural number"
      );
    }
  }), l.prototype.invalidSatoshis = function() {
    return this._satoshis > b ? "transaction txout satoshis greater than max safe integer" : this._satoshis !== this._satoshisBN.toNumber() ? "transaction txout satoshis has corrupted value" : this._satoshis < 0 ? "transaction txout negative" : !1;
  }, Object.defineProperty(l.prototype, "satoshisBN", {
    configurable: !1,
    enumerable: !0,
    get: function() {
      return this._satoshisBN;
    },
    set: function(v) {
      this._satoshisBN = v, this._satoshis = v.toNumber(), o.checkState(
        r.isNaturalNumber(this._satoshis),
        "Output satoshis is not a natural number"
      );
    }
  }), l.prototype.toObject = l.prototype.toJSON = function() {
    var m = {
      satoshis: this.satoshis
    };
    return m.script = this._script.toBuffer().toString("hex"), m;
  }, l.fromObject = function(v) {
    return new l(v);
  }, l.prototype.setScriptFromBuffer = function(v) {
    try {
      this._script = n.fromBuffer(v), this._script._isOutput = !0;
    } catch (m) {
      if (m instanceof s.Script.InvalidBuffer)
        this._script = null;
      else
        throw m;
    }
  }, l.prototype.setScript = function(v) {
    if (v instanceof n)
      this._script = v, this._script._isOutput = !0;
    else if (e.isString(v))
      this._script = n.fromString(v), this._script._isOutput = !0;
    else if (Q.Buffer.isBuffer(v))
      this.setScriptFromBuffer(v);
    else
      throw new TypeError("Invalid argument type: script");
    return this;
  }, l.prototype.inspect = function() {
    var v;
    return this.script && (v = this.script.inspect()), "<Output (" + this.satoshis + " sats) " + v + ">";
  }, l.fromBufferReader = function(v) {
    var m = {};
    m.satoshis = v.readUInt64LEBN();
    var x = v.readVarintNum();
    return x !== 0 ? m.script = v.read(x) : m.script = a.Buffer.from([]), new l(m);
  }, l.prototype.toBufferWriter = function(v) {
    v || (v = new f()), v.writeUInt64LEBN(this._satoshisBN);
    var m = this._script.toBuffer();
    return v.writeVarintNum(m.length), v.write(m), v;
  }, l.prototype.getSize = function() {
    var v = this.script.toBuffer().length, m = i(v).toBuffer().length;
    return 8 + m + v;
  }, X8 = l, X8;
}
var ja = { exports: {} }, J8, n4;
function p6() {
  if (n4)
    return J8;
  n4 = 1;
  var e = Ee, t = Ae, a = L5, r = z5, f = Q, i = N0, n = K5(), o = Na(), s = Ba(), b = 4294967295, l = b - 2, v = b, m = b - 1;
  function x(I) {
    if (!(this instanceof x))
      return new x(I);
    if (I)
      return this._fromObject(I);
  }
  return x.MAXINT = b, x.DEFAULT_SEQNUMBER = v, x.DEFAULT_LOCKTIME_SEQNUMBER = m, x.DEFAULT_RBF_SEQNUMBER = l, x.BASE_SIZE = 32 + 4 + 4, Object.defineProperty(x.prototype, "script", {
    configurable: !1,
    enumerable: !0,
    get: function() {
      return this.isNull() ? null : (this._script || (this._script = new n(this._scriptBuffer), this._script._isInput = !0), this._script);
    }
  }), x.fromObject = function(I) {
    t.checkArgument(e.isObject(I));
    var k = new x();
    return k._fromObject(I);
  }, x.prototype._fromObject = function(I) {
    var k;
    if (e.isString(I.prevTxId) && i.isHexa(I.prevTxId) ? k = f.Buffer.from(I.prevTxId, "hex") : k = I.prevTxId, this.output = I.output ? I.output instanceof s ? I.output : new s(I.output) : void 0, this.prevTxId = k || I.txidbuf, this.outputIndex = e.isUndefined(I.outputIndex) ? I.txoutnum : I.outputIndex, this.sequenceNumber = e.isUndefined(I.sequenceNumber) ? e.isUndefined(I.seqnum) ? v : I.seqnum : I.sequenceNumber, e.isUndefined(I.script) && e.isUndefined(I.scriptBuffer))
      throw new a.Transaction.Input.MissingScript();
    return this.setScript(I.scriptBuffer || I.script), this;
  }, x.prototype.toObject = x.prototype.toJSON = function() {
    var k = {
      prevTxId: this.prevTxId.toString("hex"),
      outputIndex: this.outputIndex,
      sequenceNumber: this.sequenceNumber,
      script: this._scriptBuffer.toString("hex")
    };
    return this.script && (k.scriptString = this.script.toString()), this.output && (k.output = this.output.toObject()), k;
  }, x.fromBufferReader = function(I) {
    var k = new x();
    return k.prevTxId = I.readReverse(32), k.outputIndex = I.readUInt32LE(), k._scriptBuffer = I.readVarLengthBuffer(), k.sequenceNumber = I.readUInt32LE(), k;
  }, x.prototype.toBufferWriter = function(I) {
    I || (I = new r()), I.writeReverse(this.prevTxId), I.writeUInt32LE(this.outputIndex);
    var k = this._scriptBuffer;
    return I.writeVarintNum(k.length), I.write(k), I.writeUInt32LE(this.sequenceNumber), I;
  }, x.prototype.setScript = function(I) {
    if (this._script = null, I instanceof n)
      this._script = I, this._script._isInput = !0, this._scriptBuffer = I.toBuffer();
    else if (I === null)
      this._script = n.empty(), this._script._isInput = !0, this._scriptBuffer = this._script.toBuffer();
    else if (i.isHexa(I))
      this._scriptBuffer = f.Buffer.from(I, "hex");
    else if (e.isString(I))
      this._script = new n(I), this._script._isInput = !0, this._scriptBuffer = this._script.toBuffer();
    else if (Q.Buffer.isBuffer(I))
      this._scriptBuffer = f.Buffer.from(I);
    else
      throw new TypeError("Invalid argument type: script");
    return this;
  }, x.prototype.getSignatures = function() {
    return [];
  }, x.prototype.isFullySigned = function() {
    throw new a.AbstractMethodInvoked("Input#isFullySigned");
  }, x.prototype.isFinal = function() {
    return this.sequenceNumber === x.MAXINT;
  }, x.prototype.addSignature = function() {
  }, x.prototype.clearSignatures = function() {
  }, x.prototype.isValidSignature = function(I, k) {
    return k.signature.nhashtype = k.sigtype, o.verify(
      I,
      k.signature,
      k.publicKey,
      k.inputIndex,
      this.output.script,
      this.output.satoshisBN
    );
  }, x.prototype.isNull = function() {
    return this.prevTxId.toString("hex") === "0000000000000000000000000000000000000000000000000000000000000000" && this.outputIndex === 4294967295;
  }, x.prototype._estimateSize = function() {
    return this.toBufferWriter().toBuffer().length;
  }, J8 = x, J8;
}
var Zo = { exports: {} };
typeof Object.create == "function" ? Zo.exports = function(t, a) {
  t.super_ = a, t.prototype = Object.create(a.prototype, {
    constructor: {
      value: t,
      enumerable: !1,
      writable: !0,
      configurable: !0
    }
  });
} : Zo.exports = function(t, a) {
  t.super_ = a;
  var r = function() {
  };
  r.prototype = a.prototype, t.prototype = new r(), t.prototype.constructor = t;
};
var h6 = Zo.exports, Q8, o4;
function b6() {
  if (o4)
    return Q8;
  o4 = 1;
  var e = Ee, t = Ae, a = h6, r = N0, f = St(), i = L5, n = V5;
  function o(s) {
    if (!(this instanceof o))
      return new o(s);
    if (s instanceof o)
      return s;
    if (e.isObject(s))
      return this._fromObject(s);
    throw new i.InvalidArgument("TransactionSignatures must be instantiated from an object");
  }
  return a(o, n), o.prototype._fromObject = function(s) {
    return this._checkObjectArgs(s), this.publicKey = new f(s.publicKey), this.prevTxId = Q.Buffer.isBuffer(s.prevTxId) ? s.prevTxId : Q.Buffer.from(s.prevTxId, "hex"), this.outputIndex = s.outputIndex, this.inputIndex = s.inputIndex, this.signature = s.signature instanceof n ? s.signature : Q.Buffer.isBuffer(s.signature) ? n.fromBuffer(s.signature) : n.fromString(s.signature), this.sigtype = s.sigtype, this;
  }, o.prototype._checkObjectArgs = function(s) {
    t.checkArgument(f(s.publicKey), "publicKey"), t.checkArgument(!e.isUndefined(s.inputIndex), "inputIndex"), t.checkArgument(!e.isUndefined(s.outputIndex), "outputIndex"), t.checkState(e.isNumber(s.inputIndex), "inputIndex must be a number"), t.checkState(e.isNumber(s.outputIndex), "outputIndex must be a number"), t.checkArgument(s.signature, "signature"), t.checkArgument(s.prevTxId, "prevTxId"), t.checkState(s.signature instanceof n || Q.Buffer.isBuffer(s.signature) || r.isHexa(s.signature), "signature must be a buffer or hexa value"), t.checkState(Q.Buffer.isBuffer(s.prevTxId) || r.isHexa(s.prevTxId), "prevTxId must be a buffer or hexa value"), t.checkArgument(s.sigtype, "sigtype"), t.checkState(e.isNumber(s.sigtype), "sigtype must be a number");
  }, o.prototype.toObject = o.prototype.toJSON = function() {
    return {
      publicKey: this.publicKey.toString(),
      prevTxId: this.prevTxId.toString("hex"),
      outputIndex: this.outputIndex,
      inputIndex: this.inputIndex,
      signature: this.signature.toString(),
      sigtype: this.sigtype
    };
  }, o.fromObject = function(s) {
    return t.checkArgument(s), new o(s);
  }, Q8 = o, Q8;
}
var e2, s4;
function iB() {
  if (s4)
    return e2;
  s4 = 1;
  var e = h6, t = Ae, a = p6(), r = Ba(), f = Na(), i = K5(), n = V5, o = b6();
  function s() {
    a.apply(this, arguments);
  }
  return e(s, a), s.prototype.getSignatures = function(b, l, v, m) {
    t.checkState(this.output instanceof r), m = m || n.SIGHASH_ALL | n.SIGHASH_FORKID;
    var x = l.toPublicKey();
    return x.toString() === this.output.script.getPublicKey().toString("hex") ? [new o({
      publicKey: x,
      prevTxId: this.prevTxId,
      outputIndex: this.outputIndex,
      inputIndex: v,
      signature: f.sign(b, l, m, v, this.output.script, this.output.satoshisBN),
      sigtype: m
    })] : [];
  }, s.prototype.addSignature = function(b, l) {
    return t.checkState(this.isValidSignature(b, l), "Signature is invalid"), this.setScript(i.buildPublicKeyIn(
      l.signature.toDER(),
      l.sigtype
    )), this;
  }, s.prototype.clearSignatures = function() {
    return this.setScript(i.empty()), this;
  }, s.prototype.isFullySigned = function() {
    return this.script.isPublicKeyIn();
  }, s.SCRIPT_MAX_SIZE = 74, s.prototype._estimateSize = function() {
    return a.BASE_SIZE + s.SCRIPT_MAX_SIZE;
  }, e2 = s, e2;
}
var t2, d4;
function nB() {
  if (d4)
    return t2;
  d4 = 1;
  var e = h6, t = Ae, a = C0, r = p6(), f = Ba(), i = Na(), n = K5(), o = V5, s = b6();
  function b() {
    r.apply(this, arguments);
  }
  return e(b, r), b.prototype.getSignatures = function(l, v, m, x, I) {
    return t.checkState(this.output instanceof f), I = I || a.sha256ripemd160(v.publicKey.toBuffer()), x = x || o.SIGHASH_ALL | o.SIGHASH_FORKID, I.equals(this.output.script.getPublicKeyHash()) ? [new s({
      publicKey: v.publicKey,
      prevTxId: this.prevTxId,
      outputIndex: this.outputIndex,
      inputIndex: m,
      signature: i.sign(l, v, x, m, this.output.script, this.output.satoshisBN),
      sigtype: x
    })] : [];
  }, b.prototype.addSignature = function(l, v) {
    return t.checkState(this.isValidSignature(l, v), "Signature is invalid"), this.setScript(n.buildPublicKeyHashIn(
      v.publicKey,
      v.signature.toDER(),
      v.sigtype
    )), this;
  }, b.prototype.clearSignatures = function() {
    return this.setScript(n.empty()), this;
  }, b.prototype.isFullySigned = function() {
    return this.script.isPublicKeyHashIn();
  }, b.SCRIPT_MAX_SIZE = 108, b.prototype._estimateSize = function() {
    return r.BASE_SIZE + b.SCRIPT_MAX_SIZE;
  }, t2 = b, t2;
}
var a2, c4;
function oB() {
  if (c4)
    return a2;
  c4 = 1;
  var e = Ee, t = h6, a = p6(), r = Ba(), f = Ae, i = K5(), n = V5, o = Na(), s = b6(), b = St(), l = l6;
  function v(m, x, I, k) {
    a.apply(this, arguments);
    var P = this;
    x = x || m.publicKeys, I = I || m.threshold, k = k || m.signatures, this.publicKeys = x.map((M) => M.toString("hex")).sort().map((M) => new b(M)), f.checkState(
      i.buildMultisigOut(this.publicKeys, I).equals(this.output.script),
      "Provided public keys don't match to the provided output script"
    ), this.publicKeyIndex = {}, e.each(this.publicKeys, function(M, R) {
      P.publicKeyIndex[M.toString()] = R;
    }), this.threshold = I, this.signatures = k ? this._deserializeSignatures(k) : new Array(this.publicKeys.length);
  }
  return t(v, a), v.prototype.toObject = function() {
    var m = a.prototype.toObject.apply(this, arguments);
    return m.threshold = this.threshold, m.publicKeys = e.map(this.publicKeys, function(x) {
      return x.toString();
    }), m.signatures = this._serializeSignatures(), m;
  }, v.prototype._deserializeSignatures = function(m) {
    return e.map(m, function(x) {
      if (x)
        return new s(x);
    });
  }, v.prototype._serializeSignatures = function() {
    return e.map(this.signatures, function(m) {
      if (m)
        return m.toObject();
    });
  }, v.prototype.getSignatures = function(m, x, I, k) {
    f.checkState(this.output instanceof r), k = k || n.SIGHASH_ALL | n.SIGHASH_FORKID;
    var P = this, M = [];
    return e.each(this.publicKeys, function(R) {
      R.toString() === x.publicKey.toString() && M.push(new s({
        publicKey: x.publicKey,
        prevTxId: P.prevTxId,
        outputIndex: P.outputIndex,
        inputIndex: I,
        signature: o.sign(m, x, k, I, P.output.script, P.output.satoshisBN),
        sigtype: k
      }));
    }), M;
  }, v.prototype.addSignature = function(m, x) {
    return f.checkState(!this.isFullySigned(), "All needed signatures have already been added"), f.checkArgument(
      !e.isUndefined(this.publicKeyIndex[x.publicKey.toString()]),
      "Signature has no matching public key"
    ), f.checkState(this.isValidSignature(m, x)), this.signatures[this.publicKeyIndex[x.publicKey.toString()]] = x, this._updateScript(), this;
  }, v.prototype._updateScript = function() {
    return this.setScript(i.buildMultisigIn(
      this.publicKeys,
      this.threshold,
      this._createSignatures()
    )), this;
  }, v.prototype._createSignatures = function() {
    return e.map(
      e.filter(this.signatures, function(m) {
        return !e.isUndefined(m);
      }),
      function(m) {
        return Q.Buffer.concat([
          m.signature.toDER(),
          Q.Buffer.from([m.sigtype & 255])
        ]);
      }
    );
  }, v.prototype.clearSignatures = function() {
    this.signatures = new Array(this.publicKeys.length), this._updateScript();
  }, v.prototype.isFullySigned = function() {
    return this.countSignatures() === this.threshold;
  }, v.prototype.countMissingSignatures = function() {
    return this.threshold - this.countSignatures();
  }, v.prototype.countSignatures = function() {
    return e.reduce(this.signatures, function(m, x) {
      return m + !!x;
    }, 0);
  }, v.prototype.publicKeysWithoutSignature = function() {
    var m = this;
    return e.filter(this.publicKeys, function(x) {
      return !m.signatures[m.publicKeyIndex[x.toString()]];
    });
  }, v.prototype.isValidSignature = function(m, x) {
    return x.signature.nhashtype = x.sigtype, o.verify(
      m,
      x.signature,
      x.publicKey,
      x.inputIndex,
      this.output.script,
      this.output.satoshisBN
    );
  }, v.normalizeSignatures = function(m, x, I, k, P) {
    return P.map(function(M) {
      var R = null;
      return k = k.filter(function(F) {
        if (R)
          return !0;
        var C = new s({
          signature: n.fromTxFormat(F),
          publicKey: M,
          prevTxId: x.prevTxId,
          outputIndex: x.outputIndex,
          inputIndex: I,
          sigtype: n.SIGHASH_ALL
        });
        C.signature.nhashtype = C.sigtype;
        var L = o.verify(
          m,
          C.signature,
          C.publicKey,
          C.inputIndex,
          x.output.script
        );
        return L ? (R = C, !1) : !0;
      }), R || null;
    });
  }, v.SIGNATURE_SIZE = 73, v.prototype._estimateSize = function() {
    var m = 1 + this.threshold * v.SIGNATURE_SIZE;
    return a.BASE_SIZE + l(m).toBuffer().length + m;
  }, a2 = v, a2;
}
var r2, u4;
function sB() {
  if (u4)
    return r2;
  u4 = 1;
  var e = Ee, t = h6, a = p6(), r = Ba(), f = Ae, i = K5(), n = V5, o = Na(), s = b6(), b = St(), l = l6;
  function v(m, x, I, k) {
    a.apply(this, arguments);
    var P = this;
    x = x || m.publicKeys, I = I || m.threshold, k = k || m.signatures, this.publicKeys = x.map((M) => M.toString("hex")).sort().map((M) => new b(M)), this.redeemScript = i.buildMultisigOut(this.publicKeys, I), f.checkState(
      i.buildScriptHashOut(this.redeemScript).equals(this.output.script),
      "Provided public keys don't hash to the provided output"
    ), this.publicKeyIndex = {}, e.each(this.publicKeys, function(M, R) {
      P.publicKeyIndex[M.toString()] = R;
    }), this.threshold = I, this.signatures = k ? this._deserializeSignatures(k) : new Array(this.publicKeys.length);
  }
  return t(v, a), v.prototype.toObject = function() {
    var m = a.prototype.toObject.apply(this, arguments);
    return m.threshold = this.threshold, m.publicKeys = e.map(this.publicKeys, function(x) {
      return x.toString();
    }), m.signatures = this._serializeSignatures(), m;
  }, v.prototype._deserializeSignatures = function(m) {
    return e.map(m, function(x) {
      if (x)
        return new s(x);
    });
  }, v.prototype._serializeSignatures = function() {
    return e.map(this.signatures, function(m) {
      if (m)
        return m.toObject();
    });
  }, v.prototype.getSignatures = function(m, x, I, k) {
    f.checkState(this.output instanceof r), k = k || n.SIGHASH_ALL | n.SIGHASH_FORKID;
    var P = this, M = [];
    return e.each(this.publicKeys, function(R) {
      R.toString() === x.publicKey.toString() && M.push(new s({
        publicKey: x.publicKey,
        prevTxId: P.prevTxId,
        outputIndex: P.outputIndex,
        inputIndex: I,
        signature: o.sign(m, x, k, I, P.redeemScript, P.output.satoshisBN),
        sigtype: k
      }));
    }), M;
  }, v.prototype.addSignature = function(m, x) {
    return f.checkState(!this.isFullySigned(), "All needed signatures have already been added"), f.checkArgument(
      !e.isUndefined(this.publicKeyIndex[x.publicKey.toString()]),
      "Signature has no matching public key"
    ), f.checkState(this.isValidSignature(m, x)), this.signatures[this.publicKeyIndex[x.publicKey.toString()]] = x, this._updateScript(), this;
  }, v.prototype._updateScript = function() {
    return this.setScript(i.buildP2SHMultisigIn(
      this.publicKeys,
      this.threshold,
      this._createSignatures(),
      { cachedMultisig: this.redeemScript }
    )), this;
  }, v.prototype._createSignatures = function() {
    return e.map(
      e.filter(this.signatures, function(m) {
        return !e.isUndefined(m);
      }),
      function(m) {
        return Q.Buffer.concat([
          m.signature.toDER(),
          Q.Buffer.from([m.sigtype & 255])
        ]);
      }
    );
  }, v.prototype.clearSignatures = function() {
    this.signatures = new Array(this.publicKeys.length), this._updateScript();
  }, v.prototype.isFullySigned = function() {
    return this.countSignatures() === this.threshold;
  }, v.prototype.countMissingSignatures = function() {
    return this.threshold - this.countSignatures();
  }, v.prototype.countSignatures = function() {
    return e.reduce(this.signatures, function(m, x) {
      return m + !!x;
    }, 0);
  }, v.prototype.publicKeysWithoutSignature = function() {
    var m = this;
    return e.filter(this.publicKeys, function(x) {
      return !m.signatures[m.publicKeyIndex[x.toString()]];
    });
  }, v.prototype.isValidSignature = function(m, x) {
    return x.signature.nhashtype = x.sigtype, o.verify(
      m,
      x.signature,
      x.publicKey,
      x.inputIndex,
      this.redeemScript,
      this.output.satoshisBN
    );
  }, v.SIGNATURE_SIZE = 73, v.PUBKEY_SIZE = 34, v.prototype._estimateSize = function() {
    var m = this.publicKeys.length * v.PUBKEY_SIZE, x = this.threshold * v.SIGNATURE_SIZE, I = 3 + m, k = I <= 75 ? 1 : I <= 255 ? 2 : 3, P = x + 1 + k + I;
    return a.BASE_SIZE + l(P).toBuffer().length + P;
  }, r2 = v, r2;
}
var l4;
function Id() {
  return l4 || (l4 = 1, ja.exports = p6(), ja.exports.PublicKey = iB(), ja.exports.PublicKeyHash = nB(), ja.exports.MultiSig = oB(), ja.exports.MultiSigScriptHash = sB()), ja.exports;
}
var f2, p4;
function Na() {
  if (p4)
    return f2;
  p4 = 1;
  var e = Q, t = V5, a = K5(), r = Ba(), f = Tr, i = z5, n = O0, o = C0, s = Lv(), b = Ae, l = Dv(), v = Ee, m = Q.Buffer.from("0000000000000000000000000000000000000000000000000000000000000001", "hex"), x = "ffffffffffffffff", I = l.SCRIPT_ENABLE_SIGHASH_FORKID, k = function(C, L, U, q, Z) {
    var z = C.inputs[U];
    b.checkArgument(
      Z instanceof n,
      "For ForkId=0 signatures, satoshis or complete input must be provided"
    );
    function G(w) {
      var A = new i();
      v.each(w.inputs, function(Y) {
        A.writeReverse(Y.prevTxId), A.writeUInt32LE(Y.outputIndex);
      });
      var h = A.toBuffer(), N = o.sha256sha256(h);
      return N;
    }
    function O(w) {
      var A = new i();
      v.each(w.inputs, function(Y) {
        A.writeUInt32LE(Y.sequenceNumber);
      });
      var h = A.toBuffer(), N = o.sha256sha256(h);
      return N;
    }
    function u(w, A) {
      var h = new i();
      v.isUndefined(A) ? v.each(w.outputs, function(t7) {
        t7.toBufferWriter(h);
      }) : w.outputs[A].toBufferWriter(h);
      var N = h.toBuffer(), Y = o.sha256sha256(N);
      return Y;
    }
    var p = Q.Buffer.alloc(32), d = Q.Buffer.alloc(32), c = Q.Buffer.alloc(32);
    L & t.SIGHASH_ANYONECANPAY || (p = G(C)), !(L & t.SIGHASH_ANYONECANPAY) && (L & 31) !== t.SIGHASH_SINGLE && (L & 31) !== t.SIGHASH_NONE && (d = O(C)), (L & 31) !== t.SIGHASH_SINGLE && (L & 31) !== t.SIGHASH_NONE ? c = u(C) : (L & 31) === t.SIGHASH_SINGLE && U < C.outputs.length && (c = u(C, U));
    var y = new i();
    y.writeUInt32LE(C.version), y.write(p), y.write(d), y.writeReverse(z.prevTxId), y.writeUInt32LE(z.outputIndex);
    var S = q.toBuffer();
    y.writeVarintNum(S.length), y.write(S), y.writeUInt64LEBN(Z);
    var T = z.sequenceNumber;
    y.writeUInt32LE(T), y.write(c), y.writeUInt32LE(C.nLockTime), y.writeUInt32LE(L >>> 0);
    var g = y.toBuffer();
    return g;
  }, P = function(L, U, q, Z, z, G) {
    var O = Cv(), u = Id();
    if (v.isUndefined(G) && (G = I), G & l.SCRIPT_ENABLE_REPLAY_PROTECTION) {
      var p = U >> 8, d = 16711680 | p ^ 57005;
      U = d << 8 | U & 255;
    }
    if (U & t.SIGHASH_FORKID && G & l.SCRIPT_ENABLE_SIGHASH_FORKID)
      return k(L, U, q, Z, z);
    var c = O.shallowCopy(L);
    Z = new a(Z), Z.removeCodeseparators();
    var y;
    for (y = 0; y < c.inputs.length; y++)
      c.inputs[y] = new u(c.inputs[y]).setScript(a.empty());
    if (c.inputs[q] = new u(c.inputs[q]).setScript(Z), (U & 31) === t.SIGHASH_NONE || (U & 31) === t.SIGHASH_SINGLE)
      for (y = 0; y < c.inputs.length; y++)
        y !== q && (c.inputs[y].sequenceNumber = 0);
    if ((U & 31) === t.SIGHASH_NONE)
      c.outputs = [];
    else if ((U & 31) === t.SIGHASH_SINGLE) {
      if (q >= c.outputs.length)
        return m;
      for (c.outputs.length = q + 1, y = 0; y < q; y++)
        c.outputs[y] = new r({
          satoshis: n.fromBuffer(e.Buffer.from(x, "hex")),
          script: a.empty()
        });
    }
    U & t.SIGHASH_ANYONECANPAY && (c.inputs = [c.inputs[q]]);
    var S = new i().write(c.toBuffer()).writeInt32LE(U).toBuffer();
    return S;
  }, M = function(L, U, q, Z, z, G) {
    var O = P(L, U, q, Z, z, G);
    if (O.compare(m) === 0)
      return O;
    var u = o.sha256sha256(O);
    return u = new f(u).readReverse(), u;
  };
  function R(C, L, U, q, Z, z, G) {
    var O = M(C, U, q, Z, z, G), u = s.sign(O, L, "little").set({
      nhashtype: U
    });
    return u;
  }
  function F(C, L, U, q, Z, z, G) {
    b.checkArgument(!v.isUndefined(C)), b.checkArgument(!v.isUndefined(L) && !v.isUndefined(L.nhashtype));
    var O = M(C, L.nhashtype, q, Z, z, G);
    return s.verify(O, L, U, "little");
  }
  return f2 = {
    sighashPreimage: P,
    sighash: M,
    sign: R,
    verify: F
  }, f2;
}
var i2, h4;
function Nv() {
  if (h4)
    return i2;
  h4 = 1;
  var e = Ee, t = Ae, a = N0, r = K5(), f = M1();
  function i(n) {
    if (!(this instanceof i))
      return new i(n);
    t.checkArgument(e.isObject(n), "Must provide an object from where to extract data");
    var o = n.address ? new f(n.address) : void 0, s = n.txid ? n.txid : n.txId;
    if (!s || !a.isHexaString(s) || s.length > 64)
      throw new Error("Invalid TXID in object", n);
    var b = e.isUndefined(n.vout) ? n.outputIndex : n.vout;
    if (!e.isNumber(b))
      throw new Error("Invalid outputIndex, received " + b);
    t.checkArgument(
      !e.isUndefined(n.scriptPubKey) || !e.isUndefined(n.script),
      "Must provide the scriptPubKey for that output!"
    );
    var l = new r(n.scriptPubKey || n.script);
    t.checkArgument(
      !e.isUndefined(n.amount) || !e.isUndefined(n.satoshis),
      "Must provide an amount for the output"
    );
    var v = e.isUndefined(n.amount) ? n.satoshis : Math.round(n.amount * 1e8);
    t.checkArgument(e.isNumber(v), "Amount must be a number"), a.defineImmutable(this, {
      address: o,
      txId: s,
      outputIndex: b,
      script: l,
      satoshis: v
    });
  }
  return i.prototype.inspect = function() {
    return "<UnspentOutput: " + this.txId + ":" + this.outputIndex + ", satoshis: " + this.satoshis + ", address: " + this.address + ">";
  }, i.prototype.toString = function() {
    return this.txId + ":" + this.outputIndex;
  }, i.fromObject = function(n) {
    return new i(n);
  }, i.prototype.toObject = i.prototype.toJSON = function() {
    return {
      address: this.address ? this.address.toString() : void 0,
      txid: this.txId,
      vout: this.outputIndex,
      scriptPubKey: this.script.toBuffer().toString("hex"),
      amount: Number.parseFloat((this.satoshis / 1e8).toFixed(8))
    };
  }, i2 = i, i2;
}
var n2, b4;
function Cv() {
  if (b4)
    return n2;
  b4 = 1;
  var e = Ee, t = Ae, a = Q, r = L5, f = N0, i = Tr, n = z5, o = l6, s = C0, b = V5, l = Na(), v = M1(), m = Nv(), x = Id(), I = x.PublicKeyHash, k = x.PublicKey, P = x.MultiSigScriptHash, M = x.MultiSig, R = Ba(), F = K5(), C = Ci(), L = O0;
  function U(u) {
    if (!(this instanceof U))
      return new U(u);
    if (this.inputs = [], this.outputs = [], this._inputAmount = void 0, this._outputAmount = void 0, this.unlockScriptCallbackMap = /* @__PURE__ */ new Map(), this.outputCallbackMap = /* @__PURE__ */ new Map(), this._privateKey = void 0, this._sigType = void 0, this.isSeal = !1, u) {
      if (u instanceof U)
        return U.shallowCopy(u);
      if (f.isHexa(u))
        this.fromString(u);
      else if (Q.Buffer.isBuffer(u))
        this.fromBuffer(u);
      else if (e.isObject(u))
        this.fromObject(u);
      else
        throw new r.InvalidArgument("Must provide an object or string to deserialize a transaction");
    } else
      this._newTransaction();
  }
  var q = 1, Z = 0, z = 1e6;
  U.DUST_AMOUNT = 546, U.FEE_SECURITY_MARGIN = 150, U.MAX_MONEY = 21e6 * 1e8, U.NLOCKTIME_BLOCKHEIGHT_LIMIT = 5e8, U.NLOCKTIME_MAX_VALUE = 4294967295, U.FEE_PER_KB = 500, U.CHANGE_OUTPUT_MAX_SIZE = 20 + 4 + 34 + 4, U.shallowCopy = function(u) {
    var p = new U(u.toBuffer());
    return p;
  };
  var G = {
    configurable: !1,
    enumerable: !0,
    get: function() {
      return this._hash = new i(this._getHash()).readReverse().toString("hex"), this._hash;
    }
  };
  Object.defineProperty(U.prototype, "hash", G), Object.defineProperty(U.prototype, "id", G);
  var O = {
    configurable: !1,
    enumerable: !0,
    get: function() {
      return this._getInputAmount();
    }
  };
  return Object.defineProperty(U.prototype, "inputAmount", O), O.get = function() {
    return this._getOutputAmount();
  }, Object.defineProperty(U.prototype, "outputAmount", O), U.prototype._getHash = function() {
    return this.version >= 10 ? s.sha256sha256(this.newTxHeader().toBuffer()) : s.sha256sha256(this.toBuffer());
  }, U.prototype.serialize = function(u) {
    return u === !0 || u && u.disableAll ? this.uncheckedSerialize() : this.checkedSerialize(u);
  }, U.prototype.uncheckedSerialize = U.prototype.toString = function() {
    return this.toBuffer().toString("hex");
  }, U.prototype.checkedSerialize = function(u) {
    var p = this.getSerializationError(u);
    if (p)
      throw p.message += " - For more information please see: https://bsv.io/api/lib/transaction#serialization-checks", p;
    return this.uncheckedSerialize();
  }, U.prototype.invalidSatoshis = function() {
    for (var u = !1, p = 0; p < this.outputs.length; p++)
      this.outputs[p].invalidSatoshis() && (u = !0);
    return u;
  }, U.prototype.getSerializationError = function(u) {
    if (u = u || {}, this.invalidSatoshis())
      return new r.Transaction.InvalidSatoshis();
    var p = this._getUnspentValue(), d;
    return p < 0 ? u.disableMoreOutputThanInput || (d = new r.Transaction.InvalidOutputAmountSum()) : d = this._hasFeeError(u, p), d || this._hasDustOutputs(u) || this._isMissingSignatures(u);
  }, U.prototype._hasFeeError = function(u, p) {
    if (!e.isUndefined(this._fee) && this._fee !== p)
      return new r.Transaction.FeeError.Different(
        "Unspent value is " + p + " but specified fee is " + this._fee
      );
    if (!u.disableLargeFees) {
      var d = Math.floor(U.FEE_SECURITY_MARGIN * this._estimateFee());
      if (p > d)
        return this._missingChange() ? new r.Transaction.ChangeAddressMissing("Fee is too large and no change address was provided") : new r.Transaction.FeeError.TooLarge("expected less than " + d + " but got " + p);
    }
  }, U.prototype._missingChange = function() {
    return !this._changeScript;
  }, U.prototype._hasDustOutputs = function(u) {
    if (!u.disableDustOutputs) {
      var p, d;
      for (p in this.outputs)
        if (d = this.outputs[p], d.satoshis < U.DUST_AMOUNT && !d.script.isDataOut() && !d.script.isSafeDataOut())
          return new r.Transaction.DustOutputs();
    }
  }, U.prototype._isMissingSignatures = function(u) {
    if (!u.disableIsFullySigned && !this.isFullySigned())
      return new r.Transaction.MissingSignatures();
  }, U.prototype.inspect = function() {
    return "<Transaction: " + this.uncheckedSerialize() + ">";
  }, U.prototype.toBuffer = function() {
    var u = new n();
    return this.toBufferWriter(u).toBuffer();
  }, U.prototype.toBufferWriter = function(u) {
    return u.writeInt32LE(this.version), u.writeVarintNum(this.inputs.length), e.each(this.inputs, function(p) {
      p.toBufferWriter(u);
    }), u.writeVarintNum(this.outputs.length), e.each(this.outputs, function(p) {
      p.toBufferWriter(u);
    }), u.writeUInt32LE(this.nLockTime), u;
  }, U.prototype.newTxHeader = function() {
    var u = new n();
    u.writeUInt32LE(this.version), u.writeUInt32LE(this.nLockTime), u.writeInt32LE(this.inputs.length), u.writeInt32LE(this.outputs.length);
    const p = new n(), d = new n();
    for (const y of this.inputs)
      p.writeReverse(y.prevTxId), p.writeUInt32LE(y.outputIndex), p.writeUInt32LE(y.sequenceNumber), d.write(s.sha256(y.script.toBuffer()));
    u.write(s.sha256(p.toBuffer())), u.write(s.sha256(d.toBuffer()));
    const c = new n();
    for (const y of this.outputs)
      c.writeUInt64LEBN(y.satoshisBN), c.write(s.sha256(y.script.toBuffer()));
    return u.write(s.sha256(c.toBuffer())), u;
  }, U.prototype.fromBuffer = function(u) {
    var p = new i(u);
    return this.fromBufferReader(p);
  }, U.prototype.fromBufferReader = function(u) {
    t.checkArgument(!u.finished(), "No transaction data received");
    var p, d, c;
    for (this.version = u.readInt32LE(), d = u.readVarintNum(), p = 0; p < d; p++) {
      var y = x.fromBufferReader(u);
      this.inputs.push(y);
    }
    for (c = u.readVarintNum(), p = 0; p < c; p++)
      this.outputs.push(R.fromBufferReader(u));
    return this.nLockTime = u.readUInt32LE(), this;
  }, U.prototype.toObject = U.prototype.toJSON = function() {
    var p = [];
    this.inputs.forEach(function(y) {
      p.push(y.toObject());
    });
    var d = [];
    this.outputs.forEach(function(y) {
      d.push(y.toObject());
    });
    var c = {
      hash: this.hash,
      version: this.version,
      inputs: p,
      outputs: d,
      nLockTime: this.nLockTime
    };
    return this._changeScript && (c.changeScript = this._changeScript.toString()), e.isUndefined(this._changeIndex) || (c.changeIndex = this._changeIndex), e.isUndefined(this._fee) || (c.fee = this._fee), c;
  }, U.prototype.fromObject = function(p) {
    t.checkArgument(e.isObject(p) || p instanceof U);
    var d = this, c;
    return p instanceof U ? c = c.toObject() : c = p, e.each(c.inputs, function(y) {
      if (!y.output || !y.output.script) {
        d.uncheckedAddInput(new x(y));
        return;
      }
      var S = new F(y.output.script), T;
      if (S.isPublicKeyHashOut())
        T = new x.PublicKeyHash(y);
      else if (S.isScriptHashOut() && y.publicKeys && y.threshold)
        T = new x.MultiSigScriptHash(y, y.publicKeys, y.threshold, y.signatures);
      else if (S.isPublicKeyOut())
        T = new x.PublicKey(y);
      else
        throw new r.Transaction.Input.UnsupportedScript(y.output.script);
      d.addInput(T);
    }), e.each(c.outputs, function(y) {
      d.addOutput(new R(y));
    }), c.changeIndex && (this._changeIndex = c.changeIndex), c.changeScript && (this._changeScript = new F(c.changeScript)), c.fee && (this._fee = c.fee), this.nLockTime = c.nLockTime, this.version = c.version, this._checkConsistency(p), this;
  }, U.prototype._checkConsistency = function(u) {
    e.isUndefined(this._changeIndex) || (t.checkState(this._changeScript, "Change script is expected."), t.checkState(this.outputs[this._changeIndex], "Change index points to undefined output."), t.checkState(
      this.outputs[this._changeIndex].script.toString() === this._changeScript.toString(),
      "Change output has an unexpected script."
    )), u && u.hash && t.checkState(u.hash === this.hash, "Hash in object does not match transaction hash.");
  }, U.prototype.lockUntilDate = function(u) {
    if (t.checkArgument(u), e.isNumber(u) && u < U.NLOCKTIME_BLOCKHEIGHT_LIMIT)
      throw new r.Transaction.LockTimeTooEarly();
    e.isDate(u) && (u = u.getTime() / 1e3);
    for (var p = 0; p < this.inputs.length; p++)
      this.inputs[p].sequenceNumber === x.DEFAULT_SEQNUMBER && (this.inputs[p].sequenceNumber = x.DEFAULT_LOCKTIME_SEQNUMBER);
    return this.nLockTime = u, this;
  }, U.prototype.lockUntilBlockHeight = function(u) {
    if (t.checkArgument(e.isNumber(u)), u >= U.NLOCKTIME_BLOCKHEIGHT_LIMIT)
      throw new r.Transaction.BlockHeightTooHigh();
    if (u < 0)
      throw new r.Transaction.NLockTimeOutOfRange();
    for (var p = 0; p < this.inputs.length; p++)
      this.inputs[p].sequenceNumber === x.DEFAULT_SEQNUMBER && (this.inputs[p].sequenceNumber = x.DEFAULT_LOCKTIME_SEQNUMBER);
    return this.nLockTime = u, this;
  }, U.prototype.getLockTime = function() {
    return this.nLockTime ? this.nLockTime < U.NLOCKTIME_BLOCKHEIGHT_LIMIT ? this.nLockTime : new Date(1e3 * this.nLockTime) : null;
  }, U.prototype.fromString = function(u) {
    this.fromBuffer(a.Buffer.from(u, "hex"));
  }, U.prototype._newTransaction = function() {
    this.version = q, this.nLockTime = Z;
  }, U.prototype.from = function(u, p, d) {
    if (e.isArray(u)) {
      var c = this;
      return e.each(u, function(S) {
        c.from(S, p, d);
      }), this;
    }
    var y = e.some(this.inputs, function(S) {
      return S.prevTxId.toString("hex") === u.txId && S.outputIndex === u.outputIndex;
    });
    return y ? this : (p && d ? this._fromMultisigUtxo(u, p, d) : this._fromNonP2SH(u), this);
  }, U.prototype._fromNonP2SH = function(u) {
    var p;
    u = new m(u), u.script.isPublicKeyHashOut() ? p = I : u.script.isPublicKeyOut() ? p = k : p = x, this.addInput(
      new p({
        output: new R({
          script: u.script,
          satoshis: u.satoshis
        }),
        prevTxId: u.txId,
        outputIndex: u.outputIndex,
        script: F.empty()
      })
    );
  }, U.prototype._fromMultisigUtxo = function(u, p, d) {
    t.checkArgument(
      d <= p.length,
      "Number of required signatures must be greater than the number of public keys"
    );
    var c;
    if (u = new m(u), u.script.isMultisigOut())
      c = M;
    else if (u.script.isScriptHashOut())
      c = P;
    else
      throw new Error("@TODO");
    this.addInput(
      new c(
        {
          output: new R({
            script: u.script,
            satoshis: u.satoshis
          }),
          prevTxId: u.txId,
          outputIndex: u.outputIndex,
          script: F.empty()
        },
        p,
        d
      )
    );
  }, U.prototype.addInput = function(u, p, d) {
    if (t.checkArgumentType(u, x, "input"), !u.output && (e.isUndefined(p) || e.isUndefined(d)))
      throw new r.Transaction.NeedMoreInfo("Need information about the UTXO script and satoshis");
    return !u.output && p && !e.isUndefined(d) && (p = p instanceof F ? p : new F(p), t.checkArgumentType(d, "number", "satoshis"), u.output = new R({
      script: p,
      satoshis: d
    })), this.uncheckedAddInput(u);
  }, U.prototype.uncheckedAddInput = function(u) {
    return t.checkArgumentType(u, x, "input"), this.inputs.push(u), this._inputAmount = void 0, this._updateChangeOutput(), this;
  }, U.prototype.hasAllUtxoInfo = function() {
    return e.every(
      this.inputs.map(function(u) {
        return !!u.output;
      })
    );
  }, U.prototype.fee = function(u) {
    return t.checkArgument(e.isNumber(u), "amount must be a number"), this._fee = u, this._updateChangeOutput(), this;
  }, U.prototype.feePerKb = function(u) {
    return t.checkArgument(e.isNumber(u), "amount must be a number"), this._feePerKb = u, this._updateChangeOutput(), this;
  }, U.prototype.change = function(u) {
    return t.checkArgument(u, "address is required"), this._changeScript = F.fromAddress(u), this._updateChangeOutput(), this;
  }, U.prototype.getChangeOutput = function() {
    return e.isUndefined(this._changeIndex) ? null : this.outputs[this._changeIndex];
  }, U.prototype.to = function(u, p) {
    if (e.isArray(u)) {
      var d = this;
      return e.each(u, function(c) {
        d.to(c.address, c.satoshis);
      }), this;
    }
    return t.checkArgument(f.isNaturalNumber(p), "Amount is expected to be a positive integer"), this.addOutput(
      new R({
        script: F(new v(u)),
        satoshis: p
      })
    ), this;
  }, U.prototype.addData = function(u) {
    return this.addOutput(
      new R({
        script: F.buildDataOut(u),
        satoshis: 0
      })
    ), this;
  }, U.prototype.addSafeData = function(u) {
    return this.addOutput(
      new R({
        script: F.buildSafeDataOut(u),
        satoshis: 0
      })
    ), this;
  }, U.prototype.addOutput = function(u) {
    return t.checkArgumentType(u, R, "output"), this._addOutput(u), this._updateChangeOutput(), this;
  }, U.prototype.clearOutputs = function() {
    return this.outputs = [], this._clearSignatures(), this._outputAmount = void 0, this._changeIndex = void 0, this._updateChangeOutput(), this;
  }, U.prototype._addOutput = function(u) {
    this.outputs.push(u), this._outputAmount = void 0;
  }, U.prototype._getOutputAmount = function() {
    if (e.isUndefined(this._outputAmount)) {
      var u = this;
      this._outputAmount = 0, e.each(this.outputs, function(p) {
        u._outputAmount += p.satoshis;
      });
    }
    return this._outputAmount;
  }, U.prototype._getInputAmount = function() {
    if (e.isUndefined(this._inputAmount)) {
      var u = this;
      this._inputAmount = 0, e.each(this.inputs, function(p) {
        if (e.isUndefined(p.output))
          throw new r.Transaction.Input.MissingPreviousOutput();
        u._inputAmount += p.output.satoshis;
      });
    }
    return this._inputAmount;
  }, U.prototype._updateChangeOutput = function() {
    if (this.isSeal)
      throw new r.Transaction.TransactionAlreadySealed();
    if (this._changeScript) {
      this._clearSignatures(), e.isUndefined(this._changeIndex) || this._removeOutput(this._changeIndex), this._changeIndex = this.outputs.length, this._addOutput(
        new R({
          script: this._changeScript,
          satoshis: 0
        })
      );
      var u = this._getUnspentValue(), p = this.getFee(), d = u - p;
      this._removeOutput(this._changeIndex), this._changeIndex = void 0, d >= U.DUST_AMOUNT && (this._changeIndex = this.outputs.length, this._addOutput(
        new R({
          script: this._changeScript,
          satoshis: d
        })
      ));
    }
  }, U.prototype.getFee = function() {
    return this.isCoinbase() ? 0 : e.isUndefined(this._fee) ? this._changeScript ? this._estimateFee() : this._getUnspentValue() : this._fee;
  }, U.prototype._estimateFee = function() {
    var u = this._estimateSize();
    return Math.ceil(u / 1e3 * (this._feePerKb || U.FEE_PER_KB));
  }, U.prototype._getUnspentValue = function() {
    return this._getInputAmount() - this._getOutputAmount();
  }, U.prototype._clearSignatures = function() {
    e.each(this.inputs, function(u) {
      u.clearSignatures();
    });
  }, U.prototype._estimateSize = function() {
    var u = 8;
    return u += o(this.inputs.length).toBuffer().length, u += o(this.outputs.length).toBuffer().length, e.each(this.inputs, function(p) {
      u += p._estimateSize();
    }), e.each(this.outputs, function(p) {
      u += p.getSize();
    }), u;
  }, U.prototype._removeOutput = function(u) {
    var p = this.outputs[u];
    this.outputs = e.without(this.outputs, p), this._outputAmount = void 0;
  }, U.prototype.removeOutput = function(u) {
    this._removeOutput(u), this._updateChangeOutput();
  }, U.prototype.sort = function() {
    return this.sortInputs(function(u) {
      var p = Array.prototype.concat.apply([], u);
      return p.sort(function(d, c) {
        return d.prevTxId.compare(c.prevTxId) || d.outputIndex - c.outputIndex;
      }), p;
    }), this.sortOutputs(function(u) {
      var p = Array.prototype.concat.apply([], u);
      return p.sort(function(d, c) {
        return d.satoshis - c.satoshis || d.script.toBuffer().compare(c.script.toBuffer());
      }), p;
    }), this;
  }, U.prototype.shuffleOutputs = function() {
    return this.sortOutputs(e.shuffle);
  }, U.prototype.sortOutputs = function(u) {
    var p = u(this.outputs);
    return this._newOutputOrder(p);
  }, U.prototype.sortInputs = function(u) {
    return this.inputs = u(this.inputs), this._clearSignatures(), this;
  }, U.prototype._newOutputOrder = function(u) {
    var p = this.outputs.length !== u.length || e.difference(this.outputs, u).length !== 0;
    if (p)
      throw new r.Transaction.InvalidSorting();
    if (!e.isUndefined(this._changeIndex)) {
      var d = this.outputs[this._changeIndex];
      this._changeIndex = u.indexOf(d);
    }
    return this.outputs = u, this;
  }, U.prototype.removeInput = function(u, p) {
    var d;
    if (!p && e.isNumber(u) ? d = u : d = e.findIndex(this.inputs, function(y) {
      return y.prevTxId.toString("hex") === u && y.outputIndex === p;
    }), d < 0 || d >= this.inputs.length)
      throw new r.Transaction.InvalidIndex(d, this.inputs.length);
    var c = this.inputs[d];
    this.inputs = e.without(this.inputs, c), this._inputAmount = void 0, this._updateChangeOutput();
  }, U.prototype.sign = function(u, p) {
    t.checkState(this.hasAllUtxoInfo(), "Not all utxo information is available to sign the transaction.");
    var d = this;
    return e.isArray(u) ? (e.each(u, function(c) {
      d.sign(c, p);
    }), this) : (e.each(this.getSignatures(u, p), function(c) {
      d.applySignature(c);
    }), this._privateKey = u, this._sigType = p, this);
  }, U.prototype.getSignatures = function(u, p) {
    u = new C(u), p = p || b.SIGHASH_ALL | b.SIGHASH_FORKID;
    var d = this, c = [], y = s.sha256ripemd160(u.publicKey.toBuffer());
    return e.each(this.inputs, function(T, g) {
      e.each(T.getSignatures(d, u, g, p, y), function(w) {
        c.push(w);
      });
    }), c;
  }, U.prototype.applySignature = function(u) {
    return this.inputs[u.inputIndex].addSignature(this, u), this;
  }, U.prototype.isFullySigned = function() {
    return e.each(this.inputs, function(u) {
      if (u.isFullySigned === x.prototype.isFullySigned)
        throw new r.Transaction.UnableToVerifySignature(
          "Unrecognized script kind, or not enough information to execute script.This usually happens when creating a transaction from a serialized transaction"
        );
    }), e.every(
      e.map(this.inputs, function(u) {
        return u.isFullySigned();
      })
    );
  }, U.prototype.isValidSignature = function(u) {
    var p = this;
    if (this.inputs[u.inputIndex].isValidSignature === x.prototype.isValidSignature)
      throw new r.Transaction.UnableToVerifySignature(
        "Unrecognized script kind, or not enough information to execute script.This usually happens when creating a transaction from a serialized transaction"
      );
    return this.inputs[u.inputIndex].isValidSignature(p, u);
  }, U.prototype.verifySignature = function(u, p, d, c, y, S) {
    return l.verify(this, u, p, d, c, y, S);
  }, U.prototype.verify = function() {
    if (this.inputs.length === 0)
      return "transaction txins empty";
    if (this.outputs.length === 0)
      return "transaction txouts empty";
    for (var u = new L(0), p = 0; p < this.outputs.length; p++) {
      var d = this.outputs[p];
      if (d.invalidSatoshis())
        return "transaction txout " + p + " satoshis is invalid";
      if (d._satoshisBN.gt(new L(U.MAX_MONEY, 10)))
        return "transaction txout " + p + " greater than MAX_MONEY";
      if (u = u.add(d._satoshisBN), u.gt(new L(U.MAX_MONEY)))
        return "transaction txout " + p + " total output greater than MAX_MONEY";
    }
    if (this.toBuffer().length > z)
      return "transaction over the maximum block size";
    var c = {};
    for (p = 0; p < this.inputs.length; p++) {
      var y = this.inputs[p], S = y.prevTxId + ":" + y.outputIndex;
      if (!e.isUndefined(c[S]))
        return "transaction input " + p + " duplicate input";
      c[S] = !0;
    }
    var T = this.isCoinbase();
    if (T) {
      var g = this.inputs[0]._scriptBuffer;
      if (g.length < 2 || g.length > 100)
        return "coinbase transaction script size invalid";
    } else
      for (p = 0; p < this.inputs.length; p++)
        if (this.inputs[p].isNull())
          return "transaction input " + p + " has null input";
    return !0;
  }, U.prototype.isCoinbase = function() {
    return this.inputs.length === 1 && this.inputs[0].isNull();
  }, U.prototype.setInputScript = function(u, p) {
    return p instanceof Function ? (this.unlockScriptCallbackMap.set(u, p), this.inputs[u].setScript(p(this, this.inputs[u].output))) : this.inputs[u].setScript(p), this._updateChangeOutput(), this;
  }, U.prototype.setInputSequence = function(u, p) {
    return this.inputs[u].sequenceNumber = p, this;
  }, U.prototype.setOutput = function(u, p) {
    return p instanceof Function ? (this.outputCallbackMap.set(u, p), this.outputs[u] = p(this)) : this.outputs[u] = p, this._updateChangeOutput(), this;
  }, U.prototype.seal = function() {
    const u = this;
    return this.outputCallbackMap.forEach(function(p, d) {
      u.outputs[d] = p(u);
    }), this.unlockScriptCallbackMap.forEach(function(p, d) {
      u.inputs[d].setScript(p(u, u.inputs[d].output));
    }), this._privateKey && this.sign(this._privateKey, this._sigType), this.isSeal = !0, this;
  }, U.prototype.setLockTime = function(u) {
    return this.nLockTime = u, this;
  }, U.prototype.getChangeAmount = function() {
    return e.isUndefined(this._changeIndex) ? 0 : this.outputs[this._changeIndex].satoshis;
  }, U.prototype.getEstimateFee = function() {
    return this._estimateFee();
  }, U.prototype.checkFeeRate = function(u) {
    const p = this._getUnspentValue();
    var d = this._estimateSize(), c = Math.ceil(d / 1e3 * (u || this._feePerKb || U.FEE_PER_KB));
    return p >= c;
  }, U.prototype.prevouts = function() {
    var u = new n();
    e.each(this.inputs, function(d) {
      u.writeReverse(d.prevTxId), u.writeUInt32LE(d.outputIndex);
    });
    var p = u.toBuffer();
    return p.toString("hex");
  }, n2 = U, n2;
}
var m4;
function Bi() {
  return m4 || (m4 = 1, ia.exports = Cv(), ia.exports.Input = Id(), ia.exports.Output = Ba(), ia.exports.UnspentOutput = Nv(), ia.exports.Signature = b6(), ia.exports.Sighash = Na()), ia.exports;
}
var o2, v4;
function Dv() {
  if (v4)
    return o2;
  v4 = 1;
  var e = Ee, t = Ov(), a = Ri, r = O0, f = C0, i = V5, n = St(), o = Pv, s = function l(v) {
    if (!(this instanceof l))
      return new l(v);
    v ? (this.initialize(), this.set(v)) : this.initialize();
  };
  s.prototype.verify = function(l, v, m, x, I, k, P) {
    var M = Bi();
    if (e.isUndefined(m) && (m = new M()), e.isUndefined(x) && (x = 0), e.isUndefined(I) && (I = 0), I & s.SCRIPT_ENABLE_SIGHASH_FORKID && (I |= s.SCRIPT_VERIFY_STRICTENC, !k))
      throw new Error("internal error - need satoshisBN to verify FORKID transactions");
    this.set({
      script: l,
      tx: m,
      nin: x,
      flags: I,
      satoshisBN: k,
      sighashScript: P
    });
    var R;
    if (I & s.SCRIPT_VERIFY_SIGPUSHONLY && !l.isPushOnly())
      return this.errstr = "SCRIPT_ERR_SIG_PUSHONLY", !1;
    if (!this.evaluate("scriptSig"))
      return !1;
    I & s.SCRIPT_VERIFY_P2SH && (R = this.stack.copy());
    var F = this.stack;
    if (this.initialize(), this.set({
      script: v,
      stack: F,
      tx: m,
      nin: x,
      flags: I,
      satoshisBN: k,
      sighashScript: P
    }), !this.evaluate("scriptPubkey"))
      return !1;
    if (this.stack.length === 0)
      return this.errstr = "SCRIPT_ERR_EVAL_FALSE_NO_RESULT", !1;
    var C = this.stack.stacktop(-1);
    if (!s.castToBool(C))
      return this.errstr = "SCRIPT_ERR_EVAL_FALSE_IN_STACK", !1;
    if (I & s.SCRIPT_VERIFY_P2SH && v.isScriptHashOut()) {
      if (!l.isPushOnly())
        return this.errstr = "SCRIPT_ERR_SIG_PUSHONLY", !1;
      if (R.length === 0)
        throw new Error("internal error - stack copy empty");
      var L = R.stacktop(-1), U = t.fromBuffer(L);
      if (R.pop(), this.initialize(), this.set({
        script: U,
        stack: R,
        tx: m,
        nin: x,
        flags: I,
        satoshisBN: k
      }), !this.evaluate())
        return !1;
      if (R.length === 0)
        return this.errstr = "SCRIPT_ERR_EVAL_FALSE_NO_P2SH_STACK", !1;
      if (!s.castToBool(R.stacktop(-1)))
        return this.errstr = "SCRIPT_ERR_EVAL_FALSE_IN_P2SH_STACK", !1;
    }
    return I & s.SCRIPT_VERIFY_CLEANSTACK && this.stack.length !== 1 ? (this.errstr = "SCRIPT_ERR_CLEANSTACK", !1) : !0;
  }, o2 = s, s.prototype.initialize = function(l) {
    this.stack = new o([]), this.altstack = new o([]), this.pc = 0, this.pbegincodehash = 0, this.nOpCount = 0, this.vfExec = [], this.errstr = "", this.flags = 0, this.nonTopLevelReturnAfterGenesis = !1, this.returned = !1;
  }, s.prototype.set = function(l) {
    this.script = l.script || this.script, this.tx = l.tx || this.tx, this.nin = typeof l.nin < "u" ? l.nin : this.nin, this.satoshisBN = l.satoshisBN || this.satoshisBN, this.stack = l.stack || this.stack, this.altstack = l.altstack || this.altstack, this.pc = typeof l.pc < "u" ? l.pc : this.pc, this.pbegincodehash = typeof l.pbegincodehash < "u" ? l.pbegincodehash : this.pbegincodehash, this.nOpCount = typeof l.nOpCount < "u" ? l.nOpCount : this.nOpCount, this.vfExec = l.vfExec || this.vfExec, this.errstr = l.errstr || this.errstr, this.flags = typeof l.flags < "u" ? l.flags : this.flags, this.sighashScript = l.sighashScript || this.sighashScript;
  }, s.prototype.subscript = function() {
    return this.sighashScript ? this.sighashScript.clone() : t.fromChunks(this.script.chunks.slice(this.pbegincodehash));
  }, s.getTrue = () => Q.Buffer.from([1]), s.getFalse = () => Q.Buffer.from([]), s.MAX_SCRIPT_ELEMENT_SIZE = 520, s.MAXIMUM_ELEMENT_SIZE = 4, s.LOCKTIME_THRESHOLD = 5e8, s.LOCKTIME_THRESHOLD_BN = new r(s.LOCKTIME_THRESHOLD), s.SCRIPT_VERIFY_NONE = 0, s.SCRIPT_VERIFY_P2SH = 1 << 0, s.SCRIPT_VERIFY_STRICTENC = 1 << 1, s.SCRIPT_VERIFY_DERSIG = 1 << 2, s.SCRIPT_VERIFY_LOW_S = 1 << 3, s.SCRIPT_VERIFY_NULLDUMMY = 1 << 4, s.SCRIPT_VERIFY_SIGPUSHONLY = 1 << 5, s.SCRIPT_VERIFY_MINIMALDATA = 1 << 6, s.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS = 1 << 7, s.SCRIPT_VERIFY_CLEANSTACK = 1 << 8, s.SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY = 1 << 9, s.SCRIPT_VERIFY_CHECKSEQUENCEVERIFY = 1 << 10, s.SCRIPT_VERIFY_MINIMALIF = 1 << 13, s.SCRIPT_VERIFY_NULLFAIL = 1 << 14, s.SCRIPT_VERIFY_COMPRESSED_PUBKEYTYPE = 1 << 15, s.SCRIPT_ENABLE_SIGHASH_FORKID = 1 << 16, s.SCRIPT_ENABLE_REPLAY_PROTECTION = 1 << 17, s.SCRIPT_ENABLE_MONOLITH_OPCODES = 1 << 18, s.SCRIPT_ENABLE_MAGNETIC_OPCODES = 1 << 19, s.SEQUENCE_LOCKTIME_DISABLE_FLAG = 1 << 31, s.SEQUENCE_LOCKTIME_TYPE_FLAG = 1 << 22, s.SEQUENCE_LOCKTIME_MASK = 65535, s.MAX_SCRIPT_SIZE = Number.MAX_SAFE_INTEGER, s.MAX_OPCODE_COUNT = Number.MAX_SAFE_INTEGER, s.castToBool = function(l) {
    for (var v = 0; v < l.length; v++)
      if (l[v] !== 0)
        return !(v === l.length - 1 && l[v] === 128);
    return !1;
  }, s.prototype.checkSignatureEncoding = function(l) {
    var v;
    if (l.length === 0)
      return !0;
    if (this.flags & (s.SCRIPT_VERIFY_DERSIG | s.SCRIPT_VERIFY_LOW_S | s.SCRIPT_VERIFY_STRICTENC) && !i.isTxDER(l))
      return this.errstr = "SCRIPT_ERR_SIG_DER_INVALID_FORMAT", !1;
    if (this.flags & s.SCRIPT_VERIFY_LOW_S) {
      if (v = i.fromTxFormat(l), !v.hasLowS())
        return this.errstr = "SCRIPT_ERR_SIG_DER_HIGH_S", !1;
    } else if (this.flags & s.SCRIPT_VERIFY_STRICTENC) {
      if (v = i.fromTxFormat(l), !v.hasDefinedHashtype())
        return this.errstr = "SCRIPT_ERR_SIG_HASHTYPE", !1;
      if (!(this.flags & s.SCRIPT_ENABLE_SIGHASH_FORKID) && v.nhashtype & i.SIGHASH_FORKID)
        return this.errstr = "SCRIPT_ERR_ILLEGAL_FORKID", !1;
      if (this.flags & s.SCRIPT_ENABLE_SIGHASH_FORKID && !(v.nhashtype & i.SIGHASH_FORKID))
        return this.errstr = "SCRIPT_ERR_MUST_USE_FORKID", !1;
    }
    return !0;
  }, s.prototype.checkPubkeyEncoding = function(l) {
    return this.flags & s.SCRIPT_VERIFY_STRICTENC && !n.isValid(l) ? (this.errstr = "SCRIPT_ERR_PUBKEYTYPE", !1) : !0;
  }, s._isMinimallyEncoded = function(l, v) {
    return v = v || s.MAXIMUM_ELEMENT_SIZE, !(l.length > v || l.length > 0 && !(l[l.length - 1] & 127) && (l.length <= 1 || !(l[l.length - 2] & 128)));
  }, s._minimallyEncode = function(l) {
    if (l.length === 0)
      return l;
    var v = l[l.length - 1];
    if (v & 127)
      return l;
    if (l.length === 1)
      return Q.Buffer.from("");
    if (l[l.length - 2] & 128)
      return l;
    for (var m = l.length - 1; m > 0; m--)
      if (l[m - 1] !== 0)
        return l[m - 1] & 128 ? l[m++] = v : l[m - 1] |= v, l.slice(0, m);
    return Q.Buffer.from("");
  }, s.prototype.evaluate = function(l) {
    if (this.script.toBuffer().length > s.MAX_SCRIPT_SIZE)
      return this.errstr = "SCRIPT_ERR_SCRIPT_SIZE", !1;
    try {
      for (; !this.returned && this.pc < this.script.chunks.length; ) {
        let m = { pc: this.pc, fExec: this.vfExec.indexOf(!1) === -1, opcode: a.fromNumber(this.script.chunks[this.pc].opcodenum) };
        var v = this.step(l);
        if (this._callbackStep(m), !v)
          return !1;
      }
      if (this.stack.length + this.altstack.length > 1e3)
        return this.errstr = "SCRIPT_ERR_STACK_SIZE", !1;
    } catch (m) {
      return this.errstr = "SCRIPT_ERR_UNKNOWN_ERROR: " + m, !1;
    }
    return this.vfExec.length > 0 ? (this.errstr = "SCRIPT_ERR_UNBALANCED_CONDITIONAL", !1) : !0;
  }, s.prototype._callbackStep = function(l) {
    if (typeof this.stepListener == "function")
      try {
        this.stepListener(l);
      } catch (v) {
        console.log(`Error in Step callback:${v}`);
      }
  }, s.prototype._callbackStack = function(l, v, m) {
    if (typeof this.stackListener == "function")
      try {
        this.stackListener(l, v, m);
      } catch (I) {
        var x = this.script.chunks[v];
        console.error(`Error: ${I} in _updateStack pc: ${v}, opcode ${a.fromNumber(x.opcodenum).toSafeString()}`);
      }
  }, s.prototype.checkLockTime = function(l) {
    return !(!(this.tx.nLockTime < s.LOCKTIME_THRESHOLD && l.lt(s.LOCKTIME_THRESHOLD_BN) || this.tx.nLockTime >= s.LOCKTIME_THRESHOLD && l.gte(s.LOCKTIME_THRESHOLD_BN)) || l.gt(new r(this.tx.nLockTime)) || this.tx.inputs[this.nin].isFinal());
  }, s.prototype.checkSequence = function(l) {
    var v = this.tx.inputs[this.nin].sequenceNumber;
    if (this.tx.version < 2 || v & s.SEQUENCE_LOCKTIME_DISABLE_FLAG)
      return !1;
    var m = s.SEQUENCE_LOCKTIME_TYPE_FLAG | s.SEQUENCE_LOCKTIME_MASK, x = new r(v & m), I = l.and(m), k = new r(s.SEQUENCE_LOCKTIME_TYPE_FLAG);
    return !(!(x.lt(k) && I.lt(k) || x.gte(k) && I.gte(k)) || I.gt(x));
  };
  function b(l, v) {
    let m = l;
    for (; m.length < v; )
      m = Q.Buffer.concat([Q.Buffer.from([0]), m]);
    return m;
  }
  return s.prototype.step = function(l) {
    var v = this;
    function m(p7) {
      return v.stack.stacktop(p7);
    }
    function x(p7) {
      return v.stack.vartop(p7);
    }
    function I(p7) {
      switch (p7) {
        case a.OP_2MUL:
        case a.OP_2DIV:
          return !0;
        case a.OP_INVERT:
        case a.OP_MUL:
        case a.OP_LSHIFT:
        case a.OP_RSHIFT:
          if (!(v.flags & s.SCRIPT_ENABLE_MAGNETIC_OPCODES))
            return !0;
          break;
        case a.OP_DIV:
        case a.OP_MOD:
        case a.OP_SPLIT:
        case a.OP_CAT:
        case a.OP_AND:
        case a.OP_OR:
        case a.OP_XOR:
        case a.OP_BIN2NUM:
        case a.OP_NUM2BIN:
          if (!(v.flags & s.SCRIPT_ENABLE_MONOLITH_OPCODES))
            return !0;
          break;
      }
      return !1;
    }
    var k = (this.flags & s.SCRIPT_VERIFY_MINIMALDATA) !== 0, P, M, R, F, C, L, U, q, Z, z, G, O, u, p, d, c, y, S, T, g, w = this.script.chunks[this.pc];
    this.pc++;
    var A = w.opcodenum;
    if (e.isUndefined(A))
      return this.errstr = "SCRIPT_ERR_UNDEFINED_OPCODE", !1;
    if (w.buf && w.buf.length > s.MAX_SCRIPT_ELEMENT_SIZE)
      return this.errstr = "SCRIPT_ERR_PUSH_SIZE", !1;
    var h = this.vfExec.indexOf(!1) === -1 && (!this.nonTopLevelReturnAfterGenesis || A === a.OP_RETURN);
    if (A > a.OP_16 && ++this.nOpCount > s.MAX_OPCODE_COUNT)
      return this.errstr = "SCRIPT_ERR_OP_COUNT", !1;
    if (I(A))
      return this.errstr = "SCRIPT_ERR_DISABLED_OPCODE", !1;
    if (h && A >= 0 && A <= a.OP_PUSHDATA4) {
      if (k && !this.script.checkMinimalPush(this.pc - 1))
        return this.errstr = "SCRIPT_ERR_MINIMALDATA", !1;
      if (!w.buf)
        this.stack.push(s.getFalse());
      else {
        if (w.len !== w.buf.length)
          throw new Error(`Length of push value not equal to length of data (${w.len},${w.buf.length})`);
        this.stack.push(w.buf);
      }
    } else if (h || a.OP_IF <= A && A <= a.OP_ENDIF)
      switch (A) {
        case a.OP_1NEGATE:
        case a.OP_1:
        case a.OP_2:
        case a.OP_3:
        case a.OP_4:
        case a.OP_5:
        case a.OP_6:
        case a.OP_7:
        case a.OP_8:
        case a.OP_9:
        case a.OP_10:
        case a.OP_11:
        case a.OP_12:
        case a.OP_13:
        case a.OP_14:
        case a.OP_15:
        case a.OP_16:
          C = A - (a.OP_1 - 1), P = new r(C).toScriptNumBuffer(), this.stack.push(P);
          break;
        case a.OP_NOP:
          break;
        case a.OP_NOP2:
        case a.OP_CHECKLOCKTIMEVERIFY:
          if (!(this.flags & s.SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY)) {
            if (this.flags & s.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS)
              return this.errstr = "SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS", !1;
            break;
          }
          if (this.stack.length < 1)
            return this.errstr = "SCRIPT_ERR_INVALID_STACK_OPERATION", !1;
          var N = r.fromScriptNumBuffer(this.stack.stacktop(-1), k, 5);
          if (N.lt(new r(0)))
            return this.errstr = "SCRIPT_ERR_NEGATIVE_LOCKTIME", !1;
          if (!this.checkLockTime(N))
            return this.errstr = "SCRIPT_ERR_UNSATISFIED_LOCKTIME", !1;
          break;
        case a.OP_NOP3:
        case a.OP_CHECKSEQUENCEVERIFY:
          if (!(this.flags & s.SCRIPT_VERIFY_CHECKSEQUENCEVERIFY)) {
            if (this.flags & s.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS)
              return this.errstr = "SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS", !1;
            break;
          }
          if (this.stack.length < 1)
            return this.errstr = "SCRIPT_ERR_INVALID_STACK_OPERATION", !1;
          var Y = r.fromScriptNumBuffer(m(-1), k, 5);
          if (Y.lt(new r(0)))
            return this.errstr = "SCRIPT_ERR_NEGATIVE_LOCKTIME", !1;
          if (Y & s.SEQUENCE_LOCKTIME_DISABLE_FLAG)
            break;
          if (!this.checkSequence(Y))
            return this.errstr = "SCRIPT_ERR_UNSATISFIED_LOCKTIME", !1;
          break;
        case a.OP_NOP1:
        case a.OP_NOP4:
        case a.OP_NOP5:
        case a.OP_NOP6:
        case a.OP_NOP7:
        case a.OP_NOP8:
        case a.OP_NOP9:
        case a.OP_NOP10:
          if (this.flags & s.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS)
            return this.errstr = "SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS", !1;
          break;
        case a.OP_IF:
        case a.OP_NOTIF:
          if (c = !1, h) {
            if (this.stack.length < 1)
              return this.errstr = "SCRIPT_ERR_UNBALANCED_CONDITIONAL", !1;
            if (P = m(-1), this.flags & s.SCRIPT_VERIFY_MINIMALIF) {
              if (P.length > 1)
                return this.errstr = "SCRIPT_ERR_MINIMALIF", !1;
              if (P.length === 1 && P[0] !== 1)
                return this.errstr = "SCRIPT_ERR_MINIMALIF", !1;
            }
            c = s.castToBool(P), A === a.OP_NOTIF && (c = !c), this.stack.pop();
          }
          this.vfExec.push(c);
          break;
        case a.OP_ELSE:
          if (this.vfExec.length === 0)
            return this.errstr = "SCRIPT_ERR_UNBALANCED_CONDITIONAL", !1;
          this.vfExec[this.vfExec.length - 1] = !this.vfExec[this.vfExec.length - 1];
          break;
        case a.OP_ENDIF:
          if (this.vfExec.length === 0)
            return this.errstr = "SCRIPT_ERR_UNBALANCED_CONDITIONAL", !1;
          this.vfExec.pop();
          break;
        case a.OP_VERIFY:
          if (this.stack.length < 1)
            return this.errstr = "SCRIPT_ERR_INVALID_STACK_OPERATION", !1;
          if (P = m(-1), c = s.castToBool(P), c)
            this.stack.pop();
          else
            return this.errstr = "SCRIPT_ERR_VERIFY", !1;
          break;
        case a.OP_RETURN:
          if (this.flags & s.SCRIPT_VERIFY_P2SH)
            return !1;
          if (this.vfExec.length === 0)
            return this.returned = !0, !0;
          this.nonTopLevelReturnAfterGenesis = !0;
          break;
        case a.OP_TOALTSTACK:
          if (this.stack.length < 1)
            return this.errstr = "SCRIPT_ERR_INVALID_STACK_OPERATION", !1;
          S = x(-1), this.altstack.push(this.stack.pop(), S);
          break;
        case a.OP_FROMALTSTACK:
          if (this.altstack.length < 1)
            return this.errstr = "SCRIPT_ERR_INVALID_ALTSTACK_OPERATION", !1;
          const p7 = this.altstack.vartop(-1);
          this.stack.push(this.altstack.pop(), p7);
          break;
        case a.OP_2DROP:
          if (this.stack.length < 2)
            return this.errstr = "SCRIPT_ERR_INVALID_STACK_OPERATION", !1;
          this.stack.pop(), this.stack.pop();
          break;
        case a.OP_2DUP:
          if (this.stack.length < 2)
            return this.errstr = "SCRIPT_ERR_INVALID_STACK_OPERATION", !1;
          M = m(-2), R = m(-1), S = x(-2), T = x(-1), this.stack.push(Q.Buffer.from(M), `$${S}`), this.stack.push(Q.Buffer.from(R), `$${T}`);
          break;
        case a.OP_3DUP:
          if (this.stack.length < 3)
            return this.errstr = "SCRIPT_ERR_INVALID_STACK_OPERATION", !1;
          M = m(-3), R = m(-2);
          var t7 = m(-1);
          S = x(-3), T = x(-2), g = x(-1), this.stack.push(Q.Buffer.from(M), `$${S}`), this.stack.push(Q.Buffer.from(R), `$${T}`), this.stack.push(Q.Buffer.from(t7), `$${g}`);
          break;
        case a.OP_2OVER:
          if (this.stack.length < 4)
            return this.errstr = "SCRIPT_ERR_INVALID_STACK_OPERATION", !1;
          M = m(-4), R = m(-3), S = x(-4), T = x(-3), this.stack.push(Q.Buffer.from(M), `$${S}`), this.stack.push(Q.Buffer.from(R), `$${T}`);
          break;
        case a.OP_2ROT:
          if (this.stack.length < 6)
            return this.errstr = "SCRIPT_ERR_INVALID_STACK_OPERATION", !1;
          S = x(-6), T = x(-5), F = this.stack.splice(this.stack.length - 6, 2), this.stack.push(F[0], S), this.stack.push(F[1], T);
          break;
        case a.OP_2SWAP:
          if (this.stack.length < 4)
            return this.errstr = "SCRIPT_ERR_INVALID_STACK_OPERATION", !1;
          S = x(-4), T = x(-3), F = this.stack.splice(this.stack.length - 4, 2), this.stack.push(F[0], S), this.stack.push(F[1], T);
          break;
        case a.OP_IFDUP:
          if (this.stack.length < 1)
            return this.errstr = "SCRIPT_ERR_INVALID_STACK_OPERATION", !1;
          P = m(-1), c = s.castToBool(P), c && (S = x(-1), this.stack.push(Q.Buffer.from(P), `$${S}`));
          break;
        case a.OP_DEPTH:
          P = new r(this.stack.length).toScriptNumBuffer(), this.stack.push(P, "$depth");
          break;
        case a.OP_DROP:
          if (this.stack.length < 1)
            return this.errstr = "SCRIPT_ERR_INVALID_STACK_OPERATION", !1;
          this.stack.pop();
          break;
        case a.OP_DUP:
          if (this.stack.length < 1)
            return this.errstr = "SCRIPT_ERR_INVALID_STACK_OPERATION", !1;
          S = x(-1), this.stack.push(Q.Buffer.from(m(-1)), `$${S}`);
          break;
        case a.OP_NIP:
          if (this.stack.length < 2)
            return this.errstr = "SCRIPT_ERR_INVALID_STACK_OPERATION", !1;
          this.stack.splice(this.stack.length - 2, 1);
          break;
        case a.OP_OVER:
          if (this.stack.length < 2)
            return this.errstr = "SCRIPT_ERR_INVALID_STACK_OPERATION", !1;
          T = x(-2), this.stack.push(Q.Buffer.from(m(-2)), `$${T}`);
          break;
        case a.OP_PICK:
        case a.OP_ROLL:
          if (this.stack.length < 2)
            return this.errstr = "SCRIPT_ERR_INVALID_STACK_OPERATION", !1;
          if (P = m(-1), q = r.fromScriptNumBuffer(P, k, 4), C = q.toNumber(), this.stack.pop(), C < 0 || C >= this.stack.length)
            return this.errstr = "SCRIPT_ERR_INVALID_STACK_OPERATION", !1;
          P = m(-C - 1), S = x(-C - 1), A === a.OP_ROLL ? (this.stack.splice(this.stack.length - C - 1, 1), this.stack.push(Q.Buffer.from(P), S)) : this.stack.push(Q.Buffer.from(P), `$${S}`);
          break;
        case a.OP_ROT:
          if (this.stack.length < 3)
            return this.errstr = "SCRIPT_ERR_INVALID_STACK_OPERATION", !1;
          L = m(-3), U = m(-2);
          var H = m(-1);
          S = x(-3), T = x(-2), g = x(-1), this.stack.write(-3, U), this.stack.write(-2, H), this.stack.write(-1, L), this.stack.updateTopVars([S, g, T]);
          break;
        case a.OP_SWAP:
          if (this.stack.length < 2)
            return this.errstr = "SCRIPT_ERR_INVALID_STACK_OPERATION", !1;
          L = m(-2), U = m(-1), S = x(-2), T = x(-1), this.stack.write(-2, U), this.stack.write(-1, L), this.stack.updateTopVars([S, T]);
          break;
        case a.OP_TUCK:
          if (this.stack.length < 2)
            return this.errstr = "SCRIPT_ERR_INVALID_STACK_OPERATION", !1;
          S = x(-2), T = x(-1), this.stack.splice(this.stack.length - 2, 0, Q.Buffer.from(m(-1))), this.stack.updateTopVars([T, S, `$${T}`]);
          break;
        case a.OP_SIZE:
          if (this.stack.length < 1)
            return this.errstr = "SCRIPT_ERR_INVALID_STACK_OPERATION", !1;
          q = new r(m(-1).length), this.stack.push(q.toScriptNumBuffer(), "$size");
          break;
        case a.OP_AND:
        case a.OP_OR:
        case a.OP_XOR:
          if (this.stack.length < 2)
            return this.errstr = "SCRIPT_ERR_INVALID_STACK_OPERATION", !1;
          if (M = m(-2), R = m(-1), M.length !== R.length)
            return this.errstr = "SCRIPT_ERR_INVALID_OPERAND_SIZE", !1;
          switch (A) {
            case a.OP_AND:
              for (let l7 = 0; l7 < M.length; l7++)
                M[l7] &= R[l7];
              break;
            case a.OP_OR:
              for (let l7 = 0; l7 < M.length; l7++)
                M[l7] |= R[l7];
              break;
            case a.OP_XOR:
              for (let l7 = 0; l7 < M.length; l7++)
                M[l7] ^= R[l7];
              break;
          }
          this.stack.pop();
          break;
        case a.OP_INVERT:
          this.stack.length < 1 && (this.errstr = "SCRIPT_ERR_INVALID_STACK_OPERATION"), P = m(-1);
          for (let l7 = 0; l7 < P.length; l7++)
            P[l7] = ~P[l7];
          break;
        case a.OP_LSHIFT:
        case a.OP_RSHIFT:
          if (this.stack.length < 2)
            return this.errstr = "SCRIPT_ERR_INVALID_STACK_OPERATION", !1;
          if (M = m(-2), M.length === 0)
            this.stack.pop();
          else {
            if (Z = new r(M), z = r.fromScriptNumBuffer(m(-1), k, 4), C = z.toNumber(), C < 0)
              return this.errstr = "SCRIPT_ERR_INVALID_NUMBER_RANGE", !1;
            this.stack.pop(), this.stack.pop();
            let l7;
            A === a.OP_LSHIFT && (l7 = Z.ushln(C)), A === a.OP_RSHIFT && (l7 = Z.ushrn(C));
            let y7 = b(Q.Buffer.from(l7.toArray().slice(M.length * -1)), M.length);
            this.stack.push(y7);
          }
          break;
        case a.OP_EQUAL:
        case a.OP_EQUALVERIFY:
          if (this.stack.length < 2)
            return this.errstr = "SCRIPT_ERR_INVALID_STACK_OPERATION", !1;
          M = m(-2), R = m(-1);
          var $ = M.toString("hex") === R.toString("hex");
          if (this.stack.pop(), this.stack.pop(), this.stack.push($ ? s.getTrue() : s.getFalse()), A === a.OP_EQUALVERIFY)
            if ($)
              this.stack.pop();
            else
              return this.errstr = "SCRIPT_ERR_EQUALVERIFY", !1;
          break;
        case a.OP_1ADD:
        case a.OP_1SUB:
        case a.OP_NEGATE:
        case a.OP_ABS:
        case a.OP_NOT:
        case a.OP_0NOTEQUAL:
          if (this.stack.length < 1)
            return this.errstr = "SCRIPT_ERR_INVALID_STACK_OPERATION", !1;
          switch (P = m(-1), q = r.fromScriptNumBuffer(P, k), A) {
            case a.OP_1ADD:
              q = q.add(r.One);
              break;
            case a.OP_1SUB:
              q = q.sub(r.One);
              break;
            case a.OP_NEGATE:
              q = q.neg();
              break;
            case a.OP_ABS:
              q.cmp(r.Zero) < 0 && (q = q.neg());
              break;
            case a.OP_NOT:
              q = new r((q.cmp(r.Zero) === 0) + 0);
              break;
            case a.OP_0NOTEQUAL:
              q = new r((q.cmp(r.Zero) !== 0) + 0);
              break;
          }
          this.stack.pop(), this.stack.push(q.toScriptNumBuffer());
          break;
        case a.OP_ADD:
        case a.OP_SUB:
        case a.OP_MUL:
        case a.OP_MOD:
        case a.OP_DIV:
        case a.OP_BOOLAND:
        case a.OP_BOOLOR:
        case a.OP_NUMEQUAL:
        case a.OP_NUMEQUALVERIFY:
        case a.OP_NUMNOTEQUAL:
        case a.OP_LESSTHAN:
        case a.OP_GREATERTHAN:
        case a.OP_LESSTHANOREQUAL:
        case a.OP_GREATERTHANOREQUAL:
        case a.OP_MIN:
        case a.OP_MAX:
          if (this.stack.length < 2)
            return this.errstr = "SCRIPT_ERR_INVALID_STACK_OPERATION", !1;
          switch (Z = r.fromScriptNumBuffer(m(-2), k), z = r.fromScriptNumBuffer(m(-1), k), q = new r(0), A) {
            case a.OP_ADD:
              q = Z.add(z);
              break;
            case a.OP_SUB:
              q = Z.sub(z);
              break;
            case a.OP_MUL:
              q = Z.mul(z);
              break;
            case a.OP_DIV:
              if (z === 0)
                return this.errstr = "SCRIPT_ERR_DIV_BY_ZERO", !1;
              q = Z.div(z);
              break;
            case a.OP_MOD:
              if (z === 0)
                return this.errstr = "SCRIPT_ERR_DIV_BY_ZERO", !1;
              q = Z.mod(z);
              break;
            case a.OP_BOOLAND:
              q = new r((Z.cmp(r.Zero) !== 0 && z.cmp(r.Zero) !== 0) + 0);
              break;
            case a.OP_BOOLOR:
              q = new r((Z.cmp(r.Zero) !== 0 || z.cmp(r.Zero) !== 0) + 0);
              break;
            case a.OP_NUMEQUAL:
              q = new r((Z.cmp(z) === 0) + 0);
              break;
            case a.OP_NUMEQUALVERIFY:
              q = new r((Z.cmp(z) === 0) + 0);
              break;
            case a.OP_NUMNOTEQUAL:
              q = new r((Z.cmp(z) !== 0) + 0);
              break;
            case a.OP_LESSTHAN:
              q = new r((Z.cmp(z) < 0) + 0);
              break;
            case a.OP_GREATERTHAN:
              q = new r((Z.cmp(z) > 0) + 0);
              break;
            case a.OP_LESSTHANOREQUAL:
              q = new r((Z.cmp(z) <= 0) + 0);
              break;
            case a.OP_GREATERTHANOREQUAL:
              q = new r((Z.cmp(z) >= 0) + 0);
              break;
            case a.OP_MIN:
              q = Z.cmp(z) < 0 ? Z : z;
              break;
            case a.OP_MAX:
              q = Z.cmp(z) > 0 ? Z : z;
              break;
          }
          if (this.stack.pop(), this.stack.pop(), this.stack.push(q.toScriptNumBuffer()), A === a.OP_NUMEQUALVERIFY)
            if (s.castToBool(m(-1)))
              this.stack.pop();
            else
              return this.errstr = "SCRIPT_ERR_NUMEQUALVERIFY", !1;
          break;
        case a.OP_WITHIN:
          if (this.stack.length < 3)
            return this.errstr = "SCRIPT_ERR_INVALID_STACK_OPERATION", !1;
          Z = r.fromScriptNumBuffer(m(-3), k), z = r.fromScriptNumBuffer(m(-2), k);
          var X = r.fromScriptNumBuffer(m(-1), k);
          c = z.cmp(Z) <= 0 && Z.cmp(X) < 0, this.stack.pop(), this.stack.pop(), this.stack.pop(), this.stack.push(c ? s.getTrue() : s.getFalse());
          break;
        case a.OP_RIPEMD160:
        case a.OP_SHA1:
        case a.OP_SHA256:
        case a.OP_HASH160:
        case a.OP_HASH256:
          if (this.stack.length < 1)
            return this.errstr = "SCRIPT_ERR_INVALID_STACK_OPERATION", !1;
          P = m(-1);
          var i7;
          A === a.OP_RIPEMD160 ? i7 = f.ripemd160(P) : A === a.OP_SHA1 ? i7 = f.sha1(P) : A === a.OP_SHA256 ? i7 = f.sha256(P) : A === a.OP_HASH160 ? i7 = f.sha256ripemd160(P) : A === a.OP_HASH256 && (i7 = f.sha256sha256(P)), this.stack.pop(), this.stack.push(i7);
          break;
        case a.OP_CODESEPARATOR:
          this.pbegincodehash = this.pc;
          break;
        case a.OP_CHECKSIG:
        case a.OP_CHECKSIGVERIFY:
          if (this.stack.length < 2)
            return this.errstr = "SCRIPT_ERR_INVALID_STACK_OPERATION", !1;
          if (G = m(-2), O = m(-1), !this.checkSignatureEncoding(G) || !this.checkPubkeyEncoding(O))
            return !1;
          u = this.subscript();
          var J = new t().add(G);
          u.findAndDelete(J);
          try {
            p = i.fromTxFormat(G), d = n.fromBuffer(O, !1), y = this.tx.verifySignature(p, d, this.nin, u, this.satoshisBN, this.flags);
          } catch {
            y = !1;
          }
          if (!y && this.flags & s.SCRIPT_VERIFY_NULLFAIL && G.length)
            return this.errstr = "SCRIPT_ERR_NULLFAIL", !1;
          if (this.stack.pop(), this.stack.pop(), this.stack.push(y ? s.getTrue() : s.getFalse()), A === a.OP_CHECKSIGVERIFY)
            if (y)
              this.stack.pop();
            else
              return this.errstr = "SCRIPT_ERR_CHECKSIGVERIFY", !1;
          break;
        case a.OP_CHECKMULTISIG:
        case a.OP_CHECKMULTISIGVERIFY:
          var _ = 1;
          if (this.stack.length < _)
            return this.errstr = "SCRIPT_ERR_INVALID_STACK_OPERATION", !1;
          var E = r.fromScriptNumBuffer(m(-_), k).toNumber();
          if (E < 0 || E > 20)
            return this.errstr = "SCRIPT_ERR_PUBKEY_COUNT", !1;
          if (this.nOpCount += E, this.nOpCount > s.MAX_OPCODE_COUNT)
            return this.errstr = "SCRIPT_ERR_OP_COUNT", !1;
          var j = ++_;
          _ += E;
          var V = E + 2;
          if (this.stack.length < _)
            return this.errstr = "SCRIPT_ERR_INVALID_STACK_OPERATION", !1;
          var n7 = r.fromScriptNumBuffer(m(-_), k).toNumber();
          if (n7 < 0 || n7 > E)
            return this.errstr = "SCRIPT_ERR_SIG_COUNT", !1;
          var K = ++_;
          if (_ += n7, this.stack.length < _)
            return this.errstr = "SCRIPT_ERR_INVALID_STACK_OPERATION", !1;
          u = this.subscript();
          for (var B = 0; B < n7; B++)
            G = m(-K - B), u.findAndDelete(new t().add(G));
          for (y = !0; y && n7 > 0; ) {
            if (G = m(-K), O = m(-j), !this.checkSignatureEncoding(G) || !this.checkPubkeyEncoding(O))
              return !1;
            var D;
            try {
              p = i.fromTxFormat(G), d = n.fromBuffer(O, !1), D = this.tx.verifySignature(p, d, this.nin, u, this.satoshisBN, this.flags);
            } catch {
              D = !1;
            }
            D && (K++, n7--), j++, E--, n7 > E && (y = !1);
          }
          for (; _-- > 1; ) {
            if (!y && this.flags & s.SCRIPT_VERIFY_NULLFAIL && !V && m(-1).length)
              return this.errstr = "SCRIPT_ERR_NULLFAIL", !1;
            V > 0 && V--, this.stack.pop();
          }
          if (this.stack.length < 1)
            return this.errstr = "SCRIPT_ERR_INVALID_STACK_OPERATION", !1;
          if (this.flags & s.SCRIPT_VERIFY_NULLDUMMY && m(-1).length)
            return this.errstr = "SCRIPT_ERR_SIG_NULLDUMMY", !1;
          if (this.stack.pop(), this.stack.push(y ? s.getTrue() : s.getFalse()), A === a.OP_CHECKMULTISIGVERIFY)
            if (y)
              this.stack.pop();
            else
              return this.errstr = "SCRIPT_ERR_CHECKMULTISIGVERIFY", !1;
          break;
        case a.OP_CAT:
          if (this.stack.length < 2)
            return this.errstr = "SCRIPT_ERR_INVALID_STACK_OPERATION", !1;
          if (M = m(-2), R = m(-1), M.length + R.length > s.MAX_SCRIPT_ELEMENT_SIZE)
            return this.errstr = "SCRIPT_ERR_PUSH_SIZE", !1;
          this.stack.write(-2, Q.Buffer.concat([M, R])), this.stack.pop();
          break;
        case a.OP_SPLIT:
          if (this.stack.length < 2)
            return this.errstr = "SCRIPT_ERR_INVALID_STACK_OPERATION", !1;
          M = m(-2);
          var W = r.fromScriptNumBuffer(m(-1), k).toNumber();
          if (W < 0 || W > M.length)
            return this.errstr = "SCRIPT_ERR_INVALID_SPLIT_RANGE", !1;
          var e7 = Q.Buffer.from(M);
          this.stack.write(-2, e7.slice(0, W)), this.stack.write(-1, e7.slice(W));
          break;
        case a.OP_NUM2BIN:
          if (this.stack.length < 2)
            return this.errstr = "SCRIPT_ERR_INVALID_STACK_OPERATION", !1;
          var o7 = r.fromScriptNumBuffer(m(-1), k).toNumber();
          if (o7 > s.MAX_SCRIPT_ELEMENT_SIZE)
            return this.errstr = "SCRIPT_ERR_PUSH_SIZE", !1;
          this.stack.pop();
          var a7 = m(-1);
          if (a7 = s._minimallyEncode(a7), a7.length > o7)
            return this.errstr = "SCRIPT_ERR_IMPOSSIBLE_ENCODING", !1;
          if (a7.length === o7) {
            this.stack.write(-1, a7);
            break;
          }
          var s7 = 0;
          a7.length > 0 && (s7 = a7[a7.length - 1] & 128, a7[a7.length - 1] &= 127);
          var u7 = Q.Buffer.alloc(o7);
          a7.copy(u7, 0);
          for (var m7 = a7.length - 1; m7++ < o7 - 2; )
            u7[m7] = 0;
          u7[m7] = s7, this.stack.write(-1, u7);
          break;
        case a.OP_BIN2NUM:
          if (this.stack.length < 1)
            return this.errstr = "SCRIPT_ERR_INVALID_STACK_OPERATION", !1;
          if (M = m(-1), R = s._minimallyEncode(M), this.stack.write(-1, R), !s._isMinimallyEncoded(R))
            return this.errstr = "SCRIPT_ERR_INVALID_NUMBER_RANGE", !1;
          break;
        default:
          return this.errstr = "SCRIPT_ERR_BAD_OPCODE", !1;
      }
    return this.vfExec.indexOf(!1) === -1 && this._callbackStack(this.stack, this.pc, l), !0;
  }, o2;
}
var y4;
function K5() {
  return y4 || (y4 = 1, Y1.exports = Ov(), Y1.exports.Interpreter = Dv(), Y1.exports.Stack = Pv), Y1.exports;
}
var s2, g4;
function M1() {
  if (g4)
    return s2;
  g4 = 1;
  var e = Ee, t = Ae, a = L5, r = u6, f = Er, i = C0, n = N0, o = St();
  function s(l, v, m) {
    if (!(this instanceof s))
      return new s(l, v, m);
    if (e.isArray(l) && e.isNumber(v))
      return s.createMultisig(l, v, m);
    if (l instanceof s)
      return l;
    if (t.checkArgument(l, "First argument is required, please include address data.", "guide/address.html"), v && !f.get(v))
      throw new TypeError('Second argument must be "livenet", "testnet", or "regtest".');
    if (m && m !== s.PayToPublicKeyHash && m !== s.PayToScriptHash)
      throw new TypeError('Third argument must be "pubkeyhash" or "scripthash".');
    var x = this._classifyArguments(l, v, m);
    return x.network = x.network || f.get(v) || f.defaultNetwork, x.type = x.type || m || s.PayToPublicKeyHash, n.defineImmutable(this, {
      hashBuffer: x.hashBuffer,
      network: x.network,
      type: x.type
    }), this;
  }
  s.prototype._classifyArguments = function(l, v, m) {
    if ((l instanceof Q.Buffer || l instanceof Uint8Array) && l.length === 20)
      return s._transformHash(l);
    if ((l instanceof Q.Buffer || l instanceof Uint8Array) && l.length === 21)
      return s._transformBuffer(l, v, m);
    if (l instanceof o)
      return s._transformPublicKey(l);
    if (l instanceof b)
      return s._transformScript(l, v);
    if (typeof l == "string")
      return s._transformString(l, v, m);
    if (e.isObject(l))
      return s._transformObject(l);
    throw new TypeError("First argument is an unrecognized data format.");
  }, s.PayToPublicKeyHash = "pubkeyhash", s.PayToScriptHash = "scripthash", s._transformHash = function(l) {
    var v = {};
    if (!(l instanceof Q.Buffer) && !(l instanceof Uint8Array))
      throw new TypeError("Address supplied is not a buffer.");
    if (l.length !== 20)
      throw new TypeError("Address hashbuffers must be exactly 20 bytes.");
    return v.hashBuffer = l, v;
  }, s._transformObject = function(l) {
    return t.checkArgument(l.hash || l.hashBuffer, "Must provide a `hash` or `hashBuffer` property"), t.checkArgument(l.type, "Must provide a `type` property"), {
      hashBuffer: l.hash ? Q.Buffer.from(l.hash, "hex") : l.hashBuffer,
      network: f.get(l.network) || f.defaultNetwork,
      type: l.type
    };
  }, s._classifyFromVersion = function(l) {
    var v = {}, m = f.get(l[0], "pubkeyhash"), x = f.get(l[0], "scripthash");
    return m ? (v.network = m, v.type = s.PayToPublicKeyHash) : x && (v.network = x, v.type = s.PayToScriptHash), v;
  }, s._transformBuffer = function(l, v, m) {
    var x = {};
    if (!(l instanceof Q.Buffer) && !(l instanceof Uint8Array))
      throw new TypeError("Address supplied is not a buffer.");
    if (l.length !== 1 + 20)
      throw new TypeError("Address buffers must be exactly 21 bytes.");
    var I = f.get(v), k = s._classifyFromVersion(l);
    if (v && !I)
      throw new TypeError("Unknown network");
    if (!k.network || I && I !== k.network)
      throw new TypeError("Address has mismatched network type.");
    if (!k.type || m && m !== k.type)
      throw new TypeError("Address has mismatched type.");
    return x.hashBuffer = l.slice(1), x.network = k.network, x.type = k.type, x;
  }, s._transformPublicKey = function(l) {
    var v = {};
    if (!(l instanceof o))
      throw new TypeError("Address must be an instance of PublicKey.");
    return v.hashBuffer = i.sha256ripemd160(l.toBuffer()), v.type = s.PayToPublicKeyHash, v;
  }, s._transformScript = function(l, v) {
    t.checkArgument(l instanceof b, "script must be a Script instance");
    var m = l.getAddressInfo(v);
    if (!m)
      throw new a.Script.CantDeriveAddress(l);
    return m;
  }, s.createMultisig = function(l, v, m) {
    return m = m || l[0].network || f.defaultNetwork, s.payingTo(b.buildMultisigOut(l, v), m);
  }, s._transformString = function(l, v, m) {
    if (typeof l != "string")
      throw new TypeError("data parameter supplied is not a string.");
    if (l.length < 27)
      throw new Error("Invalid Address string provided");
    l = l.trim();
    var x = f.get(v);
    if (v && !x)
      throw new TypeError("Unknown network");
    var I = r.decode(l);
    return s._transformBuffer(I, v, m);
  }, s.fromPublicKey = function(l, v) {
    var m = s._transformPublicKey(l);
    return v = v || f.defaultNetwork, new s(m.hashBuffer, v, m.type);
  }, s.fromPrivateKey = function(l, v) {
    let m = o.fromPrivateKey(l);
    return v = v || l.network || f.defaultNetwork, s.fromPublicKey(m, v);
  }, s.fromPublicKeyHash = function(l, v) {
    var m = s._transformHash(l);
    return new s(m.hashBuffer, v, s.PayToPublicKeyHash);
  }, s.fromScriptHash = function(l, v) {
    t.checkArgument(l, "hash parameter is required");
    var m = s._transformHash(l);
    return new s(m.hashBuffer, v, s.PayToScriptHash);
  }, s.payingTo = function(l, v) {
    return t.checkArgument(l, "script is required"), t.checkArgument(l instanceof b, "script must be instance of Script"), s.fromScriptHash(i.sha256ripemd160(l.toBuffer()), v);
  }, s.fromScript = function(l, v) {
    t.checkArgument(l instanceof b, "script must be a Script instance");
    var m = s._transformScript(l, v);
    return new s(m.hashBuffer, v, m.type);
  }, s.fromBuffer = function(l, v, m) {
    var x = s._transformBuffer(l, v, m);
    return new s(x.hashBuffer, x.network, x.type);
  }, s.fromHex = function(l, v, m) {
    return s.fromBuffer(Q.Buffer.from(l, "hex"), v, m);
  }, s.fromString = function(l, v, m) {
    var x = s._transformString(l, v, m);
    return new s(x.hashBuffer, x.network, x.type);
  }, s.fromObject = function(v) {
    t.checkState(
      n.isHexa(v.hash),
      'Unexpected hash property, "' + v.hash + '", expected to be hex.'
    );
    var m = Q.Buffer.from(v.hash, "hex");
    return new s(m, v.network, v.type);
  }, s.getValidationError = function(l, v, m) {
    var x;
    try {
      new s(l, v, m);
    } catch (I) {
      x = I;
    }
    return x;
  }, s.isValid = function(l, v, m) {
    return !s.getValidationError(l, v, m);
  }, s.prototype.isPayToPublicKeyHash = function() {
    return this.type === s.PayToPublicKeyHash;
  }, s.prototype.isPayToScriptHash = function() {
    return this.type === s.PayToScriptHash;
  }, s.prototype.toBuffer = function() {
    var l = Q.Buffer.from([this.network[this.type]]), v = Q.Buffer.concat([l, this.hashBuffer]);
    return v;
  }, s.prototype.toHex = function() {
    return this.toBuffer().toString("hex");
  }, s.prototype.toObject = s.prototype.toJSON = function() {
    return {
      hash: this.hashBuffer.toString("hex"),
      type: this.type,
      network: this.network.toString()
    };
  }, s.prototype.inspect = function() {
    return "<Address: " + this.toString() + ", type: " + this.type + ", network: " + this.network + ">";
  }, s.prototype.toString = function() {
    return r.encode(this.toBuffer());
  }, s2 = s;
  var b = K5();
  return s2;
}
function Wr() {
}
Wr.getRandomBuffer = function(e) {
  return g7.browser ? Wr.getRandomBufferBrowser(e) : Wr.getRandomBufferNode(e);
};
Wr.getRandomBufferNode = function(e) {
  var t = gi();
  return t.randomBytes(e);
};
Wr.getRandomBufferBrowser = function(e) {
  if (!window.crypto && !window.msCrypto)
    throw new Error("window.crypto not available");
  var t;
  if (window.crypto && window.crypto.getRandomValues)
    t = window.crypto;
  else if (window.msCrypto && window.msCrypto.getRandomValues)
    t = window.msCrypto;
  else
    throw new Error("window.crypto.getRandomValues not available");
  var a = new Uint8Array(e);
  t.getRandomValues(a);
  var r = Q.Buffer.from(a);
  return r;
};
var Ni = Wr, d2, x4;
function Ci() {
  if (x4)
    return d2;
  x4 = 1;
  var e = Ee, t = M1(), a = u6, r = O0, f = N0, i = Er, n = P1, o = St(), s = Ni, b = Ae;
  function l(v, m) {
    if (!(this instanceof l))
      return new l(v, m);
    if (v instanceof l)
      return v;
    var x = this._classifyArguments(v, m);
    if (!x.bn || x.bn.cmp(new r(0)) === 0)
      throw new TypeError("Number can not be equal to zero, undefined, null or false");
    if (!x.bn.lt(n.getN()))
      throw new TypeError("Number must be less than N");
    if (typeof x.network > "u")
      throw new TypeError('Must specify the network ("livenet" or "testnet")');
    return f.defineImmutable(this, {
      bn: x.bn,
      compressed: x.compressed,
      network: x.network
    }), Object.defineProperty(this, "publicKey", {
      configurable: !1,
      enumerable: !0,
      get: this.toPublicKey.bind(this)
    }), this;
  }
  return l.prototype._classifyArguments = function(v, m) {
    var x = {
      compressed: !0,
      network: m ? i.get(m) : i.defaultNetwork
    };
    if (e.isUndefined(v) || e.isNull(v))
      x.bn = l._getRandomBN();
    else if (v instanceof r)
      x.bn = v;
    else if (v instanceof Q.Buffer || v instanceof Uint8Array)
      x = l._transformBuffer(v, m);
    else if (v.bn && v.network)
      x = l._transformObject(v);
    else if (!m && i.get(v))
      x.bn = l._getRandomBN(), x.network = i.get(v);
    else if (typeof v == "string")
      f.isHexa(v) ? x.bn = new r(Q.Buffer.from(v, "hex")) : x = l._transformWIF(v, m);
    else
      throw new TypeError("First argument is an unrecognized data type.");
    return x;
  }, l._getRandomBN = function() {
    var v, m;
    do {
      var x = s.getRandomBuffer(32);
      m = r.fromBuffer(x), v = m.lt(n.getN());
    } while (!v);
    return m;
  }, l._transformBuffer = function(v, m) {
    var x = {};
    if (v.length === 32)
      return l._transformBNBuffer(v, m);
    if (x.network = i.get(v[0], "privatekey"), !x.network)
      throw new Error("Invalid network");
    if (m && x.network !== i.get(m))
      throw new TypeError("Private key network mismatch");
    if (v.length === 1 + 32 + 1 && v[1 + 32 + 1 - 1] === 1)
      x.compressed = !0;
    else if (v.length === 1 + 32)
      x.compressed = !1;
    else
      throw new Error("Length of buffer must be 33 (uncompressed) or 34 (compressed)");
    return x.bn = r.fromBuffer(v.slice(1, 32 + 1)), x;
  }, l._transformBNBuffer = function(v, m) {
    var x = {};
    return x.network = i.get(m) || i.defaultNetwork, x.bn = r.fromBuffer(v), x.compressed = !1, x;
  }, l._transformWIF = function(v, m) {
    return l._transformBuffer(a.decode(v), m);
  }, l.fromBuffer = function(v, m) {
    return new l(v, m);
  }, l.fromHex = function(v, m) {
    return l.fromBuffer(Q.Buffer.from(v, "hex"), m);
  }, l._transformObject = function(v) {
    var m = new r(v.bn, "hex"), x = i.get(v.network);
    return {
      bn: m,
      network: x,
      compressed: v.compressed
    };
  }, l.fromString = l.fromWIF = function(v) {
    return b.checkArgument(e.isString(v), "First argument is expected to be a string."), new l(v);
  }, l.fromObject = l.fromJSON = function(v) {
    return b.checkArgument(e.isObject(v), "First argument is expected to be an object."), new l(v);
  }, l.fromRandom = function(v) {
    var m = l._getRandomBN();
    return new l(m, v);
  }, l.getValidationError = function(v, m) {
    var x;
    try {
      new l(v, m);
    } catch (I) {
      x = I;
    }
    return x;
  }, l.isValid = function(v, m) {
    return v ? !l.getValidationError(v, m) : !1;
  }, l.prototype.toString = function() {
    return this.toWIF();
  }, l.prototype.toWIF = function() {
    var v = this.network, m = this.compressed, x;
    return m ? x = Q.Buffer.concat([
      Q.Buffer.from([v.privatekey]),
      this.bn.toBuffer({ size: 32 }),
      Q.Buffer.from([1])
    ]) : x = Q.Buffer.concat([
      Q.Buffer.from([v.privatekey]),
      this.bn.toBuffer({ size: 32 })
    ]), a.encode(x);
  }, l.prototype.toBigNumber = function() {
    return this.bn;
  }, l.prototype.toBuffer = function() {
    return this.bn.toBuffer({ size: 32 });
  }, l.prototype.toHex = function() {
    return this.toBuffer().toString("hex");
  }, l.prototype.toPublicKey = function() {
    return this._pubkey || (this._pubkey = o.fromPrivateKey(this)), this._pubkey;
  }, l.prototype.toAddress = function(v) {
    var m = this.toPublicKey();
    return t.fromPublicKey(m, v || this.network);
  }, l.prototype.toObject = l.prototype.toJSON = function() {
    return {
      bn: this.bn.toString("hex"),
      compressed: this.compressed,
      network: this.network.toString()
    };
  }, l.prototype.inspect = function() {
    var v = this.compressed ? "" : ", uncompressed";
    return "<PrivateKey: " + this.toHex() + ", network: " + this.network + v + ">";
  }, d2 = l, d2;
}
var c2, _4;
function St() {
  if (_4)
    return c2;
  _4 = 1;
  var e = O0, t = P1, a = C0, r = N0, f = Er, i = Ee, n = Ae;
  function o(s, b) {
    if (!(this instanceof o))
      return new o(s, b);
    if (n.checkArgument(s, "First argument is required, please include public key data."), s instanceof o)
      return s;
    b = b || {};
    var l = this._classifyArgs(s, b);
    return l.point.validate(), r.defineImmutable(this, {
      point: l.point,
      compressed: l.compressed,
      network: l.network || f.defaultNetwork
    }), this;
  }
  return o.prototype._classifyArgs = function(s, b) {
    var l = {
      compressed: i.isUndefined(b.compressed) || b.compressed
    };
    if (s instanceof t)
      l.point = s;
    else if (s.x && s.y)
      l = o._transformObject(s);
    else if (typeof s == "string")
      l = o._transformDER(Q.Buffer.from(s, "hex"));
    else if (o._isBuffer(s))
      l = o._transformDER(s);
    else if (o._isPrivateKey(s))
      l = o._transformPrivateKey(s);
    else
      throw new TypeError("First argument is an unrecognized data format.");
    return l.network || (l.network = i.isUndefined(b.network) ? void 0 : f.get(b.network)), l;
  }, o._isPrivateKey = function(s) {
    var b = Ci();
    return s instanceof b;
  }, o._isBuffer = function(s) {
    return s instanceof Q.Buffer || s instanceof Uint8Array;
  }, o._transformPrivateKey = function(s) {
    n.checkArgument(o._isPrivateKey(s), "Must be an instance of PrivateKey");
    var b = {};
    return b.point = t.getG().mul(s.bn), b.compressed = s.compressed, b.network = s.network, b;
  }, o._transformDER = function(s, b) {
    n.checkArgument(o._isBuffer(s), "Must be a buffer of DER encoded public key");
    var l = {};
    b = i.isUndefined(b) ? !0 : b;
    var v, m, x, I;
    if (s[0] === 4 || !b && (s[0] === 6 || s[0] === 7)) {
      if (x = s.slice(1, 33), I = s.slice(33, 65), x.length !== 32 || I.length !== 32 || s.length !== 65)
        throw new TypeError("Length of x and y must be 32 bytes");
      v = new e(x), m = new e(I), l.point = new t(v, m), l.compressed = !1;
    } else if (s[0] === 3)
      x = s.slice(1), v = new e(x), l = o._transformX(!0, v), l.compressed = !0;
    else if (s[0] === 2)
      x = s.slice(1), v = new e(x), l = o._transformX(!1, v), l.compressed = !0;
    else
      throw new TypeError("Invalid DER format public key");
    return l;
  }, o._transformX = function(s, b) {
    n.checkArgument(typeof s == "boolean", "Must specify whether y is odd or not (true or false)");
    var l = {};
    return l.point = t.fromX(s, b), l;
  }, o._transformObject = function(s) {
    var b = new e(s.x, "hex"), l = new e(s.y, "hex"), v = new t(b, l);
    return new o(v, {
      compressed: s.compressed
    });
  }, o.fromPrivateKey = function(s) {
    n.checkArgument(o._isPrivateKey(s), "Must be an instance of PrivateKey");
    var b = o._transformPrivateKey(s);
    return new o(b.point, {
      compressed: b.compressed,
      network: b.network
    });
  }, o.fromDER = o.fromBuffer = function(s, b) {
    n.checkArgument(o._isBuffer(s), "Must be a buffer of DER encoded public key");
    var l = o._transformDER(s, b);
    return new o(l.point, {
      compressed: l.compressed
    });
  }, o.fromPoint = function(s, b) {
    return n.checkArgument(s instanceof t, "First argument must be an instance of Point."), new o(s, {
      compressed: b
    });
  }, o.fromHex = o.fromString = function(s, b) {
    var l = Q.Buffer.from(s, b || "hex"), v = o._transformDER(l);
    return new o(v.point, {
      compressed: v.compressed
    });
  }, o.fromX = function(s, b) {
    var l = o._transformX(s, b);
    return new o(l.point, {
      compressed: l.compressed
    });
  }, o.getValidationError = function(s) {
    var b;
    try {
      new o(s);
    } catch (l) {
      b = l;
    }
    return b;
  }, o.isValid = function(s) {
    return !o.getValidationError(s);
  }, o.prototype.toObject = o.prototype.toJSON = function() {
    return {
      x: this.point.getX().toString("hex", 2),
      y: this.point.getY().toString("hex", 2),
      compressed: this.compressed
    };
  }, o.prototype.toBuffer = o.prototype.toDER = function() {
    var s = this.point.getX(), b = this.point.getY(), l = s.toBuffer({
      size: 32
    }), v = b.toBuffer({
      size: 32
    }), m;
    if (this.compressed) {
      var x = v[v.length - 1] % 2;
      return x ? m = Q.Buffer.from([3]) : m = Q.Buffer.from([2]), Q.Buffer.concat([m, l]);
    } else
      return m = Q.Buffer.from([4]), Q.Buffer.concat([m, l, v]);
  }, o.prototype._getID = function() {
    return a.sha256ripemd160(this.toBuffer());
  }, o.prototype.toAddress = function(s) {
    var b = M1();
    return b.fromPublicKey(this, s || this.network);
  }, o.prototype.toString = o.prototype.toHex = function() {
    return this.toDER().toString("hex");
  }, o.prototype.inspect = function() {
    return "<PublicKey: " + this.toHex() + (this.compressed ? "" : ", uncompressed") + ">";
  }, c2 = o, c2;
}
var u2, w4;
function Lv() {
  if (w4)
    return u2;
  w4 = 1;
  var e = O0, t = P1, a = V5, r = St(), f = Ni, i = C0, n = Ee, o = Ae, s = function b(l) {
    if (!(this instanceof b))
      return new b(l);
    l && this.set(l);
  };
  return s.prototype.set = function(b) {
    return this.hashbuf = b.hashbuf || this.hashbuf, this.endian = b.endian || this.endian, this.privkey = b.privkey || this.privkey, this.pubkey = b.pubkey || (this.privkey ? this.privkey.publicKey : this.pubkey), this.sig = b.sig || this.sig, this.k = b.k || this.k, this.verified = b.verified || this.verified, this;
  }, s.prototype.privkey2pubkey = function() {
    this.pubkey = this.privkey.toPublicKey();
  }, s.prototype.calci = function() {
    for (var b = 0; b < 4; b++) {
      this.sig.i = b;
      var l;
      try {
        l = this.toPublicKey();
      } catch (v) {
        console.error(v);
        continue;
      }
      if (l.point.eq(this.pubkey.point))
        return this.sig.compressed = this.pubkey.compressed, this;
    }
    throw this.sig.i = void 0, new Error("Unable to find valid recovery factor");
  }, s.fromString = function(b) {
    var l = JSON.parse(b);
    return new s(l);
  }, s.prototype.randomK = function() {
    var b = t.getN(), l;
    do
      l = e.fromBuffer(f.getRandomBuffer(32));
    while (!(l.lt(b) && l.gt(e.Zero)));
    return this.k = l, this;
  }, s.prototype.deterministicK = function(b) {
    n.isUndefined(b) && (b = 0);
    var l = Q.Buffer.alloc(32);
    l.fill(1);
    var v = Q.Buffer.alloc(32);
    v.fill(0);
    var m = this.privkey.bn.toBuffer({
      size: 32
    }), x = this.endian === "little" ? Q.Buffer.from(this.hashbuf).reverse() : this.hashbuf;
    v = i.sha256hmac(Q.Buffer.concat([l, Q.Buffer.from([0]), m, x]), v), l = i.sha256hmac(l, v), v = i.sha256hmac(Q.Buffer.concat([l, Q.Buffer.from([1]), m, x]), v), l = i.sha256hmac(l, v), l = i.sha256hmac(l, v);
    for (var I = e.fromBuffer(l), k = t.getN(), P = 0; P < b || !(I.lt(k) && I.gt(e.Zero)); P++)
      v = i.sha256hmac(Q.Buffer.concat([l, Q.Buffer.from([0])]), v), l = i.sha256hmac(l, v), l = i.sha256hmac(l, v), I = e.fromBuffer(l);
    return this.k = I, this;
  }, s.prototype.toPublicKey = function() {
    var b = this.sig.i;
    o.checkArgument(b === 0 || b === 1 || b === 2 || b === 3, new Error("i must be equal to 0, 1, 2, or 3"));
    var l = e.fromBuffer(this.hashbuf), v = this.sig.r, m = this.sig.s, x = b & 1, I = b >> 1, k = t.getN(), P = t.getG(), M = I ? v.add(k) : v, R = t.fromX(x, M), F = R.mul(k);
    if (!F.isInfinity())
      throw new Error("nR is not a valid curve point");
    var C = l.neg().umod(k), L = v.invm(k), U = R.mul(m).add(P.mul(C)).mul(L), q = r.fromPoint(U, this.sig.compressed);
    return q;
  }, s.prototype.sigError = function() {
    if (!Q.Buffer.isBuffer(this.hashbuf) || this.hashbuf.length !== 32)
      return "hashbuf must be a 32 byte buffer";
    var b = this.sig.r, l = this.sig.s;
    if (!(b.gt(e.Zero) && b.lt(t.getN())) || !(l.gt(e.Zero) && l.lt(t.getN())))
      return "r and s not in range";
    var v = e.fromBuffer(this.hashbuf, this.endian ? {
      endian: this.endian
    } : void 0), m = t.getN(), x = l.invm(m), I = x.mul(v).umod(m), k = x.mul(b).umod(m), P = t.getG().mulAdd(I, this.pubkey.point, k);
    return P.isInfinity() ? "p is infinity" : P.getX().umod(m).cmp(b) !== 0 ? "Invalid signature" : !1;
  }, s.toLowS = function(b) {
    return b.gt(e.fromBuffer(Q.Buffer.from("7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0", "hex"))) && (b = t.getN().sub(b)), b;
  }, s.prototype._findSignature = function(b, l) {
    var v = t.getN(), m = t.getG(), x = 0, I, k, P, M;
    do
      (!this.k || x > 0) && this.deterministicK(x), x++, I = this.k, k = m.mul(I), P = new e(1).mul(k.x.umod(v)), M = I.invm(v).mul(l.add(b.mul(P))).umod(v);
    while (P.cmp(e.Zero) <= 0 || M.cmp(e.Zero) <= 0);
    return M = s.toLowS(M), {
      s: M,
      r: P
    };
  }, s.prototype.sign = function() {
    var b = this.hashbuf, l = this.privkey, v = l.bn;
    o.checkState(b && l && v, new Error("invalid parameters")), o.checkState(Q.Buffer.isBuffer(b) && b.length === 32, new Error("hashbuf must be a 32 byte buffer"));
    var m = e.fromBuffer(b, this.endian ? {
      endian: this.endian
    } : void 0), x = this._findSignature(v, m);
    return x.compressed = this.pubkey.compressed, this.sig = new a(x), this;
  }, s.prototype.signRandomK = function() {
    return this.randomK(), this.sign();
  }, s.prototype.toString = function() {
    var b = {};
    return this.hashbuf && (b.hashbuf = this.hashbuf.toString("hex")), this.privkey && (b.privkey = this.privkey.toString()), this.pubkey && (b.pubkey = this.pubkey.toString()), this.sig && (b.sig = this.sig.toString()), this.k && (b.k = this.k.toString()), JSON.stringify(b);
  }, s.prototype.verify = function() {
    return this.sigError() ? this.verified = !1 : this.verified = !0, this;
  }, s.sign = function(b, l, v) {
    return s().set({
      hashbuf: b,
      endian: v,
      privkey: l
    }).sign().sig;
  }, s.signWithCalcI = function(b, l, v) {
    return s().set({
      hashbuf: b,
      endian: v,
      privkey: l
    }).sign().calci().sig;
  }, s.signRandomK = function(b, l, v) {
    return s().set({
      hashbuf: b,
      endian: v,
      privkey: l
    }).signRandomK().sig;
  }, s.verify = function(b, l, v, m) {
    return s().set({
      hashbuf: b,
      endian: m,
      sig: l,
      pubkey: v
    }).verify().verified;
  }, u2 = s, u2;
}
var Di = { exports: {} }, Pf = Ee, C9 = O0, Li = Tr, dB = z5, cB = C0, Fv = Ae, uB = 486604799, de = function e(t) {
  if (!(this instanceof e))
    return new e(t);
  var a = e._from(t);
  return this.version = a.version, this.prevHash = a.prevHash, this.merkleRoot = a.merkleRoot, this.time = a.time, this.timestamp = a.time, this.bits = a.bits, this.nonce = a.nonce, a.hash && Fv.checkState(
    this.hash === a.hash,
    "Argument object hash property does not match block hash."
  ), this;
};
de._from = function(t) {
  var a = {};
  if (Q.Buffer.isBuffer(t))
    a = de._fromBufferReader(Li(t));
  else if (Pf.isObject(t))
    a = de._fromObject(t);
  else
    throw new TypeError("Unrecognized argument for BlockHeader");
  return a;
};
de._fromObject = function(t) {
  Fv.checkArgument(t, "data is required");
  var a = t.prevHash, r = t.merkleRoot;
  Pf.isString(t.prevHash) && (a = Q.Buffer.from(t.prevHash, "hex").reverse()), Pf.isString(t.merkleRoot) && (r = Q.Buffer.from(t.merkleRoot, "hex").reverse());
  var f = {
    hash: t.hash,
    version: t.version,
    prevHash: a,
    merkleRoot: r,
    time: t.time,
    timestamp: t.time,
    bits: t.bits,
    nonce: t.nonce
  };
  return f;
};
de.fromObject = function(t) {
  var a = de._fromObject(t);
  return new de(a);
};
de.fromRawBlock = function(t) {
  Q.Buffer.isBuffer(t) || (t = Q.Buffer.from(t, "binary"));
  var a = Li(t);
  a.pos = de.Constants.START_OF_HEADER;
  var r = de._fromBufferReader(a);
  return new de(r);
};
de.fromBuffer = function(t) {
  var a = de._fromBufferReader(Li(t));
  return new de(a);
};
de.fromString = function(t) {
  var a = Q.Buffer.from(t, "hex");
  return de.fromBuffer(a);
};
de._fromBufferReader = function(t) {
  var a = {};
  return a.version = t.readInt32LE(), a.prevHash = t.read(32), a.merkleRoot = t.read(32), a.time = t.readUInt32LE(), a.bits = t.readUInt32LE(), a.nonce = t.readUInt32LE(), a;
};
de.fromBufferReader = function(t) {
  var a = de._fromBufferReader(t);
  return new de(a);
};
de.prototype.toObject = de.prototype.toJSON = function() {
  return {
    hash: this.hash,
    version: this.version,
    prevHash: Q.Buffer.from(this.prevHash).reverse().toString("hex"),
    merkleRoot: Q.Buffer.from(this.merkleRoot).reverse().toString("hex"),
    time: this.time,
    bits: this.bits,
    nonce: this.nonce
  };
};
de.prototype.toBuffer = function() {
  return this.toBufferWriter().concat();
};
de.prototype.toString = function() {
  return this.toBuffer().toString("hex");
};
de.prototype.toBufferWriter = function(t) {
  return t || (t = new dB()), t.writeInt32LE(this.version), t.write(this.prevHash), t.write(this.merkleRoot), t.writeUInt32LE(this.time), t.writeUInt32LE(this.bits), t.writeUInt32LE(this.nonce), t;
};
de.prototype.getTargetDifficulty = function(t) {
  t = t || this.bits;
  for (var a = new C9(t & 16777215), r = 8 * ((t >>> 24) - 3); r-- > 0; )
    a = a.mul(new C9(2));
  return a;
};
de.prototype.getDifficulty = function() {
  var t = this.getTargetDifficulty(uB).mul(new C9(Math.pow(10, 8))), a = this.getTargetDifficulty(), r = t.div(a).toString(10), f = r.length - 8;
  return r = r.slice(0, f) + "." + r.slice(f), parseFloat(r);
};
de.prototype._getHash = function() {
  var t = this.toBuffer();
  return cB.sha256sha256(t);
};
var Hv = {
  configurable: !1,
  enumerable: !0,
  /**
   * @returns {string} - The big endian hash buffer of the header
   */
  get: function() {
    return this._id || (this._id = Li(this._getHash()).readReverse().toString("hex")), this._id;
  },
  set: Pf.noop
};
Object.defineProperty(de.prototype, "id", Hv);
Object.defineProperty(de.prototype, "hash", Hv);
de.prototype.validTimestamp = function() {
  var t = Math.round((/* @__PURE__ */ new Date()).getTime() / 1e3);
  return !(this.time > t + de.Constants.MAX_TIME_OFFSET);
};
de.prototype.validProofOfWork = function() {
  var t = new C9(this.id, "hex"), a = this.getTargetDifficulty();
  return !(t.cmp(a) > 0);
};
de.prototype.inspect = function() {
  return "<BlockHeader " + this.id + ">";
};
de.Constants = {
  START_OF_HEADER: 8,
  // Start buffer position in raw block data
  MAX_TIME_OFFSET: 2 * 60 * 60,
  // The max a timestamp can be in the future
  LARGEST_HASH: new C9("10000000000000000000000000000000000000000000000000000000000000000", "hex")
};
var Fi = de, kd = Ee, Uv = Fi, S4 = O0, Od = Tr, lB = z5, pB = C0, Yo = Bi(), $v = Ae;
function ie(e) {
  return this instanceof ie ? (kd.extend(this, ie._from(e)), this) : new ie(e);
}
ie.MAX_BLOCK_SIZE = 128e6;
ie._from = function(t) {
  var a = {};
  if (Q.Buffer.isBuffer(t))
    a = ie._fromBufferReader(Od(t));
  else if (kd.isObject(t))
    a = ie._fromObject(t);
  else
    throw new TypeError("Unrecognized argument for Block");
  return a;
};
ie._fromObject = function(t) {
  var a = [];
  t.transactions.forEach(function(f) {
    f instanceof Yo ? a.push(f) : a.push(Yo().fromObject(f));
  });
  var r = {
    header: Uv.fromObject(t.header),
    transactions: a
  };
  return r;
};
ie.fromObject = function(t) {
  var a = ie._fromObject(t);
  return new ie(a);
};
ie._fromBufferReader = function(t) {
  var a = {};
  $v.checkState(!t.finished(), "No block data received"), a.header = Uv.fromBufferReader(t);
  var r = t.readVarintNum();
  a.transactions = [];
  for (var f = 0; f < r; f++)
    a.transactions.push(Yo().fromBufferReader(t));
  return a;
};
ie.fromBufferReader = function(t) {
  $v.checkArgument(t, "br is required");
  var a = ie._fromBufferReader(t);
  return new ie(a);
};
ie.fromBuffer = function(t) {
  return ie.fromBufferReader(new Od(t));
};
ie.fromString = function(t) {
  var a = Q.Buffer.from(t, "hex");
  return ie.fromBuffer(a);
};
ie.fromRawBlock = function(t) {
  Q.Buffer.isBuffer(t) || (t = Q.Buffer.from(t, "binary"));
  var a = Od(t);
  a.pos = ie.Values.START_OF_BLOCK;
  var r = ie._fromBufferReader(a);
  return new ie(r);
};
ie.prototype.toObject = ie.prototype.toJSON = function() {
  var t = [];
  return this.transactions.forEach(function(a) {
    t.push(a.toObject());
  }), {
    header: this.header.toObject(),
    transactions: t
  };
};
ie.prototype.toBuffer = function() {
  return this.toBufferWriter().concat();
};
ie.prototype.toString = function() {
  return this.toBuffer().toString("hex");
};
ie.prototype.toBufferWriter = function(t) {
  t || (t = new lB()), t.write(this.header.toBuffer()), t.writeVarintNum(this.transactions.length);
  for (var a = 0; a < this.transactions.length; a++)
    this.transactions[a].toBufferWriter(t);
  return t;
};
ie.prototype.getTransactionHashes = function() {
  var t = [];
  if (this.transactions.length === 0)
    return [ie.Values.NULL_HASH];
  for (var a = 0; a < this.transactions.length; a++)
    t.push(this.transactions[a]._getHash());
  return t;
};
ie.prototype.getMerkleTree = function() {
  for (var t = this.getTransactionHashes(), a = 0, r = this.transactions.length; r > 1; r = Math.floor((r + 1) / 2)) {
    for (var f = 0; f < r; f += 2) {
      var i = Math.min(f + 1, r - 1), n = Q.Buffer.concat([t[a + f], t[a + i]]);
      t.push(pB.sha256sha256(n));
    }
    a += r;
  }
  return t;
};
ie.prototype.getMerkleRoot = function() {
  var t = this.getMerkleTree();
  return t[t.length - 1];
};
ie.prototype.validMerkleRoot = function() {
  var t = new S4(this.header.merkleRoot.toString("hex"), "hex"), a = new S4(this.getMerkleRoot().toString("hex"), "hex");
  return t.cmp(a) === 0;
};
ie.prototype._getHash = function() {
  return this.header._getHash();
};
var jv = {
  configurable: !1,
  enumerable: !0,
  /**
   * @returns {string} - The big endian hash buffer of the header
   */
  get: function() {
    return this._id || (this._id = this.header.id), this._id;
  },
  set: kd.noop
};
Object.defineProperty(ie.prototype, "id", jv);
Object.defineProperty(ie.prototype, "hash", jv);
ie.prototype.inspect = function() {
  return "<Block " + this.id + ">";
};
ie.Values = {
  START_OF_BLOCK: 8,
  // Start of block in raw block data
  NULL_HASH: Q.Buffer.from("0000000000000000000000000000000000000000000000000000000000000000", "hex")
};
var hB = ie, pr = Ee, Xo = Fi, Vv = Tr, bB = z5, mB = C0, E4 = Bi(), l2 = L5, hr = Ae;
function Ce(e) {
  if (!(this instanceof Ce))
    return new Ce(e);
  var t = {};
  if (Q.Buffer.isBuffer(e))
    t = Ce._fromBufferReader(Vv(e));
  else if (pr.isObject(e)) {
    var a;
    e.header instanceof Xo ? a = e.header : a = Xo.fromObject(e.header), t = {
      /**
       * @name MerkleBlock#header
       * @type {BlockHeader}
       */
      header: a,
      /**
       * @name MerkleBlock#numTransactions
       * @type {Number}
       */
      numTransactions: e.numTransactions,
      /**
       * @name MerkleBlock#hashes
       * @type {String[]}
       */
      hashes: e.hashes,
      /**
       * @name MerkleBlock#flags
       * @type {Number[]}
       */
      flags: e.flags
    };
  } else
    throw new TypeError("Unrecognized argument for MerkleBlock");
  return pr.extend(this, t), this._flagBitsUsed = 0, this._hashesUsed = 0, this;
}
Ce.fromBuffer = function(t) {
  return Ce.fromBufferReader(Vv(t));
};
Ce.fromBufferReader = function(t) {
  return new Ce(Ce._fromBufferReader(t));
};
Ce.prototype.toBuffer = function() {
  return this.toBufferWriter().concat();
};
Ce.prototype.toBufferWriter = function(t) {
  t || (t = new bB()), t.write(this.header.toBuffer()), t.writeUInt32LE(this.numTransactions), t.writeVarintNum(this.hashes.length);
  for (var a = 0; a < this.hashes.length; a++)
    t.write(Q.Buffer.from(this.hashes[a], "hex"));
  for (t.writeVarintNum(this.flags.length), a = 0; a < this.flags.length; a++)
    t.writeUInt8(this.flags[a]);
  return t;
};
Ce.prototype.toObject = Ce.prototype.toJSON = function() {
  return {
    header: this.header.toObject(),
    numTransactions: this.numTransactions,
    hashes: this.hashes,
    flags: this.flags
  };
};
Ce.prototype.validMerkleTree = function() {
  if (hr.checkState(pr.isArray(this.flags), "MerkleBlock flags is not an array"), hr.checkState(pr.isArray(this.hashes), "MerkleBlock hashes is not an array"), this.hashes.length > this.numTransactions || this.flags.length * 8 < this.hashes.length)
    return !1;
  var t = this._calcTreeHeight(), a = { hashesUsed: 0, flagBitsUsed: 0 }, r = this._traverseMerkleTree(t, 0, a);
  return a.hashesUsed !== this.hashes.length ? !1 : r.equals(this.header.merkleRoot);
};
Ce.prototype.filterdTxsHash = function() {
  throw new Error("filterdTxsHash has been deprecated. use filteredTxsHash.");
};
Ce.prototype.filteredTxsHash = function() {
  if (hr.checkState(pr.isArray(this.flags), "MerkleBlock flags is not an array"), hr.checkState(pr.isArray(this.hashes), "MerkleBlock hashes is not an array"), this.hashes.length > this.numTransactions)
    throw new l2.MerkleBlock.InvalidMerkleTree();
  if (this.flags.length * 8 < this.hashes.length)
    throw new l2.MerkleBlock.InvalidMerkleTree();
  if (this.hashes.length === 1)
    return [];
  var t = this._calcTreeHeight(), a = { hashesUsed: 0, flagBitsUsed: 0 }, r = this._traverseMerkleTree(t, 0, a, !0);
  if (a.hashesUsed !== this.hashes.length)
    throw new l2.MerkleBlock.InvalidMerkleTree();
  return r;
};
Ce.prototype._traverseMerkleTree = function(t, a, r, f) {
  if (r = r || {}, r.txs = r.txs || [], r.flagBitsUsed = r.flagBitsUsed || 0, r.hashesUsed = r.hashesUsed || 0, f = f || !1, r.flagBitsUsed > this.flags.length * 8)
    return null;
  var i = this.flags[r.flagBitsUsed >> 3] >>> (r.flagBitsUsed++ & 7) & 1;
  if (t === 0 || !i) {
    if (r.hashesUsed >= this.hashes.length)
      return null;
    var n = this.hashes[r.hashesUsed++];
    return t === 0 && i && r.txs.push(n), Q.Buffer.from(n, "hex");
  } else {
    var o = this._traverseMerkleTree(t - 1, a * 2, r), s = o;
    return a * 2 + 1 < this._calcTreeWidth(t - 1) && (s = this._traverseMerkleTree(t - 1, a * 2 + 1, r)), f ? r.txs : mB.sha256sha256(Q.Buffer.concat([o, s]));
  }
};
Ce.prototype._calcTreeWidth = function(t) {
  return this.numTransactions + (1 << t) - 1 >> t;
};
Ce.prototype._calcTreeHeight = function() {
  for (var t = 0; this._calcTreeWidth(t) > 1; )
    t++;
  return t;
};
Ce.prototype.hasTransaction = function(t) {
  hr.checkArgument(!pr.isUndefined(t), "tx cannot be undefined"), hr.checkArgument(
    t instanceof E4 || typeof t == "string",
    'Invalid tx given, tx must be a "string" or "Transaction"'
  );
  var a = t;
  t instanceof E4 && (a = Q.Buffer.from(t.id, "hex").reverse().toString("hex"));
  var r = [], f = this._calcTreeHeight();
  return this._traverseMerkleTree(f, 0, { txs: r }), r.indexOf(a) !== -1;
};
Ce._fromBufferReader = function(t) {
  hr.checkState(!t.finished(), "No merkleblock data received");
  var a = {};
  a.header = Xo.fromBufferReader(t), a.numTransactions = t.readUInt32LE();
  var r = t.readVarintNum();
  a.hashes = [];
  for (var f = 0; f < r; f++)
    a.hashes.push(t.read(32).toString("hex"));
  var i = t.readVarintNum();
  for (a.flags = [], f = 0; f < i; f++)
    a.flags.push(t.readUInt8());
  return a;
};
Ce.fromObject = function(t) {
  return new Ce(t);
};
var zv = Ce;
Di.exports = hB;
Di.exports.BlockHeader = Fi;
Di.exports.MerkleBlock = zv;
var vB = Di.exports, p2, T4;
function qv() {
  if (T4)
    return p2;
  T4 = 1;
  var e = Ee, t = Ae, a = O0, r = Pi, f = u6, i = C0, n = Kv(), o = Er, s = P1, b = St(), l = L5, v = l, m = l.HDPublicKey, x = yt(), I = N0;
  function k(P) {
    if (P instanceof k)
      return P;
    if (!(this instanceof k))
      return new k(P);
    if (P)
      if (e.isString(P) || Q.Buffer.isBuffer(P)) {
        var M = k.getSerializedError(P);
        if (M) {
          if (Q.Buffer.isBuffer(P) && !k.getSerializedError(P.toString()))
            return this._buildFromSerialized(P.toString());
          if (M instanceof m.ArgumentIsPrivateExtended)
            return new n(P).hdPublicKey;
          throw M;
        } else
          return this._buildFromSerialized(P);
      } else {
        if (e.isObject(P))
          return P instanceof n ? this._buildFromPrivate(P) : this._buildFromObject(P);
        throw new m.UnrecognizedArgument(P);
      }
    else
      throw new m.MustSupplyArgument();
  }
  return k.fromHDPrivateKey = function(P) {
    return new k(P);
  }, k.isValidPath = function(P) {
    if (e.isString(P)) {
      var M = n._getDerivationIndexes(P);
      return M !== null && e.every(M, k.isValidPath);
    }
    return e.isNumber(P) ? P >= 0 && P < k.Hardened : !1;
  }, k.prototype.derive = function() {
    throw new Error("derive has been deprecated. use deriveChild or, for the old way, deriveNonCompliantChild.");
  }, k.prototype.deriveChild = function(P, M) {
    if (e.isNumber(P))
      return this._deriveWithNumber(P, M);
    if (e.isString(P))
      return this._deriveFromString(P);
    throw new m.InvalidDerivationArgument(P);
  }, k.prototype._deriveWithNumber = function(P, M) {
    if (P >= k.Hardened || M)
      throw new m.InvalidIndexCantDeriveHardened();
    if (P < 0)
      throw new m.InvalidPath(P);
    var R = I.integerAsBuffer(P), F = Q.Buffer.concat([this.publicKey.toBuffer(), R]), C = i.sha512hmac(F, this._buffers.chainCode), L = a.fromBuffer(C.slice(0, 32), { size: 32 }), U = C.slice(32, 64), q;
    try {
      q = b.fromPoint(s.getG().mul(L).add(this.publicKey.point));
    } catch {
      return this._deriveWithNumber(P + 1);
    }
    var Z = new k({
      network: this.network,
      depth: this.depth + 1,
      parentFingerPrint: this.fingerPrint,
      childIndex: P,
      chainCode: U,
      publicKey: q
    });
    return Z;
  }, k.prototype._deriveFromString = function(P) {
    if (e.includes(P, "'"))
      throw new m.InvalidIndexCantDeriveHardened();
    if (!k.isValidPath(P))
      throw new m.InvalidPath(P);
    var M = n._getDerivationIndexes(P), R = M.reduce(function(F, C) {
      return F._deriveWithNumber(C);
    }, this);
    return R;
  }, k.isValidSerialized = function(P, M) {
    return e.isNull(k.getSerializedError(P, M));
  }, k.getSerializedError = function(P, M) {
    if (!(e.isString(P) || Q.Buffer.isBuffer(P)))
      return new m.UnrecognizedArgument("expected buffer or string");
    if (!r.validCharacters(P))
      return new v.InvalidB58Char("(unknown)", P);
    try {
      P = f.decode(P);
    } catch {
      return new v.InvalidB58Checksum(P);
    }
    if (P.length !== k.DataSize)
      return new m.InvalidLength(P);
    if (!e.isUndefined(M)) {
      var R = k._validateNetwork(P, M);
      if (R)
        return R;
    }
    var F = P.readUInt32BE(0);
    return F === o.livenet.xprivkey || F === o.testnet.xprivkey ? new m.ArgumentIsPrivateExtended() : null;
  }, k._validateNetwork = function(P, M) {
    var R = o.get(M);
    if (!R)
      return new v.InvalidNetworkArgument(M);
    var F = P.slice(k.VersionStart, k.VersionEnd);
    return F.readUInt32BE(0) !== R.xpubkey ? new v.InvalidNetwork(F) : null;
  }, k.prototype._buildFromPrivate = function(P) {
    var M = e.clone(P._buffers), R = s.getG().mul(a.fromBuffer(M.privateKey));
    return M.publicKey = s.pointToCompressed(R), M.version = I.integerAsBuffer(o.get(M.version.readUInt32BE(0)).xpubkey), M.privateKey = void 0, M.checksum = void 0, M.xprivkey = void 0, this._buildFromBuffers(M);
  }, k.prototype._buildFromObject = function(P) {
    var M = {
      version: P.network ? I.integerAsBuffer(o.get(P.network).xpubkey) : P.version,
      depth: e.isNumber(P.depth) ? Q.Buffer.from([P.depth & 255]) : P.depth,
      parentFingerPrint: e.isNumber(P.parentFingerPrint) ? I.integerAsBuffer(P.parentFingerPrint) : P.parentFingerPrint,
      childIndex: e.isNumber(P.childIndex) ? I.integerAsBuffer(P.childIndex) : P.childIndex,
      chainCode: e.isString(P.chainCode) ? Q.Buffer.from(P.chainCode, "hex") : P.chainCode,
      publicKey: e.isString(P.publicKey) ? Q.Buffer.from(P.publicKey, "hex") : Q.Buffer.isBuffer(P.publicKey) ? P.publicKey : P.publicKey.toBuffer(),
      checksum: e.isNumber(P.checksum) ? I.integerAsBuffer(P.checksum) : P.checksum
    };
    return this._buildFromBuffers(M);
  }, k.prototype._buildFromSerialized = function(P) {
    var M = f.decode(P), R = {
      version: M.slice(k.VersionStart, k.VersionEnd),
      depth: M.slice(k.DepthStart, k.DepthEnd),
      parentFingerPrint: M.slice(
        k.ParentFingerPrintStart,
        k.ParentFingerPrintEnd
      ),
      childIndex: M.slice(k.ChildIndexStart, k.ChildIndexEnd),
      chainCode: M.slice(k.ChainCodeStart, k.ChainCodeEnd),
      publicKey: M.slice(k.PublicKeyStart, k.PublicKeyEnd),
      checksum: M.slice(k.ChecksumStart, k.ChecksumEnd),
      xpubkey: P
    };
    return this._buildFromBuffers(R);
  }, k.prototype._buildFromBuffers = function(P) {
    k._validateBufferArguments(P), I.defineImmutable(this, {
      _buffers: P
    });
    var M = [
      P.version,
      P.depth,
      P.parentFingerPrint,
      P.childIndex,
      P.chainCode,
      P.publicKey
    ], R = Q.Buffer.concat(M), F = f.checksum(R);
    if (!P.checksum || !P.checksum.length)
      P.checksum = F;
    else if (P.checksum.toString("hex") !== F.toString("hex"))
      throw new v.InvalidB58Checksum(R, F);
    var C = o.get(P.version.readUInt32BE(0)), L;
    L = f.encode(Q.Buffer.concat(M)), P.xpubkey = Q.Buffer.from(L);
    var U = new b(P.publicKey, { network: C }), q = k.ParentFingerPrintSize, Z = i.sha256ripemd160(U.toBuffer()).slice(0, q);
    return I.defineImmutable(this, {
      xpubkey: L,
      network: C,
      depth: P.depth[0],
      publicKey: U,
      fingerPrint: Z
    }), this;
  }, k._validateBufferArguments = function(P) {
    var M = function(R, F) {
      var C = P[R];
      x(Q.Buffer.isBuffer(C), R + " argument is not a buffer, it's " + typeof C), x(
        C.length === F,
        R + " has not the expected size: found " + C.length + ", expected " + F
      );
    };
    M("version", k.VersionSize), M("depth", k.DepthSize), M("parentFingerPrint", k.ParentFingerPrintSize), M("childIndex", k.ChildIndexSize), M("chainCode", k.ChainCodeSize), M("publicKey", k.PublicKeySize), P.checksum && P.checksum.length && M("checksum", k.CheckSumSize);
  }, k.fromString = function(P) {
    return t.checkArgument(e.isString(P), "No valid string was provided"), new k(P);
  }, k.fromObject = function(P) {
    return t.checkArgument(e.isObject(P), "No valid argument was provided"), new k(P);
  }, k.prototype.toString = function() {
    return this.xpubkey;
  }, k.prototype.inspect = function() {
    return "<HDPublicKey: " + this.xpubkey + ">";
  }, k.prototype.toObject = k.prototype.toJSON = function() {
    return {
      network: o.get(this._buffers.version.readUInt32BE(0)).name,
      depth: this._buffers.depth[0],
      fingerPrint: this.fingerPrint.readUInt32BE(0),
      parentFingerPrint: this._buffers.parentFingerPrint.readUInt32BE(0),
      childIndex: this._buffers.childIndex.readUInt32BE(0),
      chainCode: this._buffers.chainCode.toString("hex"),
      publicKey: this.publicKey.toString(),
      checksum: this._buffers.checksum.readUInt32BE(0),
      xpubkey: this.xpubkey
    };
  }, k.fromBuffer = function(P) {
    return new k(P);
  }, k.fromHex = function(P) {
    return k.fromBuffer(Q.Buffer.from(P, "hex"));
  }, k.prototype.toBuffer = function() {
    return Q.Buffer.from(this._buffers.xpubkey);
  }, k.prototype.toHex = function() {
    return this.toBuffer().toString("hex");
  }, k.Hardened = 2147483648, k.RootElementAlias = ["m", "M"], k.VersionSize = 4, k.DepthSize = 1, k.ParentFingerPrintSize = 4, k.ChildIndexSize = 4, k.ChainCodeSize = 32, k.PublicKeySize = 33, k.CheckSumSize = 4, k.DataSize = 78, k.SerializedByteSize = 82, k.VersionStart = 0, k.VersionEnd = k.VersionStart + k.VersionSize, k.DepthStart = k.VersionEnd, k.DepthEnd = k.DepthStart + k.DepthSize, k.ParentFingerPrintStart = k.DepthEnd, k.ParentFingerPrintEnd = k.ParentFingerPrintStart + k.ParentFingerPrintSize, k.ChildIndexStart = k.ParentFingerPrintEnd, k.ChildIndexEnd = k.ChildIndexStart + k.ChildIndexSize, k.ChainCodeStart = k.ChildIndexEnd, k.ChainCodeEnd = k.ChainCodeStart + k.ChainCodeSize, k.PublicKeyStart = k.ChainCodeEnd, k.PublicKeyEnd = k.PublicKeyStart + k.PublicKeySize, k.ChecksumStart = k.PublicKeyEnd, k.ChecksumEnd = k.ChecksumStart + k.CheckSumSize, x(k.PublicKeyEnd === k.DataSize), x(k.ChecksumEnd === k.SerializedByteSize), p2 = k, p2;
}
var h2, A4;
function Kv() {
  if (A4)
    return h2;
  A4 = 1;
  var e = yt(), t = Q, a = Ee, r = Ae, f = O0, i = Pi, n = u6, o = C0, s = Er, b = P1, l = Ci(), v = Ni, m = L5, x = m.HDPrivateKey, I = N0, k = 128, P = 1 / 8, M = 512;
  function R(F) {
    if (F instanceof R)
      return F;
    if (!(this instanceof R))
      return new R(F);
    if (!F)
      return this._generateRandomly();
    if (s.get(F))
      return this._generateRandomly(F);
    if (a.isString(F) || Q.Buffer.isBuffer(F))
      if (R.isValidSerialized(F))
        this._buildFromSerialized(F);
      else if (I.isValidJSON(F))
        this._buildFromJSON(F);
      else if (Q.Buffer.isBuffer(F) && R.isValidSerialized(F.toString()))
        this._buildFromSerialized(F.toString());
      else
        throw R.getSerializedError(F);
    else if (a.isObject(F))
      this._buildFromObject(F);
    else
      throw new x.UnrecognizedArgument(F);
  }
  return R.fromRandom = function() {
    return new R();
  }, R.isValidPath = function(F, C) {
    if (a.isString(F)) {
      var L = R._getDerivationIndexes(F);
      return L !== null && a.every(L, R.isValidPath);
    }
    return a.isNumber(F) ? (F < R.Hardened && C === !0 && (F += R.Hardened), F >= 0 && F < R.MaxIndex) : !1;
  }, R._getDerivationIndexes = function(F) {
    var C = F.split("/");
    if (a.includes(R.RootElementAlias, F))
      return [];
    if (!a.includes(R.RootElementAlias, C[0]))
      return null;
    var L = C.slice(1).map(function(U) {
      var q = U.slice(-1) === "'";
      if (q && (U = U.slice(0, -1)), !U || U[0] === "-")
        return NaN;
      var Z = +U;
      return q && (Z += R.Hardened), Z;
    });
    return a.some(L, isNaN) ? null : L;
  }, R.prototype.derive = function() {
    throw new Error("derive has been deprecated. use deriveChild or, for the old way, deriveNonCompliantChild.");
  }, R.prototype.deriveChild = function(F, C) {
    if (a.isNumber(F))
      return this._deriveWithNumber(F, C);
    if (a.isString(F))
      return this._deriveFromString(F);
    throw new x.InvalidDerivationArgument(F);
  }, R.prototype.deriveNonCompliantChild = function(F, C) {
    if (a.isNumber(F))
      return this._deriveWithNumber(F, C, !0);
    if (a.isString(F))
      return this._deriveFromString(F, !0);
    throw new x.InvalidDerivationArgument(F);
  }, R.prototype._deriveWithNumber = function(F, C, L) {
    if (!R.isValidPath(F, C))
      throw new x.InvalidPath(F);
    C = F >= R.Hardened ? !0 : C, F < R.Hardened && C === !0 && (F += R.Hardened);
    var U = I.integerAsBuffer(F), q;
    if (C && L) {
      var Z = this.privateKey.bn.toBuffer();
      q = Q.Buffer.concat([t.Buffer.from([0]), Z, U]);
    } else if (C) {
      var z = this.privateKey.bn.toBuffer({ size: 32 });
      e(z.length === 32, "length of private key buffer is expected to be 32 bytes"), q = Q.Buffer.concat([t.Buffer.from([0]), z, U]);
    } else
      q = Q.Buffer.concat([this.publicKey.toBuffer(), U]);
    var G = o.sha512hmac(q, this._buffers.chainCode), O = f.fromBuffer(G.slice(0, 32), {
      size: 32
    }), u = G.slice(32, 64), p = O.add(this.privateKey.toBigNumber()).umod(b.getN()).toBuffer({
      size: 32
    });
    if (!l.isValid(p))
      return this._deriveWithNumber(F + 1, null, L);
    var d = new R({
      network: this.network,
      depth: this.depth + 1,
      parentFingerPrint: this.fingerPrint,
      childIndex: F,
      chainCode: u,
      privateKey: p
    });
    return d;
  }, R.prototype._deriveFromString = function(F, C) {
    if (!R.isValidPath(F))
      throw new x.InvalidPath(F);
    var L = R._getDerivationIndexes(F), U = L.reduce(function(q, Z) {
      return q._deriveWithNumber(Z, null, C);
    }, this);
    return U;
  }, R.isValidSerialized = function(F, C) {
    return !R.getSerializedError(F, C);
  }, R.getSerializedError = function(F, C) {
    if (!(a.isString(F) || Q.Buffer.isBuffer(F)))
      return new x.UnrecognizedArgument("Expected string or buffer");
    if (!i.validCharacters(F))
      return new m.InvalidB58Char("(unknown)", F);
    try {
      F = n.decode(F);
    } catch {
      return new m.InvalidB58Checksum(F);
    }
    if (F.length !== R.DataLength)
      return new x.InvalidLength(F);
    if (!a.isUndefined(C)) {
      var L = R._validateNetwork(F, C);
      if (L)
        return L;
    }
    return null;
  }, R._validateNetwork = function(F, C) {
    var L = s.get(C);
    if (!L)
      return new m.InvalidNetworkArgument(C);
    var U = F.slice(0, 4);
    return U.readUInt32BE(0) !== L.xprivkey ? new m.InvalidNetwork(U) : null;
  }, R.fromString = function(F) {
    return r.checkArgument(a.isString(F), "No valid string was provided"), new R(F);
  }, R.fromObject = function(F) {
    return r.checkArgument(a.isObject(F), "No valid argument was provided"), new R(F);
  }, R.prototype._buildFromJSON = function(F) {
    return this._buildFromObject(JSON.parse(F));
  }, R.prototype._buildFromObject = function(F) {
    var C = {
      version: F.network ? I.integerAsBuffer(s.get(F.network).xprivkey) : F.version,
      depth: a.isNumber(F.depth) ? Q.Buffer.from([F.depth & 255]) : F.depth,
      parentFingerPrint: a.isNumber(F.parentFingerPrint) ? I.integerAsBuffer(F.parentFingerPrint) : F.parentFingerPrint,
      childIndex: a.isNumber(F.childIndex) ? I.integerAsBuffer(F.childIndex) : F.childIndex,
      chainCode: a.isString(F.chainCode) ? Q.Buffer.from(F.chainCode, "hex") : F.chainCode,
      privateKey: a.isString(F.privateKey) && I.isHexa(F.privateKey) ? Q.Buffer.from(F.privateKey, "hex") : F.privateKey,
      checksum: F.checksum ? F.checksum.length ? F.checksum : I.integerAsBuffer(F.checksum) : void 0
    };
    return this._buildFromBuffers(C);
  }, R.prototype._buildFromSerialized = function(F) {
    var C = n.decode(F), L = {
      version: C.slice(R.VersionStart, R.VersionEnd),
      depth: C.slice(R.DepthStart, R.DepthEnd),
      parentFingerPrint: C.slice(
        R.ParentFingerPrintStart,
        R.ParentFingerPrintEnd
      ),
      childIndex: C.slice(R.ChildIndexStart, R.ChildIndexEnd),
      chainCode: C.slice(R.ChainCodeStart, R.ChainCodeEnd),
      privateKey: C.slice(R.PrivateKeyStart, R.PrivateKeyEnd),
      checksum: C.slice(R.ChecksumStart, R.ChecksumEnd),
      xprivkey: F
    };
    return this._buildFromBuffers(L);
  }, R.prototype._generateRandomly = function(F) {
    return R.fromSeed(v.getRandomBuffer(64), F);
  }, R.fromSeed = function(F, C) {
    if (I.isHexaString(F) && (F = Q.Buffer.from(F, "hex")), !Q.Buffer.isBuffer(F))
      throw new x.InvalidEntropyArgument(F);
    if (F.length < k * P)
      throw new x.InvalidEntropyArgument.NotEnoughEntropy(F);
    if (F.length > M * P)
      throw new x.InvalidEntropyArgument.TooMuchEntropy(F);
    var L = o.sha512hmac(F, t.Buffer.from("Bitcoin seed"));
    return new R({
      network: s.get(C) || s.defaultNetwork,
      depth: 0,
      parentFingerPrint: 0,
      childIndex: 0,
      privateKey: L.slice(0, 32),
      chainCode: L.slice(32, 64)
    });
  }, R.prototype._calcHDPublicKey = function() {
    if (!this._hdPublicKey) {
      var F = qv();
      this._hdPublicKey = new F(this);
    }
  }, R.prototype._buildFromBuffers = function(F) {
    R._validateBufferArguments(F), I.defineImmutable(this, {
      _buffers: F
    });
    var C = [
      F.version,
      F.depth,
      F.parentFingerPrint,
      F.childIndex,
      F.chainCode,
      Q.Buffer.alloc(1),
      F.privateKey
    ], L = t.Buffer.concat(C);
    if (!F.checksum || !F.checksum.length)
      F.checksum = n.checksum(L);
    else if (F.checksum.toString() !== n.checksum(L).toString())
      throw new m.InvalidB58Checksum(L);
    var U = s.get(F.version.readUInt32BE(0)), q;
    q = n.encode(t.Buffer.concat(C)), F.xprivkey = Q.Buffer.from(q);
    var Z = new l(f.fromBuffer(F.privateKey), U), z = Z.toPublicKey(), G = R.ParentFingerPrintSize, O = o.sha256ripemd160(z.toBuffer()).slice(0, G);
    return I.defineImmutable(this, {
      xprivkey: q,
      network: U,
      depth: F.depth[0],
      privateKey: Z,
      publicKey: z,
      fingerPrint: O
    }), this._hdPublicKey = null, Object.defineProperty(this, "hdPublicKey", {
      configurable: !1,
      enumerable: !0,
      get: function() {
        return this._calcHDPublicKey(), this._hdPublicKey;
      }
    }), Object.defineProperty(this, "xpubkey", {
      configurable: !1,
      enumerable: !0,
      get: function() {
        return this._calcHDPublicKey(), this._hdPublicKey.xpubkey;
      }
    }), this;
  }, R._validateBufferArguments = function(F) {
    var C = function(L, U) {
      var q = F[L];
      e(Q.Buffer.isBuffer(q), L + " argument is not a buffer"), e(
        q.length === U,
        L + " has not the expected size: found " + q.length + ", expected " + U
      );
    };
    C("version", R.VersionSize), C("depth", R.DepthSize), C("parentFingerPrint", R.ParentFingerPrintSize), C("childIndex", R.ChildIndexSize), C("chainCode", R.ChainCodeSize), C("privateKey", R.PrivateKeySize), F.checksum && F.checksum.length && C("checksum", R.CheckSumSize);
  }, R.prototype.toString = function() {
    return this.xprivkey;
  }, R.prototype.inspect = function() {
    return "<HDPrivateKey: " + this.xprivkey + ">";
  }, R.prototype.toObject = R.prototype.toJSON = function() {
    return {
      network: s.get(this._buffers.version.readUInt32BE(0), "xprivkey").name,
      depth: this._buffers.depth[0],
      fingerPrint: this.fingerPrint.readUInt32BE(0),
      parentFingerPrint: this._buffers.parentFingerPrint.readUInt32BE(0),
      childIndex: this._buffers.childIndex.readUInt32BE(0),
      chainCode: this._buffers.chainCode.toString("hex"),
      privateKey: this.privateKey.toBuffer().toString("hex"),
      checksum: this._buffers.checksum.readUInt32BE(0),
      xprivkey: this.xprivkey
    };
  }, R.fromBuffer = function(F) {
    return new R(F.toString());
  }, R.fromHex = function(F) {
    return R.fromBuffer(Q.Buffer.from(F, "hex"));
  }, R.prototype.toBuffer = function() {
    return Q.Buffer.from(this.toString());
  }, R.prototype.toHex = function() {
    return this.toBuffer().toString("hex");
  }, R.DefaultDepth = 0, R.DefaultFingerprint = 0, R.DefaultChildIndex = 0, R.Hardened = 2147483648, R.MaxIndex = 2 * R.Hardened, R.RootElementAlias = ["m", "M", "m'", "M'"], R.VersionSize = 4, R.DepthSize = 1, R.ParentFingerPrintSize = 4, R.ChildIndexSize = 4, R.ChainCodeSize = 32, R.PrivateKeySize = 32, R.CheckSumSize = 4, R.DataLength = 78, R.SerializedByteSize = 82, R.VersionStart = 0, R.VersionEnd = R.VersionStart + R.VersionSize, R.DepthStart = R.VersionEnd, R.DepthEnd = R.DepthStart + R.DepthSize, R.ParentFingerPrintStart = R.DepthEnd, R.ParentFingerPrintEnd = R.ParentFingerPrintStart + R.ParentFingerPrintSize, R.ChildIndexStart = R.ParentFingerPrintEnd, R.ChildIndexEnd = R.ChildIndexStart + R.ChildIndexSize, R.ChainCodeStart = R.ChildIndexEnd, R.ChainCodeEnd = R.ChainCodeStart + R.ChainCodeSize, R.PrivateKeyStart = R.ChainCodeEnd + 1, R.PrivateKeyEnd = R.PrivateKeyStart + R.PrivateKeySize, R.ChecksumStart = R.PrivateKeyEnd, R.ChecksumEnd = R.ChecksumStart + R.CheckSumSize, e(R.ChecksumEnd === R.SerializedByteSize), h2 = R, h2;
}
(function(e) {
  var t = e.exports;
  t.version = "v" + Mw.version, t.versionGuard = function(a) {
    if (a !== void 0) {
      var r = `
      More than one instance of mvc found.
      Please make sure to require mvc and check that submodules do
      not also include their own mvc dependency.`;
      console.warn(r);
    }
  }, t.versionGuard(I7._mvc), I7._mvc = t.version, t.crypto = {}, t.crypto.BN = O0, t.crypto.ECDSA = Lv(), t.crypto.Hash = C0, t.crypto.Random = Ni, t.crypto.Point = P1, t.crypto.Signature = V5, t.encoding = {}, t.encoding.Base58 = Pi, t.encoding.Base58Check = u6, t.encoding.BufferReader = Tr, t.encoding.BufferWriter = z5, t.encoding.Varint = l6, t.util = {}, t.util.js = N0, t.util.preconditions = Ae, t.errors = L5, t.Address = M1(), t.Block = vB, t.MerkleBlock = zv, t.BlockHeader = Fi, t.HDPrivateKey = Kv(), t.HDPublicKey = qv(), t.Networks = Er, t.Opcode = Ri, t.PrivateKey = Ci(), t.PublicKey = St(), t.Script = K5(), t.Transaction = Bi(), t.deps = {}, t.deps.bnjs = lh, t.deps.bs58 = yv, t.deps.Buffer = Q.Buffer, t.deps.elliptic = s6(), t.deps._ = Ee, t.Transaction.sighash = Na();
})(uh);
var ta = uh.exports, Gv = { exports: {} };
/*! MIT License. Copyright 2015-2018 Richard Moore <me@ricmoo.com>. See LICENSE.txt. */
(function(e, t) {
  (function(a) {
    function r(A) {
      return parseInt(A) === A;
    }
    function f(A) {
      if (!r(A.length))
        return !1;
      for (var h = 0; h < A.length; h++)
        if (!r(A[h]) || A[h] < 0 || A[h] > 255)
          return !1;
      return !0;
    }
    function i(A, h) {
      if (A.buffer && A.name === "Uint8Array")
        return h && (A.slice ? A = A.slice() : A = Array.prototype.slice.call(A)), A;
      if (Array.isArray(A)) {
        if (!f(A))
          throw new Error("Array contains invalid value: " + A);
        return new Uint8Array(A);
      }
      if (r(A.length) && f(A))
        return new Uint8Array(A);
      throw new Error("unsupported array-like object");
    }
    function n(A) {
      return new Uint8Array(A);
    }
    function o(A, h, N, Y, t7) {
      (Y != null || t7 != null) && (A.slice ? A = A.slice(Y, t7) : A = Array.prototype.slice.call(A, Y, t7)), h.set(A, N);
    }
    var s = function() {
      function A(N) {
        var Y = [], t7 = 0;
        for (N = encodeURI(N); t7 < N.length; ) {
          var H = N.charCodeAt(t7++);
          H === 37 ? (Y.push(parseInt(N.substr(t7, 2), 16)), t7 += 2) : Y.push(H);
        }
        return i(Y);
      }
      function h(N) {
        for (var Y = [], t7 = 0; t7 < N.length; ) {
          var H = N[t7];
          H < 128 ? (Y.push(String.fromCharCode(H)), t7++) : H > 191 && H < 224 ? (Y.push(String.fromCharCode((H & 31) << 6 | N[t7 + 1] & 63)), t7 += 2) : (Y.push(String.fromCharCode((H & 15) << 12 | (N[t7 + 1] & 63) << 6 | N[t7 + 2] & 63)), t7 += 3);
        }
        return Y.join("");
      }
      return {
        toBytes: A,
        fromBytes: h
      };
    }(), b = function() {
      function A(Y) {
        for (var t7 = [], H = 0; H < Y.length; H += 2)
          t7.push(parseInt(Y.substr(H, 2), 16));
        return t7;
      }
      var h = "0123456789abcdef";
      function N(Y) {
        for (var t7 = [], H = 0; H < Y.length; H++) {
          var $ = Y[H];
          t7.push(h[($ & 240) >> 4] + h[$ & 15]);
        }
        return t7.join("");
      }
      return {
        toBytes: A,
        fromBytes: N
      };
    }(), l = { 16: 10, 24: 12, 32: 14 }, v = [1, 2, 4, 8, 16, 32, 64, 128, 27, 54, 108, 216, 171, 77, 154, 47, 94, 188, 99, 198, 151, 53, 106, 212, 179, 125, 250, 239, 197, 145], m = [99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], x = [82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125], I = [3328402341, 4168907908, 4000806809, 4135287693, 4294111757, 3597364157, 3731845041, 2445657428, 1613770832, 33620227, 3462883241, 1445669757, 3892248089, 3050821474, 1303096294, 3967186586, 2412431941, 528646813, 2311702848, 4202528135, 4026202645, 2992200171, 2387036105, 4226871307, 1101901292, 3017069671, 1604494077, 1169141738, 597466303, 1403299063, 3832705686, 2613100635, 1974974402, 3791519004, 1033081774, 1277568618, 1815492186, 2118074177, 4126668546, 2211236943, 1748251740, 1369810420, 3521504564, 4193382664, 3799085459, 2883115123, 1647391059, 706024767, 134480908, 2512897874, 1176707941, 2646852446, 806885416, 932615841, 168101135, 798661301, 235341577, 605164086, 461406363, 3756188221, 3454790438, 1311188841, 2142417613, 3933566367, 302582043, 495158174, 1479289972, 874125870, 907746093, 3698224818, 3025820398, 1537253627, 2756858614, 1983593293, 3084310113, 2108928974, 1378429307, 3722699582, 1580150641, 327451799, 2790478837, 3117535592, 0, 3253595436, 1075847264, 3825007647, 2041688520, 3059440621, 3563743934, 2378943302, 1740553945, 1916352843, 2487896798, 2555137236, 2958579944, 2244988746, 3151024235, 3320835882, 1336584933, 3992714006, 2252555205, 2588757463, 1714631509, 293963156, 2319795663, 3925473552, 67240454, 4269768577, 2689618160, 2017213508, 631218106, 1269344483, 2723238387, 1571005438, 2151694528, 93294474, 1066570413, 563977660, 1882732616, 4059428100, 1673313503, 2008463041, 2950355573, 1109467491, 537923632, 3858759450, 4260623118, 3218264685, 2177748300, 403442708, 638784309, 3287084079, 3193921505, 899127202, 2286175436, 773265209, 2479146071, 1437050866, 4236148354, 2050833735, 3362022572, 3126681063, 840505643, 3866325909, 3227541664, 427917720, 2655997905, 2749160575, 1143087718, 1412049534, 999329963, 193497219, 2353415882, 3354324521, 1807268051, 672404540, 2816401017, 3160301282, 369822493, 2916866934, 3688947771, 1681011286, 1949973070, 336202270, 2454276571, 201721354, 1210328172, 3093060836, 2680341085, 3184776046, 1135389935, 3294782118, 965841320, 831886756, 3554993207, 4068047243, 3588745010, 2345191491, 1849112409, 3664604599, 26054028, 2983581028, 2622377682, 1235855840, 3630984372, 2891339514, 4092916743, 3488279077, 3395642799, 4101667470, 1202630377, 268961816, 1874508501, 4034427016, 1243948399, 1546530418, 941366308, 1470539505, 1941222599, 2546386513, 3421038627, 2715671932, 3899946140, 1042226977, 2521517021, 1639824860, 227249030, 260737669, 3765465232, 2084453954, 1907733956, 3429263018, 2420656344, 100860677, 4160157185, 470683154, 3261161891, 1781871967, 2924959737, 1773779408, 394692241, 2579611992, 974986535, 664706745, 3655459128, 3958962195, 731420851, 571543859, 3530123707, 2849626480, 126783113, 865375399, 765172662, 1008606754, 361203602, 3387549984, 2278477385, 2857719295, 1344809080, 2782912378, 59542671, 1503764984, 160008576, 437062935, 1707065306, 3622233649, 2218934982, 3496503480, 2185314755, 697932208, 1512910199, 504303377, 2075177163, 2824099068, 1841019862, 739644986], k = [2781242211, 2230877308, 2582542199, 2381740923, 234877682, 3184946027, 2984144751, 1418839493, 1348481072, 50462977, 2848876391, 2102799147, 434634494, 1656084439, 3863849899, 2599188086, 1167051466, 2636087938, 1082771913, 2281340285, 368048890, 3954334041, 3381544775, 201060592, 3963727277, 1739838676, 4250903202, 3930435503, 3206782108, 4149453988, 2531553906, 1536934080, 3262494647, 484572669, 2923271059, 1783375398, 1517041206, 1098792767, 49674231, 1334037708, 1550332980, 4098991525, 886171109, 150598129, 2481090929, 1940642008, 1398944049, 1059722517, 201851908, 1385547719, 1699095331, 1587397571, 674240536, 2704774806, 252314885, 3039795866, 151914247, 908333586, 2602270848, 1038082786, 651029483, 1766729511, 3447698098, 2682942837, 454166793, 2652734339, 1951935532, 775166490, 758520603, 3000790638, 4004797018, 4217086112, 4137964114, 1299594043, 1639438038, 3464344499, 2068982057, 1054729187, 1901997871, 2534638724, 4121318227, 1757008337, 0, 750906861, 1614815264, 535035132, 3363418545, 3988151131, 3201591914, 1183697867, 3647454910, 1265776953, 3734260298, 3566750796, 3903871064, 1250283471, 1807470800, 717615087, 3847203498, 384695291, 3313910595, 3617213773, 1432761139, 2484176261, 3481945413, 283769337, 100925954, 2180939647, 4037038160, 1148730428, 3123027871, 3813386408, 4087501137, 4267549603, 3229630528, 2315620239, 2906624658, 3156319645, 1215313976, 82966005, 3747855548, 3245848246, 1974459098, 1665278241, 807407632, 451280895, 251524083, 1841287890, 1283575245, 337120268, 891687699, 801369324, 3787349855, 2721421207, 3431482436, 959321879, 1469301956, 4065699751, 2197585534, 1199193405, 2898814052, 3887750493, 724703513, 2514908019, 2696962144, 2551808385, 3516813135, 2141445340, 1715741218, 2119445034, 2872807568, 2198571144, 3398190662, 700968686, 3547052216, 1009259540, 2041044702, 3803995742, 487983883, 1991105499, 1004265696, 1449407026, 1316239930, 504629770, 3683797321, 168560134, 1816667172, 3837287516, 1570751170, 1857934291, 4014189740, 2797888098, 2822345105, 2754712981, 936633572, 2347923833, 852879335, 1133234376, 1500395319, 3084545389, 2348912013, 1689376213, 3533459022, 3762923945, 3034082412, 4205598294, 133428468, 634383082, 2949277029, 2398386810, 3913789102, 403703816, 3580869306, 2297460856, 1867130149, 1918643758, 607656988, 4049053350, 3346248884, 1368901318, 600565992, 2090982877, 2632479860, 557719327, 3717614411, 3697393085, 2249034635, 2232388234, 2430627952, 1115438654, 3295786421, 2865522278, 3633334344, 84280067, 33027830, 303828494, 2747425121, 1600795957, 4188952407, 3496589753, 2434238086, 1486471617, 658119965, 3106381470, 953803233, 334231800, 3005978776, 857870609, 3151128937, 1890179545, 2298973838, 2805175444, 3056442267, 574365214, 2450884487, 550103529, 1233637070, 4289353045, 2018519080, 2057691103, 2399374476, 4166623649, 2148108681, 387583245, 3664101311, 836232934, 3330556482, 3100665960, 3280093505, 2955516313, 2002398509, 287182607, 3413881008, 4238890068, 3597515707, 975967766], P = [1671808611, 2089089148, 2006576759, 2072901243, 4061003762, 1807603307, 1873927791, 3310653893, 810573872, 16974337, 1739181671, 729634347, 4263110654, 3613570519, 2883997099, 1989864566, 3393556426, 2191335298, 3376449993, 2106063485, 4195741690, 1508618841, 1204391495, 4027317232, 2917941677, 3563566036, 2734514082, 2951366063, 2629772188, 2767672228, 1922491506, 3227229120, 3082974647, 4246528509, 2477669779, 644500518, 911895606, 1061256767, 4144166391, 3427763148, 878471220, 2784252325, 3845444069, 4043897329, 1905517169, 3631459288, 827548209, 356461077, 67897348, 3344078279, 593839651, 3277757891, 405286936, 2527147926, 84871685, 2595565466, 118033927, 305538066, 2157648768, 3795705826, 3945188843, 661212711, 2999812018, 1973414517, 152769033, 2208177539, 745822252, 439235610, 455947803, 1857215598, 1525593178, 2700827552, 1391895634, 994932283, 3596728278, 3016654259, 695947817, 3812548067, 795958831, 2224493444, 1408607827, 3513301457, 0, 3979133421, 543178784, 4229948412, 2982705585, 1542305371, 1790891114, 3410398667, 3201918910, 961245753, 1256100938, 1289001036, 1491644504, 3477767631, 3496721360, 4012557807, 2867154858, 4212583931, 1137018435, 1305975373, 861234739, 2241073541, 1171229253, 4178635257, 33948674, 2139225727, 1357946960, 1011120188, 2679776671, 2833468328, 1374921297, 2751356323, 1086357568, 2408187279, 2460827538, 2646352285, 944271416, 4110742005, 3168756668, 3066132406, 3665145818, 560153121, 271589392, 4279952895, 4077846003, 3530407890, 3444343245, 202643468, 322250259, 3962553324, 1608629855, 2543990167, 1154254916, 389623319, 3294073796, 2817676711, 2122513534, 1028094525, 1689045092, 1575467613, 422261273, 1939203699, 1621147744, 2174228865, 1339137615, 3699352540, 577127458, 712922154, 2427141008, 2290289544, 1187679302, 3995715566, 3100863416, 339486740, 3732514782, 1591917662, 186455563, 3681988059, 3762019296, 844522546, 978220090, 169743370, 1239126601, 101321734, 611076132, 1558493276, 3260915650, 3547250131, 2901361580, 1655096418, 2443721105, 2510565781, 3828863972, 2039214713, 3878868455, 3359869896, 928607799, 1840765549, 2374762893, 3580146133, 1322425422, 2850048425, 1823791212, 1459268694, 4094161908, 3928346602, 1706019429, 2056189050, 2934523822, 135794696, 3134549946, 2022240376, 628050469, 779246638, 472135708, 2800834470, 3032970164, 3327236038, 3894660072, 3715932637, 1956440180, 522272287, 1272813131, 3185336765, 2340818315, 2323976074, 1888542832, 1044544574, 3049550261, 1722469478, 1222152264, 50660867, 4127324150, 236067854, 1638122081, 895445557, 1475980887, 3117443513, 2257655686, 3243809217, 489110045, 2662934430, 3778599393, 4162055160, 2561878936, 288563729, 1773916777, 3648039385, 2391345038, 2493985684, 2612407707, 505560094, 2274497927, 3911240169, 3460925390, 1442818645, 678973480, 3749357023, 2358182796, 2717407649, 2306869641, 219617805, 3218761151, 3862026214, 1120306242, 1756942440, 1103331905, 2578459033, 762796589, 252780047, 2966125488, 1425844308, 3151392187, 372911126], M = [1667474886, 2088535288, 2004326894, 2071694838, 4075949567, 1802223062, 1869591006, 3318043793, 808472672, 16843522, 1734846926, 724270422, 4278065639, 3621216949, 2880169549, 1987484396, 3402253711, 2189597983, 3385409673, 2105378810, 4210693615, 1499065266, 1195886990, 4042263547, 2913856577, 3570689971, 2728590687, 2947541573, 2627518243, 2762274643, 1920112356, 3233831835, 3082273397, 4261223649, 2475929149, 640051788, 909531756, 1061110142, 4160160501, 3435941763, 875846760, 2779116625, 3857003729, 4059105529, 1903268834, 3638064043, 825316194, 353713962, 67374088, 3351728789, 589522246, 3284360861, 404236336, 2526454071, 84217610, 2593830191, 117901582, 303183396, 2155911963, 3806477791, 3958056653, 656894286, 2998062463, 1970642922, 151591698, 2206440989, 741110872, 437923380, 454765878, 1852748508, 1515908788, 2694904667, 1381168804, 993742198, 3604373943, 3014905469, 690584402, 3823320797, 791638366, 2223281939, 1398011302, 3520161977, 0, 3991743681, 538992704, 4244381667, 2981218425, 1532751286, 1785380564, 3419096717, 3200178535, 960056178, 1246420628, 1280103576, 1482221744, 3486468741, 3503319995, 4025428677, 2863326543, 4227536621, 1128514950, 1296947098, 859002214, 2240123921, 1162203018, 4193849577, 33687044, 2139062782, 1347481760, 1010582648, 2678045221, 2829640523, 1364325282, 2745433693, 1077985408, 2408548869, 2459086143, 2644360225, 943212656, 4126475505, 3166494563, 3065430391, 3671750063, 555836226, 269496352, 4294908645, 4092792573, 3537006015, 3452783745, 202118168, 320025894, 3974901699, 1600119230, 2543297077, 1145359496, 387397934, 3301201811, 2812801621, 2122220284, 1027426170, 1684319432, 1566435258, 421079858, 1936954854, 1616945344, 2172753945, 1330631070, 3705438115, 572679748, 707427924, 2425400123, 2290647819, 1179044492, 4008585671, 3099120491, 336870440, 3739122087, 1583276732, 185277718, 3688593069, 3772791771, 842159716, 976899700, 168435220, 1229577106, 101059084, 606366792, 1549591736, 3267517855, 3553849021, 2897014595, 1650632388, 2442242105, 2509612081, 3840161747, 2038008818, 3890688725, 3368567691, 926374254, 1835907034, 2374863873, 3587531953, 1313788572, 2846482505, 1819063512, 1448540844, 4109633523, 3941213647, 1701162954, 2054852340, 2930698567, 134748176, 3132806511, 2021165296, 623210314, 774795868, 471606328, 2795958615, 3031746419, 3334885783, 3907527627, 3722280097, 1953799400, 522133822, 1263263126, 3183336545, 2341176845, 2324333839, 1886425312, 1044267644, 3048588401, 1718004428, 1212733584, 50529542, 4143317495, 235803164, 1633788866, 892690282, 1465383342, 3115962473, 2256965911, 3250673817, 488449850, 2661202215, 3789633753, 4177007595, 2560144171, 286339874, 1768537042, 3654906025, 2391705863, 2492770099, 2610673197, 505291324, 2273808917, 3924369609, 3469625735, 1431699370, 673740880, 3755965093, 2358021891, 2711746649, 2307489801, 218961690, 3217021541, 3873845719, 1111672452, 1751693520, 1094828930, 2576986153, 757954394, 252645662, 2964376443, 1414855848, 3149649517, 370555436], R = [1374988112, 2118214995, 437757123, 975658646, 1001089995, 530400753, 2902087851, 1273168787, 540080725, 2910219766, 2295101073, 4110568485, 1340463100, 3307916247, 641025152, 3043140495, 3736164937, 632953703, 1172967064, 1576976609, 3274667266, 2169303058, 2370213795, 1809054150, 59727847, 361929877, 3211623147, 2505202138, 3569255213, 1484005843, 1239443753, 2395588676, 1975683434, 4102977912, 2572697195, 666464733, 3202437046, 4035489047, 3374361702, 2110667444, 1675577880, 3843699074, 2538681184, 1649639237, 2976151520, 3144396420, 4269907996, 4178062228, 1883793496, 2403728665, 2497604743, 1383856311, 2876494627, 1917518562, 3810496343, 1716890410, 3001755655, 800440835, 2261089178, 3543599269, 807962610, 599762354, 33778362, 3977675356, 2328828971, 2809771154, 4077384432, 1315562145, 1708848333, 101039829, 3509871135, 3299278474, 875451293, 2733856160, 92987698, 2767645557, 193195065, 1080094634, 1584504582, 3178106961, 1042385657, 2531067453, 3711829422, 1306967366, 2438237621, 1908694277, 67556463, 1615861247, 429456164, 3602770327, 2302690252, 1742315127, 2968011453, 126454664, 3877198648, 2043211483, 2709260871, 2084704233, 4169408201, 0, 159417987, 841739592, 504459436, 1817866830, 4245618683, 260388950, 1034867998, 908933415, 168810852, 1750902305, 2606453969, 607530554, 202008497, 2472011535, 3035535058, 463180190, 2160117071, 1641816226, 1517767529, 470948374, 3801332234, 3231722213, 1008918595, 303765277, 235474187, 4069246893, 766945465, 337553864, 1475418501, 2943682380, 4003061179, 2743034109, 4144047775, 1551037884, 1147550661, 1543208500, 2336434550, 3408119516, 3069049960, 3102011747, 3610369226, 1113818384, 328671808, 2227573024, 2236228733, 3535486456, 2935566865, 3341394285, 496906059, 3702665459, 226906860, 2009195472, 733156972, 2842737049, 294930682, 1206477858, 2835123396, 2700099354, 1451044056, 573804783, 2269728455, 3644379585, 2362090238, 2564033334, 2801107407, 2776292904, 3669462566, 1068351396, 742039012, 1350078989, 1784663195, 1417561698, 4136440770, 2430122216, 775550814, 2193862645, 2673705150, 1775276924, 1876241833, 3475313331, 3366754619, 270040487, 3902563182, 3678124923, 3441850377, 1851332852, 3969562369, 2203032232, 3868552805, 2868897406, 566021896, 4011190502, 3135740889, 1248802510, 3936291284, 699432150, 832877231, 708780849, 3332740144, 899835584, 1951317047, 4236429990, 3767586992, 866637845, 4043610186, 1106041591, 2144161806, 395441711, 1984812685, 1139781709, 3433712980, 3835036895, 2664543715, 1282050075, 3240894392, 1181045119, 2640243204, 25965917, 4203181171, 4211818798, 3009879386, 2463879762, 3910161971, 1842759443, 2597806476, 933301370, 1509430414, 3943906441, 3467192302, 3076639029, 3776767469, 2051518780, 2631065433, 1441952575, 404016761, 1942435775, 1408749034, 1610459739, 3745345300, 2017778566, 3400528769, 3110650942, 941896748, 3265478751, 371049330, 3168937228, 675039627, 4279080257, 967311729, 135050206, 3635733660, 1683407248, 2076935265, 3576870512, 1215061108, 3501741890], F = [1347548327, 1400783205, 3273267108, 2520393566, 3409685355, 4045380933, 2880240216, 2471224067, 1428173050, 4138563181, 2441661558, 636813900, 4233094615, 3620022987, 2149987652, 2411029155, 1239331162, 1730525723, 2554718734, 3781033664, 46346101, 310463728, 2743944855, 3328955385, 3875770207, 2501218972, 3955191162, 3667219033, 768917123, 3545789473, 692707433, 1150208456, 1786102409, 2029293177, 1805211710, 3710368113, 3065962831, 401639597, 1724457132, 3028143674, 409198410, 2196052529, 1620529459, 1164071807, 3769721975, 2226875310, 486441376, 2499348523, 1483753576, 428819965, 2274680428, 3075636216, 598438867, 3799141122, 1474502543, 711349675, 129166120, 53458370, 2592523643, 2782082824, 4063242375, 2988687269, 3120694122, 1559041666, 730517276, 2460449204, 4042459122, 2706270690, 3446004468, 3573941694, 533804130, 2328143614, 2637442643, 2695033685, 839224033, 1973745387, 957055980, 2856345839, 106852767, 1371368976, 4181598602, 1033297158, 2933734917, 1179510461, 3046200461, 91341917, 1862534868, 4284502037, 605657339, 2547432937, 3431546947, 2003294622, 3182487618, 2282195339, 954669403, 3682191598, 1201765386, 3917234703, 3388507166, 0, 2198438022, 1211247597, 2887651696, 1315723890, 4227665663, 1443857720, 507358933, 657861945, 1678381017, 560487590, 3516619604, 975451694, 2970356327, 261314535, 3535072918, 2652609425, 1333838021, 2724322336, 1767536459, 370938394, 182621114, 3854606378, 1128014560, 487725847, 185469197, 2918353863, 3106780840, 3356761769, 2237133081, 1286567175, 3152976349, 4255350624, 2683765030, 3160175349, 3309594171, 878443390, 1988838185, 3704300486, 1756818940, 1673061617, 3403100636, 272786309, 1075025698, 545572369, 2105887268, 4174560061, 296679730, 1841768865, 1260232239, 4091327024, 3960309330, 3497509347, 1814803222, 2578018489, 4195456072, 575138148, 3299409036, 446754879, 3629546796, 4011996048, 3347532110, 3252238545, 4270639778, 915985419, 3483825537, 681933534, 651868046, 2755636671, 3828103837, 223377554, 2607439820, 1649704518, 3270937875, 3901806776, 1580087799, 4118987695, 3198115200, 2087309459, 2842678573, 3016697106, 1003007129, 2802849917, 1860738147, 2077965243, 164439672, 4100872472, 32283319, 2827177882, 1709610350, 2125135846, 136428751, 3874428392, 3652904859, 3460984630, 3572145929, 3593056380, 2939266226, 824852259, 818324884, 3224740454, 930369212, 2801566410, 2967507152, 355706840, 1257309336, 4148292826, 243256656, 790073846, 2373340630, 1296297904, 1422699085, 3756299780, 3818836405, 457992840, 3099667487, 2135319889, 77422314, 1560382517, 1945798516, 788204353, 1521706781, 1385356242, 870912086, 325965383, 2358957921, 2050466060, 2388260884, 2313884476, 4006521127, 901210569, 3990953189, 1014646705, 1503449823, 1062597235, 2031621326, 3212035895, 3931371469, 1533017514, 350174575, 2256028891, 2177544179, 1052338372, 741876788, 1606591296, 1914052035, 213705253, 2334669897, 1107234197, 1899603969, 3725069491, 2631447780, 2422494913, 1635502980, 1893020342, 1950903388, 1120974935], C = [2807058932, 1699970625, 2764249623, 1586903591, 1808481195, 1173430173, 1487645946, 59984867, 4199882800, 1844882806, 1989249228, 1277555970, 3623636965, 3419915562, 1149249077, 2744104290, 1514790577, 459744698, 244860394, 3235995134, 1963115311, 4027744588, 2544078150, 4190530515, 1608975247, 2627016082, 2062270317, 1507497298, 2200818878, 567498868, 1764313568, 3359936201, 2305455554, 2037970062, 1047239e3, 1910319033, 1337376481, 2904027272, 2892417312, 984907214, 1243112415, 830661914, 861968209, 2135253587, 2011214180, 2927934315, 2686254721, 731183368, 1750626376, 4246310725, 1820824798, 4172763771, 3542330227, 48394827, 2404901663, 2871682645, 671593195, 3254988725, 2073724613, 145085239, 2280796200, 2779915199, 1790575107, 2187128086, 472615631, 3029510009, 4075877127, 3802222185, 4107101658, 3201631749, 1646252340, 4270507174, 1402811438, 1436590835, 3778151818, 3950355702, 3963161475, 4020912224, 2667994737, 273792366, 2331590177, 104699613, 95345982, 3175501286, 2377486676, 1560637892, 3564045318, 369057872, 4213447064, 3919042237, 1137477952, 2658625497, 1119727848, 2340947849, 1530455833, 4007360968, 172466556, 266959938, 516552836, 0, 2256734592, 3980931627, 1890328081, 1917742170, 4294704398, 945164165, 3575528878, 958871085, 3647212047, 2787207260, 1423022939, 775562294, 1739656202, 3876557655, 2530391278, 2443058075, 3310321856, 547512796, 1265195639, 437656594, 3121275539, 719700128, 3762502690, 387781147, 218828297, 3350065803, 2830708150, 2848461854, 428169201, 122466165, 3720081049, 1627235199, 648017665, 4122762354, 1002783846, 2117360635, 695634755, 3336358691, 4234721005, 4049844452, 3704280881, 2232435299, 574624663, 287343814, 612205898, 1039717051, 840019705, 2708326185, 793451934, 821288114, 1391201670, 3822090177, 376187827, 3113855344, 1224348052, 1679968233, 2361698556, 1058709744, 752375421, 2431590963, 1321699145, 3519142200, 2734591178, 188127444, 2177869557, 3727205754, 2384911031, 3215212461, 2648976442, 2450346104, 3432737375, 1180849278, 331544205, 3102249176, 4150144569, 2952102595, 2159976285, 2474404304, 766078933, 313773861, 2570832044, 2108100632, 1668212892, 3145456443, 2013908262, 418672217, 3070356634, 2594734927, 1852171925, 3867060991, 3473416636, 3907448597, 2614737639, 919489135, 164948639, 2094410160, 2997825956, 590424639, 2486224549, 1723872674, 3157750862, 3399941250, 3501252752, 3625268135, 2555048196, 3673637356, 1343127501, 4130281361, 3599595085, 2957853679, 1297403050, 81781910, 3051593425, 2283490410, 532201772, 1367295589, 3926170974, 895287692, 1953757831, 1093597963, 492483431, 3528626907, 1446242576, 1192455638, 1636604631, 209336225, 344873464, 1015671571, 669961897, 3375740769, 3857572124, 2973530695, 3747192018, 1933530610, 3464042516, 935293895, 3454686199, 2858115069, 1863638845, 3683022916, 4085369519, 3292445032, 875313188, 1080017571, 3279033885, 621591778, 1233856572, 2504130317, 24197544, 3017672716, 3835484340, 3247465558, 2220981195, 3060847922, 1551124588, 1463996600], L = [4104605777, 1097159550, 396673818, 660510266, 2875968315, 2638606623, 4200115116, 3808662347, 821712160, 1986918061, 3430322568, 38544885, 3856137295, 718002117, 893681702, 1654886325, 2975484382, 3122358053, 3926825029, 4274053469, 796197571, 1290801793, 1184342925, 3556361835, 2405426947, 2459735317, 1836772287, 1381620373, 3196267988, 1948373848, 3764988233, 3385345166, 3263785589, 2390325492, 1480485785, 3111247143, 3780097726, 2293045232, 548169417, 3459953789, 3746175075, 439452389, 1362321559, 1400849762, 1685577905, 1806599355, 2174754046, 137073913, 1214797936, 1174215055, 3731654548, 2079897426, 1943217067, 1258480242, 529487843, 1437280870, 3945269170, 3049390895, 3313212038, 923313619, 679998e3, 3215307299, 57326082, 377642221, 3474729866, 2041877159, 133361907, 1776460110, 3673476453, 96392454, 878845905, 2801699524, 777231668, 4082475170, 2330014213, 4142626212, 2213296395, 1626319424, 1906247262, 1846563261, 562755902, 3708173718, 1040559837, 3871163981, 1418573201, 3294430577, 114585348, 1343618912, 2566595609, 3186202582, 1078185097, 3651041127, 3896688048, 2307622919, 425408743, 3371096953, 2081048481, 1108339068, 2216610296, 0, 2156299017, 736970802, 292596766, 1517440620, 251657213, 2235061775, 2933202493, 758720310, 265905162, 1554391400, 1532285339, 908999204, 174567692, 1474760595, 4002861748, 2610011675, 3234156416, 3693126241, 2001430874, 303699484, 2478443234, 2687165888, 585122620, 454499602, 151849742, 2345119218, 3064510765, 514443284, 4044981591, 1963412655, 2581445614, 2137062819, 19308535, 1928707164, 1715193156, 4219352155, 1126790795, 600235211, 3992742070, 3841024952, 836553431, 1669664834, 2535604243, 3323011204, 1243905413, 3141400786, 4180808110, 698445255, 2653899549, 2989552604, 2253581325, 3252932727, 3004591147, 1891211689, 2487810577, 3915653703, 4237083816, 4030667424, 2100090966, 865136418, 1229899655, 953270745, 3399679628, 3557504664, 4118925222, 2061379749, 3079546586, 2915017791, 983426092, 2022837584, 1607244650, 2118541908, 2366882550, 3635996816, 972512814, 3283088770, 1568718495, 3499326569, 3576539503, 621982671, 2895723464, 410887952, 2623762152, 1002142683, 645401037, 1494807662, 2595684844, 1335535747, 2507040230, 4293295786, 3167684641, 367585007, 3885750714, 1865862730, 2668221674, 2960971305, 2763173681, 1059270954, 2777952454, 2724642869, 1320957812, 2194319100, 2429595872, 2815956275, 77089521, 3973773121, 3444575871, 2448830231, 1305906550, 4021308739, 2857194700, 2516901860, 3518358430, 1787304780, 740276417, 1699839814, 1592394909, 2352307457, 2272556026, 188821243, 1729977011, 3687994002, 274084841, 3594982253, 3613494426, 2701949495, 4162096729, 322734571, 2837966542, 1640576439, 484830689, 1202797690, 3537852828, 4067639125, 349075736, 3342319475, 4157467219, 4255800159, 1030690015, 1155237496, 2951971274, 1757691577, 607398968, 2738905026, 499347990, 3794078908, 1011452712, 227885567, 2818666809, 213114376, 3034881240, 1455525988, 3414450555, 850817237, 1817998408, 3092726480], U = [0, 235474187, 470948374, 303765277, 941896748, 908933415, 607530554, 708780849, 1883793496, 2118214995, 1817866830, 1649639237, 1215061108, 1181045119, 1417561698, 1517767529, 3767586992, 4003061179, 4236429990, 4069246893, 3635733660, 3602770327, 3299278474, 3400528769, 2430122216, 2664543715, 2362090238, 2193862645, 2835123396, 2801107407, 3035535058, 3135740889, 3678124923, 3576870512, 3341394285, 3374361702, 3810496343, 3977675356, 4279080257, 4043610186, 2876494627, 2776292904, 3076639029, 3110650942, 2472011535, 2640243204, 2403728665, 2169303058, 1001089995, 899835584, 666464733, 699432150, 59727847, 226906860, 530400753, 294930682, 1273168787, 1172967064, 1475418501, 1509430414, 1942435775, 2110667444, 1876241833, 1641816226, 2910219766, 2743034109, 2976151520, 3211623147, 2505202138, 2606453969, 2302690252, 2269728455, 3711829422, 3543599269, 3240894392, 3475313331, 3843699074, 3943906441, 4178062228, 4144047775, 1306967366, 1139781709, 1374988112, 1610459739, 1975683434, 2076935265, 1775276924, 1742315127, 1034867998, 866637845, 566021896, 800440835, 92987698, 193195065, 429456164, 395441711, 1984812685, 2017778566, 1784663195, 1683407248, 1315562145, 1080094634, 1383856311, 1551037884, 101039829, 135050206, 437757123, 337553864, 1042385657, 807962610, 573804783, 742039012, 2531067453, 2564033334, 2328828971, 2227573024, 2935566865, 2700099354, 3001755655, 3168937228, 3868552805, 3902563182, 4203181171, 4102977912, 3736164937, 3501741890, 3265478751, 3433712980, 1106041591, 1340463100, 1576976609, 1408749034, 2043211483, 2009195472, 1708848333, 1809054150, 832877231, 1068351396, 766945465, 599762354, 159417987, 126454664, 361929877, 463180190, 2709260871, 2943682380, 3178106961, 3009879386, 2572697195, 2538681184, 2236228733, 2336434550, 3509871135, 3745345300, 3441850377, 3274667266, 3910161971, 3877198648, 4110568485, 4211818798, 2597806476, 2497604743, 2261089178, 2295101073, 2733856160, 2902087851, 3202437046, 2968011453, 3936291284, 3835036895, 4136440770, 4169408201, 3535486456, 3702665459, 3467192302, 3231722213, 2051518780, 1951317047, 1716890410, 1750902305, 1113818384, 1282050075, 1584504582, 1350078989, 168810852, 67556463, 371049330, 404016761, 841739592, 1008918595, 775550814, 540080725, 3969562369, 3801332234, 4035489047, 4269907996, 3569255213, 3669462566, 3366754619, 3332740144, 2631065433, 2463879762, 2160117071, 2395588676, 2767645557, 2868897406, 3102011747, 3069049960, 202008497, 33778362, 270040487, 504459436, 875451293, 975658646, 675039627, 641025152, 2084704233, 1917518562, 1615861247, 1851332852, 1147550661, 1248802510, 1484005843, 1451044056, 933301370, 967311729, 733156972, 632953703, 260388950, 25965917, 328671808, 496906059, 1206477858, 1239443753, 1543208500, 1441952575, 2144161806, 1908694277, 1675577880, 1842759443, 3610369226, 3644379585, 3408119516, 3307916247, 4011190502, 3776767469, 4077384432, 4245618683, 2809771154, 2842737049, 3144396420, 3043140495, 2673705150, 2438237621, 2203032232, 2370213795], q = [0, 185469197, 370938394, 487725847, 741876788, 657861945, 975451694, 824852259, 1483753576, 1400783205, 1315723890, 1164071807, 1950903388, 2135319889, 1649704518, 1767536459, 2967507152, 3152976349, 2801566410, 2918353863, 2631447780, 2547432937, 2328143614, 2177544179, 3901806776, 3818836405, 4270639778, 4118987695, 3299409036, 3483825537, 3535072918, 3652904859, 2077965243, 1893020342, 1841768865, 1724457132, 1474502543, 1559041666, 1107234197, 1257309336, 598438867, 681933534, 901210569, 1052338372, 261314535, 77422314, 428819965, 310463728, 3409685355, 3224740454, 3710368113, 3593056380, 3875770207, 3960309330, 4045380933, 4195456072, 2471224067, 2554718734, 2237133081, 2388260884, 3212035895, 3028143674, 2842678573, 2724322336, 4138563181, 4255350624, 3769721975, 3955191162, 3667219033, 3516619604, 3431546947, 3347532110, 2933734917, 2782082824, 3099667487, 3016697106, 2196052529, 2313884476, 2499348523, 2683765030, 1179510461, 1296297904, 1347548327, 1533017514, 1786102409, 1635502980, 2087309459, 2003294622, 507358933, 355706840, 136428751, 53458370, 839224033, 957055980, 605657339, 790073846, 2373340630, 2256028891, 2607439820, 2422494913, 2706270690, 2856345839, 3075636216, 3160175349, 3573941694, 3725069491, 3273267108, 3356761769, 4181598602, 4063242375, 4011996048, 3828103837, 1033297158, 915985419, 730517276, 545572369, 296679730, 446754879, 129166120, 213705253, 1709610350, 1860738147, 1945798516, 2029293177, 1239331162, 1120974935, 1606591296, 1422699085, 4148292826, 4233094615, 3781033664, 3931371469, 3682191598, 3497509347, 3446004468, 3328955385, 2939266226, 2755636671, 3106780840, 2988687269, 2198438022, 2282195339, 2501218972, 2652609425, 1201765386, 1286567175, 1371368976, 1521706781, 1805211710, 1620529459, 2105887268, 1988838185, 533804130, 350174575, 164439672, 46346101, 870912086, 954669403, 636813900, 788204353, 2358957921, 2274680428, 2592523643, 2441661558, 2695033685, 2880240216, 3065962831, 3182487618, 3572145929, 3756299780, 3270937875, 3388507166, 4174560061, 4091327024, 4006521127, 3854606378, 1014646705, 930369212, 711349675, 560487590, 272786309, 457992840, 106852767, 223377554, 1678381017, 1862534868, 1914052035, 2031621326, 1211247597, 1128014560, 1580087799, 1428173050, 32283319, 182621114, 401639597, 486441376, 768917123, 651868046, 1003007129, 818324884, 1503449823, 1385356242, 1333838021, 1150208456, 1973745387, 2125135846, 1673061617, 1756818940, 2970356327, 3120694122, 2802849917, 2887651696, 2637442643, 2520393566, 2334669897, 2149987652, 3917234703, 3799141122, 4284502037, 4100872472, 3309594171, 3460984630, 3545789473, 3629546796, 2050466060, 1899603969, 1814803222, 1730525723, 1443857720, 1560382517, 1075025698, 1260232239, 575138148, 692707433, 878443390, 1062597235, 243256656, 91341917, 409198410, 325965383, 3403100636, 3252238545, 3704300486, 3620022987, 3874428392, 3990953189, 4042459122, 4227665663, 2460449204, 2578018489, 2226875310, 2411029155, 3198115200, 3046200461, 2827177882, 2743944855], Z = [0, 218828297, 437656594, 387781147, 875313188, 958871085, 775562294, 590424639, 1750626376, 1699970625, 1917742170, 2135253587, 1551124588, 1367295589, 1180849278, 1265195639, 3501252752, 3720081049, 3399941250, 3350065803, 3835484340, 3919042237, 4270507174, 4085369519, 3102249176, 3051593425, 2734591178, 2952102595, 2361698556, 2177869557, 2530391278, 2614737639, 3145456443, 3060847922, 2708326185, 2892417312, 2404901663, 2187128086, 2504130317, 2555048196, 3542330227, 3727205754, 3375740769, 3292445032, 3876557655, 3926170974, 4246310725, 4027744588, 1808481195, 1723872674, 1910319033, 2094410160, 1608975247, 1391201670, 1173430173, 1224348052, 59984867, 244860394, 428169201, 344873464, 935293895, 984907214, 766078933, 547512796, 1844882806, 1627235199, 2011214180, 2062270317, 1507497298, 1423022939, 1137477952, 1321699145, 95345982, 145085239, 532201772, 313773861, 830661914, 1015671571, 731183368, 648017665, 3175501286, 2957853679, 2807058932, 2858115069, 2305455554, 2220981195, 2474404304, 2658625497, 3575528878, 3625268135, 3473416636, 3254988725, 3778151818, 3963161475, 4213447064, 4130281361, 3599595085, 3683022916, 3432737375, 3247465558, 3802222185, 4020912224, 4172763771, 4122762354, 3201631749, 3017672716, 2764249623, 2848461854, 2331590177, 2280796200, 2431590963, 2648976442, 104699613, 188127444, 472615631, 287343814, 840019705, 1058709744, 671593195, 621591778, 1852171925, 1668212892, 1953757831, 2037970062, 1514790577, 1463996600, 1080017571, 1297403050, 3673637356, 3623636965, 3235995134, 3454686199, 4007360968, 3822090177, 4107101658, 4190530515, 2997825956, 3215212461, 2830708150, 2779915199, 2256734592, 2340947849, 2627016082, 2443058075, 172466556, 122466165, 273792366, 492483431, 1047239e3, 861968209, 612205898, 695634755, 1646252340, 1863638845, 2013908262, 1963115311, 1446242576, 1530455833, 1277555970, 1093597963, 1636604631, 1820824798, 2073724613, 1989249228, 1436590835, 1487645946, 1337376481, 1119727848, 164948639, 81781910, 331544205, 516552836, 1039717051, 821288114, 669961897, 719700128, 2973530695, 3157750862, 2871682645, 2787207260, 2232435299, 2283490410, 2667994737, 2450346104, 3647212047, 3564045318, 3279033885, 3464042516, 3980931627, 3762502690, 4150144569, 4199882800, 3070356634, 3121275539, 2904027272, 2686254721, 2200818878, 2384911031, 2570832044, 2486224549, 3747192018, 3528626907, 3310321856, 3359936201, 3950355702, 3867060991, 4049844452, 4234721005, 1739656202, 1790575107, 2108100632, 1890328081, 1402811438, 1586903591, 1233856572, 1149249077, 266959938, 48394827, 369057872, 418672217, 1002783846, 919489135, 567498868, 752375421, 209336225, 24197544, 376187827, 459744698, 945164165, 895287692, 574624663, 793451934, 1679968233, 1764313568, 2117360635, 1933530610, 1343127501, 1560637892, 1243112415, 1192455638, 3704280881, 3519142200, 3336358691, 3419915562, 3907448597, 3857572124, 4075877127, 4294704398, 3029510009, 3113855344, 2927934315, 2744104290, 2159976285, 2377486676, 2594734927, 2544078150], z = [0, 151849742, 303699484, 454499602, 607398968, 758720310, 908999204, 1059270954, 1214797936, 1097159550, 1517440620, 1400849762, 1817998408, 1699839814, 2118541908, 2001430874, 2429595872, 2581445614, 2194319100, 2345119218, 3034881240, 3186202582, 2801699524, 2951971274, 3635996816, 3518358430, 3399679628, 3283088770, 4237083816, 4118925222, 4002861748, 3885750714, 1002142683, 850817237, 698445255, 548169417, 529487843, 377642221, 227885567, 77089521, 1943217067, 2061379749, 1640576439, 1757691577, 1474760595, 1592394909, 1174215055, 1290801793, 2875968315, 2724642869, 3111247143, 2960971305, 2405426947, 2253581325, 2638606623, 2487810577, 3808662347, 3926825029, 4044981591, 4162096729, 3342319475, 3459953789, 3576539503, 3693126241, 1986918061, 2137062819, 1685577905, 1836772287, 1381620373, 1532285339, 1078185097, 1229899655, 1040559837, 923313619, 740276417, 621982671, 439452389, 322734571, 137073913, 19308535, 3871163981, 4021308739, 4104605777, 4255800159, 3263785589, 3414450555, 3499326569, 3651041127, 2933202493, 2815956275, 3167684641, 3049390895, 2330014213, 2213296395, 2566595609, 2448830231, 1305906550, 1155237496, 1607244650, 1455525988, 1776460110, 1626319424, 2079897426, 1928707164, 96392454, 213114376, 396673818, 514443284, 562755902, 679998e3, 865136418, 983426092, 3708173718, 3557504664, 3474729866, 3323011204, 4180808110, 4030667424, 3945269170, 3794078908, 2507040230, 2623762152, 2272556026, 2390325492, 2975484382, 3092726480, 2738905026, 2857194700, 3973773121, 3856137295, 4274053469, 4157467219, 3371096953, 3252932727, 3673476453, 3556361835, 2763173681, 2915017791, 3064510765, 3215307299, 2156299017, 2307622919, 2459735317, 2610011675, 2081048481, 1963412655, 1846563261, 1729977011, 1480485785, 1362321559, 1243905413, 1126790795, 878845905, 1030690015, 645401037, 796197571, 274084841, 425408743, 38544885, 188821243, 3613494426, 3731654548, 3313212038, 3430322568, 4082475170, 4200115116, 3780097726, 3896688048, 2668221674, 2516901860, 2366882550, 2216610296, 3141400786, 2989552604, 2837966542, 2687165888, 1202797690, 1320957812, 1437280870, 1554391400, 1669664834, 1787304780, 1906247262, 2022837584, 265905162, 114585348, 499347990, 349075736, 736970802, 585122620, 972512814, 821712160, 2595684844, 2478443234, 2293045232, 2174754046, 3196267988, 3079546586, 2895723464, 2777952454, 3537852828, 3687994002, 3234156416, 3385345166, 4142626212, 4293295786, 3841024952, 3992742070, 174567692, 57326082, 410887952, 292596766, 777231668, 660510266, 1011452712, 893681702, 1108339068, 1258480242, 1343618912, 1494807662, 1715193156, 1865862730, 1948373848, 2100090966, 2701949495, 2818666809, 3004591147, 3122358053, 2235061775, 2352307457, 2535604243, 2653899549, 3915653703, 3764988233, 4219352155, 4067639125, 3444575871, 3294430577, 3746175075, 3594982253, 836553431, 953270745, 600235211, 718002117, 367585007, 484830689, 133361907, 251657213, 2041877159, 1891211689, 1806599355, 1654886325, 1568718495, 1418573201, 1335535747, 1184342925];
    function G(A) {
      for (var h = [], N = 0; N < A.length; N += 4)
        h.push(
          A[N] << 24 | A[N + 1] << 16 | A[N + 2] << 8 | A[N + 3]
        );
      return h;
    }
    var O = function(A) {
      if (!(this instanceof O))
        throw Error("AES must be instanitated with `new`");
      Object.defineProperty(this, "key", {
        value: i(A, !0)
      }), this._prepare();
    };
    O.prototype._prepare = function() {
      var A = l[this.key.length];
      if (A == null)
        throw new Error("invalid key size (must be 16, 24 or 32 bytes)");
      this._Ke = [], this._Kd = [];
      for (var h = 0; h <= A; h++)
        this._Ke.push([0, 0, 0, 0]), this._Kd.push([0, 0, 0, 0]);
      for (var N = (A + 1) * 4, Y = this.key.length / 4, t7 = G(this.key), H, h = 0; h < Y; h++)
        H = h >> 2, this._Ke[H][h % 4] = t7[h], this._Kd[A - H][h % 4] = t7[h];
      for (var $ = 0, X = Y, i7; X < N; ) {
        if (i7 = t7[Y - 1], t7[0] ^= m[i7 >> 16 & 255] << 24 ^ m[i7 >> 8 & 255] << 16 ^ m[i7 & 255] << 8 ^ m[i7 >> 24 & 255] ^ v[$] << 24, $ += 1, Y != 8)
          for (var h = 1; h < Y; h++)
            t7[h] ^= t7[h - 1];
        else {
          for (var h = 1; h < Y / 2; h++)
            t7[h] ^= t7[h - 1];
          i7 = t7[Y / 2 - 1], t7[Y / 2] ^= m[i7 & 255] ^ m[i7 >> 8 & 255] << 8 ^ m[i7 >> 16 & 255] << 16 ^ m[i7 >> 24 & 255] << 24;
          for (var h = Y / 2 + 1; h < Y; h++)
            t7[h] ^= t7[h - 1];
        }
        for (var h = 0, J, _; h < Y && X < N; )
          J = X >> 2, _ = X % 4, this._Ke[J][_] = t7[h], this._Kd[A - J][_] = t7[h++], X++;
      }
      for (var J = 1; J < A; J++)
        for (var _ = 0; _ < 4; _++)
          i7 = this._Kd[J][_], this._Kd[J][_] = U[i7 >> 24 & 255] ^ q[i7 >> 16 & 255] ^ Z[i7 >> 8 & 255] ^ z[i7 & 255];
    }, O.prototype.encrypt = function(A) {
      if (A.length != 16)
        throw new Error("invalid plaintext size (must be 16 bytes)");
      for (var h = this._Ke.length - 1, N = [0, 0, 0, 0], Y = G(A), t7 = 0; t7 < 4; t7++)
        Y[t7] ^= this._Ke[0][t7];
      for (var H = 1; H < h; H++) {
        for (var t7 = 0; t7 < 4; t7++)
          N[t7] = I[Y[t7] >> 24 & 255] ^ k[Y[(t7 + 1) % 4] >> 16 & 255] ^ P[Y[(t7 + 2) % 4] >> 8 & 255] ^ M[Y[(t7 + 3) % 4] & 255] ^ this._Ke[H][t7];
        Y = N.slice();
      }
      for (var $ = n(16), X, t7 = 0; t7 < 4; t7++)
        X = this._Ke[h][t7], $[4 * t7] = (m[Y[t7] >> 24 & 255] ^ X >> 24) & 255, $[4 * t7 + 1] = (m[Y[(t7 + 1) % 4] >> 16 & 255] ^ X >> 16) & 255, $[4 * t7 + 2] = (m[Y[(t7 + 2) % 4] >> 8 & 255] ^ X >> 8) & 255, $[4 * t7 + 3] = (m[Y[(t7 + 3) % 4] & 255] ^ X) & 255;
      return $;
    }, O.prototype.decrypt = function(A) {
      if (A.length != 16)
        throw new Error("invalid ciphertext size (must be 16 bytes)");
      for (var h = this._Kd.length - 1, N = [0, 0, 0, 0], Y = G(A), t7 = 0; t7 < 4; t7++)
        Y[t7] ^= this._Kd[0][t7];
      for (var H = 1; H < h; H++) {
        for (var t7 = 0; t7 < 4; t7++)
          N[t7] = R[Y[t7] >> 24 & 255] ^ F[Y[(t7 + 3) % 4] >> 16 & 255] ^ C[Y[(t7 + 2) % 4] >> 8 & 255] ^ L[Y[(t7 + 1) % 4] & 255] ^ this._Kd[H][t7];
        Y = N.slice();
      }
      for (var $ = n(16), X, t7 = 0; t7 < 4; t7++)
        X = this._Kd[h][t7], $[4 * t7] = (x[Y[t7] >> 24 & 255] ^ X >> 24) & 255, $[4 * t7 + 1] = (x[Y[(t7 + 3) % 4] >> 16 & 255] ^ X >> 16) & 255, $[4 * t7 + 2] = (x[Y[(t7 + 2) % 4] >> 8 & 255] ^ X >> 8) & 255, $[4 * t7 + 3] = (x[Y[(t7 + 1) % 4] & 255] ^ X) & 255;
      return $;
    };
    var u = function(A) {
      if (!(this instanceof u))
        throw Error("AES must be instanitated with `new`");
      this.description = "Electronic Code Block", this.name = "ecb", this._aes = new O(A);
    };
    u.prototype.encrypt = function(A) {
      if (A = i(A), A.length % 16 !== 0)
        throw new Error("invalid plaintext size (must be multiple of 16 bytes)");
      for (var h = n(A.length), N = n(16), Y = 0; Y < A.length; Y += 16)
        o(A, N, 0, Y, Y + 16), N = this._aes.encrypt(N), o(N, h, Y);
      return h;
    }, u.prototype.decrypt = function(A) {
      if (A = i(A), A.length % 16 !== 0)
        throw new Error("invalid ciphertext size (must be multiple of 16 bytes)");
      for (var h = n(A.length), N = n(16), Y = 0; Y < A.length; Y += 16)
        o(A, N, 0, Y, Y + 16), N = this._aes.decrypt(N), o(N, h, Y);
      return h;
    };
    var p = function(A, h) {
      if (!(this instanceof p))
        throw Error("AES must be instanitated with `new`");
      if (this.description = "Cipher Block Chaining", this.name = "cbc", !h)
        h = n(16);
      else if (h.length != 16)
        throw new Error("invalid initialation vector size (must be 16 bytes)");
      this._lastCipherblock = i(h, !0), this._aes = new O(A);
    };
    p.prototype.encrypt = function(A) {
      if (A = i(A), A.length % 16 !== 0)
        throw new Error("invalid plaintext size (must be multiple of 16 bytes)");
      for (var h = n(A.length), N = n(16), Y = 0; Y < A.length; Y += 16) {
        o(A, N, 0, Y, Y + 16);
        for (var t7 = 0; t7 < 16; t7++)
          N[t7] ^= this._lastCipherblock[t7];
        this._lastCipherblock = this._aes.encrypt(N), o(this._lastCipherblock, h, Y);
      }
      return h;
    }, p.prototype.decrypt = function(A) {
      if (A = i(A), A.length % 16 !== 0)
        throw new Error("invalid ciphertext size (must be multiple of 16 bytes)");
      for (var h = n(A.length), N = n(16), Y = 0; Y < A.length; Y += 16) {
        o(A, N, 0, Y, Y + 16), N = this._aes.decrypt(N);
        for (var t7 = 0; t7 < 16; t7++)
          h[Y + t7] = N[t7] ^ this._lastCipherblock[t7];
        o(A, this._lastCipherblock, 0, Y, Y + 16);
      }
      return h;
    };
    var d = function(A, h, N) {
      if (!(this instanceof d))
        throw Error("AES must be instanitated with `new`");
      if (this.description = "Cipher Feedback", this.name = "cfb", !h)
        h = n(16);
      else if (h.length != 16)
        throw new Error("invalid initialation vector size (must be 16 size)");
      N || (N = 1), this.segmentSize = N, this._shiftRegister = i(h, !0), this._aes = new O(A);
    };
    d.prototype.encrypt = function(A) {
      if (A.length % this.segmentSize != 0)
        throw new Error("invalid plaintext size (must be segmentSize bytes)");
      for (var h = i(A, !0), N, Y = 0; Y < h.length; Y += this.segmentSize) {
        N = this._aes.encrypt(this._shiftRegister);
        for (var t7 = 0; t7 < this.segmentSize; t7++)
          h[Y + t7] ^= N[t7];
        o(this._shiftRegister, this._shiftRegister, 0, this.segmentSize), o(h, this._shiftRegister, 16 - this.segmentSize, Y, Y + this.segmentSize);
      }
      return h;
    }, d.prototype.decrypt = function(A) {
      if (A.length % this.segmentSize != 0)
        throw new Error("invalid ciphertext size (must be segmentSize bytes)");
      for (var h = i(A, !0), N, Y = 0; Y < h.length; Y += this.segmentSize) {
        N = this._aes.encrypt(this._shiftRegister);
        for (var t7 = 0; t7 < this.segmentSize; t7++)
          h[Y + t7] ^= N[t7];
        o(this._shiftRegister, this._shiftRegister, 0, this.segmentSize), o(A, this._shiftRegister, 16 - this.segmentSize, Y, Y + this.segmentSize);
      }
      return h;
    };
    var c = function(A, h) {
      if (!(this instanceof c))
        throw Error("AES must be instanitated with `new`");
      if (this.description = "Output Feedback", this.name = "ofb", !h)
        h = n(16);
      else if (h.length != 16)
        throw new Error("invalid initialation vector size (must be 16 bytes)");
      this._lastPrecipher = i(h, !0), this._lastPrecipherIndex = 16, this._aes = new O(A);
    };
    c.prototype.encrypt = function(A) {
      for (var h = i(A, !0), N = 0; N < h.length; N++)
        this._lastPrecipherIndex === 16 && (this._lastPrecipher = this._aes.encrypt(this._lastPrecipher), this._lastPrecipherIndex = 0), h[N] ^= this._lastPrecipher[this._lastPrecipherIndex++];
      return h;
    }, c.prototype.decrypt = c.prototype.encrypt;
    var y = function(A) {
      if (!(this instanceof y))
        throw Error("Counter must be instanitated with `new`");
      A !== 0 && !A && (A = 1), typeof A == "number" ? (this._counter = n(16), this.setValue(A)) : this.setBytes(A);
    };
    y.prototype.setValue = function(A) {
      if (typeof A != "number" || parseInt(A) != A)
        throw new Error("invalid counter value (must be an integer)");
      if (A > Number.MAX_SAFE_INTEGER)
        throw new Error("integer value out of safe range");
      for (var h = 15; h >= 0; --h)
        this._counter[h] = A % 256, A = parseInt(A / 256);
    }, y.prototype.setBytes = function(A) {
      if (A = i(A, !0), A.length != 16)
        throw new Error("invalid counter bytes size (must be 16 bytes)");
      this._counter = A;
    }, y.prototype.increment = function() {
      for (var A = 15; A >= 0; A--)
        if (this._counter[A] === 255)
          this._counter[A] = 0;
        else {
          this._counter[A]++;
          break;
        }
    };
    var S = function(A, h) {
      if (!(this instanceof S))
        throw Error("AES must be instanitated with `new`");
      this.description = "Counter", this.name = "ctr", h instanceof y || (h = new y(h)), this._counter = h, this._remainingCounter = null, this._remainingCounterIndex = 16, this._aes = new O(A);
    };
    S.prototype.encrypt = function(A) {
      for (var h = i(A, !0), N = 0; N < h.length; N++)
        this._remainingCounterIndex === 16 && (this._remainingCounter = this._aes.encrypt(this._counter._counter), this._remainingCounterIndex = 0, this._counter.increment()), h[N] ^= this._remainingCounter[this._remainingCounterIndex++];
      return h;
    }, S.prototype.decrypt = S.prototype.encrypt;
    function T(A) {
      A = i(A, !0);
      var h = 16 - A.length % 16, N = n(A.length + h);
      o(A, N);
      for (var Y = A.length; Y < N.length; Y++)
        N[Y] = h;
      return N;
    }
    function g(A) {
      if (A = i(A, !0), A.length < 16)
        throw new Error("PKCS#7 invalid length");
      var h = A[A.length - 1];
      if (h > 16)
        throw new Error("PKCS#7 padding byte out of range");
      for (var N = A.length - h, Y = 0; Y < h; Y++)
        if (A[N + Y] !== h)
          throw new Error("PKCS#7 invalid padding byte");
      var t7 = n(N);
      return o(A, t7, 0, 0, N), t7;
    }
    var w = {
      AES: O,
      Counter: y,
      ModeOfOperation: {
        ecb: u,
        cbc: p,
        cfb: d,
        ofb: c,
        ctr: S
      },
      utils: {
        hex: b,
        utf8: s
      },
      padding: {
        pkcs7: {
          pad: T,
          strip: g
        }
      },
      _arrayTest: {
        coerceArray: i,
        createArray: n,
        copyArray: o
      }
    };
    e.exports = w;
  })();
})(Gv);
var Wv = Gv.exports, Hi = ta, yB = Hi.PublicKey, Mf = Hi.crypto.Hash, Sa = Hi.util.preconditions, Pd = Wv, Zv = Pd.ModeOfOperation.cbc, gB = Hi.crypto.Random, Ui = function() {
};
Ui.encrypt = function(e, t, a) {
  Sa.checkArgument(e), Sa.checkArgument(t), Sa.checkArgument(a), a = a || gB.getRandomBuffer(128 / 8), e = Pd.padding.pkcs7.pad(e);
  var r = new Zv(t, a), f = r.encrypt(e), i = Q.Buffer.concat([a, f]);
  return i;
};
Ui.decrypt = function(e, t) {
  Sa.checkArgument(e), Sa.checkArgument(t);
  var a = e.slice(0, 128 / 8), r = e.slice(128 / 8), f = new Zv(t, a), i = f.decrypt(r);
  return i = Pd.padding.pkcs7.strip(i), Q.Buffer.from(i);
};
var R1 = function e(t) {
  if (!(this instanceof e))
    return new e();
  this.opts = t || {};
};
R1.prototype.privateKey = function(e) {
  return Sa.checkArgument(e, "no private key provided"), this._privateKey = e || null, this;
};
R1.prototype.publicKey = function(e) {
  return Sa.checkArgument(e, "no public key provided"), this._publicKey = e || null, this;
};
var $i = function(e, t) {
  var a = "_" + e;
  Object.defineProperty(R1.prototype, e, {
    configurable: !1,
    enumerable: !0,
    get: function() {
      var r = this[a];
      return r || (r = this[a] = t.apply(this)), r;
    }
  });
};
$i("Rbuf", function() {
  return this._privateKey.publicKey.toDER(!0);
});
$i("kEkM", function() {
  var e = this._privateKey.bn, t = this._publicKey.point, a = t.mul(e), r = a.getX(), f = r.toBuffer({ size: 32 });
  return Mf.sha512(f);
});
$i("kE", function() {
  return this.kEkM.slice(0, 32);
});
$i("kM", function() {
  return this.kEkM.slice(32, 64);
});
R1.prototype.encrypt = function(e, t) {
  Q.Buffer.isBuffer(e) || (e = Q.Buffer.from(e)), t === void 0 && (t = Mf.sha256hmac(e, this._privateKey.toBuffer()).slice(0, 16));
  var a = Ui.encrypt(e, this.kE, t), r = Mf.sha256hmac(a, this.kM);
  this.opts.shortTag && (r = r.slice(0, 4));
  var f;
  return this.opts.noKey ? f = Q.Buffer.concat([a, r]) : f = Q.Buffer.concat([this.Rbuf, a, r]), f;
};
R1.prototype.decrypt = function(e) {
  Sa.checkArgument(e);
  var t = 0, a = 32;
  if (this.opts.shortTag && (a = 4), !this.opts.noKey) {
    var r;
    switch (e[0]) {
      case 4:
        r = e.slice(0, 65);
        break;
      case 3:
      case 2:
        r = e.slice(0, 33);
        break;
      default:
        throw new Error("Invalid type: " + e[0]);
    }
    this._publicKey = yB.fromDER(r), t += r.length;
  }
  var f = e.slice(t, e.length - a), i = e.slice(e.length - a, e.length), n = Mf.sha256hmac(f, this.kM);
  this.opts.shortTag && (n = n.slice(0, 4));
  for (var o = !0, s = 0; s < i.length; s++)
    o &= i[s] === n[s];
  if (!o)
    throw new Error("Invalid checksum");
  return Ui.decrypt(f, this.kE);
};
var xB = R1, _B = {
  name: "ECIES",
  message: "Internal Error on bsv-ecies Module {0}",
  errors: [
    {
      name: "DecryptionError",
      message: "Invalid Message: {0}"
    },
    {
      name: "UnsupportAlgorithm",
      message: "Unsupport Algorithm: {0}"
    }
  ]
}, wB = ta.errors.extend(_B), m6 = ta, Rf = m6.PublicKey, I4 = m6.PrivateKey, Md = m6.crypto.Hash, W0 = m6.util.preconditions, SB = xB, Jo = wB, Rd = Wv, Yv = Rd.ModeOfOperation.cbc, ji = function() {
};
ji.encrypt = function(e, t, a) {
  W0.checkArgument(e), W0.checkArgument(t), W0.checkArgument(a), W0.checkArgument(t.length === 16, "keybuf length must be 16"), W0.checkArgument(a.length === 16, "ivbuf length must be 16"), e = Rd.padding.pkcs7.pad(e);
  var r = new Yv(t, a), f = r.encrypt(e);
  return Q.Buffer.from(f);
};
ji.decrypt = function(e, t, a) {
  W0.checkArgument(e), W0.checkArgument(t), W0.checkArgument(a), W0.checkArgument(t.length === 16, "keybuf length must be 16"), W0.checkArgument(a.length === 16, "ivbuf length must be 16");
  var r = new Yv(t, a), f = r.decrypt(e);
  return Q.Buffer.from(Rd.padding.pkcs7.strip(f));
};
var Ar = function e(t, a = "BIE1") {
  if (a !== "BIE1")
    throw new Jo.UnsupportAlgorithm(a);
  if (!(this instanceof e))
    return new e(t, a);
  this._privateKey = new m6.PrivateKey(), this.opts = t || {}, this.opts.ephemeralKey = !0;
};
Ar.prototype.privateKey = function(e) {
  return W0.checkArgument(I4.isValid(e), "no private key provided"), this._privateKey = I4(e.toHex()) || null, this.opts.ephemeralKey = !1, this;
};
Ar.prototype.publicKey = function(e) {
  return W0.checkArgument(Rf.isValid(e), "no public key provided"), this._publicKey = Rf(e.toString()) || null, this._publicKey != null && (this.opts.fixedPublicKey = !0), this;
};
var v6 = function(e, t) {
  var a = "_" + e;
  Object.defineProperty(Ar.prototype, e, {
    configurable: !1,
    enumerable: !0,
    get: function() {
      var r = this[a];
      return r = this[a] = t.apply(this), r;
    }
  });
};
v6("Rbuf", function() {
  return this._privateKey.publicKey.toDER(!0);
});
v6("ivkEkM", function() {
  var e = this._privateKey.bn, t = this._publicKey.point, a = t.mul(e), r = Rf(a), f = r.toBuffer();
  return Md.sha512(f);
});
v6("iv", function() {
  return this.ivkEkM.slice(0, 16);
});
v6("kE", function() {
  return this.ivkEkM.slice(16, 32);
});
v6("kM", function() {
  return this.ivkEkM.slice(32, 64);
});
Ar.prototype.encrypt = function(e) {
  Q.Buffer.isBuffer(e) || (e = Q.Buffer.from(e));
  var t = ji.encrypt(e, this.kE, this.iv), a, r = Q.Buffer.from("BIE1");
  this.opts.noKey && !this.opts.ephemeralKey ? a = Q.Buffer.concat([r, t]) : a = Q.Buffer.concat([r, this.Rbuf, t]);
  var f = Md.sha256hmac(a, this.kM);
  return this.opts.shortTag && (f = f.slice(0, 4)), Q.Buffer.concat([a, f]);
};
Ar.prototype.decrypt = function(e) {
  W0.checkArgument(Q.Buffer.isBuffer(e), "ciphetext must be a buffer");
  var t = 32, a = 4;
  this.opts.shortTag && (t = 4);
  var r = e.slice(0, 4);
  if (!r.equals(Q.Buffer.from("BIE1")))
    throw new Jo.DecryptionError("Invalid Magic");
  if (!this.opts.noKey) {
    var f;
    f = e.slice(4, 37), this.opts.fixedPublicKey ? console.log('Notice: Overriding PublicKey in message. Consider use "noKey" option if you are not sending message to electrum and do not want to use ephemeral key') : this._publicKey = Rf.fromDER(f), a = 37;
  }
  var i = e.slice(a, e.length - t), n = e.slice(e.length - t, e.length), o = Md.sha256hmac(e.slice(0, e.length - t), this.kM);
  if (this.opts.shortTag && (o = o.slice(0, 4)), !n.equals(o))
    throw new Jo.DecryptionError("Invalid checksum");
  return ji.decrypt(i, this.kE, this.iv);
};
Ar.bitcoreECIES = SB;
var EB = Ar, TB = EB, Xv = TB;
const AB = /* @__PURE__ */ Qt(Xv);
var IB = null;
const kB = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: IB
}, Symbol.toStringTag, { value: "Module" })), Zt = /* @__PURE__ */ Rs(kB);
function Z5(e) {
  if (typeof e != "string")
    throw new TypeError("Path must be a string. Received " + JSON.stringify(e));
}
function k4(e, t) {
  for (var a = "", r = 0, f = -1, i = 0, n, o = 0; o <= e.length; ++o) {
    if (o < e.length)
      n = e.charCodeAt(o);
    else {
      if (n === 47)
        break;
      n = 47;
    }
    if (n === 47) {
      if (!(f === o - 1 || i === 1))
        if (f !== o - 1 && i === 2) {
          if (a.length < 2 || r !== 2 || a.charCodeAt(a.length - 1) !== 46 || a.charCodeAt(a.length - 2) !== 46) {
            if (a.length > 2) {
              var s = a.lastIndexOf("/");
              if (s !== a.length - 1) {
                s === -1 ? (a = "", r = 0) : (a = a.slice(0, s), r = a.length - 1 - a.lastIndexOf("/")), f = o, i = 0;
                continue;
              }
            } else if (a.length === 2 || a.length === 1) {
              a = "", r = 0, f = o, i = 0;
              continue;
            }
          }
          t && (a.length > 0 ? a += "/.." : a = "..", r = 2);
        } else
          a.length > 0 ? a += "/" + e.slice(f + 1, o) : a = e.slice(f + 1, o), r = o - f - 1;
      f = o, i = 0;
    } else
      n === 46 && i !== -1 ? ++i : i = -1;
  }
  return a;
}
function OB(e, t) {
  var a = t.dir || t.root, r = t.base || (t.name || "") + (t.ext || "");
  return a ? a === t.root ? a + r : a + e + r : r;
}
var Zr = {
  // path.resolve([from ...], to)
  resolve: function() {
    for (var t = "", a = !1, r, f = arguments.length - 1; f >= -1 && !a; f--) {
      var i;
      f >= 0 ? i = arguments[f] : (r === void 0 && (r = g7.cwd()), i = r), Z5(i), i.length !== 0 && (t = i + "/" + t, a = i.charCodeAt(0) === 47);
    }
    return t = k4(t, !a), a ? t.length > 0 ? "/" + t : "/" : t.length > 0 ? t : ".";
  },
  normalize: function(t) {
    if (Z5(t), t.length === 0)
      return ".";
    var a = t.charCodeAt(0) === 47, r = t.charCodeAt(t.length - 1) === 47;
    return t = k4(t, !a), t.length === 0 && !a && (t = "."), t.length > 0 && r && (t += "/"), a ? "/" + t : t;
  },
  isAbsolute: function(t) {
    return Z5(t), t.length > 0 && t.charCodeAt(0) === 47;
  },
  join: function() {
    if (arguments.length === 0)
      return ".";
    for (var t, a = 0; a < arguments.length; ++a) {
      var r = arguments[a];
      Z5(r), r.length > 0 && (t === void 0 ? t = r : t += "/" + r);
    }
    return t === void 0 ? "." : Zr.normalize(t);
  },
  relative: function(t, a) {
    if (Z5(t), Z5(a), t === a || (t = Zr.resolve(t), a = Zr.resolve(a), t === a))
      return "";
    for (var r = 1; r < t.length && t.charCodeAt(r) === 47; ++r)
      ;
    for (var f = t.length, i = f - r, n = 1; n < a.length && a.charCodeAt(n) === 47; ++n)
      ;
    for (var o = a.length, s = o - n, b = i < s ? i : s, l = -1, v = 0; v <= b; ++v) {
      if (v === b) {
        if (s > b) {
          if (a.charCodeAt(n + v) === 47)
            return a.slice(n + v + 1);
          if (v === 0)
            return a.slice(n + v);
        } else
          i > b && (t.charCodeAt(r + v) === 47 ? l = v : v === 0 && (l = 0));
        break;
      }
      var m = t.charCodeAt(r + v), x = a.charCodeAt(n + v);
      if (m !== x)
        break;
      m === 47 && (l = v);
    }
    var I = "";
    for (v = r + l + 1; v <= f; ++v)
      (v === f || t.charCodeAt(v) === 47) && (I.length === 0 ? I += ".." : I += "/..");
    return I.length > 0 ? I + a.slice(n + l) : (n += l, a.charCodeAt(n) === 47 && ++n, a.slice(n));
  },
  _makeLong: function(t) {
    return t;
  },
  dirname: function(t) {
    if (Z5(t), t.length === 0)
      return ".";
    for (var a = t.charCodeAt(0), r = a === 47, f = -1, i = !0, n = t.length - 1; n >= 1; --n)
      if (a = t.charCodeAt(n), a === 47) {
        if (!i) {
          f = n;
          break;
        }
      } else
        i = !1;
    return f === -1 ? r ? "/" : "." : r && f === 1 ? "//" : t.slice(0, f);
  },
  basename: function(t, a) {
    if (a !== void 0 && typeof a != "string")
      throw new TypeError('"ext" argument must be a string');
    Z5(t);
    var r = 0, f = -1, i = !0, n;
    if (a !== void 0 && a.length > 0 && a.length <= t.length) {
      if (a.length === t.length && a === t)
        return "";
      var o = a.length - 1, s = -1;
      for (n = t.length - 1; n >= 0; --n) {
        var b = t.charCodeAt(n);
        if (b === 47) {
          if (!i) {
            r = n + 1;
            break;
          }
        } else
          s === -1 && (i = !1, s = n + 1), o >= 0 && (b === a.charCodeAt(o) ? --o === -1 && (f = n) : (o = -1, f = s));
      }
      return r === f ? f = s : f === -1 && (f = t.length), t.slice(r, f);
    } else {
      for (n = t.length - 1; n >= 0; --n)
        if (t.charCodeAt(n) === 47) {
          if (!i) {
            r = n + 1;
            break;
          }
        } else
          f === -1 && (i = !1, f = n + 1);
      return f === -1 ? "" : t.slice(r, f);
    }
  },
  extname: function(t) {
    Z5(t);
    for (var a = -1, r = 0, f = -1, i = !0, n = 0, o = t.length - 1; o >= 0; --o) {
      var s = t.charCodeAt(o);
      if (s === 47) {
        if (!i) {
          r = o + 1;
          break;
        }
        continue;
      }
      f === -1 && (i = !1, f = o + 1), s === 46 ? a === -1 ? a = o : n !== 1 && (n = 1) : a !== -1 && (n = -1);
    }
    return a === -1 || f === -1 || // We saw a non-dot character immediately before the dot
    n === 0 || // The (right-most) trimmed path component is exactly '..'
    n === 1 && a === f - 1 && a === r + 1 ? "" : t.slice(a, f);
  },
  format: function(t) {
    if (t === null || typeof t != "object")
      throw new TypeError('The "pathObject" argument must be of type Object. Received type ' + typeof t);
    return OB("/", t);
  },
  parse: function(t) {
    Z5(t);
    var a = { root: "", dir: "", base: "", ext: "", name: "" };
    if (t.length === 0)
      return a;
    var r = t.charCodeAt(0), f = r === 47, i;
    f ? (a.root = "/", i = 1) : i = 0;
    for (var n = -1, o = 0, s = -1, b = !0, l = t.length - 1, v = 0; l >= i; --l) {
      if (r = t.charCodeAt(l), r === 47) {
        if (!b) {
          o = l + 1;
          break;
        }
        continue;
      }
      s === -1 && (b = !1, s = l + 1), r === 46 ? n === -1 ? n = l : v !== 1 && (v = 1) : n !== -1 && (v = -1);
    }
    return n === -1 || s === -1 || // We saw a non-dot character immediately before the dot
    v === 0 || // The (right-most) trimmed path component is exactly '..'
    v === 1 && n === s - 1 && n === o + 1 ? s !== -1 && (o === 0 && f ? a.base = a.name = t.slice(1, s) : a.base = a.name = t.slice(o, s)) : (o === 0 && f ? (a.name = t.slice(1, n), a.base = t.slice(1, s)) : (a.name = t.slice(o, n), a.base = t.slice(o, s)), a.ext = t.slice(n, s)), o > 0 ? a.dir = t.slice(0, o - 1) : f && (a.dir = "/"), a;
  },
  sep: "/",
  delimiter: ":",
  win32: null,
  posix: null
};
Zr.posix = Zr;
var Et = Zr, r0 = {};
r0.endianness = function() {
  return "LE";
};
r0.hostname = function() {
  return typeof location < "u" ? location.hostname : "";
};
r0.loadavg = function() {
  return [];
};
r0.uptime = function() {
  return 0;
};
r0.freemem = function() {
  return Number.MAX_VALUE;
};
r0.totalmem = function() {
  return Number.MAX_VALUE;
};
r0.cpus = function() {
  return [];
};
r0.type = function() {
  return "Browser";
};
r0.release = function() {
  return typeof navigator < "u" ? navigator.appVersion : "";
};
r0.networkInterfaces = r0.getNetworkInterfaces = function() {
  return {};
};
r0.arch = function() {
  return "javascript";
};
r0.platform = function() {
  return "browser";
};
r0.tmpdir = r0.tmpDir = function() {
  return "/tmp";
};
r0.EOL = `
`;
r0.homedir = function() {
  return "/";
};
var PB = "0.5.7";
const Bd = 1, Nd = 2, Cd = 3, Jv = 4, Qv = 5, ey = 6, MB = {
  // JSON Single Character Escape Sequences
  8: "\\b",
  9: "\\t",
  10: "\\n",
  12: "\\f",
  13: "\\r",
  34: '\\"',
  92: "\\\\"
};
function RB(e) {
  return e >= 55296 && e <= 56319;
}
function BB(e) {
  return e >= 56320 && e <= 57343;
}
function ty(e) {
  return typeof e.pipe == "function" && typeof e._read == "function" && typeof e._readableState == "object" && e._readableState !== null;
}
function NB(e, t, a, r) {
  switch (a && typeof a.toJSON == "function" && (a = a.toJSON()), r !== null && (a = r.call(e, String(t), a)), typeof a) {
    case "function":
    case "symbol":
      a = void 0;
      break;
    case "object":
      if (a !== null) {
        const f = a.constructor;
        (f === String || f === Number || f === Boolean) && (a = a.valueOf());
      }
      break;
  }
  return a;
}
function CB(e) {
  return e === null || typeof e != "object" ? Bd : Array.isArray(e) ? Cd : Nd;
}
function DB(e) {
  return e === null || typeof e != "object" ? Bd : typeof e.then == "function" ? Jv : ty(e) ? e._readableState.objectMode ? ey : Qv : Array.isArray(e) ? Cd : Nd;
}
function LB(e) {
  return typeof e == "function" ? e : Array.isArray(e) ? [...new Set(
    e.map((a) => {
      const r = a && a.constructor;
      return r === String || r === Number ? String(a) : null;
    }).filter((a) => typeof a == "string")
  )] : null;
}
function FB(e) {
  return typeof e == "number" ? !Number.isFinite(e) || e < 1 ? !1 : " ".repeat(Math.min(e, 10)) : typeof e == "string" && e.slice(0, 10) || !1;
}
var ay = {
  escapableCharCodeSubstitution: MB,
  isLeadingSurrogate: RB,
  isTrailingSurrogate: BB,
  type: {
    PRIMITIVE: Bd,
    PROMISE: Jv,
    ARRAY: Cd,
    OBJECT: Nd,
    STRING_STREAM: Qv,
    OBJECT_STREAM: ey
  },
  isReadableStream: ty,
  replaceValue: NB,
  getTypeNative: CB,
  getTypeAsync: DB,
  normalizeReplacer: LB,
  normalizeSpace: FB
};
const {
  normalizeReplacer: HB,
  normalizeSpace: UB,
  replaceValue: $B,
  getTypeNative: jB,
  getTypeAsync: VB,
  isLeadingSurrogate: zB,
  isTrailingSurrogate: qB,
  escapableCharCodeSubstitution: KB,
  type: {
    PRIMITIVE: O4,
    OBJECT: GB,
    ARRAY: WB,
    PROMISE: ZB,
    STRING_STREAM: YB,
    OBJECT_STREAM: XB
  }
} = ay, JB = Array.from({ length: 2048 }).map((e, t) => KB.hasOwnProperty(t) ? 2 : t < 32 ? 6 : t < 128 ? 1 : 2);
function ry(e) {
  let t = 0, a = !1;
  for (let r = 0; r < e.length; r++) {
    const f = e.charCodeAt(r);
    if (f < 2048)
      t += JB[f];
    else if (zB(f)) {
      t += 6, a = !0;
      continue;
    } else
      qB(f) ? t = a ? t - 2 : t + 6 : t += 3;
    a = !1;
  }
  return t + 2;
}
function QB(e) {
  switch (typeof e) {
    case "string":
      return ry(e);
    case "number":
      return Number.isFinite(e) ? String(e).length : 4;
    case "boolean":
      return e ? 4 : 5;
    case "undefined":
    case "object":
      return 4;
    default:
      return 0;
  }
}
function eN(e) {
  return e = UB(e), typeof e == "string" ? e.length : 0;
}
var tN = function(t, a, r, f) {
  function i(P, M, R) {
    if (I)
      return;
    R = $B(P, M, R, a);
    let F = m(R);
    if (F !== O4 && s.has(R)) {
      l.add(R), k += 4, f.continueOnCircular || (I = !0);
      return;
    }
    switch (F) {
      case O4:
        R !== void 0 || Array.isArray(P) ? k += QB(R) : P === x && (k += 9);
        break;
      case GB: {
        if (o.has(R)) {
          b.add(R), k += o.get(R);
          break;
        }
        const C = k;
        let L = 0;
        k += 2, s.add(R);
        for (const U in R)
          if (hasOwnProperty.call(R, U) && (n === null || n.has(U))) {
            const q = k;
            i(R, U, R[U]), q !== k && (k += ry(U) + 1, L++);
          }
        L > 1 && (k += L - 1), s.delete(R), r > 0 && L > 0 && (k += (1 + (s.size + 1) * r + 1) * L, k += 1 + s.size * r), o.set(R, k - C);
        break;
      }
      case WB: {
        if (o.has(R)) {
          b.add(R), k += o.get(R);
          break;
        }
        const C = k;
        k += 2, s.add(R);
        for (let L = 0; L < R.length; L++)
          i(R, L, R[L]);
        R.length > 1 && (k += R.length - 1), s.delete(R), r > 0 && R.length > 0 && (k += (1 + (s.size + 1) * r) * R.length, k += 1 + s.size * r), o.set(R, k - C);
        break;
      }
      case ZB:
      case YB:
        v.add(R);
        break;
      case XB:
        k += 2, v.add(R);
        break;
    }
  }
  let n = null;
  a = HB(a), Array.isArray(a) && (n = new Set(a), a = null), r = eN(r), f = f || {};
  const o = /* @__PURE__ */ new Map(), s = /* @__PURE__ */ new Set(), b = /* @__PURE__ */ new Set(), l = /* @__PURE__ */ new Set(), v = /* @__PURE__ */ new Set(), m = f.async ? VB : jB, x = { "": t };
  let I = !1, k = 0;
  return i(x, "", t), {
    minLength: isNaN(k) ? 1 / 0 : k,
    circular: [...l],
    duplicate: [...b],
    async: [...v]
  };
}, aN = () => {
  throw new Error("Method is not supported");
}, rN = TextDecoder;
const { isReadableStream: fN } = ay, iN = rN, X1 = 1, nN = 2, oN = new iN();
function P4(e) {
  return e !== null && typeof e == "object";
}
function b2(e, t) {
  return e.name === "SyntaxError" && t.jsonParseOffset && (e.message = e.message.replace(
    /at position (\d+)/,
    (a, r) => "at position " + (Number(r) + t.jsonParseOffset)
  )), e;
}
function sN(e, t) {
  const a = e.length;
  e.length += t.length;
  for (let r = 0; r < t.length; r++)
    e[a + r] = t[r];
}
var dN = function(e) {
  let t = new cN();
  if (P4(e) && fN(e))
    return new Promise((a, r) => {
      e.on("data", (f) => {
        try {
          t.push(f);
        } catch (i) {
          r(b2(i, t)), t = null;
        }
      }).on("error", (f) => {
        t = null, r(f);
      }).on("end", () => {
        try {
          a(t.finish());
        } catch (f) {
          r(b2(f, t));
        } finally {
          t = null;
        }
      });
    });
  if (typeof e == "function") {
    const a = e();
    if (P4(a) && (Symbol.iterator in a || Symbol.asyncIterator in a))
      return new Promise(async (r, f) => {
        try {
          for await (const i of a)
            t.push(i);
          r(t.finish());
        } catch (i) {
          f(b2(i, t));
        } finally {
          t = null;
        }
      });
  }
  throw new Error(
    "Chunk emitter should be readable stream, generator, async generator or function returning an iterable object"
  );
};
class cN {
  constructor() {
    this.value = void 0, this.valueStack = null, this.stack = new Array(100), this.lastFlushDepth = 0, this.flushDepth = 0, this.stateString = !1, this.stateStringEscape = !1, this.pendingByteSeq = null, this.pendingChunk = null, this.chunkOffset = 0, this.jsonParseOffset = 0;
  }
  parseAndAppend(t, a) {
    this.stack[this.lastFlushDepth - 1] === X1 ? (a && (this.jsonParseOffset--, t = "{" + t + "}"), Object.assign(this.valueStack.value, JSON.parse(t))) : (a && (this.jsonParseOffset--, t = "[" + t + "]"), sN(this.valueStack.value, JSON.parse(t)));
  }
  prepareAddition(t) {
    const { value: a } = this.valueStack;
    if (Array.isArray(a) ? a.length !== 0 : Object.keys(a).length !== 0) {
      if (t[0] === ",")
        return this.jsonParseOffset++, t.slice(1);
      if (t[0] !== "}" && t[0] !== "]")
        return this.jsonParseOffset -= 3, "[[]" + t;
    }
    return t;
  }
  flush(t, a, r) {
    let f = t.slice(a, r);
    if (this.jsonParseOffset = this.chunkOffset + a, this.pendingChunk !== null && (f = this.pendingChunk + f, this.jsonParseOffset -= this.pendingChunk.length, this.pendingChunk = null), this.flushDepth === this.lastFlushDepth)
      this.flushDepth > 0 ? this.parseAndAppend(this.prepareAddition(f), !0) : (this.value = JSON.parse(f), this.valueStack = {
        value: this.value,
        prev: null
      });
    else if (this.flushDepth > this.lastFlushDepth) {
      for (let i = this.flushDepth - 1; i >= this.lastFlushDepth; i--)
        f += this.stack[i] === X1 ? "}" : "]";
      this.lastFlushDepth === 0 ? (this.value = JSON.parse(f), this.valueStack = {
        value: this.value,
        prev: null
      }) : this.parseAndAppend(this.prepareAddition(f), !0);
      for (let i = this.lastFlushDepth || 1; i < this.flushDepth; i++) {
        let n = this.valueStack.value;
        if (this.stack[i - 1] === X1) {
          let o;
          for (o in n)
            ;
          n = n[o];
        } else
          n = n[n.length - 1];
        this.valueStack = {
          value: n,
          prev: this.valueStack
        };
      }
    } else {
      f = this.prepareAddition(f);
      for (let i = this.lastFlushDepth - 1; i >= this.flushDepth; i--)
        this.jsonParseOffset--, f = (this.stack[i] === X1 ? "{" : "[") + f;
      this.parseAndAppend(f, !1);
      for (let i = this.lastFlushDepth - 1; i >= this.flushDepth; i--)
        this.valueStack = this.valueStack.prev;
    }
    this.lastFlushDepth = this.flushDepth;
  }
  push(t) {
    if (typeof t != "string") {
      if (this.pendingByteSeq !== null) {
        const i = t;
        t = new Uint8Array(this.pendingByteSeq.length + i.length), t.set(this.pendingByteSeq), t.set(i, this.pendingByteSeq.length), this.pendingByteSeq = null;
      }
      if (t[t.length - 1] > 127)
        for (let i = 0; i < t.length; i++) {
          const n = t[t.length - 1 - i];
          if (n >> 6 === 3) {
            i++, (i !== 4 && n >> 3 === 30 || i !== 3 && n >> 4 === 14 || i !== 2 && n >> 5 === 6) && (this.pendingByteSeq = t.slice(t.length - i), t = t.slice(0, -i));
            break;
          }
        }
      t = oN.decode(t);
    }
    const a = t.length;
    let r = 0, f = 0;
    e:
      for (let i = 0; i < a; i++) {
        if (this.stateString) {
          for (; i < a; i++)
            if (this.stateStringEscape)
              this.stateStringEscape = !1;
            else
              switch (t.charCodeAt(i)) {
                case 34:
                  this.stateString = !1;
                  continue e;
                case 92:
                  this.stateStringEscape = !0;
              }
          break;
        }
        switch (t.charCodeAt(i)) {
          case 34:
            this.stateString = !0, this.stateStringEscape = !1;
            break;
          case 44:
            f = i;
            break;
          case 123:
            f = i + 1, this.stack[this.flushDepth++] = X1;
            break;
          case 91:
            f = i + 1, this.stack[this.flushDepth++] = nN;
            break;
          case 93:
          case 125:
            f = i + 1, this.flushDepth--, this.flushDepth < this.lastFlushDepth && (this.flush(t, r, f), r = f);
            break;
          case 9:
          case 10:
          case 13:
          case 32:
            r === i && r++, f === i && f++;
            break;
        }
      }
    f > r && this.flush(t, r, f), f < a && (this.pendingChunk !== null ? this.pendingChunk += t : this.pendingChunk = t.slice(f, a)), this.chunkOffset += a;
  }
  finish() {
    return this.pendingChunk !== null && (this.flush("", 0, 0), this.pendingChunk = null), this.value;
  }
}
var uN = {
  version: PB,
  stringifyInfo: tN,
  stringifyStream: aN,
  parseChunked: dN
}, fy = {}, Qo = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
for (var C6 = 0; C6 < Qo.length; C6++)
  fy[Qo.charCodeAt(C6)] = C6;
function lN(e) {
  for (var t = [], a = [], r = [
    0,
    0,
    0,
    0,
    0
  ], f = 0, i = 0, n = 0, o = 0; i < e.length; i++) {
    var s = e.charCodeAt(i);
    if (s === 44)
      m2(a, r, f), f = 0;
    else if (s === 59)
      m2(a, r, f), f = 0, t.push(a), a = [], r[0] = 0;
    else {
      var b = fy[s];
      if (b === void 0)
        throw new Error("Invalid character (" + String.fromCharCode(s) + ")");
      var l = b & 32;
      if (b &= 31, o += b << n, l)
        n += 5;
      else {
        var v = o & 1;
        o >>>= 1, v && (o = o === 0 ? -2147483648 : -o), r[f] += o, f++, o = n = 0;
      }
    }
  }
  return m2(a, r, f), t.push(a), t;
}
function m2(e, t, a) {
  a === 4 ? e.push([t[0], t[1], t[2], t[3]]) : a === 5 ? e.push([t[0], t[1], t[2], t[3], t[4]]) : a === 1 && e.push([t[0]]);
}
function pN(e) {
  for (var t = 0, a = 0, r = 0, f = 0, i = "", n = 0; n < e.length; n++) {
    var o = e[n];
    if (n > 0 && (i += ";"), o.length !== 0) {
      for (var s = 0, b = [], l = 0, v = o; l < v.length; l++) {
        var m = v[l], x = J1(m[0] - s);
        s = m[0], m.length > 1 && (x += J1(m[1] - t) + J1(m[2] - a) + J1(m[3] - r), t = m[1], a = m[2], r = m[3]), m.length === 5 && (x += J1(m[4] - f), f = m[4]), b.push(x);
      }
      i += b.join(",");
    }
  }
  return i;
}
function J1(e) {
  var t = "";
  e = e < 0 ? -e << 1 | 1 : e << 1;
  do {
    var a = e & 31;
    e >>>= 5, e > 0 && (a |= 32), t += Qo[a];
  } while (e > 0);
  return t;
}
const hN = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  decode: lN,
  encode: pN
}, Symbol.toStringTag, { value: "Module" })), bN = /* @__PURE__ */ Rs(hN);
var v2 = {}, iy = { exports: {} }, ny = { exports: {} };
(function() {
  var e = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", t = {
    // Bit-wise rotation left
    rotl: function(a, r) {
      return a << r | a >>> 32 - r;
    },
    // Bit-wise rotation right
    rotr: function(a, r) {
      return a << 32 - r | a >>> r;
    },
    // Swap big-endian to little-endian and vice versa
    endian: function(a) {
      if (a.constructor == Number)
        return t.rotl(a, 8) & 16711935 | t.rotl(a, 24) & 4278255360;
      for (var r = 0; r < a.length; r++)
        a[r] = t.endian(a[r]);
      return a;
    },
    // Generate an array of any length of random bytes
    randomBytes: function(a) {
      for (var r = []; a > 0; a--)
        r.push(Math.floor(Math.random() * 256));
      return r;
    },
    // Convert a byte array to big-endian 32-bit words
    bytesToWords: function(a) {
      for (var r = [], f = 0, i = 0; f < a.length; f++, i += 8)
        r[i >>> 5] |= a[f] << 24 - i % 32;
      return r;
    },
    // Convert big-endian 32-bit words to a byte array
    wordsToBytes: function(a) {
      for (var r = [], f = 0; f < a.length * 32; f += 8)
        r.push(a[f >>> 5] >>> 24 - f % 32 & 255);
      return r;
    },
    // Convert a byte array to a hex string
    bytesToHex: function(a) {
      for (var r = [], f = 0; f < a.length; f++)
        r.push((a[f] >>> 4).toString(16)), r.push((a[f] & 15).toString(16));
      return r.join("");
    },
    // Convert a hex string to a byte array
    hexToBytes: function(a) {
      for (var r = [], f = 0; f < a.length; f += 2)
        r.push(parseInt(a.substr(f, 2), 16));
      return r;
    },
    // Convert a byte array to a base-64 string
    bytesToBase64: function(a) {
      for (var r = [], f = 0; f < a.length; f += 3)
        for (var i = a[f] << 16 | a[f + 1] << 8 | a[f + 2], n = 0; n < 4; n++)
          f * 8 + n * 6 <= a.length * 8 ? r.push(e.charAt(i >>> 6 * (3 - n) & 63)) : r.push("=");
      return r.join("");
    },
    // Convert a base-64 string to a byte array
    base64ToBytes: function(a) {
      a = a.replace(/[^A-Z0-9+\/]/ig, "");
      for (var r = [], f = 0, i = 0; f < a.length; i = ++f % 4)
        i != 0 && r.push((e.indexOf(a.charAt(f - 1)) & Math.pow(2, -2 * i + 8) - 1) << i * 2 | e.indexOf(a.charAt(f)) >>> 6 - i * 2);
      return r;
    }
  };
  ny.exports = t;
})();
var mN = ny.exports, es = {
  // UTF-8 encoding
  utf8: {
    // Convert a string to a byte array
    stringToBytes: function(e) {
      return es.bin.stringToBytes(unescape(encodeURIComponent(e)));
    },
    // Convert a byte array to a string
    bytesToString: function(e) {
      return decodeURIComponent(escape(es.bin.bytesToString(e)));
    }
  },
  // Binary encoding
  bin: {
    // Convert a string to a byte array
    stringToBytes: function(e) {
      for (var t = [], a = 0; a < e.length; a++)
        t.push(e.charCodeAt(a) & 255);
      return t;
    },
    // Convert a byte array to a string
    bytesToString: function(e) {
      for (var t = [], a = 0; a < e.length; a++)
        t.push(String.fromCharCode(e[a]));
      return t.join("");
    }
  }
}, M4 = es;
/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
var vN = function(e) {
  return e != null && (oy(e) || yN(e) || !!e._isBuffer);
};
function oy(e) {
  return !!e.constructor && typeof e.constructor.isBuffer == "function" && e.constructor.isBuffer(e);
}
function yN(e) {
  return typeof e.readFloatLE == "function" && typeof e.slice == "function" && oy(e.slice(0, 0));
}
(function() {
  var e = mN, t = M4.utf8, a = vN, r = M4.bin, f = function(i, n) {
    i.constructor == String ? n && n.encoding === "binary" ? i = r.stringToBytes(i) : i = t.stringToBytes(i) : a(i) ? i = Array.prototype.slice.call(i, 0) : !Array.isArray(i) && i.constructor !== Uint8Array && (i = i.toString());
    for (var o = e.bytesToWords(i), s = i.length * 8, b = 1732584193, l = -271733879, v = -1732584194, m = 271733878, x = 0; x < o.length; x++)
      o[x] = (o[x] << 8 | o[x] >>> 24) & 16711935 | (o[x] << 24 | o[x] >>> 8) & 4278255360;
    o[s >>> 5] |= 128 << s % 32, o[(s + 64 >>> 9 << 4) + 14] = s;
    for (var I = f._ff, k = f._gg, P = f._hh, M = f._ii, x = 0; x < o.length; x += 16) {
      var R = b, F = l, C = v, L = m;
      b = I(b, l, v, m, o[x + 0], 7, -680876936), m = I(m, b, l, v, o[x + 1], 12, -389564586), v = I(v, m, b, l, o[x + 2], 17, 606105819), l = I(l, v, m, b, o[x + 3], 22, -1044525330), b = I(b, l, v, m, o[x + 4], 7, -176418897), m = I(m, b, l, v, o[x + 5], 12, 1200080426), v = I(v, m, b, l, o[x + 6], 17, -1473231341), l = I(l, v, m, b, o[x + 7], 22, -45705983), b = I(b, l, v, m, o[x + 8], 7, 1770035416), m = I(m, b, l, v, o[x + 9], 12, -1958414417), v = I(v, m, b, l, o[x + 10], 17, -42063), l = I(l, v, m, b, o[x + 11], 22, -1990404162), b = I(b, l, v, m, o[x + 12], 7, 1804603682), m = I(m, b, l, v, o[x + 13], 12, -40341101), v = I(v, m, b, l, o[x + 14], 17, -1502002290), l = I(l, v, m, b, o[x + 15], 22, 1236535329), b = k(b, l, v, m, o[x + 1], 5, -165796510), m = k(m, b, l, v, o[x + 6], 9, -1069501632), v = k(v, m, b, l, o[x + 11], 14, 643717713), l = k(l, v, m, b, o[x + 0], 20, -373897302), b = k(b, l, v, m, o[x + 5], 5, -701558691), m = k(m, b, l, v, o[x + 10], 9, 38016083), v = k(v, m, b, l, o[x + 15], 14, -660478335), l = k(l, v, m, b, o[x + 4], 20, -405537848), b = k(b, l, v, m, o[x + 9], 5, 568446438), m = k(m, b, l, v, o[x + 14], 9, -1019803690), v = k(v, m, b, l, o[x + 3], 14, -187363961), l = k(l, v, m, b, o[x + 8], 20, 1163531501), b = k(b, l, v, m, o[x + 13], 5, -1444681467), m = k(m, b, l, v, o[x + 2], 9, -51403784), v = k(v, m, b, l, o[x + 7], 14, 1735328473), l = k(l, v, m, b, o[x + 12], 20, -1926607734), b = P(b, l, v, m, o[x + 5], 4, -378558), m = P(m, b, l, v, o[x + 8], 11, -2022574463), v = P(v, m, b, l, o[x + 11], 16, 1839030562), l = P(l, v, m, b, o[x + 14], 23, -35309556), b = P(b, l, v, m, o[x + 1], 4, -1530992060), m = P(m, b, l, v, o[x + 4], 11, 1272893353), v = P(v, m, b, l, o[x + 7], 16, -155497632), l = P(l, v, m, b, o[x + 10], 23, -1094730640), b = P(b, l, v, m, o[x + 13], 4, 681279174), m = P(m, b, l, v, o[x + 0], 11, -358537222), v = P(v, m, b, l, o[x + 3], 16, -722521979), l = P(l, v, m, b, o[x + 6], 23, 76029189), b = P(b, l, v, m, o[x + 9], 4, -640364487), m = P(m, b, l, v, o[x + 12], 11, -421815835), v = P(v, m, b, l, o[x + 15], 16, 530742520), l = P(l, v, m, b, o[x + 2], 23, -995338651), b = M(b, l, v, m, o[x + 0], 6, -198630844), m = M(m, b, l, v, o[x + 7], 10, 1126891415), v = M(v, m, b, l, o[x + 14], 15, -1416354905), l = M(l, v, m, b, o[x + 5], 21, -57434055), b = M(b, l, v, m, o[x + 12], 6, 1700485571), m = M(m, b, l, v, o[x + 3], 10, -1894986606), v = M(v, m, b, l, o[x + 10], 15, -1051523), l = M(l, v, m, b, o[x + 1], 21, -2054922799), b = M(b, l, v, m, o[x + 8], 6, 1873313359), m = M(m, b, l, v, o[x + 15], 10, -30611744), v = M(v, m, b, l, o[x + 6], 15, -1560198380), l = M(l, v, m, b, o[x + 13], 21, 1309151649), b = M(b, l, v, m, o[x + 4], 6, -145523070), m = M(m, b, l, v, o[x + 11], 10, -1120210379), v = M(v, m, b, l, o[x + 2], 15, 718787259), l = M(l, v, m, b, o[x + 9], 21, -343485551), b = b + R >>> 0, l = l + F >>> 0, v = v + C >>> 0, m = m + L >>> 0;
    }
    return e.endian([b, l, v, m]);
  };
  f._ff = function(i, n, o, s, b, l, v) {
    var m = i + (n & o | ~n & s) + (b >>> 0) + v;
    return (m << l | m >>> 32 - l) + n;
  }, f._gg = function(i, n, o, s, b, l, v) {
    var m = i + (n & s | o & ~s) + (b >>> 0) + v;
    return (m << l | m >>> 32 - l) + n;
  }, f._hh = function(i, n, o, s, b, l, v) {
    var m = i + (n ^ o ^ s) + (b >>> 0) + v;
    return (m << l | m >>> 32 - l) + n;
  }, f._ii = function(i, n, o, s, b, l, v) {
    var m = i + (o ^ (n | ~s)) + (b >>> 0) + v;
    return (m << l | m >>> 32 - l) + n;
  }, f._blocksize = 16, f._digestsize = 16, iy.exports = function(i, n) {
    if (i == null)
      throw new Error("Illegal argument " + i);
    var o = e.wordsToBytes(f(i, n));
    return n && n.asBytes ? o : n && n.asString ? r.bytesToString(o) : e.bytesToHex(o);
  };
})();
var gN = iy.exports, D6 = {}, R4;
function xN() {
  if (R4)
    return D6;
  R4 = 1;
  var e = Et, t = g7.platform === "win32", a = Zt, r = g7.env.NODE_DEBUG && /fs/.test(g7.env.NODE_DEBUG);
  function f() {
    var s;
    if (r) {
      var b = new Error();
      s = l;
    } else
      s = v;
    return s;
    function l(m) {
      m && (b.message = m.message, m = b, v(m));
    }
    function v(m) {
      if (m) {
        if (g7.throwDeprecation)
          throw m;
        if (!g7.noDeprecation) {
          var x = "fs: missing callback " + (m.stack || m.message);
          g7.traceDeprecation ? console.trace(x) : console.error(x);
        }
      }
    }
  }
  function i(s) {
    return typeof s == "function" ? s : f();
  }
  if (e.normalize, t)
    var n = /(.*?)(?:[\/\\]+|$)/g;
  else
    var n = /(.*?)(?:[\/]+|$)/g;
  if (t)
    var o = /^(?:[a-zA-Z]:|[\\\/]{2}[^\\\/]+[\\\/][^\\\/]+)?[\\\/]*/;
  else
    var o = /^[\/]*/;
  return D6.realpathSync = function(b, l) {
    if (b = e.resolve(b), l && Object.prototype.hasOwnProperty.call(l, b))
      return l[b];
    var v = b, m = {}, x = {}, I, k, P, M;
    R();
    function R() {
      var Z = o.exec(b);
      I = Z[0].length, k = Z[0], P = Z[0], M = "", t && !x[P] && (a.lstatSync(P), x[P] = !0);
    }
    for (; I < b.length; ) {
      n.lastIndex = I;
      var F = n.exec(b);
      if (M = k, k += F[0], P = M + F[1], I = n.lastIndex, !(x[P] || l && l[P] === P)) {
        var C;
        if (l && Object.prototype.hasOwnProperty.call(l, P))
          C = l[P];
        else {
          var L = a.lstatSync(P);
          if (!L.isSymbolicLink()) {
            x[P] = !0, l && (l[P] = P);
            continue;
          }
          var U = null;
          if (!t) {
            var q = L.dev.toString(32) + ":" + L.ino.toString(32);
            m.hasOwnProperty(q) && (U = m[q]);
          }
          U === null && (a.statSync(P), U = a.readlinkSync(P)), C = e.resolve(M, U), l && (l[P] = C), t || (m[q] = U);
        }
        b = e.resolve(C, b.slice(I)), R();
      }
    }
    return l && (l[v] = b), b;
  }, D6.realpath = function(b, l, v) {
    if (typeof v != "function" && (v = i(l), l = null), b = e.resolve(b), l && Object.prototype.hasOwnProperty.call(l, b))
      return g7.nextTick(v.bind(null, null, l[b]));
    var m = b, x = {}, I = {}, k, P, M, R;
    F();
    function F() {
      var Z = o.exec(b);
      k = Z[0].length, P = Z[0], M = Z[0], R = "", t && !I[M] ? a.lstat(M, function(z) {
        if (z)
          return v(z);
        I[M] = !0, C();
      }) : g7.nextTick(C);
    }
    function C() {
      if (k >= b.length)
        return l && (l[m] = b), v(null, b);
      n.lastIndex = k;
      var Z = n.exec(b);
      return R = P, P += Z[0], M = R + Z[1], k = n.lastIndex, I[M] || l && l[M] === M ? g7.nextTick(C) : l && Object.prototype.hasOwnProperty.call(l, M) ? q(l[M]) : a.lstat(M, L);
    }
    function L(Z, z) {
      if (Z)
        return v(Z);
      if (!z.isSymbolicLink())
        return I[M] = !0, l && (l[M] = M), g7.nextTick(C);
      if (!t) {
        var G = z.dev.toString(32) + ":" + z.ino.toString(32);
        if (x.hasOwnProperty(G))
          return U(null, x[G], M);
      }
      a.stat(M, function(O) {
        if (O)
          return v(O);
        a.readlink(M, function(u, p) {
          t || (x[G] = p), U(u, p);
        });
      });
    }
    function U(Z, z, G) {
      if (Z)
        return v(Z);
      var O = e.resolve(R, z);
      l && (l[G] = O), q(O);
    }
    function q(Z) {
      b = e.resolve(Z, b.slice(k)), F();
    }
  }, D6;
}
var y2, B4;
function sy() {
  if (B4)
    return y2;
  B4 = 1, y2 = o, o.realpath = o, o.sync = s, o.realpathSync = s, o.monkeypatch = b, o.unmonkeypatch = l;
  var e = Zt, t = e.realpath, a = e.realpathSync, r = g7.version, f = /^v[0-5]\./.test(r), i = xN();
  function n(v) {
    return v && v.syscall === "realpath" && (v.code === "ELOOP" || v.code === "ENOMEM" || v.code === "ENAMETOOLONG");
  }
  function o(v, m, x) {
    if (f)
      return t(v, m, x);
    typeof m == "function" && (x = m, m = null), t(v, m, function(I, k) {
      n(I) ? i.realpath(v, m, x) : x(I, k);
    });
  }
  function s(v, m) {
    if (f)
      return a(v, m);
    try {
      return a(v, m);
    } catch (x) {
      if (n(x))
        return i.realpathSync(v, m);
      throw x;
    }
  }
  function b() {
    e.realpath = o, e.realpathSync = s;
  }
  function l() {
    e.realpath = t, e.realpathSync = a;
  }
  return y2;
}
var g2, N4;
function _N() {
  if (N4)
    return g2;
  N4 = 1, g2 = function(t, a) {
    for (var r = [], f = 0; f < t.length; f++) {
      var i = a(t[f], f);
      e(i) ? r.push.apply(r, i) : r.push(i);
    }
    return r;
  };
  var e = Array.isArray || function(t) {
    return Object.prototype.toString.call(t) === "[object Array]";
  };
  return g2;
}
var x2, C4;
function wN() {
  if (C4)
    return x2;
  C4 = 1, x2 = e;
  function e(r, f, i) {
    r instanceof RegExp && (r = t(r, i)), f instanceof RegExp && (f = t(f, i));
    var n = a(r, f, i);
    return n && {
      start: n[0],
      end: n[1],
      pre: i.slice(0, n[0]),
      body: i.slice(n[0] + r.length, n[1]),
      post: i.slice(n[1] + f.length)
    };
  }
  function t(r, f) {
    var i = f.match(r);
    return i ? i[0] : null;
  }
  e.range = a;
  function a(r, f, i) {
    var n, o, s, b, l, v = i.indexOf(r), m = i.indexOf(f, v + 1), x = v;
    if (v >= 0 && m > 0) {
      if (r === f)
        return [v, m];
      for (n = [], s = i.length; x >= 0 && !l; )
        x == v ? (n.push(x), v = i.indexOf(r, x + 1)) : n.length == 1 ? l = [n.pop(), m] : (o = n.pop(), o < s && (s = o, b = m), m = i.indexOf(f, x + 1)), x = v < m && v >= 0 ? v : m;
      n.length && (l = [s, b]);
    }
    return l;
  }
  return x2;
}
var _2, D4;
function SN() {
  if (D4)
    return _2;
  D4 = 1;
  var e = _N(), t = wN();
  _2 = v;
  var a = "\0SLASH" + Math.random() + "\0", r = "\0OPEN" + Math.random() + "\0", f = "\0CLOSE" + Math.random() + "\0", i = "\0COMMA" + Math.random() + "\0", n = "\0PERIOD" + Math.random() + "\0";
  function o(M) {
    return parseInt(M, 10) == M ? parseInt(M, 10) : M.charCodeAt(0);
  }
  function s(M) {
    return M.split("\\\\").join(a).split("\\{").join(r).split("\\}").join(f).split("\\,").join(i).split("\\.").join(n);
  }
  function b(M) {
    return M.split(a).join("\\").split(r).join("{").split(f).join("}").split(i).join(",").split(n).join(".");
  }
  function l(M) {
    if (!M)
      return [""];
    var R = [], F = t("{", "}", M);
    if (!F)
      return M.split(",");
    var C = F.pre, L = F.body, U = F.post, q = C.split(",");
    q[q.length - 1] += "{" + L + "}";
    var Z = l(U);
    return U.length && (q[q.length - 1] += Z.shift(), q.push.apply(q, Z)), R.push.apply(R, q), R;
  }
  function v(M) {
    return M ? (M.substr(0, 2) === "{}" && (M = "\\{\\}" + M.substr(2)), P(s(M), !0).map(b)) : [];
  }
  function m(M) {
    return "{" + M + "}";
  }
  function x(M) {
    return /^-?0\d/.test(M);
  }
  function I(M, R) {
    return M <= R;
  }
  function k(M, R) {
    return M >= R;
  }
  function P(M, R) {
    var F = [], C = t("{", "}", M);
    if (!C || /\$$/.test(C.pre))
      return [M];
    var L = /^-?\d+\.\.-?\d+(?:\.\.-?\d+)?$/.test(C.body), U = /^[a-zA-Z]\.\.[a-zA-Z](?:\.\.-?\d+)?$/.test(C.body), q = L || U, Z = C.body.indexOf(",") >= 0;
    if (!q && !Z)
      return C.post.match(/,.*\}/) ? (M = C.pre + "{" + C.body + f + C.post, P(M)) : [M];
    var z;
    if (q)
      z = C.body.split(/\.\./);
    else if (z = l(C.body), z.length === 1 && (z = P(z[0], !1).map(m), z.length === 1)) {
      var O = C.post.length ? P(C.post, !1) : [""];
      return O.map(function(X) {
        return C.pre + z[0] + X;
      });
    }
    var G = C.pre, O = C.post.length ? P(C.post, !1) : [""], u;
    if (q) {
      var p = o(z[0]), d = o(z[1]), c = Math.max(z[0].length, z[1].length), y = z.length == 3 ? Math.abs(o(z[2])) : 1, S = I, T = d < p;
      T && (y *= -1, S = k);
      var g = z.some(x);
      u = [];
      for (var w = p; S(w, d); w += y) {
        var A;
        if (U)
          A = String.fromCharCode(w), A === "\\" && (A = "");
        else if (A = String(w), g) {
          var h = c - A.length;
          if (h > 0) {
            var N = new Array(h + 1).join("0");
            w < 0 ? A = "-" + N + A.slice(1) : A = N + A;
          }
        }
        u.push(A);
      }
    } else
      u = e(z, function($) {
        return P($, !1);
      });
    for (var Y = 0; Y < u.length; Y++)
      for (var t7 = 0; t7 < O.length; t7++) {
        var H = G + u[Y] + O[t7];
        (!R || q || H) && F.push(H);
      }
    return F;
  }
  return _2;
}
var w2, L4;
function Dd() {
  if (L4)
    return w2;
  L4 = 1, w2 = x, x.Minimatch = I;
  var e = function() {
    try {
      return Et;
    } catch {
    }
  }() || {
    sep: "/"
  };
  x.sep = e.sep;
  var t = x.GLOBSTAR = I.GLOBSTAR = {}, a = SN(), r = {
    "!": { open: "(?:(?!(?:", close: "))[^/]*?)" },
    "?": { open: "(?:", close: ")?" },
    "+": { open: "(?:", close: ")+" },
    "*": { open: "(?:", close: ")*" },
    "@": { open: "(?:", close: ")" }
  }, f = "[^/]", i = f + "*?", n = "(?:(?!(?:\\/|^)(?:\\.{1,2})($|\\/)).)*?", o = "(?:(?!(?:\\/|^)\\.).)*?", s = b("().*{}+?[]^$\\!");
  function b(z) {
    return z.split("").reduce(function(G, O) {
      return G[O] = !0, G;
    }, {});
  }
  var l = /\/+/;
  x.filter = v;
  function v(z, G) {
    return G = G || {}, function(O, u, p) {
      return x(O, z, G);
    };
  }
  function m(z, G) {
    G = G || {};
    var O = {};
    return Object.keys(z).forEach(function(u) {
      O[u] = z[u];
    }), Object.keys(G).forEach(function(u) {
      O[u] = G[u];
    }), O;
  }
  x.defaults = function(z) {
    if (!z || typeof z != "object" || !Object.keys(z).length)
      return x;
    var G = x, O = function(p, d, c) {
      return G(p, d, m(z, c));
    };
    return O.Minimatch = function(p, d) {
      return new G.Minimatch(p, m(z, d));
    }, O.Minimatch.defaults = function(p) {
      return G.defaults(m(z, p)).Minimatch;
    }, O.filter = function(p, d) {
      return G.filter(p, m(z, d));
    }, O.defaults = function(p) {
      return G.defaults(m(z, p));
    }, O.makeRe = function(p, d) {
      return G.makeRe(p, m(z, d));
    }, O.braceExpand = function(p, d) {
      return G.braceExpand(p, m(z, d));
    }, O.match = function(u, p, d) {
      return G.match(u, p, m(z, d));
    }, O;
  }, I.defaults = function(z) {
    return x.defaults(z).Minimatch;
  };
  function x(z, G, O) {
    return F(G), O || (O = {}), !O.nocomment && G.charAt(0) === "#" ? !1 : new I(G, O).match(z);
  }
  function I(z, G) {
    if (!(this instanceof I))
      return new I(z, G);
    F(z), G || (G = {}), z = z.trim(), !G.allowWindowsEscape && e.sep !== "/" && (z = z.split(e.sep).join("/")), this.options = G, this.set = [], this.pattern = z, this.regexp = null, this.negate = !1, this.comment = !1, this.empty = !1, this.partial = !!G.partial, this.make();
  }
  I.prototype.debug = function() {
  }, I.prototype.make = k;
  function k() {
    var z = this.pattern, G = this.options;
    if (!G.nocomment && z.charAt(0) === "#") {
      this.comment = !0;
      return;
    }
    if (!z) {
      this.empty = !0;
      return;
    }
    this.parseNegate();
    var O = this.globSet = this.braceExpand();
    G.debug && (this.debug = function() {
      console.error.apply(console, arguments);
    }), this.debug(this.pattern, O), O = this.globParts = O.map(function(u) {
      return u.split(l);
    }), this.debug(this.pattern, O), O = O.map(function(u, p, d) {
      return u.map(this.parse, this);
    }, this), this.debug(this.pattern, O), O = O.filter(function(u) {
      return u.indexOf(!1) === -1;
    }), this.debug(this.pattern, O), this.set = O;
  }
  I.prototype.parseNegate = P;
  function P() {
    var z = this.pattern, G = !1, O = this.options, u = 0;
    if (!O.nonegate) {
      for (var p = 0, d = z.length; p < d && z.charAt(p) === "!"; p++)
        G = !G, u++;
      u && (this.pattern = z.substr(u)), this.negate = G;
    }
  }
  x.braceExpand = function(z, G) {
    return M(z, G);
  }, I.prototype.braceExpand = M;
  function M(z, G) {
    return G || (this instanceof I ? G = this.options : G = {}), z = typeof z > "u" ? this.pattern : z, F(z), G.nobrace || !/\{(?:(?!\{).)*\}/.test(z) ? [z] : a(z);
  }
  var R = 1024 * 64, F = function(z) {
    if (typeof z != "string")
      throw new TypeError("invalid pattern");
    if (z.length > R)
      throw new TypeError("pattern is too long");
  };
  I.prototype.parse = L;
  var C = {};
  function L(z, G) {
    F(z);
    var O = this.options;
    if (z === "**")
      if (O.noglobstar)
        z = "*";
      else
        return t;
    if (z === "")
      return "";
    var u = "", p = !!O.nocase, d = !1, c = [], y = [], S, T = !1, g = -1, w = -1, A = z.charAt(0) === "." ? "" : O.dot ? "(?!(?:^|\\/)\\.{1,2}(?:$|\\/))" : "(?!\\.)", h = this;
    function N() {
      if (S) {
        switch (S) {
          case "*":
            u += i, p = !0;
            break;
          case "?":
            u += f, p = !0;
            break;
          default:
            u += "\\" + S;
            break;
        }
        h.debug("clearStateChar %j %j", S, u), S = !1;
      }
    }
    for (var Y = 0, t7 = z.length, H; Y < t7 && (H = z.charAt(Y)); Y++) {
      if (this.debug("%s	%s %s %j", z, Y, u, H), d && s[H]) {
        u += "\\" + H, d = !1;
        continue;
      }
      switch (H) {
        case "/":
          return !1;
        case "\\":
          N(), d = !0;
          continue;
        case "?":
        case "*":
        case "+":
        case "@":
        case "!":
          if (this.debug("%s	%s %s %j <-- stateChar", z, Y, u, H), T) {
            this.debug("  in class"), H === "!" && Y === w + 1 && (H = "^"), u += H;
            continue;
          }
          h.debug("call clearStateChar %j", S), N(), S = H, O.noext && N();
          continue;
        case "(":
          if (T) {
            u += "(";
            continue;
          }
          if (!S) {
            u += "\\(";
            continue;
          }
          c.push({
            type: S,
            start: Y - 1,
            reStart: u.length,
            open: r[S].open,
            close: r[S].close
          }), u += S === "!" ? "(?:(?!(?:" : "(?:", this.debug("plType %j %j", S, u), S = !1;
          continue;
        case ")":
          if (T || !c.length) {
            u += "\\)";
            continue;
          }
          N(), p = !0;
          var $ = c.pop();
          u += $.close, $.type === "!" && y.push($), $.reEnd = u.length;
          continue;
        case "|":
          if (T || !c.length || d) {
            u += "\\|", d = !1;
            continue;
          }
          N(), u += "|";
          continue;
        case "[":
          if (N(), T) {
            u += "\\" + H;
            continue;
          }
          T = !0, w = Y, g = u.length, u += H;
          continue;
        case "]":
          if (Y === w + 1 || !T) {
            u += "\\" + H, d = !1;
            continue;
          }
          var X = z.substring(w + 1, Y);
          try {
            RegExp("[" + X + "]");
          } catch {
            var i7 = this.parse(X, C);
            u = u.substr(0, g) + "\\[" + i7[0] + "\\]", p = p || i7[1], T = !1;
            continue;
          }
          p = !0, T = !1, u += H;
          continue;
        default:
          N(), d ? d = !1 : s[H] && !(H === "^" && T) && (u += "\\"), u += H;
      }
    }
    for (T && (X = z.substr(w + 1), i7 = this.parse(X, C), u = u.substr(0, g) + "\\[" + i7[0], p = p || i7[1]), $ = c.pop(); $; $ = c.pop()) {
      var J = u.slice($.reStart + $.open.length);
      this.debug("setting tail", u, $), J = J.replace(/((?:\\{2}){0,64})(\\?)\|/g, function(m7, p7, l7) {
        return l7 || (l7 = "\\"), p7 + p7 + l7 + "|";
      }), this.debug(`tail=%j
   %s`, J, J, $, u);
      var _ = $.type === "*" ? i : $.type === "?" ? f : "\\" + $.type;
      p = !0, u = u.slice(0, $.reStart) + _ + "\\(" + J;
    }
    N(), d && (u += "\\\\");
    var E = !1;
    switch (u.charAt(0)) {
      case "[":
      case ".":
      case "(":
        E = !0;
    }
    for (var j = y.length - 1; j > -1; j--) {
      var V = y[j], n7 = u.slice(0, V.reStart), K = u.slice(V.reStart, V.reEnd - 8), B = u.slice(V.reEnd - 8, V.reEnd), D = u.slice(V.reEnd);
      B += D;
      var W = n7.split("(").length - 1, e7 = D;
      for (Y = 0; Y < W; Y++)
        e7 = e7.replace(/\)[+*?]?/, "");
      D = e7;
      var o7 = "";
      D === "" && G !== C && (o7 = "$");
      var a7 = n7 + K + D + o7 + B;
      u = a7;
    }
    if (u !== "" && p && (u = "(?=.)" + u), E && (u = A + u), G === C)
      return [u, p];
    if (!p)
      return q(z);
    var s7 = O.nocase ? "i" : "";
    try {
      var u7 = new RegExp("^" + u + "$", s7);
    } catch {
      return new RegExp("$.");
    }
    return u7._glob = z, u7._src = u, u7;
  }
  x.makeRe = function(z, G) {
    return new I(z, G || {}).makeRe();
  }, I.prototype.makeRe = U;
  function U() {
    if (this.regexp || this.regexp === !1)
      return this.regexp;
    var z = this.set;
    if (!z.length)
      return this.regexp = !1, this.regexp;
    var G = this.options, O = G.noglobstar ? i : G.dot ? n : o, u = G.nocase ? "i" : "", p = z.map(function(d) {
      return d.map(function(c) {
        return c === t ? O : typeof c == "string" ? Z(c) : c._src;
      }).join("\\/");
    }).join("|");
    p = "^(?:" + p + ")$", this.negate && (p = "^(?!" + p + ").*$");
    try {
      this.regexp = new RegExp(p, u);
    } catch {
      this.regexp = !1;
    }
    return this.regexp;
  }
  x.match = function(z, G, O) {
    O = O || {};
    var u = new I(G, O);
    return z = z.filter(function(p) {
      return u.match(p);
    }), u.options.nonull && !z.length && z.push(G), z;
  }, I.prototype.match = function(G, O) {
    if (typeof O > "u" && (O = this.partial), this.debug("match", G, this.pattern), this.comment)
      return !1;
    if (this.empty)
      return G === "";
    if (G === "/" && O)
      return !0;
    var u = this.options;
    e.sep !== "/" && (G = G.split(e.sep).join("/")), G = G.split(l), this.debug(this.pattern, "split", G);
    var p = this.set;
    this.debug(this.pattern, "set", p);
    var d, c;
    for (c = G.length - 1; c >= 0 && (d = G[c], !d); c--)
      ;
    for (c = 0; c < p.length; c++) {
      var y = p[c], S = G;
      u.matchBase && y.length === 1 && (S = [d]);
      var T = this.matchOne(S, y, O);
      if (T)
        return u.flipNegate ? !0 : !this.negate;
    }
    return u.flipNegate ? !1 : this.negate;
  }, I.prototype.matchOne = function(z, G, O) {
    var u = this.options;
    this.debug(
      "matchOne",
      { this: this, file: z, pattern: G }
    ), this.debug("matchOne", z.length, G.length);
    for (var p = 0, d = 0, c = z.length, y = G.length; p < c && d < y; p++, d++) {
      this.debug("matchOne loop");
      var S = G[d], T = z[p];
      if (this.debug(G, S, T), S === !1)
        return !1;
      if (S === t) {
        this.debug("GLOBSTAR", [G, S, T]);
        var g = p, w = d + 1;
        if (w === y) {
          for (this.debug("** at the end"); p < c; p++)
            if (z[p] === "." || z[p] === ".." || !u.dot && z[p].charAt(0) === ".")
              return !1;
          return !0;
        }
        for (; g < c; ) {
          var A = z[g];
          if (this.debug(`
globstar while`, z, g, G, w, A), this.matchOne(z.slice(g), G.slice(w), O))
            return this.debug("globstar found match!", g, c, A), !0;
          if (A === "." || A === ".." || !u.dot && A.charAt(0) === ".") {
            this.debug("dot detected!", z, g, G, w);
            break;
          }
          this.debug("globstar swallow a segment, and continue"), g++;
        }
        return !!(O && (this.debug(`
>>> no match, partial?`, z, g, G, w), g === c));
      }
      var h;
      if (typeof S == "string" ? (h = T === S, this.debug("string match", S, T, h)) : (h = T.match(S), this.debug("pattern match", S, T, h)), !h)
        return !1;
    }
    if (p === c && d === y)
      return !0;
    if (p === c)
      return O;
    if (d === y)
      return p === c - 1 && z[p] === "";
    throw new Error("wtf?");
  };
  function q(z) {
    return z.replace(/\\(.)/g, "$1");
  }
  function Z(z) {
    return z.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&");
  }
  return w2;
}
var Q1 = { exports: {} }, F4;
function Ld() {
  if (F4)
    return Q1.exports;
  F4 = 1;
  function e(a) {
    return a.charAt(0) === "/";
  }
  function t(a) {
    var r = /^([a-zA-Z]:|[\\\/]{2}[^\\\/]+[\\\/]+[^\\\/]+)?([\\\/])?([\s\S]*?)$/, f = r.exec(a), i = f[1] || "", n = !!(i && i.charAt(1) !== ":");
    return !!(f[2] || n);
  }
  return Q1.exports = g7.platform === "win32" ? t : e, Q1.exports.posix = e, Q1.exports.win32 = t, Q1.exports;
}
var Ot = {}, H4;
function dy() {
  if (H4)
    return Ot;
  H4 = 1, Ot.setopts = b, Ot.ownProp = e, Ot.makeAbs = m, Ot.finish = l, Ot.mark = v, Ot.isIgnored = x, Ot.childrenIgnored = I;
  function e(k, P) {
    return Object.prototype.hasOwnProperty.call(k, P);
  }
  var t = Zt, a = Et, r = Dd(), f = Ld(), i = r.Minimatch;
  function n(k, P) {
    return k.localeCompare(P, "en");
  }
  function o(k, P) {
    k.ignore = P.ignore || [], Array.isArray(k.ignore) || (k.ignore = [k.ignore]), k.ignore.length && (k.ignore = k.ignore.map(s));
  }
  function s(k) {
    var P = null;
    if (k.slice(-3) === "/**") {
      var M = k.replace(/(\/\*\*)+$/, "");
      P = new i(M, { dot: !0 });
    }
    return {
      matcher: new i(k, { dot: !0 }),
      gmatcher: P
    };
  }
  function b(k, P, M) {
    if (M || (M = {}), M.matchBase && P.indexOf("/") === -1) {
      if (M.noglobstar)
        throw new Error("base matching requires globstar");
      P = "**/" + P;
    }
    k.silent = !!M.silent, k.pattern = P, k.strict = M.strict !== !1, k.realpath = !!M.realpath, k.realpathCache = M.realpathCache || /* @__PURE__ */ Object.create(null), k.follow = !!M.follow, k.dot = !!M.dot, k.mark = !!M.mark, k.nodir = !!M.nodir, k.nodir && (k.mark = !0), k.sync = !!M.sync, k.nounique = !!M.nounique, k.nonull = !!M.nonull, k.nosort = !!M.nosort, k.nocase = !!M.nocase, k.stat = !!M.stat, k.noprocess = !!M.noprocess, k.absolute = !!M.absolute, k.fs = M.fs || t, k.maxLength = M.maxLength || 1 / 0, k.cache = M.cache || /* @__PURE__ */ Object.create(null), k.statCache = M.statCache || /* @__PURE__ */ Object.create(null), k.symlinks = M.symlinks || /* @__PURE__ */ Object.create(null), o(k, M), k.changedCwd = !1;
    var R = g7.cwd();
    e(M, "cwd") ? (k.cwd = a.resolve(M.cwd), k.changedCwd = k.cwd !== R) : k.cwd = R, k.root = M.root || a.resolve(k.cwd, "/"), k.root = a.resolve(k.root), g7.platform === "win32" && (k.root = k.root.replace(/\\/g, "/")), k.cwdAbs = f(k.cwd) ? k.cwd : m(k, k.cwd), g7.platform === "win32" && (k.cwdAbs = k.cwdAbs.replace(/\\/g, "/")), k.nomount = !!M.nomount, M.nonegate = !0, M.nocomment = !0, M.allowWindowsEscape = !1, k.minimatch = new i(P, M), k.options = k.minimatch.options;
  }
  function l(k) {
    for (var P = k.nounique, M = P ? [] : /* @__PURE__ */ Object.create(null), R = 0, F = k.matches.length; R < F; R++) {
      var C = k.matches[R];
      if (!C || Object.keys(C).length === 0) {
        if (k.nonull) {
          var L = k.minimatch.globSet[R];
          P ? M.push(L) : M[L] = !0;
        }
      } else {
        var U = Object.keys(C);
        P ? M.push.apply(M, U) : U.forEach(function(q) {
          M[q] = !0;
        });
      }
    }
    if (P || (M = Object.keys(M)), k.nosort || (M = M.sort(n)), k.mark) {
      for (var R = 0; R < M.length; R++)
        M[R] = k._mark(M[R]);
      k.nodir && (M = M.filter(function(q) {
        var Z = !/\/$/.test(q), z = k.cache[q] || k.cache[m(k, q)];
        return Z && z && (Z = z !== "DIR" && !Array.isArray(z)), Z;
      }));
    }
    k.ignore.length && (M = M.filter(function(q) {
      return !x(k, q);
    })), k.found = M;
  }
  function v(k, P) {
    var M = m(k, P), R = k.cache[M], F = P;
    if (R) {
      var C = R === "DIR" || Array.isArray(R), L = P.slice(-1) === "/";
      if (C && !L ? F += "/" : !C && L && (F = F.slice(0, -1)), F !== P) {
        var U = m(k, F);
        k.statCache[U] = k.statCache[M], k.cache[U] = k.cache[M];
      }
    }
    return F;
  }
  function m(k, P) {
    var M = P;
    return P.charAt(0) === "/" ? M = a.join(k.root, P) : f(P) || P === "" ? M = P : k.changedCwd ? M = a.resolve(k.cwd, P) : M = a.resolve(P), g7.platform === "win32" && (M = M.replace(/\\/g, "/")), M;
  }
  function x(k, P) {
    return k.ignore.length ? k.ignore.some(function(M) {
      return M.matcher.match(P) || !!(M.gmatcher && M.gmatcher.match(P));
    }) : !1;
  }
  function I(k, P) {
    return k.ignore.length ? k.ignore.some(function(M) {
      return !!(M.gmatcher && M.gmatcher.match(P));
    }) : !1;
  }
  return Ot;
}
var S2, U4;
function EN() {
  if (U4)
    return S2;
  U4 = 1, S2 = l, l.GlobSync = v;
  var e = sy(), t = Dd();
  t.Minimatch, ly().Glob;
  var a = Et, r = yt(), f = Ld(), i = dy(), n = i.setopts, o = i.ownProp, s = i.childrenIgnored, b = i.isIgnored;
  function l(m, x) {
    if (typeof x == "function" || arguments.length === 3)
      throw new TypeError(`callback provided to sync glob
See: https://github.com/isaacs/node-glob/issues/167`);
    return new v(m, x).found;
  }
  function v(m, x) {
    if (!m)
      throw new Error("must provide pattern");
    if (typeof x == "function" || arguments.length === 3)
      throw new TypeError(`callback provided to sync glob
See: https://github.com/isaacs/node-glob/issues/167`);
    if (!(this instanceof v))
      return new v(m, x);
    if (n(this, m, x), this.noprocess)
      return this;
    var I = this.minimatch.set.length;
    this.matches = new Array(I);
    for (var k = 0; k < I; k++)
      this._process(this.minimatch.set[k], k, !1);
    this._finish();
  }
  return v.prototype._finish = function() {
    if (r.ok(this instanceof v), this.realpath) {
      var m = this;
      this.matches.forEach(function(x, I) {
        var k = m.matches[I] = /* @__PURE__ */ Object.create(null);
        for (var P in x)
          try {
            P = m._makeAbs(P);
            var M = e.realpathSync(P, m.realpathCache);
            k[M] = !0;
          } catch (R) {
            if (R.syscall === "stat")
              k[m._makeAbs(P)] = !0;
            else
              throw R;
          }
      });
    }
    i.finish(this);
  }, v.prototype._process = function(m, x, I) {
    r.ok(this instanceof v);
    for (var k = 0; typeof m[k] == "string"; )
      k++;
    var P;
    switch (k) {
      case m.length:
        this._processSimple(m.join("/"), x);
        return;
      case 0:
        P = null;
        break;
      default:
        P = m.slice(0, k).join("/");
        break;
    }
    var M = m.slice(k), R;
    P === null ? R = "." : ((f(P) || f(m.map(function(L) {
      return typeof L == "string" ? L : "[*]";
    }).join("/"))) && (!P || !f(P)) && (P = "/" + P), R = P);
    var F = this._makeAbs(R);
    if (!s(this, R)) {
      var C = M[0] === t.GLOBSTAR;
      C ? this._processGlobStar(P, R, F, M, x, I) : this._processReaddir(P, R, F, M, x, I);
    }
  }, v.prototype._processReaddir = function(m, x, I, k, P, M) {
    var R = this._readdir(I, M);
    if (R) {
      for (var F = k[0], C = !!this.minimatch.negate, L = F._glob, U = this.dot || L.charAt(0) === ".", q = [], Z = 0; Z < R.length; Z++) {
        var z = R[Z];
        if (z.charAt(0) !== "." || U) {
          var G;
          C && !m ? G = !z.match(F) : G = z.match(F), G && q.push(z);
        }
      }
      var O = q.length;
      if (O !== 0) {
        if (k.length === 1 && !this.mark && !this.stat) {
          this.matches[P] || (this.matches[P] = /* @__PURE__ */ Object.create(null));
          for (var Z = 0; Z < O; Z++) {
            var z = q[Z];
            m && (m.slice(-1) !== "/" ? z = m + "/" + z : z = m + z), z.charAt(0) === "/" && !this.nomount && (z = a.join(this.root, z)), this._emitMatch(P, z);
          }
          return;
        }
        k.shift();
        for (var Z = 0; Z < O; Z++) {
          var z = q[Z], u;
          m ? u = [m, z] : u = [z], this._process(u.concat(k), P, M);
        }
      }
    }
  }, v.prototype._emitMatch = function(m, x) {
    if (!b(this, x)) {
      var I = this._makeAbs(x);
      if (this.mark && (x = this._mark(x)), this.absolute && (x = I), !this.matches[m][x]) {
        if (this.nodir) {
          var k = this.cache[I];
          if (k === "DIR" || Array.isArray(k))
            return;
        }
        this.matches[m][x] = !0, this.stat && this._stat(x);
      }
    }
  }, v.prototype._readdirInGlobStar = function(m) {
    if (this.follow)
      return this._readdir(m, !1);
    var x, I;
    try {
      I = this.fs.lstatSync(m);
    } catch (P) {
      if (P.code === "ENOENT")
        return null;
    }
    var k = I && I.isSymbolicLink();
    return this.symlinks[m] = k, !k && I && !I.isDirectory() ? this.cache[m] = "FILE" : x = this._readdir(m, !1), x;
  }, v.prototype._readdir = function(m, x) {
    if (x && !o(this.symlinks, m))
      return this._readdirInGlobStar(m);
    if (o(this.cache, m)) {
      var I = this.cache[m];
      if (!I || I === "FILE")
        return null;
      if (Array.isArray(I))
        return I;
    }
    try {
      return this._readdirEntries(m, this.fs.readdirSync(m));
    } catch (k) {
      return this._readdirError(m, k), null;
    }
  }, v.prototype._readdirEntries = function(m, x) {
    if (!this.mark && !this.stat)
      for (var I = 0; I < x.length; I++) {
        var k = x[I];
        m === "/" ? k = m + k : k = m + "/" + k, this.cache[k] = !0;
      }
    return this.cache[m] = x, x;
  }, v.prototype._readdirError = function(m, x) {
    switch (x.code) {
      case "ENOTSUP":
      case "ENOTDIR":
        var I = this._makeAbs(m);
        if (this.cache[I] = "FILE", I === this.cwdAbs) {
          var k = new Error(x.code + " invalid cwd " + this.cwd);
          throw k.path = this.cwd, k.code = x.code, k;
        }
        break;
      case "ENOENT":
      case "ELOOP":
      case "ENAMETOOLONG":
      case "UNKNOWN":
        this.cache[this._makeAbs(m)] = !1;
        break;
      default:
        if (this.cache[this._makeAbs(m)] = !1, this.strict)
          throw x;
        this.silent || console.error("glob error", x);
        break;
    }
  }, v.prototype._processGlobStar = function(m, x, I, k, P, M) {
    var R = this._readdir(I, M);
    if (R) {
      var F = k.slice(1), C = m ? [m] : [], L = C.concat(F);
      this._process(L, P, !1);
      var U = R.length, q = this.symlinks[I];
      if (!(q && M))
        for (var Z = 0; Z < U; Z++) {
          var z = R[Z];
          if (!(z.charAt(0) === "." && !this.dot)) {
            var G = C.concat(R[Z], F);
            this._process(G, P, !0);
            var O = C.concat(R[Z], k);
            this._process(O, P, !0);
          }
        }
    }
  }, v.prototype._processSimple = function(m, x) {
    var I = this._stat(m);
    if (this.matches[x] || (this.matches[x] = /* @__PURE__ */ Object.create(null)), !!I) {
      if (m && f(m) && !this.nomount) {
        var k = /[\/\\]$/.test(m);
        m.charAt(0) === "/" ? m = a.join(this.root, m) : (m = a.resolve(this.root, m), k && (m += "/"));
      }
      g7.platform === "win32" && (m = m.replace(/\\/g, "/")), this._emitMatch(x, m);
    }
  }, v.prototype._stat = function(m) {
    var x = this._makeAbs(m), I = m.slice(-1) === "/";
    if (m.length > this.maxLength)
      return !1;
    if (!this.stat && o(this.cache, x)) {
      var M = this.cache[x];
      if (Array.isArray(M) && (M = "DIR"), !I || M === "DIR")
        return M;
      if (I && M === "FILE")
        return !1;
    }
    var k = this.statCache[x];
    if (!k) {
      var P;
      try {
        P = this.fs.lstatSync(x);
      } catch (R) {
        if (R && (R.code === "ENOENT" || R.code === "ENOTDIR"))
          return this.statCache[x] = !1, !1;
      }
      if (P && P.isSymbolicLink())
        try {
          k = this.fs.statSync(x);
        } catch {
          k = P;
        }
      else
        k = P;
    }
    this.statCache[x] = k;
    var M = !0;
    return k && (M = k.isDirectory() ? "DIR" : "FILE"), this.cache[x] = this.cache[x] || M, I && M === "FILE" ? !1 : M;
  }, v.prototype._mark = function(m) {
    return i.mark(this, m);
  }, v.prototype._makeAbs = function(m) {
    return i.makeAbs(this, m);
  }, S2;
}
var E2, $4;
function cy() {
  if ($4)
    return E2;
  $4 = 1, E2 = e;
  function e(t, a) {
    if (t && a)
      return e(t)(a);
    if (typeof t != "function")
      throw new TypeError("need wrapper function");
    return Object.keys(t).forEach(function(f) {
      r[f] = t[f];
    }), r;
    function r() {
      for (var f = new Array(arguments.length), i = 0; i < f.length; i++)
        f[i] = arguments[i];
      var n = t.apply(this, f), o = f[f.length - 1];
      return typeof n == "function" && n !== o && Object.keys(o).forEach(function(s) {
        n[s] = o[s];
      }), n;
    }
  }
  return E2;
}
var L6 = { exports: {} }, j4;
function uy() {
  if (j4)
    return L6.exports;
  j4 = 1;
  var e = cy();
  L6.exports = e(t), L6.exports.strict = e(a), t.proto = t(function() {
    Object.defineProperty(Function.prototype, "once", {
      value: function() {
        return t(this);
      },
      configurable: !0
    }), Object.defineProperty(Function.prototype, "onceStrict", {
      value: function() {
        return a(this);
      },
      configurable: !0
    });
  });
  function t(r) {
    var f = function() {
      return f.called ? f.value : (f.called = !0, f.value = r.apply(this, arguments));
    };
    return f.called = !1, f;
  }
  function a(r) {
    var f = function() {
      if (f.called)
        throw new Error(f.onceError);
      return f.called = !0, f.value = r.apply(this, arguments);
    }, i = r.name || "Function wrapped with `once`";
    return f.onceError = i + " shouldn't be called more than once", f.called = !1, f;
  }
  return L6.exports;
}
var T2, V4;
function TN() {
  if (V4)
    return T2;
  V4 = 1;
  var e = cy(), t = /* @__PURE__ */ Object.create(null), a = uy();
  T2 = e(r);
  function r(n, o) {
    return t[n] ? (t[n].push(o), null) : (t[n] = [o], f(n));
  }
  function f(n) {
    return a(function o() {
      var s = t[n], b = s.length, l = i(arguments);
      try {
        for (var v = 0; v < b; v++)
          s[v].apply(null, l);
      } finally {
        s.length > b ? (s.splice(0, b), g7.nextTick(function() {
          o.apply(null, l);
        })) : delete t[n];
      }
    });
  }
  function i(n) {
    for (var o = n.length, s = [], b = 0; b < o; b++)
      s[b] = n[b];
    return s;
  }
  return T2;
}
var A2, z4;
function ly() {
  if (z4)
    return A2;
  z4 = 1, A2 = k;
  var e = sy(), t = Dd();
  t.Minimatch;
  var a = X7(), r = gt().EventEmitter, f = Et, i = yt(), n = Ld(), o = EN(), s = dy(), b = s.setopts, l = s.ownProp, v = TN(), m = s.childrenIgnored, x = s.isIgnored, I = uy();
  function k(C, L, U) {
    if (typeof L == "function" && (U = L, L = {}), L || (L = {}), L.sync) {
      if (U)
        throw new TypeError("callback provided to sync glob");
      return o(C, L);
    }
    return new R(C, L, U);
  }
  k.sync = o;
  var P = k.GlobSync = o.GlobSync;
  k.glob = k;
  function M(C, L) {
    if (L === null || typeof L != "object")
      return C;
    for (var U = Object.keys(L), q = U.length; q--; )
      C[U[q]] = L[U[q]];
    return C;
  }
  k.hasMagic = function(C, L) {
    var U = M({}, L);
    U.noprocess = !0;
    var q = new R(C, U), Z = q.minimatch.set;
    if (!C)
      return !1;
    if (Z.length > 1)
      return !0;
    for (var z = 0; z < Z[0].length; z++)
      if (typeof Z[0][z] != "string")
        return !0;
    return !1;
  }, k.Glob = R, a(R, r);
  function R(C, L, U) {
    if (typeof L == "function" && (U = L, L = null), L && L.sync) {
      if (U)
        throw new TypeError("callback provided to sync glob");
      return new P(C, L);
    }
    if (!(this instanceof R))
      return new R(C, L, U);
    b(this, C, L), this._didRealPath = !1;
    var q = this.minimatch.set.length;
    this.matches = new Array(q), typeof U == "function" && (U = I(U), this.on("error", U), this.on("end", function(u) {
      U(null, u);
    }));
    var Z = this;
    if (this._processing = 0, this._emitQueue = [], this._processQueue = [], this.paused = !1, this.noprocess)
      return this;
    if (q === 0)
      return O();
    for (var z = !0, G = 0; G < q; G++)
      this._process(this.minimatch.set[G], G, !1, O);
    z = !1;
    function O() {
      --Z._processing, Z._processing <= 0 && (z ? g7.nextTick(function() {
        Z._finish();
      }) : Z._finish());
    }
  }
  R.prototype._finish = function() {
    if (i(this instanceof R), !this.aborted) {
      if (this.realpath && !this._didRealpath)
        return this._realpath();
      s.finish(this), this.emit("end", this.found);
    }
  }, R.prototype._realpath = function() {
    if (this._didRealpath)
      return;
    this._didRealpath = !0;
    var C = this.matches.length;
    if (C === 0)
      return this._finish();
    for (var L = this, U = 0; U < this.matches.length; U++)
      this._realpathSet(U, q);
    function q() {
      --C === 0 && L._finish();
    }
  }, R.prototype._realpathSet = function(C, L) {
    var U = this.matches[C];
    if (!U)
      return L();
    var q = Object.keys(U), Z = this, z = q.length;
    if (z === 0)
      return L();
    var G = this.matches[C] = /* @__PURE__ */ Object.create(null);
    q.forEach(function(O, u) {
      O = Z._makeAbs(O), e.realpath(O, Z.realpathCache, function(p, d) {
        p ? p.syscall === "stat" ? G[O] = !0 : Z.emit("error", p) : G[d] = !0, --z === 0 && (Z.matches[C] = G, L());
      });
    });
  }, R.prototype._mark = function(C) {
    return s.mark(this, C);
  }, R.prototype._makeAbs = function(C) {
    return s.makeAbs(this, C);
  }, R.prototype.abort = function() {
    this.aborted = !0, this.emit("abort");
  }, R.prototype.pause = function() {
    this.paused || (this.paused = !0, this.emit("pause"));
  }, R.prototype.resume = function() {
    if (this.paused) {
      if (this.emit("resume"), this.paused = !1, this._emitQueue.length) {
        var C = this._emitQueue.slice(0);
        this._emitQueue.length = 0;
        for (var L = 0; L < C.length; L++) {
          var U = C[L];
          this._emitMatch(U[0], U[1]);
        }
      }
      if (this._processQueue.length) {
        var q = this._processQueue.slice(0);
        this._processQueue.length = 0;
        for (var L = 0; L < q.length; L++) {
          var Z = q[L];
          this._processing--, this._process(Z[0], Z[1], Z[2], Z[3]);
        }
      }
    }
  }, R.prototype._process = function(C, L, U, q) {
    if (i(this instanceof R), i(typeof q == "function"), !this.aborted) {
      if (this._processing++, this.paused) {
        this._processQueue.push([C, L, U, q]);
        return;
      }
      for (var Z = 0; typeof C[Z] == "string"; )
        Z++;
      var z;
      switch (Z) {
        case C.length:
          this._processSimple(C.join("/"), L, q);
          return;
        case 0:
          z = null;
          break;
        default:
          z = C.slice(0, Z).join("/");
          break;
      }
      var G = C.slice(Z), O;
      z === null ? O = "." : ((n(z) || n(C.map(function(d) {
        return typeof d == "string" ? d : "[*]";
      }).join("/"))) && (!z || !n(z)) && (z = "/" + z), O = z);
      var u = this._makeAbs(O);
      if (m(this, O))
        return q();
      var p = G[0] === t.GLOBSTAR;
      p ? this._processGlobStar(z, O, u, G, L, U, q) : this._processReaddir(z, O, u, G, L, U, q);
    }
  }, R.prototype._processReaddir = function(C, L, U, q, Z, z, G) {
    var O = this;
    this._readdir(U, z, function(u, p) {
      return O._processReaddir2(C, L, U, q, Z, z, p, G);
    });
  }, R.prototype._processReaddir2 = function(C, L, U, q, Z, z, G, O) {
    if (!G)
      return O();
    for (var u = q[0], p = !!this.minimatch.negate, d = u._glob, c = this.dot || d.charAt(0) === ".", y = [], S = 0; S < G.length; S++) {
      var T = G[S];
      if (T.charAt(0) !== "." || c) {
        var g;
        p && !C ? g = !T.match(u) : g = T.match(u), g && y.push(T);
      }
    }
    var w = y.length;
    if (w === 0)
      return O();
    if (q.length === 1 && !this.mark && !this.stat) {
      this.matches[Z] || (this.matches[Z] = /* @__PURE__ */ Object.create(null));
      for (var S = 0; S < w; S++) {
        var T = y[S];
        C && (C !== "/" ? T = C + "/" + T : T = C + T), T.charAt(0) === "/" && !this.nomount && (T = f.join(this.root, T)), this._emitMatch(Z, T);
      }
      return O();
    }
    q.shift();
    for (var S = 0; S < w; S++) {
      var T = y[S];
      C && (C !== "/" ? T = C + "/" + T : T = C + T), this._process([T].concat(q), Z, z, O);
    }
    O();
  }, R.prototype._emitMatch = function(C, L) {
    if (!this.aborted && !x(this, L)) {
      if (this.paused) {
        this._emitQueue.push([C, L]);
        return;
      }
      var U = n(L) ? L : this._makeAbs(L);
      if (this.mark && (L = this._mark(L)), this.absolute && (L = U), !this.matches[C][L]) {
        if (this.nodir) {
          var q = this.cache[U];
          if (q === "DIR" || Array.isArray(q))
            return;
        }
        this.matches[C][L] = !0;
        var Z = this.statCache[U];
        Z && this.emit("stat", L, Z), this.emit("match", L);
      }
    }
  }, R.prototype._readdirInGlobStar = function(C, L) {
    if (this.aborted)
      return;
    if (this.follow)
      return this._readdir(C, !1, L);
    var U = "lstat\0" + C, q = this, Z = v(U, z);
    Z && q.fs.lstat(C, Z);
    function z(G, O) {
      if (G && G.code === "ENOENT")
        return L();
      var u = O && O.isSymbolicLink();
      q.symlinks[C] = u, !u && O && !O.isDirectory() ? (q.cache[C] = "FILE", L()) : q._readdir(C, !1, L);
    }
  }, R.prototype._readdir = function(C, L, U) {
    if (!this.aborted && (U = v("readdir\0" + C + "\0" + L, U), !!U)) {
      if (L && !l(this.symlinks, C))
        return this._readdirInGlobStar(C, U);
      if (l(this.cache, C)) {
        var q = this.cache[C];
        if (!q || q === "FILE")
          return U();
        if (Array.isArray(q))
          return U(null, q);
      }
      var Z = this;
      Z.fs.readdir(C, F(this, C, U));
    }
  };
  function F(C, L, U) {
    return function(q, Z) {
      q ? C._readdirError(L, q, U) : C._readdirEntries(L, Z, U);
    };
  }
  return R.prototype._readdirEntries = function(C, L, U) {
    if (!this.aborted) {
      if (!this.mark && !this.stat)
        for (var q = 0; q < L.length; q++) {
          var Z = L[q];
          C === "/" ? Z = C + Z : Z = C + "/" + Z, this.cache[Z] = !0;
        }
      return this.cache[C] = L, U(null, L);
    }
  }, R.prototype._readdirError = function(C, L, U) {
    if (!this.aborted) {
      switch (L.code) {
        case "ENOTSUP":
        case "ENOTDIR":
          var q = this._makeAbs(C);
          if (this.cache[q] = "FILE", q === this.cwdAbs) {
            var Z = new Error(L.code + " invalid cwd " + this.cwd);
            Z.path = this.cwd, Z.code = L.code, this.emit("error", Z), this.abort();
          }
          break;
        case "ENOENT":
        case "ELOOP":
        case "ENAMETOOLONG":
        case "UNKNOWN":
          this.cache[this._makeAbs(C)] = !1;
          break;
        default:
          this.cache[this._makeAbs(C)] = !1, this.strict && (this.emit("error", L), this.abort()), this.silent || console.error("glob error", L);
          break;
      }
      return U();
    }
  }, R.prototype._processGlobStar = function(C, L, U, q, Z, z, G) {
    var O = this;
    this._readdir(U, z, function(u, p) {
      O._processGlobStar2(C, L, U, q, Z, z, p, G);
    });
  }, R.prototype._processGlobStar2 = function(C, L, U, q, Z, z, G, O) {
    if (!G)
      return O();
    var u = q.slice(1), p = C ? [C] : [], d = p.concat(u);
    this._process(d, Z, !1, O);
    var c = this.symlinks[U], y = G.length;
    if (c && z)
      return O();
    for (var S = 0; S < y; S++) {
      var T = G[S];
      if (!(T.charAt(0) === "." && !this.dot)) {
        var g = p.concat(G[S], u);
        this._process(g, Z, !0, O);
        var w = p.concat(G[S], q);
        this._process(w, Z, !0, O);
      }
    }
    O();
  }, R.prototype._processSimple = function(C, L, U) {
    var q = this;
    this._stat(C, function(Z, z) {
      q._processSimple2(C, L, Z, z, U);
    });
  }, R.prototype._processSimple2 = function(C, L, U, q, Z) {
    if (this.matches[L] || (this.matches[L] = /* @__PURE__ */ Object.create(null)), !q)
      return Z();
    if (C && n(C) && !this.nomount) {
      var z = /[\/\\]$/.test(C);
      C.charAt(0) === "/" ? C = f.join(this.root, C) : (C = f.resolve(this.root, C), z && (C += "/"));
    }
    g7.platform === "win32" && (C = C.replace(/\\/g, "/")), this._emitMatch(L, C), Z();
  }, R.prototype._stat = function(C, L) {
    var U = this._makeAbs(C), q = C.slice(-1) === "/";
    if (C.length > this.maxLength)
      return L();
    if (!this.stat && l(this.cache, U)) {
      var Z = this.cache[U];
      if (Array.isArray(Z) && (Z = "DIR"), !q || Z === "DIR")
        return L(null, Z);
      if (q && Z === "FILE")
        return L();
    }
    var z = this.statCache[U];
    if (z !== void 0) {
      if (z === !1)
        return L(null, z);
      var G = z.isDirectory() ? "DIR" : "FILE";
      return q && G === "FILE" ? L() : L(null, G, z);
    }
    var O = this, u = v("stat\0" + U, p);
    u && O.fs.lstat(U, u);
    function p(d, c) {
      if (c && c.isSymbolicLink())
        return O.fs.stat(U, function(y, S) {
          y ? O._stat2(C, U, null, c, L) : O._stat2(C, U, y, S, L);
        });
      O._stat2(C, U, d, c, L);
    }
  }, R.prototype._stat2 = function(C, L, U, q, Z) {
    if (U && (U.code === "ENOENT" || U.code === "ENOTDIR"))
      return this.statCache[L] = !1, Z();
    var z = C.slice(-1) === "/";
    if (this.statCache[L] = q, L.slice(-1) === "/" && q && !q.isDirectory())
      return Z(null, !1, q);
    var G = !0;
    return q && (G = q.isDirectory() ? "DIR" : "FILE"), this.cache[L] = this.cache[L] || G, z && G === "FILE" ? Z() : Z(null, G, q);
  }, A2;
}
var AN = Fd;
Fd.sync = my;
var Se = yt(), py = Et, q4 = Zt, p1 = void 0;
try {
  p1 = ly();
} catch {
}
var hy = parseInt("666", 8), IN = {
  nosort: !0,
  silent: !0
}, I2 = 0, D9 = g7.platform === "win32";
function by(e) {
  var t = [
    "unlink",
    "chmod",
    "stat",
    "lstat",
    "rmdir",
    "readdir"
  ];
  if (t.forEach(function(a) {
    e[a] = e[a] || q4[a], a = a + "Sync", e[a] = e[a] || q4[a];
  }), e.maxBusyTries = e.maxBusyTries || 3, e.emfileWait = e.emfileWait || 1e3, e.glob === !1 && (e.disableGlob = !0), e.disableGlob !== !0 && p1 === void 0)
    throw Error("glob dependency not found, set `options.disableGlob = true` if intentional");
  e.disableGlob = e.disableGlob || !1, e.glob = e.glob || IN;
}
function Fd(e, t, a) {
  typeof t == "function" && (a = t, t = {}), Se(e, "rimraf: missing path"), Se.equal(typeof e, "string", "rimraf: path should be a string"), Se.equal(typeof a, "function", "rimraf: callback function required"), Se(t, "rimraf: invalid options argument provided"), Se.equal(typeof t, "object", "rimraf: options should be object"), by(t);
  var r = 0, f = null, i = 0;
  if (t.disableGlob || !p1.hasMagic(e))
    return o(null, [e]);
  t.lstat(e, function(s, b) {
    if (!s)
      return o(null, [e]);
    p1(e, t.glob, o);
  });
  function n(s) {
    f = f || s, --i === 0 && a(f);
  }
  function o(s, b) {
    if (s)
      return a(s);
    if (i = b.length, i === 0)
      return a();
    b.forEach(function(l) {
      k2(l, t, function v(m) {
        if (m) {
          if ((m.code === "EBUSY" || m.code === "ENOTEMPTY" || m.code === "EPERM") && r < t.maxBusyTries) {
            r++;
            var x = r * 100;
            return setTimeout(function() {
              k2(l, t, v);
            }, x);
          }
          if (m.code === "EMFILE" && I2 < t.emfileWait)
            return setTimeout(function() {
              k2(l, t, v);
            }, I2++);
          m.code === "ENOENT" && (m = null);
        }
        I2 = 0, n(m);
      });
    });
  }
}
function k2(e, t, a) {
  Se(e), Se(t), Se(typeof a == "function"), t.lstat(e, function(r, f) {
    if (r && r.code === "ENOENT")
      return a(null);
    if (r && r.code === "EPERM" && D9 && K4(e, t, r, a), f && f.isDirectory())
      return ff(e, t, r, a);
    t.unlink(e, function(i) {
      if (i) {
        if (i.code === "ENOENT")
          return a(null);
        if (i.code === "EPERM")
          return D9 ? K4(e, t, i, a) : ff(e, t, i, a);
        if (i.code === "EISDIR")
          return ff(e, t, i, a);
      }
      return a(i);
    });
  });
}
function K4(e, t, a, r) {
  Se(e), Se(t), Se(typeof r == "function"), a && Se(a instanceof Error), t.chmod(e, hy, function(f) {
    f ? r(f.code === "ENOENT" ? null : a) : t.stat(e, function(i, n) {
      i ? r(i.code === "ENOENT" ? null : a) : n.isDirectory() ? ff(e, t, a, r) : t.unlink(e, r);
    });
  });
}
function G4(e, t, a) {
  Se(e), Se(t), a && Se(a instanceof Error);
  try {
    t.chmodSync(e, hy);
  } catch (f) {
    if (f.code === "ENOENT")
      return;
    throw a;
  }
  try {
    var r = t.statSync(e);
  } catch (f) {
    if (f.code === "ENOENT")
      return;
    throw a;
  }
  r.isDirectory() ? nf(e, t, a) : t.unlinkSync(e);
}
function ff(e, t, a, r) {
  Se(e), Se(t), a && Se(a instanceof Error), Se(typeof r == "function"), t.rmdir(e, function(f) {
    f && (f.code === "ENOTEMPTY" || f.code === "EEXIST" || f.code === "EPERM") ? kN(e, t, r) : f && f.code === "ENOTDIR" ? r(a) : r(f);
  });
}
function kN(e, t, a) {
  Se(e), Se(t), Se(typeof a == "function"), t.readdir(e, function(r, f) {
    if (r)
      return a(r);
    var i = f.length;
    if (i === 0)
      return t.rmdir(e, a);
    var n;
    f.forEach(function(o) {
      Fd(py.join(e, o), t, function(s) {
        if (!n) {
          if (s)
            return a(n = s);
          --i === 0 && t.rmdir(e, a);
        }
      });
    });
  });
}
function my(e, t) {
  t = t || {}, by(t), Se(e, "rimraf: missing path"), Se.equal(typeof e, "string", "rimraf: path should be a string"), Se(t, "rimraf: missing options"), Se.equal(typeof t, "object", "rimraf: options should be object");
  var a;
  if (t.disableGlob || !p1.hasMagic(e))
    a = [e];
  else
    try {
      t.lstatSync(e), a = [e];
    } catch {
      a = p1.sync(e, t.glob);
    }
  if (a.length)
    for (var r = 0; r < a.length; r++) {
      var e = a[r];
      try {
        var f = t.lstatSync(e);
      } catch (n) {
        if (n.code === "ENOENT")
          return;
        n.code === "EPERM" && D9 && G4(e, t, n);
      }
      try {
        f && f.isDirectory() ? nf(e, t, null) : t.unlinkSync(e);
      } catch (n) {
        if (n.code === "ENOENT")
          return;
        if (n.code === "EPERM")
          return D9 ? G4(e, t, n) : nf(e, t, n);
        if (n.code !== "EISDIR")
          throw n;
        nf(e, t, n);
      }
    }
}
function nf(e, t, a) {
  Se(e), Se(t), a && Se(a instanceof Error);
  try {
    t.rmdirSync(e);
  } catch (r) {
    if (r.code === "ENOENT")
      return;
    if (r.code === "ENOTDIR")
      throw a;
    (r.code === "ENOTEMPTY" || r.code === "EEXIST" || r.code === "EPERM") && ON(e, t);
  }
}
function ON(e, t) {
  Se(e), Se(t), t.readdirSync(e).forEach(function(n) {
    my(py.join(e, n), t);
  });
  var a = D9 ? 100 : 1, r = 0;
  do {
    var f = !0;
    try {
      var i = t.rmdirSync(e, t);
      return f = !1, i;
    } finally {
      if (++r < a && f)
        continue;
    }
  } while (!0);
}
var Vi = { exports: {} }, vy = { exports: {} }, yy = { exports: {} };
(function(e) {
  (function(t) {
    var a, r = /^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i, f = Math.ceil, i = Math.floor, n = "[BigNumber Error] ", o = n + "Number primitive has more than 15 significant digits: ", s = 1e14, b = 14, l = 9007199254740991, v = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13], m = 1e7, x = 1e9;
    function I(U) {
      var q, Z, z, G = Y.prototype = { constructor: Y, toString: null, valueOf: null }, O = new Y(1), u = 20, p = 4, d = -7, c = 21, y = -1e7, S = 1e7, T = !1, g = 1, w = 0, A = {
        prefix: "",
        groupSize: 3,
        secondaryGroupSize: 0,
        groupSeparator: ",",
        decimalSeparator: ".",
        fractionGroupSize: 0,
        fractionGroupSeparator: " ",
        // non-breaking space
        suffix: ""
      }, h = "0123456789abcdefghijklmnopqrstuvwxyz", N = !0;
      function Y(J, _) {
        var E, j, V, n7, K, B, D, W, e7 = this;
        if (!(e7 instanceof Y))
          return new Y(J, _);
        if (_ == null) {
          if (J && J._isBigNumber === !0) {
            e7.s = J.s, !J.c || J.e > S ? e7.c = e7.e = null : J.e < y ? e7.c = [e7.e = 0] : (e7.e = J.e, e7.c = J.c.slice());
            return;
          }
          if ((B = typeof J == "number") && J * 0 == 0) {
            if (e7.s = 1 / J < 0 ? (J = -J, -1) : 1, J === ~~J) {
              for (n7 = 0, K = J; K >= 10; K /= 10, n7++)
                ;
              n7 > S ? e7.c = e7.e = null : (e7.e = n7, e7.c = [J]);
              return;
            }
            W = String(J);
          } else {
            if (!r.test(W = String(J)))
              return z(e7, W, B);
            e7.s = W.charCodeAt(0) == 45 ? (W = W.slice(1), -1) : 1;
          }
          (n7 = W.indexOf(".")) > -1 && (W = W.replace(".", "")), (K = W.search(/e/i)) > 0 ? (n7 < 0 && (n7 = K), n7 += +W.slice(K + 1), W = W.substring(0, K)) : n7 < 0 && (n7 = W.length);
        } else {
          if (R(_, 2, h.length, "Base"), _ == 10 && N)
            return e7 = new Y(J), X(e7, u + e7.e + 1, p);
          if (W = String(J), B = typeof J == "number") {
            if (J * 0 != 0)
              return z(e7, W, B, _);
            if (e7.s = 1 / J < 0 ? (W = W.slice(1), -1) : 1, Y.DEBUG && W.replace(/^0\.0*|\./, "").length > 15)
              throw Error(o + J);
          } else
            e7.s = W.charCodeAt(0) === 45 ? (W = W.slice(1), -1) : 1;
          for (E = h.slice(0, _), n7 = K = 0, D = W.length; K < D; K++)
            if (E.indexOf(j = W.charAt(K)) < 0) {
              if (j == ".") {
                if (K > n7) {
                  n7 = D;
                  continue;
                }
              } else if (!V && (W == W.toUpperCase() && (W = W.toLowerCase()) || W == W.toLowerCase() && (W = W.toUpperCase()))) {
                V = !0, K = -1, n7 = 0;
                continue;
              }
              return z(e7, String(J), B, _);
            }
          B = !1, W = Z(W, _, 10, e7.s), (n7 = W.indexOf(".")) > -1 ? W = W.replace(".", "") : n7 = W.length;
        }
        for (K = 0; W.charCodeAt(K) === 48; K++)
          ;
        for (D = W.length; W.charCodeAt(--D) === 48; )
          ;
        if (W = W.slice(K, ++D)) {
          if (D -= K, B && Y.DEBUG && D > 15 && (J > l || J !== i(J)))
            throw Error(o + e7.s * J);
          if ((n7 = n7 - K - 1) > S)
            e7.c = e7.e = null;
          else if (n7 < y)
            e7.c = [e7.e = 0];
          else {
            if (e7.e = n7, e7.c = [], K = (n7 + 1) % b, n7 < 0 && (K += b), K < D) {
              for (K && e7.c.push(+W.slice(0, K)), D -= b; K < D; )
                e7.c.push(+W.slice(K, K += b));
              K = b - (W = W.slice(K)).length;
            } else
              K -= D;
            for (; K--; W += "0")
              ;
            e7.c.push(+W);
          }
        } else
          e7.c = [e7.e = 0];
      }
      Y.clone = I, Y.ROUND_UP = 0, Y.ROUND_DOWN = 1, Y.ROUND_CEIL = 2, Y.ROUND_FLOOR = 3, Y.ROUND_HALF_UP = 4, Y.ROUND_HALF_DOWN = 5, Y.ROUND_HALF_EVEN = 6, Y.ROUND_HALF_CEIL = 7, Y.ROUND_HALF_FLOOR = 8, Y.EUCLID = 9, Y.config = Y.set = function(J) {
        var _, E;
        if (J != null)
          if (typeof J == "object") {
            if (J.hasOwnProperty(_ = "DECIMAL_PLACES") && (E = J[_], R(E, 0, x, _), u = E), J.hasOwnProperty(_ = "ROUNDING_MODE") && (E = J[_], R(E, 0, 8, _), p = E), J.hasOwnProperty(_ = "EXPONENTIAL_AT") && (E = J[_], E && E.pop ? (R(E[0], -x, 0, _), R(E[1], 0, x, _), d = E[0], c = E[1]) : (R(E, -x, x, _), d = -(c = E < 0 ? -E : E))), J.hasOwnProperty(_ = "RANGE"))
              if (E = J[_], E && E.pop)
                R(E[0], -x, -1, _), R(E[1], 1, x, _), y = E[0], S = E[1];
              else if (R(E, -x, x, _), E)
                y = -(S = E < 0 ? -E : E);
              else
                throw Error(n + _ + " cannot be zero: " + E);
            if (J.hasOwnProperty(_ = "CRYPTO"))
              if (E = J[_], E === !!E)
                if (E)
                  if (typeof crypto < "u" && crypto && (crypto.getRandomValues || crypto.randomBytes))
                    T = E;
                  else
                    throw T = !E, Error(n + "crypto unavailable");
                else
                  T = E;
              else
                throw Error(n + _ + " not true or false: " + E);
            if (J.hasOwnProperty(_ = "MODULO_MODE") && (E = J[_], R(E, 0, 9, _), g = E), J.hasOwnProperty(_ = "POW_PRECISION") && (E = J[_], R(E, 0, x, _), w = E), J.hasOwnProperty(_ = "FORMAT"))
              if (E = J[_], typeof E == "object")
                A = E;
              else
                throw Error(n + _ + " not an object: " + E);
            if (J.hasOwnProperty(_ = "ALPHABET"))
              if (E = J[_], typeof E == "string" && !/^.?$|[+\-.\s]|(.).*\1/.test(E))
                N = E.slice(0, 10) == "0123456789", h = E;
              else
                throw Error(n + _ + " invalid: " + E);
          } else
            throw Error(n + "Object expected: " + J);
        return {
          DECIMAL_PLACES: u,
          ROUNDING_MODE: p,
          EXPONENTIAL_AT: [d, c],
          RANGE: [y, S],
          CRYPTO: T,
          MODULO_MODE: g,
          POW_PRECISION: w,
          FORMAT: A,
          ALPHABET: h
        };
      }, Y.isBigNumber = function(J) {
        if (!J || J._isBigNumber !== !0)
          return !1;
        if (!Y.DEBUG)
          return !0;
        var _, E, j = J.c, V = J.e, n7 = J.s;
        e:
          if ({}.toString.call(j) == "[object Array]") {
            if ((n7 === 1 || n7 === -1) && V >= -x && V <= x && V === i(V)) {
              if (j[0] === 0) {
                if (V === 0 && j.length === 1)
                  return !0;
                break e;
              }
              if (_ = (V + 1) % b, _ < 1 && (_ += b), String(j[0]).length == _) {
                for (_ = 0; _ < j.length; _++)
                  if (E = j[_], E < 0 || E >= s || E !== i(E))
                    break e;
                if (E !== 0)
                  return !0;
              }
            }
          } else if (j === null && V === null && (n7 === null || n7 === 1 || n7 === -1))
            return !0;
        throw Error(n + "Invalid BigNumber: " + J);
      }, Y.maximum = Y.max = function() {
        return H(arguments, G.lt);
      }, Y.minimum = Y.min = function() {
        return H(arguments, G.gt);
      }, Y.random = function() {
        var J = 9007199254740992, _ = Math.random() * J & 2097151 ? function() {
          return i(Math.random() * J);
        } : function() {
          return (Math.random() * 1073741824 | 0) * 8388608 + (Math.random() * 8388608 | 0);
        };
        return function(E) {
          var j, V, n7, K, B, D = 0, W = [], e7 = new Y(O);
          if (E == null ? E = u : R(E, 0, x), K = f(E / b), T)
            if (crypto.getRandomValues) {
              for (j = crypto.getRandomValues(new Uint32Array(K *= 2)); D < K; )
                B = j[D] * 131072 + (j[D + 1] >>> 11), B >= 9e15 ? (V = crypto.getRandomValues(new Uint32Array(2)), j[D] = V[0], j[D + 1] = V[1]) : (W.push(B % 1e14), D += 2);
              D = K / 2;
            } else if (crypto.randomBytes) {
              for (j = crypto.randomBytes(K *= 7); D < K; )
                B = (j[D] & 31) * 281474976710656 + j[D + 1] * 1099511627776 + j[D + 2] * 4294967296 + j[D + 3] * 16777216 + (j[D + 4] << 16) + (j[D + 5] << 8) + j[D + 6], B >= 9e15 ? crypto.randomBytes(7).copy(j, D) : (W.push(B % 1e14), D += 7);
              D = K / 7;
            } else
              throw T = !1, Error(n + "crypto unavailable");
          if (!T)
            for (; D < K; )
              B = _(), B < 9e15 && (W[D++] = B % 1e14);
          for (K = W[--D], E %= b, K && E && (B = v[b - E], W[D] = i(K / B) * B); W[D] === 0; W.pop(), D--)
            ;
          if (D < 0)
            W = [n7 = 0];
          else {
            for (n7 = -1; W[0] === 0; W.splice(0, 1), n7 -= b)
              ;
            for (D = 1, B = W[0]; B >= 10; B /= 10, D++)
              ;
            D < b && (n7 -= b - D);
          }
          return e7.e = n7, e7.c = W, e7;
        };
      }(), Y.sum = function() {
        for (var J = 1, _ = arguments, E = new Y(_[0]); J < _.length; )
          E = E.plus(_[J++]);
        return E;
      }, Z = function() {
        var J = "0123456789";
        function _(E, j, V, n7) {
          for (var K, B = [0], D, W = 0, e7 = E.length; W < e7; ) {
            for (D = B.length; D--; B[D] *= j)
              ;
            for (B[0] += n7.indexOf(E.charAt(W++)), K = 0; K < B.length; K++)
              B[K] > V - 1 && (B[K + 1] == null && (B[K + 1] = 0), B[K + 1] += B[K] / V | 0, B[K] %= V);
          }
          return B.reverse();
        }
        return function(E, j, V, n7, K) {
          var B, D, W, e7, o7, a7, s7, u7, m7 = E.indexOf("."), p7 = u, l7 = p;
          for (m7 >= 0 && (e7 = w, w = 0, E = E.replace(".", ""), u7 = new Y(j), a7 = u7.pow(E.length - m7), w = e7, u7.c = _(
            L(P(a7.c), a7.e, "0"),
            10,
            V,
            J
          ), u7.e = u7.c.length), s7 = _(E, j, V, K ? (B = h, J) : (B = J, h)), W = e7 = s7.length; s7[--e7] == 0; s7.pop())
            ;
          if (!s7[0])
            return B.charAt(0);
          if (m7 < 0 ? --W : (a7.c = s7, a7.e = W, a7.s = n7, a7 = q(a7, u7, p7, l7, V), s7 = a7.c, o7 = a7.r, W = a7.e), D = W + p7 + 1, m7 = s7[D], e7 = V / 2, o7 = o7 || D < 0 || s7[D + 1] != null, o7 = l7 < 4 ? (m7 != null || o7) && (l7 == 0 || l7 == (a7.s < 0 ? 3 : 2)) : m7 > e7 || m7 == e7 && (l7 == 4 || o7 || l7 == 6 && s7[D - 1] & 1 || l7 == (a7.s < 0 ? 8 : 7)), D < 1 || !s7[0])
            E = o7 ? L(B.charAt(1), -p7, B.charAt(0)) : B.charAt(0);
          else {
            if (s7.length = D, o7)
              for (--V; ++s7[--D] > V; )
                s7[D] = 0, D || (++W, s7 = [1].concat(s7));
            for (e7 = s7.length; !s7[--e7]; )
              ;
            for (m7 = 0, E = ""; m7 <= e7; E += B.charAt(s7[m7++]))
              ;
            E = L(E, W, B.charAt(0));
          }
          return E;
        };
      }(), q = function() {
        function J(j, V, n7) {
          var K, B, D, W, e7 = 0, o7 = j.length, a7 = V % m, s7 = V / m | 0;
          for (j = j.slice(); o7--; )
            D = j[o7] % m, W = j[o7] / m | 0, K = s7 * D + W * a7, B = a7 * D + K % m * m + e7, e7 = (B / n7 | 0) + (K / m | 0) + s7 * W, j[o7] = B % n7;
          return e7 && (j = [e7].concat(j)), j;
        }
        function _(j, V, n7, K) {
          var B, D;
          if (n7 != K)
            D = n7 > K ? 1 : -1;
          else
            for (B = D = 0; B < n7; B++)
              if (j[B] != V[B]) {
                D = j[B] > V[B] ? 1 : -1;
                break;
              }
          return D;
        }
        function E(j, V, n7, K) {
          for (var B = 0; n7--; )
            j[n7] -= B, B = j[n7] < V[n7] ? 1 : 0, j[n7] = B * K + j[n7] - V[n7];
          for (; !j[0] && j.length > 1; j.splice(0, 1))
            ;
        }
        return function(j, V, n7, K, B) {
          var D, W, e7, o7, a7, s7, u7, m7, p7, l7, y7, x7, _7, F7, T7, S7, Y7, k7 = j.s == V.s ? 1 : -1, E7 = j.c, $7 = V.c;
          if (!E7 || !E7[0] || !$7 || !$7[0])
            return new Y(
              // Return NaN if either NaN, or both Infinity or 0.
              !j.s || !V.s || (E7 ? $7 && E7[0] == $7[0] : !$7) ? NaN : (
                // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.
                E7 && E7[0] == 0 || !$7 ? k7 * 0 : k7 / 0
              )
            );
          for (m7 = new Y(k7), p7 = m7.c = [], W = j.e - V.e, k7 = n7 + W + 1, B || (B = s, W = k(j.e / b) - k(V.e / b), k7 = k7 / b | 0), e7 = 0; $7[e7] == (E7[e7] || 0); e7++)
            ;
          if ($7[e7] > (E7[e7] || 0) && W--, k7 < 0)
            p7.push(1), o7 = !0;
          else {
            for (F7 = E7.length, S7 = $7.length, e7 = 0, k7 += 2, a7 = i(B / ($7[0] + 1)), a7 > 1 && ($7 = J($7, a7, B), E7 = J(E7, a7, B), S7 = $7.length, F7 = E7.length), _7 = S7, l7 = E7.slice(0, S7), y7 = l7.length; y7 < S7; l7[y7++] = 0)
              ;
            Y7 = $7.slice(), Y7 = [0].concat(Y7), T7 = $7[0], $7[1] >= B / 2 && T7++;
            do {
              if (a7 = 0, D = _($7, l7, S7, y7), D < 0) {
                if (x7 = l7[0], S7 != y7 && (x7 = x7 * B + (l7[1] || 0)), a7 = i(x7 / T7), a7 > 1)
                  for (a7 >= B && (a7 = B - 1), s7 = J($7, a7, B), u7 = s7.length, y7 = l7.length; _(s7, l7, u7, y7) == 1; )
                    a7--, E(s7, S7 < u7 ? Y7 : $7, u7, B), u7 = s7.length, D = 1;
                else
                  a7 == 0 && (D = a7 = 1), s7 = $7.slice(), u7 = s7.length;
                if (u7 < y7 && (s7 = [0].concat(s7)), E(l7, s7, y7, B), y7 = l7.length, D == -1)
                  for (; _($7, l7, S7, y7) < 1; )
                    a7++, E(l7, S7 < y7 ? Y7 : $7, y7, B), y7 = l7.length;
              } else
                D === 0 && (a7++, l7 = [0]);
              p7[e7++] = a7, l7[0] ? l7[y7++] = E7[_7] || 0 : (l7 = [E7[_7]], y7 = 1);
            } while ((_7++ < F7 || l7[0] != null) && k7--);
            o7 = l7[0] != null, p7[0] || p7.splice(0, 1);
          }
          if (B == s) {
            for (e7 = 1, k7 = p7[0]; k7 >= 10; k7 /= 10, e7++)
              ;
            X(m7, n7 + (m7.e = e7 + W * b - 1) + 1, K, o7);
          } else
            m7.e = W, m7.r = +o7;
          return m7;
        };
      }();
      function t7(J, _, E, j) {
        var V, n7, K, B, D;
        if (E == null ? E = p : R(E, 0, 8), !J.c)
          return J.toString();
        if (V = J.c[0], K = J.e, _ == null)
          D = P(J.c), D = j == 1 || j == 2 && (K <= d || K >= c) ? C(D, K) : L(D, K, "0");
        else if (J = X(new Y(J), _, E), n7 = J.e, D = P(J.c), B = D.length, j == 1 || j == 2 && (_ <= n7 || n7 <= d)) {
          for (; B < _; D += "0", B++)
            ;
          D = C(D, n7);
        } else if (_ -= K, D = L(D, n7, "0"), n7 + 1 > B) {
          if (--_ > 0)
            for (D += "."; _--; D += "0")
              ;
        } else if (_ += n7 - B, _ > 0)
          for (n7 + 1 == B && (D += "."); _--; D += "0")
            ;
        return J.s < 0 && V ? "-" + D : D;
      }
      function H(J, _) {
        for (var E, j = 1, V = new Y(J[0]); j < J.length; j++)
          if (E = new Y(J[j]), E.s)
            _.call(V, E) && (V = E);
          else {
            V = E;
            break;
          }
        return V;
      }
      function $(J, _, E) {
        for (var j = 1, V = _.length; !_[--V]; _.pop())
          ;
        for (V = _[0]; V >= 10; V /= 10, j++)
          ;
        return (E = j + E * b - 1) > S ? J.c = J.e = null : E < y ? J.c = [J.e = 0] : (J.e = E, J.c = _), J;
      }
      z = function() {
        var J = /^(-?)0([xbo])(?=\w[\w.]*$)/i, _ = /^([^.]+)\.$/, E = /^\.([^.]+)$/, j = /^-?(Infinity|NaN)$/, V = /^\s*\+(?=[\w.])|^\s+|\s+$/g;
        return function(n7, K, B, D) {
          var W, e7 = B ? K : K.replace(V, "");
          if (j.test(e7))
            n7.s = isNaN(e7) ? null : e7 < 0 ? -1 : 1;
          else {
            if (!B && (e7 = e7.replace(J, function(o7, a7, s7) {
              return W = (s7 = s7.toLowerCase()) == "x" ? 16 : s7 == "b" ? 2 : 8, !D || D == W ? a7 : o7;
            }), D && (W = D, e7 = e7.replace(_, "$1").replace(E, "0.$1")), K != e7))
              return new Y(e7, W);
            if (Y.DEBUG)
              throw Error(n + "Not a" + (D ? " base " + D : "") + " number: " + K);
            n7.s = null;
          }
          n7.c = n7.e = null;
        };
      }();
      function X(J, _, E, j) {
        var V, n7, K, B, D, W, e7, o7 = J.c, a7 = v;
        if (o7) {
          e: {
            for (V = 1, B = o7[0]; B >= 10; B /= 10, V++)
              ;
            if (n7 = _ - V, n7 < 0)
              n7 += b, K = _, D = o7[W = 0], e7 = D / a7[V - K - 1] % 10 | 0;
            else if (W = f((n7 + 1) / b), W >= o7.length)
              if (j) {
                for (; o7.length <= W; o7.push(0))
                  ;
                D = e7 = 0, V = 1, n7 %= b, K = n7 - b + 1;
              } else
                break e;
            else {
              for (D = B = o7[W], V = 1; B >= 10; B /= 10, V++)
                ;
              n7 %= b, K = n7 - b + V, e7 = K < 0 ? 0 : D / a7[V - K - 1] % 10 | 0;
            }
            if (j = j || _ < 0 || // Are there any non-zero digits after the rounding digit?
            // The expression  n % pows10[d - j - 1]  returns all digits of n to the right
            // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.
            o7[W + 1] != null || (K < 0 ? D : D % a7[V - K - 1]), j = E < 4 ? (e7 || j) && (E == 0 || E == (J.s < 0 ? 3 : 2)) : e7 > 5 || e7 == 5 && (E == 4 || j || E == 6 && // Check whether the digit to the left of the rounding digit is odd.
            (n7 > 0 ? K > 0 ? D / a7[V - K] : 0 : o7[W - 1]) % 10 & 1 || E == (J.s < 0 ? 8 : 7)), _ < 1 || !o7[0])
              return o7.length = 0, j ? (_ -= J.e + 1, o7[0] = a7[(b - _ % b) % b], J.e = -_ || 0) : o7[0] = J.e = 0, J;
            if (n7 == 0 ? (o7.length = W, B = 1, W--) : (o7.length = W + 1, B = a7[b - n7], o7[W] = K > 0 ? i(D / a7[V - K] % a7[K]) * B : 0), j)
              for (; ; )
                if (W == 0) {
                  for (n7 = 1, K = o7[0]; K >= 10; K /= 10, n7++)
                    ;
                  for (K = o7[0] += B, B = 1; K >= 10; K /= 10, B++)
                    ;
                  n7 != B && (J.e++, o7[0] == s && (o7[0] = 1));
                  break;
                } else {
                  if (o7[W] += B, o7[W] != s)
                    break;
                  o7[W--] = 0, B = 1;
                }
            for (n7 = o7.length; o7[--n7] === 0; o7.pop())
              ;
          }
          J.e > S ? J.c = J.e = null : J.e < y && (J.c = [J.e = 0]);
        }
        return J;
      }
      function i7(J) {
        var _, E = J.e;
        return E === null ? J.toString() : (_ = P(J.c), _ = E <= d || E >= c ? C(_, E) : L(_, E, "0"), J.s < 0 ? "-" + _ : _);
      }
      return G.absoluteValue = G.abs = function() {
        var J = new Y(this);
        return J.s < 0 && (J.s = 1), J;
      }, G.comparedTo = function(J, _) {
        return M(this, new Y(J, _));
      }, G.decimalPlaces = G.dp = function(J, _) {
        var E, j, V, n7 = this;
        if (J != null)
          return R(J, 0, x), _ == null ? _ = p : R(_, 0, 8), X(new Y(n7), J + n7.e + 1, _);
        if (!(E = n7.c))
          return null;
        if (j = ((V = E.length - 1) - k(this.e / b)) * b, V = E[V])
          for (; V % 10 == 0; V /= 10, j--)
            ;
        return j < 0 && (j = 0), j;
      }, G.dividedBy = G.div = function(J, _) {
        return q(this, new Y(J, _), u, p);
      }, G.dividedToIntegerBy = G.idiv = function(J, _) {
        return q(this, new Y(J, _), 0, 1);
      }, G.exponentiatedBy = G.pow = function(J, _) {
        var E, j, V, n7, K, B, D, W, e7, o7 = this;
        if (J = new Y(J), J.c && !J.isInteger())
          throw Error(n + "Exponent not an integer: " + i7(J));
        if (_ != null && (_ = new Y(_)), B = J.e > 14, !o7.c || !o7.c[0] || o7.c[0] == 1 && !o7.e && o7.c.length == 1 || !J.c || !J.c[0])
          return e7 = new Y(Math.pow(+i7(o7), B ? 2 - F(J) : +i7(J))), _ ? e7.mod(_) : e7;
        if (D = J.s < 0, _) {
          if (_.c ? !_.c[0] : !_.s)
            return new Y(NaN);
          j = !D && o7.isInteger() && _.isInteger(), j && (o7 = o7.mod(_));
        } else {
          if (J.e > 9 && (o7.e > 0 || o7.e < -1 || (o7.e == 0 ? o7.c[0] > 1 || B && o7.c[1] >= 24e7 : o7.c[0] < 8e13 || B && o7.c[0] <= 9999975e7)))
            return n7 = o7.s < 0 && F(J) ? -0 : 0, o7.e > -1 && (n7 = 1 / n7), new Y(D ? 1 / n7 : n7);
          w && (n7 = f(w / b + 2));
        }
        for (B ? (E = new Y(0.5), D && (J.s = 1), W = F(J)) : (V = Math.abs(+i7(J)), W = V % 2), e7 = new Y(O); ; ) {
          if (W) {
            if (e7 = e7.times(o7), !e7.c)
              break;
            n7 ? e7.c.length > n7 && (e7.c.length = n7) : j && (e7 = e7.mod(_));
          }
          if (V) {
            if (V = i(V / 2), V === 0)
              break;
            W = V % 2;
          } else if (J = J.times(E), X(J, J.e + 1, 1), J.e > 14)
            W = F(J);
          else {
            if (V = +i7(J), V === 0)
              break;
            W = V % 2;
          }
          o7 = o7.times(o7), n7 ? o7.c && o7.c.length > n7 && (o7.c.length = n7) : j && (o7 = o7.mod(_));
        }
        return j ? e7 : (D && (e7 = O.div(e7)), _ ? e7.mod(_) : n7 ? X(e7, w, p, K) : e7);
      }, G.integerValue = function(J) {
        var _ = new Y(this);
        return J == null ? J = p : R(J, 0, 8), X(_, _.e + 1, J);
      }, G.isEqualTo = G.eq = function(J, _) {
        return M(this, new Y(J, _)) === 0;
      }, G.isFinite = function() {
        return !!this.c;
      }, G.isGreaterThan = G.gt = function(J, _) {
        return M(this, new Y(J, _)) > 0;
      }, G.isGreaterThanOrEqualTo = G.gte = function(J, _) {
        return (_ = M(this, new Y(J, _))) === 1 || _ === 0;
      }, G.isInteger = function() {
        return !!this.c && k(this.e / b) > this.c.length - 2;
      }, G.isLessThan = G.lt = function(J, _) {
        return M(this, new Y(J, _)) < 0;
      }, G.isLessThanOrEqualTo = G.lte = function(J, _) {
        return (_ = M(this, new Y(J, _))) === -1 || _ === 0;
      }, G.isNaN = function() {
        return !this.s;
      }, G.isNegative = function() {
        return this.s < 0;
      }, G.isPositive = function() {
        return this.s > 0;
      }, G.isZero = function() {
        return !!this.c && this.c[0] == 0;
      }, G.minus = function(J, _) {
        var E, j, V, n7, K = this, B = K.s;
        if (J = new Y(J, _), _ = J.s, !B || !_)
          return new Y(NaN);
        if (B != _)
          return J.s = -_, K.plus(J);
        var D = K.e / b, W = J.e / b, e7 = K.c, o7 = J.c;
        if (!D || !W) {
          if (!e7 || !o7)
            return e7 ? (J.s = -_, J) : new Y(o7 ? K : NaN);
          if (!e7[0] || !o7[0])
            return o7[0] ? (J.s = -_, J) : new Y(e7[0] ? K : (
              // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity
              p == 3 ? -0 : 0
            ));
        }
        if (D = k(D), W = k(W), e7 = e7.slice(), B = D - W) {
          for ((n7 = B < 0) ? (B = -B, V = e7) : (W = D, V = o7), V.reverse(), _ = B; _--; V.push(0))
            ;
          V.reverse();
        } else
          for (j = (n7 = (B = e7.length) < (_ = o7.length)) ? B : _, B = _ = 0; _ < j; _++)
            if (e7[_] != o7[_]) {
              n7 = e7[_] < o7[_];
              break;
            }
        if (n7 && (V = e7, e7 = o7, o7 = V, J.s = -J.s), _ = (j = o7.length) - (E = e7.length), _ > 0)
          for (; _--; e7[E++] = 0)
            ;
        for (_ = s - 1; j > B; ) {
          if (e7[--j] < o7[j]) {
            for (E = j; E && !e7[--E]; e7[E] = _)
              ;
            --e7[E], e7[j] += s;
          }
          e7[j] -= o7[j];
        }
        for (; e7[0] == 0; e7.splice(0, 1), --W)
          ;
        return e7[0] ? $(J, e7, W) : (J.s = p == 3 ? -1 : 1, J.c = [J.e = 0], J);
      }, G.modulo = G.mod = function(J, _) {
        var E, j, V = this;
        return J = new Y(J, _), !V.c || !J.s || J.c && !J.c[0] ? new Y(NaN) : !J.c || V.c && !V.c[0] ? new Y(V) : (g == 9 ? (j = J.s, J.s = 1, E = q(V, J, 0, 3), J.s = j, E.s *= j) : E = q(V, J, 0, g), J = V.minus(E.times(J)), !J.c[0] && g == 1 && (J.s = V.s), J);
      }, G.multipliedBy = G.times = function(J, _) {
        var E, j, V, n7, K, B, D, W, e7, o7, a7, s7, u7, m7, p7, l7 = this, y7 = l7.c, x7 = (J = new Y(J, _)).c;
        if (!y7 || !x7 || !y7[0] || !x7[0])
          return !l7.s || !J.s || y7 && !y7[0] && !x7 || x7 && !x7[0] && !y7 ? J.c = J.e = J.s = null : (J.s *= l7.s, !y7 || !x7 ? J.c = J.e = null : (J.c = [0], J.e = 0)), J;
        for (j = k(l7.e / b) + k(J.e / b), J.s *= l7.s, D = y7.length, o7 = x7.length, D < o7 && (u7 = y7, y7 = x7, x7 = u7, V = D, D = o7, o7 = V), V = D + o7, u7 = []; V--; u7.push(0))
          ;
        for (m7 = s, p7 = m, V = o7; --V >= 0; ) {
          for (E = 0, a7 = x7[V] % p7, s7 = x7[V] / p7 | 0, K = D, n7 = V + K; n7 > V; )
            W = y7[--K] % p7, e7 = y7[K] / p7 | 0, B = s7 * W + e7 * a7, W = a7 * W + B % p7 * p7 + u7[n7] + E, E = (W / m7 | 0) + (B / p7 | 0) + s7 * e7, u7[n7--] = W % m7;
          u7[n7] = E;
        }
        return E ? ++j : u7.splice(0, 1), $(J, u7, j);
      }, G.negated = function() {
        var J = new Y(this);
        return J.s = -J.s || null, J;
      }, G.plus = function(J, _) {
        var E, j = this, V = j.s;
        if (J = new Y(J, _), _ = J.s, !V || !_)
          return new Y(NaN);
        if (V != _)
          return J.s = -_, j.minus(J);
        var n7 = j.e / b, K = J.e / b, B = j.c, D = J.c;
        if (!n7 || !K) {
          if (!B || !D)
            return new Y(V / 0);
          if (!B[0] || !D[0])
            return D[0] ? J : new Y(B[0] ? j : V * 0);
        }
        if (n7 = k(n7), K = k(K), B = B.slice(), V = n7 - K) {
          for (V > 0 ? (K = n7, E = D) : (V = -V, E = B), E.reverse(); V--; E.push(0))
            ;
          E.reverse();
        }
        for (V = B.length, _ = D.length, V - _ < 0 && (E = D, D = B, B = E, _ = V), V = 0; _; )
          V = (B[--_] = B[_] + D[_] + V) / s | 0, B[_] = s === B[_] ? 0 : B[_] % s;
        return V && (B = [V].concat(B), ++K), $(J, B, K);
      }, G.precision = G.sd = function(J, _) {
        var E, j, V, n7 = this;
        if (J != null && J !== !!J)
          return R(J, 1, x), _ == null ? _ = p : R(_, 0, 8), X(new Y(n7), J, _);
        if (!(E = n7.c))
          return null;
        if (V = E.length - 1, j = V * b + 1, V = E[V]) {
          for (; V % 10 == 0; V /= 10, j--)
            ;
          for (V = E[0]; V >= 10; V /= 10, j++)
            ;
        }
        return J && n7.e + 1 > j && (j = n7.e + 1), j;
      }, G.shiftedBy = function(J) {
        return R(J, -l, l), this.times("1e" + J);
      }, G.squareRoot = G.sqrt = function() {
        var J, _, E, j, V, n7 = this, K = n7.c, B = n7.s, D = n7.e, W = u + 4, e7 = new Y("0.5");
        if (B !== 1 || !K || !K[0])
          return new Y(!B || B < 0 && (!K || K[0]) ? NaN : K ? n7 : 1 / 0);
        if (B = Math.sqrt(+i7(n7)), B == 0 || B == 1 / 0 ? (_ = P(K), (_.length + D) % 2 == 0 && (_ += "0"), B = Math.sqrt(+_), D = k((D + 1) / 2) - (D < 0 || D % 2), B == 1 / 0 ? _ = "5e" + D : (_ = B.toExponential(), _ = _.slice(0, _.indexOf("e") + 1) + D), E = new Y(_)) : E = new Y(B + ""), E.c[0]) {
          for (D = E.e, B = D + W, B < 3 && (B = 0); ; )
            if (V = E, E = e7.times(V.plus(q(n7, V, W, 1))), P(V.c).slice(0, B) === (_ = P(E.c)).slice(0, B))
              if (E.e < D && --B, _ = _.slice(B - 3, B + 1), _ == "9999" || !j && _ == "4999") {
                if (!j && (X(V, V.e + u + 2, 0), V.times(V).eq(n7))) {
                  E = V;
                  break;
                }
                W += 4, B += 4, j = 1;
              } else {
                (!+_ || !+_.slice(1) && _.charAt(0) == "5") && (X(E, E.e + u + 2, 1), J = !E.times(E).eq(n7));
                break;
              }
        }
        return X(E, E.e + u + 1, p, J);
      }, G.toExponential = function(J, _) {
        return J != null && (R(J, 0, x), J++), t7(this, J, _, 1);
      }, G.toFixed = function(J, _) {
        return J != null && (R(J, 0, x), J = J + this.e + 1), t7(this, J, _);
      }, G.toFormat = function(J, _, E) {
        var j, V = this;
        if (E == null)
          J != null && _ && typeof _ == "object" ? (E = _, _ = null) : J && typeof J == "object" ? (E = J, J = _ = null) : E = A;
        else if (typeof E != "object")
          throw Error(n + "Argument not an object: " + E);
        if (j = V.toFixed(J, _), V.c) {
          var n7, K = j.split("."), B = +E.groupSize, D = +E.secondaryGroupSize, W = E.groupSeparator || "", e7 = K[0], o7 = K[1], a7 = V.s < 0, s7 = a7 ? e7.slice(1) : e7, u7 = s7.length;
          if (D && (n7 = B, B = D, D = n7, u7 -= n7), B > 0 && u7 > 0) {
            for (n7 = u7 % B || B, e7 = s7.substr(0, n7); n7 < u7; n7 += B)
              e7 += W + s7.substr(n7, B);
            D > 0 && (e7 += W + s7.slice(n7)), a7 && (e7 = "-" + e7);
          }
          j = o7 ? e7 + (E.decimalSeparator || "") + ((D = +E.fractionGroupSize) ? o7.replace(
            new RegExp("\\d{" + D + "}\\B", "g"),
            "$&" + (E.fractionGroupSeparator || "")
          ) : o7) : e7;
        }
        return (E.prefix || "") + j + (E.suffix || "");
      }, G.toFraction = function(J) {
        var _, E, j, V, n7, K, B, D, W, e7, o7, a7, s7 = this, u7 = s7.c;
        if (J != null && (B = new Y(J), !B.isInteger() && (B.c || B.s !== 1) || B.lt(O)))
          throw Error(n + "Argument " + (B.isInteger() ? "out of range: " : "not an integer: ") + i7(B));
        if (!u7)
          return new Y(s7);
        for (_ = new Y(O), W = E = new Y(O), j = D = new Y(O), a7 = P(u7), n7 = _.e = a7.length - s7.e - 1, _.c[0] = v[(K = n7 % b) < 0 ? b + K : K], J = !J || B.comparedTo(_) > 0 ? n7 > 0 ? _ : W : B, K = S, S = 1 / 0, B = new Y(a7), D.c[0] = 0; e7 = q(B, _, 0, 1), V = E.plus(e7.times(j)), V.comparedTo(J) != 1; )
          E = j, j = V, W = D.plus(e7.times(V = W)), D = V, _ = B.minus(e7.times(V = _)), B = V;
        return V = q(J.minus(E), j, 0, 1), D = D.plus(V.times(W)), E = E.plus(V.times(j)), D.s = W.s = s7.s, n7 = n7 * 2, o7 = q(W, j, n7, p).minus(s7).abs().comparedTo(
          q(D, E, n7, p).minus(s7).abs()
        ) < 1 ? [W, j] : [D, E], S = K, o7;
      }, G.toNumber = function() {
        return +i7(this);
      }, G.toPrecision = function(J, _) {
        return J != null && R(J, 1, x), t7(this, J, _, 2);
      }, G.toString = function(J) {
        var _, E = this, j = E.s, V = E.e;
        return V === null ? j ? (_ = "Infinity", j < 0 && (_ = "-" + _)) : _ = "NaN" : (J == null ? _ = V <= d || V >= c ? C(P(E.c), V) : L(P(E.c), V, "0") : J === 10 && N ? (E = X(new Y(E), u + V + 1, p), _ = L(P(E.c), E.e, "0")) : (R(J, 2, h.length, "Base"), _ = Z(L(P(E.c), V, "0"), 10, J, j, !0)), j < 0 && E.c[0] && (_ = "-" + _)), _;
      }, G.valueOf = G.toJSON = function() {
        return i7(this);
      }, G._isBigNumber = !0, U != null && Y.set(U), Y;
    }
    function k(U) {
      var q = U | 0;
      return U > 0 || U === q ? q : q - 1;
    }
    function P(U) {
      for (var q, Z, z = 1, G = U.length, O = U[0] + ""; z < G; ) {
        for (q = U[z++] + "", Z = b - q.length; Z--; q = "0" + q)
          ;
        O += q;
      }
      for (G = O.length; O.charCodeAt(--G) === 48; )
        ;
      return O.slice(0, G + 1 || 1);
    }
    function M(U, q) {
      var Z, z, G = U.c, O = q.c, u = U.s, p = q.s, d = U.e, c = q.e;
      if (!u || !p)
        return null;
      if (Z = G && !G[0], z = O && !O[0], Z || z)
        return Z ? z ? 0 : -p : u;
      if (u != p)
        return u;
      if (Z = u < 0, z = d == c, !G || !O)
        return z ? 0 : !G ^ Z ? 1 : -1;
      if (!z)
        return d > c ^ Z ? 1 : -1;
      for (p = (d = G.length) < (c = O.length) ? d : c, u = 0; u < p; u++)
        if (G[u] != O[u])
          return G[u] > O[u] ^ Z ? 1 : -1;
      return d == c ? 0 : d > c ^ Z ? 1 : -1;
    }
    function R(U, q, Z, z) {
      if (U < q || U > Z || U !== i(U))
        throw Error(n + (z || "Argument") + (typeof U == "number" ? U < q || U > Z ? " out of range: " : " not an integer: " : " not a primitive number: ") + String(U));
    }
    function F(U) {
      var q = U.c.length - 1;
      return k(U.e / b) == q && U.c[q] % 2 != 0;
    }
    function C(U, q) {
      return (U.length > 1 ? U.charAt(0) + "." + U.slice(1) : U) + (q < 0 ? "e" : "e+") + q;
    }
    function L(U, q, Z) {
      var z, G;
      if (q < 0) {
        for (G = Z + "."; ++q; G += Z)
          ;
        U = G + U;
      } else if (z = U.length, ++q > z) {
        for (G = Z, q -= z; --q; G += Z)
          ;
        U += G;
      } else
        q < z && (U = U.slice(0, q) + "." + U.slice(q));
      return U;
    }
    a = I(), a.default = a.BigNumber = a, e.exports ? e.exports = a : (t || (t = typeof self < "u" && self ? self : window), t.BigNumber = a);
  })(I7);
})(yy);
var gy = yy.exports;
(function(e) {
  var t = gy, a = e.exports;
  (function() {
    var r = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g, f, i, n = {
      // table of character substitutions
      "\b": "\\b",
      "	": "\\t",
      "\n": "\\n",
      "\f": "\\f",
      "\r": "\\r",
      '"': '\\"',
      "\\": "\\\\"
    }, o;
    function s(l) {
      return r.lastIndex = 0, r.test(l) ? '"' + l.replace(r, function(v) {
        var m = n[v];
        return typeof m == "string" ? m : "\\u" + ("0000" + v.charCodeAt(0).toString(16)).slice(-4);
      }) + '"' : '"' + l + '"';
    }
    function b(l, v) {
      var m, x, I, k, P = f, M, R = v[l], F = R != null && (R instanceof t || t.isBigNumber(R));
      switch (R && typeof R == "object" && typeof R.toJSON == "function" && (R = R.toJSON(l)), typeof o == "function" && (R = o.call(v, l, R)), typeof R) {
        case "string":
          return F ? R : s(R);
        case "number":
          return isFinite(R) ? String(R) : "null";
        case "boolean":
        case "null":
        case "bigint":
          return String(R);
        case "object":
          if (!R)
            return "null";
          if (f += i, M = [], Object.prototype.toString.apply(R) === "[object Array]") {
            for (k = R.length, m = 0; m < k; m += 1)
              M[m] = b(m, R) || "null";
            return I = M.length === 0 ? "[]" : f ? `[
` + f + M.join(`,
` + f) + `
` + P + "]" : "[" + M.join(",") + "]", f = P, I;
          }
          if (o && typeof o == "object")
            for (k = o.length, m = 0; m < k; m += 1)
              typeof o[m] == "string" && (x = o[m], I = b(x, R), I && M.push(s(x) + (f ? ": " : ":") + I));
          else
            Object.keys(R).forEach(function(C) {
              var L = b(C, R);
              L && M.push(s(C) + (f ? ": " : ":") + L);
            });
          return I = M.length === 0 ? "{}" : f ? `{
` + f + M.join(`,
` + f) + `
` + P + "}" : "{" + M.join(",") + "}", f = P, I;
      }
    }
    typeof a.stringify != "function" && (a.stringify = function(l, v, m) {
      var x;
      if (f = "", i = "", typeof m == "number")
        for (x = 0; x < m; x += 1)
          i += " ";
      else
        typeof m == "string" && (i = m);
      if (o = v, v && typeof v != "function" && (typeof v != "object" || typeof v.length != "number"))
        throw new Error("JSON.stringify");
      return b("", { "": l });
    });
  })();
})(vy);
var PN = vy.exports;
const W4 = gy, MN = /(?:_|\\u005[Ff])(?:_|\\u005[Ff])(?:p|\\u0070)(?:r|\\u0072)(?:o|\\u006[Ff])(?:t|\\u0074)(?:o|\\u006[Ff])(?:_|\\u005[Ff])(?:_|\\u005[Ff])/, RN = /(?:c|\\u0063)(?:o|\\u006[Ff])(?:n|\\u006[Ee])(?:s|\\u0073)(?:t|\\u0074)(?:r|\\u0072)(?:u|\\u0075)(?:c|\\u0063)(?:t|\\u0074)(?:o|\\u006[Ff])(?:r|\\u0072)/;
var BN = function(e) {
  var t = {
    strict: !1,
    // not being strict means do not generate syntax errors for "duplicate key"
    storeAsString: !1,
    // toggles whether the values should be stored as BigNumber (default) or a string
    alwaysParseAsBig: !1,
    // toggles whether all numbers should be Big
    useNativeBigInt: !1,
    // toggles whether to use native BigInt instead of bignumber.js
    protoAction: "error",
    constructorAction: "error"
  };
  if (e != null) {
    if (e.strict === !0 && (t.strict = !0), e.storeAsString === !0 && (t.storeAsString = !0), t.alwaysParseAsBig = e.alwaysParseAsBig === !0 ? e.alwaysParseAsBig : !1, t.useNativeBigInt = e.useNativeBigInt === !0 ? e.useNativeBigInt : !1, typeof e.constructorAction < "u")
      if (e.constructorAction === "error" || e.constructorAction === "ignore" || e.constructorAction === "preserve")
        t.constructorAction = e.constructorAction;
      else
        throw new Error(
          `Incorrect value for constructorAction option, must be "error", "ignore" or undefined but passed ${e.constructorAction}`
        );
    if (typeof e.protoAction < "u")
      if (e.protoAction === "error" || e.protoAction === "ignore" || e.protoAction === "preserve")
        t.protoAction = e.protoAction;
      else
        throw new Error(
          `Incorrect value for protoAction option, must be "error", "ignore" or undefined but passed ${e.protoAction}`
        );
  }
  var a, r, f = {
    '"': '"',
    "\\": "\\",
    "/": "/",
    b: "\b",
    f: "\f",
    n: `
`,
    r: "\r",
    t: "	"
  }, i, n = function(k) {
    throw {
      name: "SyntaxError",
      message: k,
      at: a,
      text: i
    };
  }, o = function(k) {
    return k && k !== r && n("Expected '" + k + "' instead of '" + r + "'"), r = i.charAt(a), a += 1, r;
  }, s = function() {
    var k, P = "";
    for (r === "-" && (P = "-", o("-")); r >= "0" && r <= "9"; )
      P += r, o();
    if (r === ".")
      for (P += "."; o() && r >= "0" && r <= "9"; )
        P += r;
    if (r === "e" || r === "E")
      for (P += r, o(), (r === "-" || r === "+") && (P += r, o()); r >= "0" && r <= "9"; )
        P += r, o();
    return k = +P, P.length > 15 ? t.storeAsString ? P : t.useNativeBigInt ? BigInt(P) : new W4.default(P) : t.alwaysParseAsBig ? t.useNativeBigInt ? BigInt(k) : new W4.default(k) : k;
  }, b = function() {
    var k, P, M = "", R;
    if (r === '"')
      for (var F = a; o(); ) {
        if (r === '"')
          return a - 1 > F && (M += i.substring(F, a - 1)), o(), M;
        if (r === "\\") {
          if (a - 1 > F && (M += i.substring(F, a - 1)), o(), r === "u") {
            for (R = 0, P = 0; P < 4 && (k = parseInt(o(), 16), !!isFinite(k)); P += 1)
              R = R * 16 + k;
            M += String.fromCharCode(R);
          } else if (typeof f[r] == "string")
            M += f[r];
          else
            break;
          F = a;
        }
      }
    n("Bad string");
  }, l = function() {
    for (; r && r <= " "; )
      o();
  }, v = function() {
    switch (r) {
      case "t":
        return o("t"), o("r"), o("u"), o("e"), !0;
      case "f":
        return o("f"), o("a"), o("l"), o("s"), o("e"), !1;
      case "n":
        return o("n"), o("u"), o("l"), o("l"), null;
    }
    n("Unexpected '" + r + "'");
  }, m, x = function() {
    var k = [];
    if (r === "[") {
      if (o("["), l(), r === "]")
        return o("]"), k;
      for (; r; ) {
        if (k.push(m()), l(), r === "]")
          return o("]"), k;
        o(","), l();
      }
    }
    n("Bad array");
  }, I = function() {
    var k, P = /* @__PURE__ */ Object.create(null);
    if (r === "{") {
      if (o("{"), l(), r === "}")
        return o("}"), P;
      for (; r; ) {
        if (k = b(), l(), o(":"), t.strict === !0 && Object.hasOwnProperty.call(P, k) && n('Duplicate key "' + k + '"'), MN.test(k) === !0 ? t.protoAction === "error" ? n("Object contains forbidden prototype property") : t.protoAction === "ignore" ? m() : P[k] = m() : RN.test(k) === !0 ? t.constructorAction === "error" ? n("Object contains forbidden constructor property") : t.constructorAction === "ignore" ? m() : P[k] = m() : P[k] = m(), l(), r === "}")
          return o("}"), P;
        o(","), l();
      }
    }
    n("Bad object");
  };
  return m = function() {
    switch (l(), r) {
      case "{":
        return I();
      case "[":
        return x();
      case '"':
        return b();
      case "-":
        return s();
      default:
        return r >= "0" && r <= "9" ? s() : v();
    }
  }, function(k, P) {
    var M;
    return i = k + "", a = 0, r = " ", M = m(), l(), r && n("Syntax error"), typeof P == "function" ? function R(F, C) {
      var L, U = F[C];
      return U && typeof U == "object" && Object.keys(U).forEach(function(q) {
        L = R(U, q), L !== void 0 ? U[q] = L : delete U[q];
      }), P.call(F, C, U);
    }({ "": M }, "") : M;
  };
}, NN = BN, xy = PN.stringify, _y = NN;
Vi.exports = function(e) {
  return {
    parse: _y(e),
    stringify: xy
  };
};
Vi.exports.parse = _y();
Vi.exports.stringify = xy;
var CN = Vi.exports, Z4;
function zi() {
  return Z4 || (Z4 = 1, function(e) {
    var t = I7 && I7.__assign || function() {
      return t = Object.assign || function(B) {
        for (var D, W = 1, e7 = arguments.length; W < e7; W++) {
          D = arguments[W];
          for (var o7 in D)
            Object.prototype.hasOwnProperty.call(D, o7) && (B[o7] = D[o7]);
        }
        return B;
      }, t.apply(this, arguments);
    }, a = I7 && I7.__awaiter || function(B, D, W, e7) {
      function o7(a7) {
        return a7 instanceof W ? a7 : new W(function(s7) {
          s7(a7);
        });
      }
      return new (W || (W = Promise))(function(a7, s7) {
        function u7(l7) {
          try {
            p7(e7.next(l7));
          } catch (y7) {
            s7(y7);
          }
        }
        function m7(l7) {
          try {
            p7(e7.throw(l7));
          } catch (y7) {
            s7(y7);
          }
        }
        function p7(l7) {
          l7.done ? a7(l7.value) : o7(l7.value).then(u7, m7);
        }
        p7((e7 = e7.apply(B, D || [])).next());
      });
    }, r = I7 && I7.__generator || function(B, D) {
      var W = { label: 0, sent: function() {
        if (a7[0] & 1)
          throw a7[1];
        return a7[1];
      }, trys: [], ops: [] }, e7, o7, a7, s7;
      return s7 = { next: u7(0), throw: u7(1), return: u7(2) }, typeof Symbol == "function" && (s7[Symbol.iterator] = function() {
        return this;
      }), s7;
      function u7(p7) {
        return function(l7) {
          return m7([p7, l7]);
        };
      }
      function m7(p7) {
        if (e7)
          throw new TypeError("Generator is already executing.");
        for (; W; )
          try {
            if (e7 = 1, o7 && (a7 = p7[0] & 2 ? o7.return : p7[0] ? o7.throw || ((a7 = o7.return) && a7.call(o7), 0) : o7.next) && !(a7 = a7.call(o7, p7[1])).done)
              return a7;
            switch (o7 = 0, a7 && (p7 = [p7[0] & 2, a7.value]), p7[0]) {
              case 0:
              case 1:
                a7 = p7;
                break;
              case 4:
                return W.label++, { value: p7[1], done: !1 };
              case 5:
                W.label++, o7 = p7[1], p7 = [0];
                continue;
              case 7:
                p7 = W.ops.pop(), W.trys.pop();
                continue;
              default:
                if (a7 = W.trys, !(a7 = a7.length > 0 && a7[a7.length - 1]) && (p7[0] === 6 || p7[0] === 2)) {
                  W = 0;
                  continue;
                }
                if (p7[0] === 3 && (!a7 || p7[1] > a7[0] && p7[1] < a7[3])) {
                  W.label = p7[1];
                  break;
                }
                if (p7[0] === 6 && W.label < a7[1]) {
                  W.label = a7[1], a7 = p7;
                  break;
                }
                if (a7 && W.label < a7[2]) {
                  W.label = a7[2], W.ops.push(p7);
                  break;
                }
                a7[2] && W.ops.pop(), W.trys.pop();
                continue;
            }
            p7 = D.call(B, W);
          } catch (l7) {
            p7 = [6, l7], o7 = 0;
          } finally {
            e7 = a7 = 0;
          }
        if (p7[0] & 5)
          throw p7[1];
        return { value: p7[0] ? p7[1] : void 0, done: !0 };
      }
    }, f = I7 && I7.__read || function(B, D) {
      var W = typeof Symbol == "function" && B[Symbol.iterator];
      if (!W)
        return B;
      var e7 = W.call(B), o7, a7 = [], s7;
      try {
        for (; (D === void 0 || D-- > 0) && !(o7 = e7.next()).done; )
          a7.push(o7.value);
      } catch (u7) {
        s7 = { error: u7 };
      } finally {
        try {
          o7 && !o7.done && (W = e7.return) && W.call(e7);
        } finally {
          if (s7)
            throw s7.error;
        }
      }
      return a7;
    }, i = I7 && I7.__spread || function() {
      for (var B = [], D = 0; D < arguments.length; D++)
        B = B.concat(f(arguments[D]));
      return B;
    };
    Object.defineProperty(e, "__esModule", { value: !0 }), e.loadSourceMapfromDesc = e.getStaticDeclaration = e.getAliasDeclaration = e.getContractDeclaration = e.getLibraryDeclaration = e.getStructDeclaration = e.getABIDeclaration = e.getContractName = e.getFullFilePath = e.compilerVersion = e.handleCompilerOutput = e.compile = e.settings2cmd = e.compileAsync = e.doCompileAsync = e.ABIEntityType = e.DebugModeTag = e.CompileResult = e.BuildType = e.CompileErrorType = e.SOURCE_REG = void 0;
    var n = Et, o = Zt, s = Zt, b = gN, l = AN, v = CN, m = A5(), x = /(?<filePath>[^\s]+):(?<line>\d+):(?<column>\d+):\n([^\n]+\n){3}(unexpected (?<unexpected>[^\n]+)\nexpecting (?<expecting>[^\n]+)|(?<message>[^\n]+))/g, I = /Error:(\s|\n)*(?<filePath>[^\s]+):(?<line>\d+):(?<column>\d+):(?<line1>\d+):(?<column1>\d+):*\n(?<message>[^\n]+)\n/g, k = /Internal error:(?<message>.+)/, P = /Warning:(\s|\n)*(?<filePath>[^\s]+):(?<line>\d+):(?<column>\d+):(?<line1>\d+):(?<column1>\d+):*\n(?<message>[^\n]+)\n/g, M = v({ alwaysParseAsBig: !0, constructorAction: "preserve" });
    e.SOURCE_REG = /^(?<fileIndex>-?\d+):(?<line>\d+):(?<col>\d+):(?<endLine>\d+):(?<endCol>\d+)(#(?<tagStr>.+))?/;
    var R = /(?<filePath>[^\s]+):(?<line>\d+):(?<column>\d+):(?<line1>\d+):(?<column1>\d+)/gi, F;
    (function(B) {
      B.SyntaxError = "SyntaxError", B.SemanticError = "SemanticError", B.InternalError = "InternalError", B.Warning = "Warning";
    })(F = e.CompileErrorType || (e.CompileErrorType = {}));
    var C;
    (function(B) {
      B.Debug = "debug", B.Release = "release";
    })(C = e.BuildType || (e.BuildType = {}));
    var L = (
      /** @class */
      function() {
        function B(D, W) {
          this.errors = D, this.warnings = W;
        }
        return B.prototype.toDesc = function() {
          var D = {
            version: m.CURRENT_CONTRACT_DESCRIPTION_VERSION,
            compilerVersion: this.compilerVersion || "0.0.0",
            contract: this.contract || "",
            md5: this.md5 || "",
            structs: this.structs || [],
            library: this.library || [],
            alias: this.alias || [],
            abi: this.abi || [],
            stateProps: this.stateProps || [],
            buildType: this.buildType || C.Debug,
            file: this.file || "",
            hex: this.hex || "",
            asm: "",
            sourceMap: [],
            sources: [],
            sourceMapFile: this.sourceMapFile || ""
          };
          return D;
        }, B;
      }()
    );
    e.CompileResult = L;
    var U;
    (function(B) {
      B.FuncStart = "F0", B.FuncEnd = "F1", B.LoopStart = "L0";
    })(U = e.DebugModeTag || (e.DebugModeTag = {}));
    var q;
    (function(B) {
      B.FUNCTION = "function", B.CONSTRUCTOR = "constructor";
    })(q = e.ABIEntityType || (e.ABIEntityType = {}));
    function Z(B, D) {
      return n.join(B, n.basename(D) + "-" + m.hash160(D, "utf-8").substring(0, 10));
    }
    function z(B, D, W) {
      var e7 = B.path, o7 = n.dirname(e7), a7 = D.cwd || o7, s7 = D.timeout || 12e5, u7 = B.content !== void 0 ? B.content : s.readFileSync(e7, "utf8"), m7 = u(e7, D), p7 = o.exec(m7, { cwd: a7, timeout: s7, killSignal: "SIGKILL" }, function(l7, y7) {
        if (l7) {
          console.error("exec error: " + l7), W(l7, null);
          return;
        }
        W(null, {
          path: e7,
          output: y7,
          md5: b.default(u7)
        });
      });
      return p7.stdin.write(u7, function(l7) {
        if (l7) {
          W(l7, null);
          return;
        }
        p7.stdin.end();
      }), p7;
    }
    e.doCompileAsync = z;
    function G(B, D) {
      var W = this;
      return D = Object.assign({}, O, D), new Promise(function(e7, o7) {
        z(B, D, function(a7, s7) {
          return a(W, void 0, void 0, function() {
            var u7;
            return r(this, function(m7) {
              if (a7)
                return o7(a7), [
                  2
                  /*return*/
                ];
              try {
                u7 = d(B.path, D, s7.output, s7.md5), e7(u7);
              } catch (p7) {
                o7(p7);
              }
              return [
                2
                /*return*/
              ];
            });
          });
        });
      });
    }
    e.compileAsync = G;
    var O = {
      ast: !0,
      asm: !1,
      hex: !0,
      debug: !1,
      desc: !1,
      outputDir: "",
      outputToFiles: !1,
      cwd: "",
      cmdPrefix: "",
      cmdArgs: "",
      buildType: C.Debug,
      stdout: !1,
      sourceMap: !1,
      timeout: 12e5
    };
    function u(B, D) {
      var W = n.dirname(B), e7 = D.outputDir || W, o7 = Z(e7, B), a7 = D.cmdPrefix || m.findCompiler(), s7 = '-o "' + o7 + '"';
      return D.stdout ? (s7 = "--stdout", a7 + " compile " + (D.asm || D.desc ? "--asm" : "") + " " + (D.hex ? "--hex" : "") + " " + (D.ast || D.desc ? "--ast" : "") + " " + (D.debug == !0 ? "--debug" : "") + " -r " + s7 + " " + (D.cmdArgs ? D.cmdArgs : "")) : (s.existsSync(o7) || s.mkdirSync(o7), a7 + " compile " + (D.hex ? "--hex" : "") + " " + (D.ast || D.desc ? "--ast" : "") + " " + (D.debug == !0 ? "--debug" : "--optimize") + " " + (D.sourceMap == !0 ? "--source-map" : "") + " -r " + s7 + " " + (D.cmdArgs ? D.cmdArgs : ""));
    }
    e.settings2cmd = u;
    function p(B, D) {
      var W = B.path, e7 = n.dirname(W), o7 = D.cwd || e7;
      D = Object.assign({}, O, D);
      var a7 = B.content !== void 0 ? B.content : s.readFileSync(W, "utf8"), s7 = D.stdout ? 1024 * 1024 * 100 : 1024 * 1024;
      D = Object.assign({}, O, D);
      var u7 = u(W, D), m7 = o.execSync(u7, {
        input: a7,
        cwd: o7,
        timeout: D.timeout,
        maxBuffer: s7
      }).toString();
      return d(W, D, m7, b.default(a7));
    }
    e.compile = p;
    function d(B, D, W, e7) {
      var o7 = n.dirname(B), a7 = n.basename(B), s7 = D.outputDir || o7, u7 = Z(s7, B), m7 = {};
      try {
        W = W.split(/\r?\n/g).join(`
`);
        var p7 = new L([], []);
        if (p7.compilerVersion = c(D.cmdPrefix ? D.cmdPrefix : m.findCompiler()), p7.md5 = e7, (W.startsWith("Error:") || W.startsWith("Warning:")) && (Object.assign(p7, E(W, o7, a7)), p7.errors.length > 0 || D.stdout && p7.warnings.length > 0))
          return p7;
        if (D.stdout) {
          var l7 = M.parse(W);
          j(p7, l7.ast, o7, a7, B), V(p7, l7.asm, D, o7, a7);
        } else {
          if (D.ast || D.desc) {
            var y7 = T(u7, "ast"), x7 = y7.replace("stdin", n.basename(B, ".scrypt"));
            s.renameSync(y7, x7), m7.ast = x7;
            var _7 = M.parse(s.readFileSync(x7, "utf8"));
            j(p7, _7, o7, a7, B);
          }
          if (D.hex || D.desc) {
            var y7 = T(u7, "hex"), F7 = y7.replace("stdin", n.basename(B, ".scrypt"));
            s.renameSync(y7, F7), m7.hex = F7, p7.hex = s.readFileSync(F7, "utf8");
          }
          if (D.sourceMap) {
            var y7 = T(u7, "map");
            if (D.desc) {
              var T7 = T(s7, "map"), S7 = T7.replace("stdin", n.basename(B, ".scrypt"));
              s.renameSync(y7, S7), p7.sourceMapFile = m.path2uri(S7);
            } else {
              var S7 = y7.replace("stdin", n.basename(B, ".scrypt"));
              s.renameSync(y7, S7), m7.map = S7, p7.sourceMapFile = m.path2uri(S7);
            }
          }
          if (D.debug) {
            var y7 = T(u7, "dbg"), Y7 = y7.replace("stdin", n.basename(B, ".scrypt"));
            s.renameSync(y7, Y7), p7.dbgFile = m.path2uri(Y7);
          }
          if (D.desc) {
            var y7 = T(s7, "desc"), k7 = y7.replace("stdin", n.basename(B, ".scrypt")), E7 = p7.toDesc();
            s.writeFileSync(k7, JSON.stringify(E7, function(H7, P7) {
              if (!(H7 == "sources" || H7 == "sourceMap" || H7 === "asm"))
                return P7;
            }, 4));
          }
        }
        return p7;
      } finally {
        n7(D, m7, u7);
      }
    }
    e.handleCompilerOutput = d;
    function c(B) {
      try {
        var D = o.execSync(B + " version").toString();
        return /Version:\s*([^\s]+)\s*/.exec(D)[1];
      } catch {
        throw new Error("compilerVersion fail when run: " + B + " version");
      }
    }
    e.compilerVersion = c;
    function y(B, D, W) {
      for (var e7 in B)
        if (e7 === "std")
          B.std = S(B.std, "std");
        else {
          var o7 = e7 === "stdin" ? W : e7, a7 = m.path2uri(n.join(D, o7));
          B[a7] = S(B[e7], a7), delete B[e7];
        }
      return B;
    }
    function S(B, D) {
      if (typeof B != "object")
        return B;
      for (var W in B) {
        var e7 = B[W];
        if (W === "src") {
          var o7 = /:(\d+):(\d+):(\d+):(\d+)/.exec(e7);
          o7 ? B.loc = {
            source: D,
            start: { line: parseInt(o7[1]), column: parseInt(o7[2]) },
            end: { line: parseInt(o7[3]), column: parseInt(o7[4]) }
          } : B.loc = null, delete B.src;
        } else
          typeof e7 == "object" && S(e7, D);
      }
      return B;
    }
    function T(B, D) {
      return D == "hex" ? n.join(B, "stdin_" + D + ".txt") : D === "map" || D === "dbg" ? n.join(B, "stdin." + D + ".json") : n.join(B, "stdin_" + D + ".json");
    }
    function g(B, D, W) {
      return B.endsWith("stdin") ? n.join(D, W) : B === "std" ? "std" : n.join(D, B);
    }
    e.getFullFilePath = g;
    function w(B) {
      if (B.constructor)
        return {
          type: q.CONSTRUCTOR,
          params: B.constructor.params.map(function(D) {
            return { name: D.name, type: D.type };
          })
        };
      if (B.properties)
        return {
          type: q.CONSTRUCTOR,
          params: B.properties.map(function(D) {
            return { name: D.name.replace("this.", ""), type: D.type };
          })
        };
    }
    function A(B) {
      var D = B.contracts[B.contracts.length - 1];
      return D && D.properties ? D.properties.filter(function(W) {
        return W.state;
      }).map(function(W) {
        return { name: W.name.replace("this.", ""), type: W.type };
      }) : [];
    }
    function h(B) {
      var D = 0, W = B.functions.filter(function(e7) {
        return e7.visibility === "Public";
      }).map(function(e7) {
        var o7 = {
          type: q.FUNCTION,
          name: e7.name,
          index: e7.nodeType === "Constructor" ? void 0 : D++,
          params: e7.params.map(function(a7) {
            return { name: a7.name, type: a7.type };
          })
        };
        return o7;
      });
      return W;
    }
    function N(B) {
      var D = B.contracts[B.contracts.length - 1];
      return D && D.name || "";
    }
    e.getContractName = N;
    function Y(B) {
      var D = B.match(/__SCRYPT_(\w+)__/);
      return D ? D[1] : B;
    }
    function t7(B, D) {
      var W = B.contracts[B.contracts.length - 1];
      if (!W)
        return {
          contract: "",
          abi: []
        };
      var e7 = h(W), o7 = w(W);
      return e7.push(o7), e7.forEach(function(a7) {
        a7.params = a7.params.map(function(s7) {
          return Object.assign(s7, {
            type: D(s7.type).finalType
          });
        });
      }), {
        contract: N(B),
        abi: e7
      };
    }
    e.getABIDeclaration = t7;
    function H(B, D) {
      var W = [B];
      return Object.keys(D).forEach(function(e7) {
        W.push(D[e7]);
      }), W.map(function(e7) {
        return (e7.structs || []).map(function(o7) {
          return {
            name: o7.name,
            params: o7.fields.map(function(a7) {
              return { name: a7.name, type: a7.type };
            }),
            genericTypes: o7.genericTypes || []
          };
        });
      }).flat(1);
    }
    e.getStructDeclaration = H;
    function $(B, D) {
      var W = [B];
      return Object.keys(D).forEach(function(e7) {
        e7 !== "std" && W.push(D[e7]);
      }), W.map(function(e7) {
        return (e7.contracts || []).filter(function(o7) {
          return o7.nodeType == "Library";
        }).map(function(o7) {
          if (o7.constructor)
            return {
              name: o7.name,
              params: o7.constructor.params.map(function(a7) {
                return { name: "ctor." + a7.name, type: a7.type };
              }),
              properties: o7.properties.map(function(a7) {
                return { name: a7.name, type: a7.type };
              }),
              genericTypes: o7.genericTypes || []
            };
          if (o7.properties)
            return {
              name: o7.name,
              params: o7.properties.map(function(a7) {
                return { name: a7.name, type: a7.type };
              }),
              properties: o7.properties.map(function(a7) {
                return { name: a7.name, type: a7.type };
              }),
              genericTypes: o7.genericTypes || []
            };
        });
      }).flat(1);
    }
    e.getLibraryDeclaration = $;
    function X(B, D) {
      var W = [B];
      return Object.keys(D).forEach(function(e7) {
        e7 !== "std" && W.push(D[e7]);
      }), W.map(function(e7) {
        return (e7.contracts || []).filter(function(o7) {
          return o7.nodeType == "Contract";
        }).map(function(o7) {
          if (o7.constructor)
            return {
              name: o7.name,
              params: o7.constructor.params.map(function(a7) {
                return { name: "ctor." + a7.name, type: a7.type };
              }),
              properties: o7.properties.map(function(a7) {
                return { name: a7.name, type: a7.type };
              }),
              genericTypes: o7.genericTypes || []
            };
          if (o7.properties)
            return {
              name: o7.name,
              params: o7.properties.map(function(a7) {
                return { name: a7.name, type: a7.type };
              }),
              properties: o7.properties.map(function(a7) {
                return { name: a7.name, type: a7.type };
              }),
              genericTypes: o7.genericTypes || []
            };
        });
      }).flat(1);
    }
    e.getContractDeclaration = X;
    function i7(B, D) {
      var W = [B];
      return Object.keys(D).forEach(function(e7) {
        W.push(D[e7]);
      }), W.map(function(e7) {
        return (e7.alias || []).map(function(o7) {
          return {
            name: o7.alias,
            type: o7.type
          };
        });
      }).flat(1);
    }
    e.getAliasDeclaration = i7;
    function J(B, D) {
      var W = [B];
      return Object.keys(D).forEach(function(e7) {
        W.push(D[e7]);
      }), W.map(function(e7) {
        return (e7.contracts || []).map(function(o7) {
          return (o7.statics || []).map(function(a7) {
            return {
              const: a7.const,
              name: o7.name + "." + a7.name,
              type: a7.type,
              value: m.resolveConstValue(a7)
            };
          });
        });
      }).flat(1 / 0).flat(1);
    }
    e.getStaticDeclaration = J;
    function _(B, D, W) {
      for (var e7, o7, a7, s7, u7 = [], m7; m7 = R.exec(B); ) {
        var p7 = m7.groups.filePath;
        if (p7 !== "null") {
          var l7 = g(p7, D, W), y7 = parseInt(((e7 = m7.groups) === null || e7 === void 0 ? void 0 : e7.line) || "-1"), x7 = parseInt(((o7 = m7.groups) === null || o7 === void 0 ? void 0 : o7.column) || "-1");
          u7.push({
            filePath: l7,
            position: [
              {
                line: y7,
                column: x7
              },
              {
                line: parseInt(((a7 = m7.groups) === null || a7 === void 0 ? void 0 : a7.line1) || "-1"),
                column: parseInt(((s7 = m7.groups) === null || s7 === void 0 ? void 0 : s7.column1) || "-1")
              }
            ],
            message: ""
          }), B = B.replace(/([^\s]+):(\d+):(\d+):(\d+):(\d+)/, "");
        }
      }
      return {
        relatedInformation: u7,
        message: B
      };
    }
    function E(B, D, W) {
      var e7, o7 = i(B.matchAll(P)).map(function(m7) {
        var p7, l7, y7, x7, _7, F7, T7 = ((p7 = m7.groups) === null || p7 === void 0 ? void 0 : p7.filePath) || "", S7 = ((l7 = m7.groups) === null || l7 === void 0 ? void 0 : l7.message) || "", Y7 = _(S7, D, W), k7 = Y7.message, E7 = Y7.relatedInformation;
        return {
          type: F.Warning,
          filePath: g(T7, D, W),
          position: [
            {
              line: parseInt(((y7 = m7.groups) === null || y7 === void 0 ? void 0 : y7.line) || "-1"),
              column: parseInt(((x7 = m7.groups) === null || x7 === void 0 ? void 0 : x7.column) || "-1")
            },
            {
              line: parseInt(((_7 = m7.groups) === null || _7 === void 0 ? void 0 : _7.line1) || "-1"),
              column: parseInt(((F7 = m7.groups) === null || F7 === void 0 ? void 0 : F7.column1) || "-1")
            }
          ],
          message: k7,
          relatedInformation: E7
        };
      });
      if (B.match(k)) {
        var a7 = [
          {
            type: F.InternalError,
            filePath: g("stdin", D, W),
            message: "Compiler internal error: " + (((e7 = B.match(k).groups) === null || e7 === void 0 ? void 0 : e7.message) || ""),
            position: [
              {
                line: 1,
                column: 1
              },
              {
                line: 1,
                column: 1
              }
            ],
            relatedInformation: []
          }
        ];
        return new L(a7, o7);
      } else if (B.includes("Syntax error:")) {
        var s7 = i(B.matchAll(x)).map(function(m7) {
          var p7, l7, y7, x7, _7, F7, T7 = ((p7 = m7.groups) === null || p7 === void 0 ? void 0 : p7.filePath) || "", S7 = ((l7 = m7.groups) === null || l7 === void 0 ? void 0 : l7.unexpected) || "", Y7 = ((y7 = m7.groups) === null || y7 === void 0 ? void 0 : y7.expecting) || "", k7 = ((x7 = m7.groups) === null || x7 === void 0 ? void 0 : x7.message) || "unexpected " + S7 + `
expecting ` + Y7, E7 = _(k7, D, W), $7 = E7.message, H7 = E7.relatedInformation;
          return {
            type: F.SyntaxError,
            filePath: g(T7, D, W),
            position: [
              {
                line: parseInt(((_7 = m7.groups) === null || _7 === void 0 ? void 0 : _7.line) || "-1"),
                column: parseInt(((F7 = m7.groups) === null || F7 === void 0 ? void 0 : F7.column) || "-1")
              }
            ],
            message: $7,
            unexpected: S7,
            expecting: Y7,
            relatedInformation: H7
          };
        });
        return new L(s7, o7);
      } else {
        var u7 = i(B.matchAll(I)).map(function(m7) {
          var p7, l7, y7, x7, _7, F7, T7 = ((p7 = m7.groups) === null || p7 === void 0 ? void 0 : p7.message) || "", S7 = ((l7 = m7.groups) === null || l7 === void 0 ? void 0 : l7.filePath) || "", Y7 = _(T7, D, W), k7 = Y7.message, E7 = Y7.relatedInformation;
          return {
            type: F.SemanticError,
            filePath: g(S7, D, W),
            position: [
              {
                line: parseInt(((y7 = m7.groups) === null || y7 === void 0 ? void 0 : y7.line) || "-1"),
                column: parseInt(((x7 = m7.groups) === null || x7 === void 0 ? void 0 : x7.column) || "-1")
              },
              {
                line: parseInt(((_7 = m7.groups) === null || _7 === void 0 ? void 0 : _7.line1) || "-1"),
                column: parseInt(((F7 = m7.groups) === null || F7 === void 0 ? void 0 : F7.column1) || "-1")
              }
            ],
            message: k7,
            relatedInformation: E7
          };
        });
        return new L(u7, o7);
      }
    }
    function j(B, D, W, e7, o7) {
      var a7 = y(D, W, e7), s7 = m.path2uri(o7);
      B.file = s7, B.ast = a7[s7], delete a7[s7], B.dependencyAsts = a7;
      var u7 = i7(B.ast, a7), m7 = H(B.ast, a7), p7 = $(B.ast, a7), l7 = J(B.ast, a7);
      B.contracts = X(B.ast, a7);
      var y7 = m.buildTypeResolver(N(B.ast), u7, m7, p7, B.contracts, l7);
      B.alias = u7.map(function(T7) {
        return {
          name: T7.name,
          type: y7(T7.type).finalType
        };
      }), B.structs = m7.map(function(T7) {
        return {
          name: T7.name,
          params: T7.params.map(function(S7) {
            return { name: S7.name, type: y7(S7.type).finalType };
          }),
          genericTypes: T7.genericTypes.map(function(S7) {
            return Y(S7);
          })
        };
      }), B.library = p7.map(function(T7) {
        return {
          name: T7.name,
          params: T7.params.map(function(S7) {
            return { name: S7.name, type: y7(S7.type).finalType };
          }),
          properties: T7.properties.map(function(S7) {
            return { name: S7.name, type: y7(S7.type).finalType };
          }),
          genericTypes: T7.genericTypes.map(function(S7) {
            return Y(S7);
          })
        };
      }), B.statics = l7.map(function(T7) {
        return Object.assign(t({}, T7), {
          type: y7(T7.type).finalType
        });
      });
      var x7 = t7(B.ast, y7), _7 = x7.contract, F7 = x7.abi;
      B.stateProps = A(B.ast).map(function(T7) {
        return { name: T7.name, type: y7(T7.type).finalType };
      }), B.abi = F7, B.contract = _7;
    }
    function V(B, D, W, e7, o7) {
      var a7 = D.sources;
      W.debug && Object.assign(B, {
        file: B.file,
        sources: D.sources.map(function(s7) {
          return g(s7, e7, o7);
        }),
        sourceMap: D.output.map(function(s7) {
          return s7.src;
        })
      }), B.hex = W.hex ? D.output.map(function(s7) {
        return s7.hex;
      }).join("") : "", B.asm = D.output.map(function(s7) {
        if (!W.debug)
          return {
            opcode: s7.opcode
          };
        var u7 = e.SOURCE_REG.exec(s7.src);
        if (u7 && u7.groups) {
          var m7 = parseInt(u7.groups.fileIndex), p7 = void 0, l7 = u7.groups.tagStr, y7 = /^(\w+)\.(\w+):(\d)(#(?<context>.+))?$/.exec(l7);
          y7 ? p7 = {
            contract: y7[1],
            func: y7[2],
            tag: y7[3] == "0" ? U.FuncStart : U.FuncEnd,
            context: y7.groups.context
          } : /loop:0/.test(l7) && (p7 = {
            contract: "",
            func: "",
            tag: U.LoopStart,
            context: ""
          });
          var x7 = a7[m7] ? {
            file: a7[m7] ? g(a7[m7], e7, o7) : void 0,
            line: a7[m7] ? parseInt(u7.groups.line) : void 0,
            endLine: a7[m7] ? parseInt(u7.groups.endLine) : void 0,
            column: a7[m7] ? parseInt(u7.groups.col) : void 0,
            endColumn: a7[m7] ? parseInt(u7.groups.endCol) : void 0
          } : void 0;
          return {
            opcode: s7.opcode,
            stack: s7.stack,
            topVars: s7.topVars || [],
            pos: x7,
            debugInfo: p7
          };
        }
        throw new Error("Compile Failed: Asm output parsing Error!");
      }), W.debug && (B.autoTypedVars = D.autoTypedVars.map(function(s7) {
        var u7 = e.SOURCE_REG.exec(s7.src);
        if (u7 && u7.groups) {
          var m7 = parseInt(u7.groups.fileIndex), p7 = a7[m7] ? {
            file: a7[m7] ? g(a7[m7], e7, o7) : void 0,
            line: a7[m7] ? parseInt(u7.groups.line) : void 0,
            endLine: a7[m7] ? parseInt(u7.groups.endLine) : void 0,
            column: a7[m7] ? parseInt(u7.groups.col) : void 0,
            endColumn: a7[m7] ? parseInt(u7.groups.endCol) : void 0
          } : void 0;
          return {
            name: s7.name,
            type: s7.type,
            pos: p7
          };
        }
      }));
    }
    function n7(B, D, W, e7) {
      if (!(B.stdout || B.outputToFiles))
        try {
          Object.keys(D).forEach(function(o7) {
            var a7 = D[o7];
            s.existsSync(a7) && s.unlinkSync(a7);
          }), l.sync(W);
        } catch {
          console.error("clean compiler output files failed!");
        }
    }
    function K(B) {
      var D = B.sources, W = B.asm.split(" ");
      return !B.sourceMap || B.sourceMap.length == 0 ? [] : W.map(function(e7, o7) {
        var a7 = B.sourceMap[o7], s7 = e.SOURCE_REG.exec(a7);
        if (s7 && s7.groups) {
          var u7 = parseInt(s7.groups.fileIndex), m7 = D[u7] ? {
            file: D[u7],
            line: D[u7] ? parseInt(s7.groups.line) : void 0,
            endLine: D[u7] ? parseInt(s7.groups.endLine) : void 0,
            column: D[u7] ? parseInt(s7.groups.col) : void 0,
            endColumn: D[u7] ? parseInt(s7.groups.endCol) : void 0
          } : void 0;
          return {
            pos: m7,
            opcode: e7
          };
        }
      });
    }
    e.loadSourceMapfromDesc = K;
  }(v2)), v2;
}
var O2 = {}, P2 = {}, Y4;
function wy() {
  return Y4 || (Y4 = 1, function(e) {
    var t = I7 && I7.__values || function(k) {
      var P = typeof Symbol == "function" && Symbol.iterator, M = P && k[P], R = 0;
      if (M)
        return M.call(k);
      if (k && typeof k.length == "number")
        return {
          next: function() {
            return k && R >= k.length && (k = void 0), { value: k && k[R++], done: !k };
          }
        };
      throw new TypeError(P ? "Object is not iterable." : "Symbol.iterator is not defined.");
    };
    Object.defineProperty(e, "__esModule", { value: !0 }), e.deserializeState = e.serializeState = e.serialize = e.serializeInt = e.STATE_LEN_4BYTES = e.STATE_LEN_2BYTES = void 0;
    var a = Hd(), r = a.mvc.Script, f = a.mvc.Opcode, i = a.mvc.crypto.BN;
    e.STATE_LEN_2BYTES = 2, e.STATE_LEN_4BYTES = 4;
    function n(k) {
      return k ? "OP_TRUE" : "OP_FALSE";
    }
    function o(k) {
      var P = new i(k);
      return typeof k == "string" && k.startsWith("0x") && (P = new i(k.substr(2), 16)), P.eqn(0) ? "00" : P.toSM({ endian: "little" }).toString("hex");
    }
    e.serializeInt = o;
    function s(k) {
      if (k === "")
        return "00";
      var P = Q.Buffer.from(k, "utf8");
      return P.toString("hex");
    }
    function b(k) {
      return k;
    }
    function l(k, P, M) {
      M === void 0 && (M = void 0);
      var R = M[P];
      return R === "boolean" ? n(k[P]) : R === "number" || R === "bigint" ? o(k[P]) : R === "string" ? s(k[P]) : k[P];
    }
    function v(k) {
      return typeof k == "boolean" ? n(k) : typeof k == "number" || typeof k == "bigint" ? o(k) : k;
    }
    e.serialize = v;
    function m(k, P, M) {
      var R, F;
      P === void 0 && (P = e.STATE_LEN_2BYTES), M === void 0 && (M = void 0);
      var C = [], L = Object.keys(k);
      try {
        for (var U = t(L), q = U.next(); !q.done; q = U.next()) {
          var Z = q.value;
          if (M) {
            var z = l(k, Z, M);
            C.push(z);
          } else {
            var z = v(k[Z]);
            C.push(z);
          }
        }
      } catch (d) {
        R = { error: d };
      } finally {
        try {
          q && !q.done && (F = U.return) && F.call(U);
        } finally {
          if (R)
            throw R.error;
        }
      }
      var G = r.fromASM(C.join(" ")), O = G.toHex(), u = O.length / 2, p = a.num2bin(u, P);
      return G.toASM() + " " + p;
    }
    e.serializeState = m;
    var x = (
      /** @class */
      function() {
        function k(P) {
          this.op = P;
        }
        return k.prototype.toNumber = function() {
          if (this.op.opcodenum === f.OP_1)
            return 1;
          if (this.op.opcodenum === f.OP_0)
            return 0;
          if (this.op.opcodenum === f.OP_1NEGATE)
            return -1;
          if (this.op.opcodenum >= f.OP_2 && this.op.opcodenum <= f.OP_16)
            return Number(this.op.opcodenum - f.OP_2 + 2);
          if (!this.op.buf)
            throw new Error("state does not have a number representation");
          return Number(a.bin2num(this.op.buf));
        }, k.prototype.toBigInt = function() {
          if (this.op.opcodenum === f.OP_1)
            return BigInt(1);
          if (this.op.opcodenum === f.OP_0)
            return BigInt(0);
          if (this.op.opcodenum === f.OP_1NEGATE)
            return BigInt(-1);
          if (this.op.opcodenum >= f.OP_2 && this.op.opcodenum <= f.OP_16)
            return BigInt(this.op.opcodenum - f.OP_2 + 2);
          if (!this.op.buf)
            throw new Error("state does not have a number representation");
          return BigInt(a.bin2num(this.op.buf));
        }, k.prototype.toBoolean = function() {
          return this.toNumber() !== 0;
        }, k.prototype.toHex = function() {
          if (!this.op.buf)
            throw new Error("state does not have a hexadecimal representation");
          return this.op.buf.toString("hex");
        }, k.prototype.toString = function(P) {
          if (P === void 0 && (P = "utf8"), !this.op.buf)
            throw new Error("state does not have a string representation");
          return this.op.buf[0] === 0 ? "" : this.op.buf.toString(P);
        }, k;
      }()
    );
    function I(k, P) {
      P === void 0 && (P = void 0);
      var M;
      try {
        M = new r(k);
      } catch {
        M = r.fromASM(k);
      }
      for (var R = M.chunks, F = [], C = R.length, L = C - 2; L >= 0; L--) {
        var U = R[L].opcodenum;
        if (U === f.OP_RETURN)
          break;
        F.unshift(new x(R[L]));
      }
      if (!P)
        return F;
      var q;
      Array.isArray(P) ? q = [] : q = {};
      for (var Z = Object.keys(P), L = 0; L < F.length; L++) {
        var z = Z[L];
        if (!z)
          break;
        var G = P[z];
        G === "boolean" || typeof G == "boolean" ? q[z] = F[L].toBoolean() : G === "number" || typeof G == "number" ? q[z] = F[L].toNumber() : G === "bigint" || typeof G == "bigint" ? typeof BigInt == "function" ? q[z] = F[L].toBigInt() : q[z] = F[L].toNumber() : G === "string" ? q[z] = F[L].toString() : q[z] = F[L].toHex();
      }
      return q;
    }
    e.deserializeState = I;
  }(P2)), P2;
}
var X4;
function qi() {
  return X4 || (X4 = 1, function(e) {
    var t = I7 && I7.__extends || function() {
      var c = function(y, S) {
        return c = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(T, g) {
          T.__proto__ = g;
        } || function(T, g) {
          for (var w in g)
            g.hasOwnProperty(w) && (T[w] = g[w]);
        }, c(y, S);
      };
      return function(y, S) {
        c(y, S);
        function T() {
          this.constructor = y;
        }
        y.prototype = S === null ? Object.create(S) : (T.prototype = S.prototype, new T());
      };
    }(), a = I7 && I7.__read || function(c, y) {
      var S = typeof Symbol == "function" && c[Symbol.iterator];
      if (!S)
        return c;
      var T = S.call(c), g, w = [], A;
      try {
        for (; (y === void 0 || y-- > 0) && !(g = T.next()).done; )
          w.push(g.value);
      } catch (h) {
        A = { error: h };
      } finally {
        try {
          g && !g.done && (S = T.return) && S.call(T);
        } finally {
          if (A)
            throw A.error;
        }
      }
      return w;
    }, r = I7 && I7.__spread || function() {
      for (var c = [], y = 0; y < arguments.length; y++)
        c = c.concat(a(arguments[y]));
      return c;
    }, f;
    Object.defineProperty(e, "__esModule", { value: !0 }), e.serializeSupportedParamType = e.BasicScryptType = e.BasicType = e.VariableType = e.SortedItem = e.HashedSet = e.HashedMap = e.Library = e.Struct = e.OpCodeType = e.SigHashPreimage = e.SigHashType = e.SigHash = e.Sha256 = e.Sha1 = e.PubKeyHash = e.Ripemd160 = e.Sig = e.PubKey = e.PrivKey = e.String = e.Bytes = e.Bool = e.Int = e.ScryptType = e.SymbolType = void 0;
    var i = A5(), n = wy(), o;
    (function(c) {
      c.BaseType = "BaseType", c.Contract = "Contract", c.Library = "Library", c.Struct = "Struct", c.Unknown = "Unknown";
    })(o = e.SymbolType || (e.SymbolType = {}));
    var s = (
      /** @class */
      function() {
        function c() {
          for (var y = [], S = 0; S < arguments.length; S++)
            y[S] = arguments[S];
          try {
            this._value = this.checkValue(y), this._literal = this.toLiteral();
            var T = a(i.parseLiteral(this._literal), 3), g = T[0], w = T[1], A = T[2];
            this._type = A, this._asm = g;
          } catch (h) {
            throw new Error("can't construct " + this.constructor.name + " from <" + y + ">, " + h.message);
          }
        }
        return Object.defineProperty(c.prototype, "value", {
          get: function() {
            return this._value;
          },
          enumerable: !1,
          configurable: !0
        }), Object.defineProperty(c.prototype, "finalType", {
          get: function() {
            return this._typeResolver ? this._typeResolver(this.type).finalType : this.type;
          },
          enumerable: !1,
          configurable: !0
        }), Object.defineProperty(c.prototype, "literal", {
          get: function() {
            return this._literal;
          },
          enumerable: !1,
          configurable: !0
        }), Object.defineProperty(c.prototype, "type", {
          get: function() {
            return this._type;
          },
          enumerable: !1,
          configurable: !0
        }), c.prototype.toASM = function() {
          return this._asm;
        }, c.prototype.toHex = function() {
          return i.mvc.Script.fromASM(this._asm).toHex();
        }, c.prototype.toString = function(y) {
          return y === "hex" ? this.toHex() : this.toLiteral();
        }, c.prototype.toJSON = function() {
          return this.toLiteral();
        }, c.prototype.toLiteral = function() {
          return "";
        }, c.prototype.checkValue = function(y) {
          if (typeof y > "u")
            throw new Error("constructor argument undefined");
          if (y.length !== 1)
            throw new Error("constructor argument undefined");
          return y[0];
        }, c.prototype.equals = function(y) {
          return y.finalType === this.finalType && y.toASM() === this.toASM();
        }, c.prototype.serialize = function() {
          return "";
        }, c.prototype.clone = function() {
          return Object.assign(Object.create(this), {
            _value: this.value
          });
        }, c;
      }()
    );
    e.ScryptType = s;
    var b = (
      /** @class */
      function(c) {
        t(y, c);
        function y(S) {
          return c.call(this, S) || this;
        }
        return y.prototype.toLiteral = function() {
          return this._value.toString();
        }, y.prototype.checkValue = function(S) {
          if (c.prototype.checkValue.call(this, S), !i.isInteger(S[0]))
            throw new Error("Only supports integers, should use integer number, bigint, hex string or decimal string: " + S[0]);
          if (typeof S[0] == "number" && !isNaN(S[0]) && !Number.isSafeInteger(S[0]))
            throw new Error("<" + S[0] + "> is not safe integer, should use bigint, hex string or decimal string");
          return S[0];
        }, y.prototype.toJSON = function() {
          return this.value;
        }, y.prototype.serialize = function() {
          return n.serializeInt(this.value);
        }, y.prototype.toNumber = function() {
          return typeof this._value == "number" ? this._value : typeof this._value == "bigint" ? i.int2Value(this._value.toString()) : i.int2Value(this.value);
        }, y;
      }(s)
    );
    e.Int = b;
    var l = (
      /** @class */
      function(c) {
        t(y, c);
        function y(S) {
          return c.call(this, S) || this;
        }
        return y.prototype.toLiteral = function() {
          return this._value.toString();
        }, y.prototype.serialize = function() {
          return this.value ? "01" : "00";
        }, y;
      }(s)
    );
    e.Bool = l;
    var v = (
      /** @class */
      function(c) {
        t(y, c);
        function y(S) {
          return c.call(this, S) || this;
        }
        return y.prototype.toLiteral = function() {
          return "b'" + i.getValidatedHexString(this._value.toString()) + "'";
        }, y.prototype.serialize = function() {
          return n.serialize(this.value);
        }, y;
      }(s)
    );
    e.Bytes = v;
    var m = (
      /** @class */
      function(c) {
        t(y, c);
        function y(S) {
          return c.call(this, y.toUtf8Hex(S)) || this;
        }
        return y.toUtf8Hex = function(S) {
          var T = new TextEncoder(), g = T.encode(S);
          return i.toHex(Q.Buffer.from(g));
        }, y.fromUtf8Hex = function(S) {
          var T = new TextDecoder();
          return T.decode(Q.Buffer.from(S, "hex"));
        }, y.prototype.toLiteral = function() {
          return '"' + this.show() + '"';
        }, y.prototype.show = function() {
          var S = this.value;
          return y.fromUtf8Hex(S);
        }, y;
      }(v)
    );
    e.String = m;
    var x = (
      /** @class */
      function(c) {
        t(y, c);
        function y(S) {
          return c.call(this, S) || this;
        }
        return y.prototype.toLiteral = function() {
          if (typeof this._value == "string")
            return "PrivKey(" + this._value + ")";
          var S = this._value;
          return "PrivKey(0x" + i.intValue2hex(S) + ")";
        }, y.prototype.toJSON = function() {
          return this.toLiteral();
        }, y.prototype.serialize = function() {
          return n.serializeInt(this.value);
        }, y;
      }(b)
    );
    e.PrivKey = x;
    var I = (
      /** @class */
      function(c) {
        t(y, c);
        function y(S) {
          return c.call(this, S) || this;
        }
        return y.prototype.toLiteral = function() {
          return "PubKey(b'" + i.getValidatedHexString(this._value.toString()) + "')";
        }, y.prototype.serialize = function() {
          return n.serialize(this.value);
        }, y;
      }(s)
    );
    e.PubKey = I;
    var k = (
      /** @class */
      function(c) {
        t(y, c);
        function y(S) {
          return c.call(this, S) || this;
        }
        return y.prototype.toLiteral = function() {
          return "Sig(b'" + i.getValidatedHexString(this._value.toString()) + "')";
        }, y.prototype.serialize = function() {
          return n.serialize(this.value);
        }, y;
      }(s)
    );
    e.Sig = k;
    var P = (
      /** @class */
      function(c) {
        t(y, c);
        function y(S) {
          return c.call(this, S) || this;
        }
        return y.prototype.toLiteral = function() {
          return "Ripemd160(b'" + i.getValidatedHexString(this._value.toString()) + "')";
        }, y.prototype.serialize = function() {
          return n.serialize(this.value);
        }, y;
      }(s)
    );
    e.Ripemd160 = P;
    var M = (
      /** @class */
      function(c) {
        t(y, c);
        function y() {
          return c !== null && c.apply(this, arguments) || this;
        }
        return y;
      }(P)
    );
    e.PubKeyHash = M;
    var R = (
      /** @class */
      function(c) {
        t(y, c);
        function y(S) {
          return c.call(this, S) || this;
        }
        return y.prototype.toLiteral = function() {
          return "Sha1(b'" + i.getValidatedHexString(this._value.toString()) + "')";
        }, y.prototype.serialize = function() {
          return n.serialize(this.value);
        }, y;
      }(s)
    );
    e.Sha1 = R;
    var F = (
      /** @class */
      function(c) {
        t(y, c);
        function y(S) {
          return c.call(this, S) || this;
        }
        return y.prototype.toLiteral = function() {
          return "Sha256(b'" + i.getValidatedHexString(this._value.toString()) + "')";
        }, y.prototype.serialize = function() {
          return n.serialize(this.value);
        }, y;
      }(s)
    );
    e.Sha256 = F;
    var C;
    (function(c) {
      c[c.ALL = 1] = "ALL", c[c.NONE = 2] = "NONE", c[c.SINGLE = 3] = "SINGLE", c[c.FORKID = 64] = "FORKID", c[c.ANYONECANPAY = 128] = "ANYONECANPAY", c[c.ALL_FORKID = 65] = "ALL_FORKID", c[c.SINGLE_FORKID = 67] = "SINGLE_FORKID", c[c.NONE_FORKID = 66] = "NONE_FORKID", c[c.ANYONECANPAY_ALL_FORKID = 193] = "ANYONECANPAY_ALL_FORKID", c[c.ANYONECANPAY_SINGLE_FORKID = 195] = "ANYONECANPAY_SINGLE_FORKID", c[c.ANYONECANPAY_NONE_FORKID = 194] = "ANYONECANPAY_NONE_FORKID";
    })(C = e.SigHash || (e.SigHash = {}));
    var L = (
      /** @class */
      function(c) {
        t(y, c);
        function y(S) {
          return c.call(this, S) || this;
        }
        return y.prototype.toLiteral = function() {
          var S = this._value.toString(16);
          return S.length % 2 && (S = "0" + S), "SigHashType(b'" + S + "')";
        }, y.prototype.serialize = function() {
          return n.serialize(this.value);
        }, y.prototype.toString = function() {
          var S = [], T = this._value;
          if ((T & C.ANYONECANPAY) === C.ANYONECANPAY && (S.push("SigHash.ANYONECANPAY"), T = T - C.ANYONECANPAY), (T & C.SINGLE) === C.SINGLE && (S.push("SigHash.SINGLE"), T = T - C.SINGLE), (T & C.NONE) === C.NONE && (S.push("SigHash.NONE"), T = T - C.NONE), (T & C.ALL) === C.ALL && (S.push("SigHash.ALL"), T = T - C.ALL), (T & C.FORKID) === C.FORKID && (S.push("SigHash.FORKID"), T = T - C.FORKID), T === 0)
            return S.join(" | ");
          throw new Error("unknown sighash type value: " + this._value);
        }, y;
      }(s)
    );
    e.SigHashType = L;
    var U = (
      /** @class */
      function(c) {
        t(y, c);
        function y(S) {
          var T = c.call(this, S) || this;
          return T._buf = Q.Buffer.from(S, "hex"), T;
        }
        return y.prototype.getReader = function(S) {
          return new i.mvc.encoding.BufferReader(S);
        }, Object.defineProperty(y.prototype, "nVersion", {
          // nVersion of the transaction
          get: function() {
            return this.getReader(this._buf.slice(0, 4)).readUInt32LE();
          },
          enumerable: !1,
          configurable: !0
        }), Object.defineProperty(y.prototype, "hashPrevouts", {
          // hashPrevouts
          get: function() {
            return this._buf.slice(4, 4 + 32).toString("hex");
          },
          enumerable: !1,
          configurable: !0
        }), Object.defineProperty(y.prototype, "hashSequence", {
          // hashSequence
          get: function() {
            return this._buf.slice(36, 36 + 32).toString("hex");
          },
          enumerable: !1,
          configurable: !0
        }), Object.defineProperty(y.prototype, "outpoint", {
          // outpoint
          get: function() {
            var S = this._buf.slice(68, 104), T = S.toString("hex"), g = this.getReader(S.slice(32, 32 + 4)).readUInt32LE(), w = Q.Buffer.from(S.slice(0, 32)).reverse().toString("hex");
            return {
              hash: w,
              index: g,
              hex: T
            };
          },
          enumerable: !1,
          configurable: !0
        }), Object.defineProperty(y.prototype, "scriptCode", {
          // scriptCode of the input
          get: function() {
            return this.getReader(this._buf.slice(104, this._buf.length - 52)).readVarLengthBuffer().toString("hex");
          },
          enumerable: !1,
          configurable: !0
        }), Object.defineProperty(y.prototype, "amount", {
          // value of the output spent by this input
          get: function() {
            return this.getReader(this._buf.slice(this._buf.length - 44 - 8, this._buf.length - 44)).readUInt32LE();
          },
          enumerable: !1,
          configurable: !0
        }), Object.defineProperty(y.prototype, "nSequence", {
          // nSequence of the input
          get: function() {
            return this.getReader(this._buf.slice(this._buf.length - 40 - 4, this._buf.length - 40)).readUInt32LE();
          },
          enumerable: !1,
          configurable: !0
        }), Object.defineProperty(y.prototype, "hashOutputs", {
          // hashOutputs
          get: function() {
            return this._buf.slice(this._buf.length - 8 - 32, this._buf.length - 8).toString("hex");
          },
          enumerable: !1,
          configurable: !0
        }), Object.defineProperty(y.prototype, "nLocktime", {
          // nLocktime of the transaction
          get: function() {
            return this.getReader(this._buf.slice(this._buf.length - 4 - 4, this._buf.length - 4)).readUInt32LE();
          },
          enumerable: !1,
          configurable: !0
        }), Object.defineProperty(y.prototype, "sighashType", {
          // sighash type of the signature
          get: function() {
            return this.getReader(this._buf.slice(this._buf.length - 4, this._buf.length)).readUInt32LE();
          },
          enumerable: !1,
          configurable: !0
        }), y.prototype.toString = function(S) {
          return S === void 0 && (S = "hex"), this._buf.toString(S);
        }, y.prototype.toLiteral = function() {
          return "SigHashPreimage(b'" + i.getValidatedHexString(this._value.toString()) + "')";
        }, y.prototype.toJSONObject = function() {
          return {
            nVersion: this.nVersion,
            hashPrevouts: this.hashPrevouts,
            hashSequence: this.hashSequence,
            outpoint: this.outpoint,
            scriptCode: this.scriptCode,
            amount: this.amount,
            nSequence: this.nSequence,
            hashOutputs: this.hashOutputs,
            nLocktime: this.nLocktime,
            sighashType: new L(this.sighashType).toString()
          };
        }, y.prototype.serialize = function() {
          return n.serialize(this.value);
        }, y;
      }(s)
    );
    e.SigHashPreimage = U;
    var q = (
      /** @class */
      function(c) {
        t(y, c);
        function y(S) {
          return c.call(this, S) || this;
        }
        return y.prototype.toLiteral = function() {
          return "OpCodeType(b'" + i.getValidatedHexString(this._value.toString()) + "')";
        }, y.prototype.serialize = function() {
          return n.serialize(this.value);
        }, y;
      }(s)
    );
    e.OpCodeType = q;
    var Z = (
      /** @class */
      function(c) {
        t(y, c);
        function y(S) {
          var T = c.call(this, S) || this;
          return T.sorted = !1, T.inferredTypes = {}, T;
        }
        return y.setStructAst = function(S, T) {
          Object.getPrototypeOf(S).constructor.structAst = T;
        }, y.getStructAst = function(S) {
          return Object.getPrototypeOf(S).constructor.structAst;
        }, y.prototype.flatten = function(S) {
          return i.flatternStruct(this, S);
        }, y.prototype.toHex = function() {
          if (!this.sorted)
            throw "unbinded Struct can't call toHex";
          return i.flatternStruct(this, "").map(function(S) {
            return S.value.toHex();
          }).join("");
        }, y.prototype.init = function() {
          var S = this;
          i.checkStruct(y.getStructAst(this), this), this.inferrTypesByValue();
          var T = this.getStructAst();
          T.params.forEach(function(A) {
            var h = S.memberByKey(A.name);
            i.checkStructField(T, A, h, S._typeResolver);
          });
          var g = {}, w = this.value;
          Object.keys(this.value).sort(function(A, h) {
            return T.params.findIndex(function(N) {
              return N.name === A;
            }) - T.params.findIndex(function(N) {
              return N.name === h;
            });
          }).forEach(function(A) {
            g[A] = w[A];
          }), this.sorted = !0, this._type = T.name, this._value = g;
        }, y.prototype.bind = function() {
          var S = this;
          this.init();
          var T = this.getStructAst();
          T.params.forEach(function(g) {
            Object.defineProperty(S, g.name, {
              get: function() {
                return this.memberByKey(g.name);
              },
              set: function(w) {
                i.checkStructField(T, g, w, this._typeResolver), this._value[g.name] = w;
              }
            });
          });
        }, y.prototype.getStructAst = function() {
          var S = this, T = y.getStructAst(this);
          return {
            name: T.name,
            params: T.params.map(function(g) {
              return {
                name: g.name,
                type: i.resolveGenericType(S.inferredTypes, g.type)
              };
            }),
            genericTypes: (T.genericTypes || []).map(function(g) {
              return g;
            })
          };
        }, y.prototype.inferrTypesByValue = function() {
          var S = this, T = this.value, g = this.getStructAst();
          g.params.forEach(function(w) {
            var A, h = i.inferrType(T[w.name]);
            if (g.genericTypes.includes(w.type))
              if (S.inferredTypes[w.type]) {
                if (S.inferredTypes[w.type] != h)
                  throw new Error("The type of " + g.name + " is wrong, expected " + i.structSign(g) + " but got " + JSON.stringify(T));
              } else
                Object.assign(S.inferredTypes, (A = {}, A[w.type] = h, A));
            else if (i.isGenericType(w.type) && g.genericTypes.length > 0) {
              if (!i.isGenericType(h))
                throw new Error("The type of " + g.name + " is wrong, expected " + i.structSign(g) + " but got " + JSON.stringify(T));
              var N = a(i.parseGenericType(h), 2);
              N[0];
              var Y = N[1], t7 = a(i.parseGenericType(w.type), 2);
              t7[0];
              var H = t7[1];
              H.forEach(function($, X) {
                var i7;
                if (S.inferredTypes[$]) {
                  if (S.inferredTypes[$] != Y[X])
                    throw new Error("The type of " + g.name + " is wrong, expected " + i.structSign(g) + " but got " + JSON.stringify(T));
                } else
                  Object.assign(S.inferredTypes, (i7 = {}, i7[$] = Y[X], i7));
              });
            }
          });
        }, y.prototype.inferrTypesByAssign = function(S) {
          var T = this;
          if (!y.hasGeneric(this))
            return !1;
          var g = a(i.parseGenericType(S), 2), w = g[0], A = g[1], h = this.getStructAst();
          if (h.name !== w || h.genericTypes.length !== A.length)
            return !1;
          var N = !0;
          return h.genericTypes.forEach(function(Y, t7) {
            var H, $ = A[t7];
            T.inferredTypes[Y] ? T.inferredTypes[Y] != $ && (N = !1) : Object.assign(T.inferredTypes, (H = {}, H[Y] = $, H));
          }), N;
        }, y.prototype.toASM = function() {
          if (!this.sorted)
            throw "unbinded Struct can't call toASM";
          return this._asm = i.flatternStruct(this, "").map(function(S) {
            return S.value.toASM();
          }).join(" "), this._asm;
        }, y.prototype.toArray = function() {
          if (!this.sorted)
            throw "unbinded Struct can't call toArray";
          return Object.values(this.value).map(function(S) {
            return i.toScryptType(S);
          });
        }, y.prototype.memberByIndex = function(S) {
          if (!this.sorted)
            throw "unbinded Struct can't call memberByIndex";
          var T = this.value;
          return Object.keys(T)[S];
        }, y.prototype.getMemberType = function(S) {
          var T = this.value;
          return i.toScryptType(T[S]).type;
        }, y.prototype.getMemberFinalType = function(S) {
          var T = this.memberByKey(S);
          return i.typeOfArg(T);
        }, y.prototype.getMemberAstFinalType = function(S) {
          var T = this.getStructAst(), g = T.params.find(function(w) {
            return w.name === S;
          });
          if (!g)
            throw new Error(S + " is member of struct " + T.name);
          return this._typeResolver(g.type).finalType;
        }, y.prototype.getMembers = function() {
          var S = this.value;
          return Object.keys(S);
        }, y.prototype.memberByKey = function(S) {
          var T = this.value, g = T[S];
          return Array.isArray(g) ? g : typeof g < "u" ? i.toScryptType(g) : void 0;
        }, y.prototype.clone = function() {
          var S = this;
          return Object.assign(Object.create(this), {
            _value: Object.keys(this.value).reduce(function(T, g) {
              var w, A, h = S.value[g];
              return Array.isArray(h) ? Object.assign(T, (w = {}, w[g] = i.cloneArray(h), w)) : Object.assign(T, (A = {}, A[g] = i.toScryptType(h).clone(), A)), T;
            }, {})
          });
        }, y.prototype.toLiteral = function() {
          var S = this.value, T = Object.keys(this.value).map(function(g) {
            return Array.isArray(S[g]) ? i.arrayToLiteral(S[g]) : i.toScryptType(S[g]).toLiteral();
          }).join(",");
          return "{" + T + "}";
        }, y.prototype.toJSON = function() {
          var S = this.value;
          return Array.from(Object.keys(S)).reduce(function(T, g) {
            var w, A, h, N;
            return S[g] instanceof s ? y.isStruct(S[g]) ? Object.assign(T, (w = {}, w[g] = S[g].toJSON(), w)) : Array.isArray(S[g]) ? Object.assign(T, (A = {}, A[g] = i.arrayToJson(S[g]), A)) : Object.assign(T, (h = {}, h[g] = S[g].toLiteral(), h)) : Object.assign(T, (N = {}, N[g] = S[g], N));
          }, {});
        }, y.isStruct = function(S) {
          return S instanceof y;
        }, y.prototype.serialize = function() {
          return n.serialize(this.value);
        }, y.hasGeneric = function(S) {
          var T = y.getStructAst(S);
          return (T.genericTypes || []).length > 0;
        }, Object.defineProperty(y.prototype, "finalType", {
          get: function() {
            var S = this;
            if (this._typeResolver)
              if (y.hasGeneric(this)) {
                var T = this.getStructAst(), g = i.toGenericType(this.type, T.genericTypes.map(function(w) {
                  return S.inferredTypes[w] || w;
                }));
                return this._typeResolver(g).finalType;
              } else
                return this._typeResolver(this.type).finalType;
            return this.type;
          },
          enumerable: !1,
          configurable: !0
        }), y;
      }(s)
    );
    e.Struct = Z;
    var z = (
      /** @class */
      function(c) {
        t(y, c);
        function y() {
          for (var S = [], T = 0; T < arguments.length; T++)
            S[T] = arguments[T];
          var g = c.apply(this, r(S)) || this;
          g.properties = {}, g.inferredTypes = {};
          var w = g.getLibraryAst();
          return i.canAssignProperty(w) && S.forEach(function(A, h) {
            var N;
            Object.assign(g.properties, (N = {}, N[w.params[h].name] = A, N));
          }), g;
        }
        return y.setLibraryAst = function(S, T) {
          Object.getPrototypeOf(S).constructor.libraryAst = T;
        }, y.getLibraryAst = function(S) {
          return Object.getPrototypeOf(S).constructor.libraryAst;
        }, y.prototype.getCtorArgs = function() {
          var S = this.value;
          return i.arrayToScryptType(S);
        }, y.prototype.cloneProperties = function() {
          var S = this;
          return Object.keys(this.properties).reduce(function(T, g) {
            var w, A, h = S.properties[g];
            return Array.isArray(h) ? Object.assign(T, (w = {}, w[g] = i.cloneArray(h), w)) : Object.assign(T, (A = {}, A[g] = i.toScryptType(h).clone(), A)), T;
          }, {});
        }, y.prototype.clone = function() {
          return Object.assign(Object.create(this), {
            _value: i.cloneArray(this.getCtorArgs()),
            properties: this.cloneProperties()
          });
        }, y.prototype.getProperty = function(S) {
          var T = this.properties[S];
          if (typeof T > "u")
            throw new Error("Property " + S + " not found, the properties of the current library are: " + JSON.stringify(this.properties));
          return i.toScryptType(T);
        }, y.prototype.getProperties = function() {
          return this.properties;
        }, y.prototype.getLibraryAst = function() {
          var S = this, T = y.getLibraryAst(this);
          return {
            name: T.name,
            params: T.params.map(function(g) {
              return {
                name: g.name,
                type: i.resolveGenericType(S.inferredTypes, g.type)
              };
            }),
            properties: T.properties.map(function(g) {
              return {
                name: g.name,
                type: i.resolveGenericType(S.inferredTypes, g.type)
              };
            }),
            genericTypes: T.genericTypes.map(function(g) {
              return g;
            })
          };
        }, y.prototype.flatten = function(S) {
          return i.flatternLibrary(this, S);
        }, y.prototype.checkValue = function(S) {
          var T = y.getLibraryAst(this);
          if (T.params.length !== S.length)
            throw new Error("The type of " + T.name + " is wrong, expected " + i.librarySign(T) + " but got " + JSON.stringify(S));
          return S;
        }, y.prototype.inferrTypesByValue = function() {
          var S = this, T = this.value, g = this.getLibraryAst();
          g.params.forEach(function(w, A) {
            var h, N = i.inferrType(T[A]);
            if (g.genericTypes.includes(w.type))
              if (S.inferredTypes[w.type]) {
                if (S.inferredTypes[w.type] != N)
                  throw new Error("The type of " + g.name + " is wrong, expected " + i.librarySign(g) + " but got " + JSON.stringify(T));
              } else
                Object.assign(S.inferredTypes, (h = {}, h[w.type] = N, h));
            else if (i.isGenericType(w.type) && g.genericTypes.length > 0) {
              if (!i.isGenericType(N))
                throw new Error("The type of " + g.name + " is wrong, expected " + i.librarySign(g) + " but got " + JSON.stringify(T));
              var Y = a(i.parseGenericType(N), 2);
              Y[0];
              var t7 = Y[1], H = a(i.parseGenericType(w.type), 2);
              H[0];
              var $ = H[1];
              $.forEach(function(X, i7) {
                var J;
                if (S.inferredTypes[X]) {
                  if (S.inferredTypes[X] != t7[i7])
                    throw new Error("The type of " + g.name + " is wrong, expected " + i.librarySign(g) + " but got " + JSON.stringify(T));
                } else
                  Object.assign(S.inferredTypes, (J = {}, J[X] = t7[i7], J));
              });
            }
          });
        }, y.prototype.inferrTypesByAssign = function(S) {
          var T = this;
          if (!y.hasGeneric(this))
            return !1;
          var g = a(i.parseGenericType(S), 2), w = g[0], A = g[1], h = this.getLibraryAst();
          if (h.name !== w || h.genericTypes.length !== A.length)
            return !1;
          var N = !0;
          return h.genericTypes.forEach(function(Y, t7) {
            var H, $ = A[t7];
            T.inferredTypes[Y] ? T.inferredTypes[Y] != $ && (N = !1) : Object.assign(T.inferredTypes, (H = {}, H[Y] = $, H));
          }), N;
        }, y.hasGeneric = function(S) {
          var T = y.getLibraryAst(S);
          return (T.genericTypes || []).length > 0;
        }, y.prototype.attach = function() {
          var S = this, T = this.getLibraryAst();
          this._type = T.name;
          var g = this.value;
          T.params.forEach(function(w, A) {
            var h = i.checkSupportedParamType(g[A], w, S._typeResolver);
            if (h)
              throw new Error("The type of " + T.name + " is wrong, expected " + i.librarySign(T) + " but got " + JSON.stringify(g));
          }), T.properties.forEach(function(w) {
            Object.defineProperty(S, w.name, {
              get: function() {
                return this.properties[w.name];
              },
              set: function(A) {
                this.properties[w.name] = A;
              }
            });
          });
        }, y.isLibrary = function(S) {
          return S instanceof y;
        }, y.prototype.bind = function() {
          this.inferrTypesByValue(), this.attach();
        }, y.prototype.setProperties = function(S) {
          return this.properties = Object.assign(this.properties, S), this;
        }, y.prototype.toJSON = function() {
          return Array.from(Object.values(this.value)).map(function(S) {
            return Array.isArray(S) ? i.arrayToJson(S) : i.toScryptType(S).toJSON();
          });
        }, y.prototype.toLiteral = function() {
          return i.arrayToLiteral(this.value);
        }, Object.defineProperty(y.prototype, "finalType", {
          get: function() {
            var S = this;
            if (this._typeResolver)
              if (y.hasGeneric(this)) {
                var T = this.getLibraryAst(), g = i.toGenericType(this.type, T.genericTypes.map(function(w) {
                  return S.inferredTypes[w] || w;
                }));
                return this._typeResolver(g).finalType;
              } else
                return this._typeResolver(this.type).finalType;
            return this.type;
          },
          enumerable: !1,
          configurable: !0
        }), y;
      }(s)
    );
    e.Library = z;
    var G = (
      /** @class */
      function(c) {
        t(y, c);
        function y(S) {
          var T = c.call(this, S) || this;
          return T.setProperties({
            _data: S
          }), T._typeResolver = function(g) {
            return { finalType: g, symbolType: o.Library };
          }, T.bind(), T;
        }
        return y;
      }(z)
    );
    e.HashedMap = G, G.libraryAst = {
      name: "HashedMap",
      params: [
        {
          name: "_data",
          type: "bytes"
        }
      ],
      properties: [
        {
          name: "_data",
          type: "bytes"
        }
      ],
      genericTypes: ["K", "V"]
    };
    var O = (
      /** @class */
      function(c) {
        t(y, c);
        function y(S) {
          var T = c.call(this, S) || this;
          return T.setProperties({
            _data: S
          }), T._typeResolver = function(g) {
            return { finalType: g, symbolType: o.Library };
          }, T.bind(), T;
        }
        return y;
      }(z)
    );
    e.HashedSet = O, O.libraryAst = {
      name: "HashedSet",
      params: [
        {
          name: "_data",
          type: "bytes"
        }
      ],
      properties: [
        {
          name: "_data",
          type: "bytes"
        }
      ],
      genericTypes: ["E"]
    };
    var u = (
      /** @class */
      function(c) {
        t(y, c);
        function y(S) {
          var T = c.call(this, S) || this;
          return T._typeResolver = function(g) {
            return { finalType: g, symbolType: o.Struct };
          }, T.bind(), T;
        }
        return y;
      }(Z)
    );
    e.SortedItem = u, u.structAst = {
      name: "SortedItem",
      params: [
        {
          name: "item",
          type: "T"
        },
        {
          name: "idx",
          type: "int"
        }
      ],
      genericTypes: ["T"]
    };
    var p;
    (function(c) {
      c.BOOL = "bool", c.INT = "int", c.BYTES = "bytes", c.PUBKEY = "PubKey", c.PRIVKEY = "PrivKey", c.SIG = "Sig", c.RIPEMD160 = "Ripemd160", c.SHA1 = "Sha1", c.SHA256 = "Sha256", c.SIGHASHTYPE = "SigHashType", c.SIGHASHPREIMAGE = "SigHashPreimage", c.OPCODETYPE = "OpCodeType", c.PUBKEYHASH = "PubKeyHash", c.STRUCT = "struct", c.LIBRARY = "library";
    })(p = e.VariableType || (e.VariableType = {})), e.BasicType = Object.keys(p).map(function(c) {
      return p[c];
    }), e.BasicScryptType = (f = {}, f[p.BOOL] = l, f[p.INT] = b, f[p.BYTES] = v, f[p.PUBKEY] = I, f[p.PRIVKEY] = x, f[p.SIG] = k, f[p.RIPEMD160] = P, f[p.SHA1] = R, f[p.SHA256] = F, f[p.SIGHASHTYPE] = L, f[p.OPCODETYPE] = q, f[p.SIGHASHPREIMAGE] = U, f);
    function d(c) {
      if (typeof c == "boolean")
        return new l(c).serialize();
      if (typeof c == "number" || typeof c == "bigint")
        return n.serialize(c);
      if (c instanceof s)
        return c.serialize();
      throw new Error("serializeSupportedParamType unsupported: " + c);
    }
    e.serializeSupportedParamType = d;
  }(O2)), O2;
}
var J4;
function Hd() {
  return J4 || (J4 = 1, function(e) {
    var t = I7 && I7.__awaiter || function(r7, f7, c7, h7) {
      function v7(b7) {
        return b7 instanceof c7 ? b7 : new c7(function(w7) {
          w7(b7);
        });
      }
      return new (c7 || (c7 = Promise))(function(b7, w7) {
        function A7(U7) {
          try {
            O7(h7.next(U7));
          } catch (we) {
            w7(we);
          }
        }
        function j7(U7) {
          try {
            O7(h7.throw(U7));
          } catch (we) {
            w7(we);
          }
        }
        function O7(U7) {
          U7.done ? b7(U7.value) : v7(U7.value).then(A7, j7);
        }
        O7((h7 = h7.apply(r7, f7 || [])).next());
      });
    }, a = I7 && I7.__generator || function(r7, f7) {
      var c7 = { label: 0, sent: function() {
        if (b7[0] & 1)
          throw b7[1];
        return b7[1];
      }, trys: [], ops: [] }, h7, v7, b7, w7;
      return w7 = { next: A7(0), throw: A7(1), return: A7(2) }, typeof Symbol == "function" && (w7[Symbol.iterator] = function() {
        return this;
      }), w7;
      function A7(O7) {
        return function(U7) {
          return j7([O7, U7]);
        };
      }
      function j7(O7) {
        if (h7)
          throw new TypeError("Generator is already executing.");
        for (; c7; )
          try {
            if (h7 = 1, v7 && (b7 = O7[0] & 2 ? v7.return : O7[0] ? v7.throw || ((b7 = v7.return) && b7.call(v7), 0) : v7.next) && !(b7 = b7.call(v7, O7[1])).done)
              return b7;
            switch (v7 = 0, b7 && (O7 = [O7[0] & 2, b7.value]), O7[0]) {
              case 0:
              case 1:
                b7 = O7;
                break;
              case 4:
                return c7.label++, { value: O7[1], done: !1 };
              case 5:
                c7.label++, v7 = O7[1], O7 = [0];
                continue;
              case 7:
                O7 = c7.ops.pop(), c7.trys.pop();
                continue;
              default:
                if (b7 = c7.trys, !(b7 = b7.length > 0 && b7[b7.length - 1]) && (O7[0] === 6 || O7[0] === 2)) {
                  c7 = 0;
                  continue;
                }
                if (O7[0] === 3 && (!b7 || O7[1] > b7[0] && O7[1] < b7[3])) {
                  c7.label = O7[1];
                  break;
                }
                if (O7[0] === 6 && c7.label < b7[1]) {
                  c7.label = b7[1], b7 = O7;
                  break;
                }
                if (b7 && c7.label < b7[2]) {
                  c7.label = b7[2], c7.ops.push(O7);
                  break;
                }
                b7[2] && c7.ops.pop(), c7.trys.pop();
                continue;
            }
            O7 = f7.call(r7, c7);
          } catch (U7) {
            O7 = [6, U7], v7 = 0;
          } finally {
            h7 = b7 = 0;
          }
        if (O7[0] & 5)
          throw O7[1];
        return { value: O7[0] ? O7[1] : void 0, done: !0 };
      }
    }, r = I7 && I7.__read || function(r7, f7) {
      var c7 = typeof Symbol == "function" && r7[Symbol.iterator];
      if (!c7)
        return r7;
      var h7 = c7.call(r7), v7, b7 = [], w7;
      try {
        for (; (f7 === void 0 || f7-- > 0) && !(v7 = h7.next()).done; )
          b7.push(v7.value);
      } catch (A7) {
        w7 = { error: A7 };
      } finally {
        try {
          v7 && !v7.done && (c7 = h7.return) && c7.call(h7);
        } finally {
          if (w7)
            throw w7.error;
        }
      }
      return b7;
    }, f = I7 && I7.__spread || function() {
      for (var r7 = [], f7 = 0; f7 < arguments.length; f7++)
        r7 = r7.concat(r(arguments[f7]));
      return r7;
    }, i = I7 && I7.__values || function(r7) {
      var f7 = typeof Symbol == "function" && Symbol.iterator, c7 = f7 && r7[f7], h7 = 0;
      if (c7)
        return c7.call(r7);
      if (r7 && typeof r7.length == "number")
        return {
          next: function() {
            return r7 && h7 >= r7.length && (r7 = void 0), { value: r7 && r7[h7++], done: !r7 };
          }
        };
      throw new TypeError(f7 ? "Object is not iterable." : "Symbol.iterator is not defined.");
    };
    Object.defineProperty(e, "__esModule", { value: !0 }), e.parseStateHex = e.findSrcInfoV1 = e.findSrcInfoV2 = e.JSONStringify = e.JSONParserSync = e.JSONParser = e.invert = e.xor = e.or = e.and = e.int2Number = e.canAssignProperty = e.arrayToLiteral = e.structSign = e.librarySign = e.resolveGenericType = e.inferrType = e.cloneArray = e.arrayToJson = e.arrayToScryptType = e.toScryptType = e.parseAbiFromUnlockingScript = e.buildPublicKeyHashScript = e.buildOpreturnScript = e.writeVarint = e.toLEUnsigned = e.len = e.readLaunchJson = e.hash256 = e.sha256 = e.hash160 = e.parseGenericType = e.isGenericType = e.toHashedSet = e.toHashedMap = e.toData = e.findKeyIndex = e.sortset = e.sortmap = e.flattenSha256 = e.deserializeArgfromState = e.deserializeArgfromHex = e.readBytes = e.buildDefaultStateProps = e.buildContractState = e.buildContractCode = e.findStatic = e.findConstStatic = e.isInteger = e.toLiteral = e.createArray = e.createDefaultLibrary = e.createLibraryProperties = e.createLibrary = e.createStruct = e.stripAnsi = e.ansiRegex = e.resolveType = e.resolveConstValue = e.genLaunchConfigFile = e.newCall = e.compileContractAsync = e.compileContract = e.isEmpty = e.readFileByLine = e.typeOfArg = e.flatternParams = e.flatternStateArgs = e.flatternCtorArgs = e.flatternLibraryState = e.flatternLibrary = e.flatternStruct = e.flatternArray = e.subscript = e.subArrayType = e.toGenericType = e.toLiteralArrayType = e.arrayTypeAndSize = e.arrayTypeAndSizeStr = e.checkSupportedParamType = e.checkStruct = e.checkStructField = e.findStructByType = e.getNameByType = e.isArrayType = e.findStructByName = e.literal2Asm = e.uri2path = e.path2uri = e.isNode = e.bin2num = e.num2bin = e.getLowSPreimage = e.hashIsPositiveNumber = e.getPreimage = e.toHex = e.signTx = e.getValidatedHexString = e.hexStringToBytes = e.bytesToHexString = e.bytes2Literal = e.hex2ScryptType = e.asm2ScryptType = e.literal2ScryptType = e.isStringLiteral = e.parseLiteral = e.intValue2hex = e.int2Value = e.hex2int = e.asm2int = e.int2Asm = e.bool2Asm = e.DEFAULT_SIGHASH_TYPE = e.DEFAULT_FLAGS = e.ECIES = e.mvc = void 0;
    var n = Cs, o = ta;
    e.mvc = o;
    var s = Xv;
    e.ECIES = s;
    var b = Zt, l = Et, v = r0, m = uN, x = bN, I = A5(), k = zi(), P = qi(), M = o.crypto.BN, R = o.Script.Interpreter;
    e.DEFAULT_FLAGS = //Interp.SCRIPT_VERIFY_P2SH | Interp.SCRIPT_VERIFY_CLEANSTACK | // no longer applies now p2sh is deprecated: cleanstack only applies to p2sh
    R.SCRIPT_ENABLE_MAGNETIC_OPCODES | R.SCRIPT_ENABLE_MONOLITH_OPCODES | // TODO: to be removed after upgrade to mvc 2.0
    R.SCRIPT_VERIFY_STRICTENC | R.SCRIPT_ENABLE_SIGHASH_FORKID | R.SCRIPT_VERIFY_LOW_S | R.SCRIPT_VERIFY_NULLFAIL | R.SCRIPT_VERIFY_DERSIG | R.SCRIPT_VERIFY_MINIMALDATA | R.SCRIPT_VERIFY_NULLDUMMY | R.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS | R.SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY | R.SCRIPT_VERIFY_CHECKSEQUENCEVERIFY | R.SCRIPT_VERIFY_CLEANSTACK, e.DEFAULT_SIGHASH_TYPE = o.crypto.Signature.SIGHASH_ALL | o.crypto.Signature.SIGHASH_FORKID;
    function F(r7) {
      if (r7 === "true")
        return "OP_TRUE";
      if (r7 === "false")
        return "OP_FALSE";
      throw new Error("invalid str '" + r7 + "' to convert to bool");
    }
    e.bool2Asm = F;
    function C(r7) {
      if (/^(-?\d+)$/.test(r7) || /^0x([0-9a-fA-F]+)$/.test(r7)) {
        var f7 = r7.startsWith("0x") ? new M(r7.substring(2), 16) : new M(r7, 10);
        if (f7.eqn(-1))
          return "OP_1NEGATE";
        if (f7.gten(0) && f7.lten(16))
          return "OP_" + f7.toString();
        var c7 = f7.toSM({ endian: "little" });
        return c7.toString("hex");
      } else
        throw new Error("invalid str '" + r7 + "' to convert to int");
    }
    e.int2Asm = C;
    function L(r7) {
      switch (r7) {
        case "OP_1NEGATE":
          return -1;
        case "0":
        case "OP_0":
        case "OP_1":
        case "OP_2":
        case "OP_3":
        case "OP_4":
        case "OP_5":
        case "OP_6":
        case "OP_7":
        case "OP_8":
        case "OP_9":
        case "OP_10":
        case "OP_11":
        case "OP_12":
        case "OP_13":
        case "OP_14":
        case "OP_15":
        case "OP_16":
          return parseInt(r7.replace("OP_", ""));
        default: {
          var f7 = T(r7), c7 = M.fromHex(f7, {
            endian: "little"
          });
          return c7.toNumber() < Number.MAX_SAFE_INTEGER && c7.toNumber() > Number.MIN_SAFE_INTEGER ? c7.toNumber() : c7.toString();
        }
      }
    }
    e.asm2int = L;
    function U(r7) {
      var f7 = o.Script.fromHex(r7), c7 = f7.chunks[0];
      switch (c7.opcodenum) {
        case 0:
          return 0;
        case 79:
          return -1;
        case 81:
        case 82:
        case 83:
        case 84:
        case 85:
        case 86:
        case 87:
        case 88:
        case 89:
        case 90:
        case 91:
        case 92:
        case 93:
        case 94:
        case 95:
        case 96:
          return c7.opcodenum - 80;
        default: {
          var h7 = c7.buf.toString("hex"), v7 = M.fromHex(h7, {
            endian: "little"
          });
          return v7.toNumber() < Number.MAX_SAFE_INTEGER && v7.toNumber() > Number.MIN_SAFE_INTEGER ? v7.toNumber() : v7.toString();
        }
      }
    }
    e.hex2int = U;
    function q(r7) {
      if (/^(-?\d+)$/.test(r7) || /^0x([0-9a-fA-F]+)$/.test(r7)) {
        var f7 = r7.startsWith("0x") ? new M(r7.substring(2), 16) : new M(r7, 10);
        return f7.toNumber() < Number.MAX_SAFE_INTEGER && f7.toNumber() > Number.MIN_SAFE_INTEGER ? f7.toNumber() : r7;
      } else
        throw new Error("invalid str '" + r7 + "' to convert to int");
    }
    e.int2Value = q;
    function Z(r7) {
      var f7 = r7.toString(16);
      return f7.length % 2 === 1 && (f7 = "0" + f7), f7;
    }
    e.intValue2hex = Z;
    function z(r7) {
      var f7 = T(r7);
      if (f7 === "")
        return ["OP_0", f7, I.VariableType.BYTES];
      if (f7.length / 2 > 1)
        return [f7, f7, I.VariableType.BYTES];
      var c7 = parseInt(f7, 16);
      return c7 >= 1 && c7 <= 16 ? ["OP_" + c7, f7, I.VariableType.BYTES] : [f7, f7, I.VariableType.BYTES];
    }
    function G(r7) {
      if (r7 === "false")
        return ["OP_FALSE", !1, I.VariableType.BOOL];
      if (r7 === "true")
        return ["OP_TRUE", !0, I.VariableType.BOOL];
      var f7 = /^(0x[0-9a-fA-F]+)$/.exec(r7);
      if (f7)
        return [C(f7[1]), q(f7[1]), I.VariableType.INT];
      if (f7 = /^(-?\d+)$/.exec(r7), f7)
        return [C(f7[1]), q(f7[1]), I.VariableType.INT];
      if (f7 = /^b'([\da-fA-F]*)'$/.exec(r7), f7)
        return z(f7[1]);
      if (f7 = /^"([\s\S]*)"$/.exec(r7), f7) {
        var c7 = P.String.toUtf8Hex(f7[1]);
        return z(c7);
      }
      if (f7 = /^PrivKey\((-?\d+)\)$/.exec(r7), f7)
        return [C(f7[1]), q(f7[1]), I.VariableType.PRIVKEY];
      if (f7 = /^PrivKey\((0x[0-9a-fA-F]+)\)$/.exec(r7), f7)
        return [C(f7[1]), q(f7[1]), I.VariableType.PRIVKEY];
      if (f7 = /^PubKey\(b'([\da-fA-F]+)'\)$/.exec(r7), f7) {
        var c7 = T(f7[1]);
        return [c7, c7, I.VariableType.PUBKEY];
      }
      if (f7 = /^Sig\(b'([\da-fA-F]+)'\)$/.exec(r7), f7) {
        var c7 = T(f7[1]);
        return [c7, c7, I.VariableType.SIG];
      }
      if (f7 = /^Ripemd160\(b'([\da-fA-F]+)'\)$/.exec(r7), f7) {
        var c7 = T(f7[1]);
        return [c7, c7, I.VariableType.RIPEMD160];
      }
      if (f7 = /^Sha1\(b'([\da-fA-F]+)'\)$/.exec(r7), f7) {
        var c7 = T(f7[1]);
        return [c7, c7, I.VariableType.SHA1];
      }
      if (f7 = /^Sha256\(b'([\da-fA-F]+)'\)$/.exec(r7), f7) {
        var c7 = T(f7[1]);
        return [c7, c7, I.VariableType.SHA256];
      }
      if (f7 = /^SigHashType\(b'([\da-fA-F]+)'\)$/.exec(r7), f7) {
        var h7 = new M(T(f7[1]), 16);
        return [h7.toString("hex", 2), h7.toNumber(), I.VariableType.SIGHASHTYPE];
      }
      if (f7 = /^SigHashPreimage\(b'([\da-fA-F]+)'\)$/.exec(r7), f7) {
        var c7 = T(f7[1]);
        return [c7, c7, I.VariableType.SIGHASHPREIMAGE];
      }
      if (f7 = /^OpCodeType\(b'([\da-fA-F]+)'\)$/.exec(r7), f7) {
        var c7 = T(f7[1]);
        return [c7, c7, I.VariableType.OPCODETYPE];
      }
      if (f7 = /^\{([\s\S]*)\}$/.exec(r7), f7)
        return ["", "", I.VariableType.STRUCT];
      if (f7 = /^\[([\s\S]*)\]$/.exec(r7), f7)
        return ["", "", I.VariableType.LIBRARY];
      throw new Error("<" + r7 + "> cannot be cast to ASM format, only sCrypt native types supported");
    }
    e.parseLiteral = G;
    function O(r7) {
      var f7 = /^"([\s\S]*)"$/.exec(r7.trim());
      return !!f7;
    }
    e.isStringLiteral = O;
    function u(r7) {
      var f7 = r(G(r7), 3);
      f7[0];
      var c7 = f7[1], h7 = f7[2];
      switch (h7) {
        case I.VariableType.BOOL:
          return new I.Bool(c7);
        case I.VariableType.INT:
          return new I.Int(c7);
        case I.VariableType.BYTES:
          return O(r7) ? new P.String(P.String.fromUtf8Hex(c7)) : new I.Bytes(c7);
        case I.VariableType.PRIVKEY:
          return new I.PrivKey(c7);
        case I.VariableType.PUBKEY:
          return new I.PubKey(c7);
        case I.VariableType.SIG:
          return new I.Sig(c7);
        case I.VariableType.RIPEMD160:
          return new I.Ripemd160(c7);
        case I.VariableType.SHA1:
          return new I.Sha1(c7);
        case I.VariableType.SHA256:
          return new I.Sha256(c7);
        case I.VariableType.SIGHASHTYPE:
          return new I.SigHashType(c7);
        case I.VariableType.SIGHASHPREIMAGE:
          return new I.SigHashPreimage(c7);
        case I.VariableType.OPCODETYPE:
          return new I.OpCodeType(c7);
        default:
          throw new Error("<" + r7 + "> cannot be cast to ScryptType, only sCrypt native types supported");
      }
    }
    e.literal2ScryptType = u;
    function p(r7, f7) {
      switch (r7) {
        case I.VariableType.BOOL:
          return new I.Bool(M.fromString(f7) > 0);
        case I.VariableType.INT:
          return new I.Int(L(f7));
        case I.VariableType.BYTES:
          return new I.Bytes(f7 == "0" || f7 == "OP_0" || f7 == "OP_FALSE" ? "" : f7);
        case I.VariableType.PRIVKEY:
          return new I.PrivKey(L(f7));
        case I.VariableType.PUBKEY:
          return new I.PubKey(f7);
        case I.VariableType.SIG:
          return new I.Sig(f7);
        case I.VariableType.RIPEMD160:
          return new I.Ripemd160(f7);
        case I.VariableType.SHA1:
          return new I.Sha1(f7);
        case I.VariableType.SHA256:
          return new I.Sha256(f7);
        case I.VariableType.SIGHASHTYPE:
          return new I.SigHashType(L(f7));
        case I.VariableType.SIGHASHPREIMAGE:
          return new I.SigHashPreimage(f7);
        case I.VariableType.OPCODETYPE:
          return new I.OpCodeType(f7);
        default:
          throw new Error("<" + r7 + "> cannot be cast to ScryptType, only sCrypt native types supported");
      }
    }
    e.asm2ScryptType = p;
    function d(r7, f7) {
      var c7 = o.Script.fromHex(f7), h7 = c7.chunks[0];
      switch (r7) {
        case I.VariableType.BOOL:
          return new I.Bool(h7.opcodenum == 81);
        case I.VariableType.INT:
          return new I.Int(U(f7));
        case I.VariableType.BYTES:
          return new I.Bytes(h7.opcodenum == 0 ? "" : h7.buf.toString("hex"));
        case I.VariableType.PRIVKEY:
          return new I.PrivKey(U(f7));
        case I.VariableType.PUBKEY:
          return new I.PubKey(h7.opcodenum == 0 ? "" : h7.buf.toString("hex"));
        case I.VariableType.SIG:
          return new I.Sig(h7.opcodenum == 0 ? "" : h7.buf.toString("hex"));
        case I.VariableType.RIPEMD160:
          return new I.Ripemd160(h7.opcodenum == 0 ? "" : h7.buf.toString("hex"));
        case I.VariableType.SHA1:
          return new I.Sha1(h7.opcodenum == 0 ? "" : h7.buf.toString("hex"));
        case I.VariableType.SHA256:
          return new I.Sha256(h7.opcodenum == 0 ? "" : h7.buf.toString("hex"));
        case I.VariableType.SIGHASHTYPE:
          return new I.SigHashType(U(f7));
        case I.VariableType.SIGHASHPREIMAGE:
          return new I.SigHashPreimage(h7.opcodenum == 0 ? "" : h7.buf.toString("hex"));
        case I.VariableType.OPCODETYPE:
          return new I.OpCodeType(h7.opcodenum == 0 ? "" : h7.buf.toString("hex"));
        default:
          throw new Error("<" + r7 + "> cannot be cast to ScryptType, only sCrypt native types supported");
      }
    }
    e.hex2ScryptType = d;
    function c(r7, f7) {
      switch (f7) {
        case "bool":
          return M.fromBuffer(r7, { endian: "little" }) > 0 ? "true" : "false";
        case "int":
        case "PrivKey":
          return M.fromSM(r7, { endian: "little" }).toString();
        case "bytes":
          return "b'" + y(r7) + "'";
        default:
          return "b'" + y(r7) + "'";
      }
    }
    e.bytes2Literal = c;
    function y(r7) {
      return r7.reduce(function(f7, c7) {
        return f7 += ("0" + (c7 & 255).toString(16)).slice(-2);
      }, "");
    }
    e.bytesToHexString = y;
    function S(r7) {
      return T(r7), r7.split("").reduce(function(f7, c7, h7) {
        return h7 % 2 === 0 ? f7.push(c7) : f7[f7.length - 1] += c7, f7;
      }, new Array()).map(function(f7) {
        return parseInt(f7, 16);
      });
    }
    e.hexStringToBytes = S;
    function T(r7, f7) {
      f7 === void 0 && (f7 = !0);
      var c7 = r7.trim();
      if (c7.length < 1 && !f7)
        throw new Error("can't be empty string");
      if (c7.length % 2)
        throw new Error(c7 + " should have even length");
      if (c7.length > 0 && !/^[\da-f]+$/i.test(c7))
        throw new Error(c7 + " should only contain [0-9] or characters [a-fA-F]");
      return c7;
    }
    e.getValidatedHexString = T;
    function g(r7, f7, c7, h7, v7, b7, w7) {
      if (v7 === void 0 && (v7 = 0), b7 === void 0 && (b7 = e.DEFAULT_SIGHASH_TYPE), w7 === void 0 && (w7 = e.DEFAULT_FLAGS), !r7)
        throw new Error("param tx can not be empty");
      if (!f7)
        throw new Error("param privateKey can not be empty");
      if (!c7)
        throw new Error("param lockingScript can not be empty");
      if (!h7)
        throw new Error("param inputAmount can not be empty");
      if (typeof c7 == "string")
        throw new Error("Breaking change: LockingScript in ASM format is no longer supported, please use the lockingScript object directly");
      var A7 = w(o.Transaction.sighash.sign(r7, f7, b7, v7, c7, new o.crypto.BN(h7), w7).toTxFormat());
      return new I.Sig(A7);
    }
    e.signTx = g;
    function w(r7) {
      return r7 instanceof I.ScryptType ? r7.serialize() : r7.toString("hex");
    }
    e.toHex = w;
    function A(r7, f7, c7, h7, v7, b7) {
      h7 === void 0 && (h7 = 0), v7 === void 0 && (v7 = e.DEFAULT_SIGHASH_TYPE), b7 === void 0 && (b7 = e.DEFAULT_FLAGS);
      var w7 = o.Transaction.sighash.sighashPreimage(r7, v7, h7, f7, new o.crypto.BN(c7), b7);
      return new I.SigHashPreimage(w7.toString("hex"));
    }
    e.getPreimage = A;
    var h = 126;
    function N(r7) {
      var f7 = r7.readUInt8(31);
      return f7 < h;
    }
    e.hashIsPositiveNumber = N;
    function Y(r7, f7, c7, h7, v7, b7) {
      h7 === void 0 && (h7 = 0), v7 === void 0 && (v7 = e.DEFAULT_SIGHASH_TYPE), b7 === void 0 && (b7 = e.DEFAULT_FLAGS);
      for (var w7 = 0; w7 < Number.MAX_SAFE_INTEGER; w7++) {
        var A7 = A(r7, f7, c7, h7, v7, b7), j7 = o.crypto.Hash.sha256sha256(Q.Buffer.from(w(A7), "hex")), O7 = j7.readUInt8();
        if (O7 < h && N(j7))
          return A7;
        r7.inputs[h7].sequenceNumber--;
      }
    }
    e.getLowSPreimage = Y;
    function t7(r7, f7) {
      var c7 = new M(r7);
      if (c7.eqn(0))
        return "00".repeat(f7);
      var h7 = c7.toSM({ endian: "little" }).toString("hex"), v7 = h7.length / 2;
      if (v7 > f7)
        throw new Error(r7 + " cannot fit in " + f7 + " byte[s]");
      if (v7 === f7)
        return h7;
      var b7 = f7 - v7, w7 = h7.substring(h7.length - 2), A7 = h7.substring(0, h7.length - 2), j7 = parseInt(w7, 16);
      c7.isNeg && (j7 &= 127);
      var O7 = j7.toString(16);
      O7.length < 2 && (O7 = "0" + O7);
      var U7 = r7 > 0 ? "00".repeat(b7) : "00".repeat(b7 - 1) + "80";
      return A7 + O7 + U7;
    }
    e.num2bin = t7;
    function H(r7) {
      var f7 = r7.toString("hex"), c7 = f7.substring(f7.length - 2), h7 = f7.substring(0, f7.length - 2), v7 = parseInt(c7, 16), b7 = v7 & 127, w7 = b7.toString(16);
      w7.length < 2 && (w7 = "0" + w7);
      var A7 = M.fromHex(h7 + w7, { endian: "little" });
      return v7 >> 7 && (A7 = A7.neg()), A7.toNumber() < Number.MAX_SAFE_INTEGER && A7.toNumber() > Number.MIN_SAFE_INTEGER ? A7.toNumber() : A7.toString();
    }
    e.bin2num = H;
    function $() {
      return typeof window > "u" && typeof g7 == "object";
    }
    e.isNode = $;
    function X(r7) {
      return $() ? n.pathToFileURL(r7).toString() : r7;
    }
    e.path2uri = X;
    function i7(r7) {
      return $() ? n.fileURLToPath(r7) : r7;
    }
    e.uri2path = i7;
    function J(r7) {
      var f7 = r(G(r7), 3), c7 = f7[0];
      f7[1];
      var h7 = f7[2];
      return [c7, h7];
    }
    e.literal2Asm = J;
    function _(r7, f7) {
      return f7.find(function(c7) {
        return c7.name == r7;
      });
    }
    e.findStructByName = _;
    function E(r7) {
      return /^(.+)(\[[\w.]+\])+$/.test(r7);
    }
    e.isArrayType = E;
    function j(r7) {
      if (E(r7)) {
        var f7 = r(D(r7), 2), c7 = f7[0];
        return f7[1], j(c7);
      }
      if (Le(r7)) {
        var h7 = r(Ke(r7), 2), v7 = h7[0];
        return h7[1], j(v7);
      }
      return r7;
    }
    e.getNameByType = j;
    function V(r7, f7) {
      var c7 = j(r7);
      if (c7)
        return _(c7, f7);
    }
    e.findStructByType = V;
    function n7(r7, f7, c7, h7) {
      var v7 = h7(f7.type).finalType;
      if (E(v7)) {
        if (s7(c7, f7, v7, h7))
          throw new Error("Member " + f7.name + " of struct " + r7.name + " is of wrong type, expected " + f7.type);
      } else {
        var b7 = k7(c7);
        if (v7 != b7)
          throw new Error("Member " + f7.name + " of struct " + r7.name + " is of wrong type, expected " + v7 + " but got " + b7);
      }
    }
    e.checkStructField = n7;
    function K(r7, f7) {
      r7.params.forEach(function(h7) {
        var v7 = f7.memberByKey(h7.name);
        if (!v7)
          throw new Error("argument of type struct " + r7.name + " missing member " + h7.name);
      });
      var c7 = r7.params.map(function(h7) {
        return h7.name;
      });
      f7.getMembers().forEach(function(h7) {
        if (!c7.includes(h7))
          throw new Error(h7 + " is not a member of struct " + r7.name);
      });
    }
    e.checkStruct = K;
    function B(r7, f7, c7) {
      var h7 = c7(f7.type), v7 = h7.finalType;
      if (E(v7))
        return s7(r7, f7, v7, c7);
      var b7 = new Error("The type of " + f7.name + " is wrong, expected " + v7 + " but got " + k7(r7));
      if (Le(v7))
        if (P.Library.isLibrary(r7)) {
          var w7 = r7;
          if (!w7.inferrTypesByAssign(v7))
            return b7;
        } else if (I.Struct.isStruct(r7)) {
          var A7 = r7;
          if (!A7.inferrTypesByAssign(v7))
            return b7;
        } else
          return b7;
      var j7 = k7(r7);
      return j7 == v7 ? void 0 : b7;
    }
    e.checkSupportedParamType = B;
    function D(r7) {
      var f7 = [];
      if (r7.indexOf(">") > -1) {
        var c7 = r7.substring(0, r7.lastIndexOf(">") + 1), h7 = r7.substring(r7.lastIndexOf(">") + 1);
        return f(h7.matchAll(/\[([\w.]+)\]+/g)).map(function(w7) {
          f7.push(w7[1]);
        }), [c7, f7];
      }
      f(r7.matchAll(/\[([\w.]+)\]+/g)).map(function(w7) {
        f7.push(w7[1]);
      });
      var v7 = r7.split("["), b7 = v7[0];
      return [b7, f7];
    }
    e.arrayTypeAndSizeStr = D;
    function W(r7) {
      var f7 = r(D(r7), 2), c7 = f7[0], h7 = f7[1];
      return [
        c7,
        h7.map(function(v7) {
          var b7 = parseInt(v7);
          if (isNaN(b7))
            throw new Error("arrayTypeAndSize error type " + r7 + " with sub isNaN");
          return b7;
        })
      ];
    }
    e.arrayTypeAndSize = W;
    function e7(r7, f7) {
      return [r7, f7.map(function(c7) {
        return "[" + c7 + "]";
      }).join("")].join("");
    }
    e.toLiteralArrayType = e7;
    function o7(r7, f7) {
      return r7 + "<" + f7.join(",") + ">";
    }
    e.toGenericType = o7;
    function a7(r7) {
      var f7 = r(W(r7), 2), c7 = f7[0], h7 = f7[1];
      return e7(c7, h7.slice(1));
    }
    e.subArrayType = a7;
    function s7(r7, f7, c7, h7) {
      var v7 = h7(f7.type).finalType, b7 = r(W(v7), 2), w7 = b7[0], A7 = b7[1];
      if (!Array.isArray(r7))
        return new Error("The type of " + f7.name + " is wrong, expected " + c7 + " but got " + k7(r7));
      var j7 = k7(r7[0]);
      if (!r7.every(function(we) {
        return k7(we) === j7;
      }))
        return new Error("The type of " + f7.name + " is wrong, expected " + c7 + " but not all element types are the same");
      if (r7.length !== A7[0])
        return new Error("The type of " + f7.name + " is wrong, should be " + c7);
      if (A7.length == 1) {
        var O7 = r7[0], U7 = k7(O7);
        return U7 === w7 ? void 0 : new Error("The type of " + f7.name + " is wrong, should be " + c7);
      } else
        return r7.map(function(we) {
          return s7(we, {
            name: f7.name,
            type: a7(v7)
          }, c7, h7);
        }).filter(function(we) {
          return we;
        })[0];
    }
    function u7(r7, f7) {
      if (f7.length == 1)
        return "[" + r7 + "]";
      if (f7.length > 1) {
        var c7 = f7.slice(1), h7 = c7.reduce(function(v7, b7) {
          return v7 * b7;
        }, 1);
        return "[" + Math.floor(r7 / h7) + "]" + u7(r7 % h7, c7);
      }
    }
    e.subscript = u7;
    function m7(r7, f7, c7) {
      if (!Array.isArray(r7))
        throw new Error("flatternArray only work on array");
      var h7 = r(W(c7), 2), v7 = h7[0], b7 = h7[1];
      return r7.map(function(w7, A7) {
        if (typeof w7 == "boolean")
          w7 = new I.Bool(w7);
        else if (typeof w7 == "number")
          w7 = new I.Int(w7);
        else if (typeof w7 == "bigint")
          w7 = new I.Int(w7);
        else {
          if (Array.isArray(w7))
            return m7(w7, f7 + "[" + A7 + "]", a7(c7));
          if (I.Struct.isStruct(w7))
            return p7(w7, f7 + "[" + A7 + "]");
          if (P.Library.isLibrary(w7))
            return l7(w7, f7 + "[" + A7 + "]");
          w7 = w7;
        }
        return {
          value: w7,
          name: "" + f7 + u7(A7, b7),
          type: v7
        };
      }).flat(1 / 0);
    }
    e.flatternArray = m7;
    function p7(r7, f7) {
      if (I.Struct.isStruct(r7)) {
        var c7 = r7, h7 = c7.getMembers();
        return h7.map(function(v7) {
          var b7 = c7.memberByKey(v7);
          if (I.Struct.isStruct(b7))
            return p7(b7, f7 + "." + v7);
          if (Array.isArray(b7)) {
            var w7 = c7.getMemberAstFinalType(v7);
            return m7(b7, f7 + "." + v7, w7);
          } else
            return b7 = b7, {
              value: b7,
              name: f7 + "." + v7,
              type: b7.type
            };
        }).flat(1 / 0);
      } else
        throw new Error(r7 + " should be struct");
    }
    e.flatternStruct = p7;
    function l7(r7, f7) {
      if (P.Library.isLibrary(r7)) {
        var c7 = r7, h7 = c7.getCtorArgs();
        return c7.getLibraryAst().params.map(function(v7, b7) {
          var w7 = h7[b7];
          return I.Struct.isStruct(w7) ? p7(w7, f7 + "." + v7.name) : Array.isArray(w7) ? m7(w7, f7 + "." + v7.name, v7.type) : P.Library.isLibrary(w7) ? l7(w7, f7 + "." + v7.name) : {
            value: w7,
            name: f7 + "." + v7.name,
            type: v7.type
          };
        }).flat(1 / 0);
      } else
        throw new Error(r7 + " should be library");
    }
    e.flatternLibrary = l7;
    function y7(r7, f7) {
      if (P.Library.isLibrary(r7)) {
        var c7 = r7;
        return c7.getLibraryAst().properties.map(function(h7, v7) {
          var b7 = c7.getProperty(h7.name);
          return I.Struct.isStruct(b7) ? p7(b7, f7 + "." + h7.name) : Array.isArray(b7) ? m7(b7, f7 + "." + h7.name, h7.type) : P.Library.isLibrary(b7) ? y7(b7, f7 + "." + h7.name) : {
            value: b7,
            name: f7 + "." + h7.name,
            type: h7.type
          };
        }).flat(1 / 0);
      } else
        throw new Error(r7 + " should be library");
    }
    e.flatternLibraryState = y7;
    function x7(r7, f7) {
      var c7 = [];
      return r7.forEach(function(h7) {
        var v7 = f7(h7.type);
        E(v7.finalType) ? m7(h7.value, h7.name, v7.finalType).forEach(function(b7) {
          c7.push({
            name: b7.name,
            type: f7(b7.type).finalType,
            value: b7.value
          });
        }) : v7.symbolType === P.SymbolType.Struct ? p7(h7.value, h7.name).forEach(function(b7) {
          c7.push({
            name: b7.name,
            type: f7(b7.type).finalType,
            value: b7.value
          });
        }) : v7.symbolType === P.SymbolType.Library ? l7(h7.value, h7.name).forEach(function(b7) {
          c7.push({
            name: b7.name,
            type: f7(b7.type).finalType,
            value: b7.value
          });
        }) : c7.push({
          name: h7.name,
          type: v7.finalType,
          value: h7.value
        });
      }), c7;
    }
    e.flatternCtorArgs = x7;
    function _7(r7, f7) {
      var c7 = [];
      return r7.forEach(function(h7) {
        var v7 = f7(h7.type), b7 = v7.finalType;
        E(b7) ? m7(h7.value, h7.name, b7).forEach(function(w7) {
          c7.push({
            name: w7.name,
            type: f7(w7.type).finalType,
            value: w7.value
          });
        }) : v7.symbolType === P.SymbolType.Struct ? p7(h7.value, h7.name).forEach(function(w7) {
          c7.push({
            name: w7.name,
            type: f7(w7.type).finalType,
            value: w7.value
          });
        }) : v7.symbolType === P.SymbolType.Library ? y7(h7.value, h7.name).forEach(function(w7) {
          c7.push({
            name: w7.name,
            type: f7(w7.type).finalType,
            value: w7.value
          });
        }) : c7.push({
          name: h7.name,
          type: b7,
          value: h7.value
        });
      }), c7;
    }
    e.flatternStateArgs = _7;
    function F7(r7, f7, c7) {
      var h7 = f7.resolverClass(r7.type), v7 = c7 ? h7.libraryAst.properties : h7.libraryAst.params;
      return v7.map(function(b7) {
        var w7 = f7.resolverType(b7.type);
        return b7.type = w7.finalType, E(b7.type) ? S7({
          name: r7.name + "." + b7.name,
          type: b7.type
        }, f7) : w7.symbolType === P.SymbolType.Struct ? T7({
          name: r7.name + "." + b7.name,
          type: b7.type
        }, f7) : w7.symbolType === P.SymbolType.Library ? F7({
          name: r7.name + "." + b7.name,
          type: b7.type
        }, f7, c7) : {
          value: void 0,
          name: r7.name + "." + b7.name,
          type: b7.type
        };
      }).flat(1 / 0);
    }
    function T7(r7, f7) {
      var c7 = f7.resolverClass(r7.type);
      return c7.structAst.params.map(function(h7) {
        var v7 = f7.resolverType(h7.type);
        return h7.type = v7.finalType, E(h7.type) ? S7({
          name: r7.name + "." + h7.name,
          type: h7.type
        }, f7) : v7.symbolType === P.SymbolType.Struct ? T7({
          name: r7.name + "." + h7.name,
          type: h7.type
        }, f7) : {
          value: void 0,
          name: r7.name + "." + h7.name,
          type: h7.type
        };
      }).flat(1 / 0);
    }
    function S7(r7, f7) {
      var c7 = f7.resolverType(r7.type);
      if (r7.type = c7.finalType, !E(r7.type))
        throw new Error("ParamEntity " + r7.name + " should be array");
      for (var h7 = r(W(r7.type), 2), v7 = h7[0], b7 = h7[1], w7 = [], A7 = 0; A7 < b7[0]; A7++)
        b7.length > 1 ? S7({
          name: r7.name + "[" + A7 + "]",
          type: a7(r7.type)
        }, f7).forEach(function(j7) {
          w7.push(j7);
        }) : c7.symbolType === P.SymbolType.Struct ? T7({
          name: r7.name + "[" + A7 + "]",
          type: v7
        }, f7).forEach(function(j7) {
          w7.push(j7);
        }) : c7.symbolType === P.SymbolType.Library ? F7({
          name: r7.name + "[" + A7 + "]",
          type: v7
        }, f7, !0).forEach(function(j7) {
          w7.push(j7);
        }) : w7.push({
          value: void 0,
          name: "" + r7.name + u7(A7, b7),
          type: v7
        });
      return w7.flat(1 / 0);
    }
    function Y7(r7, f7) {
      var c7 = [];
      return r7.forEach(function(h7) {
        var v7 = f7.resolverType(h7.type);
        h7.type = v7.finalType, E(h7.type) ? S7(h7, f7).forEach(function(b7) {
          c7.push({
            name: b7.name,
            type: b7.type,
            value: b7.value
          });
        }) : v7.symbolType === P.SymbolType.Struct ? T7(h7, f7).forEach(function(b7) {
          c7.push({
            name: b7.name,
            type: b7.type,
            value: b7.value
          });
        }) : v7.symbolType === P.SymbolType.Library ? F7(h7, f7, !0).forEach(function(b7) {
          c7.push({
            name: b7.name,
            type: b7.type,
            value: b7.value
          });
        }) : c7.push({
          name: h7.name,
          type: h7.type,
          value: void 0
        });
      }), c7;
    }
    e.flatternParams = Y7;
    function k7(r7) {
      if (r7 instanceof I.ScryptType) {
        var f7 = r7.finalType;
        return f7;
      }
      var c7 = typeof r7;
      return c7 === "boolean" ? "bool" : c7 === "number" || c7 === "bigint" ? "int" : c7 === "string" ? new I.Int(r7).finalType : typeof r7;
    }
    e.typeOfArg = k7;
    function E7(r7, f7) {
      var c7 = "";
      return b.readFileSync(r7, "utf8").split(/\r?\n/).every(function(h7, v7) {
        return v7 === f7 - 1 ? (c7 = h7, !1) : !0;
      }), c7;
    }
    e.readFileByLine = E7;
    function $7(r7) {
      return Object.keys(r7).length === 0 && r7.constructor === Object;
    }
    e.isEmpty = $7;
    function H7(r7, f7) {
      if (console.log("Compiling contract " + r7 + " ..."), f7 = Object.assign({
        out: l.join(__dirname, "../out"),
        sourceMap: !1,
        desc: !1
      }, f7), !b.existsSync(r7))
        throw "file " + r7 + " not exists!";
      b.existsSync(f7.out) || b.mkdirSync(f7.out);
      var c7 = I.compile({ path: r7 }, {
        desc: f7.desc,
        outputDir: f7.out,
        sourceMap: f7.sourceMap,
        cmdPrefix: I.findCompiler()
      });
      return c7;
    }
    e.compileContract = H7;
    function P7(r7, f7) {
      if (console.log("compiling contract " + r7 + " ..."), f7 = Object.assign({
        out: l.join(__dirname, "..", "out"),
        sourceMap: !1,
        desc: !1
      }, f7), !b.existsSync(r7))
        throw "file " + r7 + " not exists!";
      return b.existsSync(f7.out) || b.mkdirSync(f7.out), k.compileAsync({ path: r7 }, {
        desc: f7.desc,
        outputDir: f7.out,
        hex: !0,
        cmdPrefix: I.findCompiler()
      });
    }
    e.compileContractAsync = P7;
    function pe(r7, f7) {
      return new (Function.prototype.bind.apply(r7, [null].concat(f7)))();
    }
    e.newCall = pe;
    function q7(r7, f7, c7, h7, v7, b7, w7) {
      if (!v7)
        return "";
      var A7 = {
        type: "scrypt",
        request: "launch",
        internalConsoleOptions: "openOnSessionStart",
        name: h7,
        program: v7,
        constructorArgs: r7,
        pubFunc: c7,
        pubFuncArgs: f7
      }, j7 = {};
      if (!$7(b7)) {
        var O7 = b7.tx || "", U7 = b7.inputIndex || 0, we = b7.inputSatoshis || 0;
        O7 && Object.assign(j7, { hex: O7.toString(), inputIndex: U7, inputSatoshis: we }), b7.opReturn ? Object.assign(j7, { opReturn: b7.opReturn }) : b7.opReturnHex && Object.assign(j7, { opReturnHex: b7.opReturnHex });
      }
      $7(w7) || Object.assign(A7, { asmArgs: w7 }), $7(j7) || Object.assign(A7, { txContext: j7 });
      var Be = {
        version: "0.2.0",
        configurations: [A7]
      }, f0 = JSON.stringify(Be, function(ra, un) {
        return typeof un == "bigint" ? un.toString() : un;
      }, 2);
      if ($()) {
        var e0 = h7 + "-launch.json", E5 = l.join(b.mkdtempSync("" + v.tmpdir() + l.sep + "sCrypt."), e0);
        return b.writeFileSync(E5, f0), X(E5);
      } else
        console.error(c7 + "() call fail, see launch.json", f0);
    }
    e.genLaunchConfigFile = q7;
    function N7(r7) {
      var f7 = void 0;
      return r7.expr.nodeType === "IntLiteral" ? f7 = r7.expr.value.toString(10) : r7.expr.nodeType === "BoolLiteral" && (f7 = r7.expr.value), r7.expr.nodeType === "BytesLiteral" && (f7 = "b'" + r7.expr.value.map(function(c7) {
        return Z(c7);
      }).join("") + "'"), r7.expr.nodeType === "FunctionCall" && ([
        I.VariableType.PUBKEY,
        I.VariableType.RIPEMD160,
        I.VariableType.PUBKEYHASH,
        I.VariableType.SIG,
        I.VariableType.SIGHASHTYPE,
        I.VariableType.OPCODETYPE,
        I.VariableType.SIGHASHPREIMAGE,
        I.VariableType.SHA1,
        I.VariableType.SHA256
      ].includes(r7.expr.name) ? f7 = "b'" + r7.expr.params[0].value.map(function(c7) {
        return Z(c7);
      }).join("") + "'" : r7.expr.name === I.VariableType.PRIVKEY && (f7 = r7.expr.params[0].value.toString(10))), f7;
    }
    e.resolveConstValue = N7;
    function xe(r7, f7, c7, h7, v7, b7) {
      var w7 = R7(f7, v7, r7);
      return E(w7.finalType) ? {
        finalType: K7(c7, w7.finalType, h7),
        symbolType: w7.symbolType
      } : w7;
    }
    e.resolveType = xe;
    function K7(r7, f7, c7) {
      if (E(f7)) {
        var h7 = r(D(f7), 2), v7 = h7[0], b7 = h7[1], w7 = b7.map(function(A7) {
          if (/^(\d)+$/.test(A7))
            return parseInt(A7);
          var j7 = A7.indexOf(".") > 0 ? A7 : r7 + "." + A7, O7 = me(c7, j7);
          return O7 ? O7.value : A7;
        });
        return e7(v7, w7);
      }
      return f7;
    }
    function R7(r7, f7, c7) {
      if (E(c7)) {
        var h7 = r(D(c7), 2), v7 = h7[0], b7 = h7[1], w7 = R7(r7, f7, v7);
        if (E(w7.finalType)) {
          var A7 = r(D(w7.finalType), 2), j7 = A7[0], O7 = A7[1];
          return {
            finalType: e7(j7, b7.concat(O7)),
            symbolType: w7.symbolType
          };
        }
        return {
          finalType: e7(w7.finalType, b7),
          symbolType: w7.symbolType
        };
      } else if (Le(c7)) {
        var U7 = r(Ke(c7), 2), we = U7[0], Be = U7[1], f0 = R7(r7, f7, we), e0 = Be.map(function(ra) {
          return R7(r7, f7, ra).finalType;
        });
        return {
          finalType: o7(f0.finalType, e0),
          symbolType: f0.symbolType
        };
      }
      var E5 = f7.find(function(ra) {
        return ra.name === c7;
      });
      return E5 ? R7(r7, f7, E5.type) : r7[c7] ? r7[c7] : P.BasicScryptType[c7] ? {
        finalType: c7,
        symbolType: P.SymbolType.BaseType
      } : {
        finalType: c7,
        symbolType: P.SymbolType.Unknown
      };
    }
    function be(r7) {
      var f7 = (r7 === void 0 ? {} : r7).onlyFirst, c7 = f7 === void 0 ? !1 : f7, h7 = [
        "[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:[a-zA-Z\\d]*(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)",
        "(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))"
      ].join("|");
      return new RegExp(h7, c7 ? void 0 : "g");
    }
    e.ansiRegex = be;
    function G7(r7) {
      if (typeof r7 != "string")
        throw new TypeError("Expected a `string`, got `" + typeof r7 + "`");
      return r7.replace(be(), "");
    }
    e.stripAnsi = G7;
    function M7(r7, f7, c7) {
      var h7 = r7.resolverClass(f7.type), v7 = /* @__PURE__ */ Object.create({});
      return h7.structAst.params.forEach(function(b7) {
        var w7, A7, j7, O7, U7 = r7.resolverType(b7.type);
        E(U7.finalType) ? Object.assign(v7, (w7 = {}, w7[b7.name] = ne(r7, U7.finalType, f7.name + "." + b7.name, c7), w7)) : U7.symbolType === P.SymbolType.Struct ? Object.assign(v7, (A7 = {}, A7[b7.name] = M7(r7, { name: f7.name + "." + b7.name, type: b7.type }, c7), A7)) : U7.symbolType === P.SymbolType.Library ? Object.assign(v7, (j7 = {}, j7[b7.name] = se(r7, { name: f7.name + "." + b7.name, type: b7.type }, c7), j7)) : Object.assign(v7, (O7 = {}, O7[b7.name] = d(U7.finalType, c7.get("<" + f7.name + "." + b7.name + ">")), O7));
      }), new h7(v7);
    }
    e.createStruct = M7;
    function se(r7, f7, c7) {
      var h7 = r7.resolverClass(f7.type), v7 = h7.libraryAst.params.map(function(b7) {
        var w7 = r7.resolverType(b7.type);
        return E(w7.finalType) ? ne(r7, w7.finalType, f7.name + "." + b7.name, c7) : w7.symbolType === P.SymbolType.Struct ? M7(r7, { name: f7.name + "." + b7.name, type: b7.type }, c7) : w7.symbolType === P.SymbolType.Library ? se(r7, { name: f7.name + "." + b7.name, type: b7.type }, c7) : d(w7.finalType, c7.get("<" + f7.name + "." + b7.name + ">"));
      });
      return new (h7.bind.apply(h7, f([void 0], v7)))();
    }
    e.createLibrary = se;
    function V7(r7, f7, c7) {
      var h7 = r7.resolverClass(f7.type), v7 = {};
      return h7.libraryAst.properties.forEach(function(b7) {
        var w7, A7, j7, O7, U7 = r7.resolverType(b7.type);
        if (E(U7.finalType))
          Object.assign(v7, (w7 = {}, w7[b7.name] = ne(r7, b7.type, f7.name + "." + b7.name, c7), w7));
        else if (U7.symbolType === P.SymbolType.Struct)
          Object.assign(v7, (A7 = {}, A7[b7.name] = M7(r7, { name: f7.name + "." + b7.name, type: b7.type }, c7), A7));
        else if (U7.symbolType === P.SymbolType.Library) {
          var we = B7(r7, { name: f7.name + "." + b7.name, type: b7.type });
          we.setProperties(V7(r7, { name: f7.name + "." + b7.name, type: b7.type }, c7)), Object.assign(v7, (j7 = {}, j7[b7.name] = we, j7));
        } else
          Object.assign(v7, (O7 = {}, O7[b7.name] = d(U7.finalType, c7.get("<" + f7.name + "." + b7.name + ">")), O7));
      }), v7;
    }
    e.createLibraryProperties = V7;
    function B7(r7, f7) {
      var c7 = F7(f7, r7, !1), h7 = /* @__PURE__ */ new Map();
      return c7.forEach(function(v7) {
        if (v7.type === I.VariableType.INT || v7.type === I.VariableType.PRIVKEY)
          h7.set("<" + v7.name + ">", "00");
        else if (v7.type === I.VariableType.BOOL)
          h7.set("<" + v7.name + ">", "51");
        else if (v7.type === I.VariableType.BYTES || v7.type === I.VariableType.PUBKEY || v7.type === I.VariableType.SIG || v7.type === I.VariableType.RIPEMD160 || v7.type === I.VariableType.SHA1 || v7.type === I.VariableType.SHA256 || v7.type === I.VariableType.SIGHASHTYPE || v7.type === I.VariableType.SIGHASHPREIMAGE || v7.type === I.VariableType.OPCODETYPE)
          h7.set("<" + v7.name + ">", "0100");
        else
          throw new Error("param " + v7.name + " has unknown type " + v7.type);
      }), se(r7, f7, h7);
    }
    e.createDefaultLibrary = B7;
    function ne(r7, f7, c7, h7) {
      var v7 = [], b7 = r(W(f7), 2), w7 = b7[0], A7 = b7[1], j7 = A7[0];
      if (A7.length === 1)
        for (var O7 = 0; O7 < j7; O7++) {
          var U7 = r7.resolverType(w7);
          U7.symbolType === P.SymbolType.Struct ? v7.push(M7(r7, {
            name: c7 + "[" + O7 + "]",
            type: U7.finalType
          }, h7)) : U7.symbolType === P.SymbolType.Library ? v7.push(se(r7, {
            name: c7 + "[" + O7 + "]",
            type: U7.finalType
          }, h7)) : v7.push(d(U7.finalType, h7.get("<" + c7 + "[" + O7 + "]>")));
        }
      else
        for (var O7 = 0; O7 < j7; O7++) {
          var we = r7.resolverType(w7).finalType, Be = [
            we,
            A7.slice(1).map(function(e0) {
              return "[" + e0 + "]";
            }).join("")
          ].join("");
          v7.push(ne(r7, Be, c7 + "[" + O7 + "]", h7));
        }
      return v7;
    }
    e.createArray = ne;
    function z7(r7) {
      if (Array.isArray(r7)) {
        var f7 = r7;
        return "[" + f7.map(function(c7) {
          return z7(c7);
        }) + "]";
      } else
        return r7 instanceof I.ScryptType ? r7.toLiteral() : r7;
    }
    e.toLiteral = z7;
    function C7(r7) {
      if (typeof r7 == "number" && !isNaN(r7))
        return Number.isInteger(r7);
      if (typeof r7 == "bigint")
        return !0;
      if (typeof r7 == "string") {
        var f7 = /^(0x[0-9a-fA-F]+)$/.exec(r7);
        return !!(f7 || (f7 = /^(-?\d+)$/.exec(r7), f7));
      }
      return !1;
    }
    e.isInteger = C7;
    function me(r7, f7) {
      return r7.find(function(c7) {
        return c7.const === !0 && c7.name === f7;
      });
    }
    e.findConstStatic = me;
    function W7(r7, f7) {
      return r7.find(function(c7) {
        return c7.name === f7;
      });
    }
    e.findStatic = W7;
    function D7(r7) {
      return r7.replace(/[-/\\^$*+?.()|[\]{}]/g, "\\$&");
    }
    var _e = 0;
    function Z7(r7, f7, c7) {
      var h7, v7, b7, w7, A7 = c7;
      try {
        for (var j7 = i(r7.entries()), O7 = j7.next(); !O7.done; O7 = j7.next()) {
          var U7 = O7.value, we = U7[0], Be = U7[1];
          A7 = A7.replace(we, Be);
        }
      } catch (ra) {
        h7 = { error: ra };
      } finally {
        try {
          O7 && !O7.done && (v7 = j7.return) && v7.call(j7);
        } finally {
          if (h7)
            throw h7.error;
        }
      }
      try {
        for (var f0 = i(f7.entries()), e0 = f0.next(); !e0.done; e0 = f0.next()) {
          var U7 = e0.value, E5 = U7[0], Be = U7[1];
          A7 = A7.replace(new RegExp("" + D7(E5), "g"), Be);
        }
      } catch (ra) {
        b7 = { error: ra };
      } finally {
        try {
          e0 && !e0.done && (w7 = f0.return) && w7.call(f0);
        } finally {
          if (b7)
            throw b7.error;
        }
      }
      return o.Script.fromHex(A7);
    }
    e.buildContractCode = Z7;
    function L7(r7, f7, c7) {
      var h7, v7, b7 = "", w7 = 0, A7 = _7(r7, c7);
      if (A7.length <= 0)
        throw new Error("no state property found, buildContractState only used for state contract");
      b7 += "" + I.serializeSupportedParamType(f7);
      try {
        for (var j7 = i(A7), O7 = j7.next(); !O7.done; O7 = j7.next()) {
          var U7 = O7.value;
          U7.type == I.VariableType.BOOL ? b7 += "" + I.serializeSupportedParamType(U7.value) : (U7.type === I.VariableType.INT || U7.type === I.VariableType.BYTES || U7.type === I.VariableType.PUBKEY || U7.type === I.VariableType.PRIVKEY || U7.type === I.VariableType.PUBKEY || U7.type === I.VariableType.SIG || U7.type === I.VariableType.RIPEMD160 || U7.type === I.VariableType.SHA1 || U7.type === I.VariableType.SHA256 || U7.type === I.VariableType.SIGHASHTYPE || U7.type === I.VariableType.SIGHASHPREIMAGE || U7.type === I.VariableType.OPCODETYPE) && (b7 += "" + o.Script.fromASM(I.serializeSupportedParamType(U7.value)).toHex());
        }
      } catch (we) {
        h7 = { error: we };
      } finally {
        try {
          O7 && !O7.done && (v7 = j7.return) && v7.call(j7);
        } finally {
          if (h7)
            throw h7.error;
        }
      }
      return b7 && (w7 = b7.length / 2, b7 += t7(w7, 4) + t7(_e, 1), b7);
    }
    e.buildContractState = L7;
    function ve(r7) {
      var f7 = Y7(r7.stateProps, r7.resolver), c7 = /* @__PURE__ */ new Map();
      return f7.forEach(function(h7) {
        if (h7.type === I.VariableType.INT || h7.type === I.VariableType.PRIVKEY)
          c7.set("<" + h7.name + ">", "00");
        else if (h7.type === I.VariableType.BOOL)
          c7.set("<" + h7.name + ">", "51");
        else if (h7.type === I.VariableType.BYTES || h7.type === I.VariableType.PUBKEY || h7.type === I.VariableType.SIG || h7.type === I.VariableType.RIPEMD160 || h7.type === I.VariableType.SHA1 || h7.type === I.VariableType.SHA256 || h7.type === I.VariableType.SIGHASHTYPE || h7.type === I.VariableType.SIGHASHPREIMAGE || h7.type === I.VariableType.OPCODETYPE)
          c7.set("<" + h7.name + ">", "0100");
        else
          throw new Error("param " + h7.name + " has unknown type " + h7.type);
      }), r7.stateProps.map(function(h7) {
        return We(r7.resolver, Object.assign(h7, {
          value: void 0
        }), c7);
      });
    }
    e.buildDefaultStateProps = ve;
    function J7(r7) {
      try {
        var f7 = r7.readUInt8(), c7, h7 = void 0;
        return f7 == 0 ? h7 = "" : f7 > 0 && f7 < o.Opcode.OP_PUSHDATA1 ? (c7 = f7, h7 = r7.read(c7).toString("hex")) : f7 === o.Opcode.OP_PUSHDATA1 ? (c7 = r7.readUInt8(), h7 = r7.read(c7).toString("hex")) : f7 === o.Opcode.OP_PUSHDATA2 ? (c7 = r7.readUInt16LE(), h7 = r7.read(c7).toString("hex")) : f7 === o.Opcode.OP_PUSHDATA4 ? (c7 = r7.readUInt32LE(), h7 = r7.read(c7).toString("hex")) : h7 = t7(f7 - 80, 1), {
          data: h7,
          opcodenum: f7
        };
      } catch (v7) {
        throw new Error("readBytes: " + v7);
      }
    }
    e.readBytes = J7;
    function ee(r7, f7, c7) {
      var h7, v7 = r7.resolverType(f7.type);
      return E(v7.finalType) ? h7 = ne(r7, f7.type, f7.name, c7) : v7.symbolType === P.SymbolType.Struct ? h7 = M7(r7, f7, c7) : v7.symbolType === P.SymbolType.Library ? h7 = se(r7, f7, c7) : h7 = d(f7.type, c7.get("<" + f7.name + ">")), f7.value = h7, f7;
    }
    e.deserializeArgfromHex = ee;
    function We(r7, f7, c7) {
      var h7, v7 = r7.resolverType(f7.type);
      if (E(v7.finalType))
        h7 = ne(r7, f7.type, f7.name, c7);
      else if (v7.symbolType === P.SymbolType.Struct)
        h7 = M7(r7, f7, c7);
      else if (v7.symbolType === P.SymbolType.Library) {
        h7 = B7(r7, f7);
        var b7 = V7(r7, f7, c7);
        h7.setProperties(b7);
      } else
        h7 = d(f7.type, c7.get("<" + f7.name + ">"));
      return f7.value = h7, f7;
    }
    e.deserializeArgfromState = We;
    function Ze(r7) {
      if (Array.isArray(r7))
        return r7.map(function(h7) {
          return Ze(h7);
        }).flat(1 / 0);
      if (I.Struct.isStruct(r7)) {
        var f7 = r7, c7 = f7.getMembers();
        return c7.map(function(h7) {
          var v7 = f7.memberByKey(h7);
          return Ze(v7);
        }).flat(1 / 0);
      } else {
        if (typeof r7 == "boolean")
          return [new I.Bool(r7)];
        if (typeof r7 == "number" || typeof r7 == "bigint" || typeof r7 == "string")
          return [new I.Int(r7)];
        if (r7 instanceof I.ScryptType)
          return [r7];
      }
    }
    function Me(r7) {
      var f7 = Ze(r7);
      if (f7.length === 1) {
        var c7 = f7[0].serialize();
        return (f7[0] instanceof I.Bool || f7[0] instanceof I.Int) && c7 === "00" && (c7 = ""), o.crypto.Hash.sha256(Q.Buffer.from(c7, "hex")).toString("hex");
      } else {
        var h7 = f7.map(function(v7) {
          var b7 = v7.serialize();
          return (v7 instanceof I.Bool || v7 instanceof I.Int) && b7 === "00" && (b7 = ""), o.crypto.Hash.sha256(Q.Buffer.from(b7, "hex")).toString("hex");
        }).join("");
        return o.crypto.Hash.sha256(Q.Buffer.from(h7, "hex")).toString("hex");
      }
    }
    e.flattenSha256 = Me;
    function Ye(r7) {
      return new Map(f(r7.entries()).sort(function(f7, c7) {
        return M.fromSM(Q.Buffer.from(Me(f7[0]), "hex"), {
          endian: "little"
        }).cmp(M.fromSM(Q.Buffer.from(Me(c7[0]), "hex"), {
          endian: "little"
        }));
      }));
    }
    e.sortmap = Ye;
    function Xe(r7) {
      return new Set(f(r7.keys()).sort(function(f7, c7) {
        return M.fromSM(Q.Buffer.from(Me(f7), "hex"), {
          endian: "little"
        }).cmp(M.fromSM(Q.Buffer.from(Me(c7), "hex"), {
          endian: "little"
        }));
      }));
    }
    e.sortset = Xe;
    function p0(r7, f7) {
      var c7, h7, v7, b7;
      if (r7 instanceof Map) {
        var w7 = Ye(r7), A7 = [];
        try {
          for (var j7 = i(w7.entries()), O7 = j7.next(); !O7.done; O7 = j7.next()) {
            var U7 = O7.value;
            A7.push(U7);
          }
        } catch (e0) {
          c7 = { error: e0 };
        } finally {
          try {
            O7 && !O7.done && (h7 = j7.return) && h7.call(j7);
          } finally {
            if (c7)
              throw c7.error;
          }
        }
        return A7.findIndex(function(e0) {
          return e0[0] === f7;
        });
      } else {
        var we = Xe(r7), A7 = [];
        try {
          for (var Be = i(we.keys()), f0 = Be.next(); !f0.done; f0 = Be.next()) {
            var U7 = f0.value;
            A7.push(U7);
          }
        } catch (E5) {
          v7 = { error: E5 };
        } finally {
          try {
            f0 && !f0.done && (b7 = Be.return) && b7.call(Be);
          } finally {
            if (v7)
              throw v7.error;
          }
        }
        return A7.findIndex(function(E5) {
          return E5 === f7;
        });
      }
    }
    e.findKeyIndex = p0;
    function Je(r7) {
      var f7, c7, h7, v7, b7 = "";
      if (r7 instanceof Map) {
        var w7 = Ye(r7);
        try {
          for (var A7 = i(w7.entries()), j7 = A7.next(); !j7.done; j7 = A7.next()) {
            var O7 = j7.value;
            b7 += Me(O7[0]) + Me(O7[1]);
          }
        } catch (e0) {
          f7 = { error: e0 };
        } finally {
          try {
            j7 && !j7.done && (c7 = A7.return) && c7.call(A7);
          } finally {
            if (f7)
              throw f7.error;
          }
        }
      } else {
        var U7 = Xe(r7);
        try {
          for (var we = i(U7.keys()), Be = we.next(); !Be.done; Be = we.next()) {
            var f0 = Be.value;
            b7 += Me(f0);
          }
        } catch (e0) {
          h7 = { error: e0 };
        } finally {
          try {
            Be && !Be.done && (v7 = we.return) && v7.call(we);
          } finally {
            if (h7)
              throw h7.error;
          }
        }
      }
      return new I.Bytes(b7);
    }
    e.toData = Je;
    function h0(r7) {
      var f7 = Je(r7), c7 = new P.HashedMap(f7);
      return c7;
    }
    e.toHashedMap = h0;
    function b0(r7) {
      var f7 = Je(r7), c7 = new P.HashedSet(f7);
      return c7;
    }
    e.toHashedSet = b0;
    function Le(r7) {
      return /^([\w]+)<([\w,[\]\s<>]+)>$/.test(r7);
    }
    e.isGenericType = Le;
    function Ke(r7) {
      if (Le(r7)) {
        var f7 = r7.match(/([\w]+)<([\w,[\]<>\s]+)>$/);
        if (f7) {
          for (var c7 = f7[1], h7 = [], v7 = [], b7 = "", w7 = 0; w7 < f7[2].length; w7++) {
            var A7 = f7[2].charAt(w7);
            if (A7 === "<" || A7 === "[")
              v7.push(A7);
            else if (A7 === ">" || A7 === "]")
              v7.pop();
            else if (A7 === "," && v7.length === 0) {
              h7.push(b7.trim()), b7 = "";
              continue;
            }
            b7 += A7;
          }
          return h7.push(b7.trim()), [c7, h7];
        }
      }
      throw new Error('"' + r7 + '" is not generic type');
    }
    e.parseGenericType = Ke;
    function m0(r7, f7) {
      return o.crypto.Hash.sha256ripemd160(Q.Buffer.from(r7, f7 || "hex")).toString("hex");
    }
    e.hash160 = m0;
    function Qe(r7, f7) {
      return o.crypto.Hash.sha256(Q.Buffer.from(r7, f7 || "hex")).toString("hex");
    }
    e.sha256 = Qe;
    function v0(r7, f7) {
      return Qe(Qe(r7, f7), f7);
    }
    e.hash256 = v0;
    var y0 = /(\[((!\[[^\]]*?\]\(\s*)([^\s()]+?)\s*\)\]|(?:\\\]|[^\]])*\])\(\s*)(([^\s()]|\([^\s()]*?\))+)\s*(".*?")?\)/g;
    function g0(r7) {
      var f7, c7;
      try {
        for (var h7 = i(r7.matchAll(y0)), v7 = h7.next(); !v7.done; v7 = h7.next()) {
          var b7 = v7.value;
          if (b7[5] && b7[5].startsWith("scryptlaunch")) {
            var w7 = b7[5].replace(/scryptlaunch/, "file");
            return JSON.parse(b.readFileSync(i7(w7)).toString());
          }
        }
      } catch (A7) {
        f7 = { error: A7 };
      } finally {
        try {
          v7 && !v7.done && (c7 = h7.return) && c7.call(h7);
        } finally {
          if (f7)
            throw f7.error;
        }
      }
    }
    e.readLaunchJson = g0;
    function P0(r7) {
      return r7.length / 2;
    }
    e.len = P0;
    function q0(r7, f7) {
      var c7 = t7(r7, f7 + 1);
      return c7.slice(0, P0(c7) - 1);
    }
    e.toLEUnsigned = q0;
    function It(r7) {
      var f7 = P0(r7), c7 = "";
      return f7 < 253 ? c7 = q0(f7, 1) : f7 < 65536 ? c7 = "fd" + q0(f7, 2) : f7 < 4294967296 ? c7 = "fe" + q0(f7, 4) : f7 < 18446744073709552e3 && (c7 = "ff" + q0(f7, 8)), c7 + r7;
    }
    e.writeVarint = It;
    function Hx(r7) {
      return o.Script.fromASM(["OP_FALSE", "OP_RETURN", r7].join(" "));
    }
    e.buildOpreturnScript = Hx;
    function Ux(r7) {
      return o.Script.fromASM(["OP_DUP", "OP_HASH160", r7.toASM(), "OP_EQUALVERIFY", "OP_CHECKSIG"].join(" "));
    }
    e.buildPublicKeyHashScript = Ux;
    function $x(r7, f7) {
      var c7 = Object.getPrototypeOf(r7).constructor.abi, h7 = c7.filter(function(U7) {
        return U7.type === "function";
      }), v7 = h7.length;
      if (v7 === 1)
        return h7[0];
      var b7 = o.Script.fromHex(f7), w7 = b7.toASM(), A7 = w7.substr(w7.lastIndexOf(" ") + 1), j7 = L(A7), O7 = c7.find(function(U7) {
        return U7.index === j7;
      });
      if (!O7)
        throw new Error("the raw unlocking script cannot match the contract " + r7.contractName);
      return O7;
    }
    e.parseAbiFromUnlockingScript = $x;
    function La(r7) {
      if (typeof r7 == "number" || typeof r7 == "bigint" || typeof r7 == "string")
        return new I.Int(r7);
      if (typeof r7 == "boolean")
        return new I.Bool(r7);
      if (r7 instanceof I.ScryptType)
        return r7;
      throw r7 + " cannot be convert to ScryptType";
    }
    e.toScryptType = La;
    function kc(r7) {
      return r7.map(function(f7) {
        return Array.isArray(f7) ? kc(f7) : La(f7);
      });
    }
    e.arrayToScryptType = kc;
    function Oc(r7) {
      return r7.map(function(f7) {
        return Array.isArray(f7) ? Oc(f7) : La(f7).toJSON();
      });
    }
    e.arrayToJson = Oc;
    function Pc(r7) {
      return r7.map(function(f7) {
        return Array.isArray(f7) ? Pc(f7) : La(f7).clone();
      });
    }
    e.cloneArray = Pc;
    function Mc(r7) {
      if (Array.isArray(r7)) {
        if (r7.length === 0)
          throw new Error("cannot inferr type from empty array");
        var f7 = r7[0];
        if (Array.isArray(f7)) {
          if (!r7.every(function(w7) {
            return Array.isArray(w7) && w7.length === f7.length;
          }))
            throw new Error("cannot inferr type from [" + r7 + "] , not all length of element are the same");
          var c7 = r(W(Mc(f7)), 2), h7 = c7[0], v7 = c7[1];
          return e7(h7, [r7.length].concat(v7));
        } else {
          var b7 = k7(f7);
          if (!r7.every(function(w7) {
            return k7(w7) === b7;
          }))
            throw new Error("cannot inferr type from [" + r7 + "] , not all element types are the same");
          return La(r7[0]).finalType + "[" + r7.length + "]";
        }
      } else
        return La(r7).finalType;
    }
    e.inferrType = Mc;
    function jx(r7, f7) {
      if (Object.keys(r7).length > 0) {
        if (Le(f7)) {
          var c7 = r(Ke(f7), 2), h7 = c7[0], v7 = c7[1];
          return o7(h7, v7.map(function(j7) {
            return r7[j7] || j7;
          }));
        }
        if (E(f7)) {
          var b7 = r(D(f7), 2), w7 = b7[0], A7 = b7[1];
          return e7(w7, A7.map(function(j7) {
            return r7[j7] || j7;
          }));
        }
        return r7[f7] || f7;
      }
      return f7;
    }
    e.resolveGenericType = jx;
    function Vx(r7) {
      return "[" + r7.params.map(function(f7) {
        return f7.type;
      }).join(",") + "]";
    }
    e.librarySign = Vx;
    function zx(r7) {
      return "" + JSON.stringify(r7.params.reduce(function(f7, c7) {
        var h7;
        return Object.assign(f7, (h7 = {}, h7[c7.name] = c7.type, h7));
      }, {}), null, 4);
    }
    e.structSign = zx;
    function Rc(r7) {
      var f7 = r7.map(function(c7) {
        return Array.isArray(c7) ? Rc(c7) : La(c7).toLiteral();
      }).join(",");
      return "[" + f7 + "]";
    }
    e.arrayToLiteral = Rc;
    function qx(r7) {
      return r7.params.length === r7.properties.length && r7.params.every(function(f7, c7) {
        return f7.name === r7.properties[c7].name && f7.type === r7.properties[c7].type;
      });
    }
    e.canAssignProperty = qx;
    function Kx(r7) {
      if (typeof r7 == "number" || typeof r7 == "bigint")
        return r7;
      if (typeof r7 == "string")
        if (r7.startsWith("0x")) {
          var f7 = new M(r7.substr(2), 16);
          return f7.toNumber();
        } else {
          var f7 = new M(r7);
          return f7.toNumber();
        }
    }
    e.int2Number = Kx;
    function Gx(r7, f7) {
      for (var c7 = r7.serialize().length / 2, h7 = f7.serialize().length / 2, v7 = Math.max(c7, h7), b7 = Q.Buffer.from(t7(r7.toNumber(), v7), "hex"), w7 = Q.Buffer.from(t7(f7.toNumber(), v7), "hex"), A7 = 0; A7 < b7.length; A7++)
        b7[A7] &= w7[A7];
      return new I.Int(H(b7));
    }
    e.and = Gx;
    function Wx(r7, f7) {
      for (var c7 = r7.serialize().length / 2, h7 = f7.serialize().length / 2, v7 = Math.max(c7, h7), b7 = Q.Buffer.from(t7(r7.toNumber(), v7), "hex"), w7 = Q.Buffer.from(t7(f7.toNumber(), v7), "hex"), A7 = 0; A7 < b7.length; A7++)
        b7[A7] |= w7[A7];
      return new I.Int(H(b7));
    }
    e.or = Wx;
    function Zx(r7, f7) {
      for (var c7 = r7.serialize().length / 2, h7 = f7.serialize().length / 2, v7 = Math.max(c7, h7), b7 = Q.Buffer.from(t7(r7.toNumber(), v7), "hex"), w7 = Q.Buffer.from(t7(f7.toNumber(), v7), "hex"), A7 = 0; A7 < b7.length; A7++)
        b7[A7] ^= w7[A7];
      return new I.Int(H(b7));
    }
    e.xor = Zx;
    function Yx(r7) {
      if (r7.toNumber() === 0)
        return r7;
      for (var f7 = r7.serialize().length / 2, c7 = Q.Buffer.from(t7(r7.toNumber(), f7), "hex"), h7 = 0; h7 < c7.length; h7++)
        c7[h7] = ~c7[h7];
      return new I.Int(H(c7));
    }
    e.invert = Yx;
    function Xx(r7) {
      return t(this, void 0, void 0, function() {
        return a(this, function(f7) {
          return [2, new Promise(function(c7, h7) {
            m.parseChunked(b.createReadStream(r7)).then(function(v7) {
              c7(v7);
            }).catch(function(v7) {
              h7(v7);
            });
          })];
        });
      });
    }
    e.JSONParser = Xx;
    function Jx(r7) {
      return JSON.parse(b.readFileSync(r7, "utf8"));
    }
    e.JSONParserSync = Jx;
    function Qx(r7, f7) {
      return t(this, void 0, void 0, function() {
        return a(this, function(c7) {
          return [2, new Promise(function(h7, v7) {
            m.stringifyStream(f7).pipe(b.createWriteStream(r7)).on("finish", function() {
              h7(!0);
            }).on("error", function(b7) {
              v7(b7);
            });
          })];
        });
      });
    }
    e.JSONStringify = Qx;
    function e_(r7, f7) {
      for (var c7 = x.decode(f7.mappings), h7 = 0; h7 < c7[0].length; h7++) {
        var v7 = c7[0][h7];
        if (!(v7[0] <= r7))
          return c7[0][h7 - 1];
      }
      return c7[0][c7[0].length - 1];
    }
    e.findSrcInfoV2 = e_;
    function t_(r7, f7) {
      for (; --f7 > 0; )
        if (r7[f7].pos && r7[f7].pos.file !== "std" && r7[f7].pos.line > 0)
          return r7[f7];
    }
    e.findSrcInfoV1 = t_;
    function a_(r7, f7) {
      var c7 = f7.substr(f7.length - 10, 10);
      H(c7.substr(c7.length - 2, 2));
      var h7 = H(c7.substr(0, 8)), v7 = f7.substr(f7.length - 10 - h7 * 2, h7 * 2), b7 = new o.encoding.BufferReader(v7), w7 = b7.readUInt8(), A7 = w7 == 1, j7 = /* @__PURE__ */ new Map(), O7 = Y7(r7.stateProps, r7.resolver);
      return O7.forEach(function(U7) {
        if (U7.type === I.VariableType.BOOL) {
          var we = b7.readUInt8();
          j7.set("<" + U7.name + ">", we === 1 ? "51" : "00");
        } else {
          var Be = J7(b7).data;
          U7.type === I.VariableType.INT || U7.type === I.VariableType.PRIVKEY ? j7.set("<" + U7.name + ">", new I.Int(H(Be)).toHex()) : j7.set("<" + U7.name + ">", o.Script.fromASM(Be).toHex());
        }
      }), [
        A7,
        r7.stateProps.map(function(U7) {
          return We(r7.resolver, Object.assign(U7, {
            value: void 0
          }), j7);
        })
      ];
    }
    e.parseStateHex = a_;
  }(bn)), bn;
}
var M2 = {}, Q4;
function Sy() {
  return Q4 || (Q4 = 1, function(e) {
    var t = I7 && I7.__extends || function() {
      var L = function(U, q) {
        return L = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(Z, z) {
          Z.__proto__ = z;
        } || function(Z, z) {
          for (var G in z)
            z.hasOwnProperty(G) && (Z[G] = z[G]);
        }, L(U, q);
      };
      return function(U, q) {
        L(U, q);
        function Z() {
          this.constructor = U;
        }
        U.prototype = q === null ? Object.create(q) : (Z.prototype = q.prototype, new Z());
      };
    }(), a = I7 && I7.__assign || function() {
      return a = Object.assign || function(L) {
        for (var U, q = 1, Z = arguments.length; q < Z; q++) {
          U = arguments[q];
          for (var z in U)
            Object.prototype.hasOwnProperty.call(U, z) && (L[z] = U[z]);
        }
        return L;
      }, a.apply(this, arguments);
    }, r = I7 && I7.__values || function(L) {
      var U = typeof Symbol == "function" && Symbol.iterator, q = U && L[U], Z = 0;
      if (q)
        return q.call(L);
      if (L && typeof L.length == "number")
        return {
          next: function() {
            return L && Z >= L.length && (L = void 0), { value: L && L[Z++], done: !L };
          }
        };
      throw new TypeError(U ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }, f = I7 && I7.__read || function(L, U) {
      var q = typeof Symbol == "function" && L[Symbol.iterator];
      if (!q)
        return L;
      var Z = q.call(L), z, G = [], O;
      try {
        for (; (U === void 0 || U-- > 0) && !(z = Z.next()).done; )
          G.push(z.value);
      } catch (u) {
        O = { error: u };
      } finally {
        try {
          z && !z.done && (q = Z.return) && q.call(Z);
        } finally {
          if (O)
            throw O.error;
        }
      }
      return G;
    }, i = I7 && I7.__spread || function() {
      for (var L = [], U = 0; U < arguments.length; U++)
        L = L.concat(f(arguments[U]));
      return L;
    };
    Object.defineProperty(e, "__esModule", { value: !0 }), e.buildScryptTypeResolver = e.buildTypeResolver = e.buildTypeResolverFromDesc = e.buildTypeClasses = e.buildLibraryClass = e.buildStructsClass = e.buildContractClass = e.AbstractContract = e.SUPPORTED_MINIMUM_VERSION = e.CURRENT_CONTRACT_DESCRIPTION_VERSION = void 0;
    var n = By(), o = zi(), s = A5(), b = qi(), l = Et;
    e.CURRENT_CONTRACT_DESCRIPTION_VERSION = 9, e.SUPPORTED_MINIMUM_VERSION = 8;
    var v = (
      /** @class */
      function() {
        function L() {
          this.calls = /* @__PURE__ */ new Map(), this.hexTemplateInlineASM = /* @__PURE__ */ new Map(), this.hexTemplateArgs = /* @__PURE__ */ new Map(), this.statePropsArgs = [], this.firstCall = !0;
        }
        return Object.defineProperty(L.prototype, "lockingScript", {
          get: function() {
            return this.dataPart ? this.codePart.add(this.dataPart) : this.scriptedConstructor.lockingScript;
          },
          enumerable: !1,
          configurable: !0
        }), Object.defineProperty(L.prototype, "txContext", {
          get: function() {
            return this._txContext;
          },
          set: function(U) {
            this._txContext = U;
          },
          enumerable: !1,
          configurable: !0
        }), Object.defineProperty(L.prototype, "sourceMapFile", {
          get: function() {
            var U = Object.getPrototypeOf(this).constructor.desc;
            return U.sourceMapFile;
          },
          enumerable: !1,
          configurable: !0
        }), Object.defineProperty(L.prototype, "file", {
          get: function() {
            var U = Object.getPrototypeOf(this).constructor.desc;
            return U.file;
          },
          enumerable: !1,
          configurable: !0
        }), Object.defineProperty(L.prototype, "contractName", {
          get: function() {
            var U = Object.getPrototypeOf(this).constructor.desc;
            return U.contract;
          },
          enumerable: !1,
          configurable: !0
        }), Object.defineProperty(L.prototype, "stateProps", {
          get: function() {
            var U = Object.getPrototypeOf(this).constructor.desc;
            return U.stateProps || [];
          },
          enumerable: !1,
          configurable: !0
        }), Object.defineProperty(L.prototype, "version", {
          get: function() {
            var U = Object.getPrototypeOf(this).constructor.desc;
            return U.version || 0;
          },
          enumerable: !1,
          configurable: !0
        }), Object.defineProperty(L.prototype, "resolver", {
          get: function() {
            return Object.getPrototypeOf(this).constructor.resolver;
          },
          enumerable: !1,
          configurable: !0
        }), L.prototype.replaceAsmVars = function(U) {
          if (U)
            for (var q in U) {
              var Z = U[q];
              this.hexTemplateInlineASM.set("<" + (q.startsWith("$") ? q.substring(1) : q) + ">", s.mvc.Script.fromASM(Z).toHex());
            }
          var z = Object.getPrototypeOf(this).constructor.hex, G = s.buildContractCode(this.hexTemplateArgs, this.hexTemplateInlineASM, z);
          this.scriptedConstructor.lockingScript = G;
        }, Object.defineProperty(L.prototype, "asmArgs", {
          // replace assembly variables with assembly values
          get: function() {
            var U, q, Z = {};
            try {
              for (var z = r(this.hexTemplateInlineASM.entries()), G = z.next(); !G.done; G = z.next()) {
                var O = G.value, u = O[0].replace("<", "").replace(">", ""), p = O[1];
                Z[u] = s.mvc.Script.fromHex(p).toASM();
              }
            } catch (d) {
              U = { error: d };
            } finally {
              try {
                G && !G.done && (q = z.return) && q.call(z);
              } finally {
                if (U)
                  throw U.error;
              }
            }
            return Z;
          },
          enumerable: !1,
          configurable: !0
        }), L.prototype.getTypeClassByType = function(U) {
          return this.resolver.resolverClass(U);
        }, L.prototype.getNewStateScript = function(U) {
          var q = this, Z = this.statePropsArgs;
          if (Z.length === 0)
            throw new Error("Contract " + this.contractName + " does not have any stateful property");
          var z = [], G = Z.map(function(O) {
            if (Object.prototype.hasOwnProperty.call(U, O.name)) {
              z.push(O.name);
              var u = U[O.name], p = s.checkSupportedParamType(u, O, q.resolver.resolverType);
              if (p)
                throw p;
              return Object.assign(a({}, O), {
                value: U[O.name]
              });
            } else
              return O;
          });
          return Object.keys(U).forEach(function(O) {
            if (z.indexOf(O) === -1)
              throw new Error("Contract " + q.contractName + " does not have stateful property " + O);
          }), this.codePart.add(s.mvc.Script.fromHex(s.buildContractState(G, !1, this.resolver.resolverType)));
        }, L.prototype.run_verify = function(U, q) {
          var Z = Object.assign({}, this._txContext || {}, q || {}), z = U.trim() ? s.mvc.Script.fromASM(U.trim()) : new s.mvc.Script(), G = s.mvc.Script.fromHex(this.lockingScript.toHex()), O = Z.tx, u = Z.inputIndex || 0, p = Z.inputSatoshis || 0;
          s.mvc.Script.Interpreter.MAX_SCRIPT_ELEMENT_SIZE = Number.MAX_SAFE_INTEGER, s.mvc.Script.Interpreter.MAXIMUM_ELEMENT_SIZE = Number.MAX_SAFE_INTEGER;
          var d = s.mvc.Script.Interpreter(), c = {};
          d.stepListener = function(J) {
            (J.fExec || s.mvc.Opcode.OP_IF <= J.opcode.toNumber() && J.opcode.toNumber() <= s.mvc.Opcode.OP_ENDIF) && (s.mvc.Opcode.OP_IF <= J.opcode.toNumber() && J.opcode.toNumber() <= s.mvc.Opcode.OP_ENDIF || J.opcode.toNumber() === s.mvc.Opcode.OP_RETURN ? c.opcode = J.opcode : c = J);
          };
          var y = d.verify(z, G, O, u, s.DEFAULT_FLAGS, new s.mvc.crypto.BN(p));
          if (y)
            return {
              success: !0,
              error: ""
            };
          var S = c.opcode.toNumber();
          if ([s.mvc.Opcode.OP_CHECKSIG, s.mvc.Opcode.OP_CHECKSIGVERIFY, s.mvc.Opcode.OP_CHECKMULTISIG, s.mvc.Opcode.OP_CHECKMULTISIGVERIFY].includes(S)) {
            if (!Z)
              throw new Error("should provide txContext when verify");
            if (!O)
              throw new Error("should provide txContext.tx when verify");
          }
          var T = "VerifyError: " + d.errstr + ", fails at " + new s.mvc.Opcode(S) + `
`;
          if (this.sourceMapFile) {
            var g = s.uri2path(this.sourceMapFile), w = s.JSONParserSync(g), A = s.uri2path(this.file), h = l.dirname(A), N = l.basename(A), Y = w.sources.map(function(J) {
              return o.getFullFilePath(J, h, N);
            }), t7 = s.findSrcInfoV2(c.pc, w);
            t7 && Y[t7[1]] && (T = "VerifyError: " + d.errstr + ` 
	[Go to Source](` + s.path2uri(Y[t7[1]]) + "#" + t7[2] + ")  fails at " + new s.mvc.Opcode(S) + `
`);
          } else if (this.version === 8) {
            var H = Object.getPrototypeOf(this).constructor.desc, w = o.loadSourceMapfromDesc(H);
            if (w.length > 0) {
              var $ = c.pc;
              if (w[$]) {
                var X = w[$];
                if (!X.pos || X.pos.file === "std") {
                  var i7 = s.findSrcInfoV1(w, $);
                  i7 && (X.pos = i7.pos);
                }
                X && X.pos && (T = "VerifyError: " + d.errstr + ` 
	[Go to Source](` + s.path2uri(X.pos.file) + "#" + X.pos.line + ")  fails at " + new s.mvc.Opcode(S) + `
`);
              }
            }
          }
          return {
            success: y,
            error: T
          };
        }, Object.defineProperty(L.prototype, "dataPart", {
          get: function() {
            if (L.isStateful(this)) {
              var U = s.buildContractState(this.statePropsArgs, this.firstCall, this.resolver.resolverType);
              return s.mvc.Script.fromHex(U);
            }
            if (this._dataPartInHex)
              return s.mvc.Script.fromHex(this._dataPartInHex);
          },
          set: function(U) {
            throw new Error("Setter for dataPart is not available. Please use: setDataPart() instead");
          },
          enumerable: !1,
          configurable: !0
        }), L.prototype.setDataPart = function(U, q) {
          q === void 0 && (q = !1), q == !1 ? (console.warn("deprecated, using setDataPartInASM"), this.setDataPartInASM(U)) : (console.warn("deprecated, using setDataPartInHex"), this.setDataPartInHex(U));
        }, L.prototype.setDataPartInASM = function(U) {
          if (L.isStateful(this))
            throw new Error("should not use `setDataPartInASM` for a stateful contract, using `setDataPartInHex`");
          var q = typeof U == "string" ? U.trim() : s.serializeState(U);
          this.setDataPartInHex(s.mvc.Script.fromASM(q).toHex());
        }, L.prototype.setDataPartInHex = function(U) {
          if (this._dataPartInHex = U.trim(), L.isStateful(this)) {
            var q = f(n.parseStateHex(this, this._dataPartInHex), 2), Z = q[0], z = q[1];
            this.statePropsArgs = z, this.firstCall = Z;
          }
        }, Object.defineProperty(L.prototype, "codePart", {
          get: function() {
            var U = this.scriptedConstructor.toScript();
            if (U.hasOwnProperty("clone"))
              return U.clone().add(s.mvc.Script.fromHex("6a"));
            var q = s.mvc.Script.fromHex(U.toHex());
            return q.add(s.mvc.Script.fromHex("6a")), q;
          },
          enumerable: !1,
          configurable: !0
        }), Object.defineProperty(L.prototype, "codeHash", {
          get: function() {
            return this.dataPart ? s.hash160(this.codePart.toHex()) : s.hash160(this.lockingScript.toHex());
          },
          enumerable: !1,
          configurable: !0
        }), L.getAsmVars = function(U) {
          var q = this.fromHex(U);
          return q.asmArgs;
        }, L.prototype.arguments = function(U) {
          return U === "constructor" ? this.scriptedConstructor.args : this.calls.has(U) ? this.calls.get(U).args : [];
        }, L.prototype.ctorArgs = function() {
          return this.arguments("constructor");
        }, L.fromASM = function(U) {
          return null;
        }, L.fromHex = function(U) {
          return null;
        }, L.fromTransaction = function(U, q) {
          return null;
        }, L.isStateful = function(U) {
          return U.stateProps.length > 0;
        }, L;
      }()
    );
    e.AbstractContract = v;
    var m = [
      "arguments",
      "setDataPart",
      "setDataPartInASM",
      "setDataPartInHex",
      "version",
      "stateProps",
      "sourceMapFile",
      "file",
      "contractName",
      "ctorArgs",
      "run_verify",
      "replaceAsmVars",
      "asmVars",
      "asmArguments",
      "dataPart",
      "lockingScript",
      "codeHash",
      "codePart",
      "resolver",
      "getTypeClassByType",
      "getNewStateScript",
      "txContext"
    ];
    function x(L) {
      if (L instanceof s.CompileResult && (L = L.toDesc()), !L.contract)
        throw new Error("missing field `contract` in description");
      if (!L.version)
        throw new Error("missing field `version` in description");
      if (L.version < e.SUPPORTED_MINIMUM_VERSION)
        throw new Error("Contract description version deprecated, The minimum version number currently supported is " + e.SUPPORTED_MINIMUM_VERSION);
      if (!L.abi)
        throw new Error("missing field `abi` in description");
      if (!L.hex)
        throw new Error("missing field `hex` in description");
      var U = (
        /** @class */
        function(q) {
          t(Z, q);
          function Z() {
            for (var z, G = [], O = 0; O < arguments.length; O++)
              G[O] = arguments[O];
            var u = q.call(this) || this;
            return Z.asmContract || (u.scriptedConstructor = (z = Z.abiCoder).encodeConstructorCall.apply(z, i([u, Z.hex], G))), u;
          }
          return Z.fromASM = function(z) {
            return U.fromHex(s.mvc.Script.fromASM(z).toHex());
          }, Z.fromHex = function(z) {
            Z.asmContract = !0;
            var G = new this();
            return Z.asmContract = !1, G.scriptedConstructor = Z.abiCoder.encodeConstructorCallFromRawHex(G, Z.hex, z), G;
          }, Z.fromTransaction = function(z, G) {
            G === void 0 && (G = 0);
            var O = new s.mvc.Transaction(z);
            return U.fromHex(O.outputs[G].script.toHex());
          }, Object.defineProperty(Z.prototype, "asmVars", {
            /**
             * Get the parameter of the constructor and inline asm vars,
             * all values is hex string, need convert it to number or bytes on using
             */
            get: function() {
              return U.getAsmVars(this.scriptedConstructor.toHex());
            },
            enumerable: !1,
            configurable: !0
          }), Object.defineProperty(Z.prototype, "asmArguments", {
            get: function() {
              return null;
            },
            enumerable: !1,
            configurable: !0
          }), Z;
        }(v)
      );
      return U.desc = L, U.resolver = C(L), U.abi = L.abi, U.hex = L.hex, U.abiCoder = new s.ABICoder(L.abi, U.resolver), U.types = M(L), U.stateProps = L.stateProps || [], U.abi.forEach(function(q) {
        if (m.indexOf(q.name) > -1)
          throw new Error("Method name [" + q.name + "] is used by scryptlib now, Pelease change you contract method name!");
        U.prototype[q.name] = function() {
          for (var Z = [], z = 0; z < arguments.length; z++)
            Z[z] = arguments[z];
          var G = U.abiCoder.encodePubFunctionCall(this, q.name, Z);
          return this.calls.set(q.name, G), G;
        };
      }), U.stateProps.forEach(function(q) {
        Object.defineProperty(U.prototype, q.name, {
          get: function() {
            var Z = this.statePropsArgs.find(function(z) {
              return z.name === q.name;
            });
            if (Z)
              return Z.value;
            throw new Error("property " + q.name + " does not exists");
          },
          set: function(Z) {
            var z = this.statePropsArgs.find(function(G) {
              return G.name === q.name;
            });
            if (z)
              z.value = Z, this.firstCall = !1;
            else
              throw new Error("property " + q.name + " does not exists");
          }
        });
      }), U;
    }
    e.buildContractClass = x;
    function I(L) {
      var U = {}, q = L.structs || [], Z = R(L);
      return q.forEach(function(z) {
        var G, O = z.name;
        Object.assign(U, (G = {}, G[O] = /** @class */
        function(u) {
          t(p, u);
          function p(d) {
            var c = u.call(this, d) || this;
            return c._typeResolver = Z, c.bind(), c;
          }
          return p;
        }(s.Struct), G)), U[O].structAst = z;
      }), U;
    }
    e.buildStructsClass = I;
    function k() {
      var L, U, q = {};
      return Object.assign(q, (L = {}, L.HashedMap = b.HashedMap, L)), Object.assign(q, (U = {}, U.HashedSet = b.HashedSet, U)), q;
    }
    function P(L) {
      var U = {}, q = L.library || [], Z = R(L);
      return Object.assign(U, k()), q.forEach(function(z) {
        var G, O = z.name, u = (
          /** @class */
          function(p) {
            t(d, p);
            function d() {
              for (var c = [], y = 0; y < arguments.length; y++)
                c[y] = arguments[y];
              var S = p.apply(this, i(c)) || this;
              return S._typeResolver = Z, S.bind(), S;
            }
            return d;
          }(b.Library)
        );
        u.libraryAst = z, Object.assign(U, (G = {}, G[O] = u, G));
      }), U;
    }
    e.buildLibraryClass = P;
    function M(L) {
      if (Object.prototype.hasOwnProperty.call(L, "types")) {
        var U = L;
        return U.types;
      }
      L = L;
      var q = I(L), Z = P(L), z = {}, G = L.alias || [], O = R(L);
      return G.forEach(function(u) {
        var p, d, c = O(u.name);
        if (!s.isArrayType(c.finalType))
          if (c.symbolType === b.SymbolType.Struct) {
            var y = s.getNameByType(c.finalType);
            Object.assign(z, (p = {}, p[u.name] = /** @class */
            function(g) {
              t(w, g);
              function w(A) {
                var h = g.call(this, A) || this;
                return h._type = u.name, h._typeResolver = O, h;
              }
              return w;
            }(q[y]), p));
          } else {
            var S = s.BasicScryptType[c.finalType];
            if (S) {
              var T = (
                /** @class */
                function(g) {
                  t(w, g);
                  function w(A) {
                    var h = g.call(this, A) || this;
                    return h._type = u.name, h._typeResolver = O, h;
                  }
                  return w;
                }(S)
              );
              Object.assign(z, (d = {}, d[u.name] = T, d));
            } else
              throw new Error("can not resolve type alias " + u.name + " " + u.type);
          }
      }), Object.assign(z, q), Object.assign(z, Z), Object.assign(z, s.BasicScryptType), z;
    }
    e.buildTypeClasses = M;
    function R(L) {
      var U = L.alias || [], q = L.library || [], Z = L.structs || [], z = L.contract;
      return F(z, U, Z, q);
    }
    e.buildTypeResolverFromDesc = R;
    function F(L, U, q, Z, z, G) {
      z === void 0 && (z = []), G === void 0 && (G = []);
      var O = {};
      q.forEach(function(p) {
        O[p.name] = {
          finalType: p.name,
          symbolType: b.SymbolType.Struct
        };
      }), Z.forEach(function(p) {
        O[p.name] = {
          finalType: p.name,
          symbolType: b.SymbolType.Library
        };
      }), z.forEach(function(p) {
        O[p.name] = {
          finalType: p.name,
          symbolType: b.SymbolType.Contract
        };
      }), O.HashedMap = {
        finalType: "HashedMap",
        symbolType: b.SymbolType.Library
      }, O.HashedSet = {
        finalType: "HashedSet",
        symbolType: b.SymbolType.Library
      }, O.SortedItem = {
        finalType: "SortedItem",
        symbolType: b.SymbolType.Struct
      }, O.PubKeyHash = {
        finalType: "Ripemd160",
        symbolType: b.SymbolType.BaseType
      }, U.forEach(function(p) {
        O[p.name] = s.resolveType(p.name, O, L, G, U, Z);
      });
      var u = function(p) {
        return O[p] ? O[p] : s.BasicScryptType[p] ? {
          finalType: p,
          symbolType: b.SymbolType.BaseType
        } : s.resolveType(p, O, L, G, U, Z);
      };
      return u;
    }
    e.buildTypeResolver = F;
    function C(L) {
      var U = R(L), q = M(L);
      return {
        resolverType: U,
        resolverClass: function(Z) {
          var z = U(Z).finalType, G = s.getNameByType(z) ? s.getNameByType(z) : z;
          return q[G];
        },
        allTypes: function() {
          return q;
        }
      };
    }
    e.buildScryptTypeResolver = C;
  }(M2)), M2;
}
var Va = {}, el;
function DN() {
  if (el)
    return Va;
  el = 1;
  var e = I7 && I7.__assign || function() {
    return e = Object.assign || function(l) {
      for (var v, m = 1, x = arguments.length; m < x; m++) {
        v = arguments[m];
        for (var I in v)
          Object.prototype.hasOwnProperty.call(v, I) && (l[I] = v[I]);
      }
      return l;
    }, e.apply(this, arguments);
  }, t = I7 && I7.__read || function(l, v) {
    var m = typeof Symbol == "function" && l[Symbol.iterator];
    if (!m)
      return l;
    var x = m.call(l), I, k = [], P;
    try {
      for (; (v === void 0 || v-- > 0) && !(I = x.next()).done; )
        k.push(I.value);
    } catch (M) {
      P = { error: M };
    } finally {
      try {
        I && !I.done && (m = x.return) && m.call(x);
      } finally {
        if (P)
          throw P.error;
      }
    }
    return k;
  }, a = I7 && I7.__spread || function() {
    for (var l = [], v = 0; v < arguments.length; v++)
      l = l.concat(t(arguments[v]));
    return l;
  }, r = I7 && I7.__values || function(l) {
    var v = typeof Symbol == "function" && Symbol.iterator, m = v && l[v], x = 0;
    if (m)
      return m.call(l);
    if (l && typeof l.length == "number")
      return {
        next: function() {
          return l && x >= l.length && (l = void 0), { value: l && l[x++], done: !l };
        }
      };
    throw new TypeError(v ? "Object is not iterable." : "Symbol.iterator is not defined.");
  };
  Object.defineProperty(Va, "__esModule", { value: !0 }), Va.ABICoder = Va.FunctionCall = void 0;
  var f = Hd(), i = Sy(), n = qi(), o = zi(), s = (
    /** @class */
    function() {
      function l(v, m) {
        if (this.methodName = v, this.args = [], m.lockingScript === void 0 && m.unlockingScript === void 0)
          throw new Error("param binding.lockingScript & binding.unlockingScript cannot both be empty");
        this.contract = m.contract, this.args = m.args, m.lockingScript && (this._lockingScript = m.lockingScript), m.unlockingScript && (this._unlockingScript = m.unlockingScript);
      }
      return Object.defineProperty(l.prototype, "unlockingScript", {
        get: function() {
          return this._unlockingScript;
        },
        enumerable: !1,
        configurable: !0
      }), Object.defineProperty(l.prototype, "lockingScript", {
        get: function() {
          return this._lockingScript;
        },
        set: function(v) {
          this._lockingScript = v;
        },
        enumerable: !1,
        configurable: !0
      }), l.prototype.toASM = function() {
        return this.toScript().toASM();
      }, l.prototype.toString = function() {
        return this.toHex();
      }, l.prototype.toScript = function() {
        return this.lockingScript ? this.lockingScript : this.unlockingScript;
      }, l.prototype.toHex = function() {
        return this.toScript().toHex();
      }, l.prototype.genLaunchConfig = function(v) {
        var m = this.contract.ctorArgs().map(function(C) {
          return C.value;
        }), x = this.args.map(function(C) {
          return C.value;
        }), I = this.methodName, k = "Debug " + this.contract.contractName, P = "" + this.contract.file, M = this.contract.asmArgs || {}, R = !i.AbstractContract.isStateful(this.contract) && this.contract.dataPart ? this.contract.dataPart.toASM() : void 0, F = Object.assign({}, this.contract.txContext || {}, v || {}, { opReturn: R });
        return i.AbstractContract.isStateful(this.contract) ? Object.assign(F, { opReturnHex: this.contract.dataPart.toHex() }) : this.contract.dataPart && Object.assign(F, { opReturn: this.contract.dataPart.toASM() }), f.genLaunchConfigFile(m, x, I, k, P, F, M);
      }, l.prototype.verify = function(v) {
        var m = this.contract.run_verify(this.unlockingScript.toASM() || "", v);
        if (!m.success) {
          var x = this.genLaunchConfig(v);
          x && (m.error = m.error + ("	[Launch Debugger](" + x.replace(/file:/i, "scryptlaunch:") + `)
`));
        }
        return m;
      }, l;
    }()
  );
  Va.FunctionCall = s;
  var b = (
    /** @class */
    function() {
      function l(v, m) {
        this.abi = v, this.resolver = m;
      }
      return l.prototype.checkArgs = function(v, m, x) {
        for (var I = this, k = [], P = 3; P < arguments.length; P++)
          k[P - 3] = arguments[P];
        if (k.length !== x.length)
          throw new Error("wrong number of arguments for '" + v + "." + m + "', expected " + x.length + " but got " + k.length);
        x.forEach(function(M, R) {
          var F = k[R], C = f.checkSupportedParamType(F, M, I.resolver.resolverType);
          if (C)
            throw C;
        });
      }, l.prototype.encodeConstructorCall = function(v, m) {
        for (var x = this, I = [], k = 2; k < arguments.length; k++)
          I[k - 2] = arguments[k];
        var P = this.abi.filter(function(C) {
          return C.type === o.ABIEntityType.CONSTRUCTOR;
        })[0], M = (P == null ? void 0 : P.params) || [];
        this.checkArgs.apply(this, a([v.contractName, "constructor", M], I));
        var R = f.flatternCtorArgs(M.map(function(C, L) {
          return Object.assign(e({}, C), {
            value: I[L]
          });
        }), this.resolver.resolverType);
        R.forEach(function(C) {
          if (!m.includes("<" + C.name + ">"))
            throw new Error("abi constructor params mismatch with args provided: missing " + C.name + " in ASM tempalte");
          v.hexTemplateArgs.set("<" + C.name + ">", x.encodeParam(C.value, C));
        }), v.hexTemplateArgs.set("<__codePart__>", "00"), v.statePropsArgs = f.buildDefaultStateProps(v);
        var F = f.buildContractCode(v.hexTemplateArgs, v.hexTemplateInlineASM, m);
        return new s("constructor", {
          contract: v,
          lockingScript: F,
          args: M.map(function(C, L) {
            return {
              name: C.name,
              type: C.type,
              value: I[L]
            };
          })
        });
      }, l.prototype.encodeConstructorCallFromRawHex = function(v, m, x) {
        for (var I = f.mvc.Script.fromHex(x), k = this.abi.filter(function(g) {
          return g.type === o.ABIEntityType.CONSTRUCTOR;
        })[0], P = (k == null ? void 0 : k.params) || [], M = 0, R = void 0, F = 0; F < I.chunks.length; F++) {
          var C = I.chunks[F];
          if (M >= m.length && C.opcodenum == 106) {
            var L = f.mvc.Script.fromChunks(I.chunks.slice(F + 1));
            R = L.toHex();
            break;
          } else if (m.charAt(M) == "<") {
            for (var U = M, q = !1; !q && M < m.length; )
              M++, m.charAt(M) == ">" && (M++, q = !0);
            if (!q)
              throw new Error("cannot found break >");
            var Z = m.substring(U, M), z = new f.mvc.encoding.BufferWriter();
            z.writeUInt8(C.opcodenum), C.buf && (C.opcodenum < f.mvc.Opcode.OP_PUSHDATA1 ? z.write(C.buf) : C.opcodenum === f.mvc.Opcode.OP_PUSHDATA1 ? (z.writeUInt8(C.len), z.write(C.buf)) : C.opcodenum === f.mvc.Opcode.OP_PUSHDATA2 ? (z.writeUInt16LE(C.len), z.write(C.buf)) : C.opcodenum === f.mvc.Opcode.OP_PUSHDATA4 && (z.writeUInt32LE(C.len), z.write(C.buf))), Z.startsWith("<" + v.contractName + ".") ? v.hexTemplateInlineASM.set(Z, z.toBuffer().toString("hex")) : v.hexTemplateArgs.set(Z, z.toBuffer().toString("hex"));
          } else {
            var G = m.substring(M, M + 2);
            if (M = M + 2, parseInt(G, 16) != C.opcodenum)
              throw new Error("the raw script cannot match the ASM template of contract " + v.contractName);
            if (C.len > 0) {
              var O = m.substring(M, M + C.len * 2);
              if (C.buf.toString("hex") != O)
                throw new Error("the raw script cannot match the ASM template of contract " + v.contractName);
              M = M + C.len * 2;
            }
          }
        }
        var u = P.map(function(g) {
          return f.deserializeArgfromHex(v.resolver, Object.assign(g, {
            value: void 0
          }), v.hexTemplateArgs);
        });
        if (i.AbstractContract.isStateful(v)) {
          var p = R, d = R.substr(p.length - 10, 10), c = f.bin2num(d.substr(d.length - 2, 2));
          switch (c) {
            case 0:
              {
                var y = t(f.parseStateHex(v, p), 2), S = y[0], T = y[1];
                v.statePropsArgs = T, v.firstCall = S;
              }
              break;
          }
        } else
          R && v.setDataPartInHex(R);
        return new s("constructor", { contract: v, lockingScript: I, args: u });
      }, l.prototype.encodePubFunctionCall = function(v, m, x) {
        var I, k, P = this;
        try {
          for (var M = r(this.abi), R = M.next(); !R.done; R = M.next()) {
            var F = R.value;
            if (F.name === m) {
              this.checkArgs.apply(this, a([v.contractName, m, F.params], x));
              var C = this.encodeParams(x, F.params.map(function(U) {
                return {
                  name: U.name,
                  type: P.resolver.resolverType(U.type).finalType
                };
              }));
              if (this.abi.length > 2 && F.index !== void 0) {
                var L = F.index;
                C += "" + f.mvc.Script.fromASM(f.int2Asm(L.toString())).toHex();
              }
              return new s(m, {
                contract: v,
                unlockingScript: f.mvc.Script.fromHex(C),
                args: F.params.map(function(U, q) {
                  return {
                    name: U.name,
                    type: U.type,
                    value: x[q]
                  };
                })
              });
            }
          }
        } catch (U) {
          I = { error: U };
        } finally {
          try {
            R && !R.done && (k = M.return) && k.call(M);
          } finally {
            if (I)
              throw I.error;
          }
        }
        throw new Error("no public function named '" + m + "' found in contract '" + v.contractName + "'");
      }, l.prototype.encodePubFunctionCallFromHex = function(v, m, x) {
        var I = f.mvc.Script.fromHex(x), k = this.abi.filter(function(q) {
          return q.type === "function" && q.name === m;
        })[0];
        if (!k)
          throw new Error("no public function named '" + m + "' found in contract '" + v.contractName + "'");
        var P = (k == null ? void 0 : k.params) || [], M = f.flatternParams(P, v.resolver), R = M.length;
        this.abi.length > 2 && k.index !== void 0 && (R += 1);
        var F = I.toASM(), C = F.split(" ");
        if (R != C.length)
          throw new Error("the raw unlockingScript cannot match the arguments of public function " + m + " of contract " + v.contractName);
        var L = /* @__PURE__ */ new Map();
        M.forEach(function(q, Z) {
          L.set("<" + q.name + ">", f.mvc.Script.fromASM(C[Z]).toHex());
        });
        var U = P.map(function(q) {
          return f.deserializeArgfromHex(v.resolver, Object.assign(q, {
            value: void 0
          }), L);
        });
        return new s(m, { contract: v, unlockingScript: I, args: U });
      }, l.prototype.encodeParams = function(v, m) {
        var x = this;
        return v.map(function(I, k) {
          return x.encodeParam(I, m[k]);
        }).join("");
      }, l.prototype.encodeParamArray = function(v, m) {
        var x = this;
        return f.flatternArray(v, m.name, m.type).map(function(I) {
          return x.encodeParam(I.value, { name: I.name, type: x.resolver.resolverType(I.type).finalType });
        }).join("");
      }, l.prototype.encodeParam = function(v, m) {
        if (f.isArrayType(m.type))
          return this.encodeParamArray(v, m);
        if (v instanceof n.ScryptType)
          return v.toHex();
        var x = typeof v;
        if (x === "boolean")
          v = new n.Bool(v);
        else if (x === "number")
          v = new n.Int(v);
        else if (x === "bigint")
          v = new n.Int(v);
        else if (typeof v == "string")
          v = new n.Int(v);
        else
          throw new Error("The value of parameter " + m.name + " is unknown type: " + x);
        return v.toHex();
      }, l;
    }()
  );
  return Va.ABICoder = b, Va;
}
var h1 = {}, LN = function(e, t) {
  t || (t = {});
  var a = { bools: {}, strings: {}, unknownFn: null };
  typeof t.unknown == "function" && (a.unknownFn = t.unknown), typeof t.boolean == "boolean" && t.boolean ? a.allBools = !0 : [].concat(t.boolean).filter(Boolean).forEach(function(C) {
    a.bools[C] = !0;
  });
  var r = {};
  Object.keys(t.alias || {}).forEach(function(C) {
    r[C] = [].concat(t.alias[C]), r[C].forEach(function(L) {
      r[L] = [C].concat(r[C].filter(function(U) {
        return L !== U;
      }));
    });
  }), [].concat(t.string).filter(Boolean).forEach(function(C) {
    a.strings[C] = !0, r[C] && (a.strings[r[C]] = !0);
  });
  var f = t.default || {}, i = { _: [] };
  Object.keys(a.bools).forEach(function(C) {
    s(C, f[C] === void 0 ? !1 : f[C]);
  });
  var n = [];
  e.indexOf("--") !== -1 && (n = e.slice(e.indexOf("--") + 1), e = e.slice(0, e.indexOf("--")));
  function o(C, L) {
    return a.allBools && /^--[^=]+$/.test(L) || a.strings[C] || a.bools[C] || r[C];
  }
  function s(C, L, U) {
    if (!(U && a.unknownFn && !o(C, U) && a.unknownFn(U) === !1)) {
      var q = !a.strings[C] && tl(L) ? Number(L) : L;
      b(i, C.split("."), q), (r[C] || []).forEach(function(Z) {
        b(i, Z.split("."), q);
      });
    }
  }
  function b(C, L, U) {
    for (var q = C, Z = 0; Z < L.length - 1; Z++) {
      var z = L[Z];
      if (z === "__proto__")
        return;
      q[z] === void 0 && (q[z] = {}), (q[z] === Object.prototype || q[z] === Number.prototype || q[z] === String.prototype) && (q[z] = {}), q[z] === Array.prototype && (q[z] = []), q = q[z];
    }
    var z = L[L.length - 1];
    z !== "__proto__" && ((q === Object.prototype || q === Number.prototype || q === String.prototype) && (q = {}), q === Array.prototype && (q = []), q[z] === void 0 || a.bools[z] || typeof q[z] == "boolean" ? q[z] = U : Array.isArray(q[z]) ? q[z].push(U) : q[z] = [q[z], U]);
  }
  function l(C) {
    return r[C].some(function(L) {
      return a.bools[L];
    });
  }
  for (var v = 0; v < e.length; v++) {
    var m = e[v];
    if (/^--.+=/.test(m)) {
      var x = m.match(/^--([^=]+)=([\s\S]*)$/), I = x[1], k = x[2];
      a.bools[I] && (k = k !== "false"), s(I, k, m);
    } else if (/^--no-.+/.test(m)) {
      var I = m.match(/^--no-(.+)/)[1];
      s(I, !1, m);
    } else if (/^--.+/.test(m)) {
      var I = m.match(/^--(.+)/)[1], P = e[v + 1];
      P !== void 0 && !/^-/.test(P) && !a.bools[I] && !a.allBools && (!r[I] || !l(I)) ? (s(I, P, m), v++) : /^(true|false)$/.test(P) ? (s(I, P === "true", m), v++) : s(I, a.strings[I] ? "" : !0, m);
    } else if (/^-[^-]+/.test(m)) {
      for (var M = m.slice(1, -1).split(""), R = !1, F = 0; F < M.length; F++) {
        var P = m.slice(F + 2);
        if (P === "-") {
          s(M[F], P, m);
          continue;
        }
        if (/[A-Za-z]/.test(M[F]) && /=/.test(P)) {
          s(M[F], P.split("=")[1], m), R = !0;
          break;
        }
        if (/[A-Za-z]/.test(M[F]) && /-?\d+(\.\d*)?(e-?\d+)?$/.test(P)) {
          s(M[F], P, m), R = !0;
          break;
        }
        if (M[F + 1] && M[F + 1].match(/\W/)) {
          s(M[F], m.slice(F + 2), m), R = !0;
          break;
        } else
          s(M[F], a.strings[M[F]] ? "" : !0, m);
      }
      var I = m.slice(-1)[0];
      !R && I !== "-" && (e[v + 1] && !/^(-|--)[^-]/.test(e[v + 1]) && !a.bools[I] && (!r[I] || !l(I)) ? (s(I, e[v + 1], m), v++) : e[v + 1] && /^(true|false)$/.test(e[v + 1]) ? (s(I, e[v + 1] === "true", m), v++) : s(I, a.strings[I] ? "" : !0, m));
    } else if ((!a.unknownFn || a.unknownFn(m) !== !1) && i._.push(
      a.strings._ || !tl(m) ? m : Number(m)
    ), t.stopEarly) {
      i._.push.apply(i._, e.slice(v + 1));
      break;
    }
  }
  return Object.keys(f).forEach(function(C) {
    FN(i, C.split(".")) || (b(i, C.split("."), f[C]), (r[C] || []).forEach(function(L) {
      b(i, L.split("."), f[C]);
    }));
  }), t["--"] ? (i["--"] = new Array(), n.forEach(function(C) {
    i["--"].push(C);
  })) : n.forEach(function(C) {
    i._.push(C);
  }), i;
};
function FN(e, t) {
  var a = e;
  t.slice(0, -1).forEach(function(f) {
    a = a[f] || {};
  });
  var r = t[t.length - 1];
  return r in a;
}
function tl(e) {
  return typeof e == "number" || /^0x[0-9a-f]+$/i.test(e) ? !0 : /^[-+]?(?:\d+(?:\.\d*)?|\.\d+)(e[-+]?\d+)?$/.test(e);
}
var Ey = { exports: {} };
(function(e, t) {
  (function(a, r) {
    e.exports = r();
  })(I7, function() {
    var a = /^v?(?:\d+)(\.(?:[x*]|\d+)(\.(?:[x*]|\d+)(\.(?:[x*]|\d+))?(?:-[\da-z\-]+(?:\.[\da-z\-]+)*)?(?:\+[\da-z\-]+(?:\.[\da-z\-]+)*)?)?)?$/i;
    function r(v, m) {
      return v.indexOf(m) === -1 ? v.length : v.indexOf(m);
    }
    function f(v) {
      var m = v.replace(/^v/, "").replace(/\+.*$/, ""), x = r(m, "-"), I = m.substring(0, x).split(".");
      return I.push(m.substring(x + 1)), I;
    }
    function i(v) {
      return isNaN(Number(v)) ? v : Number(v);
    }
    function n(v) {
      if (typeof v != "string")
        throw new TypeError("Invalid argument expected string");
      if (!a.test(v))
        throw new Error("Invalid argument not valid semver ('" + v + "' received)");
    }
    function o(v, m) {
      [v, m].forEach(n);
      for (var x = f(v), I = f(m), k = 0; k < Math.max(x.length - 1, I.length - 1); k++) {
        var P = parseInt(x[k] || 0, 10), M = parseInt(I[k] || 0, 10);
        if (P > M)
          return 1;
        if (M > P)
          return -1;
      }
      var R = x[x.length - 1], F = I[I.length - 1];
      if (R && F) {
        var C = R.split(".").map(i), L = F.split(".").map(i);
        for (k = 0; k < Math.max(C.length, L.length); k++) {
          if (C[k] === void 0 || typeof L[k] == "string" && typeof C[k] == "number")
            return -1;
          if (L[k] === void 0 || typeof C[k] == "string" && typeof L[k] == "number" || C[k] > L[k])
            return 1;
          if (L[k] > C[k])
            return -1;
        }
      } else if (R || F)
        return R ? -1 : 1;
      return 0;
    }
    var s = [
      ">",
      ">=",
      "=",
      "<",
      "<="
    ], b = {
      ">": [1],
      ">=": [0, 1],
      "=": [0],
      "<=": [-1, 0],
      "<": [-1]
    };
    function l(v) {
      if (typeof v != "string")
        throw new TypeError("Invalid operator type, expected string but got " + typeof v);
      if (s.indexOf(v) === -1)
        throw new TypeError("Invalid operator, expected one of " + s.join("|"));
    }
    return o.validate = function(v) {
      return typeof v == "string" && a.test(v);
    }, o.compare = function(v, m, x) {
      l(x);
      var I = o(v, m);
      return b[x].indexOf(I) > -1;
    }, o;
  });
})(Ey);
var HN = Ey.exports, Ud = { exports: {} }, R2, al;
function UN() {
  return al || (al = 1, R2 = {
    aliceblue: [240, 248, 255],
    antiquewhite: [250, 235, 215],
    aqua: [0, 255, 255],
    aquamarine: [127, 255, 212],
    azure: [240, 255, 255],
    beige: [245, 245, 220],
    bisque: [255, 228, 196],
    black: [0, 0, 0],
    blanchedalmond: [255, 235, 205],
    blue: [0, 0, 255],
    blueviolet: [138, 43, 226],
    brown: [165, 42, 42],
    burlywood: [222, 184, 135],
    cadetblue: [95, 158, 160],
    chartreuse: [127, 255, 0],
    chocolate: [210, 105, 30],
    coral: [255, 127, 80],
    cornflowerblue: [100, 149, 237],
    cornsilk: [255, 248, 220],
    crimson: [220, 20, 60],
    cyan: [0, 255, 255],
    darkblue: [0, 0, 139],
    darkcyan: [0, 139, 139],
    darkgoldenrod: [184, 134, 11],
    darkgray: [169, 169, 169],
    darkgreen: [0, 100, 0],
    darkgrey: [169, 169, 169],
    darkkhaki: [189, 183, 107],
    darkmagenta: [139, 0, 139],
    darkolivegreen: [85, 107, 47],
    darkorange: [255, 140, 0],
    darkorchid: [153, 50, 204],
    darkred: [139, 0, 0],
    darksalmon: [233, 150, 122],
    darkseagreen: [143, 188, 143],
    darkslateblue: [72, 61, 139],
    darkslategray: [47, 79, 79],
    darkslategrey: [47, 79, 79],
    darkturquoise: [0, 206, 209],
    darkviolet: [148, 0, 211],
    deeppink: [255, 20, 147],
    deepskyblue: [0, 191, 255],
    dimgray: [105, 105, 105],
    dimgrey: [105, 105, 105],
    dodgerblue: [30, 144, 255],
    firebrick: [178, 34, 34],
    floralwhite: [255, 250, 240],
    forestgreen: [34, 139, 34],
    fuchsia: [255, 0, 255],
    gainsboro: [220, 220, 220],
    ghostwhite: [248, 248, 255],
    gold: [255, 215, 0],
    goldenrod: [218, 165, 32],
    gray: [128, 128, 128],
    green: [0, 128, 0],
    greenyellow: [173, 255, 47],
    grey: [128, 128, 128],
    honeydew: [240, 255, 240],
    hotpink: [255, 105, 180],
    indianred: [205, 92, 92],
    indigo: [75, 0, 130],
    ivory: [255, 255, 240],
    khaki: [240, 230, 140],
    lavender: [230, 230, 250],
    lavenderblush: [255, 240, 245],
    lawngreen: [124, 252, 0],
    lemonchiffon: [255, 250, 205],
    lightblue: [173, 216, 230],
    lightcoral: [240, 128, 128],
    lightcyan: [224, 255, 255],
    lightgoldenrodyellow: [250, 250, 210],
    lightgray: [211, 211, 211],
    lightgreen: [144, 238, 144],
    lightgrey: [211, 211, 211],
    lightpink: [255, 182, 193],
    lightsalmon: [255, 160, 122],
    lightseagreen: [32, 178, 170],
    lightskyblue: [135, 206, 250],
    lightslategray: [119, 136, 153],
    lightslategrey: [119, 136, 153],
    lightsteelblue: [176, 196, 222],
    lightyellow: [255, 255, 224],
    lime: [0, 255, 0],
    limegreen: [50, 205, 50],
    linen: [250, 240, 230],
    magenta: [255, 0, 255],
    maroon: [128, 0, 0],
    mediumaquamarine: [102, 205, 170],
    mediumblue: [0, 0, 205],
    mediumorchid: [186, 85, 211],
    mediumpurple: [147, 112, 219],
    mediumseagreen: [60, 179, 113],
    mediumslateblue: [123, 104, 238],
    mediumspringgreen: [0, 250, 154],
    mediumturquoise: [72, 209, 204],
    mediumvioletred: [199, 21, 133],
    midnightblue: [25, 25, 112],
    mintcream: [245, 255, 250],
    mistyrose: [255, 228, 225],
    moccasin: [255, 228, 181],
    navajowhite: [255, 222, 173],
    navy: [0, 0, 128],
    oldlace: [253, 245, 230],
    olive: [128, 128, 0],
    olivedrab: [107, 142, 35],
    orange: [255, 165, 0],
    orangered: [255, 69, 0],
    orchid: [218, 112, 214],
    palegoldenrod: [238, 232, 170],
    palegreen: [152, 251, 152],
    paleturquoise: [175, 238, 238],
    palevioletred: [219, 112, 147],
    papayawhip: [255, 239, 213],
    peachpuff: [255, 218, 185],
    peru: [205, 133, 63],
    pink: [255, 192, 203],
    plum: [221, 160, 221],
    powderblue: [176, 224, 230],
    purple: [128, 0, 128],
    rebeccapurple: [102, 51, 153],
    red: [255, 0, 0],
    rosybrown: [188, 143, 143],
    royalblue: [65, 105, 225],
    saddlebrown: [139, 69, 19],
    salmon: [250, 128, 114],
    sandybrown: [244, 164, 96],
    seagreen: [46, 139, 87],
    seashell: [255, 245, 238],
    sienna: [160, 82, 45],
    silver: [192, 192, 192],
    skyblue: [135, 206, 235],
    slateblue: [106, 90, 205],
    slategray: [112, 128, 144],
    slategrey: [112, 128, 144],
    snow: [255, 250, 250],
    springgreen: [0, 255, 127],
    steelblue: [70, 130, 180],
    tan: [210, 180, 140],
    teal: [0, 128, 128],
    thistle: [216, 191, 216],
    tomato: [255, 99, 71],
    turquoise: [64, 224, 208],
    violet: [238, 130, 238],
    wheat: [245, 222, 179],
    white: [255, 255, 255],
    whitesmoke: [245, 245, 245],
    yellow: [255, 255, 0],
    yellowgreen: [154, 205, 50]
  }), R2;
}
var B2, rl;
function Ty() {
  if (rl)
    return B2;
  rl = 1;
  const e = UN(), t = {};
  for (const f of Object.keys(e))
    t[e[f]] = f;
  const a = {
    rgb: { channels: 3, labels: "rgb" },
    hsl: { channels: 3, labels: "hsl" },
    hsv: { channels: 3, labels: "hsv" },
    hwb: { channels: 3, labels: "hwb" },
    cmyk: { channels: 4, labels: "cmyk" },
    xyz: { channels: 3, labels: "xyz" },
    lab: { channels: 3, labels: "lab" },
    lch: { channels: 3, labels: "lch" },
    hex: { channels: 1, labels: ["hex"] },
    keyword: { channels: 1, labels: ["keyword"] },
    ansi16: { channels: 1, labels: ["ansi16"] },
    ansi256: { channels: 1, labels: ["ansi256"] },
    hcg: { channels: 3, labels: ["h", "c", "g"] },
    apple: { channels: 3, labels: ["r16", "g16", "b16"] },
    gray: { channels: 1, labels: ["gray"] }
  };
  B2 = a;
  for (const f of Object.keys(a)) {
    if (!("channels" in a[f]))
      throw new Error("missing channels property: " + f);
    if (!("labels" in a[f]))
      throw new Error("missing channel labels property: " + f);
    if (a[f].labels.length !== a[f].channels)
      throw new Error("channel and label counts mismatch: " + f);
    const { channels: i, labels: n } = a[f];
    delete a[f].channels, delete a[f].labels, Object.defineProperty(a[f], "channels", { value: i }), Object.defineProperty(a[f], "labels", { value: n });
  }
  a.rgb.hsl = function(f) {
    const i = f[0] / 255, n = f[1] / 255, o = f[2] / 255, s = Math.min(i, n, o), b = Math.max(i, n, o), l = b - s;
    let v, m;
    b === s ? v = 0 : i === b ? v = (n - o) / l : n === b ? v = 2 + (o - i) / l : o === b && (v = 4 + (i - n) / l), v = Math.min(v * 60, 360), v < 0 && (v += 360);
    const x = (s + b) / 2;
    return b === s ? m = 0 : x <= 0.5 ? m = l / (b + s) : m = l / (2 - b - s), [v, m * 100, x * 100];
  }, a.rgb.hsv = function(f) {
    let i, n, o, s, b;
    const l = f[0] / 255, v = f[1] / 255, m = f[2] / 255, x = Math.max(l, v, m), I = x - Math.min(l, v, m), k = function(P) {
      return (x - P) / 6 / I + 1 / 2;
    };
    return I === 0 ? (s = 0, b = 0) : (b = I / x, i = k(l), n = k(v), o = k(m), l === x ? s = o - n : v === x ? s = 1 / 3 + i - o : m === x && (s = 2 / 3 + n - i), s < 0 ? s += 1 : s > 1 && (s -= 1)), [
      s * 360,
      b * 100,
      x * 100
    ];
  }, a.rgb.hwb = function(f) {
    const i = f[0], n = f[1];
    let o = f[2];
    const s = a.rgb.hsl(f)[0], b = 1 / 255 * Math.min(i, Math.min(n, o));
    return o = 1 - 1 / 255 * Math.max(i, Math.max(n, o)), [s, b * 100, o * 100];
  }, a.rgb.cmyk = function(f) {
    const i = f[0] / 255, n = f[1] / 255, o = f[2] / 255, s = Math.min(1 - i, 1 - n, 1 - o), b = (1 - i - s) / (1 - s) || 0, l = (1 - n - s) / (1 - s) || 0, v = (1 - o - s) / (1 - s) || 0;
    return [b * 100, l * 100, v * 100, s * 100];
  };
  function r(f, i) {
    return (f[0] - i[0]) ** 2 + (f[1] - i[1]) ** 2 + (f[2] - i[2]) ** 2;
  }
  return a.rgb.keyword = function(f) {
    const i = t[f];
    if (i)
      return i;
    let n = 1 / 0, o;
    for (const s of Object.keys(e)) {
      const b = e[s], l = r(f, b);
      l < n && (n = l, o = s);
    }
    return o;
  }, a.keyword.rgb = function(f) {
    return e[f];
  }, a.rgb.xyz = function(f) {
    let i = f[0] / 255, n = f[1] / 255, o = f[2] / 255;
    i = i > 0.04045 ? ((i + 0.055) / 1.055) ** 2.4 : i / 12.92, n = n > 0.04045 ? ((n + 0.055) / 1.055) ** 2.4 : n / 12.92, o = o > 0.04045 ? ((o + 0.055) / 1.055) ** 2.4 : o / 12.92;
    const s = i * 0.4124 + n * 0.3576 + o * 0.1805, b = i * 0.2126 + n * 0.7152 + o * 0.0722, l = i * 0.0193 + n * 0.1192 + o * 0.9505;
    return [s * 100, b * 100, l * 100];
  }, a.rgb.lab = function(f) {
    const i = a.rgb.xyz(f);
    let n = i[0], o = i[1], s = i[2];
    n /= 95.047, o /= 100, s /= 108.883, n = n > 8856e-6 ? n ** (1 / 3) : 7.787 * n + 16 / 116, o = o > 8856e-6 ? o ** (1 / 3) : 7.787 * o + 16 / 116, s = s > 8856e-6 ? s ** (1 / 3) : 7.787 * s + 16 / 116;
    const b = 116 * o - 16, l = 500 * (n - o), v = 200 * (o - s);
    return [b, l, v];
  }, a.hsl.rgb = function(f) {
    const i = f[0] / 360, n = f[1] / 100, o = f[2] / 100;
    let s, b, l;
    if (n === 0)
      return l = o * 255, [l, l, l];
    o < 0.5 ? s = o * (1 + n) : s = o + n - o * n;
    const v = 2 * o - s, m = [0, 0, 0];
    for (let x = 0; x < 3; x++)
      b = i + 1 / 3 * -(x - 1), b < 0 && b++, b > 1 && b--, 6 * b < 1 ? l = v + (s - v) * 6 * b : 2 * b < 1 ? l = s : 3 * b < 2 ? l = v + (s - v) * (2 / 3 - b) * 6 : l = v, m[x] = l * 255;
    return m;
  }, a.hsl.hsv = function(f) {
    const i = f[0];
    let n = f[1] / 100, o = f[2] / 100, s = n;
    const b = Math.max(o, 0.01);
    o *= 2, n *= o <= 1 ? o : 2 - o, s *= b <= 1 ? b : 2 - b;
    const l = (o + n) / 2, v = o === 0 ? 2 * s / (b + s) : 2 * n / (o + n);
    return [i, v * 100, l * 100];
  }, a.hsv.rgb = function(f) {
    const i = f[0] / 60, n = f[1] / 100;
    let o = f[2] / 100;
    const s = Math.floor(i) % 6, b = i - Math.floor(i), l = 255 * o * (1 - n), v = 255 * o * (1 - n * b), m = 255 * o * (1 - n * (1 - b));
    switch (o *= 255, s) {
      case 0:
        return [o, m, l];
      case 1:
        return [v, o, l];
      case 2:
        return [l, o, m];
      case 3:
        return [l, v, o];
      case 4:
        return [m, l, o];
      case 5:
        return [o, l, v];
    }
  }, a.hsv.hsl = function(f) {
    const i = f[0], n = f[1] / 100, o = f[2] / 100, s = Math.max(o, 0.01);
    let b, l;
    l = (2 - n) * o;
    const v = (2 - n) * s;
    return b = n * s, b /= v <= 1 ? v : 2 - v, b = b || 0, l /= 2, [i, b * 100, l * 100];
  }, a.hwb.rgb = function(f) {
    const i = f[0] / 360;
    let n = f[1] / 100, o = f[2] / 100;
    const s = n + o;
    let b;
    s > 1 && (n /= s, o /= s);
    const l = Math.floor(6 * i), v = 1 - o;
    b = 6 * i - l, l & 1 && (b = 1 - b);
    const m = n + b * (v - n);
    let x, I, k;
    switch (l) {
      default:
      case 6:
      case 0:
        x = v, I = m, k = n;
        break;
      case 1:
        x = m, I = v, k = n;
        break;
      case 2:
        x = n, I = v, k = m;
        break;
      case 3:
        x = n, I = m, k = v;
        break;
      case 4:
        x = m, I = n, k = v;
        break;
      case 5:
        x = v, I = n, k = m;
        break;
    }
    return [x * 255, I * 255, k * 255];
  }, a.cmyk.rgb = function(f) {
    const i = f[0] / 100, n = f[1] / 100, o = f[2] / 100, s = f[3] / 100, b = 1 - Math.min(1, i * (1 - s) + s), l = 1 - Math.min(1, n * (1 - s) + s), v = 1 - Math.min(1, o * (1 - s) + s);
    return [b * 255, l * 255, v * 255];
  }, a.xyz.rgb = function(f) {
    const i = f[0] / 100, n = f[1] / 100, o = f[2] / 100;
    let s, b, l;
    return s = i * 3.2406 + n * -1.5372 + o * -0.4986, b = i * -0.9689 + n * 1.8758 + o * 0.0415, l = i * 0.0557 + n * -0.204 + o * 1.057, s = s > 31308e-7 ? 1.055 * s ** (1 / 2.4) - 0.055 : s * 12.92, b = b > 31308e-7 ? 1.055 * b ** (1 / 2.4) - 0.055 : b * 12.92, l = l > 31308e-7 ? 1.055 * l ** (1 / 2.4) - 0.055 : l * 12.92, s = Math.min(Math.max(0, s), 1), b = Math.min(Math.max(0, b), 1), l = Math.min(Math.max(0, l), 1), [s * 255, b * 255, l * 255];
  }, a.xyz.lab = function(f) {
    let i = f[0], n = f[1], o = f[2];
    i /= 95.047, n /= 100, o /= 108.883, i = i > 8856e-6 ? i ** (1 / 3) : 7.787 * i + 16 / 116, n = n > 8856e-6 ? n ** (1 / 3) : 7.787 * n + 16 / 116, o = o > 8856e-6 ? o ** (1 / 3) : 7.787 * o + 16 / 116;
    const s = 116 * n - 16, b = 500 * (i - n), l = 200 * (n - o);
    return [s, b, l];
  }, a.lab.xyz = function(f) {
    const i = f[0], n = f[1], o = f[2];
    let s, b, l;
    b = (i + 16) / 116, s = n / 500 + b, l = b - o / 200;
    const v = b ** 3, m = s ** 3, x = l ** 3;
    return b = v > 8856e-6 ? v : (b - 16 / 116) / 7.787, s = m > 8856e-6 ? m : (s - 16 / 116) / 7.787, l = x > 8856e-6 ? x : (l - 16 / 116) / 7.787, s *= 95.047, b *= 100, l *= 108.883, [s, b, l];
  }, a.lab.lch = function(f) {
    const i = f[0], n = f[1], o = f[2];
    let s;
    s = Math.atan2(o, n) * 360 / 2 / Math.PI, s < 0 && (s += 360);
    const l = Math.sqrt(n * n + o * o);
    return [i, l, s];
  }, a.lch.lab = function(f) {
    const i = f[0], n = f[1], s = f[2] / 360 * 2 * Math.PI, b = n * Math.cos(s), l = n * Math.sin(s);
    return [i, b, l];
  }, a.rgb.ansi16 = function(f, i = null) {
    const [n, o, s] = f;
    let b = i === null ? a.rgb.hsv(f)[2] : i;
    if (b = Math.round(b / 50), b === 0)
      return 30;
    let l = 30 + (Math.round(s / 255) << 2 | Math.round(o / 255) << 1 | Math.round(n / 255));
    return b === 2 && (l += 60), l;
  }, a.hsv.ansi16 = function(f) {
    return a.rgb.ansi16(a.hsv.rgb(f), f[2]);
  }, a.rgb.ansi256 = function(f) {
    const i = f[0], n = f[1], o = f[2];
    return i === n && n === o ? i < 8 ? 16 : i > 248 ? 231 : Math.round((i - 8) / 247 * 24) + 232 : 16 + 36 * Math.round(i / 255 * 5) + 6 * Math.round(n / 255 * 5) + Math.round(o / 255 * 5);
  }, a.ansi16.rgb = function(f) {
    let i = f % 10;
    if (i === 0 || i === 7)
      return f > 50 && (i += 3.5), i = i / 10.5 * 255, [i, i, i];
    const n = (~~(f > 50) + 1) * 0.5, o = (i & 1) * n * 255, s = (i >> 1 & 1) * n * 255, b = (i >> 2 & 1) * n * 255;
    return [o, s, b];
  }, a.ansi256.rgb = function(f) {
    if (f >= 232) {
      const b = (f - 232) * 10 + 8;
      return [b, b, b];
    }
    f -= 16;
    let i;
    const n = Math.floor(f / 36) / 5 * 255, o = Math.floor((i = f % 36) / 6) / 5 * 255, s = i % 6 / 5 * 255;
    return [n, o, s];
  }, a.rgb.hex = function(f) {
    const n = (((Math.round(f[0]) & 255) << 16) + ((Math.round(f[1]) & 255) << 8) + (Math.round(f[2]) & 255)).toString(16).toUpperCase();
    return "000000".substring(n.length) + n;
  }, a.hex.rgb = function(f) {
    const i = f.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);
    if (!i)
      return [0, 0, 0];
    let n = i[0];
    i[0].length === 3 && (n = n.split("").map((v) => v + v).join(""));
    const o = parseInt(n, 16), s = o >> 16 & 255, b = o >> 8 & 255, l = o & 255;
    return [s, b, l];
  }, a.rgb.hcg = function(f) {
    const i = f[0] / 255, n = f[1] / 255, o = f[2] / 255, s = Math.max(Math.max(i, n), o), b = Math.min(Math.min(i, n), o), l = s - b;
    let v, m;
    return l < 1 ? v = b / (1 - l) : v = 0, l <= 0 ? m = 0 : s === i ? m = (n - o) / l % 6 : s === n ? m = 2 + (o - i) / l : m = 4 + (i - n) / l, m /= 6, m %= 1, [m * 360, l * 100, v * 100];
  }, a.hsl.hcg = function(f) {
    const i = f[1] / 100, n = f[2] / 100, o = n < 0.5 ? 2 * i * n : 2 * i * (1 - n);
    let s = 0;
    return o < 1 && (s = (n - 0.5 * o) / (1 - o)), [f[0], o * 100, s * 100];
  }, a.hsv.hcg = function(f) {
    const i = f[1] / 100, n = f[2] / 100, o = i * n;
    let s = 0;
    return o < 1 && (s = (n - o) / (1 - o)), [f[0], o * 100, s * 100];
  }, a.hcg.rgb = function(f) {
    const i = f[0] / 360, n = f[1] / 100, o = f[2] / 100;
    if (n === 0)
      return [o * 255, o * 255, o * 255];
    const s = [0, 0, 0], b = i % 1 * 6, l = b % 1, v = 1 - l;
    let m = 0;
    switch (Math.floor(b)) {
      case 0:
        s[0] = 1, s[1] = l, s[2] = 0;
        break;
      case 1:
        s[0] = v, s[1] = 1, s[2] = 0;
        break;
      case 2:
        s[0] = 0, s[1] = 1, s[2] = l;
        break;
      case 3:
        s[0] = 0, s[1] = v, s[2] = 1;
        break;
      case 4:
        s[0] = l, s[1] = 0, s[2] = 1;
        break;
      default:
        s[0] = 1, s[1] = 0, s[2] = v;
    }
    return m = (1 - n) * o, [
      (n * s[0] + m) * 255,
      (n * s[1] + m) * 255,
      (n * s[2] + m) * 255
    ];
  }, a.hcg.hsv = function(f) {
    const i = f[1] / 100, n = f[2] / 100, o = i + n * (1 - i);
    let s = 0;
    return o > 0 && (s = i / o), [f[0], s * 100, o * 100];
  }, a.hcg.hsl = function(f) {
    const i = f[1] / 100, o = f[2] / 100 * (1 - i) + 0.5 * i;
    let s = 0;
    return o > 0 && o < 0.5 ? s = i / (2 * o) : o >= 0.5 && o < 1 && (s = i / (2 * (1 - o))), [f[0], s * 100, o * 100];
  }, a.hcg.hwb = function(f) {
    const i = f[1] / 100, n = f[2] / 100, o = i + n * (1 - i);
    return [f[0], (o - i) * 100, (1 - o) * 100];
  }, a.hwb.hcg = function(f) {
    const i = f[1] / 100, o = 1 - f[2] / 100, s = o - i;
    let b = 0;
    return s < 1 && (b = (o - s) / (1 - s)), [f[0], s * 100, b * 100];
  }, a.apple.rgb = function(f) {
    return [f[0] / 65535 * 255, f[1] / 65535 * 255, f[2] / 65535 * 255];
  }, a.rgb.apple = function(f) {
    return [f[0] / 255 * 65535, f[1] / 255 * 65535, f[2] / 255 * 65535];
  }, a.gray.rgb = function(f) {
    return [f[0] / 100 * 255, f[0] / 100 * 255, f[0] / 100 * 255];
  }, a.gray.hsl = function(f) {
    return [0, 0, f[0]];
  }, a.gray.hsv = a.gray.hsl, a.gray.hwb = function(f) {
    return [0, 100, f[0]];
  }, a.gray.cmyk = function(f) {
    return [0, 0, 0, f[0]];
  }, a.gray.lab = function(f) {
    return [f[0], 0, 0];
  }, a.gray.hex = function(f) {
    const i = Math.round(f[0] / 100 * 255) & 255, o = ((i << 16) + (i << 8) + i).toString(16).toUpperCase();
    return "000000".substring(o.length) + o;
  }, a.rgb.gray = function(f) {
    return [(f[0] + f[1] + f[2]) / 3 / 255 * 100];
  }, B2;
}
var N2, fl;
function $N() {
  if (fl)
    return N2;
  fl = 1;
  const e = Ty();
  function t() {
    const i = {}, n = Object.keys(e);
    for (let o = n.length, s = 0; s < o; s++)
      i[n[s]] = {
        // http://jsperf.com/1-vs-infinity
        // micro-opt, but this is simple.
        distance: -1,
        parent: null
      };
    return i;
  }
  function a(i) {
    const n = t(), o = [i];
    for (n[i].distance = 0; o.length; ) {
      const s = o.pop(), b = Object.keys(e[s]);
      for (let l = b.length, v = 0; v < l; v++) {
        const m = b[v], x = n[m];
        x.distance === -1 && (x.distance = n[s].distance + 1, x.parent = s, o.unshift(m));
      }
    }
    return n;
  }
  function r(i, n) {
    return function(o) {
      return n(i(o));
    };
  }
  function f(i, n) {
    const o = [n[i].parent, i];
    let s = e[n[i].parent][i], b = n[i].parent;
    for (; n[b].parent; )
      o.unshift(n[b].parent), s = r(e[n[b].parent][b], s), b = n[b].parent;
    return s.conversion = o, s;
  }
  return N2 = function(i) {
    const n = a(i), o = {}, s = Object.keys(n);
    for (let b = s.length, l = 0; l < b; l++) {
      const v = s[l];
      n[v].parent !== null && (o[v] = f(v, n));
    }
    return o;
  }, N2;
}
var C2, il;
function jN() {
  if (il)
    return C2;
  il = 1;
  const e = Ty(), t = $N(), a = {}, r = Object.keys(e);
  function f(n) {
    const o = function(...s) {
      const b = s[0];
      return b == null ? b : (b.length > 1 && (s = b), n(s));
    };
    return "conversion" in n && (o.conversion = n.conversion), o;
  }
  function i(n) {
    const o = function(...s) {
      const b = s[0];
      if (b == null)
        return b;
      b.length > 1 && (s = b);
      const l = n(s);
      if (typeof l == "object")
        for (let v = l.length, m = 0; m < v; m++)
          l[m] = Math.round(l[m]);
      return l;
    };
    return "conversion" in n && (o.conversion = n.conversion), o;
  }
  return r.forEach((n) => {
    a[n] = {}, Object.defineProperty(a[n], "channels", { value: e[n].channels }), Object.defineProperty(a[n], "labels", { value: e[n].labels });
    const o = t(n);
    Object.keys(o).forEach((b) => {
      const l = o[b];
      a[n][b] = i(l), a[n][b].raw = f(l);
    });
  }), C2 = a, C2;
}
Ud.exports;
(function(e) {
  const t = (l, v) => (...m) => `\x1B[${l(...m) + v}m`, a = (l, v) => (...m) => {
    const x = l(...m);
    return `\x1B[${38 + v};5;${x}m`;
  }, r = (l, v) => (...m) => {
    const x = l(...m);
    return `\x1B[${38 + v};2;${x[0]};${x[1]};${x[2]}m`;
  }, f = (l) => l, i = (l, v, m) => [l, v, m], n = (l, v, m) => {
    Object.defineProperty(l, v, {
      get: () => {
        const x = m();
        return Object.defineProperty(l, v, {
          value: x,
          enumerable: !0,
          configurable: !0
        }), x;
      },
      enumerable: !0,
      configurable: !0
    });
  };
  let o;
  const s = (l, v, m, x) => {
    o === void 0 && (o = jN());
    const I = x ? 10 : 0, k = {};
    for (const [P, M] of Object.entries(o)) {
      const R = P === "ansi16" ? "ansi" : P;
      P === v ? k[R] = l(m, I) : typeof M == "object" && (k[R] = l(M[v], I));
    }
    return k;
  };
  function b() {
    const l = /* @__PURE__ */ new Map(), v = {
      modifier: {
        reset: [0, 0],
        // 21 isn't widely supported and 22 does the same thing
        bold: [1, 22],
        dim: [2, 22],
        italic: [3, 23],
        underline: [4, 24],
        inverse: [7, 27],
        hidden: [8, 28],
        strikethrough: [9, 29]
      },
      color: {
        black: [30, 39],
        red: [31, 39],
        green: [32, 39],
        yellow: [33, 39],
        blue: [34, 39],
        magenta: [35, 39],
        cyan: [36, 39],
        white: [37, 39],
        // Bright color
        blackBright: [90, 39],
        redBright: [91, 39],
        greenBright: [92, 39],
        yellowBright: [93, 39],
        blueBright: [94, 39],
        magentaBright: [95, 39],
        cyanBright: [96, 39],
        whiteBright: [97, 39]
      },
      bgColor: {
        bgBlack: [40, 49],
        bgRed: [41, 49],
        bgGreen: [42, 49],
        bgYellow: [43, 49],
        bgBlue: [44, 49],
        bgMagenta: [45, 49],
        bgCyan: [46, 49],
        bgWhite: [47, 49],
        // Bright color
        bgBlackBright: [100, 49],
        bgRedBright: [101, 49],
        bgGreenBright: [102, 49],
        bgYellowBright: [103, 49],
        bgBlueBright: [104, 49],
        bgMagentaBright: [105, 49],
        bgCyanBright: [106, 49],
        bgWhiteBright: [107, 49]
      }
    };
    v.color.gray = v.color.blackBright, v.bgColor.bgGray = v.bgColor.bgBlackBright, v.color.grey = v.color.blackBright, v.bgColor.bgGrey = v.bgColor.bgBlackBright;
    for (const [m, x] of Object.entries(v)) {
      for (const [I, k] of Object.entries(x))
        v[I] = {
          open: `\x1B[${k[0]}m`,
          close: `\x1B[${k[1]}m`
        }, x[I] = v[I], l.set(k[0], k[1]);
      Object.defineProperty(v, m, {
        value: x,
        enumerable: !1
      });
    }
    return Object.defineProperty(v, "codes", {
      value: l,
      enumerable: !1
    }), v.color.close = "\x1B[39m", v.bgColor.close = "\x1B[49m", n(v.color, "ansi", () => s(t, "ansi16", f, !1)), n(v.color, "ansi256", () => s(a, "ansi256", f, !1)), n(v.color, "ansi16m", () => s(r, "rgb", i, !1)), n(v.bgColor, "ansi", () => s(t, "ansi16", f, !0)), n(v.bgColor, "ansi256", () => s(a, "ansi256", f, !0)), n(v.bgColor, "ansi16m", () => s(r, "rgb", i, !0)), v;
  }
  Object.defineProperty(e, "exports", {
    enumerable: !0,
    get: b
  });
})(Ud);
var VN = Ud.exports, zN = {
  stdout: !1,
  stderr: !1
};
const qN = (e, t, a) => {
  let r = e.indexOf(t);
  if (r === -1)
    return e;
  const f = t.length;
  let i = 0, n = "";
  do
    n += e.substr(i, r - i) + t + a, i = r + f, r = e.indexOf(t, i);
  while (r !== -1);
  return n += e.substr(i), n;
}, KN = (e, t, a, r) => {
  let f = 0, i = "";
  do {
    const n = e[r - 1] === "\r";
    i += e.substr(f, (n ? r - 1 : r) - f) + t + (n ? `\r
` : `
`) + a, f = r + 1, r = e.indexOf(`
`, f);
  } while (r !== -1);
  return i += e.substr(f), i;
};
var GN = {
  stringReplaceAll: qN,
  stringEncaseCRLFWithFirstIndex: KN
}, D2, nl;
function WN() {
  if (nl)
    return D2;
  nl = 1;
  const e = /(?:\\(u(?:[a-f\d]{4}|\{[a-f\d]{1,6}\})|x[a-f\d]{2}|.))|(?:\{(~)?(\w+(?:\([^)]*\))?(?:\.\w+(?:\([^)]*\))?)*)(?:[ \t]|(?=\r?\n)))|(\})|((?:.|[\r\n\f])+?)/gi, t = /(?:^|\.)(\w+)(?:\(([^)]*)\))?/g, a = /^(['"])((?:\\.|(?!\1)[^\\])*)\1$/, r = /\\(u(?:[a-f\d]{4}|{[a-f\d]{1,6}})|x[a-f\d]{2}|.)|([^\\])/gi, f = /* @__PURE__ */ new Map([
    ["n", `
`],
    ["r", "\r"],
    ["t", "	"],
    ["b", "\b"],
    ["f", "\f"],
    ["v", "\v"],
    ["0", "\0"],
    ["\\", "\\"],
    ["e", "\x1B"],
    ["a", "\x07"]
  ]);
  function i(b) {
    const l = b[0] === "u", v = b[1] === "{";
    return l && !v && b.length === 5 || b[0] === "x" && b.length === 3 ? String.fromCharCode(parseInt(b.slice(1), 16)) : l && v ? String.fromCodePoint(parseInt(b.slice(2, -1), 16)) : f.get(b) || b;
  }
  function n(b, l) {
    const v = [], m = l.trim().split(/\s*,\s*/g);
    let x;
    for (const I of m) {
      const k = Number(I);
      if (!Number.isNaN(k))
        v.push(k);
      else if (x = I.match(a))
        v.push(x[2].replace(r, (P, M, R) => M ? i(M) : R));
      else
        throw new Error(`Invalid Chalk template style argument: ${I} (in style '${b}')`);
    }
    return v;
  }
  function o(b) {
    t.lastIndex = 0;
    const l = [];
    let v;
    for (; (v = t.exec(b)) !== null; ) {
      const m = v[1];
      if (v[2]) {
        const x = n(m, v[2]);
        l.push([m].concat(x));
      } else
        l.push([m]);
    }
    return l;
  }
  function s(b, l) {
    const v = {};
    for (const x of l)
      for (const I of x.styles)
        v[I[0]] = x.inverse ? null : I.slice(1);
    let m = b;
    for (const [x, I] of Object.entries(v))
      if (Array.isArray(I)) {
        if (!(x in m))
          throw new Error(`Unknown Chalk style: ${x}`);
        m = I.length > 0 ? m[x](...I) : m[x];
      }
    return m;
  }
  return D2 = (b, l) => {
    const v = [], m = [];
    let x = [];
    if (l.replace(e, (I, k, P, M, R, F) => {
      if (k)
        x.push(i(k));
      else if (M) {
        const C = x.join("");
        x = [], m.push(v.length === 0 ? C : s(b, v)(C)), v.push({ inverse: P, styles: o(M) });
      } else if (R) {
        if (v.length === 0)
          throw new Error("Found extraneous } in Chalk template literal");
        m.push(s(b, v)(x.join(""))), x = [], v.pop();
      } else
        x.push(F);
    }), m.push(x.join("")), v.length > 0) {
      const I = `Chalk template literal is missing ${v.length} closing bracket${v.length === 1 ? "" : "s"} (\`}\`)`;
      throw new Error(I);
    }
    return m.join("");
  }, D2;
}
const L9 = VN, { stdout: ts, stderr: as } = zN, {
  stringReplaceAll: ZN,
  stringEncaseCRLFWithFirstIndex: YN
} = GN, { isArray: Bf } = Array, Ay = [
  "ansi",
  "ansi",
  "ansi256",
  "ansi16m"
], B1 = /* @__PURE__ */ Object.create(null), XN = (e, t = {}) => {
  if (t.level && !(Number.isInteger(t.level) && t.level >= 0 && t.level <= 3))
    throw new Error("The `level` option should be an integer from 0 to 3");
  const a = ts ? ts.level : 0;
  e.level = t.level === void 0 ? a : t.level;
};
class JN {
  constructor(t) {
    return Iy(t);
  }
}
const Iy = (e) => {
  const t = {};
  return XN(t, e), t.template = (...a) => Oy(t.template, ...a), Object.setPrototypeOf(t, Ki.prototype), Object.setPrototypeOf(t.template, t), t.template.constructor = () => {
    throw new Error("`chalk.constructor()` is deprecated. Use `new chalk.Instance()` instead.");
  }, t.template.Instance = JN, t.template;
};
function Ki(e) {
  return Iy(e);
}
for (const [e, t] of Object.entries(L9))
  B1[e] = {
    get() {
      const a = Gi(this, $d(t.open, t.close, this._styler), this._isEmpty);
      return Object.defineProperty(this, e, { value: a }), a;
    }
  };
B1.visible = {
  get() {
    const e = Gi(this, this._styler, !0);
    return Object.defineProperty(this, "visible", { value: e }), e;
  }
};
const ky = ["rgb", "hex", "keyword", "hsl", "hsv", "hwb", "ansi", "ansi256"];
for (const e of ky)
  B1[e] = {
    get() {
      const { level: t } = this;
      return function(...a) {
        const r = $d(L9.color[Ay[t]][e](...a), L9.color.close, this._styler);
        return Gi(this, r, this._isEmpty);
      };
    }
  };
for (const e of ky) {
  const t = "bg" + e[0].toUpperCase() + e.slice(1);
  B1[t] = {
    get() {
      const { level: a } = this;
      return function(...r) {
        const f = $d(L9.bgColor[Ay[a]][e](...r), L9.bgColor.close, this._styler);
        return Gi(this, f, this._isEmpty);
      };
    }
  };
}
const QN = Object.defineProperties(() => {
}, {
  ...B1,
  level: {
    enumerable: !0,
    get() {
      return this._generator.level;
    },
    set(e) {
      this._generator.level = e;
    }
  }
}), $d = (e, t, a) => {
  let r, f;
  return a === void 0 ? (r = e, f = t) : (r = a.openAll + e, f = t + a.closeAll), {
    open: e,
    close: t,
    openAll: r,
    closeAll: f,
    parent: a
  };
}, Gi = (e, t, a) => {
  const r = (...f) => Bf(f[0]) && Bf(f[0].raw) ? ol(r, Oy(r, ...f)) : ol(r, f.length === 1 ? "" + f[0] : f.join(" "));
  return Object.setPrototypeOf(r, QN), r._generator = e, r._styler = t, r._isEmpty = a, r;
}, ol = (e, t) => {
  if (e.level <= 0 || !t)
    return e._isEmpty ? "" : t;
  let a = e._styler;
  if (a === void 0)
    return t;
  const { openAll: r, closeAll: f } = a;
  if (t.indexOf("\x1B") !== -1)
    for (; a !== void 0; )
      t = ZN(t, a.close, a.open), a = a.parent;
  const i = t.indexOf(`
`);
  return i !== -1 && (t = YN(t, f, r, i)), r + t + f;
};
let L2;
const Oy = (e, ...t) => {
  const [a] = t;
  if (!Bf(a) || !Bf(a.raw))
    return t.join(" ");
  const r = t.slice(1), f = [a.raw[0]];
  for (let i = 1; i < a.length; i++)
    f.push(
      String(r[i - 1]).replace(/[{}\\]/g, "\\$&"),
      String(a.raw[i])
    );
  return L2 === void 0 && (L2 = WN()), L2(e, f.join(""));
};
Object.defineProperties(Ki.prototype, B1);
const Wi = Ki();
Wi.supportsColor = ts;
Wi.stderr = Ki({ level: as ? as.level : 0 });
Wi.stderr.supportsColor = as;
var eC = Wi;
Object.defineProperty(h1, "__esModule", { value: !0 });
h1.findCompiler = h1.getPlatformScryptc = void 0;
var b9 = Et, tC = LN, dt = Zt, sl = HN, aC = Zt, na = eC, Nf = r0, rC = Zp;
function jd() {
  switch (Nf.platform()) {
    case "win32":
      return "compiler/scryptc/win32/scryptc.exe";
    case "linux":
      return "compiler/scryptc/linux/scryptc";
    case "darwin":
      return "compiler/scryptc/mac/scryptc";
    default:
      throw "sCrypt doesn't support " + Nf.platform();
  }
}
h1.getPlatformScryptc = jd;
function fC() {
  var e = Nf.homedir(), t = b9.join(e, ".vscode/extensions");
  if (dt.existsSync(t)) {
    var a = "bsv-scrypt.scrypt-", r = dt.readdirSync(t).reduce(function(n, o) {
      if (o.indexOf(a) > -1) {
        var s = o.substring(a.length);
        sl.validate(s) && n.push(s);
      }
      return n;
    }, []);
    r = r.sort(sl).reverse();
    var f = a + r[0], i = b9.join(t, f, jd());
    return dt.existsSync(i) ? i : void 0;
  }
}
function Py(e) {
  e === void 0 && (e = __dirname);
  var t = b9.resolve(e, "compiler");
  if (dt.existsSync(t) && dt.statSync(t).isDirectory()) {
    var a = b9.join(t, "..", jd());
    return dt.existsSync(a) ? a : void 0;
  }
  var r = b9.resolve(e, "..");
  if (r !== e)
    return Py(r);
}
function iC() {
  var e = Nf.platform().indexOf("win") > -1, t = e ? "where" : "which";
  try {
    var a = aC.execSync(t + " scryptc", { stdio: [] }).toString();
    return a.replace(/\r\n/g, "");
  } catch {
    return;
  }
}
function nC() {
  var e = tC(g7.argv.slice(2)), t = e.scryptc;
  if (t && t.startsWith('"') && t.endsWith('"') && (t = t.substring(1, t.length - 1)), t && dt.existsSync(t) || (t = Py(), t && dt.existsSync(t)) || (t = iC(), t && dt.existsSync(t)) || (t = fC(), t && dt.existsSync(t)))
    return t;
  console.info(na.default.red.bold("**ERROR**") + " " + na.default.red("No sCrypt compiler found.") + `

  `), console.info("" + na.default.green.bold(`You can install the compiler in the following ways: 
`)), console.info("" + na.default.grey("•"), "Run " + na.default.yellow.bold("npx scryptlib download") + " to download the compiler binary."), console.info("" + na.default.grey("•"), "Install " + na.default.bold("sCrypt IDE") + " at vscode extension marketplace: " + na.default.blue.bold("https://marketplace.visualstudio.com/items?itemName=bsv-scrypt.sCrypt")), rC.exit(-1);
}
h1.findCompiler = nC;
var b1 = {};
Object.defineProperty(b1, "__esModule", { value: !0 });
b1.sha256ByPartialHash = b1.partialSha256 = void 0;
var oC = [
  1116352408,
  1899447441,
  3049323471,
  3921009573,
  961987163,
  1508970993,
  2453635748,
  2870763221,
  3624381080,
  310598401,
  607225278,
  1426881987,
  1925078388,
  2162078206,
  2614888103,
  3248222580,
  3835390401,
  4022224774,
  264347078,
  604807628,
  770255983,
  1249150122,
  1555081692,
  1996064986,
  2554220882,
  2821834349,
  2952996808,
  3210313671,
  3336571891,
  3584528711,
  113926993,
  338241895,
  666307205,
  773529912,
  1294757372,
  1396182291,
  1695183700,
  1986661051,
  2177026350,
  2456956037,
  2730485921,
  2820302411,
  3259730800,
  3345764771,
  3516065817,
  3600352804,
  4094571909,
  275423344,
  430227734,
  506948616,
  659060556,
  883997877,
  958139571,
  1322822218,
  1537002063,
  1747873779,
  1955562222,
  2024104815,
  2227730452,
  2361852424,
  2428436474,
  2756734187,
  3204031479,
  3329325298
];
function sC(e, t) {
  var a = e.length, r = a % 64 < 56 ? 64 - a % 64 : 128 - a % 64, f = Q.Buffer.alloc(r), i = Q.Buffer.concat([e, f]), n = a / 536870912 | 0, o = a << 3;
  i[a] = 128;
  for (var s = a + 1; s < i.length - 8; s++)
    i[s] = 0;
  i[i.length - 8] = n >>> 24 & 255, i[i.length - 7] = n >>> 16 & 255, i[i.length - 6] = n >>> 8 & 255, i[i.length - 5] = n >>> 0 & 255, i[i.length - 4] = o >>> 24 & 255, i[i.length - 3] = o >>> 16 & 255, i[i.length - 2] = o >>> 8 & 255, i[i.length - 1] = o >>> 0 & 255;
  for (var b = [], s = 0; s < i.length / 64; s++)
    b.push(i.slice(s * 64, s * 64 + 64));
  for (var l = [1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225], v = l, s = 0; s < b.length; s++) {
    var m = b[s];
    if (v = My(v, m), a > 64 && s == t)
      break;
  }
  var x = Ry(v);
  if (t > -1 && a > 64) {
    var I = e.slice((t + 1) * 64), k = i.slice(e.length);
    return [x, I.toString("hex"), k.toString("hex")];
  }
  return [x, "", ""];
}
b1.partialSha256 = sC;
function dC(e, t, a) {
  for (var r = Q.Buffer.from(e, "hex"), f = Q.Buffer.from(t + a, "hex"), i = [], n = 0; n < f.length / 64; n++)
    i.push(f.slice(n * 64, n * 64 + 64));
  for (var o = [
    oa(r.slice(0, 4)),
    oa(r.slice(4, 8)),
    oa(r.slice(8, 12)),
    oa(r.slice(12, 16)),
    oa(r.slice(16, 20)),
    oa(r.slice(20, 24)),
    oa(r.slice(24, 28)),
    oa(r.slice(28, 32))
  ], s = o, n = 0; n < i.length; n++) {
    var b = i[n];
    s = My(s, b);
  }
  return Ry(s);
}
b1.sha256ByPartialHash = dC;
function oa(e) {
  return e.readUInt32BE();
}
function cC(e) {
  return e = Number(e), e < 0 ? Math.ceil(e) : Math.floor(e);
}
function uC(e, t) {
  return e - Math.floor(e / t) * t;
}
function sa(e) {
  return uC(cC(e), Math.pow(2, 32));
}
function My(e, t) {
  for (var a = e[0], r = e[1], f = e[2], i = e[3], n = e[4], o = e[5], s = e[6], b = e[7], l = [], v = 0; v < 64; v++) {
    if (v < 16)
      l[v] = t.slice(v * 4, v * 4 + 4).readUInt32BE();
    else {
      var m = l[v - 15], x = (m << 25 | m >>> 7) ^ (m << 14 | m >>> 18) ^ m >>> 3, I = l[v - 2], k = (I << 15 | I >>> 17) ^ (I << 13 | I >>> 19) ^ I >>> 10;
      l[v] = x + l[v - 7] + k + l[v - 16];
    }
    var P = n & o ^ ~n & s, M = a & r ^ a & f ^ r & f, R = (a << 30 | a >>> 2) ^ (a << 19 | a >>> 13) ^ (a << 10 | a >>> 22), F = (n << 26 | n >>> 6) ^ (n << 21 | n >>> 11) ^ (n << 7 | n >>> 25), C = b + F + P + oC[v] + l[v], L = R + M;
    b = s, s = o, o = n, n = i + C, i = f, f = r, r = a, a = C + L;
  }
  return [
    sa(e[0] + a),
    sa(e[1] + r),
    sa(e[2] + f),
    sa(e[3] + i),
    sa(e[4] + n),
    sa(e[5] + o),
    sa(e[6] + s),
    sa(e[7] + b)
  ];
}
function da(e) {
  var t = Q.Buffer.from([0, 0, 0, 0]);
  return t.writeUInt32BE(e), t;
}
function Ry(e) {
  var t = [da(e[0]), da(e[1]), da(e[2]), da(e[3]), da(e[4]), da(e[5]), da(e[6]), da(e[7])];
  return t.reduce(function(a, r) {
    return Q.Buffer.concat([a, r]);
  }, Q.Buffer.from([])).toString("hex");
}
var dl;
function A5() {
  return dl || (dl = 1, function(e) {
    var t = I7 && I7.__createBinding || (Object.create ? function(r, f, i, n) {
      n === void 0 && (n = i), Object.defineProperty(r, n, { enumerable: !0, get: function() {
        return f[i];
      } });
    } : function(r, f, i, n) {
      n === void 0 && (n = i), r[n] = f[i];
    }), a = I7 && I7.__exportStar || function(r, f) {
      for (var i in r)
        i !== "default" && !f.hasOwnProperty(i) && t(f, r, i);
    };
    Object.defineProperty(e, "__esModule", { value: !0 }), a(Hd(), e), a(qi(), e), a(wy(), e), a(Sy(), e), a(zi(), e), a(DN(), e), a(h1, e), a(b1, e);
  }(hn)), hn;
}
var cl;
function By() {
  return cl || (cl = 1, function(e) {
    Object.defineProperty(e, "__esModule", { value: !0 });
    var t = A5();
    Object.defineProperty(e, "buildContractClass", { enumerable: !0, get: function() {
      return t.buildContractClass;
    } }), Object.defineProperty(e, "buildTypeClasses", { enumerable: !0, get: function() {
      return t.buildTypeClasses;
    } }), Object.defineProperty(e, "compile", { enumerable: !0, get: function() {
      return t.compile;
    } }), Object.defineProperty(e, "compileAsync", { enumerable: !0, get: function() {
      return t.compileAsync;
    } }), Object.defineProperty(e, "compileContract", { enumerable: !0, get: function() {
      return t.compileContract;
    } }), Object.defineProperty(e, "doCompileAsync", { enumerable: !0, get: function() {
      return t.doCompileAsync;
    } }), Object.defineProperty(e, "getPreimage", { enumerable: !0, get: function() {
      return t.getPreimage;
    } }), Object.defineProperty(e, "signTx", { enumerable: !0, get: function() {
      return t.signTx;
    } }), Object.defineProperty(e, "handleCompilerOutput", { enumerable: !0, get: function() {
      return t.handleCompilerOutput;
    } }), Object.defineProperty(e, "compileContractAsync", { enumerable: !0, get: function() {
      return t.compileContractAsync;
    } });
    var a = A5();
    Object.defineProperty(e, "mvc", { enumerable: !0, get: function() {
      return a.mvc;
    } }), Object.defineProperty(e, "ECIES", { enumerable: !0, get: function() {
      return a.ECIES;
    } }), Object.defineProperty(e, "toHex", { enumerable: !0, get: function() {
      return a.toHex;
    } }), Object.defineProperty(e, "bin2num", { enumerable: !0, get: function() {
      return a.bin2num;
    } }), Object.defineProperty(e, "bool2Asm", { enumerable: !0, get: function() {
      return a.bool2Asm;
    } }), Object.defineProperty(e, "int2Asm", { enumerable: !0, get: function() {
      return a.int2Asm;
    } }), Object.defineProperty(e, "parseLiteral", { enumerable: !0, get: function() {
      return a.parseLiteral;
    } }), Object.defineProperty(e, "bytes2Literal", { enumerable: !0, get: function() {
      return a.bytes2Literal;
    } }), Object.defineProperty(e, "bytesToHexString", { enumerable: !0, get: function() {
      return a.bytesToHexString;
    } }), Object.defineProperty(e, "getValidatedHexString", { enumerable: !0, get: function() {
      return a.getValidatedHexString;
    } }), Object.defineProperty(e, "literal2ScryptType", { enumerable: !0, get: function() {
      return a.literal2ScryptType;
    } }), Object.defineProperty(e, "literal2Asm", { enumerable: !0, get: function() {
      return a.literal2Asm;
    } }), Object.defineProperty(e, "findStructByType", { enumerable: !0, get: function() {
      return a.findStructByType;
    } }), Object.defineProperty(e, "findStructByName", { enumerable: !0, get: function() {
      return a.findStructByName;
    } }), Object.defineProperty(e, "isArrayType", { enumerable: !0, get: function() {
      return a.isArrayType;
    } }), Object.defineProperty(e, "arrayTypeAndSize", { enumerable: !0, get: function() {
      return a.arrayTypeAndSize;
    } }), Object.defineProperty(e, "newCall", { enumerable: !0, get: function() {
      return a.newCall;
    } }), Object.defineProperty(e, "getNameByType", { enumerable: !0, get: function() {
      return a.getNameByType;
    } }), Object.defineProperty(e, "genLaunchConfigFile", { enumerable: !0, get: function() {
      return a.genLaunchConfigFile;
    } }), Object.defineProperty(e, "subArrayType", { enumerable: !0, get: function() {
      return a.subArrayType;
    } }), Object.defineProperty(e, "flattenSha256", { enumerable: !0, get: function() {
      return a.flattenSha256;
    } }), Object.defineProperty(e, "isGenericType", { enumerable: !0, get: function() {
      return a.isGenericType;
    } }), Object.defineProperty(e, "parseGenericType", { enumerable: !0, get: function() {
      return a.parseGenericType;
    } }), Object.defineProperty(e, "toData", { enumerable: !0, get: function() {
      return a.toData;
    } }), Object.defineProperty(e, "findKeyIndex", { enumerable: !0, get: function() {
      return a.findKeyIndex;
    } }), Object.defineProperty(e, "readLaunchJson", { enumerable: !0, get: function() {
      return a.readLaunchJson;
    } }), Object.defineProperty(e, "getLowSPreimage", { enumerable: !0, get: function() {
      return a.getLowSPreimage;
    } }), Object.defineProperty(e, "readBytes", { enumerable: !0, get: function() {
      return a.readBytes;
    } }), Object.defineProperty(e, "parseAbiFromUnlockingScript", { enumerable: !0, get: function() {
      return a.parseAbiFromUnlockingScript;
    } }), Object.defineProperty(e, "findConstStatic", { enumerable: !0, get: function() {
      return a.findConstStatic;
    } }), Object.defineProperty(e, "findStatic", { enumerable: !0, get: function() {
      return a.findStatic;
    } }), Object.defineProperty(e, "resolveConstValue", { enumerable: !0, get: function() {
      return a.resolveConstValue;
    } }), Object.defineProperty(e, "arrayTypeAndSizeStr", { enumerable: !0, get: function() {
      return a.arrayTypeAndSizeStr;
    } }), Object.defineProperty(e, "toLiteralArrayType", { enumerable: !0, get: function() {
      return a.toLiteralArrayType;
    } }), Object.defineProperty(e, "serializeSupportedParamType", { enumerable: !0, get: function() {
      return a.serializeSupportedParamType;
    } }), Object.defineProperty(e, "librarySign", { enumerable: !0, get: function() {
      return a.librarySign;
    } }), Object.defineProperty(e, "structSign", { enumerable: !0, get: function() {
      return a.structSign;
    } }), Object.defineProperty(e, "resolveGenericType", { enumerable: !0, get: function() {
      return a.resolveGenericType;
    } }), Object.defineProperty(e, "createDefaultLibrary", { enumerable: !0, get: function() {
      return a.createDefaultLibrary;
    } }), Object.defineProperty(e, "createLibraryProperties", { enumerable: !0, get: function() {
      return a.createLibraryProperties;
    } }), Object.defineProperty(e, "canAssignProperty", { enumerable: !0, get: function() {
      return a.canAssignProperty;
    } }), Object.defineProperty(e, "arrayToLiteral", { enumerable: !0, get: function() {
      return a.arrayToLiteral;
    } }), Object.defineProperty(e, "cloneArray", { enumerable: !0, get: function() {
      return a.cloneArray;
    } }), Object.defineProperty(e, "arrayToScryptType", { enumerable: !0, get: function() {
      return a.arrayToScryptType;
    } }), Object.defineProperty(e, "buildStructsClass", { enumerable: !0, get: function() {
      return a.buildStructsClass;
    } }), Object.defineProperty(e, "buildTypeResolver", { enumerable: !0, get: function() {
      return a.buildTypeResolver;
    } }), Object.defineProperty(e, "buildScryptTypeResolver", { enumerable: !0, get: function() {
      return a.buildScryptTypeResolver;
    } }), Object.defineProperty(e, "getStructDeclaration", { enumerable: !0, get: function() {
      return a.getStructDeclaration;
    } }), Object.defineProperty(e, "getABIDeclaration", { enumerable: !0, get: function() {
      return a.getABIDeclaration;
    } }), Object.defineProperty(e, "typeOfArg", { enumerable: !0, get: function() {
      return a.typeOfArg;
    } }), Object.defineProperty(e, "buildContractState", { enumerable: !0, get: function() {
      return a.buildContractState;
    } }), Object.defineProperty(e, "compilerVersion", { enumerable: !0, get: function() {
      return a.compilerVersion;
    } }), Object.defineProperty(e, "flatternLibrary", { enumerable: !0, get: function() {
      return a.flatternLibrary;
    } }), Object.defineProperty(e, "flatternLibraryState", { enumerable: !0, get: function() {
      return a.flatternLibraryState;
    } }), Object.defineProperty(e, "flatternCtorArgs", { enumerable: !0, get: function() {
      return a.flatternCtorArgs;
    } }), Object.defineProperty(e, "flatternStruct", { enumerable: !0, get: function() {
      return a.flatternStruct;
    } }), Object.defineProperty(e, "flatternArray", { enumerable: !0, get: function() {
      return a.flatternArray;
    } }), Object.defineProperty(e, "flatternParams", { enumerable: !0, get: function() {
      return a.flatternParams;
    } }), Object.defineProperty(e, "flatternStateArgs", { enumerable: !0, get: function() {
      return a.flatternStateArgs;
    } }), Object.defineProperty(e, "isEmpty", { enumerable: !0, get: function() {
      return a.isEmpty;
    } }), Object.defineProperty(e, "isStringLiteral", { enumerable: !0, get: function() {
      return a.isStringLiteral;
    } }), Object.defineProperty(e, "and", { enumerable: !0, get: function() {
      return a.and;
    } }), Object.defineProperty(e, "or", { enumerable: !0, get: function() {
      return a.or;
    } }), Object.defineProperty(e, "xor", { enumerable: !0, get: function() {
      return a.xor;
    } }), Object.defineProperty(e, "invert", { enumerable: !0, get: function() {
      return a.invert;
    } }), Object.defineProperty(e, "JSONParser", { enumerable: !0, get: function() {
      return a.JSONParser;
    } }), Object.defineProperty(e, "getFullFilePath", { enumerable: !0, get: function() {
      return a.getFullFilePath;
    } }), Object.defineProperty(e, "path2uri", { enumerable: !0, get: function() {
      return a.path2uri;
    } }), Object.defineProperty(e, "uri2path", { enumerable: !0, get: function() {
      return a.uri2path;
    } }), Object.defineProperty(e, "parseStateHex", { enumerable: !0, get: function() {
      return a.parseStateHex;
    } });
    var r = A5();
    Object.defineProperty(e, "Int", { enumerable: !0, get: function() {
      return r.Int;
    } }), Object.defineProperty(e, "Bool", { enumerable: !0, get: function() {
      return r.Bool;
    } }), Object.defineProperty(e, "Bytes", { enumerable: !0, get: function() {
      return r.Bytes;
    } }), Object.defineProperty(e, "PrivKey", { enumerable: !0, get: function() {
      return r.PrivKey;
    } }), Object.defineProperty(e, "PubKey", { enumerable: !0, get: function() {
      return r.PubKey;
    } }), Object.defineProperty(e, "Sig", { enumerable: !0, get: function() {
      return r.Sig;
    } }), Object.defineProperty(e, "Ripemd160", { enumerable: !0, get: function() {
      return r.Ripemd160;
    } }), Object.defineProperty(e, "Sha1", { enumerable: !0, get: function() {
      return r.Sha1;
    } }), Object.defineProperty(e, "Sha256", { enumerable: !0, get: function() {
      return r.Sha256;
    } }), Object.defineProperty(e, "SigHashType", { enumerable: !0, get: function() {
      return r.SigHashType;
    } }), Object.defineProperty(e, "SigHashPreimage", { enumerable: !0, get: function() {
      return r.SigHashPreimage;
    } }), Object.defineProperty(e, "String", { enumerable: !0, get: function() {
      return r.String;
    } }), Object.defineProperty(e, "SortedItem", { enumerable: !0, get: function() {
      return r.SortedItem;
    } }), Object.defineProperty(e, "OpCodeType", { enumerable: !0, get: function() {
      return r.OpCodeType;
    } }), Object.defineProperty(e, "ScryptType", { enumerable: !0, get: function() {
      return r.ScryptType;
    } }), Object.defineProperty(e, "PubKeyHash", { enumerable: !0, get: function() {
      return r.PubKeyHash;
    } }), Object.defineProperty(e, "Struct", { enumerable: !0, get: function() {
      return r.Struct;
    } }), Object.defineProperty(e, "VariableType", { enumerable: !0, get: function() {
      return r.VariableType;
    } }), Object.defineProperty(e, "Library", { enumerable: !0, get: function() {
      return r.Library;
    } }), Object.defineProperty(e, "SigHash", { enumerable: !0, get: function() {
      return r.SigHash;
    } }), Object.defineProperty(e, "ABIEntityType", { enumerable: !0, get: function() {
      return r.ABIEntityType;
    } }), Object.defineProperty(e, "BuildType", { enumerable: !0, get: function() {
      return r.BuildType;
    } }), Object.defineProperty(e, "AbstractContract", { enumerable: !0, get: function() {
      return r.AbstractContract;
    } }), Object.defineProperty(e, "DebugModeTag", { enumerable: !0, get: function() {
      return r.DebugModeTag;
    } }), Object.defineProperty(e, "HashedMap", { enumerable: !0, get: function() {
      return r.HashedMap;
    } }), Object.defineProperty(e, "HashedSet", { enumerable: !0, get: function() {
      return r.HashedSet;
    } }), Object.defineProperty(e, "SymbolType", { enumerable: !0, get: function() {
      return r.SymbolType;
    } }), Object.defineProperty(e, "FunctionCall", { enumerable: !0, get: function() {
      return r.FunctionCall;
    } });
    var f = A5();
    Object.defineProperty(e, "hash160", { enumerable: !0, get: function() {
      return f.hash160;
    } }), Object.defineProperty(e, "sha256", { enumerable: !0, get: function() {
      return f.sha256;
    } }), Object.defineProperty(e, "hash256", { enumerable: !0, get: function() {
      return f.hash256;
    } }), Object.defineProperty(e, "num2bin", { enumerable: !0, get: function() {
      return f.num2bin;
    } }), Object.defineProperty(e, "buildOpreturnScript", { enumerable: !0, get: function() {
      return f.buildOpreturnScript;
    } }), Object.defineProperty(e, "len", { enumerable: !0, get: function() {
      return f.len;
    } }), Object.defineProperty(e, "buildPublicKeyHashScript", { enumerable: !0, get: function() {
      return f.buildPublicKeyHashScript;
    } }), Object.defineProperty(e, "toHashedMap", { enumerable: !0, get: function() {
      return f.toHashedMap;
    } }), Object.defineProperty(e, "toHashedSet", { enumerable: !0, get: function() {
      return f.toHashedSet;
    } }), Object.defineProperty(e, "writeVarint", { enumerable: !0, get: function() {
      return f.writeVarint;
    } }), Object.defineProperty(e, "toLEUnsigned", { enumerable: !0, get: function() {
      return f.toLEUnsigned;
    } });
    var i = A5();
    Object.defineProperty(e, "serializeState", { enumerable: !0, get: function() {
      return i.serializeState;
    } }), Object.defineProperty(e, "deserializeState", { enumerable: !0, get: function() {
      return i.deserializeState;
    } }), Object.defineProperty(e, "STATE_LEN_2BYTES", { enumerable: !0, get: function() {
      return i.STATE_LEN_2BYTES;
    } }), Object.defineProperty(e, "STATE_LEN_4BYTES", { enumerable: !0, get: function() {
      return i.STATE_LEN_4BYTES;
    } }), Object.defineProperty(e, "serialize", { enumerable: !0, get: function() {
      return i.serialize;
    } });
    var n = A5();
    Object.defineProperty(e, "getPlatformScryptc", { enumerable: !0, get: function() {
      return n.getPlatformScryptc;
    } }), Object.defineProperty(e, "findCompiler", { enumerable: !0, get: function() {
      return n.findCompiler;
    } });
    var o = A5();
    Object.defineProperty(e, "partialSha256", { enumerable: !0, get: function() {
      return o.partialSha256;
    } }), Object.defineProperty(e, "sha256ByPartialHash", { enumerable: !0, get: function() {
      return o.sha256ByPartialHash;
    } });
  }(pn)), pn;
}
var d7 = By(), Tt = ta, Cf = Tt.deps._, lC = Tt.PrivateKey, pC = Tt.PublicKey, ul = Tt.Address, ll = Tt.encoding.BufferWriter, Vd = Tt.crypto.ECDSA, Ny = Tt.crypto.Signature, hC = Tt.crypto.Hash.sha256sha256, bC = Tt.util.js, m1 = Tt.util.preconditions, De = function e(t) {
  return this instanceof e ? (m1.checkArgument(Cf.isString(t) || Q.Buffer.isBuffer(t), "First argument should be a string or Buffer"), Cf.isString(t) && (this.messageBuffer = Q.Buffer.from(t)), Q.Buffer.isBuffer(t) && (this.messageBuffer = t), this) : new e(t);
};
De.sign = function(e, t) {
  return new De(e).sign(t);
};
De.verify = function(e, t, a) {
  return new De(e).verify(t, a);
};
De.MAGIC_BYTES = Q.Buffer.from(`Bitcoin Signed Message:
`);
De.prototype.magicHash = function() {
  var t = ll.varintBufNum(De.MAGIC_BYTES.length), a = ll.varintBufNum(this.messageBuffer.length), r = Q.Buffer.concat([t, De.MAGIC_BYTES, a, this.messageBuffer]), f = hC(r);
  return f;
};
De.prototype._sign = function(t) {
  m1.checkArgument(
    t instanceof lC,
    "First argument should be an instance of PrivateKey"
  );
  var a = this.magicHash();
  return Vd.signWithCalcI(a, t);
};
De.prototype.sign = function(t) {
  var a = this._sign(t);
  return a.toCompact().toString("base64");
};
De.prototype._verify = function(t, a) {
  m1.checkArgument(t instanceof pC, "First argument should be an instance of PublicKey"), m1.checkArgument(a instanceof Ny, "Second argument should be an instance of Signature");
  var r = this.magicHash(), f = Vd.verify(r, a, t);
  return f || (this.error = "The signature was invalid"), f;
};
De.prototype.verify = function(t, a) {
  m1.checkArgument(t), m1.checkArgument(a && Cf.isString(a)), Cf.isString(t) && (t = ul.fromString(t));
  var r = Ny.fromCompact(Q.Buffer.from(a, "base64")), f = new Vd();
  f.hashbuf = this.magicHash(), f.sig = r;
  var i = f.toPublicKey(), n = ul.fromPublicKey(i, t.network);
  return t.toString() !== n.toString() ? (this.error = "The signature did not match the message digest", !1) : this._verify(i, r);
};
De.fromString = function(e) {
  return new De(e);
};
De.fromJSON = function(t) {
  return bC.isValidJSON(t) && (t = JSON.parse(t)), De.fromObject(t);
};
De.prototype.toObject = function() {
  return {
    messageHex: this.messageBuffer.toString("hex")
  };
};
De.fromObject = function(e) {
  let t = Q.Buffer.from(e.messageHex, "hex");
  return new De(t);
};
De.prototype.toJSON = function() {
  return JSON.stringify(this.toObject());
};
De.prototype.toString = function() {
  return this.messageBuffer.toString();
};
De.prototype.inspect = function() {
  return "<Message: " + this.toString() + ">";
};
var mC = De, Cy = ta;
Cy.Message = mC;
var vC = Cy.Message, yC = vC;
const gC = /* @__PURE__ */ Qt(yC);
var Dy = { exports: {} };
(function(e) {
  (function(t) {
    for (var a = [null, 0, {}], r = 10, f = 44032, i = 4352, n = 4449, o = 4519, s = 19, b = 21, l = 28, v = b * l, m = s * v, x = function(T, g) {
      this.codepoint = T, this.feature = g;
    }, I = {}, k = [], P = 0; P <= 255; ++P)
      k[P] = 0;
    function M(T, g, w) {
      var A = I[g];
      return A || (A = T(g, w), A.feature && ++k[g >> 8 & 255] > r && (I[g] = A)), A;
    }
    function R(T, g, w) {
      var A = g & 65280, h = x.udata[A] || {}, N = h[g];
      return N ? new x(g, N) : new x(g, a);
    }
    function F(T, g, w) {
      return w ? T(g, w) : new x(g, null);
    }
    function C(T, g, w) {
      var A;
      if (g < i || i + s <= g && g < f || f + m < g)
        return T(g, w);
      if (i <= g && g < i + s) {
        var h = {}, N = (g - i) * b;
        for (A = 0; A < b; ++A)
          h[n + A] = f + l * (A + N);
        return new x(g, [, , h]);
      }
      var Y = g - f, t7 = Y % l, H = [];
      if (t7 !== 0)
        H[0] = [f + Y - t7, o + t7];
      else
        for (H[0] = [i + Math.floor(Y / v), n + Math.floor(Y % v / l)], H[2] = {}, A = 1; A < l; ++A)
          H[2][o + A] = g + A;
      return new x(g, H);
    }
    function L(T, g, w) {
      return g < 60 || 13311 < g && g < 42607 ? new x(g, a) : T(g, w);
    }
    var U = [L, M, F, C, R];
    x.fromCharCode = U.reduceRight(function(T, g) {
      return function(w, A) {
        return g(T, w, A);
      };
    }, null), x.isHighSurrogate = function(T) {
      return T >= 55296 && T <= 56319;
    }, x.isLowSurrogate = function(T) {
      return T >= 56320 && T <= 57343;
    }, x.prototype.prepFeature = function() {
      this.feature || (this.feature = x.fromCharCode(this.codepoint, !0).feature);
    }, x.prototype.toString = function() {
      if (this.codepoint < 65536)
        return String.fromCharCode(this.codepoint);
      var T = this.codepoint - 65536;
      return String.fromCharCode(Math.floor(T / 1024) + 55296, T % 1024 + 56320);
    }, x.prototype.getDecomp = function() {
      return this.prepFeature(), this.feature[0] || null;
    }, x.prototype.isCompatibility = function() {
      return this.prepFeature(), !!this.feature[1] && this.feature[1] & 1 << 8;
    }, x.prototype.isExclude = function() {
      return this.prepFeature(), !!this.feature[1] && this.feature[1] & 1 << 9;
    }, x.prototype.getCanonicalClass = function() {
      return this.prepFeature(), this.feature[1] ? this.feature[1] & 255 : 0;
    }, x.prototype.getComposite = function(T) {
      if (this.prepFeature(), !this.feature[2])
        return null;
      var g = this.feature[2][T.codepoint];
      return g ? x.fromCharCode(g) : null;
    };
    var q = function(T) {
      this.str = T, this.cursor = 0;
    };
    q.prototype.next = function() {
      if (this.str && this.cursor < this.str.length) {
        var T = this.str.charCodeAt(this.cursor++), g;
        return x.isHighSurrogate(T) && this.cursor < this.str.length && x.isLowSurrogate(g = this.str.charCodeAt(this.cursor)) && (T = (T - 55296) * 1024 + (g - 56320) + 65536, ++this.cursor), x.fromCharCode(T);
      } else
        return this.str = null, null;
    };
    var Z = function(T, g) {
      this.it = T, this.canonical = g, this.resBuf = [];
    };
    Z.prototype.next = function() {
      function T(w, A) {
        var h = A.getDecomp();
        if (h && !(w && A.isCompatibility())) {
          for (var N = [], Y = 0; Y < h.length; ++Y) {
            var t7 = T(w, x.fromCharCode(h[Y]));
            N = N.concat(t7);
          }
          return N;
        } else
          return [A];
      }
      if (this.resBuf.length === 0) {
        var g = this.it.next();
        if (!g)
          return null;
        this.resBuf = T(this.canonical, g);
      }
      return this.resBuf.shift();
    };
    var z = function(T) {
      this.it = T, this.resBuf = [];
    };
    z.prototype.next = function() {
      var T;
      if (this.resBuf.length === 0)
        do {
          var g = this.it.next();
          if (!g)
            break;
          T = g.getCanonicalClass();
          var w = this.resBuf.length;
          if (T !== 0)
            for (; w > 0; --w) {
              var A = this.resBuf[w - 1], h = A.getCanonicalClass();
              if (h <= T)
                break;
            }
          this.resBuf.splice(w, 0, g);
        } while (T !== 0);
      return this.resBuf.shift();
    };
    var G = function(T) {
      this.it = T, this.procBuf = [], this.resBuf = [], this.lastClass = null;
    };
    G.prototype.next = function() {
      for (; this.resBuf.length === 0; ) {
        var T = this.it.next();
        if (!T) {
          this.resBuf = this.procBuf, this.procBuf = [];
          break;
        }
        if (this.procBuf.length === 0)
          this.lastClass = T.getCanonicalClass(), this.procBuf.push(T);
        else {
          var g = this.procBuf[0], w = g.getComposite(T), A = T.getCanonicalClass();
          w && (this.lastClass < A || this.lastClass === 0) ? this.procBuf[0] = w : (A === 0 && (this.resBuf = this.procBuf, this.procBuf = []), this.lastClass = A, this.procBuf.push(T));
        }
      }
      return this.resBuf.shift();
    };
    var O = function(T, g) {
      switch (T) {
        case "NFD":
          return new z(new Z(new q(g), !0));
        case "NFKD":
          return new z(new Z(new q(g), !1));
        case "NFC":
          return new G(new z(new Z(new q(g), !0)));
        case "NFKC":
          return new G(new z(new Z(new q(g), !1)));
      }
      throw T + " is invalid";
    }, u = function(T, g) {
      for (var w = O(T, g), A = "", h; h = w.next(); )
        A += h.toString();
      return A;
    };
    function p(T) {
      return u("NFD", T);
    }
    function d(T) {
      return u("NFKD", T);
    }
    function c(T) {
      return u("NFC", T);
    }
    function y(T) {
      return u("NFKC", T);
    }
    x.udata = {
      0: { 60: [, , { 824: 8814 }], 61: [, , { 824: 8800 }], 62: [, , { 824: 8815 }], 65: [, , { 768: 192, 769: 193, 770: 194, 771: 195, 772: 256, 774: 258, 775: 550, 776: 196, 777: 7842, 778: 197, 780: 461, 783: 512, 785: 514, 803: 7840, 805: 7680, 808: 260 }], 66: [, , { 775: 7682, 803: 7684, 817: 7686 }], 67: [, , { 769: 262, 770: 264, 775: 266, 780: 268, 807: 199 }], 68: [, , { 775: 7690, 780: 270, 803: 7692, 807: 7696, 813: 7698, 817: 7694 }], 69: [, , { 768: 200, 769: 201, 770: 202, 771: 7868, 772: 274, 774: 276, 775: 278, 776: 203, 777: 7866, 780: 282, 783: 516, 785: 518, 803: 7864, 807: 552, 808: 280, 813: 7704, 816: 7706 }], 70: [, , { 775: 7710 }], 71: [, , { 769: 500, 770: 284, 772: 7712, 774: 286, 775: 288, 780: 486, 807: 290 }], 72: [, , { 770: 292, 775: 7714, 776: 7718, 780: 542, 803: 7716, 807: 7720, 814: 7722 }], 73: [, , { 768: 204, 769: 205, 770: 206, 771: 296, 772: 298, 774: 300, 775: 304, 776: 207, 777: 7880, 780: 463, 783: 520, 785: 522, 803: 7882, 808: 302, 816: 7724 }], 74: [, , { 770: 308 }], 75: [, , { 769: 7728, 780: 488, 803: 7730, 807: 310, 817: 7732 }], 76: [, , { 769: 313, 780: 317, 803: 7734, 807: 315, 813: 7740, 817: 7738 }], 77: [, , { 769: 7742, 775: 7744, 803: 7746 }], 78: [, , { 768: 504, 769: 323, 771: 209, 775: 7748, 780: 327, 803: 7750, 807: 325, 813: 7754, 817: 7752 }], 79: [, , { 768: 210, 769: 211, 770: 212, 771: 213, 772: 332, 774: 334, 775: 558, 776: 214, 777: 7886, 779: 336, 780: 465, 783: 524, 785: 526, 795: 416, 803: 7884, 808: 490 }], 80: [, , { 769: 7764, 775: 7766 }], 82: [, , { 769: 340, 775: 7768, 780: 344, 783: 528, 785: 530, 803: 7770, 807: 342, 817: 7774 }], 83: [, , { 769: 346, 770: 348, 775: 7776, 780: 352, 803: 7778, 806: 536, 807: 350 }], 84: [, , { 775: 7786, 780: 356, 803: 7788, 806: 538, 807: 354, 813: 7792, 817: 7790 }], 85: [, , { 768: 217, 769: 218, 770: 219, 771: 360, 772: 362, 774: 364, 776: 220, 777: 7910, 778: 366, 779: 368, 780: 467, 783: 532, 785: 534, 795: 431, 803: 7908, 804: 7794, 808: 370, 813: 7798, 816: 7796 }], 86: [, , { 771: 7804, 803: 7806 }], 87: [, , { 768: 7808, 769: 7810, 770: 372, 775: 7814, 776: 7812, 803: 7816 }], 88: [, , { 775: 7818, 776: 7820 }], 89: [, , { 768: 7922, 769: 221, 770: 374, 771: 7928, 772: 562, 775: 7822, 776: 376, 777: 7926, 803: 7924 }], 90: [, , { 769: 377, 770: 7824, 775: 379, 780: 381, 803: 7826, 817: 7828 }], 97: [, , { 768: 224, 769: 225, 770: 226, 771: 227, 772: 257, 774: 259, 775: 551, 776: 228, 777: 7843, 778: 229, 780: 462, 783: 513, 785: 515, 803: 7841, 805: 7681, 808: 261 }], 98: [, , { 775: 7683, 803: 7685, 817: 7687 }], 99: [, , { 769: 263, 770: 265, 775: 267, 780: 269, 807: 231 }], 100: [, , { 775: 7691, 780: 271, 803: 7693, 807: 7697, 813: 7699, 817: 7695 }], 101: [, , { 768: 232, 769: 233, 770: 234, 771: 7869, 772: 275, 774: 277, 775: 279, 776: 235, 777: 7867, 780: 283, 783: 517, 785: 519, 803: 7865, 807: 553, 808: 281, 813: 7705, 816: 7707 }], 102: [, , { 775: 7711 }], 103: [, , { 769: 501, 770: 285, 772: 7713, 774: 287, 775: 289, 780: 487, 807: 291 }], 104: [, , { 770: 293, 775: 7715, 776: 7719, 780: 543, 803: 7717, 807: 7721, 814: 7723, 817: 7830 }], 105: [, , { 768: 236, 769: 237, 770: 238, 771: 297, 772: 299, 774: 301, 776: 239, 777: 7881, 780: 464, 783: 521, 785: 523, 803: 7883, 808: 303, 816: 7725 }], 106: [, , { 770: 309, 780: 496 }], 107: [, , { 769: 7729, 780: 489, 803: 7731, 807: 311, 817: 7733 }], 108: [, , { 769: 314, 780: 318, 803: 7735, 807: 316, 813: 7741, 817: 7739 }], 109: [, , { 769: 7743, 775: 7745, 803: 7747 }], 110: [, , { 768: 505, 769: 324, 771: 241, 775: 7749, 780: 328, 803: 7751, 807: 326, 813: 7755, 817: 7753 }], 111: [, , { 768: 242, 769: 243, 770: 244, 771: 245, 772: 333, 774: 335, 775: 559, 776: 246, 777: 7887, 779: 337, 780: 466, 783: 525, 785: 527, 795: 417, 803: 7885, 808: 491 }], 112: [, , { 769: 7765, 775: 7767 }], 114: [, , { 769: 341, 775: 7769, 780: 345, 783: 529, 785: 531, 803: 7771, 807: 343, 817: 7775 }], 115: [, , { 769: 347, 770: 349, 775: 7777, 780: 353, 803: 7779, 806: 537, 807: 351 }], 116: [, , { 775: 7787, 776: 7831, 780: 357, 803: 7789, 806: 539, 807: 355, 813: 7793, 817: 7791 }], 117: [, , { 768: 249, 769: 250, 770: 251, 771: 361, 772: 363, 774: 365, 776: 252, 777: 7911, 778: 367, 779: 369, 780: 468, 783: 533, 785: 535, 795: 432, 803: 7909, 804: 7795, 808: 371, 813: 7799, 816: 7797 }], 118: [, , { 771: 7805, 803: 7807 }], 119: [, , { 768: 7809, 769: 7811, 770: 373, 775: 7815, 776: 7813, 778: 7832, 803: 7817 }], 120: [, , { 775: 7819, 776: 7821 }], 121: [, , { 768: 7923, 769: 253, 770: 375, 771: 7929, 772: 563, 775: 7823, 776: 255, 777: 7927, 778: 7833, 803: 7925 }], 122: [, , { 769: 378, 770: 7825, 775: 380, 780: 382, 803: 7827, 817: 7829 }], 160: [[32], 256], 168: [[32, 776], 256, { 768: 8173, 769: 901, 834: 8129 }], 170: [[97], 256], 175: [[32, 772], 256], 178: [[50], 256], 179: [[51], 256], 180: [[32, 769], 256], 181: [[956], 256], 184: [[32, 807], 256], 185: [[49], 256], 186: [[111], 256], 188: [[49, 8260, 52], 256], 189: [[49, 8260, 50], 256], 190: [[51, 8260, 52], 256], 192: [[65, 768]], 193: [[65, 769]], 194: [[65, 770], , { 768: 7846, 769: 7844, 771: 7850, 777: 7848 }], 195: [[65, 771]], 196: [[65, 776], , { 772: 478 }], 197: [[65, 778], , { 769: 506 }], 198: [, , { 769: 508, 772: 482 }], 199: [[67, 807], , { 769: 7688 }], 200: [[69, 768]], 201: [[69, 769]], 202: [[69, 770], , { 768: 7872, 769: 7870, 771: 7876, 777: 7874 }], 203: [[69, 776]], 204: [[73, 768]], 205: [[73, 769]], 206: [[73, 770]], 207: [[73, 776], , { 769: 7726 }], 209: [[78, 771]], 210: [[79, 768]], 211: [[79, 769]], 212: [[79, 770], , { 768: 7890, 769: 7888, 771: 7894, 777: 7892 }], 213: [[79, 771], , { 769: 7756, 772: 556, 776: 7758 }], 214: [[79, 776], , { 772: 554 }], 216: [, , { 769: 510 }], 217: [[85, 768]], 218: [[85, 769]], 219: [[85, 770]], 220: [[85, 776], , { 768: 475, 769: 471, 772: 469, 780: 473 }], 221: [[89, 769]], 224: [[97, 768]], 225: [[97, 769]], 226: [[97, 770], , { 768: 7847, 769: 7845, 771: 7851, 777: 7849 }], 227: [[97, 771]], 228: [[97, 776], , { 772: 479 }], 229: [[97, 778], , { 769: 507 }], 230: [, , { 769: 509, 772: 483 }], 231: [[99, 807], , { 769: 7689 }], 232: [[101, 768]], 233: [[101, 769]], 234: [[101, 770], , { 768: 7873, 769: 7871, 771: 7877, 777: 7875 }], 235: [[101, 776]], 236: [[105, 768]], 237: [[105, 769]], 238: [[105, 770]], 239: [[105, 776], , { 769: 7727 }], 241: [[110, 771]], 242: [[111, 768]], 243: [[111, 769]], 244: [[111, 770], , { 768: 7891, 769: 7889, 771: 7895, 777: 7893 }], 245: [[111, 771], , { 769: 7757, 772: 557, 776: 7759 }], 246: [[111, 776], , { 772: 555 }], 248: [, , { 769: 511 }], 249: [[117, 768]], 250: [[117, 769]], 251: [[117, 770]], 252: [[117, 776], , { 768: 476, 769: 472, 772: 470, 780: 474 }], 253: [[121, 769]], 255: [[121, 776]] },
      256: { 256: [[65, 772]], 257: [[97, 772]], 258: [[65, 774], , { 768: 7856, 769: 7854, 771: 7860, 777: 7858 }], 259: [[97, 774], , { 768: 7857, 769: 7855, 771: 7861, 777: 7859 }], 260: [[65, 808]], 261: [[97, 808]], 262: [[67, 769]], 263: [[99, 769]], 264: [[67, 770]], 265: [[99, 770]], 266: [[67, 775]], 267: [[99, 775]], 268: [[67, 780]], 269: [[99, 780]], 270: [[68, 780]], 271: [[100, 780]], 274: [[69, 772], , { 768: 7700, 769: 7702 }], 275: [[101, 772], , { 768: 7701, 769: 7703 }], 276: [[69, 774]], 277: [[101, 774]], 278: [[69, 775]], 279: [[101, 775]], 280: [[69, 808]], 281: [[101, 808]], 282: [[69, 780]], 283: [[101, 780]], 284: [[71, 770]], 285: [[103, 770]], 286: [[71, 774]], 287: [[103, 774]], 288: [[71, 775]], 289: [[103, 775]], 290: [[71, 807]], 291: [[103, 807]], 292: [[72, 770]], 293: [[104, 770]], 296: [[73, 771]], 297: [[105, 771]], 298: [[73, 772]], 299: [[105, 772]], 300: [[73, 774]], 301: [[105, 774]], 302: [[73, 808]], 303: [[105, 808]], 304: [[73, 775]], 306: [[73, 74], 256], 307: [[105, 106], 256], 308: [[74, 770]], 309: [[106, 770]], 310: [[75, 807]], 311: [[107, 807]], 313: [[76, 769]], 314: [[108, 769]], 315: [[76, 807]], 316: [[108, 807]], 317: [[76, 780]], 318: [[108, 780]], 319: [[76, 183], 256], 320: [[108, 183], 256], 323: [[78, 769]], 324: [[110, 769]], 325: [[78, 807]], 326: [[110, 807]], 327: [[78, 780]], 328: [[110, 780]], 329: [[700, 110], 256], 332: [[79, 772], , { 768: 7760, 769: 7762 }], 333: [[111, 772], , { 768: 7761, 769: 7763 }], 334: [[79, 774]], 335: [[111, 774]], 336: [[79, 779]], 337: [[111, 779]], 340: [[82, 769]], 341: [[114, 769]], 342: [[82, 807]], 343: [[114, 807]], 344: [[82, 780]], 345: [[114, 780]], 346: [[83, 769], , { 775: 7780 }], 347: [[115, 769], , { 775: 7781 }], 348: [[83, 770]], 349: [[115, 770]], 350: [[83, 807]], 351: [[115, 807]], 352: [[83, 780], , { 775: 7782 }], 353: [[115, 780], , { 775: 7783 }], 354: [[84, 807]], 355: [[116, 807]], 356: [[84, 780]], 357: [[116, 780]], 360: [[85, 771], , { 769: 7800 }], 361: [[117, 771], , { 769: 7801 }], 362: [[85, 772], , { 776: 7802 }], 363: [[117, 772], , { 776: 7803 }], 364: [[85, 774]], 365: [[117, 774]], 366: [[85, 778]], 367: [[117, 778]], 368: [[85, 779]], 369: [[117, 779]], 370: [[85, 808]], 371: [[117, 808]], 372: [[87, 770]], 373: [[119, 770]], 374: [[89, 770]], 375: [[121, 770]], 376: [[89, 776]], 377: [[90, 769]], 378: [[122, 769]], 379: [[90, 775]], 380: [[122, 775]], 381: [[90, 780]], 382: [[122, 780]], 383: [[115], 256, { 775: 7835 }], 416: [[79, 795], , { 768: 7900, 769: 7898, 771: 7904, 777: 7902, 803: 7906 }], 417: [[111, 795], , { 768: 7901, 769: 7899, 771: 7905, 777: 7903, 803: 7907 }], 431: [[85, 795], , { 768: 7914, 769: 7912, 771: 7918, 777: 7916, 803: 7920 }], 432: [[117, 795], , { 768: 7915, 769: 7913, 771: 7919, 777: 7917, 803: 7921 }], 439: [, , { 780: 494 }], 452: [[68, 381], 256], 453: [[68, 382], 256], 454: [[100, 382], 256], 455: [[76, 74], 256], 456: [[76, 106], 256], 457: [[108, 106], 256], 458: [[78, 74], 256], 459: [[78, 106], 256], 460: [[110, 106], 256], 461: [[65, 780]], 462: [[97, 780]], 463: [[73, 780]], 464: [[105, 780]], 465: [[79, 780]], 466: [[111, 780]], 467: [[85, 780]], 468: [[117, 780]], 469: [[220, 772]], 470: [[252, 772]], 471: [[220, 769]], 472: [[252, 769]], 473: [[220, 780]], 474: [[252, 780]], 475: [[220, 768]], 476: [[252, 768]], 478: [[196, 772]], 479: [[228, 772]], 480: [[550, 772]], 481: [[551, 772]], 482: [[198, 772]], 483: [[230, 772]], 486: [[71, 780]], 487: [[103, 780]], 488: [[75, 780]], 489: [[107, 780]], 490: [[79, 808], , { 772: 492 }], 491: [[111, 808], , { 772: 493 }], 492: [[490, 772]], 493: [[491, 772]], 494: [[439, 780]], 495: [[658, 780]], 496: [[106, 780]], 497: [[68, 90], 256], 498: [[68, 122], 256], 499: [[100, 122], 256], 500: [[71, 769]], 501: [[103, 769]], 504: [[78, 768]], 505: [[110, 768]], 506: [[197, 769]], 507: [[229, 769]], 508: [[198, 769]], 509: [[230, 769]], 510: [[216, 769]], 511: [[248, 769]], 66045: [, 220] },
      512: { 512: [[65, 783]], 513: [[97, 783]], 514: [[65, 785]], 515: [[97, 785]], 516: [[69, 783]], 517: [[101, 783]], 518: [[69, 785]], 519: [[101, 785]], 520: [[73, 783]], 521: [[105, 783]], 522: [[73, 785]], 523: [[105, 785]], 524: [[79, 783]], 525: [[111, 783]], 526: [[79, 785]], 527: [[111, 785]], 528: [[82, 783]], 529: [[114, 783]], 530: [[82, 785]], 531: [[114, 785]], 532: [[85, 783]], 533: [[117, 783]], 534: [[85, 785]], 535: [[117, 785]], 536: [[83, 806]], 537: [[115, 806]], 538: [[84, 806]], 539: [[116, 806]], 542: [[72, 780]], 543: [[104, 780]], 550: [[65, 775], , { 772: 480 }], 551: [[97, 775], , { 772: 481 }], 552: [[69, 807], , { 774: 7708 }], 553: [[101, 807], , { 774: 7709 }], 554: [[214, 772]], 555: [[246, 772]], 556: [[213, 772]], 557: [[245, 772]], 558: [[79, 775], , { 772: 560 }], 559: [[111, 775], , { 772: 561 }], 560: [[558, 772]], 561: [[559, 772]], 562: [[89, 772]], 563: [[121, 772]], 658: [, , { 780: 495 }], 688: [[104], 256], 689: [[614], 256], 690: [[106], 256], 691: [[114], 256], 692: [[633], 256], 693: [[635], 256], 694: [[641], 256], 695: [[119], 256], 696: [[121], 256], 728: [[32, 774], 256], 729: [[32, 775], 256], 730: [[32, 778], 256], 731: [[32, 808], 256], 732: [[32, 771], 256], 733: [[32, 779], 256], 736: [[611], 256], 737: [[108], 256], 738: [[115], 256], 739: [[120], 256], 740: [[661], 256], 66272: [, 220] },
      768: { 768: [, 230], 769: [, 230], 770: [, 230], 771: [, 230], 772: [, 230], 773: [, 230], 774: [, 230], 775: [, 230], 776: [, 230, { 769: 836 }], 777: [, 230], 778: [, 230], 779: [, 230], 780: [, 230], 781: [, 230], 782: [, 230], 783: [, 230], 784: [, 230], 785: [, 230], 786: [, 230], 787: [, 230], 788: [, 230], 789: [, 232], 790: [, 220], 791: [, 220], 792: [, 220], 793: [, 220], 794: [, 232], 795: [, 216], 796: [, 220], 797: [, 220], 798: [, 220], 799: [, 220], 800: [, 220], 801: [, 202], 802: [, 202], 803: [, 220], 804: [, 220], 805: [, 220], 806: [, 220], 807: [, 202], 808: [, 202], 809: [, 220], 810: [, 220], 811: [, 220], 812: [, 220], 813: [, 220], 814: [, 220], 815: [, 220], 816: [, 220], 817: [, 220], 818: [, 220], 819: [, 220], 820: [, 1], 821: [, 1], 822: [, 1], 823: [, 1], 824: [, 1], 825: [, 220], 826: [, 220], 827: [, 220], 828: [, 220], 829: [, 230], 830: [, 230], 831: [, 230], 832: [[768], 230], 833: [[769], 230], 834: [, 230], 835: [[787], 230], 836: [[776, 769], 230], 837: [, 240], 838: [, 230], 839: [, 220], 840: [, 220], 841: [, 220], 842: [, 230], 843: [, 230], 844: [, 230], 845: [, 220], 846: [, 220], 848: [, 230], 849: [, 230], 850: [, 230], 851: [, 220], 852: [, 220], 853: [, 220], 854: [, 220], 855: [, 230], 856: [, 232], 857: [, 220], 858: [, 220], 859: [, 230], 860: [, 233], 861: [, 234], 862: [, 234], 863: [, 233], 864: [, 234], 865: [, 234], 866: [, 233], 867: [, 230], 868: [, 230], 869: [, 230], 870: [, 230], 871: [, 230], 872: [, 230], 873: [, 230], 874: [, 230], 875: [, 230], 876: [, 230], 877: [, 230], 878: [, 230], 879: [, 230], 884: [[697]], 890: [[32, 837], 256], 894: [[59]], 900: [[32, 769], 256], 901: [[168, 769]], 902: [[913, 769]], 903: [[183]], 904: [[917, 769]], 905: [[919, 769]], 906: [[921, 769]], 908: [[927, 769]], 910: [[933, 769]], 911: [[937, 769]], 912: [[970, 769]], 913: [, , { 768: 8122, 769: 902, 772: 8121, 774: 8120, 787: 7944, 788: 7945, 837: 8124 }], 917: [, , { 768: 8136, 769: 904, 787: 7960, 788: 7961 }], 919: [, , { 768: 8138, 769: 905, 787: 7976, 788: 7977, 837: 8140 }], 921: [, , { 768: 8154, 769: 906, 772: 8153, 774: 8152, 776: 938, 787: 7992, 788: 7993 }], 927: [, , { 768: 8184, 769: 908, 787: 8008, 788: 8009 }], 929: [, , { 788: 8172 }], 933: [, , { 768: 8170, 769: 910, 772: 8169, 774: 8168, 776: 939, 788: 8025 }], 937: [, , { 768: 8186, 769: 911, 787: 8040, 788: 8041, 837: 8188 }], 938: [[921, 776]], 939: [[933, 776]], 940: [[945, 769], , { 837: 8116 }], 941: [[949, 769]], 942: [[951, 769], , { 837: 8132 }], 943: [[953, 769]], 944: [[971, 769]], 945: [, , { 768: 8048, 769: 940, 772: 8113, 774: 8112, 787: 7936, 788: 7937, 834: 8118, 837: 8115 }], 949: [, , { 768: 8050, 769: 941, 787: 7952, 788: 7953 }], 951: [, , { 768: 8052, 769: 942, 787: 7968, 788: 7969, 834: 8134, 837: 8131 }], 953: [, , { 768: 8054, 769: 943, 772: 8145, 774: 8144, 776: 970, 787: 7984, 788: 7985, 834: 8150 }], 959: [, , { 768: 8056, 769: 972, 787: 8e3, 788: 8001 }], 961: [, , { 787: 8164, 788: 8165 }], 965: [, , { 768: 8058, 769: 973, 772: 8161, 774: 8160, 776: 971, 787: 8016, 788: 8017, 834: 8166 }], 969: [, , { 768: 8060, 769: 974, 787: 8032, 788: 8033, 834: 8182, 837: 8179 }], 970: [[953, 776], , { 768: 8146, 769: 912, 834: 8151 }], 971: [[965, 776], , { 768: 8162, 769: 944, 834: 8167 }], 972: [[959, 769]], 973: [[965, 769]], 974: [[969, 769], , { 837: 8180 }], 976: [[946], 256], 977: [[952], 256], 978: [[933], 256, { 769: 979, 776: 980 }], 979: [[978, 769]], 980: [[978, 776]], 981: [[966], 256], 982: [[960], 256], 1008: [[954], 256], 1009: [[961], 256], 1010: [[962], 256], 1012: [[920], 256], 1013: [[949], 256], 1017: [[931], 256], 66422: [, 230], 66423: [, 230], 66424: [, 230], 66425: [, 230], 66426: [, 230] },
      1024: { 1024: [[1045, 768]], 1025: [[1045, 776]], 1027: [[1043, 769]], 1030: [, , { 776: 1031 }], 1031: [[1030, 776]], 1036: [[1050, 769]], 1037: [[1048, 768]], 1038: [[1059, 774]], 1040: [, , { 774: 1232, 776: 1234 }], 1043: [, , { 769: 1027 }], 1045: [, , { 768: 1024, 774: 1238, 776: 1025 }], 1046: [, , { 774: 1217, 776: 1244 }], 1047: [, , { 776: 1246 }], 1048: [, , { 768: 1037, 772: 1250, 774: 1049, 776: 1252 }], 1049: [[1048, 774]], 1050: [, , { 769: 1036 }], 1054: [, , { 776: 1254 }], 1059: [, , { 772: 1262, 774: 1038, 776: 1264, 779: 1266 }], 1063: [, , { 776: 1268 }], 1067: [, , { 776: 1272 }], 1069: [, , { 776: 1260 }], 1072: [, , { 774: 1233, 776: 1235 }], 1075: [, , { 769: 1107 }], 1077: [, , { 768: 1104, 774: 1239, 776: 1105 }], 1078: [, , { 774: 1218, 776: 1245 }], 1079: [, , { 776: 1247 }], 1080: [, , { 768: 1117, 772: 1251, 774: 1081, 776: 1253 }], 1081: [[1080, 774]], 1082: [, , { 769: 1116 }], 1086: [, , { 776: 1255 }], 1091: [, , { 772: 1263, 774: 1118, 776: 1265, 779: 1267 }], 1095: [, , { 776: 1269 }], 1099: [, , { 776: 1273 }], 1101: [, , { 776: 1261 }], 1104: [[1077, 768]], 1105: [[1077, 776]], 1107: [[1075, 769]], 1110: [, , { 776: 1111 }], 1111: [[1110, 776]], 1116: [[1082, 769]], 1117: [[1080, 768]], 1118: [[1091, 774]], 1140: [, , { 783: 1142 }], 1141: [, , { 783: 1143 }], 1142: [[1140, 783]], 1143: [[1141, 783]], 1155: [, 230], 1156: [, 230], 1157: [, 230], 1158: [, 230], 1159: [, 230], 1217: [[1046, 774]], 1218: [[1078, 774]], 1232: [[1040, 774]], 1233: [[1072, 774]], 1234: [[1040, 776]], 1235: [[1072, 776]], 1238: [[1045, 774]], 1239: [[1077, 774]], 1240: [, , { 776: 1242 }], 1241: [, , { 776: 1243 }], 1242: [[1240, 776]], 1243: [[1241, 776]], 1244: [[1046, 776]], 1245: [[1078, 776]], 1246: [[1047, 776]], 1247: [[1079, 776]], 1250: [[1048, 772]], 1251: [[1080, 772]], 1252: [[1048, 776]], 1253: [[1080, 776]], 1254: [[1054, 776]], 1255: [[1086, 776]], 1256: [, , { 776: 1258 }], 1257: [, , { 776: 1259 }], 1258: [[1256, 776]], 1259: [[1257, 776]], 1260: [[1069, 776]], 1261: [[1101, 776]], 1262: [[1059, 772]], 1263: [[1091, 772]], 1264: [[1059, 776]], 1265: [[1091, 776]], 1266: [[1059, 779]], 1267: [[1091, 779]], 1268: [[1063, 776]], 1269: [[1095, 776]], 1272: [[1067, 776]], 1273: [[1099, 776]] },
      1280: { 1415: [[1381, 1410], 256], 1425: [, 220], 1426: [, 230], 1427: [, 230], 1428: [, 230], 1429: [, 230], 1430: [, 220], 1431: [, 230], 1432: [, 230], 1433: [, 230], 1434: [, 222], 1435: [, 220], 1436: [, 230], 1437: [, 230], 1438: [, 230], 1439: [, 230], 1440: [, 230], 1441: [, 230], 1442: [, 220], 1443: [, 220], 1444: [, 220], 1445: [, 220], 1446: [, 220], 1447: [, 220], 1448: [, 230], 1449: [, 230], 1450: [, 220], 1451: [, 230], 1452: [, 230], 1453: [, 222], 1454: [, 228], 1455: [, 230], 1456: [, 10], 1457: [, 11], 1458: [, 12], 1459: [, 13], 1460: [, 14], 1461: [, 15], 1462: [, 16], 1463: [, 17], 1464: [, 18], 1465: [, 19], 1466: [, 19], 1467: [, 20], 1468: [, 21], 1469: [, 22], 1471: [, 23], 1473: [, 24], 1474: [, 25], 1476: [, 230], 1477: [, 220], 1479: [, 18] },
      1536: { 1552: [, 230], 1553: [, 230], 1554: [, 230], 1555: [, 230], 1556: [, 230], 1557: [, 230], 1558: [, 230], 1559: [, 230], 1560: [, 30], 1561: [, 31], 1562: [, 32], 1570: [[1575, 1619]], 1571: [[1575, 1620]], 1572: [[1608, 1620]], 1573: [[1575, 1621]], 1574: [[1610, 1620]], 1575: [, , { 1619: 1570, 1620: 1571, 1621: 1573 }], 1608: [, , { 1620: 1572 }], 1610: [, , { 1620: 1574 }], 1611: [, 27], 1612: [, 28], 1613: [, 29], 1614: [, 30], 1615: [, 31], 1616: [, 32], 1617: [, 33], 1618: [, 34], 1619: [, 230], 1620: [, 230], 1621: [, 220], 1622: [, 220], 1623: [, 230], 1624: [, 230], 1625: [, 230], 1626: [, 230], 1627: [, 230], 1628: [, 220], 1629: [, 230], 1630: [, 230], 1631: [, 220], 1648: [, 35], 1653: [[1575, 1652], 256], 1654: [[1608, 1652], 256], 1655: [[1735, 1652], 256], 1656: [[1610, 1652], 256], 1728: [[1749, 1620]], 1729: [, , { 1620: 1730 }], 1730: [[1729, 1620]], 1746: [, , { 1620: 1747 }], 1747: [[1746, 1620]], 1749: [, , { 1620: 1728 }], 1750: [, 230], 1751: [, 230], 1752: [, 230], 1753: [, 230], 1754: [, 230], 1755: [, 230], 1756: [, 230], 1759: [, 230], 1760: [, 230], 1761: [, 230], 1762: [, 230], 1763: [, 220], 1764: [, 230], 1767: [, 230], 1768: [, 230], 1770: [, 220], 1771: [, 230], 1772: [, 230], 1773: [, 220] },
      1792: { 1809: [, 36], 1840: [, 230], 1841: [, 220], 1842: [, 230], 1843: [, 230], 1844: [, 220], 1845: [, 230], 1846: [, 230], 1847: [, 220], 1848: [, 220], 1849: [, 220], 1850: [, 230], 1851: [, 220], 1852: [, 220], 1853: [, 230], 1854: [, 220], 1855: [, 230], 1856: [, 230], 1857: [, 230], 1858: [, 220], 1859: [, 230], 1860: [, 220], 1861: [, 230], 1862: [, 220], 1863: [, 230], 1864: [, 220], 1865: [, 230], 1866: [, 230], 2027: [, 230], 2028: [, 230], 2029: [, 230], 2030: [, 230], 2031: [, 230], 2032: [, 230], 2033: [, 230], 2034: [, 220], 2035: [, 230] },
      2048: { 2070: [, 230], 2071: [, 230], 2072: [, 230], 2073: [, 230], 2075: [, 230], 2076: [, 230], 2077: [, 230], 2078: [, 230], 2079: [, 230], 2080: [, 230], 2081: [, 230], 2082: [, 230], 2083: [, 230], 2085: [, 230], 2086: [, 230], 2087: [, 230], 2089: [, 230], 2090: [, 230], 2091: [, 230], 2092: [, 230], 2093: [, 230], 2137: [, 220], 2138: [, 220], 2139: [, 220], 2276: [, 230], 2277: [, 230], 2278: [, 220], 2279: [, 230], 2280: [, 230], 2281: [, 220], 2282: [, 230], 2283: [, 230], 2284: [, 230], 2285: [, 220], 2286: [, 220], 2287: [, 220], 2288: [, 27], 2289: [, 28], 2290: [, 29], 2291: [, 230], 2292: [, 230], 2293: [, 230], 2294: [, 220], 2295: [, 230], 2296: [, 230], 2297: [, 220], 2298: [, 220], 2299: [, 230], 2300: [, 230], 2301: [, 230], 2302: [, 230], 2303: [, 230] },
      2304: { 2344: [, , { 2364: 2345 }], 2345: [[2344, 2364]], 2352: [, , { 2364: 2353 }], 2353: [[2352, 2364]], 2355: [, , { 2364: 2356 }], 2356: [[2355, 2364]], 2364: [, 7], 2381: [, 9], 2385: [, 230], 2386: [, 220], 2387: [, 230], 2388: [, 230], 2392: [[2325, 2364], 512], 2393: [[2326, 2364], 512], 2394: [[2327, 2364], 512], 2395: [[2332, 2364], 512], 2396: [[2337, 2364], 512], 2397: [[2338, 2364], 512], 2398: [[2347, 2364], 512], 2399: [[2351, 2364], 512], 2492: [, 7], 2503: [, , { 2494: 2507, 2519: 2508 }], 2507: [[2503, 2494]], 2508: [[2503, 2519]], 2509: [, 9], 2524: [[2465, 2492], 512], 2525: [[2466, 2492], 512], 2527: [[2479, 2492], 512] },
      2560: { 2611: [[2610, 2620], 512], 2614: [[2616, 2620], 512], 2620: [, 7], 2637: [, 9], 2649: [[2582, 2620], 512], 2650: [[2583, 2620], 512], 2651: [[2588, 2620], 512], 2654: [[2603, 2620], 512], 2748: [, 7], 2765: [, 9], 68109: [, 220], 68111: [, 230], 68152: [, 230], 68153: [, 1], 68154: [, 220], 68159: [, 9], 68325: [, 230], 68326: [, 220] },
      2816: { 2876: [, 7], 2887: [, , { 2878: 2891, 2902: 2888, 2903: 2892 }], 2888: [[2887, 2902]], 2891: [[2887, 2878]], 2892: [[2887, 2903]], 2893: [, 9], 2908: [[2849, 2876], 512], 2909: [[2850, 2876], 512], 2962: [, , { 3031: 2964 }], 2964: [[2962, 3031]], 3014: [, , { 3006: 3018, 3031: 3020 }], 3015: [, , { 3006: 3019 }], 3018: [[3014, 3006]], 3019: [[3015, 3006]], 3020: [[3014, 3031]], 3021: [, 9] },
      3072: { 3142: [, , { 3158: 3144 }], 3144: [[3142, 3158]], 3149: [, 9], 3157: [, 84], 3158: [, 91], 3260: [, 7], 3263: [, , { 3285: 3264 }], 3264: [[3263, 3285]], 3270: [, , { 3266: 3274, 3285: 3271, 3286: 3272 }], 3271: [[3270, 3285]], 3272: [[3270, 3286]], 3274: [[3270, 3266], , { 3285: 3275 }], 3275: [[3274, 3285]], 3277: [, 9] },
      3328: { 3398: [, , { 3390: 3402, 3415: 3404 }], 3399: [, , { 3390: 3403 }], 3402: [[3398, 3390]], 3403: [[3399, 3390]], 3404: [[3398, 3415]], 3405: [, 9], 3530: [, 9], 3545: [, , { 3530: 3546, 3535: 3548, 3551: 3550 }], 3546: [[3545, 3530]], 3548: [[3545, 3535], , { 3530: 3549 }], 3549: [[3548, 3530]], 3550: [[3545, 3551]] },
      3584: { 3635: [[3661, 3634], 256], 3640: [, 103], 3641: [, 103], 3642: [, 9], 3656: [, 107], 3657: [, 107], 3658: [, 107], 3659: [, 107], 3763: [[3789, 3762], 256], 3768: [, 118], 3769: [, 118], 3784: [, 122], 3785: [, 122], 3786: [, 122], 3787: [, 122], 3804: [[3755, 3737], 256], 3805: [[3755, 3745], 256] },
      3840: { 3852: [[3851], 256], 3864: [, 220], 3865: [, 220], 3893: [, 220], 3895: [, 220], 3897: [, 216], 3907: [[3906, 4023], 512], 3917: [[3916, 4023], 512], 3922: [[3921, 4023], 512], 3927: [[3926, 4023], 512], 3932: [[3931, 4023], 512], 3945: [[3904, 4021], 512], 3953: [, 129], 3954: [, 130], 3955: [[3953, 3954], 512], 3956: [, 132], 3957: [[3953, 3956], 512], 3958: [[4018, 3968], 512], 3959: [[4018, 3969], 256], 3960: [[4019, 3968], 512], 3961: [[4019, 3969], 256], 3962: [, 130], 3963: [, 130], 3964: [, 130], 3965: [, 130], 3968: [, 130], 3969: [[3953, 3968], 512], 3970: [, 230], 3971: [, 230], 3972: [, 9], 3974: [, 230], 3975: [, 230], 3987: [[3986, 4023], 512], 3997: [[3996, 4023], 512], 4002: [[4001, 4023], 512], 4007: [[4006, 4023], 512], 4012: [[4011, 4023], 512], 4025: [[3984, 4021], 512], 4038: [, 220] },
      4096: { 4133: [, , { 4142: 4134 }], 4134: [[4133, 4142]], 4151: [, 7], 4153: [, 9], 4154: [, 9], 4237: [, 220], 4348: [[4316], 256], 69702: [, 9], 69759: [, 9], 69785: [, , { 69818: 69786 }], 69786: [[69785, 69818]], 69787: [, , { 69818: 69788 }], 69788: [[69787, 69818]], 69797: [, , { 69818: 69803 }], 69803: [[69797, 69818]], 69817: [, 9], 69818: [, 7] },
      4352: { 69888: [, 230], 69889: [, 230], 69890: [, 230], 69934: [[69937, 69927]], 69935: [[69938, 69927]], 69937: [, , { 69927: 69934 }], 69938: [, , { 69927: 69935 }], 69939: [, 9], 69940: [, 9], 70003: [, 7], 70080: [, 9] },
      4608: { 70197: [, 9], 70198: [, 7], 70377: [, 7], 70378: [, 9] },
      4864: { 4957: [, 230], 4958: [, 230], 4959: [, 230], 70460: [, 7], 70471: [, , { 70462: 70475, 70487: 70476 }], 70475: [[70471, 70462]], 70476: [[70471, 70487]], 70477: [, 9], 70502: [, 230], 70503: [, 230], 70504: [, 230], 70505: [, 230], 70506: [, 230], 70507: [, 230], 70508: [, 230], 70512: [, 230], 70513: [, 230], 70514: [, 230], 70515: [, 230], 70516: [, 230] },
      5120: { 70841: [, , { 70832: 70844, 70842: 70843, 70845: 70846 }], 70843: [[70841, 70842]], 70844: [[70841, 70832]], 70846: [[70841, 70845]], 70850: [, 9], 70851: [, 7] },
      5376: { 71096: [, , { 71087: 71098 }], 71097: [, , { 71087: 71099 }], 71098: [[71096, 71087]], 71099: [[71097, 71087]], 71103: [, 9], 71104: [, 7] },
      5632: { 71231: [, 9], 71350: [, 9], 71351: [, 7] },
      5888: { 5908: [, 9], 5940: [, 9], 6098: [, 9], 6109: [, 230] },
      6144: { 6313: [, 228] },
      6400: { 6457: [, 222], 6458: [, 230], 6459: [, 220] },
      6656: { 6679: [, 230], 6680: [, 220], 6752: [, 9], 6773: [, 230], 6774: [, 230], 6775: [, 230], 6776: [, 230], 6777: [, 230], 6778: [, 230], 6779: [, 230], 6780: [, 230], 6783: [, 220], 6832: [, 230], 6833: [, 230], 6834: [, 230], 6835: [, 230], 6836: [, 230], 6837: [, 220], 6838: [, 220], 6839: [, 220], 6840: [, 220], 6841: [, 220], 6842: [, 220], 6843: [, 230], 6844: [, 230], 6845: [, 220] },
      6912: { 6917: [, , { 6965: 6918 }], 6918: [[6917, 6965]], 6919: [, , { 6965: 6920 }], 6920: [[6919, 6965]], 6921: [, , { 6965: 6922 }], 6922: [[6921, 6965]], 6923: [, , { 6965: 6924 }], 6924: [[6923, 6965]], 6925: [, , { 6965: 6926 }], 6926: [[6925, 6965]], 6929: [, , { 6965: 6930 }], 6930: [[6929, 6965]], 6964: [, 7], 6970: [, , { 6965: 6971 }], 6971: [[6970, 6965]], 6972: [, , { 6965: 6973 }], 6973: [[6972, 6965]], 6974: [, , { 6965: 6976 }], 6975: [, , { 6965: 6977 }], 6976: [[6974, 6965]], 6977: [[6975, 6965]], 6978: [, , { 6965: 6979 }], 6979: [[6978, 6965]], 6980: [, 9], 7019: [, 230], 7020: [, 220], 7021: [, 230], 7022: [, 230], 7023: [, 230], 7024: [, 230], 7025: [, 230], 7026: [, 230], 7027: [, 230], 7082: [, 9], 7083: [, 9], 7142: [, 7], 7154: [, 9], 7155: [, 9] },
      7168: { 7223: [, 7], 7376: [, 230], 7377: [, 230], 7378: [, 230], 7380: [, 1], 7381: [, 220], 7382: [, 220], 7383: [, 220], 7384: [, 220], 7385: [, 220], 7386: [, 230], 7387: [, 230], 7388: [, 220], 7389: [, 220], 7390: [, 220], 7391: [, 220], 7392: [, 230], 7394: [, 1], 7395: [, 1], 7396: [, 1], 7397: [, 1], 7398: [, 1], 7399: [, 1], 7400: [, 1], 7405: [, 220], 7412: [, 230], 7416: [, 230], 7417: [, 230] },
      7424: { 7468: [[65], 256], 7469: [[198], 256], 7470: [[66], 256], 7472: [[68], 256], 7473: [[69], 256], 7474: [[398], 256], 7475: [[71], 256], 7476: [[72], 256], 7477: [[73], 256], 7478: [[74], 256], 7479: [[75], 256], 7480: [[76], 256], 7481: [[77], 256], 7482: [[78], 256], 7484: [[79], 256], 7485: [[546], 256], 7486: [[80], 256], 7487: [[82], 256], 7488: [[84], 256], 7489: [[85], 256], 7490: [[87], 256], 7491: [[97], 256], 7492: [[592], 256], 7493: [[593], 256], 7494: [[7426], 256], 7495: [[98], 256], 7496: [[100], 256], 7497: [[101], 256], 7498: [[601], 256], 7499: [[603], 256], 7500: [[604], 256], 7501: [[103], 256], 7503: [[107], 256], 7504: [[109], 256], 7505: [[331], 256], 7506: [[111], 256], 7507: [[596], 256], 7508: [[7446], 256], 7509: [[7447], 256], 7510: [[112], 256], 7511: [[116], 256], 7512: [[117], 256], 7513: [[7453], 256], 7514: [[623], 256], 7515: [[118], 256], 7516: [[7461], 256], 7517: [[946], 256], 7518: [[947], 256], 7519: [[948], 256], 7520: [[966], 256], 7521: [[967], 256], 7522: [[105], 256], 7523: [[114], 256], 7524: [[117], 256], 7525: [[118], 256], 7526: [[946], 256], 7527: [[947], 256], 7528: [[961], 256], 7529: [[966], 256], 7530: [[967], 256], 7544: [[1085], 256], 7579: [[594], 256], 7580: [[99], 256], 7581: [[597], 256], 7582: [[240], 256], 7583: [[604], 256], 7584: [[102], 256], 7585: [[607], 256], 7586: [[609], 256], 7587: [[613], 256], 7588: [[616], 256], 7589: [[617], 256], 7590: [[618], 256], 7591: [[7547], 256], 7592: [[669], 256], 7593: [[621], 256], 7594: [[7557], 256], 7595: [[671], 256], 7596: [[625], 256], 7597: [[624], 256], 7598: [[626], 256], 7599: [[627], 256], 7600: [[628], 256], 7601: [[629], 256], 7602: [[632], 256], 7603: [[642], 256], 7604: [[643], 256], 7605: [[427], 256], 7606: [[649], 256], 7607: [[650], 256], 7608: [[7452], 256], 7609: [[651], 256], 7610: [[652], 256], 7611: [[122], 256], 7612: [[656], 256], 7613: [[657], 256], 7614: [[658], 256], 7615: [[952], 256], 7616: [, 230], 7617: [, 230], 7618: [, 220], 7619: [, 230], 7620: [, 230], 7621: [, 230], 7622: [, 230], 7623: [, 230], 7624: [, 230], 7625: [, 230], 7626: [, 220], 7627: [, 230], 7628: [, 230], 7629: [, 234], 7630: [, 214], 7631: [, 220], 7632: [, 202], 7633: [, 230], 7634: [, 230], 7635: [, 230], 7636: [, 230], 7637: [, 230], 7638: [, 230], 7639: [, 230], 7640: [, 230], 7641: [, 230], 7642: [, 230], 7643: [, 230], 7644: [, 230], 7645: [, 230], 7646: [, 230], 7647: [, 230], 7648: [, 230], 7649: [, 230], 7650: [, 230], 7651: [, 230], 7652: [, 230], 7653: [, 230], 7654: [, 230], 7655: [, 230], 7656: [, 230], 7657: [, 230], 7658: [, 230], 7659: [, 230], 7660: [, 230], 7661: [, 230], 7662: [, 230], 7663: [, 230], 7664: [, 230], 7665: [, 230], 7666: [, 230], 7667: [, 230], 7668: [, 230], 7669: [, 230], 7676: [, 233], 7677: [, 220], 7678: [, 230], 7679: [, 220] },
      7680: { 7680: [[65, 805]], 7681: [[97, 805]], 7682: [[66, 775]], 7683: [[98, 775]], 7684: [[66, 803]], 7685: [[98, 803]], 7686: [[66, 817]], 7687: [[98, 817]], 7688: [[199, 769]], 7689: [[231, 769]], 7690: [[68, 775]], 7691: [[100, 775]], 7692: [[68, 803]], 7693: [[100, 803]], 7694: [[68, 817]], 7695: [[100, 817]], 7696: [[68, 807]], 7697: [[100, 807]], 7698: [[68, 813]], 7699: [[100, 813]], 7700: [[274, 768]], 7701: [[275, 768]], 7702: [[274, 769]], 7703: [[275, 769]], 7704: [[69, 813]], 7705: [[101, 813]], 7706: [[69, 816]], 7707: [[101, 816]], 7708: [[552, 774]], 7709: [[553, 774]], 7710: [[70, 775]], 7711: [[102, 775]], 7712: [[71, 772]], 7713: [[103, 772]], 7714: [[72, 775]], 7715: [[104, 775]], 7716: [[72, 803]], 7717: [[104, 803]], 7718: [[72, 776]], 7719: [[104, 776]], 7720: [[72, 807]], 7721: [[104, 807]], 7722: [[72, 814]], 7723: [[104, 814]], 7724: [[73, 816]], 7725: [[105, 816]], 7726: [[207, 769]], 7727: [[239, 769]], 7728: [[75, 769]], 7729: [[107, 769]], 7730: [[75, 803]], 7731: [[107, 803]], 7732: [[75, 817]], 7733: [[107, 817]], 7734: [[76, 803], , { 772: 7736 }], 7735: [[108, 803], , { 772: 7737 }], 7736: [[7734, 772]], 7737: [[7735, 772]], 7738: [[76, 817]], 7739: [[108, 817]], 7740: [[76, 813]], 7741: [[108, 813]], 7742: [[77, 769]], 7743: [[109, 769]], 7744: [[77, 775]], 7745: [[109, 775]], 7746: [[77, 803]], 7747: [[109, 803]], 7748: [[78, 775]], 7749: [[110, 775]], 7750: [[78, 803]], 7751: [[110, 803]], 7752: [[78, 817]], 7753: [[110, 817]], 7754: [[78, 813]], 7755: [[110, 813]], 7756: [[213, 769]], 7757: [[245, 769]], 7758: [[213, 776]], 7759: [[245, 776]], 7760: [[332, 768]], 7761: [[333, 768]], 7762: [[332, 769]], 7763: [[333, 769]], 7764: [[80, 769]], 7765: [[112, 769]], 7766: [[80, 775]], 7767: [[112, 775]], 7768: [[82, 775]], 7769: [[114, 775]], 7770: [[82, 803], , { 772: 7772 }], 7771: [[114, 803], , { 772: 7773 }], 7772: [[7770, 772]], 7773: [[7771, 772]], 7774: [[82, 817]], 7775: [[114, 817]], 7776: [[83, 775]], 7777: [[115, 775]], 7778: [[83, 803], , { 775: 7784 }], 7779: [[115, 803], , { 775: 7785 }], 7780: [[346, 775]], 7781: [[347, 775]], 7782: [[352, 775]], 7783: [[353, 775]], 7784: [[7778, 775]], 7785: [[7779, 775]], 7786: [[84, 775]], 7787: [[116, 775]], 7788: [[84, 803]], 7789: [[116, 803]], 7790: [[84, 817]], 7791: [[116, 817]], 7792: [[84, 813]], 7793: [[116, 813]], 7794: [[85, 804]], 7795: [[117, 804]], 7796: [[85, 816]], 7797: [[117, 816]], 7798: [[85, 813]], 7799: [[117, 813]], 7800: [[360, 769]], 7801: [[361, 769]], 7802: [[362, 776]], 7803: [[363, 776]], 7804: [[86, 771]], 7805: [[118, 771]], 7806: [[86, 803]], 7807: [[118, 803]], 7808: [[87, 768]], 7809: [[119, 768]], 7810: [[87, 769]], 7811: [[119, 769]], 7812: [[87, 776]], 7813: [[119, 776]], 7814: [[87, 775]], 7815: [[119, 775]], 7816: [[87, 803]], 7817: [[119, 803]], 7818: [[88, 775]], 7819: [[120, 775]], 7820: [[88, 776]], 7821: [[120, 776]], 7822: [[89, 775]], 7823: [[121, 775]], 7824: [[90, 770]], 7825: [[122, 770]], 7826: [[90, 803]], 7827: [[122, 803]], 7828: [[90, 817]], 7829: [[122, 817]], 7830: [[104, 817]], 7831: [[116, 776]], 7832: [[119, 778]], 7833: [[121, 778]], 7834: [[97, 702], 256], 7835: [[383, 775]], 7840: [[65, 803], , { 770: 7852, 774: 7862 }], 7841: [[97, 803], , { 770: 7853, 774: 7863 }], 7842: [[65, 777]], 7843: [[97, 777]], 7844: [[194, 769]], 7845: [[226, 769]], 7846: [[194, 768]], 7847: [[226, 768]], 7848: [[194, 777]], 7849: [[226, 777]], 7850: [[194, 771]], 7851: [[226, 771]], 7852: [[7840, 770]], 7853: [[7841, 770]], 7854: [[258, 769]], 7855: [[259, 769]], 7856: [[258, 768]], 7857: [[259, 768]], 7858: [[258, 777]], 7859: [[259, 777]], 7860: [[258, 771]], 7861: [[259, 771]], 7862: [[7840, 774]], 7863: [[7841, 774]], 7864: [[69, 803], , { 770: 7878 }], 7865: [[101, 803], , { 770: 7879 }], 7866: [[69, 777]], 7867: [[101, 777]], 7868: [[69, 771]], 7869: [[101, 771]], 7870: [[202, 769]], 7871: [[234, 769]], 7872: [[202, 768]], 7873: [[234, 768]], 7874: [[202, 777]], 7875: [[234, 777]], 7876: [[202, 771]], 7877: [[234, 771]], 7878: [[7864, 770]], 7879: [[7865, 770]], 7880: [[73, 777]], 7881: [[105, 777]], 7882: [[73, 803]], 7883: [[105, 803]], 7884: [[79, 803], , { 770: 7896 }], 7885: [[111, 803], , { 770: 7897 }], 7886: [[79, 777]], 7887: [[111, 777]], 7888: [[212, 769]], 7889: [[244, 769]], 7890: [[212, 768]], 7891: [[244, 768]], 7892: [[212, 777]], 7893: [[244, 777]], 7894: [[212, 771]], 7895: [[244, 771]], 7896: [[7884, 770]], 7897: [[7885, 770]], 7898: [[416, 769]], 7899: [[417, 769]], 7900: [[416, 768]], 7901: [[417, 768]], 7902: [[416, 777]], 7903: [[417, 777]], 7904: [[416, 771]], 7905: [[417, 771]], 7906: [[416, 803]], 7907: [[417, 803]], 7908: [[85, 803]], 7909: [[117, 803]], 7910: [[85, 777]], 7911: [[117, 777]], 7912: [[431, 769]], 7913: [[432, 769]], 7914: [[431, 768]], 7915: [[432, 768]], 7916: [[431, 777]], 7917: [[432, 777]], 7918: [[431, 771]], 7919: [[432, 771]], 7920: [[431, 803]], 7921: [[432, 803]], 7922: [[89, 768]], 7923: [[121, 768]], 7924: [[89, 803]], 7925: [[121, 803]], 7926: [[89, 777]], 7927: [[121, 777]], 7928: [[89, 771]], 7929: [[121, 771]] },
      7936: { 7936: [[945, 787], , { 768: 7938, 769: 7940, 834: 7942, 837: 8064 }], 7937: [[945, 788], , { 768: 7939, 769: 7941, 834: 7943, 837: 8065 }], 7938: [[7936, 768], , { 837: 8066 }], 7939: [[7937, 768], , { 837: 8067 }], 7940: [[7936, 769], , { 837: 8068 }], 7941: [[7937, 769], , { 837: 8069 }], 7942: [[7936, 834], , { 837: 8070 }], 7943: [[7937, 834], , { 837: 8071 }], 7944: [[913, 787], , { 768: 7946, 769: 7948, 834: 7950, 837: 8072 }], 7945: [[913, 788], , { 768: 7947, 769: 7949, 834: 7951, 837: 8073 }], 7946: [[7944, 768], , { 837: 8074 }], 7947: [[7945, 768], , { 837: 8075 }], 7948: [[7944, 769], , { 837: 8076 }], 7949: [[7945, 769], , { 837: 8077 }], 7950: [[7944, 834], , { 837: 8078 }], 7951: [[7945, 834], , { 837: 8079 }], 7952: [[949, 787], , { 768: 7954, 769: 7956 }], 7953: [[949, 788], , { 768: 7955, 769: 7957 }], 7954: [[7952, 768]], 7955: [[7953, 768]], 7956: [[7952, 769]], 7957: [[7953, 769]], 7960: [[917, 787], , { 768: 7962, 769: 7964 }], 7961: [[917, 788], , { 768: 7963, 769: 7965 }], 7962: [[7960, 768]], 7963: [[7961, 768]], 7964: [[7960, 769]], 7965: [[7961, 769]], 7968: [[951, 787], , { 768: 7970, 769: 7972, 834: 7974, 837: 8080 }], 7969: [[951, 788], , { 768: 7971, 769: 7973, 834: 7975, 837: 8081 }], 7970: [[7968, 768], , { 837: 8082 }], 7971: [[7969, 768], , { 837: 8083 }], 7972: [[7968, 769], , { 837: 8084 }], 7973: [[7969, 769], , { 837: 8085 }], 7974: [[7968, 834], , { 837: 8086 }], 7975: [[7969, 834], , { 837: 8087 }], 7976: [[919, 787], , { 768: 7978, 769: 7980, 834: 7982, 837: 8088 }], 7977: [[919, 788], , { 768: 7979, 769: 7981, 834: 7983, 837: 8089 }], 7978: [[7976, 768], , { 837: 8090 }], 7979: [[7977, 768], , { 837: 8091 }], 7980: [[7976, 769], , { 837: 8092 }], 7981: [[7977, 769], , { 837: 8093 }], 7982: [[7976, 834], , { 837: 8094 }], 7983: [[7977, 834], , { 837: 8095 }], 7984: [[953, 787], , { 768: 7986, 769: 7988, 834: 7990 }], 7985: [[953, 788], , { 768: 7987, 769: 7989, 834: 7991 }], 7986: [[7984, 768]], 7987: [[7985, 768]], 7988: [[7984, 769]], 7989: [[7985, 769]], 7990: [[7984, 834]], 7991: [[7985, 834]], 7992: [[921, 787], , { 768: 7994, 769: 7996, 834: 7998 }], 7993: [[921, 788], , { 768: 7995, 769: 7997, 834: 7999 }], 7994: [[7992, 768]], 7995: [[7993, 768]], 7996: [[7992, 769]], 7997: [[7993, 769]], 7998: [[7992, 834]], 7999: [[7993, 834]], 8e3: [[959, 787], , { 768: 8002, 769: 8004 }], 8001: [[959, 788], , { 768: 8003, 769: 8005 }], 8002: [[8e3, 768]], 8003: [[8001, 768]], 8004: [[8e3, 769]], 8005: [[8001, 769]], 8008: [[927, 787], , { 768: 8010, 769: 8012 }], 8009: [[927, 788], , { 768: 8011, 769: 8013 }], 8010: [[8008, 768]], 8011: [[8009, 768]], 8012: [[8008, 769]], 8013: [[8009, 769]], 8016: [[965, 787], , { 768: 8018, 769: 8020, 834: 8022 }], 8017: [[965, 788], , { 768: 8019, 769: 8021, 834: 8023 }], 8018: [[8016, 768]], 8019: [[8017, 768]], 8020: [[8016, 769]], 8021: [[8017, 769]], 8022: [[8016, 834]], 8023: [[8017, 834]], 8025: [[933, 788], , { 768: 8027, 769: 8029, 834: 8031 }], 8027: [[8025, 768]], 8029: [[8025, 769]], 8031: [[8025, 834]], 8032: [[969, 787], , { 768: 8034, 769: 8036, 834: 8038, 837: 8096 }], 8033: [[969, 788], , { 768: 8035, 769: 8037, 834: 8039, 837: 8097 }], 8034: [[8032, 768], , { 837: 8098 }], 8035: [[8033, 768], , { 837: 8099 }], 8036: [[8032, 769], , { 837: 8100 }], 8037: [[8033, 769], , { 837: 8101 }], 8038: [[8032, 834], , { 837: 8102 }], 8039: [[8033, 834], , { 837: 8103 }], 8040: [[937, 787], , { 768: 8042, 769: 8044, 834: 8046, 837: 8104 }], 8041: [[937, 788], , { 768: 8043, 769: 8045, 834: 8047, 837: 8105 }], 8042: [[8040, 768], , { 837: 8106 }], 8043: [[8041, 768], , { 837: 8107 }], 8044: [[8040, 769], , { 837: 8108 }], 8045: [[8041, 769], , { 837: 8109 }], 8046: [[8040, 834], , { 837: 8110 }], 8047: [[8041, 834], , { 837: 8111 }], 8048: [[945, 768], , { 837: 8114 }], 8049: [[940]], 8050: [[949, 768]], 8051: [[941]], 8052: [[951, 768], , { 837: 8130 }], 8053: [[942]], 8054: [[953, 768]], 8055: [[943]], 8056: [[959, 768]], 8057: [[972]], 8058: [[965, 768]], 8059: [[973]], 8060: [[969, 768], , { 837: 8178 }], 8061: [[974]], 8064: [[7936, 837]], 8065: [[7937, 837]], 8066: [[7938, 837]], 8067: [[7939, 837]], 8068: [[7940, 837]], 8069: [[7941, 837]], 8070: [[7942, 837]], 8071: [[7943, 837]], 8072: [[7944, 837]], 8073: [[7945, 837]], 8074: [[7946, 837]], 8075: [[7947, 837]], 8076: [[7948, 837]], 8077: [[7949, 837]], 8078: [[7950, 837]], 8079: [[7951, 837]], 8080: [[7968, 837]], 8081: [[7969, 837]], 8082: [[7970, 837]], 8083: [[7971, 837]], 8084: [[7972, 837]], 8085: [[7973, 837]], 8086: [[7974, 837]], 8087: [[7975, 837]], 8088: [[7976, 837]], 8089: [[7977, 837]], 8090: [[7978, 837]], 8091: [[7979, 837]], 8092: [[7980, 837]], 8093: [[7981, 837]], 8094: [[7982, 837]], 8095: [[7983, 837]], 8096: [[8032, 837]], 8097: [[8033, 837]], 8098: [[8034, 837]], 8099: [[8035, 837]], 8100: [[8036, 837]], 8101: [[8037, 837]], 8102: [[8038, 837]], 8103: [[8039, 837]], 8104: [[8040, 837]], 8105: [[8041, 837]], 8106: [[8042, 837]], 8107: [[8043, 837]], 8108: [[8044, 837]], 8109: [[8045, 837]], 8110: [[8046, 837]], 8111: [[8047, 837]], 8112: [[945, 774]], 8113: [[945, 772]], 8114: [[8048, 837]], 8115: [[945, 837]], 8116: [[940, 837]], 8118: [[945, 834], , { 837: 8119 }], 8119: [[8118, 837]], 8120: [[913, 774]], 8121: [[913, 772]], 8122: [[913, 768]], 8123: [[902]], 8124: [[913, 837]], 8125: [[32, 787], 256], 8126: [[953]], 8127: [[32, 787], 256, { 768: 8141, 769: 8142, 834: 8143 }], 8128: [[32, 834], 256], 8129: [[168, 834]], 8130: [[8052, 837]], 8131: [[951, 837]], 8132: [[942, 837]], 8134: [[951, 834], , { 837: 8135 }], 8135: [[8134, 837]], 8136: [[917, 768]], 8137: [[904]], 8138: [[919, 768]], 8139: [[905]], 8140: [[919, 837]], 8141: [[8127, 768]], 8142: [[8127, 769]], 8143: [[8127, 834]], 8144: [[953, 774]], 8145: [[953, 772]], 8146: [[970, 768]], 8147: [[912]], 8150: [[953, 834]], 8151: [[970, 834]], 8152: [[921, 774]], 8153: [[921, 772]], 8154: [[921, 768]], 8155: [[906]], 8157: [[8190, 768]], 8158: [[8190, 769]], 8159: [[8190, 834]], 8160: [[965, 774]], 8161: [[965, 772]], 8162: [[971, 768]], 8163: [[944]], 8164: [[961, 787]], 8165: [[961, 788]], 8166: [[965, 834]], 8167: [[971, 834]], 8168: [[933, 774]], 8169: [[933, 772]], 8170: [[933, 768]], 8171: [[910]], 8172: [[929, 788]], 8173: [[168, 768]], 8174: [[901]], 8175: [[96]], 8178: [[8060, 837]], 8179: [[969, 837]], 8180: [[974, 837]], 8182: [[969, 834], , { 837: 8183 }], 8183: [[8182, 837]], 8184: [[927, 768]], 8185: [[908]], 8186: [[937, 768]], 8187: [[911]], 8188: [[937, 837]], 8189: [[180]], 8190: [[32, 788], 256, { 768: 8157, 769: 8158, 834: 8159 }] },
      8192: { 8192: [[8194]], 8193: [[8195]], 8194: [[32], 256], 8195: [[32], 256], 8196: [[32], 256], 8197: [[32], 256], 8198: [[32], 256], 8199: [[32], 256], 8200: [[32], 256], 8201: [[32], 256], 8202: [[32], 256], 8209: [[8208], 256], 8215: [[32, 819], 256], 8228: [[46], 256], 8229: [[46, 46], 256], 8230: [[46, 46, 46], 256], 8239: [[32], 256], 8243: [[8242, 8242], 256], 8244: [[8242, 8242, 8242], 256], 8246: [[8245, 8245], 256], 8247: [[8245, 8245, 8245], 256], 8252: [[33, 33], 256], 8254: [[32, 773], 256], 8263: [[63, 63], 256], 8264: [[63, 33], 256], 8265: [[33, 63], 256], 8279: [[8242, 8242, 8242, 8242], 256], 8287: [[32], 256], 8304: [[48], 256], 8305: [[105], 256], 8308: [[52], 256], 8309: [[53], 256], 8310: [[54], 256], 8311: [[55], 256], 8312: [[56], 256], 8313: [[57], 256], 8314: [[43], 256], 8315: [[8722], 256], 8316: [[61], 256], 8317: [[40], 256], 8318: [[41], 256], 8319: [[110], 256], 8320: [[48], 256], 8321: [[49], 256], 8322: [[50], 256], 8323: [[51], 256], 8324: [[52], 256], 8325: [[53], 256], 8326: [[54], 256], 8327: [[55], 256], 8328: [[56], 256], 8329: [[57], 256], 8330: [[43], 256], 8331: [[8722], 256], 8332: [[61], 256], 8333: [[40], 256], 8334: [[41], 256], 8336: [[97], 256], 8337: [[101], 256], 8338: [[111], 256], 8339: [[120], 256], 8340: [[601], 256], 8341: [[104], 256], 8342: [[107], 256], 8343: [[108], 256], 8344: [[109], 256], 8345: [[110], 256], 8346: [[112], 256], 8347: [[115], 256], 8348: [[116], 256], 8360: [[82, 115], 256], 8400: [, 230], 8401: [, 230], 8402: [, 1], 8403: [, 1], 8404: [, 230], 8405: [, 230], 8406: [, 230], 8407: [, 230], 8408: [, 1], 8409: [, 1], 8410: [, 1], 8411: [, 230], 8412: [, 230], 8417: [, 230], 8421: [, 1], 8422: [, 1], 8423: [, 230], 8424: [, 220], 8425: [, 230], 8426: [, 1], 8427: [, 1], 8428: [, 220], 8429: [, 220], 8430: [, 220], 8431: [, 220], 8432: [, 230] },
      8448: { 8448: [[97, 47, 99], 256], 8449: [[97, 47, 115], 256], 8450: [[67], 256], 8451: [[176, 67], 256], 8453: [[99, 47, 111], 256], 8454: [[99, 47, 117], 256], 8455: [[400], 256], 8457: [[176, 70], 256], 8458: [[103], 256], 8459: [[72], 256], 8460: [[72], 256], 8461: [[72], 256], 8462: [[104], 256], 8463: [[295], 256], 8464: [[73], 256], 8465: [[73], 256], 8466: [[76], 256], 8467: [[108], 256], 8469: [[78], 256], 8470: [[78, 111], 256], 8473: [[80], 256], 8474: [[81], 256], 8475: [[82], 256], 8476: [[82], 256], 8477: [[82], 256], 8480: [[83, 77], 256], 8481: [[84, 69, 76], 256], 8482: [[84, 77], 256], 8484: [[90], 256], 8486: [[937]], 8488: [[90], 256], 8490: [[75]], 8491: [[197]], 8492: [[66], 256], 8493: [[67], 256], 8495: [[101], 256], 8496: [[69], 256], 8497: [[70], 256], 8499: [[77], 256], 8500: [[111], 256], 8501: [[1488], 256], 8502: [[1489], 256], 8503: [[1490], 256], 8504: [[1491], 256], 8505: [[105], 256], 8507: [[70, 65, 88], 256], 8508: [[960], 256], 8509: [[947], 256], 8510: [[915], 256], 8511: [[928], 256], 8512: [[8721], 256], 8517: [[68], 256], 8518: [[100], 256], 8519: [[101], 256], 8520: [[105], 256], 8521: [[106], 256], 8528: [[49, 8260, 55], 256], 8529: [[49, 8260, 57], 256], 8530: [[49, 8260, 49, 48], 256], 8531: [[49, 8260, 51], 256], 8532: [[50, 8260, 51], 256], 8533: [[49, 8260, 53], 256], 8534: [[50, 8260, 53], 256], 8535: [[51, 8260, 53], 256], 8536: [[52, 8260, 53], 256], 8537: [[49, 8260, 54], 256], 8538: [[53, 8260, 54], 256], 8539: [[49, 8260, 56], 256], 8540: [[51, 8260, 56], 256], 8541: [[53, 8260, 56], 256], 8542: [[55, 8260, 56], 256], 8543: [[49, 8260], 256], 8544: [[73], 256], 8545: [[73, 73], 256], 8546: [[73, 73, 73], 256], 8547: [[73, 86], 256], 8548: [[86], 256], 8549: [[86, 73], 256], 8550: [[86, 73, 73], 256], 8551: [[86, 73, 73, 73], 256], 8552: [[73, 88], 256], 8553: [[88], 256], 8554: [[88, 73], 256], 8555: [[88, 73, 73], 256], 8556: [[76], 256], 8557: [[67], 256], 8558: [[68], 256], 8559: [[77], 256], 8560: [[105], 256], 8561: [[105, 105], 256], 8562: [[105, 105, 105], 256], 8563: [[105, 118], 256], 8564: [[118], 256], 8565: [[118, 105], 256], 8566: [[118, 105, 105], 256], 8567: [[118, 105, 105, 105], 256], 8568: [[105, 120], 256], 8569: [[120], 256], 8570: [[120, 105], 256], 8571: [[120, 105, 105], 256], 8572: [[108], 256], 8573: [[99], 256], 8574: [[100], 256], 8575: [[109], 256], 8585: [[48, 8260, 51], 256], 8592: [, , { 824: 8602 }], 8594: [, , { 824: 8603 }], 8596: [, , { 824: 8622 }], 8602: [[8592, 824]], 8603: [[8594, 824]], 8622: [[8596, 824]], 8653: [[8656, 824]], 8654: [[8660, 824]], 8655: [[8658, 824]], 8656: [, , { 824: 8653 }], 8658: [, , { 824: 8655 }], 8660: [, , { 824: 8654 }] },
      8704: { 8707: [, , { 824: 8708 }], 8708: [[8707, 824]], 8712: [, , { 824: 8713 }], 8713: [[8712, 824]], 8715: [, , { 824: 8716 }], 8716: [[8715, 824]], 8739: [, , { 824: 8740 }], 8740: [[8739, 824]], 8741: [, , { 824: 8742 }], 8742: [[8741, 824]], 8748: [[8747, 8747], 256], 8749: [[8747, 8747, 8747], 256], 8751: [[8750, 8750], 256], 8752: [[8750, 8750, 8750], 256], 8764: [, , { 824: 8769 }], 8769: [[8764, 824]], 8771: [, , { 824: 8772 }], 8772: [[8771, 824]], 8773: [, , { 824: 8775 }], 8775: [[8773, 824]], 8776: [, , { 824: 8777 }], 8777: [[8776, 824]], 8781: [, , { 824: 8813 }], 8800: [[61, 824]], 8801: [, , { 824: 8802 }], 8802: [[8801, 824]], 8804: [, , { 824: 8816 }], 8805: [, , { 824: 8817 }], 8813: [[8781, 824]], 8814: [[60, 824]], 8815: [[62, 824]], 8816: [[8804, 824]], 8817: [[8805, 824]], 8818: [, , { 824: 8820 }], 8819: [, , { 824: 8821 }], 8820: [[8818, 824]], 8821: [[8819, 824]], 8822: [, , { 824: 8824 }], 8823: [, , { 824: 8825 }], 8824: [[8822, 824]], 8825: [[8823, 824]], 8826: [, , { 824: 8832 }], 8827: [, , { 824: 8833 }], 8828: [, , { 824: 8928 }], 8829: [, , { 824: 8929 }], 8832: [[8826, 824]], 8833: [[8827, 824]], 8834: [, , { 824: 8836 }], 8835: [, , { 824: 8837 }], 8836: [[8834, 824]], 8837: [[8835, 824]], 8838: [, , { 824: 8840 }], 8839: [, , { 824: 8841 }], 8840: [[8838, 824]], 8841: [[8839, 824]], 8849: [, , { 824: 8930 }], 8850: [, , { 824: 8931 }], 8866: [, , { 824: 8876 }], 8872: [, , { 824: 8877 }], 8873: [, , { 824: 8878 }], 8875: [, , { 824: 8879 }], 8876: [[8866, 824]], 8877: [[8872, 824]], 8878: [[8873, 824]], 8879: [[8875, 824]], 8882: [, , { 824: 8938 }], 8883: [, , { 824: 8939 }], 8884: [, , { 824: 8940 }], 8885: [, , { 824: 8941 }], 8928: [[8828, 824]], 8929: [[8829, 824]], 8930: [[8849, 824]], 8931: [[8850, 824]], 8938: [[8882, 824]], 8939: [[8883, 824]], 8940: [[8884, 824]], 8941: [[8885, 824]] },
      8960: { 9001: [[12296]], 9002: [[12297]] },
      9216: { 9312: [[49], 256], 9313: [[50], 256], 9314: [[51], 256], 9315: [[52], 256], 9316: [[53], 256], 9317: [[54], 256], 9318: [[55], 256], 9319: [[56], 256], 9320: [[57], 256], 9321: [[49, 48], 256], 9322: [[49, 49], 256], 9323: [[49, 50], 256], 9324: [[49, 51], 256], 9325: [[49, 52], 256], 9326: [[49, 53], 256], 9327: [[49, 54], 256], 9328: [[49, 55], 256], 9329: [[49, 56], 256], 9330: [[49, 57], 256], 9331: [[50, 48], 256], 9332: [[40, 49, 41], 256], 9333: [[40, 50, 41], 256], 9334: [[40, 51, 41], 256], 9335: [[40, 52, 41], 256], 9336: [[40, 53, 41], 256], 9337: [[40, 54, 41], 256], 9338: [[40, 55, 41], 256], 9339: [[40, 56, 41], 256], 9340: [[40, 57, 41], 256], 9341: [[40, 49, 48, 41], 256], 9342: [[40, 49, 49, 41], 256], 9343: [[40, 49, 50, 41], 256], 9344: [[40, 49, 51, 41], 256], 9345: [[40, 49, 52, 41], 256], 9346: [[40, 49, 53, 41], 256], 9347: [[40, 49, 54, 41], 256], 9348: [[40, 49, 55, 41], 256], 9349: [[40, 49, 56, 41], 256], 9350: [[40, 49, 57, 41], 256], 9351: [[40, 50, 48, 41], 256], 9352: [[49, 46], 256], 9353: [[50, 46], 256], 9354: [[51, 46], 256], 9355: [[52, 46], 256], 9356: [[53, 46], 256], 9357: [[54, 46], 256], 9358: [[55, 46], 256], 9359: [[56, 46], 256], 9360: [[57, 46], 256], 9361: [[49, 48, 46], 256], 9362: [[49, 49, 46], 256], 9363: [[49, 50, 46], 256], 9364: [[49, 51, 46], 256], 9365: [[49, 52, 46], 256], 9366: [[49, 53, 46], 256], 9367: [[49, 54, 46], 256], 9368: [[49, 55, 46], 256], 9369: [[49, 56, 46], 256], 9370: [[49, 57, 46], 256], 9371: [[50, 48, 46], 256], 9372: [[40, 97, 41], 256], 9373: [[40, 98, 41], 256], 9374: [[40, 99, 41], 256], 9375: [[40, 100, 41], 256], 9376: [[40, 101, 41], 256], 9377: [[40, 102, 41], 256], 9378: [[40, 103, 41], 256], 9379: [[40, 104, 41], 256], 9380: [[40, 105, 41], 256], 9381: [[40, 106, 41], 256], 9382: [[40, 107, 41], 256], 9383: [[40, 108, 41], 256], 9384: [[40, 109, 41], 256], 9385: [[40, 110, 41], 256], 9386: [[40, 111, 41], 256], 9387: [[40, 112, 41], 256], 9388: [[40, 113, 41], 256], 9389: [[40, 114, 41], 256], 9390: [[40, 115, 41], 256], 9391: [[40, 116, 41], 256], 9392: [[40, 117, 41], 256], 9393: [[40, 118, 41], 256], 9394: [[40, 119, 41], 256], 9395: [[40, 120, 41], 256], 9396: [[40, 121, 41], 256], 9397: [[40, 122, 41], 256], 9398: [[65], 256], 9399: [[66], 256], 9400: [[67], 256], 9401: [[68], 256], 9402: [[69], 256], 9403: [[70], 256], 9404: [[71], 256], 9405: [[72], 256], 9406: [[73], 256], 9407: [[74], 256], 9408: [[75], 256], 9409: [[76], 256], 9410: [[77], 256], 9411: [[78], 256], 9412: [[79], 256], 9413: [[80], 256], 9414: [[81], 256], 9415: [[82], 256], 9416: [[83], 256], 9417: [[84], 256], 9418: [[85], 256], 9419: [[86], 256], 9420: [[87], 256], 9421: [[88], 256], 9422: [[89], 256], 9423: [[90], 256], 9424: [[97], 256], 9425: [[98], 256], 9426: [[99], 256], 9427: [[100], 256], 9428: [[101], 256], 9429: [[102], 256], 9430: [[103], 256], 9431: [[104], 256], 9432: [[105], 256], 9433: [[106], 256], 9434: [[107], 256], 9435: [[108], 256], 9436: [[109], 256], 9437: [[110], 256], 9438: [[111], 256], 9439: [[112], 256], 9440: [[113], 256], 9441: [[114], 256], 9442: [[115], 256], 9443: [[116], 256], 9444: [[117], 256], 9445: [[118], 256], 9446: [[119], 256], 9447: [[120], 256], 9448: [[121], 256], 9449: [[122], 256], 9450: [[48], 256] },
      10752: { 10764: [[8747, 8747, 8747, 8747], 256], 10868: [[58, 58, 61], 256], 10869: [[61, 61], 256], 10870: [[61, 61, 61], 256], 10972: [[10973, 824], 512] },
      11264: { 11388: [[106], 256], 11389: [[86], 256], 11503: [, 230], 11504: [, 230], 11505: [, 230] },
      11520: { 11631: [[11617], 256], 11647: [, 9], 11744: [, 230], 11745: [, 230], 11746: [, 230], 11747: [, 230], 11748: [, 230], 11749: [, 230], 11750: [, 230], 11751: [, 230], 11752: [, 230], 11753: [, 230], 11754: [, 230], 11755: [, 230], 11756: [, 230], 11757: [, 230], 11758: [, 230], 11759: [, 230], 11760: [, 230], 11761: [, 230], 11762: [, 230], 11763: [, 230], 11764: [, 230], 11765: [, 230], 11766: [, 230], 11767: [, 230], 11768: [, 230], 11769: [, 230], 11770: [, 230], 11771: [, 230], 11772: [, 230], 11773: [, 230], 11774: [, 230], 11775: [, 230] },
      11776: { 11935: [[27597], 256], 12019: [[40863], 256] },
      12032: { 12032: [[19968], 256], 12033: [[20008], 256], 12034: [[20022], 256], 12035: [[20031], 256], 12036: [[20057], 256], 12037: [[20101], 256], 12038: [[20108], 256], 12039: [[20128], 256], 12040: [[20154], 256], 12041: [[20799], 256], 12042: [[20837], 256], 12043: [[20843], 256], 12044: [[20866], 256], 12045: [[20886], 256], 12046: [[20907], 256], 12047: [[20960], 256], 12048: [[20981], 256], 12049: [[20992], 256], 12050: [[21147], 256], 12051: [[21241], 256], 12052: [[21269], 256], 12053: [[21274], 256], 12054: [[21304], 256], 12055: [[21313], 256], 12056: [[21340], 256], 12057: [[21353], 256], 12058: [[21378], 256], 12059: [[21430], 256], 12060: [[21448], 256], 12061: [[21475], 256], 12062: [[22231], 256], 12063: [[22303], 256], 12064: [[22763], 256], 12065: [[22786], 256], 12066: [[22794], 256], 12067: [[22805], 256], 12068: [[22823], 256], 12069: [[22899], 256], 12070: [[23376], 256], 12071: [[23424], 256], 12072: [[23544], 256], 12073: [[23567], 256], 12074: [[23586], 256], 12075: [[23608], 256], 12076: [[23662], 256], 12077: [[23665], 256], 12078: [[24027], 256], 12079: [[24037], 256], 12080: [[24049], 256], 12081: [[24062], 256], 12082: [[24178], 256], 12083: [[24186], 256], 12084: [[24191], 256], 12085: [[24308], 256], 12086: [[24318], 256], 12087: [[24331], 256], 12088: [[24339], 256], 12089: [[24400], 256], 12090: [[24417], 256], 12091: [[24435], 256], 12092: [[24515], 256], 12093: [[25096], 256], 12094: [[25142], 256], 12095: [[25163], 256], 12096: [[25903], 256], 12097: [[25908], 256], 12098: [[25991], 256], 12099: [[26007], 256], 12100: [[26020], 256], 12101: [[26041], 256], 12102: [[26080], 256], 12103: [[26085], 256], 12104: [[26352], 256], 12105: [[26376], 256], 12106: [[26408], 256], 12107: [[27424], 256], 12108: [[27490], 256], 12109: [[27513], 256], 12110: [[27571], 256], 12111: [[27595], 256], 12112: [[27604], 256], 12113: [[27611], 256], 12114: [[27663], 256], 12115: [[27668], 256], 12116: [[27700], 256], 12117: [[28779], 256], 12118: [[29226], 256], 12119: [[29238], 256], 12120: [[29243], 256], 12121: [[29247], 256], 12122: [[29255], 256], 12123: [[29273], 256], 12124: [[29275], 256], 12125: [[29356], 256], 12126: [[29572], 256], 12127: [[29577], 256], 12128: [[29916], 256], 12129: [[29926], 256], 12130: [[29976], 256], 12131: [[29983], 256], 12132: [[29992], 256], 12133: [[3e4], 256], 12134: [[30091], 256], 12135: [[30098], 256], 12136: [[30326], 256], 12137: [[30333], 256], 12138: [[30382], 256], 12139: [[30399], 256], 12140: [[30446], 256], 12141: [[30683], 256], 12142: [[30690], 256], 12143: [[30707], 256], 12144: [[31034], 256], 12145: [[31160], 256], 12146: [[31166], 256], 12147: [[31348], 256], 12148: [[31435], 256], 12149: [[31481], 256], 12150: [[31859], 256], 12151: [[31992], 256], 12152: [[32566], 256], 12153: [[32593], 256], 12154: [[32650], 256], 12155: [[32701], 256], 12156: [[32769], 256], 12157: [[32780], 256], 12158: [[32786], 256], 12159: [[32819], 256], 12160: [[32895], 256], 12161: [[32905], 256], 12162: [[33251], 256], 12163: [[33258], 256], 12164: [[33267], 256], 12165: [[33276], 256], 12166: [[33292], 256], 12167: [[33307], 256], 12168: [[33311], 256], 12169: [[33390], 256], 12170: [[33394], 256], 12171: [[33400], 256], 12172: [[34381], 256], 12173: [[34411], 256], 12174: [[34880], 256], 12175: [[34892], 256], 12176: [[34915], 256], 12177: [[35198], 256], 12178: [[35211], 256], 12179: [[35282], 256], 12180: [[35328], 256], 12181: [[35895], 256], 12182: [[35910], 256], 12183: [[35925], 256], 12184: [[35960], 256], 12185: [[35997], 256], 12186: [[36196], 256], 12187: [[36208], 256], 12188: [[36275], 256], 12189: [[36523], 256], 12190: [[36554], 256], 12191: [[36763], 256], 12192: [[36784], 256], 12193: [[36789], 256], 12194: [[37009], 256], 12195: [[37193], 256], 12196: [[37318], 256], 12197: [[37324], 256], 12198: [[37329], 256], 12199: [[38263], 256], 12200: [[38272], 256], 12201: [[38428], 256], 12202: [[38582], 256], 12203: [[38585], 256], 12204: [[38632], 256], 12205: [[38737], 256], 12206: [[38750], 256], 12207: [[38754], 256], 12208: [[38761], 256], 12209: [[38859], 256], 12210: [[38893], 256], 12211: [[38899], 256], 12212: [[38913], 256], 12213: [[39080], 256], 12214: [[39131], 256], 12215: [[39135], 256], 12216: [[39318], 256], 12217: [[39321], 256], 12218: [[39340], 256], 12219: [[39592], 256], 12220: [[39640], 256], 12221: [[39647], 256], 12222: [[39717], 256], 12223: [[39727], 256], 12224: [[39730], 256], 12225: [[39740], 256], 12226: [[39770], 256], 12227: [[40165], 256], 12228: [[40565], 256], 12229: [[40575], 256], 12230: [[40613], 256], 12231: [[40635], 256], 12232: [[40643], 256], 12233: [[40653], 256], 12234: [[40657], 256], 12235: [[40697], 256], 12236: [[40701], 256], 12237: [[40718], 256], 12238: [[40723], 256], 12239: [[40736], 256], 12240: [[40763], 256], 12241: [[40778], 256], 12242: [[40786], 256], 12243: [[40845], 256], 12244: [[40860], 256], 12245: [[40864], 256] },
      12288: { 12288: [[32], 256], 12330: [, 218], 12331: [, 228], 12332: [, 232], 12333: [, 222], 12334: [, 224], 12335: [, 224], 12342: [[12306], 256], 12344: [[21313], 256], 12345: [[21316], 256], 12346: [[21317], 256], 12358: [, , { 12441: 12436 }], 12363: [, , { 12441: 12364 }], 12364: [[12363, 12441]], 12365: [, , { 12441: 12366 }], 12366: [[12365, 12441]], 12367: [, , { 12441: 12368 }], 12368: [[12367, 12441]], 12369: [, , { 12441: 12370 }], 12370: [[12369, 12441]], 12371: [, , { 12441: 12372 }], 12372: [[12371, 12441]], 12373: [, , { 12441: 12374 }], 12374: [[12373, 12441]], 12375: [, , { 12441: 12376 }], 12376: [[12375, 12441]], 12377: [, , { 12441: 12378 }], 12378: [[12377, 12441]], 12379: [, , { 12441: 12380 }], 12380: [[12379, 12441]], 12381: [, , { 12441: 12382 }], 12382: [[12381, 12441]], 12383: [, , { 12441: 12384 }], 12384: [[12383, 12441]], 12385: [, , { 12441: 12386 }], 12386: [[12385, 12441]], 12388: [, , { 12441: 12389 }], 12389: [[12388, 12441]], 12390: [, , { 12441: 12391 }], 12391: [[12390, 12441]], 12392: [, , { 12441: 12393 }], 12393: [[12392, 12441]], 12399: [, , { 12441: 12400, 12442: 12401 }], 12400: [[12399, 12441]], 12401: [[12399, 12442]], 12402: [, , { 12441: 12403, 12442: 12404 }], 12403: [[12402, 12441]], 12404: [[12402, 12442]], 12405: [, , { 12441: 12406, 12442: 12407 }], 12406: [[12405, 12441]], 12407: [[12405, 12442]], 12408: [, , { 12441: 12409, 12442: 12410 }], 12409: [[12408, 12441]], 12410: [[12408, 12442]], 12411: [, , { 12441: 12412, 12442: 12413 }], 12412: [[12411, 12441]], 12413: [[12411, 12442]], 12436: [[12358, 12441]], 12441: [, 8], 12442: [, 8], 12443: [[32, 12441], 256], 12444: [[32, 12442], 256], 12445: [, , { 12441: 12446 }], 12446: [[12445, 12441]], 12447: [[12424, 12426], 256], 12454: [, , { 12441: 12532 }], 12459: [, , { 12441: 12460 }], 12460: [[12459, 12441]], 12461: [, , { 12441: 12462 }], 12462: [[12461, 12441]], 12463: [, , { 12441: 12464 }], 12464: [[12463, 12441]], 12465: [, , { 12441: 12466 }], 12466: [[12465, 12441]], 12467: [, , { 12441: 12468 }], 12468: [[12467, 12441]], 12469: [, , { 12441: 12470 }], 12470: [[12469, 12441]], 12471: [, , { 12441: 12472 }], 12472: [[12471, 12441]], 12473: [, , { 12441: 12474 }], 12474: [[12473, 12441]], 12475: [, , { 12441: 12476 }], 12476: [[12475, 12441]], 12477: [, , { 12441: 12478 }], 12478: [[12477, 12441]], 12479: [, , { 12441: 12480 }], 12480: [[12479, 12441]], 12481: [, , { 12441: 12482 }], 12482: [[12481, 12441]], 12484: [, , { 12441: 12485 }], 12485: [[12484, 12441]], 12486: [, , { 12441: 12487 }], 12487: [[12486, 12441]], 12488: [, , { 12441: 12489 }], 12489: [[12488, 12441]], 12495: [, , { 12441: 12496, 12442: 12497 }], 12496: [[12495, 12441]], 12497: [[12495, 12442]], 12498: [, , { 12441: 12499, 12442: 12500 }], 12499: [[12498, 12441]], 12500: [[12498, 12442]], 12501: [, , { 12441: 12502, 12442: 12503 }], 12502: [[12501, 12441]], 12503: [[12501, 12442]], 12504: [, , { 12441: 12505, 12442: 12506 }], 12505: [[12504, 12441]], 12506: [[12504, 12442]], 12507: [, , { 12441: 12508, 12442: 12509 }], 12508: [[12507, 12441]], 12509: [[12507, 12442]], 12527: [, , { 12441: 12535 }], 12528: [, , { 12441: 12536 }], 12529: [, , { 12441: 12537 }], 12530: [, , { 12441: 12538 }], 12532: [[12454, 12441]], 12535: [[12527, 12441]], 12536: [[12528, 12441]], 12537: [[12529, 12441]], 12538: [[12530, 12441]], 12541: [, , { 12441: 12542 }], 12542: [[12541, 12441]], 12543: [[12467, 12488], 256] },
      12544: { 12593: [[4352], 256], 12594: [[4353], 256], 12595: [[4522], 256], 12596: [[4354], 256], 12597: [[4524], 256], 12598: [[4525], 256], 12599: [[4355], 256], 12600: [[4356], 256], 12601: [[4357], 256], 12602: [[4528], 256], 12603: [[4529], 256], 12604: [[4530], 256], 12605: [[4531], 256], 12606: [[4532], 256], 12607: [[4533], 256], 12608: [[4378], 256], 12609: [[4358], 256], 12610: [[4359], 256], 12611: [[4360], 256], 12612: [[4385], 256], 12613: [[4361], 256], 12614: [[4362], 256], 12615: [[4363], 256], 12616: [[4364], 256], 12617: [[4365], 256], 12618: [[4366], 256], 12619: [[4367], 256], 12620: [[4368], 256], 12621: [[4369], 256], 12622: [[4370], 256], 12623: [[4449], 256], 12624: [[4450], 256], 12625: [[4451], 256], 12626: [[4452], 256], 12627: [[4453], 256], 12628: [[4454], 256], 12629: [[4455], 256], 12630: [[4456], 256], 12631: [[4457], 256], 12632: [[4458], 256], 12633: [[4459], 256], 12634: [[4460], 256], 12635: [[4461], 256], 12636: [[4462], 256], 12637: [[4463], 256], 12638: [[4464], 256], 12639: [[4465], 256], 12640: [[4466], 256], 12641: [[4467], 256], 12642: [[4468], 256], 12643: [[4469], 256], 12644: [[4448], 256], 12645: [[4372], 256], 12646: [[4373], 256], 12647: [[4551], 256], 12648: [[4552], 256], 12649: [[4556], 256], 12650: [[4558], 256], 12651: [[4563], 256], 12652: [[4567], 256], 12653: [[4569], 256], 12654: [[4380], 256], 12655: [[4573], 256], 12656: [[4575], 256], 12657: [[4381], 256], 12658: [[4382], 256], 12659: [[4384], 256], 12660: [[4386], 256], 12661: [[4387], 256], 12662: [[4391], 256], 12663: [[4393], 256], 12664: [[4395], 256], 12665: [[4396], 256], 12666: [[4397], 256], 12667: [[4398], 256], 12668: [[4399], 256], 12669: [[4402], 256], 12670: [[4406], 256], 12671: [[4416], 256], 12672: [[4423], 256], 12673: [[4428], 256], 12674: [[4593], 256], 12675: [[4594], 256], 12676: [[4439], 256], 12677: [[4440], 256], 12678: [[4441], 256], 12679: [[4484], 256], 12680: [[4485], 256], 12681: [[4488], 256], 12682: [[4497], 256], 12683: [[4498], 256], 12684: [[4500], 256], 12685: [[4510], 256], 12686: [[4513], 256], 12690: [[19968], 256], 12691: [[20108], 256], 12692: [[19977], 256], 12693: [[22235], 256], 12694: [[19978], 256], 12695: [[20013], 256], 12696: [[19979], 256], 12697: [[30002], 256], 12698: [[20057], 256], 12699: [[19993], 256], 12700: [[19969], 256], 12701: [[22825], 256], 12702: [[22320], 256], 12703: [[20154], 256] },
      12800: { 12800: [[40, 4352, 41], 256], 12801: [[40, 4354, 41], 256], 12802: [[40, 4355, 41], 256], 12803: [[40, 4357, 41], 256], 12804: [[40, 4358, 41], 256], 12805: [[40, 4359, 41], 256], 12806: [[40, 4361, 41], 256], 12807: [[40, 4363, 41], 256], 12808: [[40, 4364, 41], 256], 12809: [[40, 4366, 41], 256], 12810: [[40, 4367, 41], 256], 12811: [[40, 4368, 41], 256], 12812: [[40, 4369, 41], 256], 12813: [[40, 4370, 41], 256], 12814: [[40, 4352, 4449, 41], 256], 12815: [[40, 4354, 4449, 41], 256], 12816: [[40, 4355, 4449, 41], 256], 12817: [[40, 4357, 4449, 41], 256], 12818: [[40, 4358, 4449, 41], 256], 12819: [[40, 4359, 4449, 41], 256], 12820: [[40, 4361, 4449, 41], 256], 12821: [[40, 4363, 4449, 41], 256], 12822: [[40, 4364, 4449, 41], 256], 12823: [[40, 4366, 4449, 41], 256], 12824: [[40, 4367, 4449, 41], 256], 12825: [[40, 4368, 4449, 41], 256], 12826: [[40, 4369, 4449, 41], 256], 12827: [[40, 4370, 4449, 41], 256], 12828: [[40, 4364, 4462, 41], 256], 12829: [[40, 4363, 4457, 4364, 4453, 4523, 41], 256], 12830: [[40, 4363, 4457, 4370, 4462, 41], 256], 12832: [[40, 19968, 41], 256], 12833: [[40, 20108, 41], 256], 12834: [[40, 19977, 41], 256], 12835: [[40, 22235, 41], 256], 12836: [[40, 20116, 41], 256], 12837: [[40, 20845, 41], 256], 12838: [[40, 19971, 41], 256], 12839: [[40, 20843, 41], 256], 12840: [[40, 20061, 41], 256], 12841: [[40, 21313, 41], 256], 12842: [[40, 26376, 41], 256], 12843: [[40, 28779, 41], 256], 12844: [[40, 27700, 41], 256], 12845: [[40, 26408, 41], 256], 12846: [[40, 37329, 41], 256], 12847: [[40, 22303, 41], 256], 12848: [[40, 26085, 41], 256], 12849: [[40, 26666, 41], 256], 12850: [[40, 26377, 41], 256], 12851: [[40, 31038, 41], 256], 12852: [[40, 21517, 41], 256], 12853: [[40, 29305, 41], 256], 12854: [[40, 36001, 41], 256], 12855: [[40, 31069, 41], 256], 12856: [[40, 21172, 41], 256], 12857: [[40, 20195, 41], 256], 12858: [[40, 21628, 41], 256], 12859: [[40, 23398, 41], 256], 12860: [[40, 30435, 41], 256], 12861: [[40, 20225, 41], 256], 12862: [[40, 36039, 41], 256], 12863: [[40, 21332, 41], 256], 12864: [[40, 31085, 41], 256], 12865: [[40, 20241, 41], 256], 12866: [[40, 33258, 41], 256], 12867: [[40, 33267, 41], 256], 12868: [[21839], 256], 12869: [[24188], 256], 12870: [[25991], 256], 12871: [[31631], 256], 12880: [[80, 84, 69], 256], 12881: [[50, 49], 256], 12882: [[50, 50], 256], 12883: [[50, 51], 256], 12884: [[50, 52], 256], 12885: [[50, 53], 256], 12886: [[50, 54], 256], 12887: [[50, 55], 256], 12888: [[50, 56], 256], 12889: [[50, 57], 256], 12890: [[51, 48], 256], 12891: [[51, 49], 256], 12892: [[51, 50], 256], 12893: [[51, 51], 256], 12894: [[51, 52], 256], 12895: [[51, 53], 256], 12896: [[4352], 256], 12897: [[4354], 256], 12898: [[4355], 256], 12899: [[4357], 256], 12900: [[4358], 256], 12901: [[4359], 256], 12902: [[4361], 256], 12903: [[4363], 256], 12904: [[4364], 256], 12905: [[4366], 256], 12906: [[4367], 256], 12907: [[4368], 256], 12908: [[4369], 256], 12909: [[4370], 256], 12910: [[4352, 4449], 256], 12911: [[4354, 4449], 256], 12912: [[4355, 4449], 256], 12913: [[4357, 4449], 256], 12914: [[4358, 4449], 256], 12915: [[4359, 4449], 256], 12916: [[4361, 4449], 256], 12917: [[4363, 4449], 256], 12918: [[4364, 4449], 256], 12919: [[4366, 4449], 256], 12920: [[4367, 4449], 256], 12921: [[4368, 4449], 256], 12922: [[4369, 4449], 256], 12923: [[4370, 4449], 256], 12924: [[4366, 4449, 4535, 4352, 4457], 256], 12925: [[4364, 4462, 4363, 4468], 256], 12926: [[4363, 4462], 256], 12928: [[19968], 256], 12929: [[20108], 256], 12930: [[19977], 256], 12931: [[22235], 256], 12932: [[20116], 256], 12933: [[20845], 256], 12934: [[19971], 256], 12935: [[20843], 256], 12936: [[20061], 256], 12937: [[21313], 256], 12938: [[26376], 256], 12939: [[28779], 256], 12940: [[27700], 256], 12941: [[26408], 256], 12942: [[37329], 256], 12943: [[22303], 256], 12944: [[26085], 256], 12945: [[26666], 256], 12946: [[26377], 256], 12947: [[31038], 256], 12948: [[21517], 256], 12949: [[29305], 256], 12950: [[36001], 256], 12951: [[31069], 256], 12952: [[21172], 256], 12953: [[31192], 256], 12954: [[30007], 256], 12955: [[22899], 256], 12956: [[36969], 256], 12957: [[20778], 256], 12958: [[21360], 256], 12959: [[27880], 256], 12960: [[38917], 256], 12961: [[20241], 256], 12962: [[20889], 256], 12963: [[27491], 256], 12964: [[19978], 256], 12965: [[20013], 256], 12966: [[19979], 256], 12967: [[24038], 256], 12968: [[21491], 256], 12969: [[21307], 256], 12970: [[23447], 256], 12971: [[23398], 256], 12972: [[30435], 256], 12973: [[20225], 256], 12974: [[36039], 256], 12975: [[21332], 256], 12976: [[22812], 256], 12977: [[51, 54], 256], 12978: [[51, 55], 256], 12979: [[51, 56], 256], 12980: [[51, 57], 256], 12981: [[52, 48], 256], 12982: [[52, 49], 256], 12983: [[52, 50], 256], 12984: [[52, 51], 256], 12985: [[52, 52], 256], 12986: [[52, 53], 256], 12987: [[52, 54], 256], 12988: [[52, 55], 256], 12989: [[52, 56], 256], 12990: [[52, 57], 256], 12991: [[53, 48], 256], 12992: [[49, 26376], 256], 12993: [[50, 26376], 256], 12994: [[51, 26376], 256], 12995: [[52, 26376], 256], 12996: [[53, 26376], 256], 12997: [[54, 26376], 256], 12998: [[55, 26376], 256], 12999: [[56, 26376], 256], 13e3: [[57, 26376], 256], 13001: [[49, 48, 26376], 256], 13002: [[49, 49, 26376], 256], 13003: [[49, 50, 26376], 256], 13004: [[72, 103], 256], 13005: [[101, 114, 103], 256], 13006: [[101, 86], 256], 13007: [[76, 84, 68], 256], 13008: [[12450], 256], 13009: [[12452], 256], 13010: [[12454], 256], 13011: [[12456], 256], 13012: [[12458], 256], 13013: [[12459], 256], 13014: [[12461], 256], 13015: [[12463], 256], 13016: [[12465], 256], 13017: [[12467], 256], 13018: [[12469], 256], 13019: [[12471], 256], 13020: [[12473], 256], 13021: [[12475], 256], 13022: [[12477], 256], 13023: [[12479], 256], 13024: [[12481], 256], 13025: [[12484], 256], 13026: [[12486], 256], 13027: [[12488], 256], 13028: [[12490], 256], 13029: [[12491], 256], 13030: [[12492], 256], 13031: [[12493], 256], 13032: [[12494], 256], 13033: [[12495], 256], 13034: [[12498], 256], 13035: [[12501], 256], 13036: [[12504], 256], 13037: [[12507], 256], 13038: [[12510], 256], 13039: [[12511], 256], 13040: [[12512], 256], 13041: [[12513], 256], 13042: [[12514], 256], 13043: [[12516], 256], 13044: [[12518], 256], 13045: [[12520], 256], 13046: [[12521], 256], 13047: [[12522], 256], 13048: [[12523], 256], 13049: [[12524], 256], 13050: [[12525], 256], 13051: [[12527], 256], 13052: [[12528], 256], 13053: [[12529], 256], 13054: [[12530], 256] },
      13056: { 13056: [[12450, 12497, 12540, 12488], 256], 13057: [[12450, 12523, 12501, 12449], 256], 13058: [[12450, 12531, 12506, 12450], 256], 13059: [[12450, 12540, 12523], 256], 13060: [[12452, 12491, 12531, 12464], 256], 13061: [[12452, 12531, 12481], 256], 13062: [[12454, 12457, 12531], 256], 13063: [[12456, 12473, 12463, 12540, 12489], 256], 13064: [[12456, 12540, 12459, 12540], 256], 13065: [[12458, 12531, 12473], 256], 13066: [[12458, 12540, 12512], 256], 13067: [[12459, 12452, 12522], 256], 13068: [[12459, 12521, 12483, 12488], 256], 13069: [[12459, 12525, 12522, 12540], 256], 13070: [[12460, 12525, 12531], 256], 13071: [[12460, 12531, 12510], 256], 13072: [[12462, 12460], 256], 13073: [[12462, 12491, 12540], 256], 13074: [[12461, 12517, 12522, 12540], 256], 13075: [[12462, 12523, 12480, 12540], 256], 13076: [[12461, 12525], 256], 13077: [[12461, 12525, 12464, 12521, 12512], 256], 13078: [[12461, 12525, 12513, 12540, 12488, 12523], 256], 13079: [[12461, 12525, 12527, 12483, 12488], 256], 13080: [[12464, 12521, 12512], 256], 13081: [[12464, 12521, 12512, 12488, 12531], 256], 13082: [[12463, 12523, 12476, 12452, 12525], 256], 13083: [[12463, 12525, 12540, 12493], 256], 13084: [[12465, 12540, 12473], 256], 13085: [[12467, 12523, 12490], 256], 13086: [[12467, 12540, 12509], 256], 13087: [[12469, 12452, 12463, 12523], 256], 13088: [[12469, 12531, 12481, 12540, 12512], 256], 13089: [[12471, 12522, 12531, 12464], 256], 13090: [[12475, 12531, 12481], 256], 13091: [[12475, 12531, 12488], 256], 13092: [[12480, 12540, 12473], 256], 13093: [[12487, 12471], 256], 13094: [[12489, 12523], 256], 13095: [[12488, 12531], 256], 13096: [[12490, 12494], 256], 13097: [[12494, 12483, 12488], 256], 13098: [[12495, 12452, 12484], 256], 13099: [[12497, 12540, 12475, 12531, 12488], 256], 13100: [[12497, 12540, 12484], 256], 13101: [[12496, 12540, 12524, 12523], 256], 13102: [[12500, 12450, 12473, 12488, 12523], 256], 13103: [[12500, 12463, 12523], 256], 13104: [[12500, 12467], 256], 13105: [[12499, 12523], 256], 13106: [[12501, 12449, 12521, 12483, 12489], 256], 13107: [[12501, 12451, 12540, 12488], 256], 13108: [[12502, 12483, 12471, 12455, 12523], 256], 13109: [[12501, 12521, 12531], 256], 13110: [[12504, 12463, 12479, 12540, 12523], 256], 13111: [[12506, 12477], 256], 13112: [[12506, 12491, 12498], 256], 13113: [[12504, 12523, 12484], 256], 13114: [[12506, 12531, 12473], 256], 13115: [[12506, 12540, 12472], 256], 13116: [[12505, 12540, 12479], 256], 13117: [[12509, 12452, 12531, 12488], 256], 13118: [[12508, 12523, 12488], 256], 13119: [[12507, 12531], 256], 13120: [[12509, 12531, 12489], 256], 13121: [[12507, 12540, 12523], 256], 13122: [[12507, 12540, 12531], 256], 13123: [[12510, 12452, 12463, 12525], 256], 13124: [[12510, 12452, 12523], 256], 13125: [[12510, 12483, 12495], 256], 13126: [[12510, 12523, 12463], 256], 13127: [[12510, 12531, 12471, 12519, 12531], 256], 13128: [[12511, 12463, 12525, 12531], 256], 13129: [[12511, 12522], 256], 13130: [[12511, 12522, 12496, 12540, 12523], 256], 13131: [[12513, 12460], 256], 13132: [[12513, 12460, 12488, 12531], 256], 13133: [[12513, 12540, 12488, 12523], 256], 13134: [[12516, 12540, 12489], 256], 13135: [[12516, 12540, 12523], 256], 13136: [[12518, 12450, 12531], 256], 13137: [[12522, 12483, 12488, 12523], 256], 13138: [[12522, 12521], 256], 13139: [[12523, 12500, 12540], 256], 13140: [[12523, 12540, 12502, 12523], 256], 13141: [[12524, 12512], 256], 13142: [[12524, 12531, 12488, 12466, 12531], 256], 13143: [[12527, 12483, 12488], 256], 13144: [[48, 28857], 256], 13145: [[49, 28857], 256], 13146: [[50, 28857], 256], 13147: [[51, 28857], 256], 13148: [[52, 28857], 256], 13149: [[53, 28857], 256], 13150: [[54, 28857], 256], 13151: [[55, 28857], 256], 13152: [[56, 28857], 256], 13153: [[57, 28857], 256], 13154: [[49, 48, 28857], 256], 13155: [[49, 49, 28857], 256], 13156: [[49, 50, 28857], 256], 13157: [[49, 51, 28857], 256], 13158: [[49, 52, 28857], 256], 13159: [[49, 53, 28857], 256], 13160: [[49, 54, 28857], 256], 13161: [[49, 55, 28857], 256], 13162: [[49, 56, 28857], 256], 13163: [[49, 57, 28857], 256], 13164: [[50, 48, 28857], 256], 13165: [[50, 49, 28857], 256], 13166: [[50, 50, 28857], 256], 13167: [[50, 51, 28857], 256], 13168: [[50, 52, 28857], 256], 13169: [[104, 80, 97], 256], 13170: [[100, 97], 256], 13171: [[65, 85], 256], 13172: [[98, 97, 114], 256], 13173: [[111, 86], 256], 13174: [[112, 99], 256], 13175: [[100, 109], 256], 13176: [[100, 109, 178], 256], 13177: [[100, 109, 179], 256], 13178: [[73, 85], 256], 13179: [[24179, 25104], 256], 13180: [[26157, 21644], 256], 13181: [[22823, 27491], 256], 13182: [[26126, 27835], 256], 13183: [[26666, 24335, 20250, 31038], 256], 13184: [[112, 65], 256], 13185: [[110, 65], 256], 13186: [[956, 65], 256], 13187: [[109, 65], 256], 13188: [[107, 65], 256], 13189: [[75, 66], 256], 13190: [[77, 66], 256], 13191: [[71, 66], 256], 13192: [[99, 97, 108], 256], 13193: [[107, 99, 97, 108], 256], 13194: [[112, 70], 256], 13195: [[110, 70], 256], 13196: [[956, 70], 256], 13197: [[956, 103], 256], 13198: [[109, 103], 256], 13199: [[107, 103], 256], 13200: [[72, 122], 256], 13201: [[107, 72, 122], 256], 13202: [[77, 72, 122], 256], 13203: [[71, 72, 122], 256], 13204: [[84, 72, 122], 256], 13205: [[956, 8467], 256], 13206: [[109, 8467], 256], 13207: [[100, 8467], 256], 13208: [[107, 8467], 256], 13209: [[102, 109], 256], 13210: [[110, 109], 256], 13211: [[956, 109], 256], 13212: [[109, 109], 256], 13213: [[99, 109], 256], 13214: [[107, 109], 256], 13215: [[109, 109, 178], 256], 13216: [[99, 109, 178], 256], 13217: [[109, 178], 256], 13218: [[107, 109, 178], 256], 13219: [[109, 109, 179], 256], 13220: [[99, 109, 179], 256], 13221: [[109, 179], 256], 13222: [[107, 109, 179], 256], 13223: [[109, 8725, 115], 256], 13224: [[109, 8725, 115, 178], 256], 13225: [[80, 97], 256], 13226: [[107, 80, 97], 256], 13227: [[77, 80, 97], 256], 13228: [[71, 80, 97], 256], 13229: [[114, 97, 100], 256], 13230: [[114, 97, 100, 8725, 115], 256], 13231: [[114, 97, 100, 8725, 115, 178], 256], 13232: [[112, 115], 256], 13233: [[110, 115], 256], 13234: [[956, 115], 256], 13235: [[109, 115], 256], 13236: [[112, 86], 256], 13237: [[110, 86], 256], 13238: [[956, 86], 256], 13239: [[109, 86], 256], 13240: [[107, 86], 256], 13241: [[77, 86], 256], 13242: [[112, 87], 256], 13243: [[110, 87], 256], 13244: [[956, 87], 256], 13245: [[109, 87], 256], 13246: [[107, 87], 256], 13247: [[77, 87], 256], 13248: [[107, 937], 256], 13249: [[77, 937], 256], 13250: [[97, 46, 109, 46], 256], 13251: [[66, 113], 256], 13252: [[99, 99], 256], 13253: [[99, 100], 256], 13254: [[67, 8725, 107, 103], 256], 13255: [[67, 111, 46], 256], 13256: [[100, 66], 256], 13257: [[71, 121], 256], 13258: [[104, 97], 256], 13259: [[72, 80], 256], 13260: [[105, 110], 256], 13261: [[75, 75], 256], 13262: [[75, 77], 256], 13263: [[107, 116], 256], 13264: [[108, 109], 256], 13265: [[108, 110], 256], 13266: [[108, 111, 103], 256], 13267: [[108, 120], 256], 13268: [[109, 98], 256], 13269: [[109, 105, 108], 256], 13270: [[109, 111, 108], 256], 13271: [[80, 72], 256], 13272: [[112, 46, 109, 46], 256], 13273: [[80, 80, 77], 256], 13274: [[80, 82], 256], 13275: [[115, 114], 256], 13276: [[83, 118], 256], 13277: [[87, 98], 256], 13278: [[86, 8725, 109], 256], 13279: [[65, 8725, 109], 256], 13280: [[49, 26085], 256], 13281: [[50, 26085], 256], 13282: [[51, 26085], 256], 13283: [[52, 26085], 256], 13284: [[53, 26085], 256], 13285: [[54, 26085], 256], 13286: [[55, 26085], 256], 13287: [[56, 26085], 256], 13288: [[57, 26085], 256], 13289: [[49, 48, 26085], 256], 13290: [[49, 49, 26085], 256], 13291: [[49, 50, 26085], 256], 13292: [[49, 51, 26085], 256], 13293: [[49, 52, 26085], 256], 13294: [[49, 53, 26085], 256], 13295: [[49, 54, 26085], 256], 13296: [[49, 55, 26085], 256], 13297: [[49, 56, 26085], 256], 13298: [[49, 57, 26085], 256], 13299: [[50, 48, 26085], 256], 13300: [[50, 49, 26085], 256], 13301: [[50, 50, 26085], 256], 13302: [[50, 51, 26085], 256], 13303: [[50, 52, 26085], 256], 13304: [[50, 53, 26085], 256], 13305: [[50, 54, 26085], 256], 13306: [[50, 55, 26085], 256], 13307: [[50, 56, 26085], 256], 13308: [[50, 57, 26085], 256], 13309: [[51, 48, 26085], 256], 13310: [[51, 49, 26085], 256], 13311: [[103, 97, 108], 256] },
      27136: { 92912: [, 1], 92913: [, 1], 92914: [, 1], 92915: [, 1], 92916: [, 1] },
      27392: { 92976: [, 230], 92977: [, 230], 92978: [, 230], 92979: [, 230], 92980: [, 230], 92981: [, 230], 92982: [, 230] },
      42496: { 42607: [, 230], 42612: [, 230], 42613: [, 230], 42614: [, 230], 42615: [, 230], 42616: [, 230], 42617: [, 230], 42618: [, 230], 42619: [, 230], 42620: [, 230], 42621: [, 230], 42652: [[1098], 256], 42653: [[1100], 256], 42655: [, 230], 42736: [, 230], 42737: [, 230] },
      42752: { 42864: [[42863], 256], 43e3: [[294], 256], 43001: [[339], 256] },
      43008: { 43014: [, 9], 43204: [, 9], 43232: [, 230], 43233: [, 230], 43234: [, 230], 43235: [, 230], 43236: [, 230], 43237: [, 230], 43238: [, 230], 43239: [, 230], 43240: [, 230], 43241: [, 230], 43242: [, 230], 43243: [, 230], 43244: [, 230], 43245: [, 230], 43246: [, 230], 43247: [, 230], 43248: [, 230], 43249: [, 230] },
      43264: { 43307: [, 220], 43308: [, 220], 43309: [, 220], 43347: [, 9], 43443: [, 7], 43456: [, 9] },
      43520: { 43696: [, 230], 43698: [, 230], 43699: [, 230], 43700: [, 220], 43703: [, 230], 43704: [, 230], 43710: [, 230], 43711: [, 230], 43713: [, 230], 43766: [, 9] },
      43776: { 43868: [[42791], 256], 43869: [[43831], 256], 43870: [[619], 256], 43871: [[43858], 256], 44013: [, 9] },
      48128: { 113822: [, 1] },
      53504: { 119134: [[119127, 119141], 512], 119135: [[119128, 119141], 512], 119136: [[119135, 119150], 512], 119137: [[119135, 119151], 512], 119138: [[119135, 119152], 512], 119139: [[119135, 119153], 512], 119140: [[119135, 119154], 512], 119141: [, 216], 119142: [, 216], 119143: [, 1], 119144: [, 1], 119145: [, 1], 119149: [, 226], 119150: [, 216], 119151: [, 216], 119152: [, 216], 119153: [, 216], 119154: [, 216], 119163: [, 220], 119164: [, 220], 119165: [, 220], 119166: [, 220], 119167: [, 220], 119168: [, 220], 119169: [, 220], 119170: [, 220], 119173: [, 230], 119174: [, 230], 119175: [, 230], 119176: [, 230], 119177: [, 230], 119178: [, 220], 119179: [, 220], 119210: [, 230], 119211: [, 230], 119212: [, 230], 119213: [, 230], 119227: [[119225, 119141], 512], 119228: [[119226, 119141], 512], 119229: [[119227, 119150], 512], 119230: [[119228, 119150], 512], 119231: [[119227, 119151], 512], 119232: [[119228, 119151], 512] },
      53760: { 119362: [, 230], 119363: [, 230], 119364: [, 230] },
      54272: { 119808: [[65], 256], 119809: [[66], 256], 119810: [[67], 256], 119811: [[68], 256], 119812: [[69], 256], 119813: [[70], 256], 119814: [[71], 256], 119815: [[72], 256], 119816: [[73], 256], 119817: [[74], 256], 119818: [[75], 256], 119819: [[76], 256], 119820: [[77], 256], 119821: [[78], 256], 119822: [[79], 256], 119823: [[80], 256], 119824: [[81], 256], 119825: [[82], 256], 119826: [[83], 256], 119827: [[84], 256], 119828: [[85], 256], 119829: [[86], 256], 119830: [[87], 256], 119831: [[88], 256], 119832: [[89], 256], 119833: [[90], 256], 119834: [[97], 256], 119835: [[98], 256], 119836: [[99], 256], 119837: [[100], 256], 119838: [[101], 256], 119839: [[102], 256], 119840: [[103], 256], 119841: [[104], 256], 119842: [[105], 256], 119843: [[106], 256], 119844: [[107], 256], 119845: [[108], 256], 119846: [[109], 256], 119847: [[110], 256], 119848: [[111], 256], 119849: [[112], 256], 119850: [[113], 256], 119851: [[114], 256], 119852: [[115], 256], 119853: [[116], 256], 119854: [[117], 256], 119855: [[118], 256], 119856: [[119], 256], 119857: [[120], 256], 119858: [[121], 256], 119859: [[122], 256], 119860: [[65], 256], 119861: [[66], 256], 119862: [[67], 256], 119863: [[68], 256], 119864: [[69], 256], 119865: [[70], 256], 119866: [[71], 256], 119867: [[72], 256], 119868: [[73], 256], 119869: [[74], 256], 119870: [[75], 256], 119871: [[76], 256], 119872: [[77], 256], 119873: [[78], 256], 119874: [[79], 256], 119875: [[80], 256], 119876: [[81], 256], 119877: [[82], 256], 119878: [[83], 256], 119879: [[84], 256], 119880: [[85], 256], 119881: [[86], 256], 119882: [[87], 256], 119883: [[88], 256], 119884: [[89], 256], 119885: [[90], 256], 119886: [[97], 256], 119887: [[98], 256], 119888: [[99], 256], 119889: [[100], 256], 119890: [[101], 256], 119891: [[102], 256], 119892: [[103], 256], 119894: [[105], 256], 119895: [[106], 256], 119896: [[107], 256], 119897: [[108], 256], 119898: [[109], 256], 119899: [[110], 256], 119900: [[111], 256], 119901: [[112], 256], 119902: [[113], 256], 119903: [[114], 256], 119904: [[115], 256], 119905: [[116], 256], 119906: [[117], 256], 119907: [[118], 256], 119908: [[119], 256], 119909: [[120], 256], 119910: [[121], 256], 119911: [[122], 256], 119912: [[65], 256], 119913: [[66], 256], 119914: [[67], 256], 119915: [[68], 256], 119916: [[69], 256], 119917: [[70], 256], 119918: [[71], 256], 119919: [[72], 256], 119920: [[73], 256], 119921: [[74], 256], 119922: [[75], 256], 119923: [[76], 256], 119924: [[77], 256], 119925: [[78], 256], 119926: [[79], 256], 119927: [[80], 256], 119928: [[81], 256], 119929: [[82], 256], 119930: [[83], 256], 119931: [[84], 256], 119932: [[85], 256], 119933: [[86], 256], 119934: [[87], 256], 119935: [[88], 256], 119936: [[89], 256], 119937: [[90], 256], 119938: [[97], 256], 119939: [[98], 256], 119940: [[99], 256], 119941: [[100], 256], 119942: [[101], 256], 119943: [[102], 256], 119944: [[103], 256], 119945: [[104], 256], 119946: [[105], 256], 119947: [[106], 256], 119948: [[107], 256], 119949: [[108], 256], 119950: [[109], 256], 119951: [[110], 256], 119952: [[111], 256], 119953: [[112], 256], 119954: [[113], 256], 119955: [[114], 256], 119956: [[115], 256], 119957: [[116], 256], 119958: [[117], 256], 119959: [[118], 256], 119960: [[119], 256], 119961: [[120], 256], 119962: [[121], 256], 119963: [[122], 256], 119964: [[65], 256], 119966: [[67], 256], 119967: [[68], 256], 119970: [[71], 256], 119973: [[74], 256], 119974: [[75], 256], 119977: [[78], 256], 119978: [[79], 256], 119979: [[80], 256], 119980: [[81], 256], 119982: [[83], 256], 119983: [[84], 256], 119984: [[85], 256], 119985: [[86], 256], 119986: [[87], 256], 119987: [[88], 256], 119988: [[89], 256], 119989: [[90], 256], 119990: [[97], 256], 119991: [[98], 256], 119992: [[99], 256], 119993: [[100], 256], 119995: [[102], 256], 119997: [[104], 256], 119998: [[105], 256], 119999: [[106], 256], 12e4: [[107], 256], 120001: [[108], 256], 120002: [[109], 256], 120003: [[110], 256], 120005: [[112], 256], 120006: [[113], 256], 120007: [[114], 256], 120008: [[115], 256], 120009: [[116], 256], 120010: [[117], 256], 120011: [[118], 256], 120012: [[119], 256], 120013: [[120], 256], 120014: [[121], 256], 120015: [[122], 256], 120016: [[65], 256], 120017: [[66], 256], 120018: [[67], 256], 120019: [[68], 256], 120020: [[69], 256], 120021: [[70], 256], 120022: [[71], 256], 120023: [[72], 256], 120024: [[73], 256], 120025: [[74], 256], 120026: [[75], 256], 120027: [[76], 256], 120028: [[77], 256], 120029: [[78], 256], 120030: [[79], 256], 120031: [[80], 256], 120032: [[81], 256], 120033: [[82], 256], 120034: [[83], 256], 120035: [[84], 256], 120036: [[85], 256], 120037: [[86], 256], 120038: [[87], 256], 120039: [[88], 256], 120040: [[89], 256], 120041: [[90], 256], 120042: [[97], 256], 120043: [[98], 256], 120044: [[99], 256], 120045: [[100], 256], 120046: [[101], 256], 120047: [[102], 256], 120048: [[103], 256], 120049: [[104], 256], 120050: [[105], 256], 120051: [[106], 256], 120052: [[107], 256], 120053: [[108], 256], 120054: [[109], 256], 120055: [[110], 256], 120056: [[111], 256], 120057: [[112], 256], 120058: [[113], 256], 120059: [[114], 256], 120060: [[115], 256], 120061: [[116], 256], 120062: [[117], 256], 120063: [[118], 256] },
      54528: { 120064: [[119], 256], 120065: [[120], 256], 120066: [[121], 256], 120067: [[122], 256], 120068: [[65], 256], 120069: [[66], 256], 120071: [[68], 256], 120072: [[69], 256], 120073: [[70], 256], 120074: [[71], 256], 120077: [[74], 256], 120078: [[75], 256], 120079: [[76], 256], 120080: [[77], 256], 120081: [[78], 256], 120082: [[79], 256], 120083: [[80], 256], 120084: [[81], 256], 120086: [[83], 256], 120087: [[84], 256], 120088: [[85], 256], 120089: [[86], 256], 120090: [[87], 256], 120091: [[88], 256], 120092: [[89], 256], 120094: [[97], 256], 120095: [[98], 256], 120096: [[99], 256], 120097: [[100], 256], 120098: [[101], 256], 120099: [[102], 256], 120100: [[103], 256], 120101: [[104], 256], 120102: [[105], 256], 120103: [[106], 256], 120104: [[107], 256], 120105: [[108], 256], 120106: [[109], 256], 120107: [[110], 256], 120108: [[111], 256], 120109: [[112], 256], 120110: [[113], 256], 120111: [[114], 256], 120112: [[115], 256], 120113: [[116], 256], 120114: [[117], 256], 120115: [[118], 256], 120116: [[119], 256], 120117: [[120], 256], 120118: [[121], 256], 120119: [[122], 256], 120120: [[65], 256], 120121: [[66], 256], 120123: [[68], 256], 120124: [[69], 256], 120125: [[70], 256], 120126: [[71], 256], 120128: [[73], 256], 120129: [[74], 256], 120130: [[75], 256], 120131: [[76], 256], 120132: [[77], 256], 120134: [[79], 256], 120138: [[83], 256], 120139: [[84], 256], 120140: [[85], 256], 120141: [[86], 256], 120142: [[87], 256], 120143: [[88], 256], 120144: [[89], 256], 120146: [[97], 256], 120147: [[98], 256], 120148: [[99], 256], 120149: [[100], 256], 120150: [[101], 256], 120151: [[102], 256], 120152: [[103], 256], 120153: [[104], 256], 120154: [[105], 256], 120155: [[106], 256], 120156: [[107], 256], 120157: [[108], 256], 120158: [[109], 256], 120159: [[110], 256], 120160: [[111], 256], 120161: [[112], 256], 120162: [[113], 256], 120163: [[114], 256], 120164: [[115], 256], 120165: [[116], 256], 120166: [[117], 256], 120167: [[118], 256], 120168: [[119], 256], 120169: [[120], 256], 120170: [[121], 256], 120171: [[122], 256], 120172: [[65], 256], 120173: [[66], 256], 120174: [[67], 256], 120175: [[68], 256], 120176: [[69], 256], 120177: [[70], 256], 120178: [[71], 256], 120179: [[72], 256], 120180: [[73], 256], 120181: [[74], 256], 120182: [[75], 256], 120183: [[76], 256], 120184: [[77], 256], 120185: [[78], 256], 120186: [[79], 256], 120187: [[80], 256], 120188: [[81], 256], 120189: [[82], 256], 120190: [[83], 256], 120191: [[84], 256], 120192: [[85], 256], 120193: [[86], 256], 120194: [[87], 256], 120195: [[88], 256], 120196: [[89], 256], 120197: [[90], 256], 120198: [[97], 256], 120199: [[98], 256], 120200: [[99], 256], 120201: [[100], 256], 120202: [[101], 256], 120203: [[102], 256], 120204: [[103], 256], 120205: [[104], 256], 120206: [[105], 256], 120207: [[106], 256], 120208: [[107], 256], 120209: [[108], 256], 120210: [[109], 256], 120211: [[110], 256], 120212: [[111], 256], 120213: [[112], 256], 120214: [[113], 256], 120215: [[114], 256], 120216: [[115], 256], 120217: [[116], 256], 120218: [[117], 256], 120219: [[118], 256], 120220: [[119], 256], 120221: [[120], 256], 120222: [[121], 256], 120223: [[122], 256], 120224: [[65], 256], 120225: [[66], 256], 120226: [[67], 256], 120227: [[68], 256], 120228: [[69], 256], 120229: [[70], 256], 120230: [[71], 256], 120231: [[72], 256], 120232: [[73], 256], 120233: [[74], 256], 120234: [[75], 256], 120235: [[76], 256], 120236: [[77], 256], 120237: [[78], 256], 120238: [[79], 256], 120239: [[80], 256], 120240: [[81], 256], 120241: [[82], 256], 120242: [[83], 256], 120243: [[84], 256], 120244: [[85], 256], 120245: [[86], 256], 120246: [[87], 256], 120247: [[88], 256], 120248: [[89], 256], 120249: [[90], 256], 120250: [[97], 256], 120251: [[98], 256], 120252: [[99], 256], 120253: [[100], 256], 120254: [[101], 256], 120255: [[102], 256], 120256: [[103], 256], 120257: [[104], 256], 120258: [[105], 256], 120259: [[106], 256], 120260: [[107], 256], 120261: [[108], 256], 120262: [[109], 256], 120263: [[110], 256], 120264: [[111], 256], 120265: [[112], 256], 120266: [[113], 256], 120267: [[114], 256], 120268: [[115], 256], 120269: [[116], 256], 120270: [[117], 256], 120271: [[118], 256], 120272: [[119], 256], 120273: [[120], 256], 120274: [[121], 256], 120275: [[122], 256], 120276: [[65], 256], 120277: [[66], 256], 120278: [[67], 256], 120279: [[68], 256], 120280: [[69], 256], 120281: [[70], 256], 120282: [[71], 256], 120283: [[72], 256], 120284: [[73], 256], 120285: [[74], 256], 120286: [[75], 256], 120287: [[76], 256], 120288: [[77], 256], 120289: [[78], 256], 120290: [[79], 256], 120291: [[80], 256], 120292: [[81], 256], 120293: [[82], 256], 120294: [[83], 256], 120295: [[84], 256], 120296: [[85], 256], 120297: [[86], 256], 120298: [[87], 256], 120299: [[88], 256], 120300: [[89], 256], 120301: [[90], 256], 120302: [[97], 256], 120303: [[98], 256], 120304: [[99], 256], 120305: [[100], 256], 120306: [[101], 256], 120307: [[102], 256], 120308: [[103], 256], 120309: [[104], 256], 120310: [[105], 256], 120311: [[106], 256], 120312: [[107], 256], 120313: [[108], 256], 120314: [[109], 256], 120315: [[110], 256], 120316: [[111], 256], 120317: [[112], 256], 120318: [[113], 256], 120319: [[114], 256] },
      54784: { 120320: [[115], 256], 120321: [[116], 256], 120322: [[117], 256], 120323: [[118], 256], 120324: [[119], 256], 120325: [[120], 256], 120326: [[121], 256], 120327: [[122], 256], 120328: [[65], 256], 120329: [[66], 256], 120330: [[67], 256], 120331: [[68], 256], 120332: [[69], 256], 120333: [[70], 256], 120334: [[71], 256], 120335: [[72], 256], 120336: [[73], 256], 120337: [[74], 256], 120338: [[75], 256], 120339: [[76], 256], 120340: [[77], 256], 120341: [[78], 256], 120342: [[79], 256], 120343: [[80], 256], 120344: [[81], 256], 120345: [[82], 256], 120346: [[83], 256], 120347: [[84], 256], 120348: [[85], 256], 120349: [[86], 256], 120350: [[87], 256], 120351: [[88], 256], 120352: [[89], 256], 120353: [[90], 256], 120354: [[97], 256], 120355: [[98], 256], 120356: [[99], 256], 120357: [[100], 256], 120358: [[101], 256], 120359: [[102], 256], 120360: [[103], 256], 120361: [[104], 256], 120362: [[105], 256], 120363: [[106], 256], 120364: [[107], 256], 120365: [[108], 256], 120366: [[109], 256], 120367: [[110], 256], 120368: [[111], 256], 120369: [[112], 256], 120370: [[113], 256], 120371: [[114], 256], 120372: [[115], 256], 120373: [[116], 256], 120374: [[117], 256], 120375: [[118], 256], 120376: [[119], 256], 120377: [[120], 256], 120378: [[121], 256], 120379: [[122], 256], 120380: [[65], 256], 120381: [[66], 256], 120382: [[67], 256], 120383: [[68], 256], 120384: [[69], 256], 120385: [[70], 256], 120386: [[71], 256], 120387: [[72], 256], 120388: [[73], 256], 120389: [[74], 256], 120390: [[75], 256], 120391: [[76], 256], 120392: [[77], 256], 120393: [[78], 256], 120394: [[79], 256], 120395: [[80], 256], 120396: [[81], 256], 120397: [[82], 256], 120398: [[83], 256], 120399: [[84], 256], 120400: [[85], 256], 120401: [[86], 256], 120402: [[87], 256], 120403: [[88], 256], 120404: [[89], 256], 120405: [[90], 256], 120406: [[97], 256], 120407: [[98], 256], 120408: [[99], 256], 120409: [[100], 256], 120410: [[101], 256], 120411: [[102], 256], 120412: [[103], 256], 120413: [[104], 256], 120414: [[105], 256], 120415: [[106], 256], 120416: [[107], 256], 120417: [[108], 256], 120418: [[109], 256], 120419: [[110], 256], 120420: [[111], 256], 120421: [[112], 256], 120422: [[113], 256], 120423: [[114], 256], 120424: [[115], 256], 120425: [[116], 256], 120426: [[117], 256], 120427: [[118], 256], 120428: [[119], 256], 120429: [[120], 256], 120430: [[121], 256], 120431: [[122], 256], 120432: [[65], 256], 120433: [[66], 256], 120434: [[67], 256], 120435: [[68], 256], 120436: [[69], 256], 120437: [[70], 256], 120438: [[71], 256], 120439: [[72], 256], 120440: [[73], 256], 120441: [[74], 256], 120442: [[75], 256], 120443: [[76], 256], 120444: [[77], 256], 120445: [[78], 256], 120446: [[79], 256], 120447: [[80], 256], 120448: [[81], 256], 120449: [[82], 256], 120450: [[83], 256], 120451: [[84], 256], 120452: [[85], 256], 120453: [[86], 256], 120454: [[87], 256], 120455: [[88], 256], 120456: [[89], 256], 120457: [[90], 256], 120458: [[97], 256], 120459: [[98], 256], 120460: [[99], 256], 120461: [[100], 256], 120462: [[101], 256], 120463: [[102], 256], 120464: [[103], 256], 120465: [[104], 256], 120466: [[105], 256], 120467: [[106], 256], 120468: [[107], 256], 120469: [[108], 256], 120470: [[109], 256], 120471: [[110], 256], 120472: [[111], 256], 120473: [[112], 256], 120474: [[113], 256], 120475: [[114], 256], 120476: [[115], 256], 120477: [[116], 256], 120478: [[117], 256], 120479: [[118], 256], 120480: [[119], 256], 120481: [[120], 256], 120482: [[121], 256], 120483: [[122], 256], 120484: [[305], 256], 120485: [[567], 256], 120488: [[913], 256], 120489: [[914], 256], 120490: [[915], 256], 120491: [[916], 256], 120492: [[917], 256], 120493: [[918], 256], 120494: [[919], 256], 120495: [[920], 256], 120496: [[921], 256], 120497: [[922], 256], 120498: [[923], 256], 120499: [[924], 256], 120500: [[925], 256], 120501: [[926], 256], 120502: [[927], 256], 120503: [[928], 256], 120504: [[929], 256], 120505: [[1012], 256], 120506: [[931], 256], 120507: [[932], 256], 120508: [[933], 256], 120509: [[934], 256], 120510: [[935], 256], 120511: [[936], 256], 120512: [[937], 256], 120513: [[8711], 256], 120514: [[945], 256], 120515: [[946], 256], 120516: [[947], 256], 120517: [[948], 256], 120518: [[949], 256], 120519: [[950], 256], 120520: [[951], 256], 120521: [[952], 256], 120522: [[953], 256], 120523: [[954], 256], 120524: [[955], 256], 120525: [[956], 256], 120526: [[957], 256], 120527: [[958], 256], 120528: [[959], 256], 120529: [[960], 256], 120530: [[961], 256], 120531: [[962], 256], 120532: [[963], 256], 120533: [[964], 256], 120534: [[965], 256], 120535: [[966], 256], 120536: [[967], 256], 120537: [[968], 256], 120538: [[969], 256], 120539: [[8706], 256], 120540: [[1013], 256], 120541: [[977], 256], 120542: [[1008], 256], 120543: [[981], 256], 120544: [[1009], 256], 120545: [[982], 256], 120546: [[913], 256], 120547: [[914], 256], 120548: [[915], 256], 120549: [[916], 256], 120550: [[917], 256], 120551: [[918], 256], 120552: [[919], 256], 120553: [[920], 256], 120554: [[921], 256], 120555: [[922], 256], 120556: [[923], 256], 120557: [[924], 256], 120558: [[925], 256], 120559: [[926], 256], 120560: [[927], 256], 120561: [[928], 256], 120562: [[929], 256], 120563: [[1012], 256], 120564: [[931], 256], 120565: [[932], 256], 120566: [[933], 256], 120567: [[934], 256], 120568: [[935], 256], 120569: [[936], 256], 120570: [[937], 256], 120571: [[8711], 256], 120572: [[945], 256], 120573: [[946], 256], 120574: [[947], 256], 120575: [[948], 256] },
      55040: { 120576: [[949], 256], 120577: [[950], 256], 120578: [[951], 256], 120579: [[952], 256], 120580: [[953], 256], 120581: [[954], 256], 120582: [[955], 256], 120583: [[956], 256], 120584: [[957], 256], 120585: [[958], 256], 120586: [[959], 256], 120587: [[960], 256], 120588: [[961], 256], 120589: [[962], 256], 120590: [[963], 256], 120591: [[964], 256], 120592: [[965], 256], 120593: [[966], 256], 120594: [[967], 256], 120595: [[968], 256], 120596: [[969], 256], 120597: [[8706], 256], 120598: [[1013], 256], 120599: [[977], 256], 120600: [[1008], 256], 120601: [[981], 256], 120602: [[1009], 256], 120603: [[982], 256], 120604: [[913], 256], 120605: [[914], 256], 120606: [[915], 256], 120607: [[916], 256], 120608: [[917], 256], 120609: [[918], 256], 120610: [[919], 256], 120611: [[920], 256], 120612: [[921], 256], 120613: [[922], 256], 120614: [[923], 256], 120615: [[924], 256], 120616: [[925], 256], 120617: [[926], 256], 120618: [[927], 256], 120619: [[928], 256], 120620: [[929], 256], 120621: [[1012], 256], 120622: [[931], 256], 120623: [[932], 256], 120624: [[933], 256], 120625: [[934], 256], 120626: [[935], 256], 120627: [[936], 256], 120628: [[937], 256], 120629: [[8711], 256], 120630: [[945], 256], 120631: [[946], 256], 120632: [[947], 256], 120633: [[948], 256], 120634: [[949], 256], 120635: [[950], 256], 120636: [[951], 256], 120637: [[952], 256], 120638: [[953], 256], 120639: [[954], 256], 120640: [[955], 256], 120641: [[956], 256], 120642: [[957], 256], 120643: [[958], 256], 120644: [[959], 256], 120645: [[960], 256], 120646: [[961], 256], 120647: [[962], 256], 120648: [[963], 256], 120649: [[964], 256], 120650: [[965], 256], 120651: [[966], 256], 120652: [[967], 256], 120653: [[968], 256], 120654: [[969], 256], 120655: [[8706], 256], 120656: [[1013], 256], 120657: [[977], 256], 120658: [[1008], 256], 120659: [[981], 256], 120660: [[1009], 256], 120661: [[982], 256], 120662: [[913], 256], 120663: [[914], 256], 120664: [[915], 256], 120665: [[916], 256], 120666: [[917], 256], 120667: [[918], 256], 120668: [[919], 256], 120669: [[920], 256], 120670: [[921], 256], 120671: [[922], 256], 120672: [[923], 256], 120673: [[924], 256], 120674: [[925], 256], 120675: [[926], 256], 120676: [[927], 256], 120677: [[928], 256], 120678: [[929], 256], 120679: [[1012], 256], 120680: [[931], 256], 120681: [[932], 256], 120682: [[933], 256], 120683: [[934], 256], 120684: [[935], 256], 120685: [[936], 256], 120686: [[937], 256], 120687: [[8711], 256], 120688: [[945], 256], 120689: [[946], 256], 120690: [[947], 256], 120691: [[948], 256], 120692: [[949], 256], 120693: [[950], 256], 120694: [[951], 256], 120695: [[952], 256], 120696: [[953], 256], 120697: [[954], 256], 120698: [[955], 256], 120699: [[956], 256], 120700: [[957], 256], 120701: [[958], 256], 120702: [[959], 256], 120703: [[960], 256], 120704: [[961], 256], 120705: [[962], 256], 120706: [[963], 256], 120707: [[964], 256], 120708: [[965], 256], 120709: [[966], 256], 120710: [[967], 256], 120711: [[968], 256], 120712: [[969], 256], 120713: [[8706], 256], 120714: [[1013], 256], 120715: [[977], 256], 120716: [[1008], 256], 120717: [[981], 256], 120718: [[1009], 256], 120719: [[982], 256], 120720: [[913], 256], 120721: [[914], 256], 120722: [[915], 256], 120723: [[916], 256], 120724: [[917], 256], 120725: [[918], 256], 120726: [[919], 256], 120727: [[920], 256], 120728: [[921], 256], 120729: [[922], 256], 120730: [[923], 256], 120731: [[924], 256], 120732: [[925], 256], 120733: [[926], 256], 120734: [[927], 256], 120735: [[928], 256], 120736: [[929], 256], 120737: [[1012], 256], 120738: [[931], 256], 120739: [[932], 256], 120740: [[933], 256], 120741: [[934], 256], 120742: [[935], 256], 120743: [[936], 256], 120744: [[937], 256], 120745: [[8711], 256], 120746: [[945], 256], 120747: [[946], 256], 120748: [[947], 256], 120749: [[948], 256], 120750: [[949], 256], 120751: [[950], 256], 120752: [[951], 256], 120753: [[952], 256], 120754: [[953], 256], 120755: [[954], 256], 120756: [[955], 256], 120757: [[956], 256], 120758: [[957], 256], 120759: [[958], 256], 120760: [[959], 256], 120761: [[960], 256], 120762: [[961], 256], 120763: [[962], 256], 120764: [[963], 256], 120765: [[964], 256], 120766: [[965], 256], 120767: [[966], 256], 120768: [[967], 256], 120769: [[968], 256], 120770: [[969], 256], 120771: [[8706], 256], 120772: [[1013], 256], 120773: [[977], 256], 120774: [[1008], 256], 120775: [[981], 256], 120776: [[1009], 256], 120777: [[982], 256], 120778: [[988], 256], 120779: [[989], 256], 120782: [[48], 256], 120783: [[49], 256], 120784: [[50], 256], 120785: [[51], 256], 120786: [[52], 256], 120787: [[53], 256], 120788: [[54], 256], 120789: [[55], 256], 120790: [[56], 256], 120791: [[57], 256], 120792: [[48], 256], 120793: [[49], 256], 120794: [[50], 256], 120795: [[51], 256], 120796: [[52], 256], 120797: [[53], 256], 120798: [[54], 256], 120799: [[55], 256], 120800: [[56], 256], 120801: [[57], 256], 120802: [[48], 256], 120803: [[49], 256], 120804: [[50], 256], 120805: [[51], 256], 120806: [[52], 256], 120807: [[53], 256], 120808: [[54], 256], 120809: [[55], 256], 120810: [[56], 256], 120811: [[57], 256], 120812: [[48], 256], 120813: [[49], 256], 120814: [[50], 256], 120815: [[51], 256], 120816: [[52], 256], 120817: [[53], 256], 120818: [[54], 256], 120819: [[55], 256], 120820: [[56], 256], 120821: [[57], 256], 120822: [[48], 256], 120823: [[49], 256], 120824: [[50], 256], 120825: [[51], 256], 120826: [[52], 256], 120827: [[53], 256], 120828: [[54], 256], 120829: [[55], 256], 120830: [[56], 256], 120831: [[57], 256] },
      59392: { 125136: [, 220], 125137: [, 220], 125138: [, 220], 125139: [, 220], 125140: [, 220], 125141: [, 220], 125142: [, 220] },
      60928: { 126464: [[1575], 256], 126465: [[1576], 256], 126466: [[1580], 256], 126467: [[1583], 256], 126469: [[1608], 256], 126470: [[1586], 256], 126471: [[1581], 256], 126472: [[1591], 256], 126473: [[1610], 256], 126474: [[1603], 256], 126475: [[1604], 256], 126476: [[1605], 256], 126477: [[1606], 256], 126478: [[1587], 256], 126479: [[1593], 256], 126480: [[1601], 256], 126481: [[1589], 256], 126482: [[1602], 256], 126483: [[1585], 256], 126484: [[1588], 256], 126485: [[1578], 256], 126486: [[1579], 256], 126487: [[1582], 256], 126488: [[1584], 256], 126489: [[1590], 256], 126490: [[1592], 256], 126491: [[1594], 256], 126492: [[1646], 256], 126493: [[1722], 256], 126494: [[1697], 256], 126495: [[1647], 256], 126497: [[1576], 256], 126498: [[1580], 256], 126500: [[1607], 256], 126503: [[1581], 256], 126505: [[1610], 256], 126506: [[1603], 256], 126507: [[1604], 256], 126508: [[1605], 256], 126509: [[1606], 256], 126510: [[1587], 256], 126511: [[1593], 256], 126512: [[1601], 256], 126513: [[1589], 256], 126514: [[1602], 256], 126516: [[1588], 256], 126517: [[1578], 256], 126518: [[1579], 256], 126519: [[1582], 256], 126521: [[1590], 256], 126523: [[1594], 256], 126530: [[1580], 256], 126535: [[1581], 256], 126537: [[1610], 256], 126539: [[1604], 256], 126541: [[1606], 256], 126542: [[1587], 256], 126543: [[1593], 256], 126545: [[1589], 256], 126546: [[1602], 256], 126548: [[1588], 256], 126551: [[1582], 256], 126553: [[1590], 256], 126555: [[1594], 256], 126557: [[1722], 256], 126559: [[1647], 256], 126561: [[1576], 256], 126562: [[1580], 256], 126564: [[1607], 256], 126567: [[1581], 256], 126568: [[1591], 256], 126569: [[1610], 256], 126570: [[1603], 256], 126572: [[1605], 256], 126573: [[1606], 256], 126574: [[1587], 256], 126575: [[1593], 256], 126576: [[1601], 256], 126577: [[1589], 256], 126578: [[1602], 256], 126580: [[1588], 256], 126581: [[1578], 256], 126582: [[1579], 256], 126583: [[1582], 256], 126585: [[1590], 256], 126586: [[1592], 256], 126587: [[1594], 256], 126588: [[1646], 256], 126590: [[1697], 256], 126592: [[1575], 256], 126593: [[1576], 256], 126594: [[1580], 256], 126595: [[1583], 256], 126596: [[1607], 256], 126597: [[1608], 256], 126598: [[1586], 256], 126599: [[1581], 256], 126600: [[1591], 256], 126601: [[1610], 256], 126603: [[1604], 256], 126604: [[1605], 256], 126605: [[1606], 256], 126606: [[1587], 256], 126607: [[1593], 256], 126608: [[1601], 256], 126609: [[1589], 256], 126610: [[1602], 256], 126611: [[1585], 256], 126612: [[1588], 256], 126613: [[1578], 256], 126614: [[1579], 256], 126615: [[1582], 256], 126616: [[1584], 256], 126617: [[1590], 256], 126618: [[1592], 256], 126619: [[1594], 256], 126625: [[1576], 256], 126626: [[1580], 256], 126627: [[1583], 256], 126629: [[1608], 256], 126630: [[1586], 256], 126631: [[1581], 256], 126632: [[1591], 256], 126633: [[1610], 256], 126635: [[1604], 256], 126636: [[1605], 256], 126637: [[1606], 256], 126638: [[1587], 256], 126639: [[1593], 256], 126640: [[1601], 256], 126641: [[1589], 256], 126642: [[1602], 256], 126643: [[1585], 256], 126644: [[1588], 256], 126645: [[1578], 256], 126646: [[1579], 256], 126647: [[1582], 256], 126648: [[1584], 256], 126649: [[1590], 256], 126650: [[1592], 256], 126651: [[1594], 256] },
      61696: { 127232: [[48, 46], 256], 127233: [[48, 44], 256], 127234: [[49, 44], 256], 127235: [[50, 44], 256], 127236: [[51, 44], 256], 127237: [[52, 44], 256], 127238: [[53, 44], 256], 127239: [[54, 44], 256], 127240: [[55, 44], 256], 127241: [[56, 44], 256], 127242: [[57, 44], 256], 127248: [[40, 65, 41], 256], 127249: [[40, 66, 41], 256], 127250: [[40, 67, 41], 256], 127251: [[40, 68, 41], 256], 127252: [[40, 69, 41], 256], 127253: [[40, 70, 41], 256], 127254: [[40, 71, 41], 256], 127255: [[40, 72, 41], 256], 127256: [[40, 73, 41], 256], 127257: [[40, 74, 41], 256], 127258: [[40, 75, 41], 256], 127259: [[40, 76, 41], 256], 127260: [[40, 77, 41], 256], 127261: [[40, 78, 41], 256], 127262: [[40, 79, 41], 256], 127263: [[40, 80, 41], 256], 127264: [[40, 81, 41], 256], 127265: [[40, 82, 41], 256], 127266: [[40, 83, 41], 256], 127267: [[40, 84, 41], 256], 127268: [[40, 85, 41], 256], 127269: [[40, 86, 41], 256], 127270: [[40, 87, 41], 256], 127271: [[40, 88, 41], 256], 127272: [[40, 89, 41], 256], 127273: [[40, 90, 41], 256], 127274: [[12308, 83, 12309], 256], 127275: [[67], 256], 127276: [[82], 256], 127277: [[67, 68], 256], 127278: [[87, 90], 256], 127280: [[65], 256], 127281: [[66], 256], 127282: [[67], 256], 127283: [[68], 256], 127284: [[69], 256], 127285: [[70], 256], 127286: [[71], 256], 127287: [[72], 256], 127288: [[73], 256], 127289: [[74], 256], 127290: [[75], 256], 127291: [[76], 256], 127292: [[77], 256], 127293: [[78], 256], 127294: [[79], 256], 127295: [[80], 256], 127296: [[81], 256], 127297: [[82], 256], 127298: [[83], 256], 127299: [[84], 256], 127300: [[85], 256], 127301: [[86], 256], 127302: [[87], 256], 127303: [[88], 256], 127304: [[89], 256], 127305: [[90], 256], 127306: [[72, 86], 256], 127307: [[77, 86], 256], 127308: [[83, 68], 256], 127309: [[83, 83], 256], 127310: [[80, 80, 86], 256], 127311: [[87, 67], 256], 127338: [[77, 67], 256], 127339: [[77, 68], 256], 127376: [[68, 74], 256] },
      61952: { 127488: [[12411, 12363], 256], 127489: [[12467, 12467], 256], 127490: [[12469], 256], 127504: [[25163], 256], 127505: [[23383], 256], 127506: [[21452], 256], 127507: [[12487], 256], 127508: [[20108], 256], 127509: [[22810], 256], 127510: [[35299], 256], 127511: [[22825], 256], 127512: [[20132], 256], 127513: [[26144], 256], 127514: [[28961], 256], 127515: [[26009], 256], 127516: [[21069], 256], 127517: [[24460], 256], 127518: [[20877], 256], 127519: [[26032], 256], 127520: [[21021], 256], 127521: [[32066], 256], 127522: [[29983], 256], 127523: [[36009], 256], 127524: [[22768], 256], 127525: [[21561], 256], 127526: [[28436], 256], 127527: [[25237], 256], 127528: [[25429], 256], 127529: [[19968], 256], 127530: [[19977], 256], 127531: [[36938], 256], 127532: [[24038], 256], 127533: [[20013], 256], 127534: [[21491], 256], 127535: [[25351], 256], 127536: [[36208], 256], 127537: [[25171], 256], 127538: [[31105], 256], 127539: [[31354], 256], 127540: [[21512], 256], 127541: [[28288], 256], 127542: [[26377], 256], 127543: [[26376], 256], 127544: [[30003], 256], 127545: [[21106], 256], 127546: [[21942], 256], 127552: [[12308, 26412, 12309], 256], 127553: [[12308, 19977, 12309], 256], 127554: [[12308, 20108, 12309], 256], 127555: [[12308, 23433, 12309], 256], 127556: [[12308, 28857, 12309], 256], 127557: [[12308, 25171, 12309], 256], 127558: [[12308, 30423, 12309], 256], 127559: [[12308, 21213, 12309], 256], 127560: [[12308, 25943, 12309], 256], 127568: [[24471], 256], 127569: [[21487], 256] },
      63488: { 194560: [[20029]], 194561: [[20024]], 194562: [[20033]], 194563: [[131362]], 194564: [[20320]], 194565: [[20398]], 194566: [[20411]], 194567: [[20482]], 194568: [[20602]], 194569: [[20633]], 194570: [[20711]], 194571: [[20687]], 194572: [[13470]], 194573: [[132666]], 194574: [[20813]], 194575: [[20820]], 194576: [[20836]], 194577: [[20855]], 194578: [[132380]], 194579: [[13497]], 194580: [[20839]], 194581: [[20877]], 194582: [[132427]], 194583: [[20887]], 194584: [[20900]], 194585: [[20172]], 194586: [[20908]], 194587: [[20917]], 194588: [[168415]], 194589: [[20981]], 194590: [[20995]], 194591: [[13535]], 194592: [[21051]], 194593: [[21062]], 194594: [[21106]], 194595: [[21111]], 194596: [[13589]], 194597: [[21191]], 194598: [[21193]], 194599: [[21220]], 194600: [[21242]], 194601: [[21253]], 194602: [[21254]], 194603: [[21271]], 194604: [[21321]], 194605: [[21329]], 194606: [[21338]], 194607: [[21363]], 194608: [[21373]], 194609: [[21375]], 194610: [[21375]], 194611: [[21375]], 194612: [[133676]], 194613: [[28784]], 194614: [[21450]], 194615: [[21471]], 194616: [[133987]], 194617: [[21483]], 194618: [[21489]], 194619: [[21510]], 194620: [[21662]], 194621: [[21560]], 194622: [[21576]], 194623: [[21608]], 194624: [[21666]], 194625: [[21750]], 194626: [[21776]], 194627: [[21843]], 194628: [[21859]], 194629: [[21892]], 194630: [[21892]], 194631: [[21913]], 194632: [[21931]], 194633: [[21939]], 194634: [[21954]], 194635: [[22294]], 194636: [[22022]], 194637: [[22295]], 194638: [[22097]], 194639: [[22132]], 194640: [[20999]], 194641: [[22766]], 194642: [[22478]], 194643: [[22516]], 194644: [[22541]], 194645: [[22411]], 194646: [[22578]], 194647: [[22577]], 194648: [[22700]], 194649: [[136420]], 194650: [[22770]], 194651: [[22775]], 194652: [[22790]], 194653: [[22810]], 194654: [[22818]], 194655: [[22882]], 194656: [[136872]], 194657: [[136938]], 194658: [[23020]], 194659: [[23067]], 194660: [[23079]], 194661: [[23e3]], 194662: [[23142]], 194663: [[14062]], 194664: [[14076]], 194665: [[23304]], 194666: [[23358]], 194667: [[23358]], 194668: [[137672]], 194669: [[23491]], 194670: [[23512]], 194671: [[23527]], 194672: [[23539]], 194673: [[138008]], 194674: [[23551]], 194675: [[23558]], 194676: [[24403]], 194677: [[23586]], 194678: [[14209]], 194679: [[23648]], 194680: [[23662]], 194681: [[23744]], 194682: [[23693]], 194683: [[138724]], 194684: [[23875]], 194685: [[138726]], 194686: [[23918]], 194687: [[23915]], 194688: [[23932]], 194689: [[24033]], 194690: [[24034]], 194691: [[14383]], 194692: [[24061]], 194693: [[24104]], 194694: [[24125]], 194695: [[24169]], 194696: [[14434]], 194697: [[139651]], 194698: [[14460]], 194699: [[24240]], 194700: [[24243]], 194701: [[24246]], 194702: [[24266]], 194703: [[172946]], 194704: [[24318]], 194705: [[140081]], 194706: [[140081]], 194707: [[33281]], 194708: [[24354]], 194709: [[24354]], 194710: [[14535]], 194711: [[144056]], 194712: [[156122]], 194713: [[24418]], 194714: [[24427]], 194715: [[14563]], 194716: [[24474]], 194717: [[24525]], 194718: [[24535]], 194719: [[24569]], 194720: [[24705]], 194721: [[14650]], 194722: [[14620]], 194723: [[24724]], 194724: [[141012]], 194725: [[24775]], 194726: [[24904]], 194727: [[24908]], 194728: [[24910]], 194729: [[24908]], 194730: [[24954]], 194731: [[24974]], 194732: [[25010]], 194733: [[24996]], 194734: [[25007]], 194735: [[25054]], 194736: [[25074]], 194737: [[25078]], 194738: [[25104]], 194739: [[25115]], 194740: [[25181]], 194741: [[25265]], 194742: [[25300]], 194743: [[25424]], 194744: [[142092]], 194745: [[25405]], 194746: [[25340]], 194747: [[25448]], 194748: [[25475]], 194749: [[25572]], 194750: [[142321]], 194751: [[25634]], 194752: [[25541]], 194753: [[25513]], 194754: [[14894]], 194755: [[25705]], 194756: [[25726]], 194757: [[25757]], 194758: [[25719]], 194759: [[14956]], 194760: [[25935]], 194761: [[25964]], 194762: [[143370]], 194763: [[26083]], 194764: [[26360]], 194765: [[26185]], 194766: [[15129]], 194767: [[26257]], 194768: [[15112]], 194769: [[15076]], 194770: [[20882]], 194771: [[20885]], 194772: [[26368]], 194773: [[26268]], 194774: [[32941]], 194775: [[17369]], 194776: [[26391]], 194777: [[26395]], 194778: [[26401]], 194779: [[26462]], 194780: [[26451]], 194781: [[144323]], 194782: [[15177]], 194783: [[26618]], 194784: [[26501]], 194785: [[26706]], 194786: [[26757]], 194787: [[144493]], 194788: [[26766]], 194789: [[26655]], 194790: [[26900]], 194791: [[15261]], 194792: [[26946]], 194793: [[27043]], 194794: [[27114]], 194795: [[27304]], 194796: [[145059]], 194797: [[27355]], 194798: [[15384]], 194799: [[27425]], 194800: [[145575]], 194801: [[27476]], 194802: [[15438]], 194803: [[27506]], 194804: [[27551]], 194805: [[27578]], 194806: [[27579]], 194807: [[146061]], 194808: [[138507]], 194809: [[146170]], 194810: [[27726]], 194811: [[146620]], 194812: [[27839]], 194813: [[27853]], 194814: [[27751]], 194815: [[27926]] },
      63744: { 63744: [[35912]], 63745: [[26356]], 63746: [[36554]], 63747: [[36040]], 63748: [[28369]], 63749: [[20018]], 63750: [[21477]], 63751: [[40860]], 63752: [[40860]], 63753: [[22865]], 63754: [[37329]], 63755: [[21895]], 63756: [[22856]], 63757: [[25078]], 63758: [[30313]], 63759: [[32645]], 63760: [[34367]], 63761: [[34746]], 63762: [[35064]], 63763: [[37007]], 63764: [[27138]], 63765: [[27931]], 63766: [[28889]], 63767: [[29662]], 63768: [[33853]], 63769: [[37226]], 63770: [[39409]], 63771: [[20098]], 63772: [[21365]], 63773: [[27396]], 63774: [[29211]], 63775: [[34349]], 63776: [[40478]], 63777: [[23888]], 63778: [[28651]], 63779: [[34253]], 63780: [[35172]], 63781: [[25289]], 63782: [[33240]], 63783: [[34847]], 63784: [[24266]], 63785: [[26391]], 63786: [[28010]], 63787: [[29436]], 63788: [[37070]], 63789: [[20358]], 63790: [[20919]], 63791: [[21214]], 63792: [[25796]], 63793: [[27347]], 63794: [[29200]], 63795: [[30439]], 63796: [[32769]], 63797: [[34310]], 63798: [[34396]], 63799: [[36335]], 63800: [[38706]], 63801: [[39791]], 63802: [[40442]], 63803: [[30860]], 63804: [[31103]], 63805: [[32160]], 63806: [[33737]], 63807: [[37636]], 63808: [[40575]], 63809: [[35542]], 63810: [[22751]], 63811: [[24324]], 63812: [[31840]], 63813: [[32894]], 63814: [[29282]], 63815: [[30922]], 63816: [[36034]], 63817: [[38647]], 63818: [[22744]], 63819: [[23650]], 63820: [[27155]], 63821: [[28122]], 63822: [[28431]], 63823: [[32047]], 63824: [[32311]], 63825: [[38475]], 63826: [[21202]], 63827: [[32907]], 63828: [[20956]], 63829: [[20940]], 63830: [[31260]], 63831: [[32190]], 63832: [[33777]], 63833: [[38517]], 63834: [[35712]], 63835: [[25295]], 63836: [[27138]], 63837: [[35582]], 63838: [[20025]], 63839: [[23527]], 63840: [[24594]], 63841: [[29575]], 63842: [[30064]], 63843: [[21271]], 63844: [[30971]], 63845: [[20415]], 63846: [[24489]], 63847: [[19981]], 63848: [[27852]], 63849: [[25976]], 63850: [[32034]], 63851: [[21443]], 63852: [[22622]], 63853: [[30465]], 63854: [[33865]], 63855: [[35498]], 63856: [[27578]], 63857: [[36784]], 63858: [[27784]], 63859: [[25342]], 63860: [[33509]], 63861: [[25504]], 63862: [[30053]], 63863: [[20142]], 63864: [[20841]], 63865: [[20937]], 63866: [[26753]], 63867: [[31975]], 63868: [[33391]], 63869: [[35538]], 63870: [[37327]], 63871: [[21237]], 63872: [[21570]], 63873: [[22899]], 63874: [[24300]], 63875: [[26053]], 63876: [[28670]], 63877: [[31018]], 63878: [[38317]], 63879: [[39530]], 63880: [[40599]], 63881: [[40654]], 63882: [[21147]], 63883: [[26310]], 63884: [[27511]], 63885: [[36706]], 63886: [[24180]], 63887: [[24976]], 63888: [[25088]], 63889: [[25754]], 63890: [[28451]], 63891: [[29001]], 63892: [[29833]], 63893: [[31178]], 63894: [[32244]], 63895: [[32879]], 63896: [[36646]], 63897: [[34030]], 63898: [[36899]], 63899: [[37706]], 63900: [[21015]], 63901: [[21155]], 63902: [[21693]], 63903: [[28872]], 63904: [[35010]], 63905: [[35498]], 63906: [[24265]], 63907: [[24565]], 63908: [[25467]], 63909: [[27566]], 63910: [[31806]], 63911: [[29557]], 63912: [[20196]], 63913: [[22265]], 63914: [[23527]], 63915: [[23994]], 63916: [[24604]], 63917: [[29618]], 63918: [[29801]], 63919: [[32666]], 63920: [[32838]], 63921: [[37428]], 63922: [[38646]], 63923: [[38728]], 63924: [[38936]], 63925: [[20363]], 63926: [[31150]], 63927: [[37300]], 63928: [[38584]], 63929: [[24801]], 63930: [[20102]], 63931: [[20698]], 63932: [[23534]], 63933: [[23615]], 63934: [[26009]], 63935: [[27138]], 63936: [[29134]], 63937: [[30274]], 63938: [[34044]], 63939: [[36988]], 63940: [[40845]], 63941: [[26248]], 63942: [[38446]], 63943: [[21129]], 63944: [[26491]], 63945: [[26611]], 63946: [[27969]], 63947: [[28316]], 63948: [[29705]], 63949: [[30041]], 63950: [[30827]], 63951: [[32016]], 63952: [[39006]], 63953: [[20845]], 63954: [[25134]], 63955: [[38520]], 63956: [[20523]], 63957: [[23833]], 63958: [[28138]], 63959: [[36650]], 63960: [[24459]], 63961: [[24900]], 63962: [[26647]], 63963: [[29575]], 63964: [[38534]], 63965: [[21033]], 63966: [[21519]], 63967: [[23653]], 63968: [[26131]], 63969: [[26446]], 63970: [[26792]], 63971: [[27877]], 63972: [[29702]], 63973: [[30178]], 63974: [[32633]], 63975: [[35023]], 63976: [[35041]], 63977: [[37324]], 63978: [[38626]], 63979: [[21311]], 63980: [[28346]], 63981: [[21533]], 63982: [[29136]], 63983: [[29848]], 63984: [[34298]], 63985: [[38563]], 63986: [[40023]], 63987: [[40607]], 63988: [[26519]], 63989: [[28107]], 63990: [[33256]], 63991: [[31435]], 63992: [[31520]], 63993: [[31890]], 63994: [[29376]], 63995: [[28825]], 63996: [[35672]], 63997: [[20160]], 63998: [[33590]], 63999: [[21050]], 194816: [[27966]], 194817: [[28023]], 194818: [[27969]], 194819: [[28009]], 194820: [[28024]], 194821: [[28037]], 194822: [[146718]], 194823: [[27956]], 194824: [[28207]], 194825: [[28270]], 194826: [[15667]], 194827: [[28363]], 194828: [[28359]], 194829: [[147153]], 194830: [[28153]], 194831: [[28526]], 194832: [[147294]], 194833: [[147342]], 194834: [[28614]], 194835: [[28729]], 194836: [[28702]], 194837: [[28699]], 194838: [[15766]], 194839: [[28746]], 194840: [[28797]], 194841: [[28791]], 194842: [[28845]], 194843: [[132389]], 194844: [[28997]], 194845: [[148067]], 194846: [[29084]], 194847: [[148395]], 194848: [[29224]], 194849: [[29237]], 194850: [[29264]], 194851: [[149e3]], 194852: [[29312]], 194853: [[29333]], 194854: [[149301]], 194855: [[149524]], 194856: [[29562]], 194857: [[29579]], 194858: [[16044]], 194859: [[29605]], 194860: [[16056]], 194861: [[16056]], 194862: [[29767]], 194863: [[29788]], 194864: [[29809]], 194865: [[29829]], 194866: [[29898]], 194867: [[16155]], 194868: [[29988]], 194869: [[150582]], 194870: [[30014]], 194871: [[150674]], 194872: [[30064]], 194873: [[139679]], 194874: [[30224]], 194875: [[151457]], 194876: [[151480]], 194877: [[151620]], 194878: [[16380]], 194879: [[16392]], 194880: [[30452]], 194881: [[151795]], 194882: [[151794]], 194883: [[151833]], 194884: [[151859]], 194885: [[30494]], 194886: [[30495]], 194887: [[30495]], 194888: [[30538]], 194889: [[16441]], 194890: [[30603]], 194891: [[16454]], 194892: [[16534]], 194893: [[152605]], 194894: [[30798]], 194895: [[30860]], 194896: [[30924]], 194897: [[16611]], 194898: [[153126]], 194899: [[31062]], 194900: [[153242]], 194901: [[153285]], 194902: [[31119]], 194903: [[31211]], 194904: [[16687]], 194905: [[31296]], 194906: [[31306]], 194907: [[31311]], 194908: [[153980]], 194909: [[154279]], 194910: [[154279]], 194911: [[31470]], 194912: [[16898]], 194913: [[154539]], 194914: [[31686]], 194915: [[31689]], 194916: [[16935]], 194917: [[154752]], 194918: [[31954]], 194919: [[17056]], 194920: [[31976]], 194921: [[31971]], 194922: [[32e3]], 194923: [[155526]], 194924: [[32099]], 194925: [[17153]], 194926: [[32199]], 194927: [[32258]], 194928: [[32325]], 194929: [[17204]], 194930: [[156200]], 194931: [[156231]], 194932: [[17241]], 194933: [[156377]], 194934: [[32634]], 194935: [[156478]], 194936: [[32661]], 194937: [[32762]], 194938: [[32773]], 194939: [[156890]], 194940: [[156963]], 194941: [[32864]], 194942: [[157096]], 194943: [[32880]], 194944: [[144223]], 194945: [[17365]], 194946: [[32946]], 194947: [[33027]], 194948: [[17419]], 194949: [[33086]], 194950: [[23221]], 194951: [[157607]], 194952: [[157621]], 194953: [[144275]], 194954: [[144284]], 194955: [[33281]], 194956: [[33284]], 194957: [[36766]], 194958: [[17515]], 194959: [[33425]], 194960: [[33419]], 194961: [[33437]], 194962: [[21171]], 194963: [[33457]], 194964: [[33459]], 194965: [[33469]], 194966: [[33510]], 194967: [[158524]], 194968: [[33509]], 194969: [[33565]], 194970: [[33635]], 194971: [[33709]], 194972: [[33571]], 194973: [[33725]], 194974: [[33767]], 194975: [[33879]], 194976: [[33619]], 194977: [[33738]], 194978: [[33740]], 194979: [[33756]], 194980: [[158774]], 194981: [[159083]], 194982: [[158933]], 194983: [[17707]], 194984: [[34033]], 194985: [[34035]], 194986: [[34070]], 194987: [[160714]], 194988: [[34148]], 194989: [[159532]], 194990: [[17757]], 194991: [[17761]], 194992: [[159665]], 194993: [[159954]], 194994: [[17771]], 194995: [[34384]], 194996: [[34396]], 194997: [[34407]], 194998: [[34409]], 194999: [[34473]], 195e3: [[34440]], 195001: [[34574]], 195002: [[34530]], 195003: [[34681]], 195004: [[34600]], 195005: [[34667]], 195006: [[34694]], 195007: [[17879]], 195008: [[34785]], 195009: [[34817]], 195010: [[17913]], 195011: [[34912]], 195012: [[34915]], 195013: [[161383]], 195014: [[35031]], 195015: [[35038]], 195016: [[17973]], 195017: [[35066]], 195018: [[13499]], 195019: [[161966]], 195020: [[162150]], 195021: [[18110]], 195022: [[18119]], 195023: [[35488]], 195024: [[35565]], 195025: [[35722]], 195026: [[35925]], 195027: [[162984]], 195028: [[36011]], 195029: [[36033]], 195030: [[36123]], 195031: [[36215]], 195032: [[163631]], 195033: [[133124]], 195034: [[36299]], 195035: [[36284]], 195036: [[36336]], 195037: [[133342]], 195038: [[36564]], 195039: [[36664]], 195040: [[165330]], 195041: [[165357]], 195042: [[37012]], 195043: [[37105]], 195044: [[37137]], 195045: [[165678]], 195046: [[37147]], 195047: [[37432]], 195048: [[37591]], 195049: [[37592]], 195050: [[37500]], 195051: [[37881]], 195052: [[37909]], 195053: [[166906]], 195054: [[38283]], 195055: [[18837]], 195056: [[38327]], 195057: [[167287]], 195058: [[18918]], 195059: [[38595]], 195060: [[23986]], 195061: [[38691]], 195062: [[168261]], 195063: [[168474]], 195064: [[19054]], 195065: [[19062]], 195066: [[38880]], 195067: [[168970]], 195068: [[19122]], 195069: [[169110]], 195070: [[38923]], 195071: [[38923]] },
      64e3: { 64e3: [[20999]], 64001: [[24230]], 64002: [[25299]], 64003: [[31958]], 64004: [[23429]], 64005: [[27934]], 64006: [[26292]], 64007: [[36667]], 64008: [[34892]], 64009: [[38477]], 64010: [[35211]], 64011: [[24275]], 64012: [[20800]], 64013: [[21952]], 64016: [[22618]], 64018: [[26228]], 64021: [[20958]], 64022: [[29482]], 64023: [[30410]], 64024: [[31036]], 64025: [[31070]], 64026: [[31077]], 64027: [[31119]], 64028: [[38742]], 64029: [[31934]], 64030: [[32701]], 64032: [[34322]], 64034: [[35576]], 64037: [[36920]], 64038: [[37117]], 64042: [[39151]], 64043: [[39164]], 64044: [[39208]], 64045: [[40372]], 64046: [[37086]], 64047: [[38583]], 64048: [[20398]], 64049: [[20711]], 64050: [[20813]], 64051: [[21193]], 64052: [[21220]], 64053: [[21329]], 64054: [[21917]], 64055: [[22022]], 64056: [[22120]], 64057: [[22592]], 64058: [[22696]], 64059: [[23652]], 64060: [[23662]], 64061: [[24724]], 64062: [[24936]], 64063: [[24974]], 64064: [[25074]], 64065: [[25935]], 64066: [[26082]], 64067: [[26257]], 64068: [[26757]], 64069: [[28023]], 64070: [[28186]], 64071: [[28450]], 64072: [[29038]], 64073: [[29227]], 64074: [[29730]], 64075: [[30865]], 64076: [[31038]], 64077: [[31049]], 64078: [[31048]], 64079: [[31056]], 64080: [[31062]], 64081: [[31069]], 64082: [[31117]], 64083: [[31118]], 64084: [[31296]], 64085: [[31361]], 64086: [[31680]], 64087: [[32244]], 64088: [[32265]], 64089: [[32321]], 64090: [[32626]], 64091: [[32773]], 64092: [[33261]], 64093: [[33401]], 64094: [[33401]], 64095: [[33879]], 64096: [[35088]], 64097: [[35222]], 64098: [[35585]], 64099: [[35641]], 64100: [[36051]], 64101: [[36104]], 64102: [[36790]], 64103: [[36920]], 64104: [[38627]], 64105: [[38911]], 64106: [[38971]], 64107: [[24693]], 64108: [[148206]], 64109: [[33304]], 64112: [[20006]], 64113: [[20917]], 64114: [[20840]], 64115: [[20352]], 64116: [[20805]], 64117: [[20864]], 64118: [[21191]], 64119: [[21242]], 64120: [[21917]], 64121: [[21845]], 64122: [[21913]], 64123: [[21986]], 64124: [[22618]], 64125: [[22707]], 64126: [[22852]], 64127: [[22868]], 64128: [[23138]], 64129: [[23336]], 64130: [[24274]], 64131: [[24281]], 64132: [[24425]], 64133: [[24493]], 64134: [[24792]], 64135: [[24910]], 64136: [[24840]], 64137: [[24974]], 64138: [[24928]], 64139: [[25074]], 64140: [[25140]], 64141: [[25540]], 64142: [[25628]], 64143: [[25682]], 64144: [[25942]], 64145: [[26228]], 64146: [[26391]], 64147: [[26395]], 64148: [[26454]], 64149: [[27513]], 64150: [[27578]], 64151: [[27969]], 64152: [[28379]], 64153: [[28363]], 64154: [[28450]], 64155: [[28702]], 64156: [[29038]], 64157: [[30631]], 64158: [[29237]], 64159: [[29359]], 64160: [[29482]], 64161: [[29809]], 64162: [[29958]], 64163: [[30011]], 64164: [[30237]], 64165: [[30239]], 64166: [[30410]], 64167: [[30427]], 64168: [[30452]], 64169: [[30538]], 64170: [[30528]], 64171: [[30924]], 64172: [[31409]], 64173: [[31680]], 64174: [[31867]], 64175: [[32091]], 64176: [[32244]], 64177: [[32574]], 64178: [[32773]], 64179: [[33618]], 64180: [[33775]], 64181: [[34681]], 64182: [[35137]], 64183: [[35206]], 64184: [[35222]], 64185: [[35519]], 64186: [[35576]], 64187: [[35531]], 64188: [[35585]], 64189: [[35582]], 64190: [[35565]], 64191: [[35641]], 64192: [[35722]], 64193: [[36104]], 64194: [[36664]], 64195: [[36978]], 64196: [[37273]], 64197: [[37494]], 64198: [[38524]], 64199: [[38627]], 64200: [[38742]], 64201: [[38875]], 64202: [[38911]], 64203: [[38923]], 64204: [[38971]], 64205: [[39698]], 64206: [[40860]], 64207: [[141386]], 64208: [[141380]], 64209: [[144341]], 64210: [[15261]], 64211: [[16408]], 64212: [[16441]], 64213: [[152137]], 64214: [[154832]], 64215: [[163539]], 64216: [[40771]], 64217: [[40846]], 195072: [[38953]], 195073: [[169398]], 195074: [[39138]], 195075: [[19251]], 195076: [[39209]], 195077: [[39335]], 195078: [[39362]], 195079: [[39422]], 195080: [[19406]], 195081: [[170800]], 195082: [[39698]], 195083: [[4e4]], 195084: [[40189]], 195085: [[19662]], 195086: [[19693]], 195087: [[40295]], 195088: [[172238]], 195089: [[19704]], 195090: [[172293]], 195091: [[172558]], 195092: [[172689]], 195093: [[40635]], 195094: [[19798]], 195095: [[40697]], 195096: [[40702]], 195097: [[40709]], 195098: [[40719]], 195099: [[40726]], 195100: [[40763]], 195101: [[173568]] },
      64256: { 64256: [[102, 102], 256], 64257: [[102, 105], 256], 64258: [[102, 108], 256], 64259: [[102, 102, 105], 256], 64260: [[102, 102, 108], 256], 64261: [[383, 116], 256], 64262: [[115, 116], 256], 64275: [[1396, 1398], 256], 64276: [[1396, 1381], 256], 64277: [[1396, 1387], 256], 64278: [[1406, 1398], 256], 64279: [[1396, 1389], 256], 64285: [[1497, 1460], 512], 64286: [, 26], 64287: [[1522, 1463], 512], 64288: [[1506], 256], 64289: [[1488], 256], 64290: [[1491], 256], 64291: [[1492], 256], 64292: [[1499], 256], 64293: [[1500], 256], 64294: [[1501], 256], 64295: [[1512], 256], 64296: [[1514], 256], 64297: [[43], 256], 64298: [[1513, 1473], 512], 64299: [[1513, 1474], 512], 64300: [[64329, 1473], 512], 64301: [[64329, 1474], 512], 64302: [[1488, 1463], 512], 64303: [[1488, 1464], 512], 64304: [[1488, 1468], 512], 64305: [[1489, 1468], 512], 64306: [[1490, 1468], 512], 64307: [[1491, 1468], 512], 64308: [[1492, 1468], 512], 64309: [[1493, 1468], 512], 64310: [[1494, 1468], 512], 64312: [[1496, 1468], 512], 64313: [[1497, 1468], 512], 64314: [[1498, 1468], 512], 64315: [[1499, 1468], 512], 64316: [[1500, 1468], 512], 64318: [[1502, 1468], 512], 64320: [[1504, 1468], 512], 64321: [[1505, 1468], 512], 64323: [[1507, 1468], 512], 64324: [[1508, 1468], 512], 64326: [[1510, 1468], 512], 64327: [[1511, 1468], 512], 64328: [[1512, 1468], 512], 64329: [[1513, 1468], 512], 64330: [[1514, 1468], 512], 64331: [[1493, 1465], 512], 64332: [[1489, 1471], 512], 64333: [[1499, 1471], 512], 64334: [[1508, 1471], 512], 64335: [[1488, 1500], 256], 64336: [[1649], 256], 64337: [[1649], 256], 64338: [[1659], 256], 64339: [[1659], 256], 64340: [[1659], 256], 64341: [[1659], 256], 64342: [[1662], 256], 64343: [[1662], 256], 64344: [[1662], 256], 64345: [[1662], 256], 64346: [[1664], 256], 64347: [[1664], 256], 64348: [[1664], 256], 64349: [[1664], 256], 64350: [[1658], 256], 64351: [[1658], 256], 64352: [[1658], 256], 64353: [[1658], 256], 64354: [[1663], 256], 64355: [[1663], 256], 64356: [[1663], 256], 64357: [[1663], 256], 64358: [[1657], 256], 64359: [[1657], 256], 64360: [[1657], 256], 64361: [[1657], 256], 64362: [[1700], 256], 64363: [[1700], 256], 64364: [[1700], 256], 64365: [[1700], 256], 64366: [[1702], 256], 64367: [[1702], 256], 64368: [[1702], 256], 64369: [[1702], 256], 64370: [[1668], 256], 64371: [[1668], 256], 64372: [[1668], 256], 64373: [[1668], 256], 64374: [[1667], 256], 64375: [[1667], 256], 64376: [[1667], 256], 64377: [[1667], 256], 64378: [[1670], 256], 64379: [[1670], 256], 64380: [[1670], 256], 64381: [[1670], 256], 64382: [[1671], 256], 64383: [[1671], 256], 64384: [[1671], 256], 64385: [[1671], 256], 64386: [[1677], 256], 64387: [[1677], 256], 64388: [[1676], 256], 64389: [[1676], 256], 64390: [[1678], 256], 64391: [[1678], 256], 64392: [[1672], 256], 64393: [[1672], 256], 64394: [[1688], 256], 64395: [[1688], 256], 64396: [[1681], 256], 64397: [[1681], 256], 64398: [[1705], 256], 64399: [[1705], 256], 64400: [[1705], 256], 64401: [[1705], 256], 64402: [[1711], 256], 64403: [[1711], 256], 64404: [[1711], 256], 64405: [[1711], 256], 64406: [[1715], 256], 64407: [[1715], 256], 64408: [[1715], 256], 64409: [[1715], 256], 64410: [[1713], 256], 64411: [[1713], 256], 64412: [[1713], 256], 64413: [[1713], 256], 64414: [[1722], 256], 64415: [[1722], 256], 64416: [[1723], 256], 64417: [[1723], 256], 64418: [[1723], 256], 64419: [[1723], 256], 64420: [[1728], 256], 64421: [[1728], 256], 64422: [[1729], 256], 64423: [[1729], 256], 64424: [[1729], 256], 64425: [[1729], 256], 64426: [[1726], 256], 64427: [[1726], 256], 64428: [[1726], 256], 64429: [[1726], 256], 64430: [[1746], 256], 64431: [[1746], 256], 64432: [[1747], 256], 64433: [[1747], 256], 64467: [[1709], 256], 64468: [[1709], 256], 64469: [[1709], 256], 64470: [[1709], 256], 64471: [[1735], 256], 64472: [[1735], 256], 64473: [[1734], 256], 64474: [[1734], 256], 64475: [[1736], 256], 64476: [[1736], 256], 64477: [[1655], 256], 64478: [[1739], 256], 64479: [[1739], 256], 64480: [[1733], 256], 64481: [[1733], 256], 64482: [[1737], 256], 64483: [[1737], 256], 64484: [[1744], 256], 64485: [[1744], 256], 64486: [[1744], 256], 64487: [[1744], 256], 64488: [[1609], 256], 64489: [[1609], 256], 64490: [[1574, 1575], 256], 64491: [[1574, 1575], 256], 64492: [[1574, 1749], 256], 64493: [[1574, 1749], 256], 64494: [[1574, 1608], 256], 64495: [[1574, 1608], 256], 64496: [[1574, 1735], 256], 64497: [[1574, 1735], 256], 64498: [[1574, 1734], 256], 64499: [[1574, 1734], 256], 64500: [[1574, 1736], 256], 64501: [[1574, 1736], 256], 64502: [[1574, 1744], 256], 64503: [[1574, 1744], 256], 64504: [[1574, 1744], 256], 64505: [[1574, 1609], 256], 64506: [[1574, 1609], 256], 64507: [[1574, 1609], 256], 64508: [[1740], 256], 64509: [[1740], 256], 64510: [[1740], 256], 64511: [[1740], 256] },
      64512: { 64512: [[1574, 1580], 256], 64513: [[1574, 1581], 256], 64514: [[1574, 1605], 256], 64515: [[1574, 1609], 256], 64516: [[1574, 1610], 256], 64517: [[1576, 1580], 256], 64518: [[1576, 1581], 256], 64519: [[1576, 1582], 256], 64520: [[1576, 1605], 256], 64521: [[1576, 1609], 256], 64522: [[1576, 1610], 256], 64523: [[1578, 1580], 256], 64524: [[1578, 1581], 256], 64525: [[1578, 1582], 256], 64526: [[1578, 1605], 256], 64527: [[1578, 1609], 256], 64528: [[1578, 1610], 256], 64529: [[1579, 1580], 256], 64530: [[1579, 1605], 256], 64531: [[1579, 1609], 256], 64532: [[1579, 1610], 256], 64533: [[1580, 1581], 256], 64534: [[1580, 1605], 256], 64535: [[1581, 1580], 256], 64536: [[1581, 1605], 256], 64537: [[1582, 1580], 256], 64538: [[1582, 1581], 256], 64539: [[1582, 1605], 256], 64540: [[1587, 1580], 256], 64541: [[1587, 1581], 256], 64542: [[1587, 1582], 256], 64543: [[1587, 1605], 256], 64544: [[1589, 1581], 256], 64545: [[1589, 1605], 256], 64546: [[1590, 1580], 256], 64547: [[1590, 1581], 256], 64548: [[1590, 1582], 256], 64549: [[1590, 1605], 256], 64550: [[1591, 1581], 256], 64551: [[1591, 1605], 256], 64552: [[1592, 1605], 256], 64553: [[1593, 1580], 256], 64554: [[1593, 1605], 256], 64555: [[1594, 1580], 256], 64556: [[1594, 1605], 256], 64557: [[1601, 1580], 256], 64558: [[1601, 1581], 256], 64559: [[1601, 1582], 256], 64560: [[1601, 1605], 256], 64561: [[1601, 1609], 256], 64562: [[1601, 1610], 256], 64563: [[1602, 1581], 256], 64564: [[1602, 1605], 256], 64565: [[1602, 1609], 256], 64566: [[1602, 1610], 256], 64567: [[1603, 1575], 256], 64568: [[1603, 1580], 256], 64569: [[1603, 1581], 256], 64570: [[1603, 1582], 256], 64571: [[1603, 1604], 256], 64572: [[1603, 1605], 256], 64573: [[1603, 1609], 256], 64574: [[1603, 1610], 256], 64575: [[1604, 1580], 256], 64576: [[1604, 1581], 256], 64577: [[1604, 1582], 256], 64578: [[1604, 1605], 256], 64579: [[1604, 1609], 256], 64580: [[1604, 1610], 256], 64581: [[1605, 1580], 256], 64582: [[1605, 1581], 256], 64583: [[1605, 1582], 256], 64584: [[1605, 1605], 256], 64585: [[1605, 1609], 256], 64586: [[1605, 1610], 256], 64587: [[1606, 1580], 256], 64588: [[1606, 1581], 256], 64589: [[1606, 1582], 256], 64590: [[1606, 1605], 256], 64591: [[1606, 1609], 256], 64592: [[1606, 1610], 256], 64593: [[1607, 1580], 256], 64594: [[1607, 1605], 256], 64595: [[1607, 1609], 256], 64596: [[1607, 1610], 256], 64597: [[1610, 1580], 256], 64598: [[1610, 1581], 256], 64599: [[1610, 1582], 256], 64600: [[1610, 1605], 256], 64601: [[1610, 1609], 256], 64602: [[1610, 1610], 256], 64603: [[1584, 1648], 256], 64604: [[1585, 1648], 256], 64605: [[1609, 1648], 256], 64606: [[32, 1612, 1617], 256], 64607: [[32, 1613, 1617], 256], 64608: [[32, 1614, 1617], 256], 64609: [[32, 1615, 1617], 256], 64610: [[32, 1616, 1617], 256], 64611: [[32, 1617, 1648], 256], 64612: [[1574, 1585], 256], 64613: [[1574, 1586], 256], 64614: [[1574, 1605], 256], 64615: [[1574, 1606], 256], 64616: [[1574, 1609], 256], 64617: [[1574, 1610], 256], 64618: [[1576, 1585], 256], 64619: [[1576, 1586], 256], 64620: [[1576, 1605], 256], 64621: [[1576, 1606], 256], 64622: [[1576, 1609], 256], 64623: [[1576, 1610], 256], 64624: [[1578, 1585], 256], 64625: [[1578, 1586], 256], 64626: [[1578, 1605], 256], 64627: [[1578, 1606], 256], 64628: [[1578, 1609], 256], 64629: [[1578, 1610], 256], 64630: [[1579, 1585], 256], 64631: [[1579, 1586], 256], 64632: [[1579, 1605], 256], 64633: [[1579, 1606], 256], 64634: [[1579, 1609], 256], 64635: [[1579, 1610], 256], 64636: [[1601, 1609], 256], 64637: [[1601, 1610], 256], 64638: [[1602, 1609], 256], 64639: [[1602, 1610], 256], 64640: [[1603, 1575], 256], 64641: [[1603, 1604], 256], 64642: [[1603, 1605], 256], 64643: [[1603, 1609], 256], 64644: [[1603, 1610], 256], 64645: [[1604, 1605], 256], 64646: [[1604, 1609], 256], 64647: [[1604, 1610], 256], 64648: [[1605, 1575], 256], 64649: [[1605, 1605], 256], 64650: [[1606, 1585], 256], 64651: [[1606, 1586], 256], 64652: [[1606, 1605], 256], 64653: [[1606, 1606], 256], 64654: [[1606, 1609], 256], 64655: [[1606, 1610], 256], 64656: [[1609, 1648], 256], 64657: [[1610, 1585], 256], 64658: [[1610, 1586], 256], 64659: [[1610, 1605], 256], 64660: [[1610, 1606], 256], 64661: [[1610, 1609], 256], 64662: [[1610, 1610], 256], 64663: [[1574, 1580], 256], 64664: [[1574, 1581], 256], 64665: [[1574, 1582], 256], 64666: [[1574, 1605], 256], 64667: [[1574, 1607], 256], 64668: [[1576, 1580], 256], 64669: [[1576, 1581], 256], 64670: [[1576, 1582], 256], 64671: [[1576, 1605], 256], 64672: [[1576, 1607], 256], 64673: [[1578, 1580], 256], 64674: [[1578, 1581], 256], 64675: [[1578, 1582], 256], 64676: [[1578, 1605], 256], 64677: [[1578, 1607], 256], 64678: [[1579, 1605], 256], 64679: [[1580, 1581], 256], 64680: [[1580, 1605], 256], 64681: [[1581, 1580], 256], 64682: [[1581, 1605], 256], 64683: [[1582, 1580], 256], 64684: [[1582, 1605], 256], 64685: [[1587, 1580], 256], 64686: [[1587, 1581], 256], 64687: [[1587, 1582], 256], 64688: [[1587, 1605], 256], 64689: [[1589, 1581], 256], 64690: [[1589, 1582], 256], 64691: [[1589, 1605], 256], 64692: [[1590, 1580], 256], 64693: [[1590, 1581], 256], 64694: [[1590, 1582], 256], 64695: [[1590, 1605], 256], 64696: [[1591, 1581], 256], 64697: [[1592, 1605], 256], 64698: [[1593, 1580], 256], 64699: [[1593, 1605], 256], 64700: [[1594, 1580], 256], 64701: [[1594, 1605], 256], 64702: [[1601, 1580], 256], 64703: [[1601, 1581], 256], 64704: [[1601, 1582], 256], 64705: [[1601, 1605], 256], 64706: [[1602, 1581], 256], 64707: [[1602, 1605], 256], 64708: [[1603, 1580], 256], 64709: [[1603, 1581], 256], 64710: [[1603, 1582], 256], 64711: [[1603, 1604], 256], 64712: [[1603, 1605], 256], 64713: [[1604, 1580], 256], 64714: [[1604, 1581], 256], 64715: [[1604, 1582], 256], 64716: [[1604, 1605], 256], 64717: [[1604, 1607], 256], 64718: [[1605, 1580], 256], 64719: [[1605, 1581], 256], 64720: [[1605, 1582], 256], 64721: [[1605, 1605], 256], 64722: [[1606, 1580], 256], 64723: [[1606, 1581], 256], 64724: [[1606, 1582], 256], 64725: [[1606, 1605], 256], 64726: [[1606, 1607], 256], 64727: [[1607, 1580], 256], 64728: [[1607, 1605], 256], 64729: [[1607, 1648], 256], 64730: [[1610, 1580], 256], 64731: [[1610, 1581], 256], 64732: [[1610, 1582], 256], 64733: [[1610, 1605], 256], 64734: [[1610, 1607], 256], 64735: [[1574, 1605], 256], 64736: [[1574, 1607], 256], 64737: [[1576, 1605], 256], 64738: [[1576, 1607], 256], 64739: [[1578, 1605], 256], 64740: [[1578, 1607], 256], 64741: [[1579, 1605], 256], 64742: [[1579, 1607], 256], 64743: [[1587, 1605], 256], 64744: [[1587, 1607], 256], 64745: [[1588, 1605], 256], 64746: [[1588, 1607], 256], 64747: [[1603, 1604], 256], 64748: [[1603, 1605], 256], 64749: [[1604, 1605], 256], 64750: [[1606, 1605], 256], 64751: [[1606, 1607], 256], 64752: [[1610, 1605], 256], 64753: [[1610, 1607], 256], 64754: [[1600, 1614, 1617], 256], 64755: [[1600, 1615, 1617], 256], 64756: [[1600, 1616, 1617], 256], 64757: [[1591, 1609], 256], 64758: [[1591, 1610], 256], 64759: [[1593, 1609], 256], 64760: [[1593, 1610], 256], 64761: [[1594, 1609], 256], 64762: [[1594, 1610], 256], 64763: [[1587, 1609], 256], 64764: [[1587, 1610], 256], 64765: [[1588, 1609], 256], 64766: [[1588, 1610], 256], 64767: [[1581, 1609], 256] },
      64768: { 64768: [[1581, 1610], 256], 64769: [[1580, 1609], 256], 64770: [[1580, 1610], 256], 64771: [[1582, 1609], 256], 64772: [[1582, 1610], 256], 64773: [[1589, 1609], 256], 64774: [[1589, 1610], 256], 64775: [[1590, 1609], 256], 64776: [[1590, 1610], 256], 64777: [[1588, 1580], 256], 64778: [[1588, 1581], 256], 64779: [[1588, 1582], 256], 64780: [[1588, 1605], 256], 64781: [[1588, 1585], 256], 64782: [[1587, 1585], 256], 64783: [[1589, 1585], 256], 64784: [[1590, 1585], 256], 64785: [[1591, 1609], 256], 64786: [[1591, 1610], 256], 64787: [[1593, 1609], 256], 64788: [[1593, 1610], 256], 64789: [[1594, 1609], 256], 64790: [[1594, 1610], 256], 64791: [[1587, 1609], 256], 64792: [[1587, 1610], 256], 64793: [[1588, 1609], 256], 64794: [[1588, 1610], 256], 64795: [[1581, 1609], 256], 64796: [[1581, 1610], 256], 64797: [[1580, 1609], 256], 64798: [[1580, 1610], 256], 64799: [[1582, 1609], 256], 64800: [[1582, 1610], 256], 64801: [[1589, 1609], 256], 64802: [[1589, 1610], 256], 64803: [[1590, 1609], 256], 64804: [[1590, 1610], 256], 64805: [[1588, 1580], 256], 64806: [[1588, 1581], 256], 64807: [[1588, 1582], 256], 64808: [[1588, 1605], 256], 64809: [[1588, 1585], 256], 64810: [[1587, 1585], 256], 64811: [[1589, 1585], 256], 64812: [[1590, 1585], 256], 64813: [[1588, 1580], 256], 64814: [[1588, 1581], 256], 64815: [[1588, 1582], 256], 64816: [[1588, 1605], 256], 64817: [[1587, 1607], 256], 64818: [[1588, 1607], 256], 64819: [[1591, 1605], 256], 64820: [[1587, 1580], 256], 64821: [[1587, 1581], 256], 64822: [[1587, 1582], 256], 64823: [[1588, 1580], 256], 64824: [[1588, 1581], 256], 64825: [[1588, 1582], 256], 64826: [[1591, 1605], 256], 64827: [[1592, 1605], 256], 64828: [[1575, 1611], 256], 64829: [[1575, 1611], 256], 64848: [[1578, 1580, 1605], 256], 64849: [[1578, 1581, 1580], 256], 64850: [[1578, 1581, 1580], 256], 64851: [[1578, 1581, 1605], 256], 64852: [[1578, 1582, 1605], 256], 64853: [[1578, 1605, 1580], 256], 64854: [[1578, 1605, 1581], 256], 64855: [[1578, 1605, 1582], 256], 64856: [[1580, 1605, 1581], 256], 64857: [[1580, 1605, 1581], 256], 64858: [[1581, 1605, 1610], 256], 64859: [[1581, 1605, 1609], 256], 64860: [[1587, 1581, 1580], 256], 64861: [[1587, 1580, 1581], 256], 64862: [[1587, 1580, 1609], 256], 64863: [[1587, 1605, 1581], 256], 64864: [[1587, 1605, 1581], 256], 64865: [[1587, 1605, 1580], 256], 64866: [[1587, 1605, 1605], 256], 64867: [[1587, 1605, 1605], 256], 64868: [[1589, 1581, 1581], 256], 64869: [[1589, 1581, 1581], 256], 64870: [[1589, 1605, 1605], 256], 64871: [[1588, 1581, 1605], 256], 64872: [[1588, 1581, 1605], 256], 64873: [[1588, 1580, 1610], 256], 64874: [[1588, 1605, 1582], 256], 64875: [[1588, 1605, 1582], 256], 64876: [[1588, 1605, 1605], 256], 64877: [[1588, 1605, 1605], 256], 64878: [[1590, 1581, 1609], 256], 64879: [[1590, 1582, 1605], 256], 64880: [[1590, 1582, 1605], 256], 64881: [[1591, 1605, 1581], 256], 64882: [[1591, 1605, 1581], 256], 64883: [[1591, 1605, 1605], 256], 64884: [[1591, 1605, 1610], 256], 64885: [[1593, 1580, 1605], 256], 64886: [[1593, 1605, 1605], 256], 64887: [[1593, 1605, 1605], 256], 64888: [[1593, 1605, 1609], 256], 64889: [[1594, 1605, 1605], 256], 64890: [[1594, 1605, 1610], 256], 64891: [[1594, 1605, 1609], 256], 64892: [[1601, 1582, 1605], 256], 64893: [[1601, 1582, 1605], 256], 64894: [[1602, 1605, 1581], 256], 64895: [[1602, 1605, 1605], 256], 64896: [[1604, 1581, 1605], 256], 64897: [[1604, 1581, 1610], 256], 64898: [[1604, 1581, 1609], 256], 64899: [[1604, 1580, 1580], 256], 64900: [[1604, 1580, 1580], 256], 64901: [[1604, 1582, 1605], 256], 64902: [[1604, 1582, 1605], 256], 64903: [[1604, 1605, 1581], 256], 64904: [[1604, 1605, 1581], 256], 64905: [[1605, 1581, 1580], 256], 64906: [[1605, 1581, 1605], 256], 64907: [[1605, 1581, 1610], 256], 64908: [[1605, 1580, 1581], 256], 64909: [[1605, 1580, 1605], 256], 64910: [[1605, 1582, 1580], 256], 64911: [[1605, 1582, 1605], 256], 64914: [[1605, 1580, 1582], 256], 64915: [[1607, 1605, 1580], 256], 64916: [[1607, 1605, 1605], 256], 64917: [[1606, 1581, 1605], 256], 64918: [[1606, 1581, 1609], 256], 64919: [[1606, 1580, 1605], 256], 64920: [[1606, 1580, 1605], 256], 64921: [[1606, 1580, 1609], 256], 64922: [[1606, 1605, 1610], 256], 64923: [[1606, 1605, 1609], 256], 64924: [[1610, 1605, 1605], 256], 64925: [[1610, 1605, 1605], 256], 64926: [[1576, 1582, 1610], 256], 64927: [[1578, 1580, 1610], 256], 64928: [[1578, 1580, 1609], 256], 64929: [[1578, 1582, 1610], 256], 64930: [[1578, 1582, 1609], 256], 64931: [[1578, 1605, 1610], 256], 64932: [[1578, 1605, 1609], 256], 64933: [[1580, 1605, 1610], 256], 64934: [[1580, 1581, 1609], 256], 64935: [[1580, 1605, 1609], 256], 64936: [[1587, 1582, 1609], 256], 64937: [[1589, 1581, 1610], 256], 64938: [[1588, 1581, 1610], 256], 64939: [[1590, 1581, 1610], 256], 64940: [[1604, 1580, 1610], 256], 64941: [[1604, 1605, 1610], 256], 64942: [[1610, 1581, 1610], 256], 64943: [[1610, 1580, 1610], 256], 64944: [[1610, 1605, 1610], 256], 64945: [[1605, 1605, 1610], 256], 64946: [[1602, 1605, 1610], 256], 64947: [[1606, 1581, 1610], 256], 64948: [[1602, 1605, 1581], 256], 64949: [[1604, 1581, 1605], 256], 64950: [[1593, 1605, 1610], 256], 64951: [[1603, 1605, 1610], 256], 64952: [[1606, 1580, 1581], 256], 64953: [[1605, 1582, 1610], 256], 64954: [[1604, 1580, 1605], 256], 64955: [[1603, 1605, 1605], 256], 64956: [[1604, 1580, 1605], 256], 64957: [[1606, 1580, 1581], 256], 64958: [[1580, 1581, 1610], 256], 64959: [[1581, 1580, 1610], 256], 64960: [[1605, 1580, 1610], 256], 64961: [[1601, 1605, 1610], 256], 64962: [[1576, 1581, 1610], 256], 64963: [[1603, 1605, 1605], 256], 64964: [[1593, 1580, 1605], 256], 64965: [[1589, 1605, 1605], 256], 64966: [[1587, 1582, 1610], 256], 64967: [[1606, 1580, 1610], 256], 65008: [[1589, 1604, 1746], 256], 65009: [[1602, 1604, 1746], 256], 65010: [[1575, 1604, 1604, 1607], 256], 65011: [[1575, 1603, 1576, 1585], 256], 65012: [[1605, 1581, 1605, 1583], 256], 65013: [[1589, 1604, 1593, 1605], 256], 65014: [[1585, 1587, 1608, 1604], 256], 65015: [[1593, 1604, 1610, 1607], 256], 65016: [[1608, 1587, 1604, 1605], 256], 65017: [[1589, 1604, 1609], 256], 65018: [[1589, 1604, 1609, 32, 1575, 1604, 1604, 1607, 32, 1593, 1604, 1610, 1607, 32, 1608, 1587, 1604, 1605], 256], 65019: [[1580, 1604, 32, 1580, 1604, 1575, 1604, 1607], 256], 65020: [[1585, 1740, 1575, 1604], 256] },
      65024: { 65040: [[44], 256], 65041: [[12289], 256], 65042: [[12290], 256], 65043: [[58], 256], 65044: [[59], 256], 65045: [[33], 256], 65046: [[63], 256], 65047: [[12310], 256], 65048: [[12311], 256], 65049: [[8230], 256], 65056: [, 230], 65057: [, 230], 65058: [, 230], 65059: [, 230], 65060: [, 230], 65061: [, 230], 65062: [, 230], 65063: [, 220], 65064: [, 220], 65065: [, 220], 65066: [, 220], 65067: [, 220], 65068: [, 220], 65069: [, 220], 65072: [[8229], 256], 65073: [[8212], 256], 65074: [[8211], 256], 65075: [[95], 256], 65076: [[95], 256], 65077: [[40], 256], 65078: [[41], 256], 65079: [[123], 256], 65080: [[125], 256], 65081: [[12308], 256], 65082: [[12309], 256], 65083: [[12304], 256], 65084: [[12305], 256], 65085: [[12298], 256], 65086: [[12299], 256], 65087: [[12296], 256], 65088: [[12297], 256], 65089: [[12300], 256], 65090: [[12301], 256], 65091: [[12302], 256], 65092: [[12303], 256], 65095: [[91], 256], 65096: [[93], 256], 65097: [[8254], 256], 65098: [[8254], 256], 65099: [[8254], 256], 65100: [[8254], 256], 65101: [[95], 256], 65102: [[95], 256], 65103: [[95], 256], 65104: [[44], 256], 65105: [[12289], 256], 65106: [[46], 256], 65108: [[59], 256], 65109: [[58], 256], 65110: [[63], 256], 65111: [[33], 256], 65112: [[8212], 256], 65113: [[40], 256], 65114: [[41], 256], 65115: [[123], 256], 65116: [[125], 256], 65117: [[12308], 256], 65118: [[12309], 256], 65119: [[35], 256], 65120: [[38], 256], 65121: [[42], 256], 65122: [[43], 256], 65123: [[45], 256], 65124: [[60], 256], 65125: [[62], 256], 65126: [[61], 256], 65128: [[92], 256], 65129: [[36], 256], 65130: [[37], 256], 65131: [[64], 256], 65136: [[32, 1611], 256], 65137: [[1600, 1611], 256], 65138: [[32, 1612], 256], 65140: [[32, 1613], 256], 65142: [[32, 1614], 256], 65143: [[1600, 1614], 256], 65144: [[32, 1615], 256], 65145: [[1600, 1615], 256], 65146: [[32, 1616], 256], 65147: [[1600, 1616], 256], 65148: [[32, 1617], 256], 65149: [[1600, 1617], 256], 65150: [[32, 1618], 256], 65151: [[1600, 1618], 256], 65152: [[1569], 256], 65153: [[1570], 256], 65154: [[1570], 256], 65155: [[1571], 256], 65156: [[1571], 256], 65157: [[1572], 256], 65158: [[1572], 256], 65159: [[1573], 256], 65160: [[1573], 256], 65161: [[1574], 256], 65162: [[1574], 256], 65163: [[1574], 256], 65164: [[1574], 256], 65165: [[1575], 256], 65166: [[1575], 256], 65167: [[1576], 256], 65168: [[1576], 256], 65169: [[1576], 256], 65170: [[1576], 256], 65171: [[1577], 256], 65172: [[1577], 256], 65173: [[1578], 256], 65174: [[1578], 256], 65175: [[1578], 256], 65176: [[1578], 256], 65177: [[1579], 256], 65178: [[1579], 256], 65179: [[1579], 256], 65180: [[1579], 256], 65181: [[1580], 256], 65182: [[1580], 256], 65183: [[1580], 256], 65184: [[1580], 256], 65185: [[1581], 256], 65186: [[1581], 256], 65187: [[1581], 256], 65188: [[1581], 256], 65189: [[1582], 256], 65190: [[1582], 256], 65191: [[1582], 256], 65192: [[1582], 256], 65193: [[1583], 256], 65194: [[1583], 256], 65195: [[1584], 256], 65196: [[1584], 256], 65197: [[1585], 256], 65198: [[1585], 256], 65199: [[1586], 256], 65200: [[1586], 256], 65201: [[1587], 256], 65202: [[1587], 256], 65203: [[1587], 256], 65204: [[1587], 256], 65205: [[1588], 256], 65206: [[1588], 256], 65207: [[1588], 256], 65208: [[1588], 256], 65209: [[1589], 256], 65210: [[1589], 256], 65211: [[1589], 256], 65212: [[1589], 256], 65213: [[1590], 256], 65214: [[1590], 256], 65215: [[1590], 256], 65216: [[1590], 256], 65217: [[1591], 256], 65218: [[1591], 256], 65219: [[1591], 256], 65220: [[1591], 256], 65221: [[1592], 256], 65222: [[1592], 256], 65223: [[1592], 256], 65224: [[1592], 256], 65225: [[1593], 256], 65226: [[1593], 256], 65227: [[1593], 256], 65228: [[1593], 256], 65229: [[1594], 256], 65230: [[1594], 256], 65231: [[1594], 256], 65232: [[1594], 256], 65233: [[1601], 256], 65234: [[1601], 256], 65235: [[1601], 256], 65236: [[1601], 256], 65237: [[1602], 256], 65238: [[1602], 256], 65239: [[1602], 256], 65240: [[1602], 256], 65241: [[1603], 256], 65242: [[1603], 256], 65243: [[1603], 256], 65244: [[1603], 256], 65245: [[1604], 256], 65246: [[1604], 256], 65247: [[1604], 256], 65248: [[1604], 256], 65249: [[1605], 256], 65250: [[1605], 256], 65251: [[1605], 256], 65252: [[1605], 256], 65253: [[1606], 256], 65254: [[1606], 256], 65255: [[1606], 256], 65256: [[1606], 256], 65257: [[1607], 256], 65258: [[1607], 256], 65259: [[1607], 256], 65260: [[1607], 256], 65261: [[1608], 256], 65262: [[1608], 256], 65263: [[1609], 256], 65264: [[1609], 256], 65265: [[1610], 256], 65266: [[1610], 256], 65267: [[1610], 256], 65268: [[1610], 256], 65269: [[1604, 1570], 256], 65270: [[1604, 1570], 256], 65271: [[1604, 1571], 256], 65272: [[1604, 1571], 256], 65273: [[1604, 1573], 256], 65274: [[1604, 1573], 256], 65275: [[1604, 1575], 256], 65276: [[1604, 1575], 256] },
      65280: { 65281: [[33], 256], 65282: [[34], 256], 65283: [[35], 256], 65284: [[36], 256], 65285: [[37], 256], 65286: [[38], 256], 65287: [[39], 256], 65288: [[40], 256], 65289: [[41], 256], 65290: [[42], 256], 65291: [[43], 256], 65292: [[44], 256], 65293: [[45], 256], 65294: [[46], 256], 65295: [[47], 256], 65296: [[48], 256], 65297: [[49], 256], 65298: [[50], 256], 65299: [[51], 256], 65300: [[52], 256], 65301: [[53], 256], 65302: [[54], 256], 65303: [[55], 256], 65304: [[56], 256], 65305: [[57], 256], 65306: [[58], 256], 65307: [[59], 256], 65308: [[60], 256], 65309: [[61], 256], 65310: [[62], 256], 65311: [[63], 256], 65312: [[64], 256], 65313: [[65], 256], 65314: [[66], 256], 65315: [[67], 256], 65316: [[68], 256], 65317: [[69], 256], 65318: [[70], 256], 65319: [[71], 256], 65320: [[72], 256], 65321: [[73], 256], 65322: [[74], 256], 65323: [[75], 256], 65324: [[76], 256], 65325: [[77], 256], 65326: [[78], 256], 65327: [[79], 256], 65328: [[80], 256], 65329: [[81], 256], 65330: [[82], 256], 65331: [[83], 256], 65332: [[84], 256], 65333: [[85], 256], 65334: [[86], 256], 65335: [[87], 256], 65336: [[88], 256], 65337: [[89], 256], 65338: [[90], 256], 65339: [[91], 256], 65340: [[92], 256], 65341: [[93], 256], 65342: [[94], 256], 65343: [[95], 256], 65344: [[96], 256], 65345: [[97], 256], 65346: [[98], 256], 65347: [[99], 256], 65348: [[100], 256], 65349: [[101], 256], 65350: [[102], 256], 65351: [[103], 256], 65352: [[104], 256], 65353: [[105], 256], 65354: [[106], 256], 65355: [[107], 256], 65356: [[108], 256], 65357: [[109], 256], 65358: [[110], 256], 65359: [[111], 256], 65360: [[112], 256], 65361: [[113], 256], 65362: [[114], 256], 65363: [[115], 256], 65364: [[116], 256], 65365: [[117], 256], 65366: [[118], 256], 65367: [[119], 256], 65368: [[120], 256], 65369: [[121], 256], 65370: [[122], 256], 65371: [[123], 256], 65372: [[124], 256], 65373: [[125], 256], 65374: [[126], 256], 65375: [[10629], 256], 65376: [[10630], 256], 65377: [[12290], 256], 65378: [[12300], 256], 65379: [[12301], 256], 65380: [[12289], 256], 65381: [[12539], 256], 65382: [[12530], 256], 65383: [[12449], 256], 65384: [[12451], 256], 65385: [[12453], 256], 65386: [[12455], 256], 65387: [[12457], 256], 65388: [[12515], 256], 65389: [[12517], 256], 65390: [[12519], 256], 65391: [[12483], 256], 65392: [[12540], 256], 65393: [[12450], 256], 65394: [[12452], 256], 65395: [[12454], 256], 65396: [[12456], 256], 65397: [[12458], 256], 65398: [[12459], 256], 65399: [[12461], 256], 65400: [[12463], 256], 65401: [[12465], 256], 65402: [[12467], 256], 65403: [[12469], 256], 65404: [[12471], 256], 65405: [[12473], 256], 65406: [[12475], 256], 65407: [[12477], 256], 65408: [[12479], 256], 65409: [[12481], 256], 65410: [[12484], 256], 65411: [[12486], 256], 65412: [[12488], 256], 65413: [[12490], 256], 65414: [[12491], 256], 65415: [[12492], 256], 65416: [[12493], 256], 65417: [[12494], 256], 65418: [[12495], 256], 65419: [[12498], 256], 65420: [[12501], 256], 65421: [[12504], 256], 65422: [[12507], 256], 65423: [[12510], 256], 65424: [[12511], 256], 65425: [[12512], 256], 65426: [[12513], 256], 65427: [[12514], 256], 65428: [[12516], 256], 65429: [[12518], 256], 65430: [[12520], 256], 65431: [[12521], 256], 65432: [[12522], 256], 65433: [[12523], 256], 65434: [[12524], 256], 65435: [[12525], 256], 65436: [[12527], 256], 65437: [[12531], 256], 65438: [[12441], 256], 65439: [[12442], 256], 65440: [[12644], 256], 65441: [[12593], 256], 65442: [[12594], 256], 65443: [[12595], 256], 65444: [[12596], 256], 65445: [[12597], 256], 65446: [[12598], 256], 65447: [[12599], 256], 65448: [[12600], 256], 65449: [[12601], 256], 65450: [[12602], 256], 65451: [[12603], 256], 65452: [[12604], 256], 65453: [[12605], 256], 65454: [[12606], 256], 65455: [[12607], 256], 65456: [[12608], 256], 65457: [[12609], 256], 65458: [[12610], 256], 65459: [[12611], 256], 65460: [[12612], 256], 65461: [[12613], 256], 65462: [[12614], 256], 65463: [[12615], 256], 65464: [[12616], 256], 65465: [[12617], 256], 65466: [[12618], 256], 65467: [[12619], 256], 65468: [[12620], 256], 65469: [[12621], 256], 65470: [[12622], 256], 65474: [[12623], 256], 65475: [[12624], 256], 65476: [[12625], 256], 65477: [[12626], 256], 65478: [[12627], 256], 65479: [[12628], 256], 65482: [[12629], 256], 65483: [[12630], 256], 65484: [[12631], 256], 65485: [[12632], 256], 65486: [[12633], 256], 65487: [[12634], 256], 65490: [[12635], 256], 65491: [[12636], 256], 65492: [[12637], 256], 65493: [[12638], 256], 65494: [[12639], 256], 65495: [[12640], 256], 65498: [[12641], 256], 65499: [[12642], 256], 65500: [[12643], 256], 65504: [[162], 256], 65505: [[163], 256], 65506: [[172], 256], 65507: [[175], 256], 65508: [[166], 256], 65509: [[165], 256], 65510: [[8361], 256], 65512: [[9474], 256], 65513: [[8592], 256], 65514: [[8593], 256], 65515: [[8594], 256], 65516: [[8595], 256], 65517: [[9632], 256], 65518: [[9675], 256] }
    };
    var S = {
      nfc: c,
      nfd: p,
      nfkc: y,
      nfkd: d
    };
    e.exports = S, S.shimApplied = !1, String.prototype.normalize || (String.prototype.normalize = function(T) {
      var g = "" + this;
      if (T = T === void 0 ? "NFC" : T, T === "NFC")
        return S.nfc(g);
      if (T === "NFD")
        return S.nfd(g);
      if (T === "NFKC")
        return S.nfkc(g);
      if (T === "NFKD")
        return S.nfkd(g);
      throw new RangeError("Invalid normalization form: " + T);
    }, S.shimApplied = !0);
  })();
})(Dy);
var xC = Dy.exports, pl = gi();
function _C(e, t, a, r) {
  var f = 64;
  if (r > (Math.pow(2, 32) - 1) * f)
    throw Error("Requested key length too long");
  if (typeof e != "string" && !Q.Buffer.isBuffer(e))
    throw new TypeError("key must a string or Buffer");
  if (typeof t != "string" && !Q.Buffer.isBuffer(t))
    throw new TypeError("salt must a string or Buffer");
  typeof e == "string" && (e = Q.Buffer.from(e)), typeof t == "string" && (t = Q.Buffer.from(t));
  var i = Q.Buffer.alloc(r), n = Q.Buffer.alloc(f), o = Q.Buffer.alloc(f), s = Q.Buffer.alloc(t.length + 4), b = Math.ceil(r / f), l = r - (b - 1) * f;
  t.copy(s, 0, 0, t.length);
  for (var v = 1; v <= b; v++) {
    s[t.length + 0] = v >> 24 & 255, s[t.length + 1] = v >> 16 & 255, s[t.length + 2] = v >> 8 & 255, s[t.length + 3] = v >> 0 & 255, n = pl.createHmac("sha512", e).update(s).digest(), n.copy(o, 0, 0, f);
    for (var m = 1; m < a; m++) {
      n = pl.createHmac("sha512", e).update(n).digest();
      for (var x = 0; x < f; x++)
        o[x] ^= n[x];
    }
    var I = (v - 1) * f, k = v === b ? l : f;
    o.copy(i, I, 0, k);
  }
  return i;
}
var wC = _C, SC = {
  name: "Mnemonic",
  message: "Internal Error on bsv-mnemonic module {0}",
  errors: [{
    name: "InvalidEntropy",
    message: "Entropy length must be an even multiple of 11 bits: {0}"
  }, {
    name: "UnknownWordlist",
    message: "Could not detect the used word list: {0}"
  }, {
    name: "InvalidMnemonic",
    message: "Mnemonic string is invalid: {0}"
  }]
}, EC = ta.errors.extend(SC), F2, hl;
function TC() {
  if (hl)
    return F2;
  hl = 1;
  var e = ["的", "一", "是", "在", "不", "了", "有", "和", "人", "这", "中", "大", "为", "上", "个", "国", "我", "以", "要", "他", "时", "来", "用", "们", "生", "到", "作", "地", "于", "出", "就", "分", "对", "成", "会", "可", "主", "发", "年", "动", "同", "工", "也", "能", "下", "过", "子", "说", "产", "种", "面", "而", "方", "后", "多", "定", "行", "学", "法", "所", "民", "得", "经", "十", "三", "之", "进", "着", "等", "部", "度", "家", "电", "力", "里", "如", "水", "化", "高", "自", "二", "理", "起", "小", "物", "现", "实", "加", "量", "都", "两", "体", "制", "机", "当", "使", "点", "从", "业", "本", "去", "把", "性", "好", "应", "开", "它", "合", "还", "因", "由", "其", "些", "然", "前", "外", "天", "政", "四", "日", "那", "社", "义", "事", "平", "形", "相", "全", "表", "间", "样", "与", "关", "各", "重", "新", "线", "内", "数", "正", "心", "反", "你", "明", "看", "原", "又", "么", "利", "比", "或", "但", "质", "气", "第", "向", "道", "命", "此", "变", "条", "只", "没", "结", "解", "问", "意", "建", "月", "公", "无", "系", "军", "很", "情", "者", "最", "立", "代", "想", "已", "通", "并", "提", "直", "题", "党", "程", "展", "五", "果", "料", "象", "员", "革", "位", "入", "常", "文", "总", "次", "品", "式", "活", "设", "及", "管", "特", "件", "长", "求", "老", "头", "基", "资", "边", "流", "路", "级", "少", "图", "山", "统", "接", "知", "较", "将", "组", "见", "计", "别", "她", "手", "角", "期", "根", "论", "运", "农", "指", "几", "九", "区", "强", "放", "决", "西", "被", "干", "做", "必", "战", "先", "回", "则", "任", "取", "据", "处", "队", "南", "给", "色", "光", "门", "即", "保", "治", "北", "造", "百", "规", "热", "领", "七", "海", "口", "东", "导", "器", "压", "志", "世", "金", "增", "争", "济", "阶", "油", "思", "术", "极", "交", "受", "联", "什", "认", "六", "共", "权", "收", "证", "改", "清", "美", "再", "采", "转", "更", "单", "风", "切", "打", "白", "教", "速", "花", "带", "安", "场", "身", "车", "例", "真", "务", "具", "万", "每", "目", "至", "达", "走", "积", "示", "议", "声", "报", "斗", "完", "类", "八", "离", "华", "名", "确", "才", "科", "张", "信", "马", "节", "话", "米", "整", "空", "元", "况", "今", "集", "温", "传", "土", "许", "步", "群", "广", "石", "记", "需", "段", "研", "界", "拉", "林", "律", "叫", "且", "究", "观", "越", "织", "装", "影", "算", "低", "持", "音", "众", "书", "布", "复", "容", "儿", "须", "际", "商", "非", "验", "连", "断", "深", "难", "近", "矿", "千", "周", "委", "素", "技", "备", "半", "办", "青", "省", "列", "习", "响", "约", "支", "般", "史", "感", "劳", "便", "团", "往", "酸", "历", "市", "克", "何", "除", "消", "构", "府", "称", "太", "准", "精", "值", "号", "率", "族", "维", "划", "选", "标", "写", "存", "候", "毛", "亲", "快", "效", "斯", "院", "查", "江", "型", "眼", "王", "按", "格", "养", "易", "置", "派", "层", "片", "始", "却", "专", "状", "育", "厂", "京", "识", "适", "属", "圆", "包", "火", "住", "调", "满", "县", "局", "照", "参", "红", "细", "引", "听", "该", "铁", "价", "严", "首", "底", "液", "官", "德", "随", "病", "苏", "失", "尔", "死", "讲", "配", "女", "黄", "推", "显", "谈", "罪", "神", "艺", "呢", "席", "含", "企", "望", "密", "批", "营", "项", "防", "举", "球", "英", "氧", "势", "告", "李", "台", "落", "木", "帮", "轮", "破", "亚", "师", "围", "注", "远", "字", "材", "排", "供", "河", "态", "封", "另", "施", "减", "树", "溶", "怎", "止", "案", "言", "士", "均", "武", "固", "叶", "鱼", "波", "视", "仅", "费", "紧", "爱", "左", "章", "早", "朝", "害", "续", "轻", "服", "试", "食", "充", "兵", "源", "判", "护", "司", "足", "某", "练", "差", "致", "板", "田", "降", "黑", "犯", "负", "击", "范", "继", "兴", "似", "余", "坚", "曲", "输", "修", "故", "城", "夫", "够", "送", "笔", "船", "占", "右", "财", "吃", "富", "春", "职", "觉", "汉", "画", "功", "巴", "跟", "虽", "杂", "飞", "检", "吸", "助", "升", "阳", "互", "初", "创", "抗", "考", "投", "坏", "策", "古", "径", "换", "未", "跑", "留", "钢", "曾", "端", "责", "站", "简", "述", "钱", "副", "尽", "帝", "射", "草", "冲", "承", "独", "令", "限", "阿", "宣", "环", "双", "请", "超", "微", "让", "控", "州", "良", "轴", "找", "否", "纪", "益", "依", "优", "顶", "础", "载", "倒", "房", "突", "坐", "粉", "敌", "略", "客", "袁", "冷", "胜", "绝", "析", "块", "剂", "测", "丝", "协", "诉", "念", "陈", "仍", "罗", "盐", "友", "洋", "错", "苦", "夜", "刑", "移", "频", "逐", "靠", "混", "母", "短", "皮", "终", "聚", "汽", "村", "云", "哪", "既", "距", "卫", "停", "烈", "央", "察", "烧", "迅", "境", "若", "印", "洲", "刻", "括", "激", "孔", "搞", "甚", "室", "待", "核", "校", "散", "侵", "吧", "甲", "游", "久", "菜", "味", "旧", "模", "湖", "货", "损", "预", "阻", "毫", "普", "稳", "乙", "妈", "植", "息", "扩", "银", "语", "挥", "酒", "守", "拿", "序", "纸", "医", "缺", "雨", "吗", "针", "刘", "啊", "急", "唱", "误", "训", "愿", "审", "附", "获", "茶", "鲜", "粮", "斤", "孩", "脱", "硫", "肥", "善", "龙", "演", "父", "渐", "血", "欢", "械", "掌", "歌", "沙", "刚", "攻", "谓", "盾", "讨", "晚", "粒", "乱", "燃", "矛", "乎", "杀", "药", "宁", "鲁", "贵", "钟", "煤", "读", "班", "伯", "香", "介", "迫", "句", "丰", "培", "握", "兰", "担", "弦", "蛋", "沉", "假", "穿", "执", "答", "乐", "谁", "顺", "烟", "缩", "征", "脸", "喜", "松", "脚", "困", "异", "免", "背", "星", "福", "买", "染", "井", "概", "慢", "怕", "磁", "倍", "祖", "皇", "促", "静", "补", "评", "翻", "肉", "践", "尼", "衣", "宽", "扬", "棉", "希", "伤", "操", "垂", "秋", "宜", "氢", "套", "督", "振", "架", "亮", "末", "宪", "庆", "编", "牛", "触", "映", "雷", "销", "诗", "座", "居", "抓", "裂", "胞", "呼", "娘", "景", "威", "绿", "晶", "厚", "盟", "衡", "鸡", "孙", "延", "危", "胶", "屋", "乡", "临", "陆", "顾", "掉", "呀", "灯", "岁", "措", "束", "耐", "剧", "玉", "赵", "跳", "哥", "季", "课", "凯", "胡", "额", "款", "绍", "卷", "齐", "伟", "蒸", "殖", "永", "宗", "苗", "川", "炉", "岩", "弱", "零", "杨", "奏", "沿", "露", "杆", "探", "滑", "镇", "饭", "浓", "航", "怀", "赶", "库", "夺", "伊", "灵", "税", "途", "灭", "赛", "归", "召", "鼓", "播", "盘", "裁", "险", "康", "唯", "录", "菌", "纯", "借", "糖", "盖", "横", "符", "私", "努", "堂", "域", "枪", "润", "幅", "哈", "竟", "熟", "虫", "泽", "脑", "壤", "碳", "欧", "遍", "侧", "寨", "敢", "彻", "虑", "斜", "薄", "庭", "纳", "弹", "饲", "伸", "折", "麦", "湿", "暗", "荷", "瓦", "塞", "床", "筑", "恶", "户", "访", "塔", "奇", "透", "梁", "刀", "旋", "迹", "卡", "氯", "遇", "份", "毒", "泥", "退", "洗", "摆", "灰", "彩", "卖", "耗", "夏", "择", "忙", "铜", "献", "硬", "予", "繁", "圈", "雪", "函", "亦", "抽", "篇", "阵", "阴", "丁", "尺", "追", "堆", "雄", "迎", "泛", "爸", "楼", "避", "谋", "吨", "野", "猪", "旗", "累", "偏", "典", "馆", "索", "秦", "脂", "潮", "爷", "豆", "忽", "托", "惊", "塑", "遗", "愈", "朱", "替", "纤", "粗", "倾", "尚", "痛", "楚", "谢", "奋", "购", "磨", "君", "池", "旁", "碎", "骨", "监", "捕", "弟", "暴", "割", "贯", "殊", "释", "词", "亡", "壁", "顿", "宝", "午", "尘", "闻", "揭", "炮", "残", "冬", "桥", "妇", "警", "综", "招", "吴", "付", "浮", "遭", "徐", "您", "摇", "谷", "赞", "箱", "隔", "订", "男", "吹", "园", "纷", "唐", "败", "宋", "玻", "巨", "耕", "坦", "荣", "闭", "湾", "键", "凡", "驻", "锅", "救", "恩", "剥", "凝", "碱", "齿", "截", "炼", "麻", "纺", "禁", "废", "盛", "版", "缓", "净", "睛", "昌", "婚", "涉", "筒", "嘴", "插", "岸", "朗", "庄", "街", "藏", "姑", "贸", "腐", "奴", "啦", "惯", "乘", "伙", "恢", "匀", "纱", "扎", "辩", "耳", "彪", "臣", "亿", "璃", "抵", "脉", "秀", "萨", "俄", "网", "舞", "店", "喷", "纵", "寸", "汗", "挂", "洪", "贺", "闪", "柬", "爆", "烯", "津", "稻", "墙", "软", "勇", "像", "滚", "厘", "蒙", "芳", "肯", "坡", "柱", "荡", "腿", "仪", "旅", "尾", "轧", "冰", "贡", "登", "黎", "削", "钻", "勒", "逃", "障", "氨", "郭", "峰", "币", "港", "伏", "轨", "亩", "毕", "擦", "莫", "刺", "浪", "秘", "援", "株", "健", "售", "股", "岛", "甘", "泡", "睡", "童", "铸", "汤", "阀", "休", "汇", "舍", "牧", "绕", "炸", "哲", "磷", "绩", "朋", "淡", "尖", "启", "陷", "柴", "呈", "徒", "颜", "泪", "稍", "忘", "泵", "蓝", "拖", "洞", "授", "镜", "辛", "壮", "锋", "贫", "虚", "弯", "摩", "泰", "幼", "廷", "尊", "窗", "纲", "弄", "隶", "疑", "氏", "宫", "姐", "震", "瑞", "怪", "尤", "琴", "循", "描", "膜", "违", "夹", "腰", "缘", "珠", "穷", "森", "枝", "竹", "沟", "催", "绳", "忆", "邦", "剩", "幸", "浆", "栏", "拥", "牙", "贮", "礼", "滤", "钠", "纹", "罢", "拍", "咱", "喊", "袖", "埃", "勤", "罚", "焦", "潜", "伍", "墨", "欲", "缝", "姓", "刊", "饱", "仿", "奖", "铝", "鬼", "丽", "跨", "默", "挖", "链", "扫", "喝", "袋", "炭", "污", "幕", "诸", "弧", "励", "梅", "奶", "洁", "灾", "舟", "鉴", "苯", "讼", "抱", "毁", "懂", "寒", "智", "埔", "寄", "届", "跃", "渡", "挑", "丹", "艰", "贝", "碰", "拔", "爹", "戴", "码", "梦", "芽", "熔", "赤", "渔", "哭", "敬", "颗", "奔", "铅", "仲", "虎", "稀", "妹", "乏", "珍", "申", "桌", "遵", "允", "隆", "螺", "仓", "魏", "锐", "晓", "氮", "兼", "隐", "碍", "赫", "拨", "忠", "肃", "缸", "牵", "抢", "博", "巧", "壳", "兄", "杜", "讯", "诚", "碧", "祥", "柯", "页", "巡", "矩", "悲", "灌", "龄", "伦", "票", "寻", "桂", "铺", "圣", "恐", "恰", "郑", "趣", "抬", "荒", "腾", "贴", "柔", "滴", "猛", "阔", "辆", "妻", "填", "撤", "储", "签", "闹", "扰", "紫", "砂", "递", "戏", "吊", "陶", "伐", "喂", "疗", "瓶", "婆", "抚", "臂", "摸", "忍", "虾", "蜡", "邻", "胸", "巩", "挤", "偶", "弃", "槽", "劲", "乳", "邓", "吉", "仁", "烂", "砖", "租", "乌", "舰", "伴", "瓜", "浅", "丙", "暂", "燥", "橡", "柳", "迷", "暖", "牌", "秧", "胆", "详", "簧", "踏", "瓷", "谱", "呆", "宾", "糊", "洛", "辉", "愤", "竞", "隙", "怒", "粘", "乃", "绪", "肩", "籍", "敏", "涂", "熙", "皆", "侦", "悬", "掘", "享", "纠", "醒", "狂", "锁", "淀", "恨", "牲", "霸", "爬", "赏", "逆", "玩", "陵", "祝", "秒", "浙", "貌", "役", "彼", "悉", "鸭", "趋", "凤", "晨", "畜", "辈", "秩", "卵", "署", "梯", "炎", "滩", "棋", "驱", "筛", "峡", "冒", "啥", "寿", "译", "浸", "泉", "帽", "迟", "硅", "疆", "贷", "漏", "稿", "冠", "嫩", "胁", "芯", "牢", "叛", "蚀", "奥", "鸣", "岭", "羊", "凭", "串", "塘", "绘", "酵", "融", "盆", "锡", "庙", "筹", "冻", "辅", "摄", "袭", "筋", "拒", "僚", "旱", "钾", "鸟", "漆", "沈", "眉", "疏", "添", "棒", "穗", "硝", "韩", "逼", "扭", "侨", "凉", "挺", "碗", "栽", "炒", "杯", "患", "馏", "劝", "豪", "辽", "勃", "鸿", "旦", "吏", "拜", "狗", "埋", "辊", "掩", "饮", "搬", "骂", "辞", "勾", "扣", "估", "蒋", "绒", "雾", "丈", "朵", "姆", "拟", "宇", "辑", "陕", "雕", "偿", "蓄", "崇", "剪", "倡", "厅", "咬", "驶", "薯", "刷", "斥", "番", "赋", "奉", "佛", "浇", "漫", "曼", "扇", "钙", "桃", "扶", "仔", "返", "俗", "亏", "腔", "鞋", "棱", "覆", "框", "悄", "叔", "撞", "骗", "勘", "旺", "沸", "孤", "吐", "孟", "渠", "屈", "疾", "妙", "惜", "仰", "狠", "胀", "谐", "抛", "霉", "桑", "岗", "嘛", "衰", "盗", "渗", "脏", "赖", "涌", "甜", "曹", "阅", "肌", "哩", "厉", "烃", "纬", "毅", "昨", "伪", "症", "煮", "叹", "钉", "搭", "茎", "笼", "酷", "偷", "弓", "锥", "恒", "杰", "坑", "鼻", "翼", "纶", "叙", "狱", "逮", "罐", "络", "棚", "抑", "膨", "蔬", "寺", "骤", "穆", "冶", "枯", "册", "尸", "凸", "绅", "坯", "牺", "焰", "轰", "欣", "晋", "瘦", "御", "锭", "锦", "丧", "旬", "锻", "垄", "搜", "扑", "邀", "亭", "酯", "迈", "舒", "脆", "酶", "闲", "忧", "酚", "顽", "羽", "涨", "卸", "仗", "陪", "辟", "惩", "杭", "姚", "肚", "捉", "飘", "漂", "昆", "欺", "吾", "郎", "烷", "汁", "呵", "饰", "萧", "雅", "邮", "迁", "燕", "撒", "姻", "赴", "宴", "烦", "债", "帐", "斑", "铃", "旨", "醇", "董", "饼", "雏", "姿", "拌", "傅", "腹", "妥", "揉", "贤", "拆", "歪", "葡", "胺", "丢", "浩", "徽", "昂", "垫", "挡", "览", "贪", "慰", "缴", "汪", "慌", "冯", "诺", "姜", "谊", "凶", "劣", "诬", "耀", "昏", "躺", "盈", "骑", "乔", "溪", "丛", "卢", "抹", "闷", "咨", "刮", "驾", "缆", "悟", "摘", "铒", "掷", "颇", "幻", "柄", "惠", "惨", "佳", "仇", "腊", "窝", "涤", "剑", "瞧", "堡", "泼", "葱", "罩", "霍", "捞", "胎", "苍", "滨", "俩", "捅", "湘", "砍", "霞", "邵", "萄", "疯", "淮", "遂", "熊", "粪", "烘", "宿", "档", "戈", "驳", "嫂", "裕", "徙", "箭", "捐", "肠", "撑", "晒", "辨", "殿", "莲", "摊", "搅", "酱", "屏", "疫", "哀", "蔡", "堵", "沫", "皱", "畅", "叠", "阁", "莱", "敲", "辖", "钩", "痕", "坝", "巷", "饿", "祸", "丘", "玄", "溜", "曰", "逻", "彭", "尝", "卿", "妨", "艇", "吞", "韦", "怨", "矮", "歇"];
  return F2 = e, F2;
}
var H2, bl;
function AC() {
  if (bl)
    return H2;
  bl = 1;
  var e = ["abandon", "ability", "able", "about", "above", "absent", "absorb", "abstract", "absurd", "abuse", "access", "accident", "account", "accuse", "achieve", "acid", "acoustic", "acquire", "across", "act", "action", "actor", "actress", "actual", "adapt", "add", "addict", "address", "adjust", "admit", "adult", "advance", "advice", "aerobic", "affair", "afford", "afraid", "again", "age", "agent", "agree", "ahead", "aim", "air", "airport", "aisle", "alarm", "album", "alcohol", "alert", "alien", "all", "alley", "allow", "almost", "alone", "alpha", "already", "also", "alter", "always", "amateur", "amazing", "among", "amount", "amused", "analyst", "anchor", "ancient", "anger", "angle", "angry", "animal", "ankle", "announce", "annual", "another", "answer", "antenna", "antique", "anxiety", "any", "apart", "apology", "appear", "apple", "approve", "april", "arch", "arctic", "area", "arena", "argue", "arm", "armed", "armor", "army", "around", "arrange", "arrest", "arrive", "arrow", "art", "artefact", "artist", "artwork", "ask", "aspect", "assault", "asset", "assist", "assume", "asthma", "athlete", "atom", "attack", "attend", "attitude", "attract", "auction", "audit", "august", "aunt", "author", "auto", "autumn", "average", "avocado", "avoid", "awake", "aware", "away", "awesome", "awful", "awkward", "axis", "baby", "bachelor", "bacon", "badge", "bag", "balance", "balcony", "ball", "bamboo", "banana", "banner", "bar", "barely", "bargain", "barrel", "base", "basic", "basket", "battle", "beach", "bean", "beauty", "because", "become", "beef", "before", "begin", "behave", "behind", "believe", "below", "belt", "bench", "benefit", "best", "betray", "better", "between", "beyond", "bicycle", "bid", "bike", "bind", "biology", "bird", "birth", "bitter", "black", "blade", "blame", "blanket", "blast", "bleak", "bless", "blind", "blood", "blossom", "blouse", "blue", "blur", "blush", "board", "boat", "body", "boil", "bomb", "bone", "bonus", "book", "boost", "border", "boring", "borrow", "boss", "bottom", "bounce", "box", "boy", "bracket", "brain", "brand", "brass", "brave", "bread", "breeze", "brick", "bridge", "brief", "bright", "bring", "brisk", "broccoli", "broken", "bronze", "broom", "brother", "brown", "brush", "bubble", "buddy", "budget", "buffalo", "build", "bulb", "bulk", "bullet", "bundle", "bunker", "burden", "burger", "burst", "bus", "business", "busy", "butter", "buyer", "buzz", "cabbage", "cabin", "cable", "cactus", "cage", "cake", "call", "calm", "camera", "camp", "can", "canal", "cancel", "candy", "cannon", "canoe", "canvas", "canyon", "capable", "capital", "captain", "car", "carbon", "card", "cargo", "carpet", "carry", "cart", "case", "cash", "casino", "castle", "casual", "cat", "catalog", "catch", "category", "cattle", "caught", "cause", "caution", "cave", "ceiling", "celery", "cement", "census", "century", "cereal", "certain", "chair", "chalk", "champion", "change", "chaos", "chapter", "charge", "chase", "chat", "cheap", "check", "cheese", "chef", "cherry", "chest", "chicken", "chief", "child", "chimney", "choice", "choose", "chronic", "chuckle", "chunk", "churn", "cigar", "cinnamon", "circle", "citizen", "city", "civil", "claim", "clap", "clarify", "claw", "clay", "clean", "clerk", "clever", "click", "client", "cliff", "climb", "clinic", "clip", "clock", "clog", "close", "cloth", "cloud", "clown", "club", "clump", "cluster", "clutch", "coach", "coast", "coconut", "code", "coffee", "coil", "coin", "collect", "color", "column", "combine", "come", "comfort", "comic", "common", "company", "concert", "conduct", "confirm", "congress", "connect", "consider", "control", "convince", "cook", "cool", "copper", "copy", "coral", "core", "corn", "correct", "cost", "cotton", "couch", "country", "couple", "course", "cousin", "cover", "coyote", "crack", "cradle", "craft", "cram", "crane", "crash", "crater", "crawl", "crazy", "cream", "credit", "creek", "crew", "cricket", "crime", "crisp", "critic", "crop", "cross", "crouch", "crowd", "crucial", "cruel", "cruise", "crumble", "crunch", "crush", "cry", "crystal", "cube", "culture", "cup", "cupboard", "curious", "current", "curtain", "curve", "cushion", "custom", "cute", "cycle", "dad", "damage", "damp", "dance", "danger", "daring", "dash", "daughter", "dawn", "day", "deal", "debate", "debris", "decade", "december", "decide", "decline", "decorate", "decrease", "deer", "defense", "define", "defy", "degree", "delay", "deliver", "demand", "demise", "denial", "dentist", "deny", "depart", "depend", "deposit", "depth", "deputy", "derive", "describe", "desert", "design", "desk", "despair", "destroy", "detail", "detect", "develop", "device", "devote", "diagram", "dial", "diamond", "diary", "dice", "diesel", "diet", "differ", "digital", "dignity", "dilemma", "dinner", "dinosaur", "direct", "dirt", "disagree", "discover", "disease", "dish", "dismiss", "disorder", "display", "distance", "divert", "divide", "divorce", "dizzy", "doctor", "document", "dog", "doll", "dolphin", "domain", "donate", "donkey", "donor", "door", "dose", "double", "dove", "draft", "dragon", "drama", "drastic", "draw", "dream", "dress", "drift", "drill", "drink", "drip", "drive", "drop", "drum", "dry", "duck", "dumb", "dune", "during", "dust", "dutch", "duty", "dwarf", "dynamic", "eager", "eagle", "early", "earn", "earth", "easily", "east", "easy", "echo", "ecology", "economy", "edge", "edit", "educate", "effort", "egg", "eight", "either", "elbow", "elder", "electric", "elegant", "element", "elephant", "elevator", "elite", "else", "embark", "embody", "embrace", "emerge", "emotion", "employ", "empower", "empty", "enable", "enact", "end", "endless", "endorse", "enemy", "energy", "enforce", "engage", "engine", "enhance", "enjoy", "enlist", "enough", "enrich", "enroll", "ensure", "enter", "entire", "entry", "envelope", "episode", "equal", "equip", "era", "erase", "erode", "erosion", "error", "erupt", "escape", "essay", "essence", "estate", "eternal", "ethics", "evidence", "evil", "evoke", "evolve", "exact", "example", "excess", "exchange", "excite", "exclude", "excuse", "execute", "exercise", "exhaust", "exhibit", "exile", "exist", "exit", "exotic", "expand", "expect", "expire", "explain", "expose", "express", "extend", "extra", "eye", "eyebrow", "fabric", "face", "faculty", "fade", "faint", "faith", "fall", "false", "fame", "family", "famous", "fan", "fancy", "fantasy", "farm", "fashion", "fat", "fatal", "father", "fatigue", "fault", "favorite", "feature", "february", "federal", "fee", "feed", "feel", "female", "fence", "festival", "fetch", "fever", "few", "fiber", "fiction", "field", "figure", "file", "film", "filter", "final", "find", "fine", "finger", "finish", "fire", "firm", "first", "fiscal", "fish", "fit", "fitness", "fix", "flag", "flame", "flash", "flat", "flavor", "flee", "flight", "flip", "float", "flock", "floor", "flower", "fluid", "flush", "fly", "foam", "focus", "fog", "foil", "fold", "follow", "food", "foot", "force", "forest", "forget", "fork", "fortune", "forum", "forward", "fossil", "foster", "found", "fox", "fragile", "frame", "frequent", "fresh", "friend", "fringe", "frog", "front", "frost", "frown", "frozen", "fruit", "fuel", "fun", "funny", "furnace", "fury", "future", "gadget", "gain", "galaxy", "gallery", "game", "gap", "garage", "garbage", "garden", "garlic", "garment", "gas", "gasp", "gate", "gather", "gauge", "gaze", "general", "genius", "genre", "gentle", "genuine", "gesture", "ghost", "giant", "gift", "giggle", "ginger", "giraffe", "girl", "give", "glad", "glance", "glare", "glass", "glide", "glimpse", "globe", "gloom", "glory", "glove", "glow", "glue", "goat", "goddess", "gold", "good", "goose", "gorilla", "gospel", "gossip", "govern", "gown", "grab", "grace", "grain", "grant", "grape", "grass", "gravity", "great", "green", "grid", "grief", "grit", "grocery", "group", "grow", "grunt", "guard", "guess", "guide", "guilt", "guitar", "gun", "gym", "habit", "hair", "half", "hammer", "hamster", "hand", "happy", "harbor", "hard", "harsh", "harvest", "hat", "have", "hawk", "hazard", "head", "health", "heart", "heavy", "hedgehog", "height", "hello", "helmet", "help", "hen", "hero", "hidden", "high", "hill", "hint", "hip", "hire", "history", "hobby", "hockey", "hold", "hole", "holiday", "hollow", "home", "honey", "hood", "hope", "horn", "horror", "horse", "hospital", "host", "hotel", "hour", "hover", "hub", "huge", "human", "humble", "humor", "hundred", "hungry", "hunt", "hurdle", "hurry", "hurt", "husband", "hybrid", "ice", "icon", "idea", "identify", "idle", "ignore", "ill", "illegal", "illness", "image", "imitate", "immense", "immune", "impact", "impose", "improve", "impulse", "inch", "include", "income", "increase", "index", "indicate", "indoor", "industry", "infant", "inflict", "inform", "inhale", "inherit", "initial", "inject", "injury", "inmate", "inner", "innocent", "input", "inquiry", "insane", "insect", "inside", "inspire", "install", "intact", "interest", "into", "invest", "invite", "involve", "iron", "island", "isolate", "issue", "item", "ivory", "jacket", "jaguar", "jar", "jazz", "jealous", "jeans", "jelly", "jewel", "job", "join", "joke", "journey", "joy", "judge", "juice", "jump", "jungle", "junior", "junk", "just", "kangaroo", "keen", "keep", "ketchup", "key", "kick", "kid", "kidney", "kind", "kingdom", "kiss", "kit", "kitchen", "kite", "kitten", "kiwi", "knee", "knife", "knock", "know", "lab", "label", "labor", "ladder", "lady", "lake", "lamp", "language", "laptop", "large", "later", "latin", "laugh", "laundry", "lava", "law", "lawn", "lawsuit", "layer", "lazy", "leader", "leaf", "learn", "leave", "lecture", "left", "leg", "legal", "legend", "leisure", "lemon", "lend", "length", "lens", "leopard", "lesson", "letter", "level", "liar", "liberty", "library", "license", "life", "lift", "light", "like", "limb", "limit", "link", "lion", "liquid", "list", "little", "live", "lizard", "load", "loan", "lobster", "local", "lock", "logic", "lonely", "long", "loop", "lottery", "loud", "lounge", "love", "loyal", "lucky", "luggage", "lumber", "lunar", "lunch", "luxury", "lyrics", "machine", "mad", "magic", "magnet", "maid", "mail", "main", "major", "make", "mammal", "man", "manage", "mandate", "mango", "mansion", "manual", "maple", "marble", "march", "margin", "marine", "market", "marriage", "mask", "mass", "master", "match", "material", "math", "matrix", "matter", "maximum", "maze", "meadow", "mean", "measure", "meat", "mechanic", "medal", "media", "melody", "melt", "member", "memory", "mention", "menu", "mercy", "merge", "merit", "merry", "mesh", "message", "metal", "method", "middle", "midnight", "milk", "million", "mimic", "mind", "minimum", "minor", "minute", "miracle", "mirror", "misery", "miss", "mistake", "mix", "mixed", "mixture", "mobile", "model", "modify", "mom", "moment", "monitor", "monkey", "monster", "month", "moon", "moral", "more", "morning", "mosquito", "mother", "motion", "motor", "mountain", "mouse", "move", "movie", "much", "muffin", "mule", "multiply", "muscle", "museum", "mushroom", "music", "must", "mutual", "myself", "mystery", "myth", "naive", "name", "napkin", "narrow", "nasty", "nation", "nature", "near", "neck", "need", "negative", "neglect", "neither", "nephew", "nerve", "nest", "net", "network", "neutral", "never", "news", "next", "nice", "night", "noble", "noise", "nominee", "noodle", "normal", "north", "nose", "notable", "note", "nothing", "notice", "novel", "now", "nuclear", "number", "nurse", "nut", "oak", "obey", "object", "oblige", "obscure", "observe", "obtain", "obvious", "occur", "ocean", "october", "odor", "off", "offer", "office", "often", "oil", "okay", "old", "olive", "olympic", "omit", "once", "one", "onion", "online", "only", "open", "opera", "opinion", "oppose", "option", "orange", "orbit", "orchard", "order", "ordinary", "organ", "orient", "original", "orphan", "ostrich", "other", "outdoor", "outer", "output", "outside", "oval", "oven", "over", "own", "owner", "oxygen", "oyster", "ozone", "pact", "paddle", "page", "pair", "palace", "palm", "panda", "panel", "panic", "panther", "paper", "parade", "parent", "park", "parrot", "party", "pass", "patch", "path", "patient", "patrol", "pattern", "pause", "pave", "payment", "peace", "peanut", "pear", "peasant", "pelican", "pen", "penalty", "pencil", "people", "pepper", "perfect", "permit", "person", "pet", "phone", "photo", "phrase", "physical", "piano", "picnic", "picture", "piece", "pig", "pigeon", "pill", "pilot", "pink", "pioneer", "pipe", "pistol", "pitch", "pizza", "place", "planet", "plastic", "plate", "play", "please", "pledge", "pluck", "plug", "plunge", "poem", "poet", "point", "polar", "pole", "police", "pond", "pony", "pool", "popular", "portion", "position", "possible", "post", "potato", "pottery", "poverty", "powder", "power", "practice", "praise", "predict", "prefer", "prepare", "present", "pretty", "prevent", "price", "pride", "primary", "print", "priority", "prison", "private", "prize", "problem", "process", "produce", "profit", "program", "project", "promote", "proof", "property", "prosper", "protect", "proud", "provide", "public", "pudding", "pull", "pulp", "pulse", "pumpkin", "punch", "pupil", "puppy", "purchase", "purity", "purpose", "purse", "push", "put", "puzzle", "pyramid", "quality", "quantum", "quarter", "question", "quick", "quit", "quiz", "quote", "rabbit", "raccoon", "race", "rack", "radar", "radio", "rail", "rain", "raise", "rally", "ramp", "ranch", "random", "range", "rapid", "rare", "rate", "rather", "raven", "raw", "razor", "ready", "real", "reason", "rebel", "rebuild", "recall", "receive", "recipe", "record", "recycle", "reduce", "reflect", "reform", "refuse", "region", "regret", "regular", "reject", "relax", "release", "relief", "rely", "remain", "remember", "remind", "remove", "render", "renew", "rent", "reopen", "repair", "repeat", "replace", "report", "require", "rescue", "resemble", "resist", "resource", "response", "result", "retire", "retreat", "return", "reunion", "reveal", "review", "reward", "rhythm", "rib", "ribbon", "rice", "rich", "ride", "ridge", "rifle", "right", "rigid", "ring", "riot", "ripple", "risk", "ritual", "rival", "river", "road", "roast", "robot", "robust", "rocket", "romance", "roof", "rookie", "room", "rose", "rotate", "rough", "round", "route", "royal", "rubber", "rude", "rug", "rule", "run", "runway", "rural", "sad", "saddle", "sadness", "safe", "sail", "salad", "salmon", "salon", "salt", "salute", "same", "sample", "sand", "satisfy", "satoshi", "sauce", "sausage", "save", "say", "scale", "scan", "scare", "scatter", "scene", "scheme", "school", "science", "scissors", "scorpion", "scout", "scrap", "screen", "script", "scrub", "sea", "search", "season", "seat", "second", "secret", "section", "security", "seed", "seek", "segment", "select", "sell", "seminar", "senior", "sense", "sentence", "series", "service", "session", "settle", "setup", "seven", "shadow", "shaft", "shallow", "share", "shed", "shell", "sheriff", "shield", "shift", "shine", "ship", "shiver", "shock", "shoe", "shoot", "shop", "short", "shoulder", "shove", "shrimp", "shrug", "shuffle", "shy", "sibling", "sick", "side", "siege", "sight", "sign", "silent", "silk", "silly", "silver", "similar", "simple", "since", "sing", "siren", "sister", "situate", "six", "size", "skate", "sketch", "ski", "skill", "skin", "skirt", "skull", "slab", "slam", "sleep", "slender", "slice", "slide", "slight", "slim", "slogan", "slot", "slow", "slush", "small", "smart", "smile", "smoke", "smooth", "snack", "snake", "snap", "sniff", "snow", "soap", "soccer", "social", "sock", "soda", "soft", "solar", "soldier", "solid", "solution", "solve", "someone", "song", "soon", "sorry", "sort", "soul", "sound", "soup", "source", "south", "space", "spare", "spatial", "spawn", "speak", "special", "speed", "spell", "spend", "sphere", "spice", "spider", "spike", "spin", "spirit", "split", "spoil", "sponsor", "spoon", "sport", "spot", "spray", "spread", "spring", "spy", "square", "squeeze", "squirrel", "stable", "stadium", "staff", "stage", "stairs", "stamp", "stand", "start", "state", "stay", "steak", "steel", "stem", "step", "stereo", "stick", "still", "sting", "stock", "stomach", "stone", "stool", "story", "stove", "strategy", "street", "strike", "strong", "struggle", "student", "stuff", "stumble", "style", "subject", "submit", "subway", "success", "such", "sudden", "suffer", "sugar", "suggest", "suit", "summer", "sun", "sunny", "sunset", "super", "supply", "supreme", "sure", "surface", "surge", "surprise", "surround", "survey", "suspect", "sustain", "swallow", "swamp", "swap", "swarm", "swear", "sweet", "swift", "swim", "swing", "switch", "sword", "symbol", "symptom", "syrup", "system", "table", "tackle", "tag", "tail", "talent", "talk", "tank", "tape", "target", "task", "taste", "tattoo", "taxi", "teach", "team", "tell", "ten", "tenant", "tennis", "tent", "term", "test", "text", "thank", "that", "theme", "then", "theory", "there", "they", "thing", "this", "thought", "three", "thrive", "throw", "thumb", "thunder", "ticket", "tide", "tiger", "tilt", "timber", "time", "tiny", "tip", "tired", "tissue", "title", "toast", "tobacco", "today", "toddler", "toe", "together", "toilet", "token", "tomato", "tomorrow", "tone", "tongue", "tonight", "tool", "tooth", "top", "topic", "topple", "torch", "tornado", "tortoise", "toss", "total", "tourist", "toward", "tower", "town", "toy", "track", "trade", "traffic", "tragic", "train", "transfer", "trap", "trash", "travel", "tray", "treat", "tree", "trend", "trial", "tribe", "trick", "trigger", "trim", "trip", "trophy", "trouble", "truck", "true", "truly", "trumpet", "trust", "truth", "try", "tube", "tuition", "tumble", "tuna", "tunnel", "turkey", "turn", "turtle", "twelve", "twenty", "twice", "twin", "twist", "two", "type", "typical", "ugly", "umbrella", "unable", "unaware", "uncle", "uncover", "under", "undo", "unfair", "unfold", "unhappy", "uniform", "unique", "unit", "universe", "unknown", "unlock", "until", "unusual", "unveil", "update", "upgrade", "uphold", "upon", "upper", "upset", "urban", "urge", "usage", "use", "used", "useful", "useless", "usual", "utility", "vacant", "vacuum", "vague", "valid", "valley", "valve", "van", "vanish", "vapor", "various", "vast", "vault", "vehicle", "velvet", "vendor", "venture", "venue", "verb", "verify", "version", "very", "vessel", "veteran", "viable", "vibrant", "vicious", "victory", "video", "view", "village", "vintage", "violin", "virtual", "virus", "visa", "visit", "visual", "vital", "vivid", "vocal", "voice", "void", "volcano", "volume", "vote", "voyage", "wage", "wagon", "wait", "walk", "wall", "walnut", "want", "warfare", "warm", "warrior", "wash", "wasp", "waste", "water", "wave", "way", "wealth", "weapon", "wear", "weasel", "weather", "web", "wedding", "weekend", "weird", "welcome", "west", "wet", "whale", "what", "wheat", "wheel", "when", "where", "whip", "whisper", "wide", "width", "wife", "wild", "will", "win", "window", "wine", "wing", "wink", "winner", "winter", "wire", "wisdom", "wise", "wish", "witness", "wolf", "woman", "wonder", "wood", "wool", "word", "work", "world", "worry", "worth", "wrap", "wreck", "wrestle", "wrist", "write", "wrong", "yard", "year", "yellow", "you", "young", "youth", "zebra", "zero", "zone", "zoo"];
  return H2 = e, H2;
}
var U2, ml;
function IC() {
  if (ml)
    return U2;
  ml = 1;
  var e = ["abaisser", "abandon", "abdiquer", "abeille", "abolir", "aborder", "aboutir", "aboyer", "abrasif", "abreuver", "abriter", "abroger", "abrupt", "absence", "absolu", "absurde", "abusif", "abyssal", "académie", "acajou", "acarien", "accabler", "accepter", "acclamer", "accolade", "accroche", "accuser", "acerbe", "achat", "acheter", "aciduler", "acier", "acompte", "acquérir", "acronyme", "acteur", "actif", "actuel", "adepte", "adéquat", "adhésif", "adjectif", "adjuger", "admettre", "admirer", "adopter", "adorer", "adoucir", "adresse", "adroit", "adulte", "adverbe", "aérer", "aéronef", "affaire", "affecter", "affiche", "affreux", "affubler", "agacer", "agencer", "agile", "agiter", "agrafer", "agréable", "agrume", "aider", "aiguille", "ailier", "aimable", "aisance", "ajouter", "ajuster", "alarmer", "alchimie", "alerte", "algèbre", "algue", "aliéner", "aliment", "alléger", "alliage", "allouer", "allumer", "alourdir", "alpaga", "altesse", "alvéole", "amateur", "ambigu", "ambre", "aménager", "amertume", "amidon", "amiral", "amorcer", "amour", "amovible", "amphibie", "ampleur", "amusant", "analyse", "anaphore", "anarchie", "anatomie", "ancien", "anéantir", "angle", "angoisse", "anguleux", "animal", "annexer", "annonce", "annuel", "anodin", "anomalie", "anonyme", "anormal", "antenne", "antidote", "anxieux", "apaiser", "apéritif", "aplanir", "apologie", "appareil", "appeler", "apporter", "appuyer", "aquarium", "aqueduc", "arbitre", "arbuste", "ardeur", "ardoise", "argent", "arlequin", "armature", "armement", "armoire", "armure", "arpenter", "arracher", "arriver", "arroser", "arsenic", "artériel", "article", "aspect", "asphalte", "aspirer", "assaut", "asservir", "assiette", "associer", "assurer", "asticot", "astre", "astuce", "atelier", "atome", "atrium", "atroce", "attaque", "attentif", "attirer", "attraper", "aubaine", "auberge", "audace", "audible", "augurer", "aurore", "automne", "autruche", "avaler", "avancer", "avarice", "avenir", "averse", "aveugle", "aviateur", "avide", "avion", "aviser", "avoine", "avouer", "avril", "axial", "axiome", "badge", "bafouer", "bagage", "baguette", "baignade", "balancer", "balcon", "baleine", "balisage", "bambin", "bancaire", "bandage", "banlieue", "bannière", "banquier", "barbier", "baril", "baron", "barque", "barrage", "bassin", "bastion", "bataille", "bateau", "batterie", "baudrier", "bavarder", "belette", "bélier", "belote", "bénéfice", "berceau", "berger", "berline", "bermuda", "besace", "besogne", "bétail", "beurre", "biberon", "bicycle", "bidule", "bijou", "bilan", "bilingue", "billard", "binaire", "biologie", "biopsie", "biotype", "biscuit", "bison", "bistouri", "bitume", "bizarre", "blafard", "blague", "blanchir", "blessant", "blinder", "blond", "bloquer", "blouson", "bobard", "bobine", "boire", "boiser", "bolide", "bonbon", "bondir", "bonheur", "bonifier", "bonus", "bordure", "borne", "botte", "boucle", "boueux", "bougie", "boulon", "bouquin", "bourse", "boussole", "boutique", "boxeur", "branche", "brasier", "brave", "brebis", "brèche", "breuvage", "bricoler", "brigade", "brillant", "brioche", "brique", "brochure", "broder", "bronzer", "brousse", "broyeur", "brume", "brusque", "brutal", "bruyant", "buffle", "buisson", "bulletin", "bureau", "burin", "bustier", "butiner", "butoir", "buvable", "buvette", "cabanon", "cabine", "cachette", "cadeau", "cadre", "caféine", "caillou", "caisson", "calculer", "calepin", "calibre", "calmer", "calomnie", "calvaire", "camarade", "caméra", "camion", "campagne", "canal", "caneton", "canon", "cantine", "canular", "capable", "caporal", "caprice", "capsule", "capter", "capuche", "carabine", "carbone", "caresser", "caribou", "carnage", "carotte", "carreau", "carton", "cascade", "casier", "casque", "cassure", "causer", "caution", "cavalier", "caverne", "caviar", "cédille", "ceinture", "céleste", "cellule", "cendrier", "censurer", "central", "cercle", "cérébral", "cerise", "cerner", "cerveau", "cesser", "chagrin", "chaise", "chaleur", "chambre", "chance", "chapitre", "charbon", "chasseur", "chaton", "chausson", "chavirer", "chemise", "chenille", "chéquier", "chercher", "cheval", "chien", "chiffre", "chignon", "chimère", "chiot", "chlorure", "chocolat", "choisir", "chose", "chouette", "chrome", "chute", "cigare", "cigogne", "cimenter", "cinéma", "cintrer", "circuler", "cirer", "cirque", "citerne", "citoyen", "citron", "civil", "clairon", "clameur", "claquer", "classe", "clavier", "client", "cligner", "climat", "clivage", "cloche", "clonage", "cloporte", "cobalt", "cobra", "cocasse", "cocotier", "coder", "codifier", "coffre", "cogner", "cohésion", "coiffer", "coincer", "colère", "colibri", "colline", "colmater", "colonel", "combat", "comédie", "commande", "compact", "concert", "conduire", "confier", "congeler", "connoter", "consonne", "contact", "convexe", "copain", "copie", "corail", "corbeau", "cordage", "corniche", "corpus", "correct", "cortège", "cosmique", "costume", "coton", "coude", "coupure", "courage", "couteau", "couvrir", "coyote", "crabe", "crainte", "cravate", "crayon", "créature", "créditer", "crémeux", "creuser", "crevette", "cribler", "crier", "cristal", "critère", "croire", "croquer", "crotale", "crucial", "cruel", "crypter", "cubique", "cueillir", "cuillère", "cuisine", "cuivre", "culminer", "cultiver", "cumuler", "cupide", "curatif", "curseur", "cyanure", "cycle", "cylindre", "cynique", "daigner", "damier", "danger", "danseur", "dauphin", "débattre", "débiter", "déborder", "débrider", "débutant", "décaler", "décembre", "déchirer", "décider", "déclarer", "décorer", "décrire", "décupler", "dédale", "déductif", "déesse", "défensif", "défiler", "défrayer", "dégager", "dégivrer", "déglutir", "dégrafer", "déjeuner", "délice", "déloger", "demander", "demeurer", "démolir", "dénicher", "dénouer", "dentelle", "dénuder", "départ", "dépenser", "déphaser", "déplacer", "déposer", "déranger", "dérober", "désastre", "descente", "désert", "désigner", "désobéir", "dessiner", "destrier", "détacher", "détester", "détourer", "détresse", "devancer", "devenir", "deviner", "devoir", "diable", "dialogue", "diamant", "dicter", "différer", "digérer", "digital", "digne", "diluer", "dimanche", "diminuer", "dioxyde", "directif", "diriger", "discuter", "disposer", "dissiper", "distance", "divertir", "diviser", "docile", "docteur", "dogme", "doigt", "domaine", "domicile", "dompter", "donateur", "donjon", "donner", "dopamine", "dortoir", "dorure", "dosage", "doseur", "dossier", "dotation", "douanier", "double", "douceur", "douter", "doyen", "dragon", "draper", "dresser", "dribbler", "droiture", "duperie", "duplexe", "durable", "durcir", "dynastie", "éblouir", "écarter", "écharpe", "échelle", "éclairer", "éclipse", "éclore", "écluse", "école", "économie", "écorce", "écouter", "écraser", "écrémer", "écrivain", "écrou", "écume", "écureuil", "édifier", "éduquer", "effacer", "effectif", "effigie", "effort", "effrayer", "effusion", "égaliser", "égarer", "éjecter", "élaborer", "élargir", "électron", "élégant", "éléphant", "élève", "éligible", "élitisme", "éloge", "élucider", "éluder", "emballer", "embellir", "embryon", "émeraude", "émission", "emmener", "émotion", "émouvoir", "empereur", "employer", "emporter", "emprise", "émulsion", "encadrer", "enchère", "enclave", "encoche", "endiguer", "endosser", "endroit", "enduire", "énergie", "enfance", "enfermer", "enfouir", "engager", "engin", "englober", "énigme", "enjamber", "enjeu", "enlever", "ennemi", "ennuyeux", "enrichir", "enrobage", "enseigne", "entasser", "entendre", "entier", "entourer", "entraver", "énumérer", "envahir", "enviable", "envoyer", "enzyme", "éolien", "épaissir", "épargne", "épatant", "épaule", "épicerie", "épidémie", "épier", "épilogue", "épine", "épisode", "épitaphe", "époque", "épreuve", "éprouver", "épuisant", "équerre", "équipe", "ériger", "érosion", "erreur", "éruption", "escalier", "espadon", "espèce", "espiègle", "espoir", "esprit", "esquiver", "essayer", "essence", "essieu", "essorer", "estime", "estomac", "estrade", "étagère", "étaler", "étanche", "étatique", "éteindre", "étendoir", "éternel", "éthanol", "éthique", "ethnie", "étirer", "étoffer", "étoile", "étonnant", "étourdir", "étrange", "étroit", "étude", "euphorie", "évaluer", "évasion", "éventail", "évidence", "éviter", "évolutif", "évoquer", "exact", "exagérer", "exaucer", "exceller", "excitant", "exclusif", "excuse", "exécuter", "exemple", "exercer", "exhaler", "exhorter", "exigence", "exiler", "exister", "exotique", "expédier", "explorer", "exposer", "exprimer", "exquis", "extensif", "extraire", "exulter", "fable", "fabuleux", "facette", "facile", "facture", "faiblir", "falaise", "fameux", "famille", "farceur", "farfelu", "farine", "farouche", "fasciner", "fatal", "fatigue", "faucon", "fautif", "faveur", "favori", "fébrile", "féconder", "fédérer", "félin", "femme", "fémur", "fendoir", "féodal", "fermer", "féroce", "ferveur", "festival", "feuille", "feutre", "février", "fiasco", "ficeler", "fictif", "fidèle", "figure", "filature", "filetage", "filière", "filleul", "filmer", "filou", "filtrer", "financer", "finir", "fiole", "firme", "fissure", "fixer", "flairer", "flamme", "flasque", "flatteur", "fléau", "flèche", "fleur", "flexion", "flocon", "flore", "fluctuer", "fluide", "fluvial", "folie", "fonderie", "fongible", "fontaine", "forcer", "forgeron", "formuler", "fortune", "fossile", "foudre", "fougère", "fouiller", "foulure", "fourmi", "fragile", "fraise", "franchir", "frapper", "frayeur", "frégate", "freiner", "frelon", "frémir", "frénésie", "frère", "friable", "friction", "frisson", "frivole", "froid", "fromage", "frontal", "frotter", "fruit", "fugitif", "fuite", "fureur", "furieux", "furtif", "fusion", "futur", "gagner", "galaxie", "galerie", "gambader", "garantir", "gardien", "garnir", "garrigue", "gazelle", "gazon", "géant", "gélatine", "gélule", "gendarme", "général", "génie", "genou", "gentil", "géologie", "géomètre", "géranium", "germe", "gestuel", "geyser", "gibier", "gicler", "girafe", "givre", "glace", "glaive", "glisser", "globe", "gloire", "glorieux", "golfeur", "gomme", "gonfler", "gorge", "gorille", "goudron", "gouffre", "goulot", "goupille", "gourmand", "goutte", "graduel", "graffiti", "graine", "grand", "grappin", "gratuit", "gravir", "grenat", "griffure", "griller", "grimper", "grogner", "gronder", "grotte", "groupe", "gruger", "grutier", "gruyère", "guépard", "guerrier", "guide", "guimauve", "guitare", "gustatif", "gymnaste", "gyrostat", "habitude", "hachoir", "halte", "hameau", "hangar", "hanneton", "haricot", "harmonie", "harpon", "hasard", "hélium", "hématome", "herbe", "hérisson", "hermine", "héron", "hésiter", "heureux", "hiberner", "hibou", "hilarant", "histoire", "hiver", "homard", "hommage", "homogène", "honneur", "honorer", "honteux", "horde", "horizon", "horloge", "hormone", "horrible", "houleux", "housse", "hublot", "huileux", "humain", "humble", "humide", "humour", "hurler", "hydromel", "hygiène", "hymne", "hypnose", "idylle", "ignorer", "iguane", "illicite", "illusion", "image", "imbiber", "imiter", "immense", "immobile", "immuable", "impact", "impérial", "implorer", "imposer", "imprimer", "imputer", "incarner", "incendie", "incident", "incliner", "incolore", "indexer", "indice", "inductif", "inédit", "ineptie", "inexact", "infini", "infliger", "informer", "infusion", "ingérer", "inhaler", "inhiber", "injecter", "injure", "innocent", "inoculer", "inonder", "inscrire", "insecte", "insigne", "insolite", "inspirer", "instinct", "insulter", "intact", "intense", "intime", "intrigue", "intuitif", "inutile", "invasion", "inventer", "inviter", "invoquer", "ironique", "irradier", "irréel", "irriter", "isoler", "ivoire", "ivresse", "jaguar", "jaillir", "jambe", "janvier", "jardin", "jauger", "jaune", "javelot", "jetable", "jeton", "jeudi", "jeunesse", "joindre", "joncher", "jongler", "joueur", "jouissif", "journal", "jovial", "joyau", "joyeux", "jubiler", "jugement", "junior", "jupon", "juriste", "justice", "juteux", "juvénile", "kayak", "kimono", "kiosque", "label", "labial", "labourer", "lacérer", "lactose", "lagune", "laine", "laisser", "laitier", "lambeau", "lamelle", "lampe", "lanceur", "langage", "lanterne", "lapin", "largeur", "larme", "laurier", "lavabo", "lavoir", "lecture", "légal", "léger", "légume", "lessive", "lettre", "levier", "lexique", "lézard", "liasse", "libérer", "libre", "licence", "licorne", "liège", "lièvre", "ligature", "ligoter", "ligue", "limer", "limite", "limonade", "limpide", "linéaire", "lingot", "lionceau", "liquide", "lisière", "lister", "lithium", "litige", "littoral", "livreur", "logique", "lointain", "loisir", "lombric", "loterie", "louer", "lourd", "loutre", "louve", "loyal", "lubie", "lucide", "lucratif", "lueur", "lugubre", "luisant", "lumière", "lunaire", "lundi", "luron", "lutter", "luxueux", "machine", "magasin", "magenta", "magique", "maigre", "maillon", "maintien", "mairie", "maison", "majorer", "malaxer", "maléfice", "malheur", "malice", "mallette", "mammouth", "mandater", "maniable", "manquant", "manteau", "manuel", "marathon", "marbre", "marchand", "mardi", "maritime", "marqueur", "marron", "marteler", "mascotte", "massif", "matériel", "matière", "matraque", "maudire", "maussade", "mauve", "maximal", "méchant", "méconnu", "médaille", "médecin", "méditer", "méduse", "meilleur", "mélange", "mélodie", "membre", "mémoire", "menacer", "mener", "menhir", "mensonge", "mentor", "mercredi", "mérite", "merle", "messager", "mesure", "métal", "météore", "méthode", "métier", "meuble", "miauler", "microbe", "miette", "mignon", "migrer", "milieu", "million", "mimique", "mince", "minéral", "minimal", "minorer", "minute", "miracle", "miroiter", "missile", "mixte", "mobile", "moderne", "moelleux", "mondial", "moniteur", "monnaie", "monotone", "monstre", "montagne", "monument", "moqueur", "morceau", "morsure", "mortier", "moteur", "motif", "mouche", "moufle", "moulin", "mousson", "mouton", "mouvant", "multiple", "munition", "muraille", "murène", "murmure", "muscle", "muséum", "musicien", "mutation", "muter", "mutuel", "myriade", "myrtille", "mystère", "mythique", "nageur", "nappe", "narquois", "narrer", "natation", "nation", "nature", "naufrage", "nautique", "navire", "nébuleux", "nectar", "néfaste", "négation", "négliger", "négocier", "neige", "nerveux", "nettoyer", "neurone", "neutron", "neveu", "niche", "nickel", "nitrate", "niveau", "noble", "nocif", "nocturne", "noirceur", "noisette", "nomade", "nombreux", "nommer", "normatif", "notable", "notifier", "notoire", "nourrir", "nouveau", "novateur", "novembre", "novice", "nuage", "nuancer", "nuire", "nuisible", "numéro", "nuptial", "nuque", "nutritif", "obéir", "objectif", "obliger", "obscur", "observer", "obstacle", "obtenir", "obturer", "occasion", "occuper", "océan", "octobre", "octroyer", "octupler", "oculaire", "odeur", "odorant", "offenser", "officier", "offrir", "ogive", "oiseau", "oisillon", "olfactif", "olivier", "ombrage", "omettre", "onctueux", "onduler", "onéreux", "onirique", "opale", "opaque", "opérer", "opinion", "opportun", "opprimer", "opter", "optique", "orageux", "orange", "orbite", "ordonner", "oreille", "organe", "orgueil", "orifice", "ornement", "orque", "ortie", "osciller", "osmose", "ossature", "otarie", "ouragan", "ourson", "outil", "outrager", "ouvrage", "ovation", "oxyde", "oxygène", "ozone", "paisible", "palace", "palmarès", "palourde", "palper", "panache", "panda", "pangolin", "paniquer", "panneau", "panorama", "pantalon", "papaye", "papier", "papoter", "papyrus", "paradoxe", "parcelle", "paresse", "parfumer", "parler", "parole", "parrain", "parsemer", "partager", "parure", "parvenir", "passion", "pastèque", "paternel", "patience", "patron", "pavillon", "pavoiser", "payer", "paysage", "peigne", "peintre", "pelage", "pélican", "pelle", "pelouse", "peluche", "pendule", "pénétrer", "pénible", "pensif", "pénurie", "pépite", "péplum", "perdrix", "perforer", "période", "permuter", "perplexe", "persil", "perte", "peser", "pétale", "petit", "pétrir", "peuple", "pharaon", "phobie", "phoque", "photon", "phrase", "physique", "piano", "pictural", "pièce", "pierre", "pieuvre", "pilote", "pinceau", "pipette", "piquer", "pirogue", "piscine", "piston", "pivoter", "pixel", "pizza", "placard", "plafond", "plaisir", "planer", "plaque", "plastron", "plateau", "pleurer", "plexus", "pliage", "plomb", "plonger", "pluie", "plumage", "pochette", "poésie", "poète", "pointe", "poirier", "poisson", "poivre", "polaire", "policier", "pollen", "polygone", "pommade", "pompier", "ponctuel", "pondérer", "poney", "portique", "position", "posséder", "posture", "potager", "poteau", "potion", "pouce", "poulain", "poumon", "pourpre", "poussin", "pouvoir", "prairie", "pratique", "précieux", "prédire", "préfixe", "prélude", "prénom", "présence", "prétexte", "prévoir", "primitif", "prince", "prison", "priver", "problème", "procéder", "prodige", "profond", "progrès", "proie", "projeter", "prologue", "promener", "propre", "prospère", "protéger", "prouesse", "proverbe", "prudence", "pruneau", "psychose", "public", "puceron", "puiser", "pulpe", "pulsar", "punaise", "punitif", "pupitre", "purifier", "puzzle", "pyramide", "quasar", "querelle", "question", "quiétude", "quitter", "quotient", "racine", "raconter", "radieux", "ragondin", "raideur", "raisin", "ralentir", "rallonge", "ramasser", "rapide", "rasage", "ratisser", "ravager", "ravin", "rayonner", "réactif", "réagir", "réaliser", "réanimer", "recevoir", "réciter", "réclamer", "récolter", "recruter", "reculer", "recycler", "rédiger", "redouter", "refaire", "réflexe", "réformer", "refrain", "refuge", "régalien", "région", "réglage", "régulier", "réitérer", "rejeter", "rejouer", "relatif", "relever", "relief", "remarque", "remède", "remise", "remonter", "remplir", "remuer", "renard", "renfort", "renifler", "renoncer", "rentrer", "renvoi", "replier", "reporter", "reprise", "reptile", "requin", "réserve", "résineux", "résoudre", "respect", "rester", "résultat", "rétablir", "retenir", "réticule", "retomber", "retracer", "réunion", "réussir", "revanche", "revivre", "révolte", "révulsif", "richesse", "rideau", "rieur", "rigide", "rigoler", "rincer", "riposter", "risible", "risque", "rituel", "rival", "rivière", "rocheux", "romance", "rompre", "ronce", "rondin", "roseau", "rosier", "rotatif", "rotor", "rotule", "rouge", "rouille", "rouleau", "routine", "royaume", "ruban", "rubis", "ruche", "ruelle", "rugueux", "ruiner", "ruisseau", "ruser", "rustique", "rythme", "sabler", "saboter", "sabre", "sacoche", "safari", "sagesse", "saisir", "salade", "salive", "salon", "saluer", "samedi", "sanction", "sanglier", "sarcasme", "sardine", "saturer", "saugrenu", "saumon", "sauter", "sauvage", "savant", "savonner", "scalpel", "scandale", "scélérat", "scénario", "sceptre", "schéma", "science", "scinder", "score", "scrutin", "sculpter", "séance", "sécable", "sécher", "secouer", "sécréter", "sédatif", "séduire", "seigneur", "séjour", "sélectif", "semaine", "sembler", "semence", "séminal", "sénateur", "sensible", "sentence", "séparer", "séquence", "serein", "sergent", "sérieux", "serrure", "sérum", "service", "sésame", "sévir", "sevrage", "sextuple", "sidéral", "siècle", "siéger", "siffler", "sigle", "signal", "silence", "silicium", "simple", "sincère", "sinistre", "siphon", "sirop", "sismique", "situer", "skier", "social", "socle", "sodium", "soigneux", "soldat", "soleil", "solitude", "soluble", "sombre", "sommeil", "somnoler", "sonde", "songeur", "sonnette", "sonore", "sorcier", "sortir", "sosie", "sottise", "soucieux", "soudure", "souffle", "soulever", "soupape", "source", "soutirer", "souvenir", "spacieux", "spatial", "spécial", "sphère", "spiral", "stable", "station", "sternum", "stimulus", "stipuler", "strict", "studieux", "stupeur", "styliste", "sublime", "substrat", "subtil", "subvenir", "succès", "sucre", "suffixe", "suggérer", "suiveur", "sulfate", "superbe", "supplier", "surface", "suricate", "surmener", "surprise", "sursaut", "survie", "suspect", "syllabe", "symbole", "symétrie", "synapse", "syntaxe", "système", "tabac", "tablier", "tactile", "tailler", "talent", "talisman", "talonner", "tambour", "tamiser", "tangible", "tapis", "taquiner", "tarder", "tarif", "tartine", "tasse", "tatami", "tatouage", "taupe", "taureau", "taxer", "témoin", "temporel", "tenaille", "tendre", "teneur", "tenir", "tension", "terminer", "terne", "terrible", "tétine", "texte", "thème", "théorie", "thérapie", "thorax", "tibia", "tiède", "timide", "tirelire", "tiroir", "tissu", "titane", "titre", "tituber", "toboggan", "tolérant", "tomate", "tonique", "tonneau", "toponyme", "torche", "tordre", "tornade", "torpille", "torrent", "torse", "tortue", "totem", "toucher", "tournage", "tousser", "toxine", "traction", "trafic", "tragique", "trahir", "train", "trancher", "travail", "trèfle", "tremper", "trésor", "treuil", "triage", "tribunal", "tricoter", "trilogie", "triomphe", "tripler", "triturer", "trivial", "trombone", "tronc", "tropical", "troupeau", "tuile", "tulipe", "tumulte", "tunnel", "turbine", "tuteur", "tutoyer", "tuyau", "tympan", "typhon", "typique", "tyran", "ubuesque", "ultime", "ultrason", "unanime", "unifier", "union", "unique", "unitaire", "univers", "uranium", "urbain", "urticant", "usage", "usine", "usuel", "usure", "utile", "utopie", "vacarme", "vaccin", "vagabond", "vague", "vaillant", "vaincre", "vaisseau", "valable", "valise", "vallon", "valve", "vampire", "vanille", "vapeur", "varier", "vaseux", "vassal", "vaste", "vecteur", "vedette", "végétal", "véhicule", "veinard", "véloce", "vendredi", "vénérer", "venger", "venimeux", "ventouse", "verdure", "vérin", "vernir", "verrou", "verser", "vertu", "veston", "vétéran", "vétuste", "vexant", "vexer", "viaduc", "viande", "victoire", "vidange", "vidéo", "vignette", "vigueur", "vilain", "village", "vinaigre", "violon", "vipère", "virement", "virtuose", "virus", "visage", "viseur", "vision", "visqueux", "visuel", "vital", "vitesse", "viticole", "vitrine", "vivace", "vivipare", "vocation", "voguer", "voile", "voisin", "voiture", "volaille", "volcan", "voltiger", "volume", "vorace", "vortex", "voter", "vouloir", "voyage", "voyelle", "wagon", "xénon", "yacht", "zèbre", "zénith", "zeste", "zoologie"];
  return U2 = e, U2;
}
var $2, vl;
function kC() {
  if (vl)
    return $2;
  vl = 1;
  var e = ["abaco", "abbaglio", "abbinato", "abete", "abisso", "abolire", "abrasivo", "abrogato", "accadere", "accenno", "accusato", "acetone", "achille", "acido", "acqua", "acre", "acrilico", "acrobata", "acuto", "adagio", "addebito", "addome", "adeguato", "aderire", "adipe", "adottare", "adulare", "affabile", "affetto", "affisso", "affranto", "aforisma", "afoso", "africano", "agave", "agente", "agevole", "aggancio", "agire", "agitare", "agonismo", "agricolo", "agrumeto", "aguzzo", "alabarda", "alato", "albatro", "alberato", "albo", "albume", "alce", "alcolico", "alettone", "alfa", "algebra", "aliante", "alibi", "alimento", "allagato", "allegro", "allievo", "allodola", "allusivo", "almeno", "alogeno", "alpaca", "alpestre", "altalena", "alterno", "alticcio", "altrove", "alunno", "alveolo", "alzare", "amalgama", "amanita", "amarena", "ambito", "ambrato", "ameba", "america", "ametista", "amico", "ammasso", "ammenda", "ammirare", "ammonito", "amore", "ampio", "ampliare", "amuleto", "anacardo", "anagrafe", "analista", "anarchia", "anatra", "anca", "ancella", "ancora", "andare", "andrea", "anello", "angelo", "angolare", "angusto", "anima", "annegare", "annidato", "anno", "annuncio", "anonimo", "anticipo", "anzi", "apatico", "apertura", "apode", "apparire", "appetito", "appoggio", "approdo", "appunto", "aprile", "arabica", "arachide", "aragosta", "araldica", "arancio", "aratura", "arazzo", "arbitro", "archivio", "ardito", "arenile", "argento", "argine", "arguto", "aria", "armonia", "arnese", "arredato", "arringa", "arrosto", "arsenico", "arso", "artefice", "arzillo", "asciutto", "ascolto", "asepsi", "asettico", "asfalto", "asino", "asola", "aspirato", "aspro", "assaggio", "asse", "assoluto", "assurdo", "asta", "astenuto", "astice", "astratto", "atavico", "ateismo", "atomico", "atono", "attesa", "attivare", "attorno", "attrito", "attuale", "ausilio", "austria", "autista", "autonomo", "autunno", "avanzato", "avere", "avvenire", "avviso", "avvolgere", "azione", "azoto", "azzimo", "azzurro", "babele", "baccano", "bacino", "baco", "badessa", "badilata", "bagnato", "baita", "balcone", "baldo", "balena", "ballata", "balzano", "bambino", "bandire", "baraonda", "barbaro", "barca", "baritono", "barlume", "barocco", "basilico", "basso", "batosta", "battuto", "baule", "bava", "bavosa", "becco", "beffa", "belgio", "belva", "benda", "benevole", "benigno", "benzina", "bere", "berlina", "beta", "bibita", "bici", "bidone", "bifido", "biga", "bilancia", "bimbo", "binocolo", "biologo", "bipede", "bipolare", "birbante", "birra", "biscotto", "bisesto", "bisnonno", "bisonte", "bisturi", "bizzarro", "blando", "blatta", "bollito", "bonifico", "bordo", "bosco", "botanico", "bottino", "bozzolo", "braccio", "bradipo", "brama", "branca", "bravura", "bretella", "brevetto", "brezza", "briglia", "brillante", "brindare", "broccolo", "brodo", "bronzina", "brullo", "bruno", "bubbone", "buca", "budino", "buffone", "buio", "bulbo", "buono", "burlone", "burrasca", "bussola", "busta", "cadetto", "caduco", "calamaro", "calcolo", "calesse", "calibro", "calmo", "caloria", "cambusa", "camerata", "camicia", "cammino", "camola", "campale", "canapa", "candela", "cane", "canino", "canotto", "cantina", "capace", "capello", "capitolo", "capogiro", "cappero", "capra", "capsula", "carapace", "carcassa", "cardo", "carisma", "carovana", "carretto", "cartolina", "casaccio", "cascata", "caserma", "caso", "cassone", "castello", "casuale", "catasta", "catena", "catrame", "cauto", "cavillo", "cedibile", "cedrata", "cefalo", "celebre", "cellulare", "cena", "cenone", "centesimo", "ceramica", "cercare", "certo", "cerume", "cervello", "cesoia", "cespo", "ceto", "chela", "chiaro", "chicca", "chiedere", "chimera", "china", "chirurgo", "chitarra", "ciao", "ciclismo", "cifrare", "cigno", "cilindro", "ciottolo", "circa", "cirrosi", "citrico", "cittadino", "ciuffo", "civetta", "civile", "classico", "clinica", "cloro", "cocco", "codardo", "codice", "coerente", "cognome", "collare", "colmato", "colore", "colposo", "coltivato", "colza", "coma", "cometa", "commando", "comodo", "computer", "comune", "conciso", "condurre", "conferma", "congelare", "coniuge", "connesso", "conoscere", "consumo", "continuo", "convegno", "coperto", "copione", "coppia", "copricapo", "corazza", "cordata", "coricato", "cornice", "corolla", "corpo", "corredo", "corsia", "cortese", "cosmico", "costante", "cottura", "covato", "cratere", "cravatta", "creato", "credere", "cremoso", "crescita", "creta", "criceto", "crinale", "crisi", "critico", "croce", "cronaca", "crostata", "cruciale", "crusca", "cucire", "cuculo", "cugino", "cullato", "cupola", "curatore", "cursore", "curvo", "cuscino", "custode", "dado", "daino", "dalmata", "damerino", "daniela", "dannoso", "danzare", "datato", "davanti", "davvero", "debutto", "decennio", "deciso", "declino", "decollo", "decreto", "dedicato", "definito", "deforme", "degno", "delegare", "delfino", "delirio", "delta", "demenza", "denotato", "dentro", "deposito", "derapata", "derivare", "deroga", "descritto", "deserto", "desiderio", "desumere", "detersivo", "devoto", "diametro", "dicembre", "diedro", "difeso", "diffuso", "digerire", "digitale", "diluvio", "dinamico", "dinnanzi", "dipinto", "diploma", "dipolo", "diradare", "dire", "dirotto", "dirupo", "disagio", "discreto", "disfare", "disgelo", "disposto", "distanza", "disumano", "dito", "divano", "divelto", "dividere", "divorato", "doblone", "docente", "doganale", "dogma", "dolce", "domato", "domenica", "dominare", "dondolo", "dono", "dormire", "dote", "dottore", "dovuto", "dozzina", "drago", "druido", "dubbio", "dubitare", "ducale", "duna", "duomo", "duplice", "duraturo", "ebano", "eccesso", "ecco", "eclissi", "economia", "edera", "edicola", "edile", "editoria", "educare", "egemonia", "egli", "egoismo", "egregio", "elaborato", "elargire", "elegante", "elencato", "eletto", "elevare", "elfico", "elica", "elmo", "elsa", "eluso", "emanato", "emblema", "emesso", "emiro", "emotivo", "emozione", "empirico", "emulo", "endemico", "enduro", "energia", "enfasi", "enoteca", "entrare", "enzima", "epatite", "epilogo", "episodio", "epocale", "eppure", "equatore", "erario", "erba", "erboso", "erede", "eremita", "erigere", "ermetico", "eroe", "erosivo", "errante", "esagono", "esame", "esanime", "esaudire", "esca", "esempio", "esercito", "esibito", "esigente", "esistere", "esito", "esofago", "esortato", "esoso", "espanso", "espresso", "essenza", "esso", "esteso", "estimare", "estonia", "estroso", "esultare", "etilico", "etnico", "etrusco", "etto", "euclideo", "europa", "evaso", "evidenza", "evitato", "evoluto", "evviva", "fabbrica", "faccenda", "fachiro", "falco", "famiglia", "fanale", "fanfara", "fango", "fantasma", "fare", "farfalla", "farinoso", "farmaco", "fascia", "fastoso", "fasullo", "faticare", "fato", "favoloso", "febbre", "fecola", "fede", "fegato", "felpa", "feltro", "femmina", "fendere", "fenomeno", "fermento", "ferro", "fertile", "fessura", "festivo", "fetta", "feudo", "fiaba", "fiducia", "fifa", "figurato", "filo", "finanza", "finestra", "finire", "fiore", "fiscale", "fisico", "fiume", "flacone", "flamenco", "flebo", "flemma", "florido", "fluente", "fluoro", "fobico", "focaccia", "focoso", "foderato", "foglio", "folata", "folclore", "folgore", "fondente", "fonetico", "fonia", "fontana", "forbito", "forchetta", "foresta", "formica", "fornaio", "foro", "fortezza", "forzare", "fosfato", "fosso", "fracasso", "frana", "frassino", "fratello", "freccetta", "frenata", "fresco", "frigo", "frollino", "fronde", "frugale", "frutta", "fucilata", "fucsia", "fuggente", "fulmine", "fulvo", "fumante", "fumetto", "fumoso", "fune", "funzione", "fuoco", "furbo", "furgone", "furore", "fuso", "futile", "gabbiano", "gaffe", "galateo", "gallina", "galoppo", "gambero", "gamma", "garanzia", "garbo", "garofano", "garzone", "gasdotto", "gasolio", "gastrico", "gatto", "gaudio", "gazebo", "gazzella", "geco", "gelatina", "gelso", "gemello", "gemmato", "gene", "genitore", "gennaio", "genotipo", "gergo", "ghepardo", "ghiaccio", "ghisa", "giallo", "gilda", "ginepro", "giocare", "gioiello", "giorno", "giove", "girato", "girone", "gittata", "giudizio", "giurato", "giusto", "globulo", "glutine", "gnomo", "gobba", "golf", "gomito", "gommone", "gonfio", "gonna", "governo", "gracile", "grado", "grafico", "grammo", "grande", "grattare", "gravoso", "grazia", "greca", "gregge", "grifone", "grigio", "grinza", "grotta", "gruppo", "guadagno", "guaio", "guanto", "guardare", "gufo", "guidare", "ibernato", "icona", "identico", "idillio", "idolo", "idra", "idrico", "idrogeno", "igiene", "ignaro", "ignorato", "ilare", "illeso", "illogico", "illudere", "imballo", "imbevuto", "imbocco", "imbuto", "immane", "immerso", "immolato", "impacco", "impeto", "impiego", "importo", "impronta", "inalare", "inarcare", "inattivo", "incanto", "incendio", "inchino", "incisivo", "incluso", "incontro", "incrocio", "incubo", "indagine", "india", "indole", "inedito", "infatti", "infilare", "inflitto", "ingaggio", "ingegno", "inglese", "ingordo", "ingrosso", "innesco", "inodore", "inoltrare", "inondato", "insano", "insetto", "insieme", "insonnia", "insulina", "intasato", "intero", "intonaco", "intuito", "inumidire", "invalido", "invece", "invito", "iperbole", "ipnotico", "ipotesi", "ippica", "iride", "irlanda", "ironico", "irrigato", "irrorare", "isolato", "isotopo", "isterico", "istituto", "istrice", "italia", "iterare", "labbro", "labirinto", "lacca", "lacerato", "lacrima", "lacuna", "laddove", "lago", "lampo", "lancetta", "lanterna", "lardoso", "larga", "laringe", "lastra", "latenza", "latino", "lattuga", "lavagna", "lavoro", "legale", "leggero", "lembo", "lentezza", "lenza", "leone", "lepre", "lesivo", "lessato", "lesto", "letterale", "leva", "levigato", "libero", "lido", "lievito", "lilla", "limatura", "limitare", "limpido", "lineare", "lingua", "liquido", "lira", "lirica", "lisca", "lite", "litigio", "livrea", "locanda", "lode", "logica", "lombare", "londra", "longevo", "loquace", "lorenzo", "loto", "lotteria", "luce", "lucidato", "lumaca", "luminoso", "lungo", "lupo", "luppolo", "lusinga", "lusso", "lutto", "macabro", "macchina", "macero", "macinato", "madama", "magico", "maglia", "magnete", "magro", "maiolica", "malafede", "malgrado", "malinteso", "malsano", "malto", "malumore", "mana", "mancia", "mandorla", "mangiare", "manifesto", "mannaro", "manovra", "mansarda", "mantide", "manubrio", "mappa", "maratona", "marcire", "maretta", "marmo", "marsupio", "maschera", "massaia", "mastino", "materasso", "matricola", "mattone", "maturo", "mazurca", "meandro", "meccanico", "mecenate", "medesimo", "meditare", "mega", "melassa", "melis", "melodia", "meninge", "meno", "mensola", "mercurio", "merenda", "merlo", "meschino", "mese", "messere", "mestolo", "metallo", "metodo", "mettere", "miagolare", "mica", "micelio", "michele", "microbo", "midollo", "miele", "migliore", "milano", "milite", "mimosa", "minerale", "mini", "minore", "mirino", "mirtillo", "miscela", "missiva", "misto", "misurare", "mitezza", "mitigare", "mitra", "mittente", "mnemonico", "modello", "modifica", "modulo", "mogano", "mogio", "mole", "molosso", "monastero", "monco", "mondina", "monetario", "monile", "monotono", "monsone", "montato", "monviso", "mora", "mordere", "morsicato", "mostro", "motivato", "motosega", "motto", "movenza", "movimento", "mozzo", "mucca", "mucosa", "muffa", "mughetto", "mugnaio", "mulatto", "mulinello", "multiplo", "mummia", "munto", "muovere", "murale", "musa", "muscolo", "musica", "mutevole", "muto", "nababbo", "nafta", "nanometro", "narciso", "narice", "narrato", "nascere", "nastrare", "naturale", "nautica", "naviglio", "nebulosa", "necrosi", "negativo", "negozio", "nemmeno", "neofita", "neretto", "nervo", "nessuno", "nettuno", "neutrale", "neve", "nevrotico", "nicchia", "ninfa", "nitido", "nobile", "nocivo", "nodo", "nome", "nomina", "nordico", "normale", "norvegese", "nostrano", "notare", "notizia", "notturno", "novella", "nucleo", "nulla", "numero", "nuovo", "nutrire", "nuvola", "nuziale", "oasi", "obbedire", "obbligo", "obelisco", "oblio", "obolo", "obsoleto", "occasione", "occhio", "occidente", "occorrere", "occultare", "ocra", "oculato", "odierno", "odorare", "offerta", "offrire", "offuscato", "oggetto", "oggi", "ognuno", "olandese", "olfatto", "oliato", "oliva", "ologramma", "oltre", "omaggio", "ombelico", "ombra", "omega", "omissione", "ondoso", "onere", "onice", "onnivoro", "onorevole", "onta", "operato", "opinione", "opposto", "oracolo", "orafo", "ordine", "orecchino", "orefice", "orfano", "organico", "origine", "orizzonte", "orma", "ormeggio", "ornativo", "orologio", "orrendo", "orribile", "ortensia", "ortica", "orzata", "orzo", "osare", "oscurare", "osmosi", "ospedale", "ospite", "ossa", "ossidare", "ostacolo", "oste", "otite", "otre", "ottagono", "ottimo", "ottobre", "ovale", "ovest", "ovino", "oviparo", "ovocito", "ovunque", "ovviare", "ozio", "pacchetto", "pace", "pacifico", "padella", "padrone", "paese", "paga", "pagina", "palazzina", "palesare", "pallido", "palo", "palude", "pandoro", "pannello", "paolo", "paonazzo", "paprica", "parabola", "parcella", "parere", "pargolo", "pari", "parlato", "parola", "partire", "parvenza", "parziale", "passivo", "pasticca", "patacca", "patologia", "pattume", "pavone", "peccato", "pedalare", "pedonale", "peggio", "peloso", "penare", "pendice", "penisola", "pennuto", "penombra", "pensare", "pentola", "pepe", "pepita", "perbene", "percorso", "perdonato", "perforare", "pergamena", "periodo", "permesso", "perno", "perplesso", "persuaso", "pertugio", "pervaso", "pesatore", "pesista", "peso", "pestifero", "petalo", "pettine", "petulante", "pezzo", "piacere", "pianta", "piattino", "piccino", "picozza", "piega", "pietra", "piffero", "pigiama", "pigolio", "pigro", "pila", "pilifero", "pillola", "pilota", "pimpante", "pineta", "pinna", "pinolo", "pioggia", "piombo", "piramide", "piretico", "pirite", "pirolisi", "pitone", "pizzico", "placebo", "planare", "plasma", "platano", "plenario", "pochezza", "poderoso", "podismo", "poesia", "poggiare", "polenta", "poligono", "pollice", "polmonite", "polpetta", "polso", "poltrona", "polvere", "pomice", "pomodoro", "ponte", "popoloso", "porfido", "poroso", "porpora", "porre", "portata", "posa", "positivo", "possesso", "postulato", "potassio", "potere", "pranzo", "prassi", "pratica", "precluso", "predica", "prefisso", "pregiato", "prelievo", "premere", "prenotare", "preparato", "presenza", "pretesto", "prevalso", "prima", "principe", "privato", "problema", "procura", "produrre", "profumo", "progetto", "prolunga", "promessa", "pronome", "proposta", "proroga", "proteso", "prova", "prudente", "prugna", "prurito", "psiche", "pubblico", "pudica", "pugilato", "pugno", "pulce", "pulito", "pulsante", "puntare", "pupazzo", "pupilla", "puro", "quadro", "qualcosa", "quasi", "querela", "quota", "raccolto", "raddoppio", "radicale", "radunato", "raffica", "ragazzo", "ragione", "ragno", "ramarro", "ramingo", "ramo", "randagio", "rantolare", "rapato", "rapina", "rappreso", "rasatura", "raschiato", "rasente", "rassegna", "rastrello", "rata", "ravveduto", "reale", "recepire", "recinto", "recluta", "recondito", "recupero", "reddito", "redimere", "regalato", "registro", "regola", "regresso", "relazione", "remare", "remoto", "renna", "replica", "reprimere", "reputare", "resa", "residente", "responso", "restauro", "rete", "retina", "retorica", "rettifica", "revocato", "riassunto", "ribadire", "ribelle", "ribrezzo", "ricarica", "ricco", "ricevere", "riciclato", "ricordo", "ricreduto", "ridicolo", "ridurre", "rifasare", "riflesso", "riforma", "rifugio", "rigare", "rigettato", "righello", "rilassato", "rilevato", "rimanere", "rimbalzo", "rimedio", "rimorchio", "rinascita", "rincaro", "rinforzo", "rinnovo", "rinomato", "rinsavito", "rintocco", "rinuncia", "rinvenire", "riparato", "ripetuto", "ripieno", "riportare", "ripresa", "ripulire", "risata", "rischio", "riserva", "risibile", "riso", "rispetto", "ristoro", "risultato", "risvolto", "ritardo", "ritegno", "ritmico", "ritrovo", "riunione", "riva", "riverso", "rivincita", "rivolto", "rizoma", "roba", "robotico", "robusto", "roccia", "roco", "rodaggio", "rodere", "roditore", "rogito", "rollio", "romantico", "rompere", "ronzio", "rosolare", "rospo", "rotante", "rotondo", "rotula", "rovescio", "rubizzo", "rubrica", "ruga", "rullino", "rumine", "rumoroso", "ruolo", "rupe", "russare", "rustico", "sabato", "sabbiare", "sabotato", "sagoma", "salasso", "saldatura", "salgemma", "salivare", "salmone", "salone", "saltare", "saluto", "salvo", "sapere", "sapido", "saporito", "saraceno", "sarcasmo", "sarto", "sassoso", "satellite", "satira", "satollo", "saturno", "savana", "savio", "saziato", "sbadiglio", "sbalzo", "sbancato", "sbarra", "sbattere", "sbavare", "sbendare", "sbirciare", "sbloccato", "sbocciato", "sbrinare", "sbruffone", "sbuffare", "scabroso", "scadenza", "scala", "scambiare", "scandalo", "scapola", "scarso", "scatenare", "scavato", "scelto", "scenico", "scettro", "scheda", "schiena", "sciarpa", "scienza", "scindere", "scippo", "sciroppo", "scivolo", "sclerare", "scodella", "scolpito", "scomparto", "sconforto", "scoprire", "scorta", "scossone", "scozzese", "scriba", "scrollare", "scrutinio", "scuderia", "scultore", "scuola", "scuro", "scusare", "sdebitare", "sdoganare", "seccatura", "secondo", "sedano", "seggiola", "segnalato", "segregato", "seguito", "selciato", "selettivo", "sella", "selvaggio", "semaforo", "sembrare", "seme", "seminato", "sempre", "senso", "sentire", "sepolto", "sequenza", "serata", "serbato", "sereno", "serio", "serpente", "serraglio", "servire", "sestina", "setola", "settimana", "sfacelo", "sfaldare", "sfamato", "sfarzoso", "sfaticato", "sfera", "sfida", "sfilato", "sfinge", "sfocato", "sfoderare", "sfogo", "sfoltire", "sforzato", "sfratto", "sfruttato", "sfuggito", "sfumare", "sfuso", "sgabello", "sgarbato", "sgonfiare", "sgorbio", "sgrassato", "sguardo", "sibilo", "siccome", "sierra", "sigla", "signore", "silenzio", "sillaba", "simbolo", "simpatico", "simulato", "sinfonia", "singolo", "sinistro", "sino", "sintesi", "sinusoide", "sipario", "sisma", "sistole", "situato", "slitta", "slogatura", "sloveno", "smarrito", "smemorato", "smentito", "smeraldo", "smilzo", "smontare", "smottato", "smussato", "snellire", "snervato", "snodo", "sobbalzo", "sobrio", "soccorso", "sociale", "sodale", "soffitto", "sogno", "soldato", "solenne", "solido", "sollazzo", "solo", "solubile", "solvente", "somatico", "somma", "sonda", "sonetto", "sonnifero", "sopire", "soppeso", "sopra", "sorgere", "sorpasso", "sorriso", "sorso", "sorteggio", "sorvolato", "sospiro", "sosta", "sottile", "spada", "spalla", "spargere", "spatola", "spavento", "spazzola", "specie", "spedire", "spegnere", "spelatura", "speranza", "spessore", "spettrale", "spezzato", "spia", "spigoloso", "spillato", "spinoso", "spirale", "splendido", "sportivo", "sposo", "spranga", "sprecare", "spronato", "spruzzo", "spuntino", "squillo", "sradicare", "srotolato", "stabile", "stacco", "staffa", "stagnare", "stampato", "stantio", "starnuto", "stasera", "statuto", "stelo", "steppa", "sterzo", "stiletto", "stima", "stirpe", "stivale", "stizzoso", "stonato", "storico", "strappo", "stregato", "stridulo", "strozzare", "strutto", "stuccare", "stufo", "stupendo", "subentro", "succoso", "sudore", "suggerito", "sugo", "sultano", "suonare", "superbo", "supporto", "surgelato", "surrogato", "sussurro", "sutura", "svagare", "svedese", "sveglio", "svelare", "svenuto", "svezia", "sviluppo", "svista", "svizzera", "svolta", "svuotare", "tabacco", "tabulato", "tacciare", "taciturno", "tale", "talismano", "tampone", "tannino", "tara", "tardivo", "targato", "tariffa", "tarpare", "tartaruga", "tasto", "tattico", "taverna", "tavolata", "tazza", "teca", "tecnico", "telefono", "temerario", "tempo", "temuto", "tendone", "tenero", "tensione", "tentacolo", "teorema", "terme", "terrazzo", "terzetto", "tesi", "tesserato", "testato", "tetro", "tettoia", "tifare", "tigella", "timbro", "tinto", "tipico", "tipografo", "tiraggio", "tiro", "titanio", "titolo", "titubante", "tizio", "tizzone", "toccare", "tollerare", "tolto", "tombola", "tomo", "tonfo", "tonsilla", "topazio", "topologia", "toppa", "torba", "tornare", "torrone", "tortora", "toscano", "tossire", "tostatura", "totano", "trabocco", "trachea", "trafila", "tragedia", "tralcio", "tramonto", "transito", "trapano", "trarre", "trasloco", "trattato", "trave", "treccia", "tremolio", "trespolo", "tributo", "tricheco", "trifoglio", "trillo", "trincea", "trio", "tristezza", "triturato", "trivella", "tromba", "trono", "troppo", "trottola", "trovare", "truccato", "tubatura", "tuffato", "tulipano", "tumulto", "tunisia", "turbare", "turchino", "tuta", "tutela", "ubicato", "uccello", "uccisore", "udire", "uditivo", "uffa", "ufficio", "uguale", "ulisse", "ultimato", "umano", "umile", "umorismo", "uncinetto", "ungere", "ungherese", "unicorno", "unificato", "unisono", "unitario", "unte", "uovo", "upupa", "uragano", "urgenza", "urlo", "usanza", "usato", "uscito", "usignolo", "usuraio", "utensile", "utilizzo", "utopia", "vacante", "vaccinato", "vagabondo", "vagliato", "valanga", "valgo", "valico", "valletta", "valoroso", "valutare", "valvola", "vampata", "vangare", "vanitoso", "vano", "vantaggio", "vanvera", "vapore", "varano", "varcato", "variante", "vasca", "vedetta", "vedova", "veduto", "vegetale", "veicolo", "velcro", "velina", "velluto", "veloce", "venato", "vendemmia", "vento", "verace", "verbale", "vergogna", "verifica", "vero", "verruca", "verticale", "vescica", "vessillo", "vestale", "veterano", "vetrina", "vetusto", "viandante", "vibrante", "vicenda", "vichingo", "vicinanza", "vidimare", "vigilia", "vigneto", "vigore", "vile", "villano", "vimini", "vincitore", "viola", "vipera", "virgola", "virologo", "virulento", "viscoso", "visione", "vispo", "vissuto", "visura", "vita", "vitello", "vittima", "vivanda", "vivido", "viziare", "voce", "voga", "volatile", "volere", "volpe", "voragine", "vulcano", "zampogna", "zanna", "zappato", "zattera", "zavorra", "zefiro", "zelante", "zelo", "zenzero", "zerbino", "zibetto", "zinco", "zircone", "zitto", "zolla", "zotico", "zucchero", "zufolo", "zulu", "zuppa"];
  return $2 = e, $2;
}
var j2, yl;
function OC() {
  if (yl)
    return j2;
  yl = 1;
  var e = ["あいこくしん", "あいさつ", "あいだ", "あおぞら", "あかちゃん", "あきる", "あけがた", "あける", "あこがれる", "あさい", "あさひ", "あしあと", "あじわう", "あずかる", "あずき", "あそぶ", "あたえる", "あたためる", "あたりまえ", "あたる", "あつい", "あつかう", "あっしゅく", "あつまり", "あつめる", "あてな", "あてはまる", "あひる", "あぶら", "あぶる", "あふれる", "あまい", "あまど", "あまやかす", "あまり", "あみもの", "あめりか", "あやまる", "あゆむ", "あらいぐま", "あらし", "あらすじ", "あらためる", "あらゆる", "あらわす", "ありがとう", "あわせる", "あわてる", "あんい", "あんがい", "あんこ", "あんぜん", "あんてい", "あんない", "あんまり", "いいだす", "いおん", "いがい", "いがく", "いきおい", "いきなり", "いきもの", "いきる", "いくじ", "いくぶん", "いけばな", "いけん", "いこう", "いこく", "いこつ", "いさましい", "いさん", "いしき", "いじゅう", "いじょう", "いじわる", "いずみ", "いずれ", "いせい", "いせえび", "いせかい", "いせき", "いぜん", "いそうろう", "いそがしい", "いだい", "いだく", "いたずら", "いたみ", "いたりあ", "いちおう", "いちじ", "いちど", "いちば", "いちぶ", "いちりゅう", "いつか", "いっしゅん", "いっせい", "いっそう", "いったん", "いっち", "いってい", "いっぽう", "いてざ", "いてん", "いどう", "いとこ", "いない", "いなか", "いねむり", "いのち", "いのる", "いはつ", "いばる", "いはん", "いびき", "いひん", "いふく", "いへん", "いほう", "いみん", "いもうと", "いもたれ", "いもり", "いやがる", "いやす", "いよかん", "いよく", "いらい", "いらすと", "いりぐち", "いりょう", "いれい", "いれもの", "いれる", "いろえんぴつ", "いわい", "いわう", "いわかん", "いわば", "いわゆる", "いんげんまめ", "いんさつ", "いんしょう", "いんよう", "うえき", "うえる", "うおざ", "うがい", "うかぶ", "うかべる", "うきわ", "うくらいな", "うくれれ", "うけたまわる", "うけつけ", "うけとる", "うけもつ", "うける", "うごかす", "うごく", "うこん", "うさぎ", "うしなう", "うしろがみ", "うすい", "うすぎ", "うすぐらい", "うすめる", "うせつ", "うちあわせ", "うちがわ", "うちき", "うちゅう", "うっかり", "うつくしい", "うったえる", "うつる", "うどん", "うなぎ", "うなじ", "うなずく", "うなる", "うねる", "うのう", "うぶげ", "うぶごえ", "うまれる", "うめる", "うもう", "うやまう", "うよく", "うらがえす", "うらぐち", "うらない", "うりあげ", "うりきれ", "うるさい", "うれしい", "うれゆき", "うれる", "うろこ", "うわき", "うわさ", "うんこう", "うんちん", "うんてん", "うんどう", "えいえん", "えいが", "えいきょう", "えいご", "えいせい", "えいぶん", "えいよう", "えいわ", "えおり", "えがお", "えがく", "えきたい", "えくせる", "えしゃく", "えすて", "えつらん", "えのぐ", "えほうまき", "えほん", "えまき", "えもじ", "えもの", "えらい", "えらぶ", "えりあ", "えんえん", "えんかい", "えんぎ", "えんげき", "えんしゅう", "えんぜつ", "えんそく", "えんちょう", "えんとつ", "おいかける", "おいこす", "おいしい", "おいつく", "おうえん", "おうさま", "おうじ", "おうせつ", "おうたい", "おうふく", "おうべい", "おうよう", "おえる", "おおい", "おおう", "おおどおり", "おおや", "おおよそ", "おかえり", "おかず", "おがむ", "おかわり", "おぎなう", "おきる", "おくさま", "おくじょう", "おくりがな", "おくる", "おくれる", "おこす", "おこなう", "おこる", "おさえる", "おさない", "おさめる", "おしいれ", "おしえる", "おじぎ", "おじさん", "おしゃれ", "おそらく", "おそわる", "おたがい", "おたく", "おだやか", "おちつく", "おっと", "おつり", "おでかけ", "おとしもの", "おとなしい", "おどり", "おどろかす", "おばさん", "おまいり", "おめでとう", "おもいで", "おもう", "おもたい", "おもちゃ", "おやつ", "おやゆび", "およぼす", "おらんだ", "おろす", "おんがく", "おんけい", "おんしゃ", "おんせん", "おんだん", "おんちゅう", "おんどけい", "かあつ", "かいが", "がいき", "がいけん", "がいこう", "かいさつ", "かいしゃ", "かいすいよく", "かいぜん", "かいぞうど", "かいつう", "かいてん", "かいとう", "かいふく", "がいへき", "かいほう", "かいよう", "がいらい", "かいわ", "かえる", "かおり", "かかえる", "かがく", "かがし", "かがみ", "かくご", "かくとく", "かざる", "がぞう", "かたい", "かたち", "がちょう", "がっきゅう", "がっこう", "がっさん", "がっしょう", "かなざわし", "かのう", "がはく", "かぶか", "かほう", "かほご", "かまう", "かまぼこ", "かめれおん", "かゆい", "かようび", "からい", "かるい", "かろう", "かわく", "かわら", "がんか", "かんけい", "かんこう", "かんしゃ", "かんそう", "かんたん", "かんち", "がんばる", "きあい", "きあつ", "きいろ", "ぎいん", "きうい", "きうん", "きえる", "きおう", "きおく", "きおち", "きおん", "きかい", "きかく", "きかんしゃ", "ききて", "きくばり", "きくらげ", "きけんせい", "きこう", "きこえる", "きこく", "きさい", "きさく", "きさま", "きさらぎ", "ぎじかがく", "ぎしき", "ぎじたいけん", "ぎじにってい", "ぎじゅつしゃ", "きすう", "きせい", "きせき", "きせつ", "きそう", "きぞく", "きぞん", "きたえる", "きちょう", "きつえん", "ぎっちり", "きつつき", "きつね", "きてい", "きどう", "きどく", "きない", "きなが", "きなこ", "きぬごし", "きねん", "きのう", "きのした", "きはく", "きびしい", "きひん", "きふく", "きぶん", "きぼう", "きほん", "きまる", "きみつ", "きむずかしい", "きめる", "きもだめし", "きもち", "きもの", "きゃく", "きやく", "ぎゅうにく", "きよう", "きょうりゅう", "きらい", "きらく", "きりん", "きれい", "きれつ", "きろく", "ぎろん", "きわめる", "ぎんいろ", "きんかくじ", "きんじょ", "きんようび", "ぐあい", "くいず", "くうかん", "くうき", "くうぐん", "くうこう", "ぐうせい", "くうそう", "ぐうたら", "くうふく", "くうぼ", "くかん", "くきょう", "くげん", "ぐこう", "くさい", "くさき", "くさばな", "くさる", "くしゃみ", "くしょう", "くすのき", "くすりゆび", "くせげ", "くせん", "ぐたいてき", "くださる", "くたびれる", "くちこみ", "くちさき", "くつした", "ぐっすり", "くつろぐ", "くとうてん", "くどく", "くなん", "くねくね", "くのう", "くふう", "くみあわせ", "くみたてる", "くめる", "くやくしょ", "くらす", "くらべる", "くるま", "くれる", "くろう", "くわしい", "ぐんかん", "ぐんしょく", "ぐんたい", "ぐんて", "けあな", "けいかく", "けいけん", "けいこ", "けいさつ", "げいじゅつ", "けいたい", "げいのうじん", "けいれき", "けいろ", "けおとす", "けおりもの", "げきか", "げきげん", "げきだん", "げきちん", "げきとつ", "げきは", "げきやく", "げこう", "げこくじょう", "げざい", "けさき", "げざん", "けしき", "けしごむ", "けしょう", "げすと", "けたば", "けちゃっぷ", "けちらす", "けつあつ", "けつい", "けつえき", "けっこん", "けつじょ", "けっせき", "けってい", "けつまつ", "げつようび", "げつれい", "けつろん", "げどく", "けとばす", "けとる", "けなげ", "けなす", "けなみ", "けぬき", "げねつ", "けねん", "けはい", "げひん", "けぶかい", "げぼく", "けまり", "けみかる", "けむし", "けむり", "けもの", "けらい", "けろけろ", "けわしい", "けんい", "けんえつ", "けんお", "けんか", "げんき", "けんげん", "けんこう", "けんさく", "けんしゅう", "けんすう", "げんそう", "けんちく", "けんてい", "けんとう", "けんない", "けんにん", "げんぶつ", "けんま", "けんみん", "けんめい", "けんらん", "けんり", "こあくま", "こいぬ", "こいびと", "ごうい", "こうえん", "こうおん", "こうかん", "ごうきゅう", "ごうけい", "こうこう", "こうさい", "こうじ", "こうすい", "ごうせい", "こうそく", "こうたい", "こうちゃ", "こうつう", "こうてい", "こうどう", "こうない", "こうはい", "ごうほう", "ごうまん", "こうもく", "こうりつ", "こえる", "こおり", "ごかい", "ごがつ", "ごかん", "こくご", "こくさい", "こくとう", "こくない", "こくはく", "こぐま", "こけい", "こける", "ここのか", "こころ", "こさめ", "こしつ", "こすう", "こせい", "こせき", "こぜん", "こそだて", "こたい", "こたえる", "こたつ", "こちょう", "こっか", "こつこつ", "こつばん", "こつぶ", "こてい", "こてん", "ことがら", "ことし", "ことば", "ことり", "こなごな", "こねこね", "このまま", "このみ", "このよ", "ごはん", "こひつじ", "こふう", "こふん", "こぼれる", "ごまあぶら", "こまかい", "ごますり", "こまつな", "こまる", "こむぎこ", "こもじ", "こもち", "こもの", "こもん", "こやく", "こやま", "こゆう", "こゆび", "こよい", "こよう", "こりる", "これくしょん", "ころっけ", "こわもて", "こわれる", "こんいん", "こんかい", "こんき", "こんしゅう", "こんすい", "こんだて", "こんとん", "こんなん", "こんびに", "こんぽん", "こんまけ", "こんや", "こんれい", "こんわく", "ざいえき", "さいかい", "さいきん", "ざいげん", "ざいこ", "さいしょ", "さいせい", "ざいたく", "ざいちゅう", "さいてき", "ざいりょう", "さうな", "さかいし", "さがす", "さかな", "さかみち", "さがる", "さぎょう", "さくし", "さくひん", "さくら", "さこく", "さこつ", "さずかる", "ざせき", "さたん", "さつえい", "ざつおん", "ざっか", "ざつがく", "さっきょく", "ざっし", "さつじん", "ざっそう", "さつたば", "さつまいも", "さてい", "さといも", "さとう", "さとおや", "さとし", "さとる", "さのう", "さばく", "さびしい", "さべつ", "さほう", "さほど", "さます", "さみしい", "さみだれ", "さむけ", "さめる", "さやえんどう", "さゆう", "さよう", "さよく", "さらだ", "ざるそば", "さわやか", "さわる", "さんいん", "さんか", "さんきゃく", "さんこう", "さんさい", "ざんしょ", "さんすう", "さんせい", "さんそ", "さんち", "さんま", "さんみ", "さんらん", "しあい", "しあげ", "しあさって", "しあわせ", "しいく", "しいん", "しうち", "しえい", "しおけ", "しかい", "しかく", "じかん", "しごと", "しすう", "じだい", "したうけ", "したぎ", "したて", "したみ", "しちょう", "しちりん", "しっかり", "しつじ", "しつもん", "してい", "してき", "してつ", "じてん", "じどう", "しなぎれ", "しなもの", "しなん", "しねま", "しねん", "しのぐ", "しのぶ", "しはい", "しばかり", "しはつ", "しはらい", "しはん", "しひょう", "しふく", "じぶん", "しへい", "しほう", "しほん", "しまう", "しまる", "しみん", "しむける", "じむしょ", "しめい", "しめる", "しもん", "しゃいん", "しゃうん", "しゃおん", "じゃがいも", "しやくしょ", "しゃくほう", "しゃけん", "しゃこ", "しゃざい", "しゃしん", "しゃせん", "しゃそう", "しゃたい", "しゃちょう", "しゃっきん", "じゃま", "しゃりん", "しゃれい", "じゆう", "じゅうしょ", "しゅくはく", "じゅしん", "しゅっせき", "しゅみ", "しゅらば", "じゅんばん", "しょうかい", "しょくたく", "しょっけん", "しょどう", "しょもつ", "しらせる", "しらべる", "しんか", "しんこう", "じんじゃ", "しんせいじ", "しんちく", "しんりん", "すあげ", "すあし", "すあな", "ずあん", "すいえい", "すいか", "すいとう", "ずいぶん", "すいようび", "すうがく", "すうじつ", "すうせん", "すおどり", "すきま", "すくう", "すくない", "すける", "すごい", "すこし", "ずさん", "すずしい", "すすむ", "すすめる", "すっかり", "ずっしり", "ずっと", "すてき", "すてる", "すねる", "すのこ", "すはだ", "すばらしい", "ずひょう", "ずぶぬれ", "すぶり", "すふれ", "すべて", "すべる", "ずほう", "すぼん", "すまい", "すめし", "すもう", "すやき", "すらすら", "するめ", "すれちがう", "すろっと", "すわる", "すんぜん", "すんぽう", "せあぶら", "せいかつ", "せいげん", "せいじ", "せいよう", "せおう", "せかいかん", "せきにん", "せきむ", "せきゆ", "せきらんうん", "せけん", "せこう", "せすじ", "せたい", "せたけ", "せっかく", "せっきゃく", "ぜっく", "せっけん", "せっこつ", "せっさたくま", "せつぞく", "せつだん", "せつでん", "せっぱん", "せつび", "せつぶん", "せつめい", "せつりつ", "せなか", "せのび", "せはば", "せびろ", "せぼね", "せまい", "せまる", "せめる", "せもたれ", "せりふ", "ぜんあく", "せんい", "せんえい", "せんか", "せんきょ", "せんく", "せんげん", "ぜんご", "せんさい", "せんしゅ", "せんすい", "せんせい", "せんぞ", "せんたく", "せんちょう", "せんてい", "せんとう", "せんぬき", "せんねん", "せんぱい", "ぜんぶ", "ぜんぽう", "せんむ", "せんめんじょ", "せんもん", "せんやく", "せんゆう", "せんよう", "ぜんら", "ぜんりゃく", "せんれい", "せんろ", "そあく", "そいとげる", "そいね", "そうがんきょう", "そうき", "そうご", "そうしん", "そうだん", "そうなん", "そうび", "そうめん", "そうり", "そえもの", "そえん", "そがい", "そげき", "そこう", "そこそこ", "そざい", "そしな", "そせい", "そせん", "そそぐ", "そだてる", "そつう", "そつえん", "そっかん", "そつぎょう", "そっけつ", "そっこう", "そっせん", "そっと", "そとがわ", "そとづら", "そなえる", "そなた", "そふぼ", "そぼく", "そぼろ", "そまつ", "そまる", "そむく", "そむりえ", "そめる", "そもそも", "そよかぜ", "そらまめ", "そろう", "そんかい", "そんけい", "そんざい", "そんしつ", "そんぞく", "そんちょう", "ぞんび", "ぞんぶん", "そんみん", "たあい", "たいいん", "たいうん", "たいえき", "たいおう", "だいがく", "たいき", "たいぐう", "たいけん", "たいこ", "たいざい", "だいじょうぶ", "だいすき", "たいせつ", "たいそう", "だいたい", "たいちょう", "たいてい", "だいどころ", "たいない", "たいねつ", "たいのう", "たいはん", "だいひょう", "たいふう", "たいへん", "たいほ", "たいまつばな", "たいみんぐ", "たいむ", "たいめん", "たいやき", "たいよう", "たいら", "たいりょく", "たいる", "たいわん", "たうえ", "たえる", "たおす", "たおる", "たおれる", "たかい", "たかね", "たきび", "たくさん", "たこく", "たこやき", "たさい", "たしざん", "だじゃれ", "たすける", "たずさわる", "たそがれ", "たたかう", "たたく", "ただしい", "たたみ", "たちばな", "だっかい", "だっきゃく", "だっこ", "だっしゅつ", "だったい", "たてる", "たとえる", "たなばた", "たにん", "たぬき", "たのしみ", "たはつ", "たぶん", "たべる", "たぼう", "たまご", "たまる", "だむる", "ためいき", "ためす", "ためる", "たもつ", "たやすい", "たよる", "たらす", "たりきほんがん", "たりょう", "たりる", "たると", "たれる", "たれんと", "たろっと", "たわむれる", "だんあつ", "たんい", "たんおん", "たんか", "たんき", "たんけん", "たんご", "たんさん", "たんじょうび", "だんせい", "たんそく", "たんたい", "だんち", "たんてい", "たんとう", "だんな", "たんにん", "だんねつ", "たんのう", "たんぴん", "だんぼう", "たんまつ", "たんめい", "だんれつ", "だんろ", "だんわ", "ちあい", "ちあん", "ちいき", "ちいさい", "ちえん", "ちかい", "ちから", "ちきゅう", "ちきん", "ちけいず", "ちけん", "ちこく", "ちさい", "ちしき", "ちしりょう", "ちせい", "ちそう", "ちたい", "ちたん", "ちちおや", "ちつじょ", "ちてき", "ちてん", "ちぬき", "ちぬり", "ちのう", "ちひょう", "ちへいせん", "ちほう", "ちまた", "ちみつ", "ちみどろ", "ちめいど", "ちゃんこなべ", "ちゅうい", "ちゆりょく", "ちょうし", "ちょさくけん", "ちらし", "ちらみ", "ちりがみ", "ちりょう", "ちるど", "ちわわ", "ちんたい", "ちんもく", "ついか", "ついたち", "つうか", "つうじょう", "つうはん", "つうわ", "つかう", "つかれる", "つくね", "つくる", "つけね", "つける", "つごう", "つたえる", "つづく", "つつじ", "つつむ", "つとめる", "つながる", "つなみ", "つねづね", "つのる", "つぶす", "つまらない", "つまる", "つみき", "つめたい", "つもり", "つもる", "つよい", "つるぼ", "つるみく", "つわもの", "つわり", "てあし", "てあて", "てあみ", "ていおん", "ていか", "ていき", "ていけい", "ていこく", "ていさつ", "ていし", "ていせい", "ていたい", "ていど", "ていねい", "ていひょう", "ていへん", "ていぼう", "てうち", "ておくれ", "てきとう", "てくび", "でこぼこ", "てさぎょう", "てさげ", "てすり", "てそう", "てちがい", "てちょう", "てつがく", "てつづき", "でっぱ", "てつぼう", "てつや", "でぬかえ", "てぬき", "てぬぐい", "てのひら", "てはい", "てぶくろ", "てふだ", "てほどき", "てほん", "てまえ", "てまきずし", "てみじか", "てみやげ", "てらす", "てれび", "てわけ", "てわたし", "でんあつ", "てんいん", "てんかい", "てんき", "てんぐ", "てんけん", "てんごく", "てんさい", "てんし", "てんすう", "でんち", "てんてき", "てんとう", "てんない", "てんぷら", "てんぼうだい", "てんめつ", "てんらんかい", "でんりょく", "でんわ", "どあい", "といれ", "どうかん", "とうきゅう", "どうぐ", "とうし", "とうむぎ", "とおい", "とおか", "とおく", "とおす", "とおる", "とかい", "とかす", "ときおり", "ときどき", "とくい", "とくしゅう", "とくてん", "とくに", "とくべつ", "とけい", "とける", "とこや", "とさか", "としょかん", "とそう", "とたん", "とちゅう", "とっきゅう", "とっくん", "とつぜん", "とつにゅう", "とどける", "ととのえる", "とない", "となえる", "となり", "とのさま", "とばす", "どぶがわ", "とほう", "とまる", "とめる", "ともだち", "ともる", "どようび", "とらえる", "とんかつ", "どんぶり", "ないかく", "ないこう", "ないしょ", "ないす", "ないせん", "ないそう", "なおす", "ながい", "なくす", "なげる", "なこうど", "なさけ", "なたでここ", "なっとう", "なつやすみ", "ななおし", "なにごと", "なにもの", "なにわ", "なのか", "なふだ", "なまいき", "なまえ", "なまみ", "なみだ", "なめらか", "なめる", "なやむ", "ならう", "ならび", "ならぶ", "なれる", "なわとび", "なわばり", "にあう", "にいがた", "にうけ", "におい", "にかい", "にがて", "にきび", "にくしみ", "にくまん", "にげる", "にさんかたんそ", "にしき", "にせもの", "にちじょう", "にちようび", "にっか", "にっき", "にっけい", "にっこう", "にっさん", "にっしょく", "にっすう", "にっせき", "にってい", "になう", "にほん", "にまめ", "にもつ", "にやり", "にゅういん", "にりんしゃ", "にわとり", "にんい", "にんか", "にんき", "にんげん", "にんしき", "にんずう", "にんそう", "にんたい", "にんち", "にんてい", "にんにく", "にんぷ", "にんまり", "にんむ", "にんめい", "にんよう", "ぬいくぎ", "ぬかす", "ぬぐいとる", "ぬぐう", "ぬくもり", "ぬすむ", "ぬまえび", "ぬめり", "ぬらす", "ぬんちゃく", "ねあげ", "ねいき", "ねいる", "ねいろ", "ねぐせ", "ねくたい", "ねくら", "ねこぜ", "ねこむ", "ねさげ", "ねすごす", "ねそべる", "ねだん", "ねつい", "ねっしん", "ねつぞう", "ねったいぎょ", "ねぶそく", "ねふだ", "ねぼう", "ねほりはほり", "ねまき", "ねまわし", "ねみみ", "ねむい", "ねむたい", "ねもと", "ねらう", "ねわざ", "ねんいり", "ねんおし", "ねんかん", "ねんきん", "ねんぐ", "ねんざ", "ねんし", "ねんちゃく", "ねんど", "ねんぴ", "ねんぶつ", "ねんまつ", "ねんりょう", "ねんれい", "のいず", "のおづま", "のがす", "のきなみ", "のこぎり", "のこす", "のこる", "のせる", "のぞく", "のぞむ", "のたまう", "のちほど", "のっく", "のばす", "のはら", "のべる", "のぼる", "のみもの", "のやま", "のらいぬ", "のらねこ", "のりもの", "のりゆき", "のれん", "のんき", "ばあい", "はあく", "ばあさん", "ばいか", "ばいく", "はいけん", "はいご", "はいしん", "はいすい", "はいせん", "はいそう", "はいち", "ばいばい", "はいれつ", "はえる", "はおる", "はかい", "ばかり", "はかる", "はくしゅ", "はけん", "はこぶ", "はさみ", "はさん", "はしご", "ばしょ", "はしる", "はせる", "ぱそこん", "はそん", "はたん", "はちみつ", "はつおん", "はっかく", "はづき", "はっきり", "はっくつ", "はっけん", "はっこう", "はっさん", "はっしん", "はったつ", "はっちゅう", "はってん", "はっぴょう", "はっぽう", "はなす", "はなび", "はにかむ", "はぶらし", "はみがき", "はむかう", "はめつ", "はやい", "はやし", "はらう", "はろうぃん", "はわい", "はんい", "はんえい", "はんおん", "はんかく", "はんきょう", "ばんぐみ", "はんこ", "はんしゃ", "はんすう", "はんだん", "ぱんち", "ぱんつ", "はんてい", "はんとし", "はんのう", "はんぱ", "はんぶん", "はんぺん", "はんぼうき", "はんめい", "はんらん", "はんろん", "ひいき", "ひうん", "ひえる", "ひかく", "ひかり", "ひかる", "ひかん", "ひくい", "ひけつ", "ひこうき", "ひこく", "ひさい", "ひさしぶり", "ひさん", "びじゅつかん", "ひしょ", "ひそか", "ひそむ", "ひたむき", "ひだり", "ひたる", "ひつぎ", "ひっこし", "ひっし", "ひつじゅひん", "ひっす", "ひつぜん", "ぴったり", "ぴっちり", "ひつよう", "ひてい", "ひとごみ", "ひなまつり", "ひなん", "ひねる", "ひはん", "ひびく", "ひひょう", "ひほう", "ひまわり", "ひまん", "ひみつ", "ひめい", "ひめじし", "ひやけ", "ひやす", "ひよう", "びょうき", "ひらがな", "ひらく", "ひりつ", "ひりょう", "ひるま", "ひるやすみ", "ひれい", "ひろい", "ひろう", "ひろき", "ひろゆき", "ひんかく", "ひんけつ", "ひんこん", "ひんしゅ", "ひんそう", "ぴんち", "ひんぱん", "びんぼう", "ふあん", "ふいうち", "ふうけい", "ふうせん", "ぷうたろう", "ふうとう", "ふうふ", "ふえる", "ふおん", "ふかい", "ふきん", "ふくざつ", "ふくぶくろ", "ふこう", "ふさい", "ふしぎ", "ふじみ", "ふすま", "ふせい", "ふせぐ", "ふそく", "ぶたにく", "ふたん", "ふちょう", "ふつう", "ふつか", "ふっかつ", "ふっき", "ふっこく", "ぶどう", "ふとる", "ふとん", "ふのう", "ふはい", "ふひょう", "ふへん", "ふまん", "ふみん", "ふめつ", "ふめん", "ふよう", "ふりこ", "ふりる", "ふるい", "ふんいき", "ぶんがく", "ぶんぐ", "ふんしつ", "ぶんせき", "ふんそう", "ぶんぽう", "へいあん", "へいおん", "へいがい", "へいき", "へいげん", "へいこう", "へいさ", "へいしゃ", "へいせつ", "へいそ", "へいたく", "へいてん", "へいねつ", "へいわ", "へきが", "へこむ", "べにいろ", "べにしょうが", "へらす", "へんかん", "べんきょう", "べんごし", "へんさい", "へんたい", "べんり", "ほあん", "ほいく", "ぼうぎょ", "ほうこく", "ほうそう", "ほうほう", "ほうもん", "ほうりつ", "ほえる", "ほおん", "ほかん", "ほきょう", "ぼきん", "ほくろ", "ほけつ", "ほけん", "ほこう", "ほこる", "ほしい", "ほしつ", "ほしゅ", "ほしょう", "ほせい", "ほそい", "ほそく", "ほたて", "ほたる", "ぽちぶくろ", "ほっきょく", "ほっさ", "ほったん", "ほとんど", "ほめる", "ほんい", "ほんき", "ほんけ", "ほんしつ", "ほんやく", "まいにち", "まかい", "まかせる", "まがる", "まける", "まこと", "まさつ", "まじめ", "ますく", "まぜる", "まつり", "まとめ", "まなぶ", "まぬけ", "まねく", "まほう", "まもる", "まゆげ", "まよう", "まろやか", "まわす", "まわり", "まわる", "まんが", "まんきつ", "まんぞく", "まんなか", "みいら", "みうち", "みえる", "みがく", "みかた", "みかん", "みけん", "みこん", "みじかい", "みすい", "みすえる", "みせる", "みっか", "みつかる", "みつける", "みてい", "みとめる", "みなと", "みなみかさい", "みねらる", "みのう", "みのがす", "みほん", "みもと", "みやげ", "みらい", "みりょく", "みわく", "みんか", "みんぞく", "むいか", "むえき", "むえん", "むかい", "むかう", "むかえ", "むかし", "むぎちゃ", "むける", "むげん", "むさぼる", "むしあつい", "むしば", "むじゅん", "むしろ", "むすう", "むすこ", "むすぶ", "むすめ", "むせる", "むせん", "むちゅう", "むなしい", "むのう", "むやみ", "むよう", "むらさき", "むりょう", "むろん", "めいあん", "めいうん", "めいえん", "めいかく", "めいきょく", "めいさい", "めいし", "めいそう", "めいぶつ", "めいれい", "めいわく", "めぐまれる", "めざす", "めした", "めずらしい", "めだつ", "めまい", "めやす", "めんきょ", "めんせき", "めんどう", "もうしあげる", "もうどうけん", "もえる", "もくし", "もくてき", "もくようび", "もちろん", "もどる", "もらう", "もんく", "もんだい", "やおや", "やける", "やさい", "やさしい", "やすい", "やすたろう", "やすみ", "やせる", "やそう", "やたい", "やちん", "やっと", "やっぱり", "やぶる", "やめる", "ややこしい", "やよい", "やわらかい", "ゆうき", "ゆうびんきょく", "ゆうべ", "ゆうめい", "ゆけつ", "ゆしゅつ", "ゆせん", "ゆそう", "ゆたか", "ゆちゃく", "ゆでる", "ゆにゅう", "ゆびわ", "ゆらい", "ゆれる", "ようい", "ようか", "ようきゅう", "ようじ", "ようす", "ようちえん", "よかぜ", "よかん", "よきん", "よくせい", "よくぼう", "よけい", "よごれる", "よさん", "よしゅう", "よそう", "よそく", "よっか", "よてい", "よどがわく", "よねつ", "よやく", "よゆう", "よろこぶ", "よろしい", "らいう", "らくがき", "らくご", "らくさつ", "らくだ", "らしんばん", "らせん", "らぞく", "らたい", "らっか", "られつ", "りえき", "りかい", "りきさく", "りきせつ", "りくぐん", "りくつ", "りけん", "りこう", "りせい", "りそう", "りそく", "りてん", "りねん", "りゆう", "りゅうがく", "りよう", "りょうり", "りょかん", "りょくちゃ", "りょこう", "りりく", "りれき", "りろん", "りんご", "るいけい", "るいさい", "るいじ", "るいせき", "るすばん", "るりがわら", "れいかん", "れいぎ", "れいせい", "れいぞうこ", "れいとう", "れいぼう", "れきし", "れきだい", "れんあい", "れんけい", "れんこん", "れんさい", "れんしゅう", "れんぞく", "れんらく", "ろうか", "ろうご", "ろうじん", "ろうそく", "ろくが", "ろこつ", "ろじうら", "ろしゅつ", "ろせん", "ろてん", "ろめん", "ろれつ", "ろんぎ", "ろんぱ", "ろんぶん", "ろんり", "わかす", "わかめ", "わかやま", "わかれる", "わしつ", "わじまし", "わすれもの", "わらう", "われる"];
  return j2 = e, j2;
}
var V2, gl;
function PC() {
  if (gl)
    return V2;
  gl = 1;
  var e = ["ábaco", "abdomen", "abeja", "abierto", "abogado", "abono", "aborto", "abrazo", "abrir", "abuelo", "abuso", "acabar", "academia", "acceso", "acción", "aceite", "acelga", "acento", "aceptar", "ácido", "aclarar", "acné", "acoger", "acoso", "activo", "acto", "actriz", "actuar", "acudir", "acuerdo", "acusar", "adicto", "admitir", "adoptar", "adorno", "aduana", "adulto", "aéreo", "afectar", "afición", "afinar", "afirmar", "ágil", "agitar", "agonía", "agosto", "agotar", "agregar", "agrio", "agua", "agudo", "águila", "aguja", "ahogo", "ahorro", "aire", "aislar", "ajedrez", "ajeno", "ajuste", "alacrán", "alambre", "alarma", "alba", "álbum", "alcalde", "aldea", "alegre", "alejar", "alerta", "aleta", "alfiler", "alga", "algodón", "aliado", "aliento", "alivio", "alma", "almeja", "almíbar", "altar", "alteza", "altivo", "alto", "altura", "alumno", "alzar", "amable", "amante", "amapola", "amargo", "amasar", "ámbar", "ámbito", "ameno", "amigo", "amistad", "amor", "amparo", "amplio", "ancho", "anciano", "ancla", "andar", "andén", "anemia", "ángulo", "anillo", "ánimo", "anís", "anotar", "antena", "antiguo", "antojo", "anual", "anular", "anuncio", "añadir", "añejo", "año", "apagar", "aparato", "apetito", "apio", "aplicar", "apodo", "aporte", "apoyo", "aprender", "aprobar", "apuesta", "apuro", "arado", "araña", "arar", "árbitro", "árbol", "arbusto", "archivo", "arco", "arder", "ardilla", "arduo", "área", "árido", "aries", "armonía", "arnés", "aroma", "arpa", "arpón", "arreglo", "arroz", "arruga", "arte", "artista", "asa", "asado", "asalto", "ascenso", "asegurar", "aseo", "asesor", "asiento", "asilo", "asistir", "asno", "asombro", "áspero", "astilla", "astro", "astuto", "asumir", "asunto", "atajo", "ataque", "atar", "atento", "ateo", "ático", "atleta", "átomo", "atraer", "atroz", "atún", "audaz", "audio", "auge", "aula", "aumento", "ausente", "autor", "aval", "avance", "avaro", "ave", "avellana", "avena", "avestruz", "avión", "aviso", "ayer", "ayuda", "ayuno", "azafrán", "azar", "azote", "azúcar", "azufre", "azul", "baba", "babor", "bache", "bahía", "baile", "bajar", "balanza", "balcón", "balde", "bambú", "banco", "banda", "baño", "barba", "barco", "barniz", "barro", "báscula", "bastón", "basura", "batalla", "batería", "batir", "batuta", "baúl", "bazar", "bebé", "bebida", "bello", "besar", "beso", "bestia", "bicho", "bien", "bingo", "blanco", "bloque", "blusa", "boa", "bobina", "bobo", "boca", "bocina", "boda", "bodega", "boina", "bola", "bolero", "bolsa", "bomba", "bondad", "bonito", "bono", "bonsái", "borde", "borrar", "bosque", "bote", "botín", "bóveda", "bozal", "bravo", "brazo", "brecha", "breve", "brillo", "brinco", "brisa", "broca", "broma", "bronce", "brote", "bruja", "brusco", "bruto", "buceo", "bucle", "bueno", "buey", "bufanda", "bufón", "búho", "buitre", "bulto", "burbuja", "burla", "burro", "buscar", "butaca", "buzón", "caballo", "cabeza", "cabina", "cabra", "cacao", "cadáver", "cadena", "caer", "café", "caída", "caimán", "caja", "cajón", "cal", "calamar", "calcio", "caldo", "calidad", "calle", "calma", "calor", "calvo", "cama", "cambio", "camello", "camino", "campo", "cáncer", "candil", "canela", "canguro", "canica", "canto", "caña", "cañón", "caoba", "caos", "capaz", "capitán", "capote", "captar", "capucha", "cara", "carbón", "cárcel", "careta", "carga", "cariño", "carne", "carpeta", "carro", "carta", "casa", "casco", "casero", "caspa", "castor", "catorce", "catre", "caudal", "causa", "cazo", "cebolla", "ceder", "cedro", "celda", "célebre", "celoso", "célula", "cemento", "ceniza", "centro", "cerca", "cerdo", "cereza", "cero", "cerrar", "certeza", "césped", "cetro", "chacal", "chaleco", "champú", "chancla", "chapa", "charla", "chico", "chiste", "chivo", "choque", "choza", "chuleta", "chupar", "ciclón", "ciego", "cielo", "cien", "cierto", "cifra", "cigarro", "cima", "cinco", "cine", "cinta", "ciprés", "circo", "ciruela", "cisne", "cita", "ciudad", "clamor", "clan", "claro", "clase", "clave", "cliente", "clima", "clínica", "cobre", "cocción", "cochino", "cocina", "coco", "código", "codo", "cofre", "coger", "cohete", "cojín", "cojo", "cola", "colcha", "colegio", "colgar", "colina", "collar", "colmo", "columna", "combate", "comer", "comida", "cómodo", "compra", "conde", "conejo", "conga", "conocer", "consejo", "contar", "copa", "copia", "corazón", "corbata", "corcho", "cordón", "corona", "correr", "coser", "cosmos", "costa", "cráneo", "cráter", "crear", "crecer", "creído", "crema", "cría", "crimen", "cripta", "crisis", "cromo", "crónica", "croqueta", "crudo", "cruz", "cuadro", "cuarto", "cuatro", "cubo", "cubrir", "cuchara", "cuello", "cuento", "cuerda", "cuesta", "cueva", "cuidar", "culebra", "culpa", "culto", "cumbre", "cumplir", "cuna", "cuneta", "cuota", "cupón", "cúpula", "curar", "curioso", "curso", "curva", "cutis", "dama", "danza", "dar", "dardo", "dátil", "deber", "débil", "década", "decir", "dedo", "defensa", "definir", "dejar", "delfín", "delgado", "delito", "demora", "denso", "dental", "deporte", "derecho", "derrota", "desayuno", "deseo", "desfile", "desnudo", "destino", "desvío", "detalle", "detener", "deuda", "día", "diablo", "diadema", "diamante", "diana", "diario", "dibujo", "dictar", "diente", "dieta", "diez", "difícil", "digno", "dilema", "diluir", "dinero", "directo", "dirigir", "disco", "diseño", "disfraz", "diva", "divino", "doble", "doce", "dolor", "domingo", "don", "donar", "dorado", "dormir", "dorso", "dos", "dosis", "dragón", "droga", "ducha", "duda", "duelo", "dueño", "dulce", "dúo", "duque", "durar", "dureza", "duro", "ébano", "ebrio", "echar", "eco", "ecuador", "edad", "edición", "edificio", "editor", "educar", "efecto", "eficaz", "eje", "ejemplo", "elefante", "elegir", "elemento", "elevar", "elipse", "élite", "elixir", "elogio", "eludir", "embudo", "emitir", "emoción", "empate", "empeño", "empleo", "empresa", "enano", "encargo", "enchufe", "encía", "enemigo", "enero", "enfado", "enfermo", "engaño", "enigma", "enlace", "enorme", "enredo", "ensayo", "enseñar", "entero", "entrar", "envase", "envío", "época", "equipo", "erizo", "escala", "escena", "escolar", "escribir", "escudo", "esencia", "esfera", "esfuerzo", "espada", "espejo", "espía", "esposa", "espuma", "esquí", "estar", "este", "estilo", "estufa", "etapa", "eterno", "ética", "etnia", "evadir", "evaluar", "evento", "evitar", "exacto", "examen", "exceso", "excusa", "exento", "exigir", "exilio", "existir", "éxito", "experto", "explicar", "exponer", "extremo", "fábrica", "fábula", "fachada", "fácil", "factor", "faena", "faja", "falda", "fallo", "falso", "faltar", "fama", "familia", "famoso", "faraón", "farmacia", "farol", "farsa", "fase", "fatiga", "fauna", "favor", "fax", "febrero", "fecha", "feliz", "feo", "feria", "feroz", "fértil", "fervor", "festín", "fiable", "fianza", "fiar", "fibra", "ficción", "ficha", "fideo", "fiebre", "fiel", "fiera", "fiesta", "figura", "fijar", "fijo", "fila", "filete", "filial", "filtro", "fin", "finca", "fingir", "finito", "firma", "flaco", "flauta", "flecha", "flor", "flota", "fluir", "flujo", "flúor", "fobia", "foca", "fogata", "fogón", "folio", "folleto", "fondo", "forma", "forro", "fortuna", "forzar", "fosa", "foto", "fracaso", "frágil", "franja", "frase", "fraude", "freír", "freno", "fresa", "frío", "frito", "fruta", "fuego", "fuente", "fuerza", "fuga", "fumar", "función", "funda", "furgón", "furia", "fusil", "fútbol", "futuro", "gacela", "gafas", "gaita", "gajo", "gala", "galería", "gallo", "gamba", "ganar", "gancho", "ganga", "ganso", "garaje", "garza", "gasolina", "gastar", "gato", "gavilán", "gemelo", "gemir", "gen", "género", "genio", "gente", "geranio", "gerente", "germen", "gesto", "gigante", "gimnasio", "girar", "giro", "glaciar", "globo", "gloria", "gol", "golfo", "goloso", "golpe", "goma", "gordo", "gorila", "gorra", "gota", "goteo", "gozar", "grada", "gráfico", "grano", "grasa", "gratis", "grave", "grieta", "grillo", "gripe", "gris", "grito", "grosor", "grúa", "grueso", "grumo", "grupo", "guante", "guapo", "guardia", "guerra", "guía", "guiño", "guion", "guiso", "guitarra", "gusano", "gustar", "haber", "hábil", "hablar", "hacer", "hacha", "hada", "hallar", "hamaca", "harina", "haz", "hazaña", "hebilla", "hebra", "hecho", "helado", "helio", "hembra", "herir", "hermano", "héroe", "hervir", "hielo", "hierro", "hígado", "higiene", "hijo", "himno", "historia", "hocico", "hogar", "hoguera", "hoja", "hombre", "hongo", "honor", "honra", "hora", "hormiga", "horno", "hostil", "hoyo", "hueco", "huelga", "huerta", "hueso", "huevo", "huida", "huir", "humano", "húmedo", "humilde", "humo", "hundir", "huracán", "hurto", "icono", "ideal", "idioma", "ídolo", "iglesia", "iglú", "igual", "ilegal", "ilusión", "imagen", "imán", "imitar", "impar", "imperio", "imponer", "impulso", "incapaz", "índice", "inerte", "infiel", "informe", "ingenio", "inicio", "inmenso", "inmune", "innato", "insecto", "instante", "interés", "íntimo", "intuir", "inútil", "invierno", "ira", "iris", "ironía", "isla", "islote", "jabalí", "jabón", "jamón", "jarabe", "jardín", "jarra", "jaula", "jazmín", "jefe", "jeringa", "jinete", "jornada", "joroba", "joven", "joya", "juerga", "jueves", "juez", "jugador", "jugo", "juguete", "juicio", "junco", "jungla", "junio", "juntar", "júpiter", "jurar", "justo", "juvenil", "juzgar", "kilo", "koala", "labio", "lacio", "lacra", "lado", "ladrón", "lagarto", "lágrima", "laguna", "laico", "lamer", "lámina", "lámpara", "lana", "lancha", "langosta", "lanza", "lápiz", "largo", "larva", "lástima", "lata", "látex", "latir", "laurel", "lavar", "lazo", "leal", "lección", "leche", "lector", "leer", "legión", "legumbre", "lejano", "lengua", "lento", "leña", "león", "leopardo", "lesión", "letal", "letra", "leve", "leyenda", "libertad", "libro", "licor", "líder", "lidiar", "lienzo", "liga", "ligero", "lima", "límite", "limón", "limpio", "lince", "lindo", "línea", "lingote", "lino", "linterna", "líquido", "liso", "lista", "litera", "litio", "litro", "llaga", "llama", "llanto", "llave", "llegar", "llenar", "llevar", "llorar", "llover", "lluvia", "lobo", "loción", "loco", "locura", "lógica", "logro", "lombriz", "lomo", "lonja", "lote", "lucha", "lucir", "lugar", "lujo", "luna", "lunes", "lupa", "lustro", "luto", "luz", "maceta", "macho", "madera", "madre", "maduro", "maestro", "mafia", "magia", "mago", "maíz", "maldad", "maleta", "malla", "malo", "mamá", "mambo", "mamut", "manco", "mando", "manejar", "manga", "maniquí", "manjar", "mano", "manso", "manta", "mañana", "mapa", "máquina", "mar", "marco", "marea", "marfil", "margen", "marido", "mármol", "marrón", "martes", "marzo", "masa", "máscara", "masivo", "matar", "materia", "matiz", "matriz", "máximo", "mayor", "mazorca", "mecha", "medalla", "medio", "médula", "mejilla", "mejor", "melena", "melón", "memoria", "menor", "mensaje", "mente", "menú", "mercado", "merengue", "mérito", "mes", "mesón", "meta", "meter", "método", "metro", "mezcla", "miedo", "miel", "miembro", "miga", "mil", "milagro", "militar", "millón", "mimo", "mina", "minero", "mínimo", "minuto", "miope", "mirar", "misa", "miseria", "misil", "mismo", "mitad", "mito", "mochila", "moción", "moda", "modelo", "moho", "mojar", "molde", "moler", "molino", "momento", "momia", "monarca", "moneda", "monja", "monto", "moño", "morada", "morder", "moreno", "morir", "morro", "morsa", "mortal", "mosca", "mostrar", "motivo", "mover", "móvil", "mozo", "mucho", "mudar", "mueble", "muela", "muerte", "muestra", "mugre", "mujer", "mula", "muleta", "multa", "mundo", "muñeca", "mural", "muro", "músculo", "museo", "musgo", "música", "muslo", "nácar", "nación", "nadar", "naipe", "naranja", "nariz", "narrar", "nasal", "natal", "nativo", "natural", "náusea", "naval", "nave", "navidad", "necio", "néctar", "negar", "negocio", "negro", "neón", "nervio", "neto", "neutro", "nevar", "nevera", "nicho", "nido", "niebla", "nieto", "niñez", "niño", "nítido", "nivel", "nobleza", "noche", "nómina", "noria", "norma", "norte", "nota", "noticia", "novato", "novela", "novio", "nube", "nuca", "núcleo", "nudillo", "nudo", "nuera", "nueve", "nuez", "nulo", "número", "nutria", "oasis", "obeso", "obispo", "objeto", "obra", "obrero", "observar", "obtener", "obvio", "oca", "ocaso", "océano", "ochenta", "ocho", "ocio", "ocre", "octavo", "octubre", "oculto", "ocupar", "ocurrir", "odiar", "odio", "odisea", "oeste", "ofensa", "oferta", "oficio", "ofrecer", "ogro", "oído", "oír", "ojo", "ola", "oleada", "olfato", "olivo", "olla", "olmo", "olor", "olvido", "ombligo", "onda", "onza", "opaco", "opción", "ópera", "opinar", "oponer", "optar", "óptica", "opuesto", "oración", "orador", "oral", "órbita", "orca", "orden", "oreja", "órgano", "orgía", "orgullo", "oriente", "origen", "orilla", "oro", "orquesta", "oruga", "osadía", "oscuro", "osezno", "oso", "ostra", "otoño", "otro", "oveja", "óvulo", "óxido", "oxígeno", "oyente", "ozono", "pacto", "padre", "paella", "página", "pago", "país", "pájaro", "palabra", "palco", "paleta", "pálido", "palma", "paloma", "palpar", "pan", "panal", "pánico", "pantera", "pañuelo", "papá", "papel", "papilla", "paquete", "parar", "parcela", "pared", "parir", "paro", "párpado", "parque", "párrafo", "parte", "pasar", "paseo", "pasión", "paso", "pasta", "pata", "patio", "patria", "pausa", "pauta", "pavo", "payaso", "peatón", "pecado", "pecera", "pecho", "pedal", "pedir", "pegar", "peine", "pelar", "peldaño", "pelea", "peligro", "pellejo", "pelo", "peluca", "pena", "pensar", "peñón", "peón", "peor", "pepino", "pequeño", "pera", "percha", "perder", "pereza", "perfil", "perico", "perla", "permiso", "perro", "persona", "pesa", "pesca", "pésimo", "pestaña", "pétalo", "petróleo", "pez", "pezuña", "picar", "pichón", "pie", "piedra", "pierna", "pieza", "pijama", "pilar", "piloto", "pimienta", "pino", "pintor", "pinza", "piña", "piojo", "pipa", "pirata", "pisar", "piscina", "piso", "pista", "pitón", "pizca", "placa", "plan", "plata", "playa", "plaza", "pleito", "pleno", "plomo", "pluma", "plural", "pobre", "poco", "poder", "podio", "poema", "poesía", "poeta", "polen", "policía", "pollo", "polvo", "pomada", "pomelo", "pomo", "pompa", "poner", "porción", "portal", "posada", "poseer", "posible", "poste", "potencia", "potro", "pozo", "prado", "precoz", "pregunta", "premio", "prensa", "preso", "previo", "primo", "príncipe", "prisión", "privar", "proa", "probar", "proceso", "producto", "proeza", "profesor", "programa", "prole", "promesa", "pronto", "propio", "próximo", "prueba", "público", "puchero", "pudor", "pueblo", "puerta", "puesto", "pulga", "pulir", "pulmón", "pulpo", "pulso", "puma", "punto", "puñal", "puño", "pupa", "pupila", "puré", "quedar", "queja", "quemar", "querer", "queso", "quieto", "química", "quince", "quitar", "rábano", "rabia", "rabo", "ración", "radical", "raíz", "rama", "rampa", "rancho", "rango", "rapaz", "rápido", "rapto", "rasgo", "raspa", "rato", "rayo", "raza", "razón", "reacción", "realidad", "rebaño", "rebote", "recaer", "receta", "rechazo", "recoger", "recreo", "recto", "recurso", "red", "redondo", "reducir", "reflejo", "reforma", "refrán", "refugio", "regalo", "regir", "regla", "regreso", "rehén", "reino", "reír", "reja", "relato", "relevo", "relieve", "relleno", "reloj", "remar", "remedio", "remo", "rencor", "rendir", "renta", "reparto", "repetir", "reposo", "reptil", "res", "rescate", "resina", "respeto", "resto", "resumen", "retiro", "retorno", "retrato", "reunir", "revés", "revista", "rey", "rezar", "rico", "riego", "rienda", "riesgo", "rifa", "rígido", "rigor", "rincón", "riñón", "río", "riqueza", "risa", "ritmo", "rito", "rizo", "roble", "roce", "rociar", "rodar", "rodeo", "rodilla", "roer", "rojizo", "rojo", "romero", "romper", "ron", "ronco", "ronda", "ropa", "ropero", "rosa", "rosca", "rostro", "rotar", "rubí", "rubor", "rudo", "rueda", "rugir", "ruido", "ruina", "ruleta", "rulo", "rumbo", "rumor", "ruptura", "ruta", "rutina", "sábado", "saber", "sabio", "sable", "sacar", "sagaz", "sagrado", "sala", "saldo", "salero", "salir", "salmón", "salón", "salsa", "salto", "salud", "salvar", "samba", "sanción", "sandía", "sanear", "sangre", "sanidad", "sano", "santo", "sapo", "saque", "sardina", "sartén", "sastre", "satán", "sauna", "saxofón", "sección", "seco", "secreto", "secta", "sed", "seguir", "seis", "sello", "selva", "semana", "semilla", "senda", "sensor", "señal", "señor", "separar", "sepia", "sequía", "ser", "serie", "sermón", "servir", "sesenta", "sesión", "seta", "setenta", "severo", "sexo", "sexto", "sidra", "siesta", "siete", "siglo", "signo", "sílaba", "silbar", "silencio", "silla", "símbolo", "simio", "sirena", "sistema", "sitio", "situar", "sobre", "socio", "sodio", "sol", "solapa", "soldado", "soledad", "sólido", "soltar", "solución", "sombra", "sondeo", "sonido", "sonoro", "sonrisa", "sopa", "soplar", "soporte", "sordo", "sorpresa", "sorteo", "sostén", "sótano", "suave", "subir", "suceso", "sudor", "suegra", "suelo", "sueño", "suerte", "sufrir", "sujeto", "sultán", "sumar", "superar", "suplir", "suponer", "supremo", "sur", "surco", "sureño", "surgir", "susto", "sutil", "tabaco", "tabique", "tabla", "tabú", "taco", "tacto", "tajo", "talar", "talco", "talento", "talla", "talón", "tamaño", "tambor", "tango", "tanque", "tapa", "tapete", "tapia", "tapón", "taquilla", "tarde", "tarea", "tarifa", "tarjeta", "tarot", "tarro", "tarta", "tatuaje", "tauro", "taza", "tazón", "teatro", "techo", "tecla", "técnica", "tejado", "tejer", "tejido", "tela", "teléfono", "tema", "temor", "templo", "tenaz", "tender", "tener", "tenis", "tenso", "teoría", "terapia", "terco", "término", "ternura", "terror", "tesis", "tesoro", "testigo", "tetera", "texto", "tez", "tibio", "tiburón", "tiempo", "tienda", "tierra", "tieso", "tigre", "tijera", "tilde", "timbre", "tímido", "timo", "tinta", "tío", "típico", "tipo", "tira", "tirón", "titán", "títere", "título", "tiza", "toalla", "tobillo", "tocar", "tocino", "todo", "toga", "toldo", "tomar", "tono", "tonto", "topar", "tope", "toque", "tórax", "torero", "tormenta", "torneo", "toro", "torpedo", "torre", "torso", "tortuga", "tos", "tosco", "toser", "tóxico", "trabajo", "tractor", "traer", "tráfico", "trago", "traje", "tramo", "trance", "trato", "trauma", "trazar", "trébol", "tregua", "treinta", "tren", "trepar", "tres", "tribu", "trigo", "tripa", "triste", "triunfo", "trofeo", "trompa", "tronco", "tropa", "trote", "trozo", "truco", "trueno", "trufa", "tubería", "tubo", "tuerto", "tumba", "tumor", "túnel", "túnica", "turbina", "turismo", "turno", "tutor", "ubicar", "úlcera", "umbral", "unidad", "unir", "universo", "uno", "untar", "uña", "urbano", "urbe", "urgente", "urna", "usar", "usuario", "útil", "utopía", "uva", "vaca", "vacío", "vacuna", "vagar", "vago", "vaina", "vajilla", "vale", "válido", "valle", "valor", "válvula", "vampiro", "vara", "variar", "varón", "vaso", "vecino", "vector", "vehículo", "veinte", "vejez", "vela", "velero", "veloz", "vena", "vencer", "venda", "veneno", "vengar", "venir", "venta", "venus", "ver", "verano", "verbo", "verde", "vereda", "verja", "verso", "verter", "vía", "viaje", "vibrar", "vicio", "víctima", "vida", "vídeo", "vidrio", "viejo", "viernes", "vigor", "vil", "villa", "vinagre", "vino", "viñedo", "violín", "viral", "virgo", "virtud", "visor", "víspera", "vista", "vitamina", "viudo", "vivaz", "vivero", "vivir", "vivo", "volcán", "volumen", "volver", "voraz", "votar", "voto", "voz", "vuelo", "vulgar", "yacer", "yate", "yegua", "yema", "yerno", "yeso", "yodo", "yoga", "yogur", "zafiro", "zanja", "zapato", "zarza", "zona", "zorro", "zumo", "zurdo"];
  return V2 = e, V2;
}
var z2, xl;
function MC() {
  return xl || (xl = 1, z2 = {
    CHINESE: TC(),
    ENGLISH: AC(),
    FRENCH: IC(),
    ITALIAN: kC(),
    JAPANESE: OC(),
    SPANISH: PC()
  }), z2;
}
var Yt = ta, RC = Yt.crypto.BN, F9 = xC, m9 = Yt.deps._, BC = wC, rs = EC, NC = Yt.crypto.Hash, CC = Yt.crypto.Random, _l = Yt.util.preconditions, oe = function(e, t) {
  if (!(this instanceof oe))
    return new oe(e, t);
  m9.isArray(e) && (t = e, e = null);
  var a, r, f;
  if (Q.Buffer.isBuffer(e))
    f = e;
  else if (m9.isString(e))
    r = F9.nfkd(e);
  else if (m9.isNumber(e))
    a = e;
  else if (e)
    throw new Yt.errors.InvalidArgument("data", "Must be a Buffer, a string or an integer");
  if (a = a || 128, t = t || oe._getDictionary(r), r && !t)
    throw new rs.UnknownWordlist(r);
  if (t = t || oe.Words.ENGLISH, f && (r = oe._entropy2mnemonic(f, t)), r && !oe.isValid(r, t))
    throw new rs.InvalidMnemonic(r);
  if (a % 32 !== 0 || a < 128)
    throw new Yt.errors.InvalidArgument("ENT", "Values must be ENT > 128 and ENT % 32 == 0");
  r = r || oe._mnemonic(a, t), Object.defineProperty(this, "wordlist", {
    configurable: !1,
    value: t
  }), Object.defineProperty(this, "phrase", {
    configurable: !1,
    value: r
  });
};
oe.fromRandom = function(e = oe.Words.ENGLISH) {
  return new oe(e);
};
oe.fromString = function(e, t = oe.Words.ENGLISH) {
  return new oe(e, t);
};
oe.Words = MC();
oe.isValid = function(e, t) {
  if (e = F9.nfkd(e), t = t || oe._getDictionary(e), !t)
    return !1;
  for (var a = e.split(" "), r = "", f = 0; f < a.length; f++) {
    var i = t.indexOf(a[f]);
    if (i < 0)
      return !1;
    r = r + ("00000000000" + i.toString(2)).slice(-11);
  }
  var n = r.length / 33, o = r.slice(-n), s = r.slice(0, r.length - n), b = Q.Buffer.alloc(s.length / 8);
  for (f = 0; f < s.length / 8; f++)
    b.writeUInt8(parseInt(r.slice(f * 8, (f + 1) * 8), 2), f);
  var l = oe._entropyChecksum(b);
  return l === o;
};
oe._belongsToWordlist = function(e, t) {
  for (var a = F9.nfkd(e).split(" "), r = 0; r < a.length; r++) {
    var f = t.indexOf(a[r]);
    if (f < 0)
      return !1;
  }
  return !0;
};
oe._getDictionary = function(e) {
  if (!e)
    return null;
  for (var t = Object.keys(oe.Words), a = 0; a < t.length; a++) {
    var r = t[a];
    if (oe._belongsToWordlist(e, oe.Words[r]))
      return oe.Words[r];
  }
  return null;
};
oe.prototype.toSeed = function(e) {
  return e = e || "", BC(F9.nfkd(this.phrase), F9.nfkd("mnemonic" + e), 2048, 64);
};
oe.fromSeed = function(e, t) {
  return _l.checkArgument(Q.Buffer.isBuffer(e), "seed must be a Buffer."), _l.checkArgument(m9.isArray(t) || m9.isString(t), "wordlist must be a string or an array."), new oe(e, t);
};
oe.prototype.toHDPrivateKey = function(e, t) {
  var a = this.toSeed(e);
  return Yt.HDPrivateKey.fromSeed(a, t);
};
oe.prototype.toString = function() {
  return this.phrase;
};
oe.prototype.inspect = function() {
  return "<Mnemonic: " + this.toString() + " >";
};
oe._mnemonic = function(e, t) {
  var a = CC.getRandomBuffer(e / 8);
  return oe._entropy2mnemonic(a, t);
};
oe._entropy2mnemonic = function(e, t) {
  for (var a = "", r = 0; r < e.length; r++)
    a = a + ("00000000" + e[r].toString(2)).slice(-8);
  if (a = a + oe._entropyChecksum(e), a.length % 11 !== 0)
    throw new rs.InvalidEntropy(a);
  var f = [];
  for (r = 0; r < a.length / 11; r++) {
    var i = parseInt(a.slice(r * 11, (r + 1) * 11), 2);
    f.push(t[i]);
  }
  var n;
  return t === oe.Words.JAPANESE ? n = f.join("　") : n = f.join(" "), n;
};
oe._entropyChecksum = function(e) {
  for (var t = NC.sha256(e), a = e.length * 8, r = a / 32, f = new RC(t.toString("hex"), 16).toString(2); f.length % 256 !== 0; )
    f = "0" + f;
  var i = f.slice(0, r);
  return i;
};
oe.bsv = Yt;
var DC = oe, Ly = ta;
Ly.Mnemonic = DC;
var LC = Ly.Mnemonic, FC = LC;
const HC = /* @__PURE__ */ Qt(FC);
d7.mvc.Script.Interpreter.MAX_SCRIPT_ELEMENT_SIZE = Number.MAX_SAFE_INTEGER;
d7.mvc.Script.Interpreter.MAXIMUM_ELEMENT_SIZE = Number.MAX_SAFE_INTEGER;
d7.mvc.Message = gC;
d7.mvc.Mnemonic = HC;
d7.mvc.ECIES = AB;
const ae = d7.mvc;
class Fy {
  constructor(t, a) {
    this.dustAmount = null, this.dustLimitFactor = t, this.dustAmount = a;
  }
  getDustThreshold(t) {
    return this.dustAmount ? this.dustAmount : Math.ceil(Math.ceil(250 * (t + 9 + 148) / 1e3) * this.dustLimitFactor / 100);
  }
}
const he = d7.mvc.crypto.BN, UC = he, $C = 384, Z0 = d7.Bytes;
let jC = function(e, t) {
  const a = e.toString(16), r = Q.Buffer.from(a.padStart(t * 2, "0").slice(0, t * 2), "hex");
  return r.reverse(), r;
}, Df = function(e) {
  const t = Q.Buffer.alloc(1, 0);
  return t.writeUInt8(e), t;
}, Hy = function(e) {
  const t = Q.Buffer.alloc(2, 0);
  return t.writeUInt16LE(e), t;
}, j0 = function(e) {
  const t = Q.Buffer.alloc(4, 0);
  return t.writeUInt32LE(e), t;
}, Zi = function(e) {
  return new UC(e.toString()).toBuffer({
    endian: "little",
    size: 8
  });
}, VC = function(e) {
  return Q.Buffer.from(e, "hex").reverse();
}, zC = function(e) {
  return Q.Buffer.from(d7.mvc.crypto.Hash.sha256ripemd160(e));
}, qC = function(e) {
  const t = e.length;
  let a;
  return Q.Buffer.alloc(0), t < 253 ? a = Df(t) : t < 65536 ? a = Q.Buffer.concat([Q.Buffer.from("fd", "hex"), Hy(t)]) : t < 4294967296 ? a = Q.Buffer.concat([Q.Buffer.from("fe", "hex"), j0(t)]) : t < 18446744073709552e3 && (a = Q.Buffer.concat([Q.Buffer.from("ff", "hex"), Zi(t)])), Q.Buffer.concat([a, e]);
}, Uy = function(e) {
  e = e.slice(104, e.length);
  const a = e[0];
  e = e.slice(1, e.length);
  let r;
  if (a < 253) {
    let f = a;
    r = e.slice(0, f);
  } else if (a == 253) {
    let f = e.slice(0, 2).readInt16LE(0);
    r = e.slice(2, f + 2);
  } else if (a == 254) {
    let f = e.slice(0, 4).readInt32LE(0);
    r = e.slice(4, f + 4);
  } else if (a == 255) {
    let f = Number(e.slice(0, 8).readBigUInt64LE(0));
    r = e.slice(8, f + 8);
  }
  return r;
};
function KC(e, t) {
  const a = Q.Buffer.from(e, "hex").reverse(), r = Q.Buffer.alloc(4, 0);
  return r.writeUInt32LE(t), Q.Buffer.concat([a, r]);
}
const n9 = function() {
  return {
    txHeader: new Z0(""),
    hashProof: new Z0(""),
    satoshiBytes: new Z0(""),
    scriptHash: new Z0("")
  };
}, N1 = function(e) {
  let t = Q.Buffer.concat([e, j0(0), Df(255)]);
  const a = GC(t.length);
  return t.writeUInt32LE(a + e.length, e.length), t;
}, GC = function(e) {
  return e <= 75 ? 1 : e <= 255 ? 2 : e <= 65535 ? 3 : 5;
};
function zd(e) {
  const t = new d7.mvc.encoding.BufferWriter();
  t.writeUInt32LE(e.version), t.writeUInt32LE(e.nLockTime), t.writeUInt32LE(e.inputs.length), t.writeUInt32LE(e.outputs.length);
  const a = new d7.mvc.encoding.BufferWriter(), r = new d7.mvc.encoding.BufferWriter();
  for (const s of e.inputs)
    a.writeReverse(s.prevTxId), a.writeUInt32LE(s.outputIndex), a.writeUInt32LE(s.sequenceNumber), r.write(d7.mvc.crypto.Hash.sha256(s.script.toBuffer()));
  const f = a.toBuffer();
  t.write(d7.mvc.crypto.Hash.sha256(f)), t.write(d7.mvc.crypto.Hash.sha256(r.toBuffer()));
  const i = new d7.mvc.encoding.BufferWriter();
  for (const s of e.outputs)
    i.writeUInt64LEBN(s.satoshisBN), i.write(d7.mvc.crypto.Hash.sha256(s.script.toBuffer()));
  const n = i.toBuffer();
  return t.write(d7.mvc.crypto.Hash.sha256(n)), {
    txHeader: t.toBuffer().toString("hex"),
    inputHashProof: f.toString("hex"),
    outputHashProof: n.toString("hex")
  };
}
const Qa = function(e, t) {
  const a = zd(e), r = new Z0(a.txHeader), f = e.inputs[t];
  return [{
    hashProof: new Z0(a.inputHashProof),
    txHash: new Z0(Q.Buffer.from(f.prevTxId, "hex").reverse().toString("hex")),
    outputIndexBytes: new Z0(j0(f.outputIndex).toString("hex")),
    sequenceBytes: new Z0(j0(f.sequenceNumber).toString("hex"))
  }, r];
}, F0 = function(e, t) {
  const a = zd(e), r = e.outputs[t];
  return {
    txHeader: new Z0(a.txHeader),
    hashProof: new Z0(a.outputHashProof),
    satoshiBytes: new Z0(Zi(r.satoshis).toString("hex")),
    scriptHash: new Z0(d7.mvc.crypto.Hash.sha256(r.script.toBuffer()).toString("hex"))
  };
}, wl = function(e, t) {
  const a = zd(e), r = e.outputs[t];
  return {
    txHeader: a.txHeader,
    txHashProof: a.outputHashProof,
    txSatoshi: Zi(r.satoshis).toString("hex")
  };
}, Sl = d7.mvc.crypto.Signature, $y = Sl.SIGHASH_ALL | Sl.SIGHASH_FORKID;
function q2(e) {
  return typeof e > "u" || e == null || e == "undefined";
}
function WC(e) {
  let t = "";
  return e == 0 || e == 1 || (e < 76 ? t = d7.toHex(Df(e)) : e <= 255 ? t = "4c" + d7.toHex(Df(e)) : e <= 65535 ? t = "4d" + d7.toHex(Hy(e)) : t = "4e" + d7.toHex(j0(e))), Q.Buffer.from(t, "hex");
}
var I5 = /* @__PURE__ */ ((e) => (e[e.P2PKH = 0] = "P2PKH", e[e.BCP01_NFT = 1] = "BCP01_NFT", e[e.BCP01_NFT_GENESIS = 2] = "BCP01_NFT_GENESIS", e[e.BCP01_NFT_UNLOCK_CONTRACT_CHECK = 3] = "BCP01_NFT_UNLOCK_CONTRACT_CHECK", e[e.BCP02_TOKEN = 4] = "BCP02_TOKEN", e[e.BCP02_TOKEN_GENESIS = 5] = "BCP02_TOKEN_GENESIS", e[e.BCP02_TOKEN_TRANSFER_CHECK = 6] = "BCP02_TOKEN_TRANSFER_CHECK", e[e.BCP02_TOKEN_UNLOCK_CONTRACT_CHECK = 7] = "BCP02_TOKEN_UNLOCK_CONTRACT_CHECK", e[e.OTHER = 8] = "OTHER", e))(I5 || {});
const v9 = "41682c2074686973206973206120706c61636520686f6c64657220616e642077696c6c206265207265706c6163656420696e207468652066696e616c207369676e61747572652e00", El = "41682c2074686973206973206120706c61636520686f6c64657220616e64207769", Lf = 1 + 1 + 72 + 1 + 33;
function e9(e) {
  return (e / 1e8).toFixed(8);
}
function jy(e, t = "mainnet") {
  e.version;
  const a = e.toBuffer().length, r = e.inputs.reduce((o, s) => s.output.satoshis + o, 0), f = e.outputs.reduce((o, s) => s.satoshis + o, 0);
  let i = r - f;
  const n = (i / a).toFixed(4);
  console.log(`
=============================================================================================
Summary
  txid:     ${e.id}
  Size:     ${a}
  Fee Paid: ${e9(i)}
  Fee Rate: ${n} sat/B
  Detail:   ${e.inputs.length} Inputs, ${e.outputs.length} Outputs
----------------------------------------------------------------------------------------------
${e.inputs.map((o, s) => {
    let b = "";
    return o.output.script.isPublicKeyHashOut() ? b = "standard" : o.output.script.isSafeDataOut() ? b = "OP_RETURN" : b = "nonstandard", `
=>${s}    ${b == "standard" ? o.output.script.toAddress(t).toString() : b == "OP_RETURN" ? "OP_RETURN" + " ".repeat(34 - 9) : "nonstandard" + " ".repeat(34 - 11)}    ${e9(o.output.satoshis)} MVC
       lock-size:   ${o.output.script.toBuffer().length}
       unlock-size: ${o.script.toBuffer().length}
       via ${o.prevTxId.toString("hex")} [${o.outputIndex}]
`;
  }).join("")}
Input total: ${e9(e.inputs.reduce((o, s) => o + s.output.satoshis, 0))} MVC
----------------------------------------------------------------------------------------------
${e.outputs.map((o, s) => {
    let b = "";
    return o.script.isPublicKeyHashOut() ? b = "standard" : o.script.isSafeDataOut() ? b = "OP_RETURN" : b = "nonstandard", `
=>${s}    ${b == "standard" ? o.script.toAddress(t).toString() : b == "OP_RETURN" ? "OP_RETURN" + " ".repeat(34 - 9) : "nonstandard" + " ".repeat(34 - 11)}    ${e9(o.satoshis)} MVC
       size: ${o.script.toBuffer().length}
		`;
  }).join("")}
Output total: ${e9(e.outputs.reduce((o, s) => o + s.satoshis, 0))} MVC
=============================================================================================
	 `);
}
const Tl = d7.mvc.crypto.Signature, K2 = Tl.SIGHASH_ALL | Tl.SIGHASH_FORKID, ZC = 1 + 1 + 71 + 1 + 33, YC = 1, XC = 10;
class He {
  constructor(t) {
    this.sigHashList = [], this.changeOutputIndex = -1, this.tx = t || new d7.mvc.Transaction(), this.tx.version = XC;
  }
  toObject() {
    return {
      tx: this.tx.toObject(),
      sigHashList: this.sigHashList,
      changeOutputIndex: this.changeOutputIndex
    };
  }
  static fromObject(t) {
    let a = t.tx, r = new d7.mvc.Transaction();
    a.inputs.forEach((i) => {
      r.addInput(new d7.mvc.Transaction.Input(i));
    }), a.outputs.forEach((i) => {
      r.addOutput(new d7.mvc.Transaction.Output(i));
    }), r.nLockTime = a.nLockTime, r.version = a.version;
    let f = new He(r);
    return f.sigHashList = t.sigHashList, f.changeOutputIndex = t.changeOutputIndex, f;
  }
  getRawHex() {
    return this.tx.serialize(!0);
  }
  getTx() {
    return this.tx;
  }
  getTxId() {
    return this.tx.id;
  }
  getInput(t) {
    return this.tx.inputs[t];
  }
  getOutput(t) {
    return this.tx.outputs[t];
  }
  appendP2PKHInput(t) {
    return this.tx.addInput(new d7.mvc.Transaction.Input.PublicKeyHash({
      output: new d7.mvc.Transaction.Output({
        script: d7.mvc.Script.buildPublicKeyHashOut(t.address),
        satoshis: t.satoshis
      }),
      prevTxId: t.txId,
      outputIndex: t.outputIndex,
      script: d7.mvc.Script.empty()
    })), this.tx.inputs.length - 1;
  }
  appendInput(t) {
    return this.tx.addInput(new d7.mvc.Transaction.Input({
      output: new d7.mvc.Transaction.Output({
        script: t.lockingScript,
        satoshis: t.satoshis
      }),
      prevTxId: t.txId,
      outputIndex: t.outputIndex,
      script: d7.mvc.Script.empty()
    })), this.tx.inputs.length - 1;
  }
  appendP2PKHOutput(t) {
    return this.tx.addOutput(new d7.mvc.Transaction.Output({
      script: new d7.mvc.Script(t.address),
      satoshis: t.satoshis
    })), this.tx.outputs.length - 1;
  }
  appendOutput(t) {
    return this.tx.addOutput(new d7.mvc.Transaction.Output({
      script: t.lockingScript,
      satoshis: t.satoshis
    })), this.tx.outputs.length - 1;
  }
  appendOpReturnOutput(t) {
    return this.tx.addOutput(new d7.mvc.Transaction.Output({
      script: d7.mvc.Script.buildSafeDataOut(t),
      satoshis: 0
    })), this.tx.outputs.length - 1;
  }
  clearChangeOutput() {
    this.changeOutputIndex != -1 && (this.tx.outputs.splice(this.changeOutputIndex, 1), this.changeOutputIndex = 0);
  }
  appendChangeOutput(t, a = 0.05, r = 0) {
    const f = this.tx.inputs.filter((o) => o.output.script.isPublicKeyHashOut()).length * ZC;
    let i = Math.ceil((this.tx.toBuffer().length + f + r + d7.mvc.Transaction.CHANGE_OUTPUT_MAX_SIZE) * a), n = this.getUnspentValue() - i;
    return n >= YC ? this.changeOutputIndex = this.appendP2PKHOutput({
      address: t,
      satoshis: n
    }) : this.changeOutputIndex = -1, this.changeOutputIndex;
  }
  unlockP2PKHInput(t, a, r = K2) {
    const f = this.tx, i = new d7.mvc.Transaction.Signature({
      publicKey: t.publicKey,
      prevTxId: f.inputs[a].prevTxId,
      outputIndex: f.inputs[a].outputIndex,
      inputIndex: a,
      signature: d7.mvc.Transaction.Sighash.sign(f, t, r, a, f.inputs[a].output.script, f.inputs[a].output.satoshisBN),
      sigtype: r
    });
    f.inputs[a].setScript(d7.mvc.Script.buildPublicKeyHashIn(i.publicKey, i.signature.toDER(), i.sigtype));
  }
  getTxFormatSig(t, a, r = K2) {
    return d7.signTx(this.tx, t, this.getInput(a).output.script, this.getInput(a).output.satoshis, a, r);
  }
  getInputPreimage(t, a = K2) {
    return d7.getPreimage(this.tx, this.getInput(t).output.script, this.getInput(t).output.satoshis, t, a);
  }
  getUnspentValue() {
    const t = this.tx.inputs.reduce((f, i) => i.output.satoshis + f, 0), a = this.tx.outputs.reduce((f, i) => i.satoshis + f, 0);
    return t - a;
  }
  getFeeRate() {
    let t = this.getUnspentValue(), a = this.tx.toBuffer().length;
    return t / a;
  }
  getSigHashLit() {
    return this.sigHashList.forEach((t) => {
      t.sighash = d7.toHex(d7.mvc.Transaction.Sighash.sighash(this.tx, t.sighashType, t.inputIndex, this.getInput(t.inputIndex).output.script, this.getInput(t.inputIndex).output.satoshisBN));
    }), this.sigHashList;
  }
  addSigHashInfo({
    inputIndex: t,
    address: a,
    sighashType: r,
    contractType: f
  }) {
    this.sigHashList.push({
      inputIndex: t,
      address: a,
      sighash: "",
      sighashType: r,
      contractType: f
    });
  }
  getPrevoutsHash() {
    let t = Q.Buffer.alloc(0);
    return this.tx.inputs.forEach((a) => {
      const r = Q.Buffer.alloc(4, 0);
      r.writeUInt32LE(a.outputIndex), t = Q.Buffer.concat([t, Q.Buffer.from(a.prevTxId).reverse(), r]);
    }), d7.mvc.crypto.Hash.sha256sha256(t).toString("hex");
  }
  dumpTx(t) {
    jy(this.tx, t);
  }
}
class te extends Error {
  constructor(t, a) {
    super(a), this.code = t, a ? this.message = a : this.message = "CodeError:" + t;
  }
}
var Q7 = /* @__PURE__ */ ((e) => (e[e.EC_OK = 0] = "EC_OK", e[e.EC_INNER_ERROR = -1] = "EC_INNER_ERROR", e[e.EC_INVALID_ARGUMENT = -2] = "EC_INVALID_ARGUMENT", e[e.EC_SENSIBLE_API_ERROR = -3] = "EC_SENSIBLE_API_ERROR", e[e.EC_INVALID_SIGNERS = -4] = "EC_INVALID_SIGNERS", e[e.EC_UTXOS_MORE_THAN_3 = -100] = "EC_UTXOS_MORE_THAN_3", e[e.EC_TOO_MANY_FT_UTXOS = -101] = "EC_TOO_MANY_FT_UTXOS", e[e.EC_FIXED_TOKEN_SUPPLY = -102] = "EC_FIXED_TOKEN_SUPPLY", e[e.EC_CANNOT_BURN_NON_ZERO_ADDRESS = -103] = "EC_CANNOT_BURN_NON_ZERO_ADDRESS", e[e.EC_INSUFFICIENT_MVC = -200] = "EC_INSUFFICIENT_MVC", e[e.EC_INSUFFICIENT_FT = -201] = "EC_INSUFFICIENT_FT", e[e.EC_NFT_NOT_ON_SELL = -300] = "EC_NFT_NOT_ON_SELL", e))(Q7 || {}), qd = {}, Vy = {};
function JC() {
  this.input = null, this.next_in = 0, this.avail_in = 0, this.total_in = 0, this.output = null, this.next_out = 0, this.avail_out = 0, this.total_out = 0, this.msg = "", this.state = null, this.data_type = 2, this.adler = 0;
}
var QC = JC, At = {}, y6 = {};
(function(e) {
  var t = typeof Uint8Array < "u" && typeof Uint16Array < "u" && typeof Int32Array < "u";
  function a(i, n) {
    return Object.prototype.hasOwnProperty.call(i, n);
  }
  e.assign = function(i) {
    for (var n = Array.prototype.slice.call(arguments, 1); n.length; ) {
      var o = n.shift();
      if (o) {
        if (typeof o != "object")
          throw new TypeError(o + "must be non-object");
        for (var s in o)
          a(o, s) && (i[s] = o[s]);
      }
    }
    return i;
  }, e.shrinkBuf = function(i, n) {
    return i.length === n ? i : i.subarray ? i.subarray(0, n) : (i.length = n, i);
  };
  var r = {
    arraySet: function(i, n, o, s, b) {
      if (n.subarray && i.subarray) {
        i.set(n.subarray(o, o + s), b);
        return;
      }
      for (var l = 0; l < s; l++)
        i[b + l] = n[o + l];
    },
    // Join array of chunks to single array.
    flattenChunks: function(i) {
      var n, o, s, b, l, v;
      for (s = 0, n = 0, o = i.length; n < o; n++)
        s += i[n].length;
      for (v = new Uint8Array(s), b = 0, n = 0, o = i.length; n < o; n++)
        l = i[n], v.set(l, b), b += l.length;
      return v;
    }
  }, f = {
    arraySet: function(i, n, o, s, b) {
      for (var l = 0; l < s; l++)
        i[b + l] = n[o + l];
    },
    // Join array of chunks to single array.
    flattenChunks: function(i) {
      return [].concat.apply([], i);
    }
  };
  e.setTyped = function(i) {
    i ? (e.Buf8 = Uint8Array, e.Buf16 = Uint16Array, e.Buf32 = Int32Array, e.assign(e, r)) : (e.Buf8 = Array, e.Buf16 = Array, e.Buf32 = Array, e.assign(e, f));
  }, e.setTyped(t);
})(y6);
var C1 = {}, eD = y6, tD = 4, Al = 0, Il = 1, aD = 2;
function D1(e) {
  for (var t = e.length; --t >= 0; )
    e[t] = 0;
}
var rD = 0, zy = 1, fD = 2, iD = 3, nD = 258, Kd = 29, g6 = 256, H9 = g6 + 1 + Kd, Yr = 30, Gd = 19, qy = 2 * H9 + 1, er = 15, G2 = 16, oD = 7, Wd = 256, Ky = 16, Gy = 17, Wy = 18, fs = (
  /* extra bits for each length code */
  [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0]
), of = (
  /* extra bits for each distance code */
  [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13]
), sD = (
  /* extra bits for each bit length code */
  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7]
), Zy = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15], dD = 512, Bt = new Array((H9 + 2) * 2);
D1(Bt);
var y9 = new Array(Yr * 2);
D1(y9);
var U9 = new Array(dD);
D1(U9);
var $9 = new Array(nD - iD + 1);
D1($9);
var Zd = new Array(Kd);
D1(Zd);
var Ff = new Array(Yr);
D1(Ff);
function W2(e, t, a, r, f) {
  this.static_tree = e, this.extra_bits = t, this.extra_base = a, this.elems = r, this.max_length = f, this.has_stree = e && e.length;
}
var Yy, Xy, Jy;
function Z2(e, t) {
  this.dyn_tree = e, this.max_code = 0, this.stat_desc = t;
}
function Qy(e) {
  return e < 256 ? U9[e] : U9[256 + (e >>> 7)];
}
function j9(e, t) {
  e.pending_buf[e.pending++] = t & 255, e.pending_buf[e.pending++] = t >>> 8 & 255;
}
function $0(e, t, a) {
  e.bi_valid > G2 - a ? (e.bi_buf |= t << e.bi_valid & 65535, j9(e, e.bi_buf), e.bi_buf = t >> G2 - e.bi_valid, e.bi_valid += a - G2) : (e.bi_buf |= t << e.bi_valid & 65535, e.bi_valid += a);
}
function nt(e, t, a) {
  $0(
    e,
    a[t * 2],
    a[t * 2 + 1]
    /*.Len*/
  );
}
function eg(e, t) {
  var a = 0;
  do
    a |= e & 1, e >>>= 1, a <<= 1;
  while (--t > 0);
  return a >>> 1;
}
function cD(e) {
  e.bi_valid === 16 ? (j9(e, e.bi_buf), e.bi_buf = 0, e.bi_valid = 0) : e.bi_valid >= 8 && (e.pending_buf[e.pending++] = e.bi_buf & 255, e.bi_buf >>= 8, e.bi_valid -= 8);
}
function uD(e, t) {
  var a = t.dyn_tree, r = t.max_code, f = t.stat_desc.static_tree, i = t.stat_desc.has_stree, n = t.stat_desc.extra_bits, o = t.stat_desc.extra_base, s = t.stat_desc.max_length, b, l, v, m, x, I, k = 0;
  for (m = 0; m <= er; m++)
    e.bl_count[m] = 0;
  for (a[e.heap[e.heap_max] * 2 + 1] = 0, b = e.heap_max + 1; b < qy; b++)
    l = e.heap[b], m = a[a[l * 2 + 1] * 2 + 1] + 1, m > s && (m = s, k++), a[l * 2 + 1] = m, !(l > r) && (e.bl_count[m]++, x = 0, l >= o && (x = n[l - o]), I = a[l * 2], e.opt_len += I * (m + x), i && (e.static_len += I * (f[l * 2 + 1] + x)));
  if (k !== 0) {
    do {
      for (m = s - 1; e.bl_count[m] === 0; )
        m--;
      e.bl_count[m]--, e.bl_count[m + 1] += 2, e.bl_count[s]--, k -= 2;
    } while (k > 0);
    for (m = s; m !== 0; m--)
      for (l = e.bl_count[m]; l !== 0; )
        v = e.heap[--b], !(v > r) && (a[v * 2 + 1] !== m && (e.opt_len += (m - a[v * 2 + 1]) * a[v * 2], a[v * 2 + 1] = m), l--);
  }
}
function tg(e, t, a) {
  var r = new Array(er + 1), f = 0, i, n;
  for (i = 1; i <= er; i++)
    r[i] = f = f + a[i - 1] << 1;
  for (n = 0; n <= t; n++) {
    var o = e[n * 2 + 1];
    o !== 0 && (e[n * 2] = eg(r[o]++, o));
  }
}
function lD() {
  var e, t, a, r, f, i = new Array(er + 1);
  for (a = 0, r = 0; r < Kd - 1; r++)
    for (Zd[r] = a, e = 0; e < 1 << fs[r]; e++)
      $9[a++] = r;
  for ($9[a - 1] = r, f = 0, r = 0; r < 16; r++)
    for (Ff[r] = f, e = 0; e < 1 << of[r]; e++)
      U9[f++] = r;
  for (f >>= 7; r < Yr; r++)
    for (Ff[r] = f << 7, e = 0; e < 1 << of[r] - 7; e++)
      U9[256 + f++] = r;
  for (t = 0; t <= er; t++)
    i[t] = 0;
  for (e = 0; e <= 143; )
    Bt[e * 2 + 1] = 8, e++, i[8]++;
  for (; e <= 255; )
    Bt[e * 2 + 1] = 9, e++, i[9]++;
  for (; e <= 279; )
    Bt[e * 2 + 1] = 7, e++, i[7]++;
  for (; e <= 287; )
    Bt[e * 2 + 1] = 8, e++, i[8]++;
  for (tg(Bt, H9 + 1, i), e = 0; e < Yr; e++)
    y9[e * 2 + 1] = 5, y9[e * 2] = eg(e, 5);
  Yy = new W2(Bt, fs, g6 + 1, H9, er), Xy = new W2(y9, of, 0, Yr, er), Jy = new W2(new Array(0), sD, 0, Gd, oD);
}
function ag(e) {
  var t;
  for (t = 0; t < H9; t++)
    e.dyn_ltree[t * 2] = 0;
  for (t = 0; t < Yr; t++)
    e.dyn_dtree[t * 2] = 0;
  for (t = 0; t < Gd; t++)
    e.bl_tree[t * 2] = 0;
  e.dyn_ltree[Wd * 2] = 1, e.opt_len = e.static_len = 0, e.last_lit = e.matches = 0;
}
function rg(e) {
  e.bi_valid > 8 ? j9(e, e.bi_buf) : e.bi_valid > 0 && (e.pending_buf[e.pending++] = e.bi_buf), e.bi_buf = 0, e.bi_valid = 0;
}
function pD(e, t, a, r) {
  rg(e), r && (j9(e, a), j9(e, ~a)), eD.arraySet(e.pending_buf, e.window, t, a, e.pending), e.pending += a;
}
function kl(e, t, a, r) {
  var f = t * 2, i = a * 2;
  return e[f] < e[i] || e[f] === e[i] && r[t] <= r[a];
}
function Y2(e, t, a) {
  for (var r = e.heap[a], f = a << 1; f <= e.heap_len && (f < e.heap_len && kl(t, e.heap[f + 1], e.heap[f], e.depth) && f++, !kl(t, r, e.heap[f], e.depth)); )
    e.heap[a] = e.heap[f], a = f, f <<= 1;
  e.heap[a] = r;
}
function Ol(e, t, a) {
  var r, f, i = 0, n, o;
  if (e.last_lit !== 0)
    do
      r = e.pending_buf[e.d_buf + i * 2] << 8 | e.pending_buf[e.d_buf + i * 2 + 1], f = e.pending_buf[e.l_buf + i], i++, r === 0 ? nt(e, f, t) : (n = $9[f], nt(e, n + g6 + 1, t), o = fs[n], o !== 0 && (f -= Zd[n], $0(e, f, o)), r--, n = Qy(r), nt(e, n, a), o = of[n], o !== 0 && (r -= Ff[n], $0(e, r, o)));
    while (i < e.last_lit);
  nt(e, Wd, t);
}
function is(e, t) {
  var a = t.dyn_tree, r = t.stat_desc.static_tree, f = t.stat_desc.has_stree, i = t.stat_desc.elems, n, o, s = -1, b;
  for (e.heap_len = 0, e.heap_max = qy, n = 0; n < i; n++)
    a[n * 2] !== 0 ? (e.heap[++e.heap_len] = s = n, e.depth[n] = 0) : a[n * 2 + 1] = 0;
  for (; e.heap_len < 2; )
    b = e.heap[++e.heap_len] = s < 2 ? ++s : 0, a[b * 2] = 1, e.depth[b] = 0, e.opt_len--, f && (e.static_len -= r[b * 2 + 1]);
  for (t.max_code = s, n = e.heap_len >> 1; n >= 1; n--)
    Y2(e, a, n);
  b = i;
  do
    n = e.heap[
      1
      /*SMALLEST*/
    ], e.heap[
      1
      /*SMALLEST*/
    ] = e.heap[e.heap_len--], Y2(
      e,
      a,
      1
      /*SMALLEST*/
    ), o = e.heap[
      1
      /*SMALLEST*/
    ], e.heap[--e.heap_max] = n, e.heap[--e.heap_max] = o, a[b * 2] = a[n * 2] + a[o * 2], e.depth[b] = (e.depth[n] >= e.depth[o] ? e.depth[n] : e.depth[o]) + 1, a[n * 2 + 1] = a[o * 2 + 1] = b, e.heap[
      1
      /*SMALLEST*/
    ] = b++, Y2(
      e,
      a,
      1
      /*SMALLEST*/
    );
  while (e.heap_len >= 2);
  e.heap[--e.heap_max] = e.heap[
    1
    /*SMALLEST*/
  ], uD(e, t), tg(a, s, e.bl_count);
}
function Pl(e, t, a) {
  var r, f = -1, i, n = t[0 * 2 + 1], o = 0, s = 7, b = 4;
  for (n === 0 && (s = 138, b = 3), t[(a + 1) * 2 + 1] = 65535, r = 0; r <= a; r++)
    i = n, n = t[(r + 1) * 2 + 1], !(++o < s && i === n) && (o < b ? e.bl_tree[i * 2] += o : i !== 0 ? (i !== f && e.bl_tree[i * 2]++, e.bl_tree[Ky * 2]++) : o <= 10 ? e.bl_tree[Gy * 2]++ : e.bl_tree[Wy * 2]++, o = 0, f = i, n === 0 ? (s = 138, b = 3) : i === n ? (s = 6, b = 3) : (s = 7, b = 4));
}
function Ml(e, t, a) {
  var r, f = -1, i, n = t[0 * 2 + 1], o = 0, s = 7, b = 4;
  for (n === 0 && (s = 138, b = 3), r = 0; r <= a; r++)
    if (i = n, n = t[(r + 1) * 2 + 1], !(++o < s && i === n)) {
      if (o < b)
        do
          nt(e, i, e.bl_tree);
        while (--o !== 0);
      else
        i !== 0 ? (i !== f && (nt(e, i, e.bl_tree), o--), nt(e, Ky, e.bl_tree), $0(e, o - 3, 2)) : o <= 10 ? (nt(e, Gy, e.bl_tree), $0(e, o - 3, 3)) : (nt(e, Wy, e.bl_tree), $0(e, o - 11, 7));
      o = 0, f = i, n === 0 ? (s = 138, b = 3) : i === n ? (s = 6, b = 3) : (s = 7, b = 4);
    }
}
function hD(e) {
  var t;
  for (Pl(e, e.dyn_ltree, e.l_desc.max_code), Pl(e, e.dyn_dtree, e.d_desc.max_code), is(e, e.bl_desc), t = Gd - 1; t >= 3 && e.bl_tree[Zy[t] * 2 + 1] === 0; t--)
    ;
  return e.opt_len += 3 * (t + 1) + 5 + 5 + 4, t;
}
function bD(e, t, a, r) {
  var f;
  for ($0(e, t - 257, 5), $0(e, a - 1, 5), $0(e, r - 4, 4), f = 0; f < r; f++)
    $0(e, e.bl_tree[Zy[f] * 2 + 1], 3);
  Ml(e, e.dyn_ltree, t - 1), Ml(e, e.dyn_dtree, a - 1);
}
function mD(e) {
  var t = 4093624447, a;
  for (a = 0; a <= 31; a++, t >>>= 1)
    if (t & 1 && e.dyn_ltree[a * 2] !== 0)
      return Al;
  if (e.dyn_ltree[9 * 2] !== 0 || e.dyn_ltree[10 * 2] !== 0 || e.dyn_ltree[13 * 2] !== 0)
    return Il;
  for (a = 32; a < g6; a++)
    if (e.dyn_ltree[a * 2] !== 0)
      return Il;
  return Al;
}
var Rl = !1;
function vD(e) {
  Rl || (lD(), Rl = !0), e.l_desc = new Z2(e.dyn_ltree, Yy), e.d_desc = new Z2(e.dyn_dtree, Xy), e.bl_desc = new Z2(e.bl_tree, Jy), e.bi_buf = 0, e.bi_valid = 0, ag(e);
}
function fg(e, t, a, r) {
  $0(e, (rD << 1) + (r ? 1 : 0), 3), pD(e, t, a, !0);
}
function yD(e) {
  $0(e, zy << 1, 3), nt(e, Wd, Bt), cD(e);
}
function gD(e, t, a, r) {
  var f, i, n = 0;
  e.level > 0 ? (e.strm.data_type === aD && (e.strm.data_type = mD(e)), is(e, e.l_desc), is(e, e.d_desc), n = hD(e), f = e.opt_len + 3 + 7 >>> 3, i = e.static_len + 3 + 7 >>> 3, i <= f && (f = i)) : f = i = a + 5, a + 4 <= f && t !== -1 ? fg(e, t, a, r) : e.strategy === tD || i === f ? ($0(e, (zy << 1) + (r ? 1 : 0), 3), Ol(e, Bt, y9)) : ($0(e, (fD << 1) + (r ? 1 : 0), 3), bD(e, e.l_desc.max_code + 1, e.d_desc.max_code + 1, n + 1), Ol(e, e.dyn_ltree, e.dyn_dtree)), ag(e), r && rg(e);
}
function xD(e, t, a) {
  return e.pending_buf[e.d_buf + e.last_lit * 2] = t >>> 8 & 255, e.pending_buf[e.d_buf + e.last_lit * 2 + 1] = t & 255, e.pending_buf[e.l_buf + e.last_lit] = a & 255, e.last_lit++, t === 0 ? e.dyn_ltree[a * 2]++ : (e.matches++, t--, e.dyn_ltree[($9[a] + g6 + 1) * 2]++, e.dyn_dtree[Qy(t) * 2]++), e.last_lit === e.lit_bufsize - 1;
}
C1._tr_init = vD;
C1._tr_stored_block = fg;
C1._tr_flush_block = gD;
C1._tr_tally = xD;
C1._tr_align = yD;
function _D(e, t, a, r) {
  for (var f = e & 65535 | 0, i = e >>> 16 & 65535 | 0, n = 0; a !== 0; ) {
    n = a > 2e3 ? 2e3 : a, a -= n;
    do
      f = f + t[r++] | 0, i = i + f | 0;
    while (--n);
    f %= 65521, i %= 65521;
  }
  return f | i << 16 | 0;
}
var ig = _D;
function wD() {
  for (var e, t = [], a = 0; a < 256; a++) {
    e = a;
    for (var r = 0; r < 8; r++)
      e = e & 1 ? 3988292384 ^ e >>> 1 : e >>> 1;
    t[a] = e;
  }
  return t;
}
var SD = wD();
function ED(e, t, a, r) {
  var f = SD, i = r + a;
  e ^= -1;
  for (var n = r; n < i; n++)
    e = e >>> 8 ^ f[(e ^ t[n]) & 255];
  return e ^ -1;
}
var ng = ED, TD = {
  2: "need dictionary",
  /* Z_NEED_DICT       2  */
  1: "stream end",
  /* Z_STREAM_END      1  */
  0: "",
  /* Z_OK              0  */
  "-1": "file error",
  /* Z_ERRNO         (-1) */
  "-2": "stream error",
  /* Z_STREAM_ERROR  (-2) */
  "-3": "data error",
  /* Z_DATA_ERROR    (-3) */
  "-4": "insufficient memory",
  /* Z_MEM_ERROR     (-4) */
  "-5": "buffer error",
  /* Z_BUF_ERROR     (-5) */
  "-6": "incompatible version"
  /* Z_VERSION_ERROR (-6) */
}, M0 = y6, c5 = C1, og = ig, ua = ng, AD = TD, Ir = 0, ID = 1, kD = 3, Ea = 4, Bl = 5, ot = 0, Nl = 1, u5 = -2, OD = -3, X2 = -5, PD = -1, MD = 1, F6 = 2, RD = 3, BD = 4, ND = 0, CD = 2, Yi = 8, DD = 9, LD = 15, FD = 8, HD = 29, UD = 256, ns = UD + 1 + HD, $D = 30, jD = 19, VD = 2 * ns + 1, zD = 15, ue = 3, ya = 258, R5 = ya + ue + 1, qD = 32, Xi = 42, os = 69, sf = 73, df = 91, cf = 103, tr = 113, o9 = 666, a0 = 1, x6 = 2, br = 3, L1 = 4, KD = 3;
function ga(e, t) {
  return e.msg = AD[t], t;
}
function Cl(e) {
  return (e << 1) - (e > 4 ? 9 : 0);
}
function ha(e) {
  for (var t = e.length; --t >= 0; )
    e[t] = 0;
}
function la(e) {
  var t = e.state, a = t.pending;
  a > e.avail_out && (a = e.avail_out), a !== 0 && (M0.arraySet(e.output, t.pending_buf, t.pending_out, a, e.next_out), e.next_out += a, t.pending_out += a, e.total_out += a, e.avail_out -= a, t.pending -= a, t.pending === 0 && (t.pending_out = 0));
}
function x0(e, t) {
  c5._tr_flush_block(e, e.block_start >= 0 ? e.block_start : -1, e.strstart - e.block_start, t), e.block_start = e.strstart, la(e.strm);
}
function ye(e, t) {
  e.pending_buf[e.pending++] = t;
}
function t9(e, t) {
  e.pending_buf[e.pending++] = t >>> 8 & 255, e.pending_buf[e.pending++] = t & 255;
}
function GD(e, t, a, r) {
  var f = e.avail_in;
  return f > r && (f = r), f === 0 ? 0 : (e.avail_in -= f, M0.arraySet(t, e.input, e.next_in, f, a), e.state.wrap === 1 ? e.adler = og(e.adler, t, f, a) : e.state.wrap === 2 && (e.adler = ua(e.adler, t, f, a)), e.next_in += f, e.total_in += f, f);
}
function sg(e, t) {
  var a = e.max_chain_length, r = e.strstart, f, i, n = e.prev_length, o = e.nice_match, s = e.strstart > e.w_size - R5 ? e.strstart - (e.w_size - R5) : 0, b = e.window, l = e.w_mask, v = e.prev, m = e.strstart + ya, x = b[r + n - 1], I = b[r + n];
  e.prev_length >= e.good_match && (a >>= 2), o > e.lookahead && (o = e.lookahead);
  do
    if (f = t, !(b[f + n] !== I || b[f + n - 1] !== x || b[f] !== b[r] || b[++f] !== b[r + 1])) {
      r += 2, f++;
      do
        ;
      while (b[++r] === b[++f] && b[++r] === b[++f] && b[++r] === b[++f] && b[++r] === b[++f] && b[++r] === b[++f] && b[++r] === b[++f] && b[++r] === b[++f] && b[++r] === b[++f] && r < m);
      if (i = ya - (m - r), r = m - ya, i > n) {
        if (e.match_start = t, n = i, i >= o)
          break;
        x = b[r + n - 1], I = b[r + n];
      }
    }
  while ((t = v[t & l]) > s && --a !== 0);
  return n <= e.lookahead ? n : e.lookahead;
}
function mr(e) {
  var t = e.w_size, a, r, f, i, n;
  do {
    if (i = e.window_size - e.lookahead - e.strstart, e.strstart >= t + (t - R5)) {
      M0.arraySet(e.window, e.window, t, t, 0), e.match_start -= t, e.strstart -= t, e.block_start -= t, r = e.hash_size, a = r;
      do
        f = e.head[--a], e.head[a] = f >= t ? f - t : 0;
      while (--r);
      r = t, a = r;
      do
        f = e.prev[--a], e.prev[a] = f >= t ? f - t : 0;
      while (--r);
      i += t;
    }
    if (e.strm.avail_in === 0)
      break;
    if (r = GD(e.strm, e.window, e.strstart + e.lookahead, i), e.lookahead += r, e.lookahead + e.insert >= ue)
      for (n = e.strstart - e.insert, e.ins_h = e.window[n], e.ins_h = (e.ins_h << e.hash_shift ^ e.window[n + 1]) & e.hash_mask; e.insert && (e.ins_h = (e.ins_h << e.hash_shift ^ e.window[n + ue - 1]) & e.hash_mask, e.prev[n & e.w_mask] = e.head[e.ins_h], e.head[e.ins_h] = n, n++, e.insert--, !(e.lookahead + e.insert < ue)); )
        ;
  } while (e.lookahead < R5 && e.strm.avail_in !== 0);
}
function WD(e, t) {
  var a = 65535;
  for (a > e.pending_buf_size - 5 && (a = e.pending_buf_size - 5); ; ) {
    if (e.lookahead <= 1) {
      if (mr(e), e.lookahead === 0 && t === Ir)
        return a0;
      if (e.lookahead === 0)
        break;
    }
    e.strstart += e.lookahead, e.lookahead = 0;
    var r = e.block_start + a;
    if ((e.strstart === 0 || e.strstart >= r) && (e.lookahead = e.strstart - r, e.strstart = r, x0(e, !1), e.strm.avail_out === 0) || e.strstart - e.block_start >= e.w_size - R5 && (x0(e, !1), e.strm.avail_out === 0))
      return a0;
  }
  return e.insert = 0, t === Ea ? (x0(e, !0), e.strm.avail_out === 0 ? br : L1) : (e.strstart > e.block_start && (x0(e, !1), e.strm.avail_out === 0), a0);
}
function J2(e, t) {
  for (var a, r; ; ) {
    if (e.lookahead < R5) {
      if (mr(e), e.lookahead < R5 && t === Ir)
        return a0;
      if (e.lookahead === 0)
        break;
    }
    if (a = 0, e.lookahead >= ue && (e.ins_h = (e.ins_h << e.hash_shift ^ e.window[e.strstart + ue - 1]) & e.hash_mask, a = e.prev[e.strstart & e.w_mask] = e.head[e.ins_h], e.head[e.ins_h] = e.strstart), a !== 0 && e.strstart - a <= e.w_size - R5 && (e.match_length = sg(e, a)), e.match_length >= ue)
      if (r = c5._tr_tally(e, e.strstart - e.match_start, e.match_length - ue), e.lookahead -= e.match_length, e.match_length <= e.max_lazy_match && e.lookahead >= ue) {
        e.match_length--;
        do
          e.strstart++, e.ins_h = (e.ins_h << e.hash_shift ^ e.window[e.strstart + ue - 1]) & e.hash_mask, a = e.prev[e.strstart & e.w_mask] = e.head[e.ins_h], e.head[e.ins_h] = e.strstart;
        while (--e.match_length !== 0);
        e.strstart++;
      } else
        e.strstart += e.match_length, e.match_length = 0, e.ins_h = e.window[e.strstart], e.ins_h = (e.ins_h << e.hash_shift ^ e.window[e.strstart + 1]) & e.hash_mask;
    else
      r = c5._tr_tally(e, 0, e.window[e.strstart]), e.lookahead--, e.strstart++;
    if (r && (x0(e, !1), e.strm.avail_out === 0))
      return a0;
  }
  return e.insert = e.strstart < ue - 1 ? e.strstart : ue - 1, t === Ea ? (x0(e, !0), e.strm.avail_out === 0 ? br : L1) : e.last_lit && (x0(e, !1), e.strm.avail_out === 0) ? a0 : x6;
}
function Mr(e, t) {
  for (var a, r, f; ; ) {
    if (e.lookahead < R5) {
      if (mr(e), e.lookahead < R5 && t === Ir)
        return a0;
      if (e.lookahead === 0)
        break;
    }
    if (a = 0, e.lookahead >= ue && (e.ins_h = (e.ins_h << e.hash_shift ^ e.window[e.strstart + ue - 1]) & e.hash_mask, a = e.prev[e.strstart & e.w_mask] = e.head[e.ins_h], e.head[e.ins_h] = e.strstart), e.prev_length = e.match_length, e.prev_match = e.match_start, e.match_length = ue - 1, a !== 0 && e.prev_length < e.max_lazy_match && e.strstart - a <= e.w_size - R5 && (e.match_length = sg(e, a), e.match_length <= 5 && (e.strategy === MD || e.match_length === ue && e.strstart - e.match_start > 4096) && (e.match_length = ue - 1)), e.prev_length >= ue && e.match_length <= e.prev_length) {
      f = e.strstart + e.lookahead - ue, r = c5._tr_tally(e, e.strstart - 1 - e.prev_match, e.prev_length - ue), e.lookahead -= e.prev_length - 1, e.prev_length -= 2;
      do
        ++e.strstart <= f && (e.ins_h = (e.ins_h << e.hash_shift ^ e.window[e.strstart + ue - 1]) & e.hash_mask, a = e.prev[e.strstart & e.w_mask] = e.head[e.ins_h], e.head[e.ins_h] = e.strstart);
      while (--e.prev_length !== 0);
      if (e.match_available = 0, e.match_length = ue - 1, e.strstart++, r && (x0(e, !1), e.strm.avail_out === 0))
        return a0;
    } else if (e.match_available) {
      if (r = c5._tr_tally(e, 0, e.window[e.strstart - 1]), r && x0(e, !1), e.strstart++, e.lookahead--, e.strm.avail_out === 0)
        return a0;
    } else
      e.match_available = 1, e.strstart++, e.lookahead--;
  }
  return e.match_available && (r = c5._tr_tally(e, 0, e.window[e.strstart - 1]), e.match_available = 0), e.insert = e.strstart < ue - 1 ? e.strstart : ue - 1, t === Ea ? (x0(e, !0), e.strm.avail_out === 0 ? br : L1) : e.last_lit && (x0(e, !1), e.strm.avail_out === 0) ? a0 : x6;
}
function ZD(e, t) {
  for (var a, r, f, i, n = e.window; ; ) {
    if (e.lookahead <= ya) {
      if (mr(e), e.lookahead <= ya && t === Ir)
        return a0;
      if (e.lookahead === 0)
        break;
    }
    if (e.match_length = 0, e.lookahead >= ue && e.strstart > 0 && (f = e.strstart - 1, r = n[f], r === n[++f] && r === n[++f] && r === n[++f])) {
      i = e.strstart + ya;
      do
        ;
      while (r === n[++f] && r === n[++f] && r === n[++f] && r === n[++f] && r === n[++f] && r === n[++f] && r === n[++f] && r === n[++f] && f < i);
      e.match_length = ya - (i - f), e.match_length > e.lookahead && (e.match_length = e.lookahead);
    }
    if (e.match_length >= ue ? (a = c5._tr_tally(e, 1, e.match_length - ue), e.lookahead -= e.match_length, e.strstart += e.match_length, e.match_length = 0) : (a = c5._tr_tally(e, 0, e.window[e.strstart]), e.lookahead--, e.strstart++), a && (x0(e, !1), e.strm.avail_out === 0))
      return a0;
  }
  return e.insert = 0, t === Ea ? (x0(e, !0), e.strm.avail_out === 0 ? br : L1) : e.last_lit && (x0(e, !1), e.strm.avail_out === 0) ? a0 : x6;
}
function YD(e, t) {
  for (var a; ; ) {
    if (e.lookahead === 0 && (mr(e), e.lookahead === 0)) {
      if (t === Ir)
        return a0;
      break;
    }
    if (e.match_length = 0, a = c5._tr_tally(e, 0, e.window[e.strstart]), e.lookahead--, e.strstart++, a && (x0(e, !1), e.strm.avail_out === 0))
      return a0;
  }
  return e.insert = 0, t === Ea ? (x0(e, !0), e.strm.avail_out === 0 ? br : L1) : e.last_lit && (x0(e, !1), e.strm.avail_out === 0) ? a0 : x6;
}
function Y5(e, t, a, r, f) {
  this.good_length = e, this.max_lazy = t, this.nice_length = a, this.max_chain = r, this.func = f;
}
var $r;
$r = [
  /*      good lazy nice chain */
  new Y5(0, 0, 0, 0, WD),
  /* 0 store only */
  new Y5(4, 4, 8, 4, J2),
  /* 1 max speed, no lazy matches */
  new Y5(4, 5, 16, 8, J2),
  /* 2 */
  new Y5(4, 6, 32, 32, J2),
  /* 3 */
  new Y5(4, 4, 16, 16, Mr),
  /* 4 lazy matches */
  new Y5(8, 16, 32, 32, Mr),
  /* 5 */
  new Y5(8, 16, 128, 128, Mr),
  /* 6 */
  new Y5(8, 32, 128, 256, Mr),
  /* 7 */
  new Y5(32, 128, 258, 1024, Mr),
  /* 8 */
  new Y5(32, 258, 258, 4096, Mr)
  /* 9 max compression */
];
function XD(e) {
  e.window_size = 2 * e.w_size, ha(e.head), e.max_lazy_match = $r[e.level].max_lazy, e.good_match = $r[e.level].good_length, e.nice_match = $r[e.level].nice_length, e.max_chain_length = $r[e.level].max_chain, e.strstart = 0, e.block_start = 0, e.lookahead = 0, e.insert = 0, e.match_length = e.prev_length = ue - 1, e.match_available = 0, e.ins_h = 0;
}
function JD() {
  this.strm = null, this.status = 0, this.pending_buf = null, this.pending_buf_size = 0, this.pending_out = 0, this.pending = 0, this.wrap = 0, this.gzhead = null, this.gzindex = 0, this.method = Yi, this.last_flush = -1, this.w_size = 0, this.w_bits = 0, this.w_mask = 0, this.window = null, this.window_size = 0, this.prev = null, this.head = null, this.ins_h = 0, this.hash_size = 0, this.hash_bits = 0, this.hash_mask = 0, this.hash_shift = 0, this.block_start = 0, this.match_length = 0, this.prev_match = 0, this.match_available = 0, this.strstart = 0, this.match_start = 0, this.lookahead = 0, this.prev_length = 0, this.max_chain_length = 0, this.max_lazy_match = 0, this.level = 0, this.strategy = 0, this.good_match = 0, this.nice_match = 0, this.dyn_ltree = new M0.Buf16(VD * 2), this.dyn_dtree = new M0.Buf16((2 * $D + 1) * 2), this.bl_tree = new M0.Buf16((2 * jD + 1) * 2), ha(this.dyn_ltree), ha(this.dyn_dtree), ha(this.bl_tree), this.l_desc = null, this.d_desc = null, this.bl_desc = null, this.bl_count = new M0.Buf16(zD + 1), this.heap = new M0.Buf16(2 * ns + 1), ha(this.heap), this.heap_len = 0, this.heap_max = 0, this.depth = new M0.Buf16(2 * ns + 1), ha(this.depth), this.l_buf = 0, this.lit_bufsize = 0, this.last_lit = 0, this.d_buf = 0, this.opt_len = 0, this.static_len = 0, this.matches = 0, this.insert = 0, this.bi_buf = 0, this.bi_valid = 0;
}
function dg(e) {
  var t;
  return !e || !e.state ? ga(e, u5) : (e.total_in = e.total_out = 0, e.data_type = CD, t = e.state, t.pending = 0, t.pending_out = 0, t.wrap < 0 && (t.wrap = -t.wrap), t.status = t.wrap ? Xi : tr, e.adler = t.wrap === 2 ? 0 : 1, t.last_flush = Ir, c5._tr_init(t), ot);
}
function cg(e) {
  var t = dg(e);
  return t === ot && XD(e.state), t;
}
function QD(e, t) {
  return !e || !e.state || e.state.wrap !== 2 ? u5 : (e.state.gzhead = t, ot);
}
function ug(e, t, a, r, f, i) {
  if (!e)
    return u5;
  var n = 1;
  if (t === PD && (t = 6), r < 0 ? (n = 0, r = -r) : r > 15 && (n = 2, r -= 16), f < 1 || f > DD || a !== Yi || r < 8 || r > 15 || t < 0 || t > 9 || i < 0 || i > BD)
    return ga(e, u5);
  r === 8 && (r = 9);
  var o = new JD();
  return e.state = o, o.strm = e, o.wrap = n, o.gzhead = null, o.w_bits = r, o.w_size = 1 << o.w_bits, o.w_mask = o.w_size - 1, o.hash_bits = f + 7, o.hash_size = 1 << o.hash_bits, o.hash_mask = o.hash_size - 1, o.hash_shift = ~~((o.hash_bits + ue - 1) / ue), o.window = new M0.Buf8(o.w_size * 2), o.head = new M0.Buf16(o.hash_size), o.prev = new M0.Buf16(o.w_size), o.lit_bufsize = 1 << f + 6, o.pending_buf_size = o.lit_bufsize * 4, o.pending_buf = new M0.Buf8(o.pending_buf_size), o.d_buf = 1 * o.lit_bufsize, o.l_buf = (1 + 2) * o.lit_bufsize, o.level = t, o.strategy = i, o.method = a, cg(e);
}
function eL(e, t) {
  return ug(e, t, Yi, LD, FD, ND);
}
function tL(e, t) {
  var a, r, f, i;
  if (!e || !e.state || t > Bl || t < 0)
    return e ? ga(e, u5) : u5;
  if (r = e.state, !e.output || !e.input && e.avail_in !== 0 || r.status === o9 && t !== Ea)
    return ga(e, e.avail_out === 0 ? X2 : u5);
  if (r.strm = e, a = r.last_flush, r.last_flush = t, r.status === Xi)
    if (r.wrap === 2)
      e.adler = 0, ye(r, 31), ye(r, 139), ye(r, 8), r.gzhead ? (ye(
        r,
        (r.gzhead.text ? 1 : 0) + (r.gzhead.hcrc ? 2 : 0) + (r.gzhead.extra ? 4 : 0) + (r.gzhead.name ? 8 : 0) + (r.gzhead.comment ? 16 : 0)
      ), ye(r, r.gzhead.time & 255), ye(r, r.gzhead.time >> 8 & 255), ye(r, r.gzhead.time >> 16 & 255), ye(r, r.gzhead.time >> 24 & 255), ye(r, r.level === 9 ? 2 : r.strategy >= F6 || r.level < 2 ? 4 : 0), ye(r, r.gzhead.os & 255), r.gzhead.extra && r.gzhead.extra.length && (ye(r, r.gzhead.extra.length & 255), ye(r, r.gzhead.extra.length >> 8 & 255)), r.gzhead.hcrc && (e.adler = ua(e.adler, r.pending_buf, r.pending, 0)), r.gzindex = 0, r.status = os) : (ye(r, 0), ye(r, 0), ye(r, 0), ye(r, 0), ye(r, 0), ye(r, r.level === 9 ? 2 : r.strategy >= F6 || r.level < 2 ? 4 : 0), ye(r, KD), r.status = tr);
    else {
      var n = Yi + (r.w_bits - 8 << 4) << 8, o = -1;
      r.strategy >= F6 || r.level < 2 ? o = 0 : r.level < 6 ? o = 1 : r.level === 6 ? o = 2 : o = 3, n |= o << 6, r.strstart !== 0 && (n |= qD), n += 31 - n % 31, r.status = tr, t9(r, n), r.strstart !== 0 && (t9(r, e.adler >>> 16), t9(r, e.adler & 65535)), e.adler = 1;
    }
  if (r.status === os)
    if (r.gzhead.extra) {
      for (f = r.pending; r.gzindex < (r.gzhead.extra.length & 65535) && !(r.pending === r.pending_buf_size && (r.gzhead.hcrc && r.pending > f && (e.adler = ua(e.adler, r.pending_buf, r.pending - f, f)), la(e), f = r.pending, r.pending === r.pending_buf_size)); )
        ye(r, r.gzhead.extra[r.gzindex] & 255), r.gzindex++;
      r.gzhead.hcrc && r.pending > f && (e.adler = ua(e.adler, r.pending_buf, r.pending - f, f)), r.gzindex === r.gzhead.extra.length && (r.gzindex = 0, r.status = sf);
    } else
      r.status = sf;
  if (r.status === sf)
    if (r.gzhead.name) {
      f = r.pending;
      do {
        if (r.pending === r.pending_buf_size && (r.gzhead.hcrc && r.pending > f && (e.adler = ua(e.adler, r.pending_buf, r.pending - f, f)), la(e), f = r.pending, r.pending === r.pending_buf_size)) {
          i = 1;
          break;
        }
        r.gzindex < r.gzhead.name.length ? i = r.gzhead.name.charCodeAt(r.gzindex++) & 255 : i = 0, ye(r, i);
      } while (i !== 0);
      r.gzhead.hcrc && r.pending > f && (e.adler = ua(e.adler, r.pending_buf, r.pending - f, f)), i === 0 && (r.gzindex = 0, r.status = df);
    } else
      r.status = df;
  if (r.status === df)
    if (r.gzhead.comment) {
      f = r.pending;
      do {
        if (r.pending === r.pending_buf_size && (r.gzhead.hcrc && r.pending > f && (e.adler = ua(e.adler, r.pending_buf, r.pending - f, f)), la(e), f = r.pending, r.pending === r.pending_buf_size)) {
          i = 1;
          break;
        }
        r.gzindex < r.gzhead.comment.length ? i = r.gzhead.comment.charCodeAt(r.gzindex++) & 255 : i = 0, ye(r, i);
      } while (i !== 0);
      r.gzhead.hcrc && r.pending > f && (e.adler = ua(e.adler, r.pending_buf, r.pending - f, f)), i === 0 && (r.status = cf);
    } else
      r.status = cf;
  if (r.status === cf && (r.gzhead.hcrc ? (r.pending + 2 > r.pending_buf_size && la(e), r.pending + 2 <= r.pending_buf_size && (ye(r, e.adler & 255), ye(r, e.adler >> 8 & 255), e.adler = 0, r.status = tr)) : r.status = tr), r.pending !== 0) {
    if (la(e), e.avail_out === 0)
      return r.last_flush = -1, ot;
  } else if (e.avail_in === 0 && Cl(t) <= Cl(a) && t !== Ea)
    return ga(e, X2);
  if (r.status === o9 && e.avail_in !== 0)
    return ga(e, X2);
  if (e.avail_in !== 0 || r.lookahead !== 0 || t !== Ir && r.status !== o9) {
    var s = r.strategy === F6 ? YD(r, t) : r.strategy === RD ? ZD(r, t) : $r[r.level].func(r, t);
    if ((s === br || s === L1) && (r.status = o9), s === a0 || s === br)
      return e.avail_out === 0 && (r.last_flush = -1), ot;
    if (s === x6 && (t === ID ? c5._tr_align(r) : t !== Bl && (c5._tr_stored_block(r, 0, 0, !1), t === kD && (ha(r.head), r.lookahead === 0 && (r.strstart = 0, r.block_start = 0, r.insert = 0))), la(e), e.avail_out === 0))
      return r.last_flush = -1, ot;
  }
  return t !== Ea ? ot : r.wrap <= 0 ? Nl : (r.wrap === 2 ? (ye(r, e.adler & 255), ye(r, e.adler >> 8 & 255), ye(r, e.adler >> 16 & 255), ye(r, e.adler >> 24 & 255), ye(r, e.total_in & 255), ye(r, e.total_in >> 8 & 255), ye(r, e.total_in >> 16 & 255), ye(r, e.total_in >> 24 & 255)) : (t9(r, e.adler >>> 16), t9(r, e.adler & 65535)), la(e), r.wrap > 0 && (r.wrap = -r.wrap), r.pending !== 0 ? ot : Nl);
}
function aL(e) {
  var t;
  return !e || !e.state ? u5 : (t = e.state.status, t !== Xi && t !== os && t !== sf && t !== df && t !== cf && t !== tr && t !== o9 ? ga(e, u5) : (e.state = null, t === tr ? ga(e, OD) : ot));
}
function rL(e, t) {
  var a = t.length, r, f, i, n, o, s, b, l;
  if (!e || !e.state || (r = e.state, n = r.wrap, n === 2 || n === 1 && r.status !== Xi || r.lookahead))
    return u5;
  for (n === 1 && (e.adler = og(e.adler, t, a, 0)), r.wrap = 0, a >= r.w_size && (n === 0 && (ha(r.head), r.strstart = 0, r.block_start = 0, r.insert = 0), l = new M0.Buf8(r.w_size), M0.arraySet(l, t, a - r.w_size, r.w_size, 0), t = l, a = r.w_size), o = e.avail_in, s = e.next_in, b = e.input, e.avail_in = a, e.next_in = 0, e.input = t, mr(r); r.lookahead >= ue; ) {
    f = r.strstart, i = r.lookahead - (ue - 1);
    do
      r.ins_h = (r.ins_h << r.hash_shift ^ r.window[f + ue - 1]) & r.hash_mask, r.prev[f & r.w_mask] = r.head[r.ins_h], r.head[r.ins_h] = f, f++;
    while (--i);
    r.strstart = f, r.lookahead = ue - 1, mr(r);
  }
  return r.strstart += r.lookahead, r.block_start = r.strstart, r.insert = r.lookahead, r.lookahead = 0, r.match_length = r.prev_length = ue - 1, r.match_available = 0, e.next_in = s, e.input = b, e.avail_in = o, r.wrap = n, ot;
}
At.deflateInit = eL;
At.deflateInit2 = ug;
At.deflateReset = cg;
At.deflateResetKeep = dg;
At.deflateSetHeader = QD;
At.deflate = tL;
At.deflateEnd = aL;
At.deflateSetDictionary = rL;
At.deflateInfo = "pako deflate (from Nodeca project)";
var G5 = {}, H6 = 30, fL = 12, iL = function(t, a) {
  var r, f, i, n, o, s, b, l, v, m, x, I, k, P, M, R, F, C, L, U, q, Z, z, G, O;
  r = t.state, f = t.next_in, G = t.input, i = f + (t.avail_in - 5), n = t.next_out, O = t.output, o = n - (a - t.avail_out), s = n + (t.avail_out - 257), b = r.dmax, l = r.wsize, v = r.whave, m = r.wnext, x = r.window, I = r.hold, k = r.bits, P = r.lencode, M = r.distcode, R = (1 << r.lenbits) - 1, F = (1 << r.distbits) - 1;
  e:
    do {
      k < 15 && (I += G[f++] << k, k += 8, I += G[f++] << k, k += 8), C = P[I & R];
      t:
        for (; ; ) {
          if (L = C >>> 24, I >>>= L, k -= L, L = C >>> 16 & 255, L === 0)
            O[n++] = C & 65535;
          else if (L & 16) {
            U = C & 65535, L &= 15, L && (k < L && (I += G[f++] << k, k += 8), U += I & (1 << L) - 1, I >>>= L, k -= L), k < 15 && (I += G[f++] << k, k += 8, I += G[f++] << k, k += 8), C = M[I & F];
            a:
              for (; ; ) {
                if (L = C >>> 24, I >>>= L, k -= L, L = C >>> 16 & 255, L & 16) {
                  if (q = C & 65535, L &= 15, k < L && (I += G[f++] << k, k += 8, k < L && (I += G[f++] << k, k += 8)), q += I & (1 << L) - 1, q > b) {
                    t.msg = "invalid distance too far back", r.mode = H6;
                    break e;
                  }
                  if (I >>>= L, k -= L, L = n - o, q > L) {
                    if (L = q - L, L > v && r.sane) {
                      t.msg = "invalid distance too far back", r.mode = H6;
                      break e;
                    }
                    if (Z = 0, z = x, m === 0) {
                      if (Z += l - L, L < U) {
                        U -= L;
                        do
                          O[n++] = x[Z++];
                        while (--L);
                        Z = n - q, z = O;
                      }
                    } else if (m < L) {
                      if (Z += l + m - L, L -= m, L < U) {
                        U -= L;
                        do
                          O[n++] = x[Z++];
                        while (--L);
                        if (Z = 0, m < U) {
                          L = m, U -= L;
                          do
                            O[n++] = x[Z++];
                          while (--L);
                          Z = n - q, z = O;
                        }
                      }
                    } else if (Z += m - L, L < U) {
                      U -= L;
                      do
                        O[n++] = x[Z++];
                      while (--L);
                      Z = n - q, z = O;
                    }
                    for (; U > 2; )
                      O[n++] = z[Z++], O[n++] = z[Z++], O[n++] = z[Z++], U -= 3;
                    U && (O[n++] = z[Z++], U > 1 && (O[n++] = z[Z++]));
                  } else {
                    Z = n - q;
                    do
                      O[n++] = O[Z++], O[n++] = O[Z++], O[n++] = O[Z++], U -= 3;
                    while (U > 2);
                    U && (O[n++] = O[Z++], U > 1 && (O[n++] = O[Z++]));
                  }
                } else if (L & 64) {
                  t.msg = "invalid distance code", r.mode = H6;
                  break e;
                } else {
                  C = M[(C & 65535) + (I & (1 << L) - 1)];
                  continue a;
                }
                break;
              }
          } else if (L & 64)
            if (L & 32) {
              r.mode = fL;
              break e;
            } else {
              t.msg = "invalid literal/length code", r.mode = H6;
              break e;
            }
          else {
            C = P[(C & 65535) + (I & (1 << L) - 1)];
            continue t;
          }
          break;
        }
    } while (f < i && n < s);
  U = k >> 3, f -= U, k -= U << 3, I &= (1 << k) - 1, t.next_in = f, t.next_out = n, t.avail_in = f < i ? 5 + (i - f) : 5 - (f - i), t.avail_out = n < s ? 257 + (s - n) : 257 - (n - s), r.hold = I, r.bits = k;
}, Dl = y6, Rr = 15, Ll = 852, Fl = 592, Hl = 0, Q2 = 1, Ul = 2, nL = [
  /* Length codes 257..285 base */
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  13,
  15,
  17,
  19,
  23,
  27,
  31,
  35,
  43,
  51,
  59,
  67,
  83,
  99,
  115,
  131,
  163,
  195,
  227,
  258,
  0,
  0
], oL = [
  /* Length codes 257..285 extra */
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  17,
  17,
  17,
  17,
  18,
  18,
  18,
  18,
  19,
  19,
  19,
  19,
  20,
  20,
  20,
  20,
  21,
  21,
  21,
  21,
  16,
  72,
  78
], sL = [
  /* Distance codes 0..29 base */
  1,
  2,
  3,
  4,
  5,
  7,
  9,
  13,
  17,
  25,
  33,
  49,
  65,
  97,
  129,
  193,
  257,
  385,
  513,
  769,
  1025,
  1537,
  2049,
  3073,
  4097,
  6145,
  8193,
  12289,
  16385,
  24577,
  0,
  0
], dL = [
  /* Distance codes 0..29 extra */
  16,
  16,
  16,
  16,
  17,
  17,
  18,
  18,
  19,
  19,
  20,
  20,
  21,
  21,
  22,
  22,
  23,
  23,
  24,
  24,
  25,
  25,
  26,
  26,
  27,
  27,
  28,
  28,
  29,
  29,
  64,
  64
], cL = function(t, a, r, f, i, n, o, s) {
  var b = s.bits, l = 0, v = 0, m = 0, x = 0, I = 0, k = 0, P = 0, M = 0, R = 0, F = 0, C, L, U, q, Z, z = null, G = 0, O, u = new Dl.Buf16(Rr + 1), p = new Dl.Buf16(Rr + 1), d = null, c = 0, y, S, T;
  for (l = 0; l <= Rr; l++)
    u[l] = 0;
  for (v = 0; v < f; v++)
    u[a[r + v]]++;
  for (I = b, x = Rr; x >= 1 && u[x] === 0; x--)
    ;
  if (I > x && (I = x), x === 0)
    return i[n++] = 1 << 24 | 64 << 16 | 0, i[n++] = 1 << 24 | 64 << 16 | 0, s.bits = 1, 0;
  for (m = 1; m < x && u[m] === 0; m++)
    ;
  for (I < m && (I = m), M = 1, l = 1; l <= Rr; l++)
    if (M <<= 1, M -= u[l], M < 0)
      return -1;
  if (M > 0 && (t === Hl || x !== 1))
    return -1;
  for (p[1] = 0, l = 1; l < Rr; l++)
    p[l + 1] = p[l] + u[l];
  for (v = 0; v < f; v++)
    a[r + v] !== 0 && (o[p[a[r + v]]++] = v);
  if (t === Hl ? (z = d = o, O = 19) : t === Q2 ? (z = nL, G -= 257, d = oL, c -= 257, O = 256) : (z = sL, d = dL, O = -1), F = 0, v = 0, l = m, Z = n, k = I, P = 0, U = -1, R = 1 << I, q = R - 1, t === Q2 && R > Ll || t === Ul && R > Fl)
    return 1;
  for (; ; ) {
    y = l - P, o[v] < O ? (S = 0, T = o[v]) : o[v] > O ? (S = d[c + o[v]], T = z[G + o[v]]) : (S = 32 + 64, T = 0), C = 1 << l - P, L = 1 << k, m = L;
    do
      L -= C, i[Z + (F >> P) + L] = y << 24 | S << 16 | T | 0;
    while (L !== 0);
    for (C = 1 << l - 1; F & C; )
      C >>= 1;
    if (C !== 0 ? (F &= C - 1, F += C) : F = 0, v++, --u[l] === 0) {
      if (l === x)
        break;
      l = a[r + o[v]];
    }
    if (l > I && (F & q) !== U) {
      for (P === 0 && (P = I), Z += m, k = l - P, M = 1 << k; k + P < x && (M -= u[k + P], !(M <= 0)); )
        k++, M <<= 1;
      if (R += 1 << k, t === Q2 && R > Ll || t === Ul && R > Fl)
        return 1;
      U = F & q, i[U] = I << 24 | k << 16 | Z - n | 0;
    }
  }
  return F !== 0 && (i[Z + F] = l - P << 24 | 64 << 16 | 0), s.bits = I, 0;
}, Y0 = y6, ss = ig, X5 = ng, uL = iL, g9 = cL, lL = 0, lg = 1, pg = 2, $l = 4, pL = 5, U6 = 6, vr = 0, hL = 1, bL = 2, b5 = -2, hg = -3, bg = -4, mL = -5, jl = 8, mg = 1, Vl = 2, zl = 3, ql = 4, Kl = 5, Gl = 6, Wl = 7, Zl = 8, Yl = 9, Xl = 10, Hf = 11, Pt = 12, eo = 13, Jl = 14, to = 15, Ql = 16, ep = 17, tp = 18, ap = 19, $6 = 20, j6 = 21, rp = 22, fp = 23, ip = 24, np = 25, op = 26, ao = 27, sp = 28, dp = 29, Re = 30, vg = 31, vL = 32, yL = 852, gL = 592, xL = 15, _L = xL;
function cp(e) {
  return (e >>> 24 & 255) + (e >>> 8 & 65280) + ((e & 65280) << 8) + ((e & 255) << 24);
}
function wL() {
  this.mode = 0, this.last = !1, this.wrap = 0, this.havedict = !1, this.flags = 0, this.dmax = 0, this.check = 0, this.total = 0, this.head = null, this.wbits = 0, this.wsize = 0, this.whave = 0, this.wnext = 0, this.window = null, this.hold = 0, this.bits = 0, this.length = 0, this.offset = 0, this.extra = 0, this.lencode = null, this.distcode = null, this.lenbits = 0, this.distbits = 0, this.ncode = 0, this.nlen = 0, this.ndist = 0, this.have = 0, this.next = null, this.lens = new Y0.Buf16(320), this.work = new Y0.Buf16(288), this.lendyn = null, this.distdyn = null, this.sane = 0, this.back = 0, this.was = 0;
}
function yg(e) {
  var t;
  return !e || !e.state ? b5 : (t = e.state, e.total_in = e.total_out = t.total = 0, e.msg = "", t.wrap && (e.adler = t.wrap & 1), t.mode = mg, t.last = 0, t.havedict = 0, t.dmax = 32768, t.head = null, t.hold = 0, t.bits = 0, t.lencode = t.lendyn = new Y0.Buf32(yL), t.distcode = t.distdyn = new Y0.Buf32(gL), t.sane = 1, t.back = -1, vr);
}
function gg(e) {
  var t;
  return !e || !e.state ? b5 : (t = e.state, t.wsize = 0, t.whave = 0, t.wnext = 0, yg(e));
}
function xg(e, t) {
  var a, r;
  return !e || !e.state || (r = e.state, t < 0 ? (a = 0, t = -t) : (a = (t >> 4) + 1, t < 48 && (t &= 15)), t && (t < 8 || t > 15)) ? b5 : (r.window !== null && r.wbits !== t && (r.window = null), r.wrap = a, r.wbits = t, gg(e));
}
function _g(e, t) {
  var a, r;
  return e ? (r = new wL(), e.state = r, r.window = null, a = xg(e, t), a !== vr && (e.state = null), a) : b5;
}
function SL(e) {
  return _g(e, _L);
}
var up = !0, ro, fo;
function EL(e) {
  if (up) {
    var t;
    for (ro = new Y0.Buf32(512), fo = new Y0.Buf32(32), t = 0; t < 144; )
      e.lens[t++] = 8;
    for (; t < 256; )
      e.lens[t++] = 9;
    for (; t < 280; )
      e.lens[t++] = 7;
    for (; t < 288; )
      e.lens[t++] = 8;
    for (g9(lg, e.lens, 0, 288, ro, 0, e.work, { bits: 9 }), t = 0; t < 32; )
      e.lens[t++] = 5;
    g9(pg, e.lens, 0, 32, fo, 0, e.work, { bits: 5 }), up = !1;
  }
  e.lencode = ro, e.lenbits = 9, e.distcode = fo, e.distbits = 5;
}
function wg(e, t, a, r) {
  var f, i = e.state;
  return i.window === null && (i.wsize = 1 << i.wbits, i.wnext = 0, i.whave = 0, i.window = new Y0.Buf8(i.wsize)), r >= i.wsize ? (Y0.arraySet(i.window, t, a - i.wsize, i.wsize, 0), i.wnext = 0, i.whave = i.wsize) : (f = i.wsize - i.wnext, f > r && (f = r), Y0.arraySet(i.window, t, a - r, f, i.wnext), r -= f, r ? (Y0.arraySet(i.window, t, a - r, r, 0), i.wnext = r, i.whave = i.wsize) : (i.wnext += f, i.wnext === i.wsize && (i.wnext = 0), i.whave < i.wsize && (i.whave += f))), 0;
}
function TL(e, t) {
  var a, r, f, i, n, o, s, b, l, v, m, x, I, k, P = 0, M, R, F, C, L, U, q, Z, z = new Y0.Buf8(4), G, O, u = (
    /* permutation of code lengths */
    [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]
  );
  if (!e || !e.state || !e.output || !e.input && e.avail_in !== 0)
    return b5;
  a = e.state, a.mode === Pt && (a.mode = eo), n = e.next_out, f = e.output, s = e.avail_out, i = e.next_in, r = e.input, o = e.avail_in, b = a.hold, l = a.bits, v = o, m = s, Z = vr;
  e:
    for (; ; )
      switch (a.mode) {
        case mg:
          if (a.wrap === 0) {
            a.mode = eo;
            break;
          }
          for (; l < 16; ) {
            if (o === 0)
              break e;
            o--, b += r[i++] << l, l += 8;
          }
          if (a.wrap & 2 && b === 35615) {
            a.check = 0, z[0] = b & 255, z[1] = b >>> 8 & 255, a.check = X5(a.check, z, 2, 0), b = 0, l = 0, a.mode = Vl;
            break;
          }
          if (a.flags = 0, a.head && (a.head.done = !1), !(a.wrap & 1) || /* check if zlib header allowed */
          (((b & 255) << 8) + (b >> 8)) % 31) {
            e.msg = "incorrect header check", a.mode = Re;
            break;
          }
          if ((b & 15) !== jl) {
            e.msg = "unknown compression method", a.mode = Re;
            break;
          }
          if (b >>>= 4, l -= 4, q = (b & 15) + 8, a.wbits === 0)
            a.wbits = q;
          else if (q > a.wbits) {
            e.msg = "invalid window size", a.mode = Re;
            break;
          }
          a.dmax = 1 << q, e.adler = a.check = 1, a.mode = b & 512 ? Xl : Pt, b = 0, l = 0;
          break;
        case Vl:
          for (; l < 16; ) {
            if (o === 0)
              break e;
            o--, b += r[i++] << l, l += 8;
          }
          if (a.flags = b, (a.flags & 255) !== jl) {
            e.msg = "unknown compression method", a.mode = Re;
            break;
          }
          if (a.flags & 57344) {
            e.msg = "unknown header flags set", a.mode = Re;
            break;
          }
          a.head && (a.head.text = b >> 8 & 1), a.flags & 512 && (z[0] = b & 255, z[1] = b >>> 8 & 255, a.check = X5(a.check, z, 2, 0)), b = 0, l = 0, a.mode = zl;
        case zl:
          for (; l < 32; ) {
            if (o === 0)
              break e;
            o--, b += r[i++] << l, l += 8;
          }
          a.head && (a.head.time = b), a.flags & 512 && (z[0] = b & 255, z[1] = b >>> 8 & 255, z[2] = b >>> 16 & 255, z[3] = b >>> 24 & 255, a.check = X5(a.check, z, 4, 0)), b = 0, l = 0, a.mode = ql;
        case ql:
          for (; l < 16; ) {
            if (o === 0)
              break e;
            o--, b += r[i++] << l, l += 8;
          }
          a.head && (a.head.xflags = b & 255, a.head.os = b >> 8), a.flags & 512 && (z[0] = b & 255, z[1] = b >>> 8 & 255, a.check = X5(a.check, z, 2, 0)), b = 0, l = 0, a.mode = Kl;
        case Kl:
          if (a.flags & 1024) {
            for (; l < 16; ) {
              if (o === 0)
                break e;
              o--, b += r[i++] << l, l += 8;
            }
            a.length = b, a.head && (a.head.extra_len = b), a.flags & 512 && (z[0] = b & 255, z[1] = b >>> 8 & 255, a.check = X5(a.check, z, 2, 0)), b = 0, l = 0;
          } else
            a.head && (a.head.extra = null);
          a.mode = Gl;
        case Gl:
          if (a.flags & 1024 && (x = a.length, x > o && (x = o), x && (a.head && (q = a.head.extra_len - a.length, a.head.extra || (a.head.extra = new Array(a.head.extra_len)), Y0.arraySet(
            a.head.extra,
            r,
            i,
            // extra field is limited to 65536 bytes
            // - no need for additional size check
            x,
            /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/
            q
          )), a.flags & 512 && (a.check = X5(a.check, r, x, i)), o -= x, i += x, a.length -= x), a.length))
            break e;
          a.length = 0, a.mode = Wl;
        case Wl:
          if (a.flags & 2048) {
            if (o === 0)
              break e;
            x = 0;
            do
              q = r[i + x++], a.head && q && a.length < 65536 && (a.head.name += String.fromCharCode(q));
            while (q && x < o);
            if (a.flags & 512 && (a.check = X5(a.check, r, x, i)), o -= x, i += x, q)
              break e;
          } else
            a.head && (a.head.name = null);
          a.length = 0, a.mode = Zl;
        case Zl:
          if (a.flags & 4096) {
            if (o === 0)
              break e;
            x = 0;
            do
              q = r[i + x++], a.head && q && a.length < 65536 && (a.head.comment += String.fromCharCode(q));
            while (q && x < o);
            if (a.flags & 512 && (a.check = X5(a.check, r, x, i)), o -= x, i += x, q)
              break e;
          } else
            a.head && (a.head.comment = null);
          a.mode = Yl;
        case Yl:
          if (a.flags & 512) {
            for (; l < 16; ) {
              if (o === 0)
                break e;
              o--, b += r[i++] << l, l += 8;
            }
            if (b !== (a.check & 65535)) {
              e.msg = "header crc mismatch", a.mode = Re;
              break;
            }
            b = 0, l = 0;
          }
          a.head && (a.head.hcrc = a.flags >> 9 & 1, a.head.done = !0), e.adler = a.check = 0, a.mode = Pt;
          break;
        case Xl:
          for (; l < 32; ) {
            if (o === 0)
              break e;
            o--, b += r[i++] << l, l += 8;
          }
          e.adler = a.check = cp(b), b = 0, l = 0, a.mode = Hf;
        case Hf:
          if (a.havedict === 0)
            return e.next_out = n, e.avail_out = s, e.next_in = i, e.avail_in = o, a.hold = b, a.bits = l, bL;
          e.adler = a.check = 1, a.mode = Pt;
        case Pt:
          if (t === pL || t === U6)
            break e;
        case eo:
          if (a.last) {
            b >>>= l & 7, l -= l & 7, a.mode = ao;
            break;
          }
          for (; l < 3; ) {
            if (o === 0)
              break e;
            o--, b += r[i++] << l, l += 8;
          }
          switch (a.last = b & 1, b >>>= 1, l -= 1, b & 3) {
            case 0:
              a.mode = Jl;
              break;
            case 1:
              if (EL(a), a.mode = $6, t === U6) {
                b >>>= 2, l -= 2;
                break e;
              }
              break;
            case 2:
              a.mode = ep;
              break;
            case 3:
              e.msg = "invalid block type", a.mode = Re;
          }
          b >>>= 2, l -= 2;
          break;
        case Jl:
          for (b >>>= l & 7, l -= l & 7; l < 32; ) {
            if (o === 0)
              break e;
            o--, b += r[i++] << l, l += 8;
          }
          if ((b & 65535) !== (b >>> 16 ^ 65535)) {
            e.msg = "invalid stored block lengths", a.mode = Re;
            break;
          }
          if (a.length = b & 65535, b = 0, l = 0, a.mode = to, t === U6)
            break e;
        case to:
          a.mode = Ql;
        case Ql:
          if (x = a.length, x) {
            if (x > o && (x = o), x > s && (x = s), x === 0)
              break e;
            Y0.arraySet(f, r, i, x, n), o -= x, i += x, s -= x, n += x, a.length -= x;
            break;
          }
          a.mode = Pt;
          break;
        case ep:
          for (; l < 14; ) {
            if (o === 0)
              break e;
            o--, b += r[i++] << l, l += 8;
          }
          if (a.nlen = (b & 31) + 257, b >>>= 5, l -= 5, a.ndist = (b & 31) + 1, b >>>= 5, l -= 5, a.ncode = (b & 15) + 4, b >>>= 4, l -= 4, a.nlen > 286 || a.ndist > 30) {
            e.msg = "too many length or distance symbols", a.mode = Re;
            break;
          }
          a.have = 0, a.mode = tp;
        case tp:
          for (; a.have < a.ncode; ) {
            for (; l < 3; ) {
              if (o === 0)
                break e;
              o--, b += r[i++] << l, l += 8;
            }
            a.lens[u[a.have++]] = b & 7, b >>>= 3, l -= 3;
          }
          for (; a.have < 19; )
            a.lens[u[a.have++]] = 0;
          if (a.lencode = a.lendyn, a.lenbits = 7, G = { bits: a.lenbits }, Z = g9(lL, a.lens, 0, 19, a.lencode, 0, a.work, G), a.lenbits = G.bits, Z) {
            e.msg = "invalid code lengths set", a.mode = Re;
            break;
          }
          a.have = 0, a.mode = ap;
        case ap:
          for (; a.have < a.nlen + a.ndist; ) {
            for (; P = a.lencode[b & (1 << a.lenbits) - 1], M = P >>> 24, R = P >>> 16 & 255, F = P & 65535, !(M <= l); ) {
              if (o === 0)
                break e;
              o--, b += r[i++] << l, l += 8;
            }
            if (F < 16)
              b >>>= M, l -= M, a.lens[a.have++] = F;
            else {
              if (F === 16) {
                for (O = M + 2; l < O; ) {
                  if (o === 0)
                    break e;
                  o--, b += r[i++] << l, l += 8;
                }
                if (b >>>= M, l -= M, a.have === 0) {
                  e.msg = "invalid bit length repeat", a.mode = Re;
                  break;
                }
                q = a.lens[a.have - 1], x = 3 + (b & 3), b >>>= 2, l -= 2;
              } else if (F === 17) {
                for (O = M + 3; l < O; ) {
                  if (o === 0)
                    break e;
                  o--, b += r[i++] << l, l += 8;
                }
                b >>>= M, l -= M, q = 0, x = 3 + (b & 7), b >>>= 3, l -= 3;
              } else {
                for (O = M + 7; l < O; ) {
                  if (o === 0)
                    break e;
                  o--, b += r[i++] << l, l += 8;
                }
                b >>>= M, l -= M, q = 0, x = 11 + (b & 127), b >>>= 7, l -= 7;
              }
              if (a.have + x > a.nlen + a.ndist) {
                e.msg = "invalid bit length repeat", a.mode = Re;
                break;
              }
              for (; x--; )
                a.lens[a.have++] = q;
            }
          }
          if (a.mode === Re)
            break;
          if (a.lens[256] === 0) {
            e.msg = "invalid code -- missing end-of-block", a.mode = Re;
            break;
          }
          if (a.lenbits = 9, G = { bits: a.lenbits }, Z = g9(lg, a.lens, 0, a.nlen, a.lencode, 0, a.work, G), a.lenbits = G.bits, Z) {
            e.msg = "invalid literal/lengths set", a.mode = Re;
            break;
          }
          if (a.distbits = 6, a.distcode = a.distdyn, G = { bits: a.distbits }, Z = g9(pg, a.lens, a.nlen, a.ndist, a.distcode, 0, a.work, G), a.distbits = G.bits, Z) {
            e.msg = "invalid distances set", a.mode = Re;
            break;
          }
          if (a.mode = $6, t === U6)
            break e;
        case $6:
          a.mode = j6;
        case j6:
          if (o >= 6 && s >= 258) {
            e.next_out = n, e.avail_out = s, e.next_in = i, e.avail_in = o, a.hold = b, a.bits = l, uL(e, m), n = e.next_out, f = e.output, s = e.avail_out, i = e.next_in, r = e.input, o = e.avail_in, b = a.hold, l = a.bits, a.mode === Pt && (a.back = -1);
            break;
          }
          for (a.back = 0; P = a.lencode[b & (1 << a.lenbits) - 1], M = P >>> 24, R = P >>> 16 & 255, F = P & 65535, !(M <= l); ) {
            if (o === 0)
              break e;
            o--, b += r[i++] << l, l += 8;
          }
          if (R && !(R & 240)) {
            for (C = M, L = R, U = F; P = a.lencode[U + ((b & (1 << C + L) - 1) >> C)], M = P >>> 24, R = P >>> 16 & 255, F = P & 65535, !(C + M <= l); ) {
              if (o === 0)
                break e;
              o--, b += r[i++] << l, l += 8;
            }
            b >>>= C, l -= C, a.back += C;
          }
          if (b >>>= M, l -= M, a.back += M, a.length = F, R === 0) {
            a.mode = op;
            break;
          }
          if (R & 32) {
            a.back = -1, a.mode = Pt;
            break;
          }
          if (R & 64) {
            e.msg = "invalid literal/length code", a.mode = Re;
            break;
          }
          a.extra = R & 15, a.mode = rp;
        case rp:
          if (a.extra) {
            for (O = a.extra; l < O; ) {
              if (o === 0)
                break e;
              o--, b += r[i++] << l, l += 8;
            }
            a.length += b & (1 << a.extra) - 1, b >>>= a.extra, l -= a.extra, a.back += a.extra;
          }
          a.was = a.length, a.mode = fp;
        case fp:
          for (; P = a.distcode[b & (1 << a.distbits) - 1], M = P >>> 24, R = P >>> 16 & 255, F = P & 65535, !(M <= l); ) {
            if (o === 0)
              break e;
            o--, b += r[i++] << l, l += 8;
          }
          if (!(R & 240)) {
            for (C = M, L = R, U = F; P = a.distcode[U + ((b & (1 << C + L) - 1) >> C)], M = P >>> 24, R = P >>> 16 & 255, F = P & 65535, !(C + M <= l); ) {
              if (o === 0)
                break e;
              o--, b += r[i++] << l, l += 8;
            }
            b >>>= C, l -= C, a.back += C;
          }
          if (b >>>= M, l -= M, a.back += M, R & 64) {
            e.msg = "invalid distance code", a.mode = Re;
            break;
          }
          a.offset = F, a.extra = R & 15, a.mode = ip;
        case ip:
          if (a.extra) {
            for (O = a.extra; l < O; ) {
              if (o === 0)
                break e;
              o--, b += r[i++] << l, l += 8;
            }
            a.offset += b & (1 << a.extra) - 1, b >>>= a.extra, l -= a.extra, a.back += a.extra;
          }
          if (a.offset > a.dmax) {
            e.msg = "invalid distance too far back", a.mode = Re;
            break;
          }
          a.mode = np;
        case np:
          if (s === 0)
            break e;
          if (x = m - s, a.offset > x) {
            if (x = a.offset - x, x > a.whave && a.sane) {
              e.msg = "invalid distance too far back", a.mode = Re;
              break;
            }
            x > a.wnext ? (x -= a.wnext, I = a.wsize - x) : I = a.wnext - x, x > a.length && (x = a.length), k = a.window;
          } else
            k = f, I = n - a.offset, x = a.length;
          x > s && (x = s), s -= x, a.length -= x;
          do
            f[n++] = k[I++];
          while (--x);
          a.length === 0 && (a.mode = j6);
          break;
        case op:
          if (s === 0)
            break e;
          f[n++] = a.length, s--, a.mode = j6;
          break;
        case ao:
          if (a.wrap) {
            for (; l < 32; ) {
              if (o === 0)
                break e;
              o--, b |= r[i++] << l, l += 8;
            }
            if (m -= s, e.total_out += m, a.total += m, m && (e.adler = a.check = /*UPDATE(state.check, put - _out, _out);*/
            a.flags ? X5(a.check, f, m, n - m) : ss(a.check, f, m, n - m)), m = s, (a.flags ? b : cp(b)) !== a.check) {
              e.msg = "incorrect data check", a.mode = Re;
              break;
            }
            b = 0, l = 0;
          }
          a.mode = sp;
        case sp:
          if (a.wrap && a.flags) {
            for (; l < 32; ) {
              if (o === 0)
                break e;
              o--, b += r[i++] << l, l += 8;
            }
            if (b !== (a.total & 4294967295)) {
              e.msg = "incorrect length check", a.mode = Re;
              break;
            }
            b = 0, l = 0;
          }
          a.mode = dp;
        case dp:
          Z = hL;
          break e;
        case Re:
          Z = hg;
          break e;
        case vg:
          return bg;
        case vL:
        default:
          return b5;
      }
  return e.next_out = n, e.avail_out = s, e.next_in = i, e.avail_in = o, a.hold = b, a.bits = l, (a.wsize || m !== e.avail_out && a.mode < Re && (a.mode < ao || t !== $l)) && wg(e, e.output, e.next_out, m - e.avail_out), v -= e.avail_in, m -= e.avail_out, e.total_in += v, e.total_out += m, a.total += m, a.wrap && m && (e.adler = a.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/
  a.flags ? X5(a.check, f, m, e.next_out - m) : ss(a.check, f, m, e.next_out - m)), e.data_type = a.bits + (a.last ? 64 : 0) + (a.mode === Pt ? 128 : 0) + (a.mode === $6 || a.mode === to ? 256 : 0), (v === 0 && m === 0 || t === $l) && Z === vr && (Z = mL), Z;
}
function AL(e) {
  if (!e || !e.state)
    return b5;
  var t = e.state;
  return t.window && (t.window = null), e.state = null, vr;
}
function IL(e, t) {
  var a;
  return !e || !e.state || (a = e.state, !(a.wrap & 2)) ? b5 : (a.head = t, t.done = !1, vr);
}
function kL(e, t) {
  var a = t.length, r, f, i;
  return !e || !e.state || (r = e.state, r.wrap !== 0 && r.mode !== Hf) ? b5 : r.mode === Hf && (f = 1, f = ss(f, t, a, 0), f !== r.check) ? hg : (i = wg(e, t, a, a), i ? (r.mode = vg, bg) : (r.havedict = 1, vr));
}
G5.inflateReset = gg;
G5.inflateReset2 = xg;
G5.inflateResetKeep = yg;
G5.inflateInit = SL;
G5.inflateInit2 = _g;
G5.inflate = TL;
G5.inflateEnd = AL;
G5.inflateGetHeader = IL;
G5.inflateSetDictionary = kL;
G5.inflateInfo = "pako inflate (from Nodeca project)";
var OL = {
  /* Allowed flush values; see deflate() and inflate() below for details */
  Z_NO_FLUSH: 0,
  Z_PARTIAL_FLUSH: 1,
  Z_SYNC_FLUSH: 2,
  Z_FULL_FLUSH: 3,
  Z_FINISH: 4,
  Z_BLOCK: 5,
  Z_TREES: 6,
  /* Return codes for the compression/decompression functions. Negative values
  * are errors, positive values are used for special but normal events.
  */
  Z_OK: 0,
  Z_STREAM_END: 1,
  Z_NEED_DICT: 2,
  Z_ERRNO: -1,
  Z_STREAM_ERROR: -2,
  Z_DATA_ERROR: -3,
  //Z_MEM_ERROR:     -4,
  Z_BUF_ERROR: -5,
  //Z_VERSION_ERROR: -6,
  /* compression levels */
  Z_NO_COMPRESSION: 0,
  Z_BEST_SPEED: 1,
  Z_BEST_COMPRESSION: 9,
  Z_DEFAULT_COMPRESSION: -1,
  Z_FILTERED: 1,
  Z_HUFFMAN_ONLY: 2,
  Z_RLE: 3,
  Z_FIXED: 4,
  Z_DEFAULT_STRATEGY: 0,
  /* Possible values of the data_type field (though see inflate()) */
  Z_BINARY: 0,
  Z_TEXT: 1,
  //Z_ASCII:                1, // = Z_TEXT (deprecated)
  Z_UNKNOWN: 2,
  /* The deflate compression method */
  Z_DEFLATED: 8
  //Z_NULL:                 null // Use -1 or null inline, depending on var type
};
(function(e) {
  var t = yt(), a = QC, r = At, f = G5, i = OL;
  for (var n in i)
    e[n] = i[n];
  e.NONE = 0, e.DEFLATE = 1, e.INFLATE = 2, e.GZIP = 3, e.GUNZIP = 4, e.DEFLATERAW = 5, e.INFLATERAW = 6, e.UNZIP = 7;
  var o = 31, s = 139;
  function b(l) {
    if (typeof l != "number" || l < e.DEFLATE || l > e.UNZIP)
      throw new TypeError("Bad argument");
    this.dictionary = null, this.err = 0, this.flush = 0, this.init_done = !1, this.level = 0, this.memLevel = 0, this.mode = l, this.strategy = 0, this.windowBits = 0, this.write_in_progress = !1, this.pending_close = !1, this.gzip_id_bytes_read = 0;
  }
  b.prototype.close = function() {
    if (this.write_in_progress) {
      this.pending_close = !0;
      return;
    }
    this.pending_close = !1, t(this.init_done, "close before init"), t(this.mode <= e.UNZIP), this.mode === e.DEFLATE || this.mode === e.GZIP || this.mode === e.DEFLATERAW ? r.deflateEnd(this.strm) : (this.mode === e.INFLATE || this.mode === e.GUNZIP || this.mode === e.INFLATERAW || this.mode === e.UNZIP) && f.inflateEnd(this.strm), this.mode = e.NONE, this.dictionary = null;
  }, b.prototype.write = function(l, v, m, x, I, k, P) {
    return this._write(!0, l, v, m, x, I, k, P);
  }, b.prototype.writeSync = function(l, v, m, x, I, k, P) {
    return this._write(!1, l, v, m, x, I, k, P);
  }, b.prototype._write = function(l, v, m, x, I, k, P, M) {
    if (t.equal(arguments.length, 8), t(this.init_done, "write before init"), t(this.mode !== e.NONE, "already finalized"), t.equal(!1, this.write_in_progress, "write already in progress"), t.equal(!1, this.pending_close, "close is pending"), this.write_in_progress = !0, t.equal(!1, v === void 0, "must provide flush value"), this.write_in_progress = !0, v !== e.Z_NO_FLUSH && v !== e.Z_PARTIAL_FLUSH && v !== e.Z_SYNC_FLUSH && v !== e.Z_FULL_FLUSH && v !== e.Z_FINISH && v !== e.Z_BLOCK)
      throw new Error("Invalid flush value");
    if (m == null && (m = Q.Buffer.alloc(0), I = 0, x = 0), this.strm.avail_in = I, this.strm.input = m, this.strm.next_in = x, this.strm.avail_out = M, this.strm.output = k, this.strm.next_out = P, this.flush = v, !l)
      return this._process(), this._checkError() ? this._afterSync() : void 0;
    var R = this;
    return g7.nextTick(function() {
      R._process(), R._after();
    }), this;
  }, b.prototype._afterSync = function() {
    var l = this.strm.avail_out, v = this.strm.avail_in;
    return this.write_in_progress = !1, [v, l];
  }, b.prototype._process = function() {
    var l = null;
    switch (this.mode) {
      case e.DEFLATE:
      case e.GZIP:
      case e.DEFLATERAW:
        this.err = r.deflate(this.strm, this.flush);
        break;
      case e.UNZIP:
        switch (this.strm.avail_in > 0 && (l = this.strm.next_in), this.gzip_id_bytes_read) {
          case 0:
            if (l === null)
              break;
            if (this.strm.input[l] === o) {
              if (this.gzip_id_bytes_read = 1, l++, this.strm.avail_in === 1)
                break;
            } else {
              this.mode = e.INFLATE;
              break;
            }
          case 1:
            if (l === null)
              break;
            this.strm.input[l] === s ? (this.gzip_id_bytes_read = 2, this.mode = e.GUNZIP) : this.mode = e.INFLATE;
            break;
          default:
            throw new Error("invalid number of gzip magic number bytes read");
        }
      case e.INFLATE:
      case e.GUNZIP:
      case e.INFLATERAW:
        for (this.err = f.inflate(
          this.strm,
          this.flush
          // If data was encoded with dictionary
        ), this.err === e.Z_NEED_DICT && this.dictionary && (this.err = f.inflateSetDictionary(this.strm, this.dictionary), this.err === e.Z_OK ? this.err = f.inflate(this.strm, this.flush) : this.err === e.Z_DATA_ERROR && (this.err = e.Z_NEED_DICT)); this.strm.avail_in > 0 && this.mode === e.GUNZIP && this.err === e.Z_STREAM_END && this.strm.next_in[0] !== 0; )
          this.reset(), this.err = f.inflate(this.strm, this.flush);
        break;
      default:
        throw new Error("Unknown mode " + this.mode);
    }
  }, b.prototype._checkError = function() {
    switch (this.err) {
      case e.Z_OK:
      case e.Z_BUF_ERROR:
        if (this.strm.avail_out !== 0 && this.flush === e.Z_FINISH)
          return this._error("unexpected end of file"), !1;
        break;
      case e.Z_STREAM_END:
        break;
      case e.Z_NEED_DICT:
        return this.dictionary == null ? this._error("Missing dictionary") : this._error("Bad dictionary"), !1;
      default:
        return this._error("Zlib error"), !1;
    }
    return !0;
  }, b.prototype._after = function() {
    if (this._checkError()) {
      var l = this.strm.avail_out, v = this.strm.avail_in;
      this.write_in_progress = !1, this.callback(v, l), this.pending_close && this.close();
    }
  }, b.prototype._error = function(l) {
    this.strm.msg && (l = this.strm.msg), this.onerror(
      l,
      this.err
      // no hope of rescue.
    ), this.write_in_progress = !1, this.pending_close && this.close();
  }, b.prototype.init = function(l, v, m, x, I) {
    t(arguments.length === 4 || arguments.length === 5, "init(windowBits, level, memLevel, strategy, [dictionary])"), t(l >= 8 && l <= 15, "invalid windowBits"), t(v >= -1 && v <= 9, "invalid compression level"), t(m >= 1 && m <= 9, "invalid memlevel"), t(x === e.Z_FILTERED || x === e.Z_HUFFMAN_ONLY || x === e.Z_RLE || x === e.Z_FIXED || x === e.Z_DEFAULT_STRATEGY, "invalid strategy"), this._init(v, l, m, x, I), this._setDictionary();
  }, b.prototype.params = function() {
    throw new Error("deflateParams Not supported");
  }, b.prototype.reset = function() {
    this._reset(), this._setDictionary();
  }, b.prototype._init = function(l, v, m, x, I) {
    switch (this.level = l, this.windowBits = v, this.memLevel = m, this.strategy = x, this.flush = e.Z_NO_FLUSH, this.err = e.Z_OK, (this.mode === e.GZIP || this.mode === e.GUNZIP) && (this.windowBits += 16), this.mode === e.UNZIP && (this.windowBits += 32), (this.mode === e.DEFLATERAW || this.mode === e.INFLATERAW) && (this.windowBits = -1 * this.windowBits), this.strm = new a(), this.mode) {
      case e.DEFLATE:
      case e.GZIP:
      case e.DEFLATERAW:
        this.err = r.deflateInit2(this.strm, this.level, e.Z_DEFLATED, this.windowBits, this.memLevel, this.strategy);
        break;
      case e.INFLATE:
      case e.GUNZIP:
      case e.INFLATERAW:
      case e.UNZIP:
        this.err = f.inflateInit2(this.strm, this.windowBits);
        break;
      default:
        throw new Error("Unknown mode " + this.mode);
    }
    this.err !== e.Z_OK && this._error("Init error"), this.dictionary = I, this.write_in_progress = !1, this.init_done = !0;
  }, b.prototype._setDictionary = function() {
    if (this.dictionary != null) {
      switch (this.err = e.Z_OK, this.mode) {
        case e.DEFLATE:
        case e.DEFLATERAW:
          this.err = r.deflateSetDictionary(this.strm, this.dictionary);
          break;
      }
      this.err !== e.Z_OK && this._error("Failed to set dictionary");
    }
  }, b.prototype._reset = function() {
    switch (this.err = e.Z_OK, this.mode) {
      case e.DEFLATE:
      case e.DEFLATERAW:
      case e.GZIP:
        this.err = r.deflateReset(this.strm);
        break;
      case e.INFLATE:
      case e.INFLATERAW:
      case e.GUNZIP:
        this.err = f.inflateReset(this.strm);
        break;
    }
    this.err !== e.Z_OK && this._error("Failed to reset stream");
  }, e.Zlib = b;
})(Vy);
(function(e) {
  var t = Q.Buffer, a = Xs.Transform, r = Vy, f = R0, i = yt().ok, n = Q.kMaxLength, o = "Cannot create final Buffer. It would be larger than 0x" + n.toString(16) + " bytes";
  r.Z_MIN_WINDOWBITS = 8, r.Z_MAX_WINDOWBITS = 15, r.Z_DEFAULT_WINDOWBITS = 15, r.Z_MIN_CHUNK = 64, r.Z_MAX_CHUNK = 1 / 0, r.Z_DEFAULT_CHUNK = 16 * 1024, r.Z_MIN_MEMLEVEL = 1, r.Z_MAX_MEMLEVEL = 9, r.Z_DEFAULT_MEMLEVEL = 8, r.Z_MIN_LEVEL = -1, r.Z_MAX_LEVEL = 9, r.Z_DEFAULT_LEVEL = r.Z_DEFAULT_COMPRESSION;
  for (var s = Object.keys(r), b = 0; b < s.length; b++) {
    var l = s[b];
    l.match(/^Z/) && Object.defineProperty(e, l, {
      enumerable: !0,
      value: r[l],
      writable: !1
    });
  }
  for (var v = {
    Z_OK: r.Z_OK,
    Z_STREAM_END: r.Z_STREAM_END,
    Z_NEED_DICT: r.Z_NEED_DICT,
    Z_ERRNO: r.Z_ERRNO,
    Z_STREAM_ERROR: r.Z_STREAM_ERROR,
    Z_DATA_ERROR: r.Z_DATA_ERROR,
    Z_MEM_ERROR: r.Z_MEM_ERROR,
    Z_BUF_ERROR: r.Z_BUF_ERROR,
    Z_VERSION_ERROR: r.Z_VERSION_ERROR
  }, m = Object.keys(v), x = 0; x < m.length; x++) {
    var I = m[x];
    v[v[I]] = I;
  }
  Object.defineProperty(e, "codes", {
    enumerable: !0,
    value: Object.freeze(v),
    writable: !1
  }), e.Deflate = M, e.Inflate = R, e.Gzip = F, e.Gunzip = C, e.DeflateRaw = L, e.InflateRaw = U, e.Unzip = q, e.createDeflate = function(u) {
    return new M(u);
  }, e.createInflate = function(u) {
    return new R(u);
  }, e.createDeflateRaw = function(u) {
    return new L(u);
  }, e.createInflateRaw = function(u) {
    return new U(u);
  }, e.createGzip = function(u) {
    return new F(u);
  }, e.createGunzip = function(u) {
    return new C(u);
  }, e.createUnzip = function(u) {
    return new q(u);
  }, e.deflate = function(u, p, d) {
    return typeof p == "function" && (d = p, p = {}), k(new M(p), u, d);
  }, e.deflateSync = function(u, p) {
    return P(new M(p), u);
  }, e.gzip = function(u, p, d) {
    return typeof p == "function" && (d = p, p = {}), k(new F(p), u, d);
  }, e.gzipSync = function(u, p) {
    return P(new F(p), u);
  }, e.deflateRaw = function(u, p, d) {
    return typeof p == "function" && (d = p, p = {}), k(new L(p), u, d);
  }, e.deflateRawSync = function(u, p) {
    return P(new L(p), u);
  }, e.unzip = function(u, p, d) {
    return typeof p == "function" && (d = p, p = {}), k(new q(p), u, d);
  }, e.unzipSync = function(u, p) {
    return P(new q(p), u);
  }, e.inflate = function(u, p, d) {
    return typeof p == "function" && (d = p, p = {}), k(new R(p), u, d);
  }, e.inflateSync = function(u, p) {
    return P(new R(p), u);
  }, e.gunzip = function(u, p, d) {
    return typeof p == "function" && (d = p, p = {}), k(new C(p), u, d);
  }, e.gunzipSync = function(u, p) {
    return P(new C(p), u);
  }, e.inflateRaw = function(u, p, d) {
    return typeof p == "function" && (d = p, p = {}), k(new U(p), u, d);
  }, e.inflateRawSync = function(u, p) {
    return P(new U(p), u);
  };
  function k(u, p, d) {
    var c = [], y = 0;
    u.on("error", T), u.on("end", g), u.end(p), S();
    function S() {
      for (var w; (w = u.read()) !== null; )
        c.push(w), y += w.length;
      u.once("readable", S);
    }
    function T(w) {
      u.removeListener("end", g), u.removeListener("readable", S), d(w);
    }
    function g() {
      var w, A = null;
      y >= n ? A = new RangeError(o) : w = t.concat(c, y), c = [], u.close(), d(A, w);
    }
  }
  function P(u, p) {
    if (typeof p == "string" && (p = t.from(p)), !t.isBuffer(p))
      throw new TypeError("Not a string or buffer");
    var d = u._finishFlushFlag;
    return u._processChunk(p, d);
  }
  function M(u) {
    if (!(this instanceof M))
      return new M(u);
    z.call(this, u, r.DEFLATE);
  }
  function R(u) {
    if (!(this instanceof R))
      return new R(u);
    z.call(this, u, r.INFLATE);
  }
  function F(u) {
    if (!(this instanceof F))
      return new F(u);
    z.call(this, u, r.GZIP);
  }
  function C(u) {
    if (!(this instanceof C))
      return new C(u);
    z.call(this, u, r.GUNZIP);
  }
  function L(u) {
    if (!(this instanceof L))
      return new L(u);
    z.call(this, u, r.DEFLATERAW);
  }
  function U(u) {
    if (!(this instanceof U))
      return new U(u);
    z.call(this, u, r.INFLATERAW);
  }
  function q(u) {
    if (!(this instanceof q))
      return new q(u);
    z.call(this, u, r.UNZIP);
  }
  function Z(u) {
    return u === r.Z_NO_FLUSH || u === r.Z_PARTIAL_FLUSH || u === r.Z_SYNC_FLUSH || u === r.Z_FULL_FLUSH || u === r.Z_FINISH || u === r.Z_BLOCK;
  }
  function z(u, p) {
    var d = this;
    if (this._opts = u = u || {}, this._chunkSize = u.chunkSize || e.Z_DEFAULT_CHUNK, a.call(this, u), u.flush && !Z(u.flush))
      throw new Error("Invalid flush flag: " + u.flush);
    if (u.finishFlush && !Z(u.finishFlush))
      throw new Error("Invalid flush flag: " + u.finishFlush);
    if (this._flushFlag = u.flush || r.Z_NO_FLUSH, this._finishFlushFlag = typeof u.finishFlush < "u" ? u.finishFlush : r.Z_FINISH, u.chunkSize && (u.chunkSize < e.Z_MIN_CHUNK || u.chunkSize > e.Z_MAX_CHUNK))
      throw new Error("Invalid chunk size: " + u.chunkSize);
    if (u.windowBits && (u.windowBits < e.Z_MIN_WINDOWBITS || u.windowBits > e.Z_MAX_WINDOWBITS))
      throw new Error("Invalid windowBits: " + u.windowBits);
    if (u.level && (u.level < e.Z_MIN_LEVEL || u.level > e.Z_MAX_LEVEL))
      throw new Error("Invalid compression level: " + u.level);
    if (u.memLevel && (u.memLevel < e.Z_MIN_MEMLEVEL || u.memLevel > e.Z_MAX_MEMLEVEL))
      throw new Error("Invalid memLevel: " + u.memLevel);
    if (u.strategy && u.strategy != e.Z_FILTERED && u.strategy != e.Z_HUFFMAN_ONLY && u.strategy != e.Z_RLE && u.strategy != e.Z_FIXED && u.strategy != e.Z_DEFAULT_STRATEGY)
      throw new Error("Invalid strategy: " + u.strategy);
    if (u.dictionary && !t.isBuffer(u.dictionary))
      throw new Error("Invalid dictionary: it should be a Buffer instance");
    this._handle = new r.Zlib(p);
    var c = this;
    this._hadError = !1, this._handle.onerror = function(T, g) {
      G(c), c._hadError = !0;
      var w = new Error(T);
      w.errno = g, w.code = e.codes[g], c.emit("error", w);
    };
    var y = e.Z_DEFAULT_COMPRESSION;
    typeof u.level == "number" && (y = u.level);
    var S = e.Z_DEFAULT_STRATEGY;
    typeof u.strategy == "number" && (S = u.strategy), this._handle.init(u.windowBits || e.Z_DEFAULT_WINDOWBITS, y, u.memLevel || e.Z_DEFAULT_MEMLEVEL, S, u.dictionary), this._buffer = t.allocUnsafe(this._chunkSize), this._offset = 0, this._level = y, this._strategy = S, this.once("end", this.close), Object.defineProperty(this, "_closed", {
      get: function() {
        return !d._handle;
      },
      configurable: !0,
      enumerable: !0
    });
  }
  f.inherits(z, a), z.prototype.params = function(u, p, d) {
    if (u < e.Z_MIN_LEVEL || u > e.Z_MAX_LEVEL)
      throw new RangeError("Invalid compression level: " + u);
    if (p != e.Z_FILTERED && p != e.Z_HUFFMAN_ONLY && p != e.Z_RLE && p != e.Z_FIXED && p != e.Z_DEFAULT_STRATEGY)
      throw new TypeError("Invalid strategy: " + p);
    if (this._level !== u || this._strategy !== p) {
      var c = this;
      this.flush(r.Z_SYNC_FLUSH, function() {
        i(c._handle, "zlib binding closed"), c._handle.params(u, p), c._hadError || (c._level = u, c._strategy = p, d && d());
      });
    } else
      g7.nextTick(d);
  }, z.prototype.reset = function() {
    return i(this._handle, "zlib binding closed"), this._handle.reset();
  }, z.prototype._flush = function(u) {
    this._transform(t.alloc(0), "", u);
  }, z.prototype.flush = function(u, p) {
    var d = this, c = this._writableState;
    (typeof u == "function" || u === void 0 && !p) && (p = u, u = r.Z_FULL_FLUSH), c.ended ? p && g7.nextTick(p) : c.ending ? p && this.once("end", p) : c.needDrain ? p && this.once("drain", function() {
      return d.flush(u, p);
    }) : (this._flushFlag = u, this.write(t.alloc(0), "", p));
  }, z.prototype.close = function(u) {
    G(this, u), g7.nextTick(O, this);
  };
  function G(u, p) {
    p && g7.nextTick(p), u._handle && (u._handle.close(), u._handle = null);
  }
  function O(u) {
    u.emit("close");
  }
  z.prototype._transform = function(u, p, d) {
    var c, y = this._writableState, S = y.ending || y.ended, T = S && (!u || y.length === u.length);
    if (u !== null && !t.isBuffer(u))
      return d(new Error("invalid input"));
    if (!this._handle)
      return d(new Error("zlib binding closed"));
    T ? c = this._finishFlushFlag : (c = this._flushFlag, u.length >= y.length && (this._flushFlag = this._opts.flush || r.Z_NO_FLUSH)), this._processChunk(u, c, d);
  }, z.prototype._processChunk = function(u, p, d) {
    var c = u && u.length, y = this._chunkSize - this._offset, S = 0, T = this, g = typeof d == "function";
    if (!g) {
      var w = [], A = 0, h;
      this.on("error", function($) {
        h = $;
      }), i(this._handle, "zlib binding closed");
      do
        var N = this._handle.writeSync(
          p,
          u,
          // in
          S,
          // in_off
          c,
          // in_len
          this._buffer,
          // out
          this._offset,
          //out_off
          y
        );
      while (!this._hadError && H(N[0], N[1]));
      if (this._hadError)
        throw h;
      if (A >= n)
        throw G(this), new RangeError(o);
      var Y = t.concat(w, A);
      return G(this), Y;
    }
    i(this._handle, "zlib binding closed");
    var t7 = this._handle.write(
      p,
      u,
      // in
      S,
      // in_off
      c,
      // in_len
      this._buffer,
      // out
      this._offset,
      //out_off
      y
    );
    t7.buffer = u, t7.callback = H;
    function H($, X) {
      if (this && (this.buffer = null, this.callback = null), !T._hadError) {
        var i7 = y - X;
        if (i(i7 >= 0, "have should not go down"), i7 > 0) {
          var J = T._buffer.slice(T._offset, T._offset + i7);
          T._offset += i7, g ? T.push(J) : (w.push(J), A += J.length);
        }
        if ((X === 0 || T._offset >= T._chunkSize) && (y = T._chunkSize, T._offset = 0, T._buffer = t.allocUnsafe(T._chunkSize)), X === 0) {
          if (S += c - $, c = $, !g)
            return !0;
          var _ = T._handle.write(p, u, S, c, T._buffer, T._offset, T._chunkSize);
          _.callback = H, _.buffer = u;
          return;
        }
        if (!g)
          return !1;
        d();
      }
    }
  }, f.inherits(M, z), f.inherits(R, z), f.inherits(F, z), f.inherits(C, z), f.inherits(L, z), f.inherits(U, z), f.inherits(q, z);
})(qd);
const za = /* @__PURE__ */ Qt(qd), xa = function(...e) {
  let t = arguments[0];
  t && typeof t == "function" && t.apply(null, Array.prototype.slice.call(arguments, 1));
};
async function Sg(e) {
  return new Promise((t, a) => {
    qd.gzip(e, (r, f) => {
      if (r) {
        a(r);
        return;
      }
      t(f);
    });
  });
}
class ds {
  static httpGet(t, a, r, f) {
    let i = "", n = 0;
    for (var o in a)
      n != 0 && (i += "&"), i += o + "=" + a[o], n++;
    i && (t += "?" + i), f = f || {};
    let s = f.headers || {}, b = f.timeout || Ne.timeout, l = {
      uri: t,
      method: "GET",
      timeout: b,
      gzip: !0,
      headers: s
    };
    if (typeof r == "function") {
      this.handleCallback((v) => xa(r, null, v), (v) => xa(r, v), l);
      return;
    }
    return new Promise((v, m) => {
      this.handleCallback(v, m, l);
    });
  }
  static async httpPost(t, a, r, f) {
    let i;
    f = f || {};
    let n = f.headers || {}, o = f.timeout || Ne.timeout;
    if (n["content-type"] = n["content-type"] || "application/json", n["content-type"] == "application/x-www-form-urlencoded") {
      let l = [];
      for (var s in a)
        l.push(`${s}=${a[s]}`);
      i = l.join("&");
    } else
      n["content-type"] == "text/plain" ? i = a : i = JSON.stringify(a);
    n["content-encoding"] == "gzip" && (i = await Sg(Q.Buffer.from(i)));
    const b = {
      uri: t,
      method: "POST",
      body: i,
      headers: n,
      timeout: o,
      gzip: !0
    };
    if (typeof r == "function") {
      this.handleCallback((l) => xa(r, null, l), (l) => xa(r, l), b);
      return;
    }
    return new Promise((l, v) => {
      this.handleCallback(l, v, b);
    });
  }
}
ds.handleCallback = (e, t, a) => {
  const r = a.uri, f = a;
  f.compress = a.gzip, delete f.uri, delete f.gzip, fetch(r, f).then((i) => {
    i.status >= 200 && i.status < 300 ? e(i.json()) : t("EC_REQ_FAILED");
  }).catch((i) => {
    console.log("request failed.", a), t(i);
  });
};
var Yd = {}, Eg = { exports: {} }, Xd = {};
(function(e) {
  e.fetch = f(I7.fetch) && f(I7.ReadableStream), e.writableStream = f(I7.WritableStream), e.abortController = f(I7.AbortController);
  var t;
  function a() {
    if (t !== void 0)
      return t;
    if (I7.XMLHttpRequest) {
      t = new I7.XMLHttpRequest();
      try {
        t.open("GET", I7.XDomainRequest ? "/" : "https://example.com");
      } catch {
        t = null;
      }
    } else
      t = null;
    return t;
  }
  function r(i) {
    var n = a();
    if (!n)
      return !1;
    try {
      return n.responseType = i, n.responseType === i;
    } catch {
    }
    return !1;
  }
  e.arraybuffer = e.fetch || r("arraybuffer"), e.msstream = !e.fetch && r("ms-stream"), e.mozchunkedarraybuffer = !e.fetch && r("moz-chunked-arraybuffer"), e.overrideMimeType = e.fetch || (a() ? f(a().overrideMimeType) : !1);
  function f(i) {
    return typeof i == "function";
  }
  t = null;
})(Xd);
var Ji = {}, cs = { exports: {} }, Tg = gt().EventEmitter, io, lp;
function PL() {
  if (lp)
    return io;
  lp = 1;
  function e(m, x) {
    var I = Object.keys(m);
    if (Object.getOwnPropertySymbols) {
      var k = Object.getOwnPropertySymbols(m);
      x && (k = k.filter(function(P) {
        return Object.getOwnPropertyDescriptor(m, P).enumerable;
      })), I.push.apply(I, k);
    }
    return I;
  }
  function t(m) {
    for (var x = 1; x < arguments.length; x++) {
      var I = arguments[x] != null ? arguments[x] : {};
      x % 2 ? e(Object(I), !0).forEach(function(k) {
        a(m, k, I[k]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(m, Object.getOwnPropertyDescriptors(I)) : e(Object(I)).forEach(function(k) {
        Object.defineProperty(m, k, Object.getOwnPropertyDescriptor(I, k));
      });
    }
    return m;
  }
  function a(m, x, I) {
    return x in m ? Object.defineProperty(m, x, { value: I, enumerable: !0, configurable: !0, writable: !0 }) : m[x] = I, m;
  }
  function r(m, x) {
    if (!(m instanceof x))
      throw new TypeError("Cannot call a class as a function");
  }
  function f(m, x) {
    for (var I = 0; I < x.length; I++) {
      var k = x[I];
      k.enumerable = k.enumerable || !1, k.configurable = !0, "value" in k && (k.writable = !0), Object.defineProperty(m, k.key, k);
    }
  }
  function i(m, x, I) {
    return x && f(m.prototype, x), I && f(m, I), m;
  }
  var n = Q, o = n.Buffer, s = R0, b = s.inspect, l = b && b.custom || "inspect";
  function v(m, x, I) {
    o.prototype.copy.call(m, x, I);
  }
  return io = /* @__PURE__ */ function() {
    function m() {
      r(this, m), this.head = null, this.tail = null, this.length = 0;
    }
    return i(m, [{
      key: "push",
      value: function(I) {
        var k = {
          data: I,
          next: null
        };
        this.length > 0 ? this.tail.next = k : this.head = k, this.tail = k, ++this.length;
      }
    }, {
      key: "unshift",
      value: function(I) {
        var k = {
          data: I,
          next: this.head
        };
        this.length === 0 && (this.tail = k), this.head = k, ++this.length;
      }
    }, {
      key: "shift",
      value: function() {
        if (this.length !== 0) {
          var I = this.head.data;
          return this.length === 1 ? this.head = this.tail = null : this.head = this.head.next, --this.length, I;
        }
      }
    }, {
      key: "clear",
      value: function() {
        this.head = this.tail = null, this.length = 0;
      }
    }, {
      key: "join",
      value: function(I) {
        if (this.length === 0)
          return "";
        for (var k = this.head, P = "" + k.data; k = k.next; )
          P += I + k.data;
        return P;
      }
    }, {
      key: "concat",
      value: function(I) {
        if (this.length === 0)
          return o.alloc(0);
        for (var k = o.allocUnsafe(I >>> 0), P = this.head, M = 0; P; )
          v(P.data, k, M), M += P.data.length, P = P.next;
        return k;
      }
      // Consumes a specified amount of bytes or characters from the buffered data.
    }, {
      key: "consume",
      value: function(I, k) {
        var P;
        return I < this.head.data.length ? (P = this.head.data.slice(0, I), this.head.data = this.head.data.slice(I)) : I === this.head.data.length ? P = this.shift() : P = k ? this._getString(I) : this._getBuffer(I), P;
      }
    }, {
      key: "first",
      value: function() {
        return this.head.data;
      }
      // Consumes a specified amount of characters from the buffered data.
    }, {
      key: "_getString",
      value: function(I) {
        var k = this.head, P = 1, M = k.data;
        for (I -= M.length; k = k.next; ) {
          var R = k.data, F = I > R.length ? R.length : I;
          if (F === R.length ? M += R : M += R.slice(0, I), I -= F, I === 0) {
            F === R.length ? (++P, k.next ? this.head = k.next : this.head = this.tail = null) : (this.head = k, k.data = R.slice(F));
            break;
          }
          ++P;
        }
        return this.length -= P, M;
      }
      // Consumes a specified amount of bytes from the buffered data.
    }, {
      key: "_getBuffer",
      value: function(I) {
        var k = o.allocUnsafe(I), P = this.head, M = 1;
        for (P.data.copy(k), I -= P.data.length; P = P.next; ) {
          var R = P.data, F = I > R.length ? R.length : I;
          if (R.copy(k, k.length - I, 0, F), I -= F, I === 0) {
            F === R.length ? (++M, P.next ? this.head = P.next : this.head = this.tail = null) : (this.head = P, P.data = R.slice(F));
            break;
          }
          ++M;
        }
        return this.length -= M, k;
      }
      // Make sure the linked list only shows the minimal necessary information.
    }, {
      key: l,
      value: function(I, k) {
        return b(this, t({}, k, {
          // Only inspect one level.
          depth: 0,
          // It should not recurse.
          customInspect: !1
        }));
      }
    }]), m;
  }(), io;
}
function ML(e, t) {
  var a = this, r = this._readableState && this._readableState.destroyed, f = this._writableState && this._writableState.destroyed;
  return r || f ? (t ? t(e) : e && (this._writableState ? this._writableState.errorEmitted || (this._writableState.errorEmitted = !0, g7.nextTick(us, this, e)) : g7.nextTick(us, this, e)), this) : (this._readableState && (this._readableState.destroyed = !0), this._writableState && (this._writableState.destroyed = !0), this._destroy(e || null, function(i) {
    !t && i ? a._writableState ? a._writableState.errorEmitted ? g7.nextTick(uf, a) : (a._writableState.errorEmitted = !0, g7.nextTick(pp, a, i)) : g7.nextTick(pp, a, i) : t ? (g7.nextTick(uf, a), t(i)) : g7.nextTick(uf, a);
  }), this);
}
function pp(e, t) {
  us(e, t), uf(e);
}
function uf(e) {
  e._writableState && !e._writableState.emitClose || e._readableState && !e._readableState.emitClose || e.emit("close");
}
function RL() {
  this._readableState && (this._readableState.destroyed = !1, this._readableState.reading = !1, this._readableState.ended = !1, this._readableState.endEmitted = !1), this._writableState && (this._writableState.destroyed = !1, this._writableState.ended = !1, this._writableState.ending = !1, this._writableState.finalCalled = !1, this._writableState.prefinished = !1, this._writableState.finished = !1, this._writableState.errorEmitted = !1);
}
function us(e, t) {
  e.emit("error", t);
}
function BL(e, t) {
  var a = e._readableState, r = e._writableState;
  a && a.autoDestroy || r && r.autoDestroy ? e.destroy(t) : e.emit("error", t);
}
var Ag = {
  destroy: ML,
  undestroy: RL,
  errorOrDestroy: BL
}, kr = {};
function NL(e, t) {
  e.prototype = Object.create(t.prototype), e.prototype.constructor = e, e.__proto__ = t;
}
var Ig = {};
function S5(e, t, a) {
  a || (a = Error);
  function r(i, n, o) {
    return typeof t == "string" ? t : t(i, n, o);
  }
  var f = /* @__PURE__ */ function(i) {
    NL(n, i);
    function n(o, s, b) {
      return i.call(this, r(o, s, b)) || this;
    }
    return n;
  }(a);
  f.prototype.name = a.name, f.prototype.code = e, Ig[e] = f;
}
function hp(e, t) {
  if (Array.isArray(e)) {
    var a = e.length;
    return e = e.map(function(r) {
      return String(r);
    }), a > 2 ? "one of ".concat(t, " ").concat(e.slice(0, a - 1).join(", "), ", or ") + e[a - 1] : a === 2 ? "one of ".concat(t, " ").concat(e[0], " or ").concat(e[1]) : "of ".concat(t, " ").concat(e[0]);
  } else
    return "of ".concat(t, " ").concat(String(e));
}
function CL(e, t, a) {
  return e.substr(!a || a < 0 ? 0 : +a, t.length) === t;
}
function DL(e, t, a) {
  return (a === void 0 || a > e.length) && (a = e.length), e.substring(a - t.length, a) === t;
}
function LL(e, t, a) {
  return typeof a != "number" && (a = 0), a + t.length > e.length ? !1 : e.indexOf(t, a) !== -1;
}
S5("ERR_INVALID_OPT_VALUE", function(e, t) {
  return 'The value "' + t + '" is invalid for option "' + e + '"';
}, TypeError);
S5("ERR_INVALID_ARG_TYPE", function(e, t, a) {
  var r;
  typeof t == "string" && CL(t, "not ") ? (r = "must not be", t = t.replace(/^not /, "")) : r = "must be";
  var f;
  if (DL(e, " argument"))
    f = "The ".concat(e, " ").concat(r, " ").concat(hp(t, "type"));
  else {
    var i = LL(e, ".") ? "property" : "argument";
    f = 'The "'.concat(e, '" ').concat(i, " ").concat(r, " ").concat(hp(t, "type"));
  }
  return f += ". Received type ".concat(typeof a), f;
}, TypeError);
S5("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF");
S5("ERR_METHOD_NOT_IMPLEMENTED", function(e) {
  return "The " + e + " method is not implemented";
});
S5("ERR_STREAM_PREMATURE_CLOSE", "Premature close");
S5("ERR_STREAM_DESTROYED", function(e) {
  return "Cannot call " + e + " after a stream was destroyed";
});
S5("ERR_MULTIPLE_CALLBACK", "Callback called multiple times");
S5("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable");
S5("ERR_STREAM_WRITE_AFTER_END", "write after end");
S5("ERR_STREAM_NULL_VALUES", "May not write null values to stream", TypeError);
S5("ERR_UNKNOWN_ENCODING", function(e) {
  return "Unknown encoding: " + e;
}, TypeError);
S5("ERR_STREAM_UNSHIFT_AFTER_END_EVENT", "stream.unshift() after end event");
kr.codes = Ig;
var FL = kr.codes.ERR_INVALID_OPT_VALUE;
function HL(e, t, a) {
  return e.highWaterMark != null ? e.highWaterMark : t ? e[a] : null;
}
function UL(e, t, a, r) {
  var f = HL(t, r, a);
  if (f != null) {
    if (!(isFinite(f) && Math.floor(f) === f) || f < 0) {
      var i = r ? a : "highWaterMark";
      throw new FL(i, f);
    }
    return Math.floor(f);
  }
  return e.objectMode ? 16 : 16 * 1024;
}
var kg = {
  getHighWaterMark: UL
}, no, bp;
function Og() {
  if (bp)
    return no;
  bp = 1, no = Z;
  function e(H) {
    var $ = this;
    this.next = null, this.entry = null, this.finish = function() {
      t7($, H);
    };
  }
  var t;
  Z.WritableState = U;
  var a = {
    deprecate: Yf
  }, r = Tg, f = Q.Buffer, i = I7.Uint8Array || function() {
  };
  function n(H) {
    return f.from(H);
  }
  function o(H) {
    return f.isBuffer(H) || H instanceof i;
  }
  var s = Ag, b = kg, l = b.getHighWaterMark, v = kr.codes, m = v.ERR_INVALID_ARG_TYPE, x = v.ERR_METHOD_NOT_IMPLEMENTED, I = v.ERR_MULTIPLE_CALLBACK, k = v.ERR_STREAM_CANNOT_PIPE, P = v.ERR_STREAM_DESTROYED, M = v.ERR_STREAM_NULL_VALUES, R = v.ERR_STREAM_WRITE_AFTER_END, F = v.ERR_UNKNOWN_ENCODING, C = s.errorOrDestroy;
  X7()(Z, r);
  function L() {
  }
  function U(H, $, X) {
    t = t || v1(), H = H || {}, typeof X != "boolean" && (X = $ instanceof t), this.objectMode = !!H.objectMode, X && (this.objectMode = this.objectMode || !!H.writableObjectMode), this.highWaterMark = l(this, H, "writableHighWaterMark", X), this.finalCalled = !1, this.needDrain = !1, this.ending = !1, this.ended = !1, this.finished = !1, this.destroyed = !1;
    var i7 = H.decodeStrings === !1;
    this.decodeStrings = !i7, this.defaultEncoding = H.defaultEncoding || "utf8", this.length = 0, this.writing = !1, this.corked = 0, this.sync = !0, this.bufferProcessing = !1, this.onwrite = function(J) {
      y($, J);
    }, this.writecb = null, this.writelen = 0, this.bufferedRequest = null, this.lastBufferedRequest = null, this.pendingcb = 0, this.prefinished = !1, this.errorEmitted = !1, this.emitClose = H.emitClose !== !1, this.autoDestroy = !!H.autoDestroy, this.bufferedRequestCount = 0, this.corkedRequestsFree = new e(this);
  }
  U.prototype.getBuffer = function() {
    for (var $ = this.bufferedRequest, X = []; $; )
      X.push($), $ = $.next;
    return X;
  }, function() {
    try {
      Object.defineProperty(U.prototype, "buffer", {
        get: a.deprecate(function() {
          return this.getBuffer();
        }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003")
      });
    } catch {
    }
  }();
  var q;
  typeof Symbol == "function" && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] == "function" ? (q = Function.prototype[Symbol.hasInstance], Object.defineProperty(Z, Symbol.hasInstance, {
    value: function($) {
      return q.call(this, $) ? !0 : this !== Z ? !1 : $ && $._writableState instanceof U;
    }
  })) : q = function($) {
    return $ instanceof this;
  };
  function Z(H) {
    t = t || v1();
    var $ = this instanceof t;
    if (!$ && !q.call(Z, this))
      return new Z(H);
    this._writableState = new U(H, this, $), this.writable = !0, H && (typeof H.write == "function" && (this._write = H.write), typeof H.writev == "function" && (this._writev = H.writev), typeof H.destroy == "function" && (this._destroy = H.destroy), typeof H.final == "function" && (this._final = H.final)), r.call(this);
  }
  Z.prototype.pipe = function() {
    C(this, new k());
  };
  function z(H, $) {
    var X = new R();
    C(H, X), g7.nextTick($, X);
  }
  function G(H, $, X, i7) {
    var J;
    return X === null ? J = new M() : typeof X != "string" && !$.objectMode && (J = new m("chunk", ["string", "Buffer"], X)), J ? (C(H, J), g7.nextTick(i7, J), !1) : !0;
  }
  Z.prototype.write = function(H, $, X) {
    var i7 = this._writableState, J = !1, _ = !i7.objectMode && o(H);
    return _ && !f.isBuffer(H) && (H = n(H)), typeof $ == "function" && (X = $, $ = null), _ ? $ = "buffer" : $ || ($ = i7.defaultEncoding), typeof X != "function" && (X = L), i7.ending ? z(this, X) : (_ || G(this, i7, H, X)) && (i7.pendingcb++, J = u(this, i7, _, H, $, X)), J;
  }, Z.prototype.cork = function() {
    this._writableState.corked++;
  }, Z.prototype.uncork = function() {
    var H = this._writableState;
    H.corked && (H.corked--, !H.writing && !H.corked && !H.bufferProcessing && H.bufferedRequest && g(this, H));
  }, Z.prototype.setDefaultEncoding = function($) {
    if (typeof $ == "string" && ($ = $.toLowerCase()), !(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf(($ + "").toLowerCase()) > -1))
      throw new F($);
    return this._writableState.defaultEncoding = $, this;
  }, Object.defineProperty(Z.prototype, "writableBuffer", {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: !1,
    get: function() {
      return this._writableState && this._writableState.getBuffer();
    }
  });
  function O(H, $, X) {
    return !H.objectMode && H.decodeStrings !== !1 && typeof $ == "string" && ($ = f.from($, X)), $;
  }
  Object.defineProperty(Z.prototype, "writableHighWaterMark", {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: !1,
    get: function() {
      return this._writableState.highWaterMark;
    }
  });
  function u(H, $, X, i7, J, _) {
    if (!X) {
      var E = O($, i7, J);
      i7 !== E && (X = !0, J = "buffer", i7 = E);
    }
    var j = $.objectMode ? 1 : i7.length;
    $.length += j;
    var V = $.length < $.highWaterMark;
    if (V || ($.needDrain = !0), $.writing || $.corked) {
      var n7 = $.lastBufferedRequest;
      $.lastBufferedRequest = {
        chunk: i7,
        encoding: J,
        isBuf: X,
        callback: _,
        next: null
      }, n7 ? n7.next = $.lastBufferedRequest : $.bufferedRequest = $.lastBufferedRequest, $.bufferedRequestCount += 1;
    } else
      p(H, $, !1, j, i7, J, _);
    return V;
  }
  function p(H, $, X, i7, J, _, E) {
    $.writelen = i7, $.writecb = E, $.writing = !0, $.sync = !0, $.destroyed ? $.onwrite(new P("write")) : X ? H._writev(J, $.onwrite) : H._write(J, _, $.onwrite), $.sync = !1;
  }
  function d(H, $, X, i7, J) {
    --$.pendingcb, X ? (g7.nextTick(J, i7), g7.nextTick(N, H, $), H._writableState.errorEmitted = !0, C(H, i7)) : (J(i7), H._writableState.errorEmitted = !0, C(H, i7), N(H, $));
  }
  function c(H) {
    H.writing = !1, H.writecb = null, H.length -= H.writelen, H.writelen = 0;
  }
  function y(H, $) {
    var X = H._writableState, i7 = X.sync, J = X.writecb;
    if (typeof J != "function")
      throw new I();
    if (c(X), $)
      d(H, X, i7, $, J);
    else {
      var _ = w(X) || H.destroyed;
      !_ && !X.corked && !X.bufferProcessing && X.bufferedRequest && g(H, X), i7 ? g7.nextTick(S, H, X, _, J) : S(H, X, _, J);
    }
  }
  function S(H, $, X, i7) {
    X || T(H, $), $.pendingcb--, i7(), N(H, $);
  }
  function T(H, $) {
    $.length === 0 && $.needDrain && ($.needDrain = !1, H.emit("drain"));
  }
  function g(H, $) {
    $.bufferProcessing = !0;
    var X = $.bufferedRequest;
    if (H._writev && X && X.next) {
      var i7 = $.bufferedRequestCount, J = new Array(i7), _ = $.corkedRequestsFree;
      _.entry = X;
      for (var E = 0, j = !0; X; )
        J[E] = X, X.isBuf || (j = !1), X = X.next, E += 1;
      J.allBuffers = j, p(H, $, !0, $.length, J, "", _.finish), $.pendingcb++, $.lastBufferedRequest = null, _.next ? ($.corkedRequestsFree = _.next, _.next = null) : $.corkedRequestsFree = new e($), $.bufferedRequestCount = 0;
    } else {
      for (; X; ) {
        var V = X.chunk, n7 = X.encoding, K = X.callback, B = $.objectMode ? 1 : V.length;
        if (p(H, $, !1, B, V, n7, K), X = X.next, $.bufferedRequestCount--, $.writing)
          break;
      }
      X === null && ($.lastBufferedRequest = null);
    }
    $.bufferedRequest = X, $.bufferProcessing = !1;
  }
  Z.prototype._write = function(H, $, X) {
    X(new x("_write()"));
  }, Z.prototype._writev = null, Z.prototype.end = function(H, $, X) {
    var i7 = this._writableState;
    return typeof H == "function" ? (X = H, H = null, $ = null) : typeof $ == "function" && (X = $, $ = null), H != null && this.write(H, $), i7.corked && (i7.corked = 1, this.uncork()), i7.ending || Y(this, i7, X), this;
  }, Object.defineProperty(Z.prototype, "writableLength", {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: !1,
    get: function() {
      return this._writableState.length;
    }
  });
  function w(H) {
    return H.ending && H.length === 0 && H.bufferedRequest === null && !H.finished && !H.writing;
  }
  function A(H, $) {
    H._final(function(X) {
      $.pendingcb--, X && C(H, X), $.prefinished = !0, H.emit("prefinish"), N(H, $);
    });
  }
  function h(H, $) {
    !$.prefinished && !$.finalCalled && (typeof H._final == "function" && !$.destroyed ? ($.pendingcb++, $.finalCalled = !0, g7.nextTick(A, H, $)) : ($.prefinished = !0, H.emit("prefinish")));
  }
  function N(H, $) {
    var X = w($);
    if (X && (h(H, $), $.pendingcb === 0 && ($.finished = !0, H.emit("finish"), $.autoDestroy))) {
      var i7 = H._readableState;
      (!i7 || i7.autoDestroy && i7.endEmitted) && H.destroy();
    }
    return X;
  }
  function Y(H, $, X) {
    $.ending = !0, N(H, $), X && ($.finished ? g7.nextTick(X) : H.once("finish", X)), $.ended = !0, H.writable = !1;
  }
  function t7(H, $, X) {
    var i7 = H.entry;
    for (H.entry = null; i7; ) {
      var J = i7.callback;
      $.pendingcb--, J(X), i7 = i7.next;
    }
    $.corkedRequestsFree.next = H;
  }
  return Object.defineProperty(Z.prototype, "destroyed", {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: !1,
    get: function() {
      return this._writableState === void 0 ? !1 : this._writableState.destroyed;
    },
    set: function($) {
      this._writableState && (this._writableState.destroyed = $);
    }
  }), Z.prototype.destroy = s.destroy, Z.prototype._undestroy = s.undestroy, Z.prototype._destroy = function(H, $) {
    $(H);
  }, no;
}
var oo, mp;
function v1() {
  if (mp)
    return oo;
  mp = 1;
  var e = Object.keys || function(b) {
    var l = [];
    for (var v in b)
      l.push(v);
    return l;
  };
  oo = n;
  var t = Mg(), a = Og();
  X7()(n, t);
  for (var r = e(a.prototype), f = 0; f < r.length; f++) {
    var i = r[f];
    n.prototype[i] || (n.prototype[i] = a.prototype[i]);
  }
  function n(b) {
    if (!(this instanceof n))
      return new n(b);
    t.call(this, b), a.call(this, b), this.allowHalfOpen = !0, b && (b.readable === !1 && (this.readable = !1), b.writable === !1 && (this.writable = !1), b.allowHalfOpen === !1 && (this.allowHalfOpen = !1, this.once("end", o)));
  }
  Object.defineProperty(n.prototype, "writableHighWaterMark", {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: !1,
    get: function() {
      return this._writableState.highWaterMark;
    }
  }), Object.defineProperty(n.prototype, "writableBuffer", {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: !1,
    get: function() {
      return this._writableState && this._writableState.getBuffer();
    }
  }), Object.defineProperty(n.prototype, "writableLength", {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: !1,
    get: function() {
      return this._writableState.length;
    }
  });
  function o() {
    this._writableState.ended || g7.nextTick(s, this);
  }
  function s(b) {
    b.end();
  }
  return Object.defineProperty(n.prototype, "destroyed", {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: !1,
    get: function() {
      return this._readableState === void 0 || this._writableState === void 0 ? !1 : this._readableState.destroyed && this._writableState.destroyed;
    },
    set: function(l) {
      this._readableState === void 0 || this._writableState === void 0 || (this._readableState.destroyed = l, this._writableState.destroyed = l);
    }
  }), oo;
}
var vp = kr.codes.ERR_STREAM_PREMATURE_CLOSE;
function $L(e) {
  var t = !1;
  return function() {
    if (!t) {
      t = !0;
      for (var a = arguments.length, r = new Array(a), f = 0; f < a; f++)
        r[f] = arguments[f];
      e.apply(this, r);
    }
  };
}
function jL() {
}
function VL(e) {
  return e.setHeader && typeof e.abort == "function";
}
function Pg(e, t, a) {
  if (typeof t == "function")
    return Pg(e, null, t);
  t || (t = {}), a = $L(a || jL);
  var r = t.readable || t.readable !== !1 && e.readable, f = t.writable || t.writable !== !1 && e.writable, i = function() {
    e.writable || o();
  }, n = e._writableState && e._writableState.finished, o = function() {
    f = !1, n = !0, r || a.call(e);
  }, s = e._readableState && e._readableState.endEmitted, b = function() {
    r = !1, s = !0, f || a.call(e);
  }, l = function(I) {
    a.call(e, I);
  }, v = function() {
    var I;
    if (r && !s)
      return (!e._readableState || !e._readableState.ended) && (I = new vp()), a.call(e, I);
    if (f && !n)
      return (!e._writableState || !e._writableState.ended) && (I = new vp()), a.call(e, I);
  }, m = function() {
    e.req.on("finish", o);
  };
  return VL(e) ? (e.on("complete", o), e.on("abort", v), e.req ? m() : e.on("request", m)) : f && !e._writableState && (e.on("end", i), e.on("close", i)), e.on("end", b), e.on("finish", o), t.error !== !1 && e.on("error", l), e.on("close", v), function() {
    e.removeListener("complete", o), e.removeListener("abort", v), e.removeListener("request", m), e.req && e.req.removeListener("finish", o), e.removeListener("end", i), e.removeListener("close", i), e.removeListener("finish", o), e.removeListener("end", b), e.removeListener("error", l), e.removeListener("close", v);
  };
}
var Jd = Pg, so, yp;
function zL() {
  if (yp)
    return so;
  yp = 1;
  var e;
  function t(M, R, F) {
    return R in M ? Object.defineProperty(M, R, { value: F, enumerable: !0, configurable: !0, writable: !0 }) : M[R] = F, M;
  }
  var a = Jd, r = Symbol("lastResolve"), f = Symbol("lastReject"), i = Symbol("error"), n = Symbol("ended"), o = Symbol("lastPromise"), s = Symbol("handlePromise"), b = Symbol("stream");
  function l(M, R) {
    return {
      value: M,
      done: R
    };
  }
  function v(M) {
    var R = M[r];
    if (R !== null) {
      var F = M[b].read();
      F !== null && (M[o] = null, M[r] = null, M[f] = null, R(l(F, !1)));
    }
  }
  function m(M) {
    g7.nextTick(v, M);
  }
  function x(M, R) {
    return function(F, C) {
      M.then(function() {
        if (R[n]) {
          F(l(void 0, !0));
          return;
        }
        R[s](F, C);
      }, C);
    };
  }
  var I = Object.getPrototypeOf(function() {
  }), k = Object.setPrototypeOf((e = {
    get stream() {
      return this[b];
    },
    next: function() {
      var R = this, F = this[i];
      if (F !== null)
        return Promise.reject(F);
      if (this[n])
        return Promise.resolve(l(void 0, !0));
      if (this[b].destroyed)
        return new Promise(function(q, Z) {
          g7.nextTick(function() {
            R[i] ? Z(R[i]) : q(l(void 0, !0));
          });
        });
      var C = this[o], L;
      if (C)
        L = new Promise(x(C, this));
      else {
        var U = this[b].read();
        if (U !== null)
          return Promise.resolve(l(U, !1));
        L = new Promise(this[s]);
      }
      return this[o] = L, L;
    }
  }, t(e, Symbol.asyncIterator, function() {
    return this;
  }), t(e, "return", function() {
    var R = this;
    return new Promise(function(F, C) {
      R[b].destroy(null, function(L) {
        if (L) {
          C(L);
          return;
        }
        F(l(void 0, !0));
      });
    });
  }), e), I), P = function(R) {
    var F, C = Object.create(k, (F = {}, t(F, b, {
      value: R,
      writable: !0
    }), t(F, r, {
      value: null,
      writable: !0
    }), t(F, f, {
      value: null,
      writable: !0
    }), t(F, i, {
      value: null,
      writable: !0
    }), t(F, n, {
      value: R._readableState.endEmitted,
      writable: !0
    }), t(F, s, {
      value: function(U, q) {
        var Z = C[b].read();
        Z ? (C[o] = null, C[r] = null, C[f] = null, U(l(Z, !1))) : (C[r] = U, C[f] = q);
      },
      writable: !0
    }), F));
    return C[o] = null, a(R, function(L) {
      if (L && L.code !== "ERR_STREAM_PREMATURE_CLOSE") {
        var U = C[f];
        U !== null && (C[o] = null, C[r] = null, C[f] = null, U(L)), C[i] = L;
        return;
      }
      var q = C[r];
      q !== null && (C[o] = null, C[r] = null, C[f] = null, q(l(void 0, !0))), C[n] = !0;
    }), R.on("readable", m.bind(null, C)), C;
  };
  return so = P, so;
}
var co, gp;
function qL() {
  return gp || (gp = 1, co = function() {
    throw new Error("Readable.from is not available in the browser");
  }), co;
}
var uo, xp;
function Mg() {
  if (xp)
    return uo;
  xp = 1, uo = z;
  var e;
  z.ReadableState = Z, gt().EventEmitter;
  var t = function(E, j) {
    return E.listeners(j).length;
  }, a = Tg, r = Q.Buffer, f = I7.Uint8Array || function() {
  };
  function i(_) {
    return r.from(_);
  }
  function n(_) {
    return r.isBuffer(_) || _ instanceof f;
  }
  var o = R0, s;
  o && o.debuglog ? s = o.debuglog("stream") : s = function() {
  };
  var b = PL(), l = Ag, v = kg, m = v.getHighWaterMark, x = kr.codes, I = x.ERR_INVALID_ARG_TYPE, k = x.ERR_STREAM_PUSH_AFTER_EOF, P = x.ERR_METHOD_NOT_IMPLEMENTED, M = x.ERR_STREAM_UNSHIFT_AFTER_END_EVENT, R, F, C;
  X7()(z, a);
  var L = l.errorOrDestroy, U = ["error", "close", "destroy", "pause", "resume"];
  function q(_, E, j) {
    if (typeof _.prependListener == "function")
      return _.prependListener(E, j);
    !_._events || !_._events[E] ? _.on(E, j) : Array.isArray(_._events[E]) ? _._events[E].unshift(j) : _._events[E] = [j, _._events[E]];
  }
  function Z(_, E, j) {
    e = e || v1(), _ = _ || {}, typeof j != "boolean" && (j = E instanceof e), this.objectMode = !!_.objectMode, j && (this.objectMode = this.objectMode || !!_.readableObjectMode), this.highWaterMark = m(this, _, "readableHighWaterMark", j), this.buffer = new b(), this.length = 0, this.pipes = null, this.pipesCount = 0, this.flowing = null, this.ended = !1, this.endEmitted = !1, this.reading = !1, this.sync = !0, this.needReadable = !1, this.emittedReadable = !1, this.readableListening = !1, this.resumeScheduled = !1, this.paused = !0, this.emitClose = _.emitClose !== !1, this.autoDestroy = !!_.autoDestroy, this.destroyed = !1, this.defaultEncoding = _.defaultEncoding || "utf8", this.awaitDrain = 0, this.readingMore = !1, this.decoder = null, this.encoding = null, _.encoding && (R || (R = pt.StringDecoder), this.decoder = new R(_.encoding), this.encoding = _.encoding);
  }
  function z(_) {
    if (e = e || v1(), !(this instanceof z))
      return new z(_);
    var E = this instanceof e;
    this._readableState = new Z(_, this, E), this.readable = !0, _ && (typeof _.read == "function" && (this._read = _.read), typeof _.destroy == "function" && (this._destroy = _.destroy)), a.call(this);
  }
  Object.defineProperty(z.prototype, "destroyed", {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: !1,
    get: function() {
      return this._readableState === void 0 ? !1 : this._readableState.destroyed;
    },
    set: function(E) {
      this._readableState && (this._readableState.destroyed = E);
    }
  }), z.prototype.destroy = l.destroy, z.prototype._undestroy = l.undestroy, z.prototype._destroy = function(_, E) {
    E(_);
  }, z.prototype.push = function(_, E) {
    var j = this._readableState, V;
    return j.objectMode ? V = !0 : typeof _ == "string" && (E = E || j.defaultEncoding, E !== j.encoding && (_ = r.from(_, E), E = ""), V = !0), G(this, _, E, !1, V);
  }, z.prototype.unshift = function(_) {
    return G(this, _, null, !0, !1);
  };
  function G(_, E, j, V, n7) {
    s("readableAddChunk", E);
    var K = _._readableState;
    if (E === null)
      K.reading = !1, y(_, K);
    else {
      var B;
      if (n7 || (B = u(K, E)), B)
        L(_, B);
      else if (K.objectMode || E && E.length > 0)
        if (typeof E != "string" && !K.objectMode && Object.getPrototypeOf(E) !== r.prototype && (E = i(E)), V)
          K.endEmitted ? L(_, new M()) : O(_, K, E, !0);
        else if (K.ended)
          L(_, new k());
        else {
          if (K.destroyed)
            return !1;
          K.reading = !1, K.decoder && !j ? (E = K.decoder.write(E), K.objectMode || E.length !== 0 ? O(_, K, E, !1) : g(_, K)) : O(_, K, E, !1);
        }
      else
        V || (K.reading = !1, g(_, K));
    }
    return !K.ended && (K.length < K.highWaterMark || K.length === 0);
  }
  function O(_, E, j, V) {
    E.flowing && E.length === 0 && !E.sync ? (E.awaitDrain = 0, _.emit("data", j)) : (E.length += E.objectMode ? 1 : j.length, V ? E.buffer.unshift(j) : E.buffer.push(j), E.needReadable && S(_)), g(_, E);
  }
  function u(_, E) {
    var j;
    return !n(E) && typeof E != "string" && E !== void 0 && !_.objectMode && (j = new I("chunk", ["string", "Buffer", "Uint8Array"], E)), j;
  }
  z.prototype.isPaused = function() {
    return this._readableState.flowing === !1;
  }, z.prototype.setEncoding = function(_) {
    R || (R = pt.StringDecoder);
    var E = new R(_);
    this._readableState.decoder = E, this._readableState.encoding = this._readableState.decoder.encoding;
    for (var j = this._readableState.buffer.head, V = ""; j !== null; )
      V += E.write(j.data), j = j.next;
    return this._readableState.buffer.clear(), V !== "" && this._readableState.buffer.push(V), this._readableState.length = V.length, this;
  };
  var p = 1073741824;
  function d(_) {
    return _ >= p ? _ = p : (_--, _ |= _ >>> 1, _ |= _ >>> 2, _ |= _ >>> 4, _ |= _ >>> 8, _ |= _ >>> 16, _++), _;
  }
  function c(_, E) {
    return _ <= 0 || E.length === 0 && E.ended ? 0 : E.objectMode ? 1 : _ !== _ ? E.flowing && E.length ? E.buffer.head.data.length : E.length : (_ > E.highWaterMark && (E.highWaterMark = d(_)), _ <= E.length ? _ : E.ended ? E.length : (E.needReadable = !0, 0));
  }
  z.prototype.read = function(_) {
    s("read", _), _ = parseInt(_, 10);
    var E = this._readableState, j = _;
    if (_ !== 0 && (E.emittedReadable = !1), _ === 0 && E.needReadable && ((E.highWaterMark !== 0 ? E.length >= E.highWaterMark : E.length > 0) || E.ended))
      return s("read: emitReadable", E.length, E.ended), E.length === 0 && E.ended ? X(this) : S(this), null;
    if (_ = c(_, E), _ === 0 && E.ended)
      return E.length === 0 && X(this), null;
    var V = E.needReadable;
    s("need readable", V), (E.length === 0 || E.length - _ < E.highWaterMark) && (V = !0, s("length less than watermark", V)), E.ended || E.reading ? (V = !1, s("reading or ended", V)) : V && (s("do read"), E.reading = !0, E.sync = !0, E.length === 0 && (E.needReadable = !0), this._read(E.highWaterMark), E.sync = !1, E.reading || (_ = c(j, E)));
    var n7;
    return _ > 0 ? n7 = $(_, E) : n7 = null, n7 === null ? (E.needReadable = E.length <= E.highWaterMark, _ = 0) : (E.length -= _, E.awaitDrain = 0), E.length === 0 && (E.ended || (E.needReadable = !0), j !== _ && E.ended && X(this)), n7 !== null && this.emit("data", n7), n7;
  };
  function y(_, E) {
    if (s("onEofChunk"), !E.ended) {
      if (E.decoder) {
        var j = E.decoder.end();
        j && j.length && (E.buffer.push(j), E.length += E.objectMode ? 1 : j.length);
      }
      E.ended = !0, E.sync ? S(_) : (E.needReadable = !1, E.emittedReadable || (E.emittedReadable = !0, T(_)));
    }
  }
  function S(_) {
    var E = _._readableState;
    s("emitReadable", E.needReadable, E.emittedReadable), E.needReadable = !1, E.emittedReadable || (s("emitReadable", E.flowing), E.emittedReadable = !0, g7.nextTick(T, _));
  }
  function T(_) {
    var E = _._readableState;
    s("emitReadable_", E.destroyed, E.length, E.ended), !E.destroyed && (E.length || E.ended) && (_.emit("readable"), E.emittedReadable = !1), E.needReadable = !E.flowing && !E.ended && E.length <= E.highWaterMark, H(_);
  }
  function g(_, E) {
    E.readingMore || (E.readingMore = !0, g7.nextTick(w, _, E));
  }
  function w(_, E) {
    for (; !E.reading && !E.ended && (E.length < E.highWaterMark || E.flowing && E.length === 0); ) {
      var j = E.length;
      if (s("maybeReadMore read 0"), _.read(0), j === E.length)
        break;
    }
    E.readingMore = !1;
  }
  z.prototype._read = function(_) {
    L(this, new P("_read()"));
  }, z.prototype.pipe = function(_, E) {
    var j = this, V = this._readableState;
    switch (V.pipesCount) {
      case 0:
        V.pipes = _;
        break;
      case 1:
        V.pipes = [V.pipes, _];
        break;
      default:
        V.pipes.push(_);
        break;
    }
    V.pipesCount += 1, s("pipe count=%d opts=%j", V.pipesCount, E);
    var n7 = (!E || E.end !== !1) && _ !== g7.stdout && _ !== g7.stderr, K = n7 ? D : p7;
    V.endEmitted ? g7.nextTick(K) : j.once("end", K), _.on("unpipe", B);
    function B(l7, y7) {
      s("onunpipe"), l7 === j && y7 && y7.hasUnpiped === !1 && (y7.hasUnpiped = !0, o7());
    }
    function D() {
      s("onend"), _.end();
    }
    var W = A(j);
    _.on("drain", W);
    var e7 = !1;
    function o7() {
      s("cleanup"), _.removeListener("close", u7), _.removeListener("finish", m7), _.removeListener("drain", W), _.removeListener("error", s7), _.removeListener("unpipe", B), j.removeListener("end", D), j.removeListener("end", p7), j.removeListener("data", a7), e7 = !0, V.awaitDrain && (!_._writableState || _._writableState.needDrain) && W();
    }
    j.on("data", a7);
    function a7(l7) {
      s("ondata");
      var y7 = _.write(l7);
      s("dest.write", y7), y7 === !1 && ((V.pipesCount === 1 && V.pipes === _ || V.pipesCount > 1 && J(V.pipes, _) !== -1) && !e7 && (s("false write response, pause", V.awaitDrain), V.awaitDrain++), j.pause());
    }
    function s7(l7) {
      s("onerror", l7), p7(), _.removeListener("error", s7), t(_, "error") === 0 && L(_, l7);
    }
    q(_, "error", s7);
    function u7() {
      _.removeListener("finish", m7), p7();
    }
    _.once("close", u7);
    function m7() {
      s("onfinish"), _.removeListener("close", u7), p7();
    }
    _.once("finish", m7);
    function p7() {
      s("unpipe"), j.unpipe(_);
    }
    return _.emit("pipe", j), V.flowing || (s("pipe resume"), j.resume()), _;
  };
  function A(_) {
    return function() {
      var j = _._readableState;
      s("pipeOnDrain", j.awaitDrain), j.awaitDrain && j.awaitDrain--, j.awaitDrain === 0 && t(_, "data") && (j.flowing = !0, H(_));
    };
  }
  z.prototype.unpipe = function(_) {
    var E = this._readableState, j = {
      hasUnpiped: !1
    };
    if (E.pipesCount === 0)
      return this;
    if (E.pipesCount === 1)
      return _ && _ !== E.pipes ? this : (_ || (_ = E.pipes), E.pipes = null, E.pipesCount = 0, E.flowing = !1, _ && _.emit("unpipe", this, j), this);
    if (!_) {
      var V = E.pipes, n7 = E.pipesCount;
      E.pipes = null, E.pipesCount = 0, E.flowing = !1;
      for (var K = 0; K < n7; K++)
        V[K].emit("unpipe", this, {
          hasUnpiped: !1
        });
      return this;
    }
    var B = J(E.pipes, _);
    return B === -1 ? this : (E.pipes.splice(B, 1), E.pipesCount -= 1, E.pipesCount === 1 && (E.pipes = E.pipes[0]), _.emit("unpipe", this, j), this);
  }, z.prototype.on = function(_, E) {
    var j = a.prototype.on.call(this, _, E), V = this._readableState;
    return _ === "data" ? (V.readableListening = this.listenerCount("readable") > 0, V.flowing !== !1 && this.resume()) : _ === "readable" && !V.endEmitted && !V.readableListening && (V.readableListening = V.needReadable = !0, V.flowing = !1, V.emittedReadable = !1, s("on readable", V.length, V.reading), V.length ? S(this) : V.reading || g7.nextTick(N, this)), j;
  }, z.prototype.addListener = z.prototype.on, z.prototype.removeListener = function(_, E) {
    var j = a.prototype.removeListener.call(this, _, E);
    return _ === "readable" && g7.nextTick(h, this), j;
  }, z.prototype.removeAllListeners = function(_) {
    var E = a.prototype.removeAllListeners.apply(this, arguments);
    return (_ === "readable" || _ === void 0) && g7.nextTick(h, this), E;
  };
  function h(_) {
    var E = _._readableState;
    E.readableListening = _.listenerCount("readable") > 0, E.resumeScheduled && !E.paused ? E.flowing = !0 : _.listenerCount("data") > 0 && _.resume();
  }
  function N(_) {
    s("readable nexttick read 0"), _.read(0);
  }
  z.prototype.resume = function() {
    var _ = this._readableState;
    return _.flowing || (s("resume"), _.flowing = !_.readableListening, Y(this, _)), _.paused = !1, this;
  };
  function Y(_, E) {
    E.resumeScheduled || (E.resumeScheduled = !0, g7.nextTick(t7, _, E));
  }
  function t7(_, E) {
    s("resume", E.reading), E.reading || _.read(0), E.resumeScheduled = !1, _.emit("resume"), H(_), E.flowing && !E.reading && _.read(0);
  }
  z.prototype.pause = function() {
    return s("call pause flowing=%j", this._readableState.flowing), this._readableState.flowing !== !1 && (s("pause"), this._readableState.flowing = !1, this.emit("pause")), this._readableState.paused = !0, this;
  };
  function H(_) {
    var E = _._readableState;
    for (s("flow", E.flowing); E.flowing && _.read() !== null; )
      ;
  }
  z.prototype.wrap = function(_) {
    var E = this, j = this._readableState, V = !1;
    _.on("end", function() {
      if (s("wrapped end"), j.decoder && !j.ended) {
        var B = j.decoder.end();
        B && B.length && E.push(B);
      }
      E.push(null);
    }), _.on("data", function(B) {
      if (s("wrapped data"), j.decoder && (B = j.decoder.write(B)), !(j.objectMode && B == null) && !(!j.objectMode && (!B || !B.length))) {
        var D = E.push(B);
        D || (V = !0, _.pause());
      }
    });
    for (var n7 in _)
      this[n7] === void 0 && typeof _[n7] == "function" && (this[n7] = function(D) {
        return function() {
          return _[D].apply(_, arguments);
        };
      }(n7));
    for (var K = 0; K < U.length; K++)
      _.on(U[K], this.emit.bind(this, U[K]));
    return this._read = function(B) {
      s("wrapped _read", B), V && (V = !1, _.resume());
    }, this;
  }, typeof Symbol == "function" && (z.prototype[Symbol.asyncIterator] = function() {
    return F === void 0 && (F = zL()), F(this);
  }), Object.defineProperty(z.prototype, "readableHighWaterMark", {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: !1,
    get: function() {
      return this._readableState.highWaterMark;
    }
  }), Object.defineProperty(z.prototype, "readableBuffer", {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: !1,
    get: function() {
      return this._readableState && this._readableState.buffer;
    }
  }), Object.defineProperty(z.prototype, "readableFlowing", {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: !1,
    get: function() {
      return this._readableState.flowing;
    },
    set: function(E) {
      this._readableState && (this._readableState.flowing = E);
    }
  }), z._fromList = $, Object.defineProperty(z.prototype, "readableLength", {
    // making it explicit this property is not enumerable
    // because otherwise some prototype manipulation in
    // userland will fail
    enumerable: !1,
    get: function() {
      return this._readableState.length;
    }
  });
  function $(_, E) {
    if (E.length === 0)
      return null;
    var j;
    return E.objectMode ? j = E.buffer.shift() : !_ || _ >= E.length ? (E.decoder ? j = E.buffer.join("") : E.buffer.length === 1 ? j = E.buffer.first() : j = E.buffer.concat(E.length), E.buffer.clear()) : j = E.buffer.consume(_, E.decoder), j;
  }
  function X(_) {
    var E = _._readableState;
    s("endReadable", E.endEmitted), E.endEmitted || (E.ended = !0, g7.nextTick(i7, E, _));
  }
  function i7(_, E) {
    if (s("endReadableNT", _.endEmitted, _.length), !_.endEmitted && _.length === 0 && (_.endEmitted = !0, E.readable = !1, E.emit("end"), _.autoDestroy)) {
      var j = E._writableState;
      (!j || j.autoDestroy && j.finished) && E.destroy();
    }
  }
  typeof Symbol == "function" && (z.from = function(_, E) {
    return C === void 0 && (C = qL()), C(z, _, E);
  });
  function J(_, E) {
    for (var j = 0, V = _.length; j < V; j++)
      if (_[j] === E)
        return j;
    return -1;
  }
  return uo;
}
var Rg = Xt, Qi = kr.codes, KL = Qi.ERR_METHOD_NOT_IMPLEMENTED, GL = Qi.ERR_MULTIPLE_CALLBACK, WL = Qi.ERR_TRANSFORM_ALREADY_TRANSFORMING, ZL = Qi.ERR_TRANSFORM_WITH_LENGTH_0, en = v1();
X7()(Xt, en);
function YL(e, t) {
  var a = this._transformState;
  a.transforming = !1;
  var r = a.writecb;
  if (r === null)
    return this.emit("error", new GL());
  a.writechunk = null, a.writecb = null, t != null && this.push(t), r(e);
  var f = this._readableState;
  f.reading = !1, (f.needReadable || f.length < f.highWaterMark) && this._read(f.highWaterMark);
}
function Xt(e) {
  if (!(this instanceof Xt))
    return new Xt(e);
  en.call(this, e), this._transformState = {
    afterTransform: YL.bind(this),
    needTransform: !1,
    transforming: !1,
    writecb: null,
    writechunk: null,
    writeencoding: null
  }, this._readableState.needReadable = !0, this._readableState.sync = !1, e && (typeof e.transform == "function" && (this._transform = e.transform), typeof e.flush == "function" && (this._flush = e.flush)), this.on("prefinish", XL);
}
function XL() {
  var e = this;
  typeof this._flush == "function" && !this._readableState.destroyed ? this._flush(function(t, a) {
    _p(e, t, a);
  }) : _p(this, null, null);
}
Xt.prototype.push = function(e, t) {
  return this._transformState.needTransform = !1, en.prototype.push.call(this, e, t);
};
Xt.prototype._transform = function(e, t, a) {
  a(new KL("_transform()"));
};
Xt.prototype._write = function(e, t, a) {
  var r = this._transformState;
  if (r.writecb = a, r.writechunk = e, r.writeencoding = t, !r.transforming) {
    var f = this._readableState;
    (r.needTransform || f.needReadable || f.length < f.highWaterMark) && this._read(f.highWaterMark);
  }
};
Xt.prototype._read = function(e) {
  var t = this._transformState;
  t.writechunk !== null && !t.transforming ? (t.transforming = !0, this._transform(t.writechunk, t.writeencoding, t.afterTransform)) : t.needTransform = !0;
};
Xt.prototype._destroy = function(e, t) {
  en.prototype._destroy.call(this, e, function(a) {
    t(a);
  });
};
function _p(e, t, a) {
  if (t)
    return e.emit("error", t);
  if (a != null && e.push(a), e._writableState.length)
    throw new ZL();
  if (e._transformState.transforming)
    throw new WL();
  return e.push(null);
}
var JL = V9, Bg = Rg;
X7()(V9, Bg);
function V9(e) {
  if (!(this instanceof V9))
    return new V9(e);
  Bg.call(this, e);
}
V9.prototype._transform = function(e, t, a) {
  a(null, e);
};
var lo;
function QL(e) {
  var t = !1;
  return function() {
    t || (t = !0, e.apply(void 0, arguments));
  };
}
var Ng = kr.codes, eF = Ng.ERR_MISSING_ARGS, tF = Ng.ERR_STREAM_DESTROYED;
function wp(e) {
  if (e)
    throw e;
}
function aF(e) {
  return e.setHeader && typeof e.abort == "function";
}
function rF(e, t, a, r) {
  r = QL(r);
  var f = !1;
  e.on("close", function() {
    f = !0;
  }), lo === void 0 && (lo = Jd), lo(e, {
    readable: t,
    writable: a
  }, function(n) {
    if (n)
      return r(n);
    f = !0, r();
  });
  var i = !1;
  return function(n) {
    if (!f && !i) {
      if (i = !0, aF(e))
        return e.abort();
      if (typeof e.destroy == "function")
        return e.destroy();
      r(n || new tF("pipe"));
    }
  };
}
function Sp(e) {
  e();
}
function fF(e, t) {
  return e.pipe(t);
}
function iF(e) {
  return !e.length || typeof e[e.length - 1] != "function" ? wp : e.pop();
}
function nF() {
  for (var e = arguments.length, t = new Array(e), a = 0; a < e; a++)
    t[a] = arguments[a];
  var r = iF(t);
  if (Array.isArray(t[0]) && (t = t[0]), t.length < 2)
    throw new eF("streams");
  var f, i = t.map(function(n, o) {
    var s = o < t.length - 1, b = o > 0;
    return rF(n, s, b, function(l) {
      f || (f = l), l && i.forEach(Sp), !s && (i.forEach(Sp), r(f));
    });
  });
  return t.reduce(fF);
}
var oF = nF;
(function(e, t) {
  t = e.exports = Mg(), t.Stream = t, t.Readable = t, t.Writable = Og(), t.Duplex = v1(), t.Transform = Rg, t.PassThrough = JL, t.finished = Jd, t.pipeline = oF;
})(cs, cs.exports);
var Cg = cs.exports, Ep = Xd, sF = X7(), Dg = Cg, V6 = Ji.readyStates = {
  UNSENT: 0,
  OPENED: 1,
  HEADERS_RECEIVED: 2,
  LOADING: 3,
  DONE: 4
}, Qd = Ji.IncomingMessage = function(e, t, a, r) {
  var f = this;
  if (Dg.Readable.call(f), f._mode = a, f.headers = {}, f.rawHeaders = [], f.trailers = {}, f.rawTrailers = [], f.on("end", function() {
    g7.nextTick(function() {
      f.emit("close");
    });
  }), a === "fetch") {
    let l = function() {
      n.read().then(function(v) {
        if (!f._destroyed) {
          if (r(v.done), v.done) {
            f.push(null);
            return;
          }
          f.push(Q.Buffer.from(v.value)), l();
        }
      }).catch(function(v) {
        r(!0), f._destroyed || f.emit("error", v);
      });
    };
    if (f._fetchResponse = t, f.url = t.url, f.statusCode = t.status, f.statusMessage = t.statusText, t.headers.forEach(function(v, m) {
      f.headers[m.toLowerCase()] = v, f.rawHeaders.push(m, v);
    }), Ep.writableStream) {
      var i = new WritableStream({
        write: function(v) {
          return r(!1), new Promise(function(m, x) {
            f._destroyed ? x() : f.push(Q.Buffer.from(v)) ? m() : f._resumeFetch = m;
          });
        },
        close: function() {
          r(!0), f._destroyed || f.push(null);
        },
        abort: function(v) {
          r(!0), f._destroyed || f.emit("error", v);
        }
      });
      try {
        t.body.pipeTo(i).catch(function(v) {
          r(!0), f._destroyed || f.emit("error", v);
        });
        return;
      } catch {
      }
    }
    var n = t.body.getReader();
    l();
  } else {
    f._xhr = e, f._pos = 0, f.url = e.responseURL, f.statusCode = e.status, f.statusMessage = e.statusText;
    var o = e.getAllResponseHeaders().split(/\r?\n/);
    if (o.forEach(function(l) {
      var v = l.match(/^([^:]+):\s*(.*)/);
      if (v) {
        var m = v[1].toLowerCase();
        m === "set-cookie" ? (f.headers[m] === void 0 && (f.headers[m] = []), f.headers[m].push(v[2])) : f.headers[m] !== void 0 ? f.headers[m] += ", " + v[2] : f.headers[m] = v[2], f.rawHeaders.push(v[1], v[2]);
      }
    }), f._charset = "x-user-defined", !Ep.overrideMimeType) {
      var s = f.rawHeaders["mime-type"];
      if (s) {
        var b = s.match(/;\s*charset=([^;])(;|$)/);
        b && (f._charset = b[1].toLowerCase());
      }
      f._charset || (f._charset = "utf-8");
    }
  }
};
sF(Qd, Dg.Readable);
Qd.prototype._read = function() {
  var e = this, t = e._resumeFetch;
  t && (e._resumeFetch = null, t());
};
Qd.prototype._onXHRProgress = function(e) {
  var t = this, a = t._xhr, r = null;
  switch (t._mode) {
    case "text":
      if (r = a.responseText, r.length > t._pos) {
        var f = r.substr(t._pos);
        if (t._charset === "x-user-defined") {
          for (var i = Q.Buffer.alloc(f.length), n = 0; n < f.length; n++)
            i[n] = f.charCodeAt(n) & 255;
          t.push(i);
        } else
          t.push(f, t._charset);
        t._pos = r.length;
      }
      break;
    case "arraybuffer":
      if (a.readyState !== V6.DONE || !a.response)
        break;
      r = a.response, t.push(Q.Buffer.from(new Uint8Array(r)));
      break;
    case "moz-chunked-arraybuffer":
      if (r = a.response, a.readyState !== V6.LOADING || !r)
        break;
      t.push(Q.Buffer.from(new Uint8Array(r)));
      break;
    case "ms-stream":
      if (r = a.response, a.readyState !== V6.LOADING)
        break;
      var o = new I7.MSStreamReader();
      o.onprogress = function() {
        o.result.byteLength > t._pos && (t.push(Q.Buffer.from(new Uint8Array(o.result.slice(t._pos)))), t._pos = o.result.byteLength);
      }, o.onload = function() {
        e(!0), t.push(null);
      }, o.readAsArrayBuffer(r);
      break;
  }
  t._xhr.readyState === V6.DONE && t._mode !== "ms-stream" && (e(!0), t.push(null));
};
var ar = Xd, dF = X7(), Lg = Ji, ec = Cg, cF = Lg.IncomingMessage, Tp = Lg.readyStates;
function uF(e, t) {
  return ar.fetch && t ? "fetch" : ar.mozchunkedarraybuffer ? "moz-chunked-arraybuffer" : ar.msstream ? "ms-stream" : ar.arraybuffer && e ? "arraybuffer" : "text";
}
var k0 = Eg.exports = function(e) {
  var t = this;
  ec.Writable.call(t), t._opts = e, t._body = [], t._headers = {}, e.auth && t.setHeader("Authorization", "Basic " + Q.Buffer.from(e.auth).toString("base64")), Object.keys(e.headers).forEach(function(f) {
    t.setHeader(f, e.headers[f]);
  });
  var a, r = !0;
  if (e.mode === "disable-fetch" || "requestTimeout" in e && !ar.abortController)
    r = !1, a = !0;
  else if (e.mode === "prefer-streaming")
    a = !1;
  else if (e.mode === "allow-wrong-content-type")
    a = !ar.overrideMimeType;
  else if (!e.mode || e.mode === "default" || e.mode === "prefer-fast")
    a = !0;
  else
    throw new Error("Invalid value for opts.mode");
  t._mode = uF(a, r), t._fetchTimer = null, t._socketTimeout = null, t._socketTimer = null, t.on("finish", function() {
    t._onFinish();
  });
};
dF(k0, ec.Writable);
k0.prototype.setHeader = function(e, t) {
  var a = this, r = e.toLowerCase();
  pF.indexOf(r) === -1 && (a._headers[r] = {
    name: e,
    value: t
  });
};
k0.prototype.getHeader = function(e) {
  var t = this._headers[e.toLowerCase()];
  return t ? t.value : null;
};
k0.prototype.removeHeader = function(e) {
  var t = this;
  delete t._headers[e.toLowerCase()];
};
k0.prototype._onFinish = function() {
  var e = this;
  if (!e._destroyed) {
    var t = e._opts;
    "timeout" in t && t.timeout !== 0 && e.setTimeout(t.timeout);
    var a = e._headers, r = null;
    t.method !== "GET" && t.method !== "HEAD" && (r = new Blob(e._body, {
      type: (a["content-type"] || {}).value || ""
    }));
    var f = [];
    if (Object.keys(a).forEach(function(s) {
      var b = a[s].name, l = a[s].value;
      Array.isArray(l) ? l.forEach(function(v) {
        f.push([b, v]);
      }) : f.push([b, l]);
    }), e._mode === "fetch") {
      var i = null;
      if (ar.abortController) {
        var n = new AbortController();
        i = n.signal, e._fetchAbortController = n, "requestTimeout" in t && t.requestTimeout !== 0 && (e._fetchTimer = I7.setTimeout(function() {
          e.emit("requestTimeout"), e._fetchAbortController && e._fetchAbortController.abort();
        }, t.requestTimeout));
      }
      I7.fetch(e._opts.url, {
        method: e._opts.method,
        headers: f,
        body: r || void 0,
        mode: "cors",
        credentials: t.withCredentials ? "include" : "same-origin",
        signal: i
      }).then(function(s) {
        e._fetchResponse = s, e._resetTimers(!1), e._connect();
      }, function(s) {
        e._resetTimers(!0), e._destroyed || e.emit("error", s);
      });
    } else {
      var o = e._xhr = new I7.XMLHttpRequest();
      try {
        o.open(e._opts.method, e._opts.url, !0);
      } catch (s) {
        g7.nextTick(function() {
          e.emit("error", s);
        });
        return;
      }
      "responseType" in o && (o.responseType = e._mode), "withCredentials" in o && (o.withCredentials = !!t.withCredentials), e._mode === "text" && "overrideMimeType" in o && o.overrideMimeType("text/plain; charset=x-user-defined"), "requestTimeout" in t && (o.timeout = t.requestTimeout, o.ontimeout = function() {
        e.emit("requestTimeout");
      }), f.forEach(function(s) {
        o.setRequestHeader(s[0], s[1]);
      }), e._response = null, o.onreadystatechange = function() {
        switch (o.readyState) {
          case Tp.LOADING:
          case Tp.DONE:
            e._onXHRProgress();
            break;
        }
      }, e._mode === "moz-chunked-arraybuffer" && (o.onprogress = function() {
        e._onXHRProgress();
      }), o.onerror = function() {
        e._destroyed || (e._resetTimers(!0), e.emit("error", new Error("XHR error")));
      };
      try {
        o.send(r);
      } catch (s) {
        g7.nextTick(function() {
          e.emit("error", s);
        });
        return;
      }
    }
  }
};
function lF(e) {
  try {
    var t = e.status;
    return t !== null && t !== 0;
  } catch {
    return !1;
  }
}
k0.prototype._onXHRProgress = function() {
  var e = this;
  e._resetTimers(!1), !(!lF(e._xhr) || e._destroyed) && (e._response || e._connect(), e._response._onXHRProgress(e._resetTimers.bind(e)));
};
k0.prototype._connect = function() {
  var e = this;
  e._destroyed || (e._response = new cF(e._xhr, e._fetchResponse, e._mode, e._resetTimers.bind(e)), e._response.on("error", function(t) {
    e.emit("error", t);
  }), e.emit("response", e._response));
};
k0.prototype._write = function(e, t, a) {
  var r = this;
  r._body.push(e), a();
};
k0.prototype._resetTimers = function(e) {
  var t = this;
  I7.clearTimeout(t._socketTimer), t._socketTimer = null, e ? (I7.clearTimeout(t._fetchTimer), t._fetchTimer = null) : t._socketTimeout && (t._socketTimer = I7.setTimeout(function() {
    t.emit("timeout");
  }, t._socketTimeout));
};
k0.prototype.abort = k0.prototype.destroy = function(e) {
  var t = this;
  t._destroyed = !0, t._resetTimers(!0), t._response && (t._response._destroyed = !0), t._xhr ? t._xhr.abort() : t._fetchAbortController && t._fetchAbortController.abort(), e && t.emit("error", e);
};
k0.prototype.end = function(e, t, a) {
  var r = this;
  typeof e == "function" && (a = e, e = void 0), ec.Writable.prototype.end.call(r, e, t, a);
};
k0.prototype.setTimeout = function(e, t) {
  var a = this;
  t && a.once("timeout", t), a._socketTimeout = e, a._resetTimers(!1);
};
k0.prototype.flushHeaders = function() {
};
k0.prototype.setNoDelay = function() {
};
k0.prototype.setSocketKeepAlive = function() {
};
var pF = [
  "accept-charset",
  "accept-encoding",
  "access-control-request-headers",
  "access-control-request-method",
  "connection",
  "content-length",
  "cookie",
  "cookie2",
  "date",
  "dnt",
  "expect",
  "host",
  "keep-alive",
  "origin",
  "referer",
  "te",
  "trailer",
  "transfer-encoding",
  "upgrade",
  "via"
], hF = Eg.exports, bF = vF, mF = Object.prototype.hasOwnProperty;
function vF() {
  for (var e = {}, t = 0; t < arguments.length; t++) {
    var a = arguments[t];
    for (var r in a)
      mF.call(a, r) && (e[r] = a[r]);
  }
  return e;
}
var yF = {
  100: "Continue",
  101: "Switching Protocols",
  102: "Processing",
  200: "OK",
  201: "Created",
  202: "Accepted",
  203: "Non-Authoritative Information",
  204: "No Content",
  205: "Reset Content",
  206: "Partial Content",
  207: "Multi-Status",
  208: "Already Reported",
  226: "IM Used",
  300: "Multiple Choices",
  301: "Moved Permanently",
  302: "Found",
  303: "See Other",
  304: "Not Modified",
  305: "Use Proxy",
  307: "Temporary Redirect",
  308: "Permanent Redirect",
  400: "Bad Request",
  401: "Unauthorized",
  402: "Payment Required",
  403: "Forbidden",
  404: "Not Found",
  405: "Method Not Allowed",
  406: "Not Acceptable",
  407: "Proxy Authentication Required",
  408: "Request Timeout",
  409: "Conflict",
  410: "Gone",
  411: "Length Required",
  412: "Precondition Failed",
  413: "Payload Too Large",
  414: "URI Too Long",
  415: "Unsupported Media Type",
  416: "Range Not Satisfiable",
  417: "Expectation Failed",
  418: "I'm a teapot",
  421: "Misdirected Request",
  422: "Unprocessable Entity",
  423: "Locked",
  424: "Failed Dependency",
  425: "Unordered Collection",
  426: "Upgrade Required",
  428: "Precondition Required",
  429: "Too Many Requests",
  431: "Request Header Fields Too Large",
  451: "Unavailable For Legal Reasons",
  500: "Internal Server Error",
  501: "Not Implemented",
  502: "Bad Gateway",
  503: "Service Unavailable",
  504: "Gateway Timeout",
  505: "HTTP Version Not Supported",
  506: "Variant Also Negotiates",
  507: "Insufficient Storage",
  508: "Loop Detected",
  509: "Bandwidth Limit Exceeded",
  510: "Not Extended",
  511: "Network Authentication Required"
};
(function(e) {
  var t = hF, a = Ji, r = bF, f = yF, i = Cs, n = e;
  n.request = function(o, s) {
    typeof o == "string" ? o = i.parse(o) : o = r(o);
    var b = I7.location.protocol.search(/^https?:$/) === -1 ? "http:" : "", l = o.protocol || b, v = o.hostname || o.host, m = o.port, x = o.path || "/";
    v && v.indexOf(":") !== -1 && (v = "[" + v + "]"), o.url = (v ? l + "//" + v : "") + (m ? ":" + m : "") + x, o.method = (o.method || "GET").toUpperCase(), o.headers = o.headers || {};
    var I = new t(o);
    return s && I.on("response", s), I;
  }, n.get = function(s, b) {
    var l = n.request(s, b);
    return l.end(), l;
  }, n.ClientRequest = t, n.IncomingMessage = a.IncomingMessage, n.Agent = function() {
  }, n.Agent.defaultMaxSockets = 4, n.globalAgent = new n.Agent(), n.STATUS_CODES = f, n.METHODS = [
    "CHECKOUT",
    "CONNECT",
    "COPY",
    "DELETE",
    "GET",
    "HEAD",
    "LOCK",
    "M-SEARCH",
    "MERGE",
    "MKACTIVITY",
    "MKCOL",
    "MOVE",
    "NOTIFY",
    "OPTIONS",
    "PATCH",
    "POST",
    "PROPFIND",
    "PROPPATCH",
    "PURGE",
    "PUT",
    "REPORT",
    "SEARCH",
    "SUBSCRIBE",
    "TRACE",
    "UNLOCK",
    "UNSUBSCRIBE"
  ];
})(Yd);
const Fg = /* @__PURE__ */ Qt(Yd);
var W5 = {}, Hg = { exports: {} }, $e = {}, gF = $e;
function Ap(e) {
  return e < 0 ? -1 : 1;
}
function xF(e) {
  return e % 1 === 0.5 && !(e & 1) ? Math.floor(e) : Math.round(e);
}
function Ca(e, t) {
  t.unsigned || --e;
  const a = t.unsigned ? 0 : -Math.pow(2, e), r = Math.pow(2, e) - 1, f = t.moduloBitLength ? Math.pow(2, t.moduloBitLength) : Math.pow(2, e), i = t.moduloBitLength ? Math.pow(2, t.moduloBitLength - 1) : Math.pow(2, e - 1);
  return function(n, o) {
    o || (o = {});
    let s = +n;
    if (o.enforceRange) {
      if (!Number.isFinite(s))
        throw new TypeError("Argument is not a finite number");
      if (s = Ap(s) * Math.floor(Math.abs(s)), s < a || s > r)
        throw new TypeError("Argument is not in byte range");
      return s;
    }
    if (!isNaN(s) && o.clamp)
      return s = xF(s), s < a && (s = a), s > r && (s = r), s;
    if (!Number.isFinite(s) || s === 0)
      return 0;
    if (s = Ap(s) * Math.floor(Math.abs(s)), s = s % f, !t.unsigned && s >= i)
      return s - f;
    if (t.unsigned) {
      if (s < 0)
        s += f;
      else if (s === -0)
        return 0;
    }
    return s;
  };
}
$e.void = function() {
};
$e.boolean = function(e) {
  return !!e;
};
$e.byte = Ca(8, { unsigned: !1 });
$e.octet = Ca(8, { unsigned: !0 });
$e.short = Ca(16, { unsigned: !1 });
$e["unsigned short"] = Ca(16, { unsigned: !0 });
$e.long = Ca(32, { unsigned: !1 });
$e["unsigned long"] = Ca(32, { unsigned: !0 });
$e["long long"] = Ca(32, { unsigned: !1, moduloBitLength: 64 });
$e["unsigned long long"] = Ca(32, { unsigned: !0, moduloBitLength: 64 });
$e.double = function(e) {
  const t = +e;
  if (!Number.isFinite(t))
    throw new TypeError("Argument is not a finite floating-point value");
  return t;
};
$e["unrestricted double"] = function(e) {
  const t = +e;
  if (isNaN(t))
    throw new TypeError("Argument is NaN");
  return t;
};
$e.float = $e.double;
$e["unrestricted float"] = $e["unrestricted double"];
$e.DOMString = function(e, t) {
  return t || (t = {}), t.treatNullAsEmptyString && e === null ? "" : String(e);
};
$e.ByteString = function(e, t) {
  const a = String(e);
  let r;
  for (let f = 0; (r = a.codePointAt(f)) !== void 0; ++f)
    if (r > 255)
      throw new TypeError("Argument is not a valid bytestring");
  return a;
};
$e.USVString = function(e) {
  const t = String(e), a = t.length, r = [];
  for (let f = 0; f < a; ++f) {
    const i = t.charCodeAt(f);
    if (i < 55296 || i > 57343)
      r.push(String.fromCodePoint(i));
    else if (56320 <= i && i <= 57343)
      r.push(String.fromCodePoint(65533));
    else if (f === a - 1)
      r.push(String.fromCodePoint(65533));
    else {
      const n = t.charCodeAt(f + 1);
      if (56320 <= n && n <= 57343) {
        const o = i & 1023, s = n & 1023;
        r.push(String.fromCodePoint((2 << 15) + (2 << 9) * o + s)), ++f;
      } else
        r.push(String.fromCodePoint(65533));
    }
  }
  return r.join("");
};
$e.Date = function(e, t) {
  if (!(e instanceof Date))
    throw new TypeError("Argument is not a Date object");
  if (!isNaN(e))
    return e;
};
$e.RegExp = function(e, t) {
  return e instanceof RegExp || (e = new RegExp(e)), e;
};
var Ug = { exports: {} };
(function(e) {
  e.exports.mixin = function(a, r) {
    const f = Object.getOwnPropertyNames(r);
    for (let i = 0; i < f.length; ++i)
      Object.defineProperty(a, f[i], Object.getOwnPropertyDescriptor(r, f[i]));
  }, e.exports.wrapperSymbol = Symbol("wrapper"), e.exports.implSymbol = Symbol("impl"), e.exports.wrapperForImpl = function(t) {
    return t[e.exports.wrapperSymbol];
  }, e.exports.implForWrapper = function(t) {
    return t[e.exports.implSymbol];
  };
})(Ug);
var _F = Ug.exports, $g = {}, jg = { exports: {} }, tn = {};
const wF = [
  [
    [
      0,
      44
    ],
    "disallowed_STD3_valid"
  ],
  [
    [
      45,
      46
    ],
    "valid"
  ],
  [
    [
      47,
      47
    ],
    "disallowed_STD3_valid"
  ],
  [
    [
      48,
      57
    ],
    "valid"
  ],
  [
    [
      58,
      64
    ],
    "disallowed_STD3_valid"
  ],
  [
    [
      65,
      65
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      66,
      66
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      67,
      67
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      68,
      68
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      69,
      69
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      70,
      70
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      71,
      71
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      72,
      72
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      73,
      73
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      74,
      74
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      75,
      75
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      76,
      76
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      77,
      77
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      78,
      78
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      79,
      79
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      80,
      80
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      81,
      81
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      82,
      82
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      83,
      83
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      84,
      84
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      85,
      85
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      86,
      86
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      87,
      87
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      88,
      88
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      89,
      89
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      90,
      90
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      91,
      96
    ],
    "disallowed_STD3_valid"
  ],
  [
    [
      97,
      122
    ],
    "valid"
  ],
  [
    [
      123,
      127
    ],
    "disallowed_STD3_valid"
  ],
  [
    [
      128,
      159
    ],
    "disallowed"
  ],
  [
    [
      160,
      160
    ],
    "disallowed_STD3_mapped",
    [
      32
    ]
  ],
  [
    [
      161,
      167
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      168,
      168
    ],
    "disallowed_STD3_mapped",
    [
      32,
      776
    ]
  ],
  [
    [
      169,
      169
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      170,
      170
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      171,
      172
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      173,
      173
    ],
    "ignored"
  ],
  [
    [
      174,
      174
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      175,
      175
    ],
    "disallowed_STD3_mapped",
    [
      32,
      772
    ]
  ],
  [
    [
      176,
      177
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      178,
      178
    ],
    "mapped",
    [
      50
    ]
  ],
  [
    [
      179,
      179
    ],
    "mapped",
    [
      51
    ]
  ],
  [
    [
      180,
      180
    ],
    "disallowed_STD3_mapped",
    [
      32,
      769
    ]
  ],
  [
    [
      181,
      181
    ],
    "mapped",
    [
      956
    ]
  ],
  [
    [
      182,
      182
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      183,
      183
    ],
    "valid"
  ],
  [
    [
      184,
      184
    ],
    "disallowed_STD3_mapped",
    [
      32,
      807
    ]
  ],
  [
    [
      185,
      185
    ],
    "mapped",
    [
      49
    ]
  ],
  [
    [
      186,
      186
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      187,
      187
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      188,
      188
    ],
    "mapped",
    [
      49,
      8260,
      52
    ]
  ],
  [
    [
      189,
      189
    ],
    "mapped",
    [
      49,
      8260,
      50
    ]
  ],
  [
    [
      190,
      190
    ],
    "mapped",
    [
      51,
      8260,
      52
    ]
  ],
  [
    [
      191,
      191
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      192,
      192
    ],
    "mapped",
    [
      224
    ]
  ],
  [
    [
      193,
      193
    ],
    "mapped",
    [
      225
    ]
  ],
  [
    [
      194,
      194
    ],
    "mapped",
    [
      226
    ]
  ],
  [
    [
      195,
      195
    ],
    "mapped",
    [
      227
    ]
  ],
  [
    [
      196,
      196
    ],
    "mapped",
    [
      228
    ]
  ],
  [
    [
      197,
      197
    ],
    "mapped",
    [
      229
    ]
  ],
  [
    [
      198,
      198
    ],
    "mapped",
    [
      230
    ]
  ],
  [
    [
      199,
      199
    ],
    "mapped",
    [
      231
    ]
  ],
  [
    [
      200,
      200
    ],
    "mapped",
    [
      232
    ]
  ],
  [
    [
      201,
      201
    ],
    "mapped",
    [
      233
    ]
  ],
  [
    [
      202,
      202
    ],
    "mapped",
    [
      234
    ]
  ],
  [
    [
      203,
      203
    ],
    "mapped",
    [
      235
    ]
  ],
  [
    [
      204,
      204
    ],
    "mapped",
    [
      236
    ]
  ],
  [
    [
      205,
      205
    ],
    "mapped",
    [
      237
    ]
  ],
  [
    [
      206,
      206
    ],
    "mapped",
    [
      238
    ]
  ],
  [
    [
      207,
      207
    ],
    "mapped",
    [
      239
    ]
  ],
  [
    [
      208,
      208
    ],
    "mapped",
    [
      240
    ]
  ],
  [
    [
      209,
      209
    ],
    "mapped",
    [
      241
    ]
  ],
  [
    [
      210,
      210
    ],
    "mapped",
    [
      242
    ]
  ],
  [
    [
      211,
      211
    ],
    "mapped",
    [
      243
    ]
  ],
  [
    [
      212,
      212
    ],
    "mapped",
    [
      244
    ]
  ],
  [
    [
      213,
      213
    ],
    "mapped",
    [
      245
    ]
  ],
  [
    [
      214,
      214
    ],
    "mapped",
    [
      246
    ]
  ],
  [
    [
      215,
      215
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      216,
      216
    ],
    "mapped",
    [
      248
    ]
  ],
  [
    [
      217,
      217
    ],
    "mapped",
    [
      249
    ]
  ],
  [
    [
      218,
      218
    ],
    "mapped",
    [
      250
    ]
  ],
  [
    [
      219,
      219
    ],
    "mapped",
    [
      251
    ]
  ],
  [
    [
      220,
      220
    ],
    "mapped",
    [
      252
    ]
  ],
  [
    [
      221,
      221
    ],
    "mapped",
    [
      253
    ]
  ],
  [
    [
      222,
      222
    ],
    "mapped",
    [
      254
    ]
  ],
  [
    [
      223,
      223
    ],
    "deviation",
    [
      115,
      115
    ]
  ],
  [
    [
      224,
      246
    ],
    "valid"
  ],
  [
    [
      247,
      247
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      248,
      255
    ],
    "valid"
  ],
  [
    [
      256,
      256
    ],
    "mapped",
    [
      257
    ]
  ],
  [
    [
      257,
      257
    ],
    "valid"
  ],
  [
    [
      258,
      258
    ],
    "mapped",
    [
      259
    ]
  ],
  [
    [
      259,
      259
    ],
    "valid"
  ],
  [
    [
      260,
      260
    ],
    "mapped",
    [
      261
    ]
  ],
  [
    [
      261,
      261
    ],
    "valid"
  ],
  [
    [
      262,
      262
    ],
    "mapped",
    [
      263
    ]
  ],
  [
    [
      263,
      263
    ],
    "valid"
  ],
  [
    [
      264,
      264
    ],
    "mapped",
    [
      265
    ]
  ],
  [
    [
      265,
      265
    ],
    "valid"
  ],
  [
    [
      266,
      266
    ],
    "mapped",
    [
      267
    ]
  ],
  [
    [
      267,
      267
    ],
    "valid"
  ],
  [
    [
      268,
      268
    ],
    "mapped",
    [
      269
    ]
  ],
  [
    [
      269,
      269
    ],
    "valid"
  ],
  [
    [
      270,
      270
    ],
    "mapped",
    [
      271
    ]
  ],
  [
    [
      271,
      271
    ],
    "valid"
  ],
  [
    [
      272,
      272
    ],
    "mapped",
    [
      273
    ]
  ],
  [
    [
      273,
      273
    ],
    "valid"
  ],
  [
    [
      274,
      274
    ],
    "mapped",
    [
      275
    ]
  ],
  [
    [
      275,
      275
    ],
    "valid"
  ],
  [
    [
      276,
      276
    ],
    "mapped",
    [
      277
    ]
  ],
  [
    [
      277,
      277
    ],
    "valid"
  ],
  [
    [
      278,
      278
    ],
    "mapped",
    [
      279
    ]
  ],
  [
    [
      279,
      279
    ],
    "valid"
  ],
  [
    [
      280,
      280
    ],
    "mapped",
    [
      281
    ]
  ],
  [
    [
      281,
      281
    ],
    "valid"
  ],
  [
    [
      282,
      282
    ],
    "mapped",
    [
      283
    ]
  ],
  [
    [
      283,
      283
    ],
    "valid"
  ],
  [
    [
      284,
      284
    ],
    "mapped",
    [
      285
    ]
  ],
  [
    [
      285,
      285
    ],
    "valid"
  ],
  [
    [
      286,
      286
    ],
    "mapped",
    [
      287
    ]
  ],
  [
    [
      287,
      287
    ],
    "valid"
  ],
  [
    [
      288,
      288
    ],
    "mapped",
    [
      289
    ]
  ],
  [
    [
      289,
      289
    ],
    "valid"
  ],
  [
    [
      290,
      290
    ],
    "mapped",
    [
      291
    ]
  ],
  [
    [
      291,
      291
    ],
    "valid"
  ],
  [
    [
      292,
      292
    ],
    "mapped",
    [
      293
    ]
  ],
  [
    [
      293,
      293
    ],
    "valid"
  ],
  [
    [
      294,
      294
    ],
    "mapped",
    [
      295
    ]
  ],
  [
    [
      295,
      295
    ],
    "valid"
  ],
  [
    [
      296,
      296
    ],
    "mapped",
    [
      297
    ]
  ],
  [
    [
      297,
      297
    ],
    "valid"
  ],
  [
    [
      298,
      298
    ],
    "mapped",
    [
      299
    ]
  ],
  [
    [
      299,
      299
    ],
    "valid"
  ],
  [
    [
      300,
      300
    ],
    "mapped",
    [
      301
    ]
  ],
  [
    [
      301,
      301
    ],
    "valid"
  ],
  [
    [
      302,
      302
    ],
    "mapped",
    [
      303
    ]
  ],
  [
    [
      303,
      303
    ],
    "valid"
  ],
  [
    [
      304,
      304
    ],
    "mapped",
    [
      105,
      775
    ]
  ],
  [
    [
      305,
      305
    ],
    "valid"
  ],
  [
    [
      306,
      307
    ],
    "mapped",
    [
      105,
      106
    ]
  ],
  [
    [
      308,
      308
    ],
    "mapped",
    [
      309
    ]
  ],
  [
    [
      309,
      309
    ],
    "valid"
  ],
  [
    [
      310,
      310
    ],
    "mapped",
    [
      311
    ]
  ],
  [
    [
      311,
      312
    ],
    "valid"
  ],
  [
    [
      313,
      313
    ],
    "mapped",
    [
      314
    ]
  ],
  [
    [
      314,
      314
    ],
    "valid"
  ],
  [
    [
      315,
      315
    ],
    "mapped",
    [
      316
    ]
  ],
  [
    [
      316,
      316
    ],
    "valid"
  ],
  [
    [
      317,
      317
    ],
    "mapped",
    [
      318
    ]
  ],
  [
    [
      318,
      318
    ],
    "valid"
  ],
  [
    [
      319,
      320
    ],
    "mapped",
    [
      108,
      183
    ]
  ],
  [
    [
      321,
      321
    ],
    "mapped",
    [
      322
    ]
  ],
  [
    [
      322,
      322
    ],
    "valid"
  ],
  [
    [
      323,
      323
    ],
    "mapped",
    [
      324
    ]
  ],
  [
    [
      324,
      324
    ],
    "valid"
  ],
  [
    [
      325,
      325
    ],
    "mapped",
    [
      326
    ]
  ],
  [
    [
      326,
      326
    ],
    "valid"
  ],
  [
    [
      327,
      327
    ],
    "mapped",
    [
      328
    ]
  ],
  [
    [
      328,
      328
    ],
    "valid"
  ],
  [
    [
      329,
      329
    ],
    "mapped",
    [
      700,
      110
    ]
  ],
  [
    [
      330,
      330
    ],
    "mapped",
    [
      331
    ]
  ],
  [
    [
      331,
      331
    ],
    "valid"
  ],
  [
    [
      332,
      332
    ],
    "mapped",
    [
      333
    ]
  ],
  [
    [
      333,
      333
    ],
    "valid"
  ],
  [
    [
      334,
      334
    ],
    "mapped",
    [
      335
    ]
  ],
  [
    [
      335,
      335
    ],
    "valid"
  ],
  [
    [
      336,
      336
    ],
    "mapped",
    [
      337
    ]
  ],
  [
    [
      337,
      337
    ],
    "valid"
  ],
  [
    [
      338,
      338
    ],
    "mapped",
    [
      339
    ]
  ],
  [
    [
      339,
      339
    ],
    "valid"
  ],
  [
    [
      340,
      340
    ],
    "mapped",
    [
      341
    ]
  ],
  [
    [
      341,
      341
    ],
    "valid"
  ],
  [
    [
      342,
      342
    ],
    "mapped",
    [
      343
    ]
  ],
  [
    [
      343,
      343
    ],
    "valid"
  ],
  [
    [
      344,
      344
    ],
    "mapped",
    [
      345
    ]
  ],
  [
    [
      345,
      345
    ],
    "valid"
  ],
  [
    [
      346,
      346
    ],
    "mapped",
    [
      347
    ]
  ],
  [
    [
      347,
      347
    ],
    "valid"
  ],
  [
    [
      348,
      348
    ],
    "mapped",
    [
      349
    ]
  ],
  [
    [
      349,
      349
    ],
    "valid"
  ],
  [
    [
      350,
      350
    ],
    "mapped",
    [
      351
    ]
  ],
  [
    [
      351,
      351
    ],
    "valid"
  ],
  [
    [
      352,
      352
    ],
    "mapped",
    [
      353
    ]
  ],
  [
    [
      353,
      353
    ],
    "valid"
  ],
  [
    [
      354,
      354
    ],
    "mapped",
    [
      355
    ]
  ],
  [
    [
      355,
      355
    ],
    "valid"
  ],
  [
    [
      356,
      356
    ],
    "mapped",
    [
      357
    ]
  ],
  [
    [
      357,
      357
    ],
    "valid"
  ],
  [
    [
      358,
      358
    ],
    "mapped",
    [
      359
    ]
  ],
  [
    [
      359,
      359
    ],
    "valid"
  ],
  [
    [
      360,
      360
    ],
    "mapped",
    [
      361
    ]
  ],
  [
    [
      361,
      361
    ],
    "valid"
  ],
  [
    [
      362,
      362
    ],
    "mapped",
    [
      363
    ]
  ],
  [
    [
      363,
      363
    ],
    "valid"
  ],
  [
    [
      364,
      364
    ],
    "mapped",
    [
      365
    ]
  ],
  [
    [
      365,
      365
    ],
    "valid"
  ],
  [
    [
      366,
      366
    ],
    "mapped",
    [
      367
    ]
  ],
  [
    [
      367,
      367
    ],
    "valid"
  ],
  [
    [
      368,
      368
    ],
    "mapped",
    [
      369
    ]
  ],
  [
    [
      369,
      369
    ],
    "valid"
  ],
  [
    [
      370,
      370
    ],
    "mapped",
    [
      371
    ]
  ],
  [
    [
      371,
      371
    ],
    "valid"
  ],
  [
    [
      372,
      372
    ],
    "mapped",
    [
      373
    ]
  ],
  [
    [
      373,
      373
    ],
    "valid"
  ],
  [
    [
      374,
      374
    ],
    "mapped",
    [
      375
    ]
  ],
  [
    [
      375,
      375
    ],
    "valid"
  ],
  [
    [
      376,
      376
    ],
    "mapped",
    [
      255
    ]
  ],
  [
    [
      377,
      377
    ],
    "mapped",
    [
      378
    ]
  ],
  [
    [
      378,
      378
    ],
    "valid"
  ],
  [
    [
      379,
      379
    ],
    "mapped",
    [
      380
    ]
  ],
  [
    [
      380,
      380
    ],
    "valid"
  ],
  [
    [
      381,
      381
    ],
    "mapped",
    [
      382
    ]
  ],
  [
    [
      382,
      382
    ],
    "valid"
  ],
  [
    [
      383,
      383
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      384,
      384
    ],
    "valid"
  ],
  [
    [
      385,
      385
    ],
    "mapped",
    [
      595
    ]
  ],
  [
    [
      386,
      386
    ],
    "mapped",
    [
      387
    ]
  ],
  [
    [
      387,
      387
    ],
    "valid"
  ],
  [
    [
      388,
      388
    ],
    "mapped",
    [
      389
    ]
  ],
  [
    [
      389,
      389
    ],
    "valid"
  ],
  [
    [
      390,
      390
    ],
    "mapped",
    [
      596
    ]
  ],
  [
    [
      391,
      391
    ],
    "mapped",
    [
      392
    ]
  ],
  [
    [
      392,
      392
    ],
    "valid"
  ],
  [
    [
      393,
      393
    ],
    "mapped",
    [
      598
    ]
  ],
  [
    [
      394,
      394
    ],
    "mapped",
    [
      599
    ]
  ],
  [
    [
      395,
      395
    ],
    "mapped",
    [
      396
    ]
  ],
  [
    [
      396,
      397
    ],
    "valid"
  ],
  [
    [
      398,
      398
    ],
    "mapped",
    [
      477
    ]
  ],
  [
    [
      399,
      399
    ],
    "mapped",
    [
      601
    ]
  ],
  [
    [
      400,
      400
    ],
    "mapped",
    [
      603
    ]
  ],
  [
    [
      401,
      401
    ],
    "mapped",
    [
      402
    ]
  ],
  [
    [
      402,
      402
    ],
    "valid"
  ],
  [
    [
      403,
      403
    ],
    "mapped",
    [
      608
    ]
  ],
  [
    [
      404,
      404
    ],
    "mapped",
    [
      611
    ]
  ],
  [
    [
      405,
      405
    ],
    "valid"
  ],
  [
    [
      406,
      406
    ],
    "mapped",
    [
      617
    ]
  ],
  [
    [
      407,
      407
    ],
    "mapped",
    [
      616
    ]
  ],
  [
    [
      408,
      408
    ],
    "mapped",
    [
      409
    ]
  ],
  [
    [
      409,
      411
    ],
    "valid"
  ],
  [
    [
      412,
      412
    ],
    "mapped",
    [
      623
    ]
  ],
  [
    [
      413,
      413
    ],
    "mapped",
    [
      626
    ]
  ],
  [
    [
      414,
      414
    ],
    "valid"
  ],
  [
    [
      415,
      415
    ],
    "mapped",
    [
      629
    ]
  ],
  [
    [
      416,
      416
    ],
    "mapped",
    [
      417
    ]
  ],
  [
    [
      417,
      417
    ],
    "valid"
  ],
  [
    [
      418,
      418
    ],
    "mapped",
    [
      419
    ]
  ],
  [
    [
      419,
      419
    ],
    "valid"
  ],
  [
    [
      420,
      420
    ],
    "mapped",
    [
      421
    ]
  ],
  [
    [
      421,
      421
    ],
    "valid"
  ],
  [
    [
      422,
      422
    ],
    "mapped",
    [
      640
    ]
  ],
  [
    [
      423,
      423
    ],
    "mapped",
    [
      424
    ]
  ],
  [
    [
      424,
      424
    ],
    "valid"
  ],
  [
    [
      425,
      425
    ],
    "mapped",
    [
      643
    ]
  ],
  [
    [
      426,
      427
    ],
    "valid"
  ],
  [
    [
      428,
      428
    ],
    "mapped",
    [
      429
    ]
  ],
  [
    [
      429,
      429
    ],
    "valid"
  ],
  [
    [
      430,
      430
    ],
    "mapped",
    [
      648
    ]
  ],
  [
    [
      431,
      431
    ],
    "mapped",
    [
      432
    ]
  ],
  [
    [
      432,
      432
    ],
    "valid"
  ],
  [
    [
      433,
      433
    ],
    "mapped",
    [
      650
    ]
  ],
  [
    [
      434,
      434
    ],
    "mapped",
    [
      651
    ]
  ],
  [
    [
      435,
      435
    ],
    "mapped",
    [
      436
    ]
  ],
  [
    [
      436,
      436
    ],
    "valid"
  ],
  [
    [
      437,
      437
    ],
    "mapped",
    [
      438
    ]
  ],
  [
    [
      438,
      438
    ],
    "valid"
  ],
  [
    [
      439,
      439
    ],
    "mapped",
    [
      658
    ]
  ],
  [
    [
      440,
      440
    ],
    "mapped",
    [
      441
    ]
  ],
  [
    [
      441,
      443
    ],
    "valid"
  ],
  [
    [
      444,
      444
    ],
    "mapped",
    [
      445
    ]
  ],
  [
    [
      445,
      451
    ],
    "valid"
  ],
  [
    [
      452,
      454
    ],
    "mapped",
    [
      100,
      382
    ]
  ],
  [
    [
      455,
      457
    ],
    "mapped",
    [
      108,
      106
    ]
  ],
  [
    [
      458,
      460
    ],
    "mapped",
    [
      110,
      106
    ]
  ],
  [
    [
      461,
      461
    ],
    "mapped",
    [
      462
    ]
  ],
  [
    [
      462,
      462
    ],
    "valid"
  ],
  [
    [
      463,
      463
    ],
    "mapped",
    [
      464
    ]
  ],
  [
    [
      464,
      464
    ],
    "valid"
  ],
  [
    [
      465,
      465
    ],
    "mapped",
    [
      466
    ]
  ],
  [
    [
      466,
      466
    ],
    "valid"
  ],
  [
    [
      467,
      467
    ],
    "mapped",
    [
      468
    ]
  ],
  [
    [
      468,
      468
    ],
    "valid"
  ],
  [
    [
      469,
      469
    ],
    "mapped",
    [
      470
    ]
  ],
  [
    [
      470,
      470
    ],
    "valid"
  ],
  [
    [
      471,
      471
    ],
    "mapped",
    [
      472
    ]
  ],
  [
    [
      472,
      472
    ],
    "valid"
  ],
  [
    [
      473,
      473
    ],
    "mapped",
    [
      474
    ]
  ],
  [
    [
      474,
      474
    ],
    "valid"
  ],
  [
    [
      475,
      475
    ],
    "mapped",
    [
      476
    ]
  ],
  [
    [
      476,
      477
    ],
    "valid"
  ],
  [
    [
      478,
      478
    ],
    "mapped",
    [
      479
    ]
  ],
  [
    [
      479,
      479
    ],
    "valid"
  ],
  [
    [
      480,
      480
    ],
    "mapped",
    [
      481
    ]
  ],
  [
    [
      481,
      481
    ],
    "valid"
  ],
  [
    [
      482,
      482
    ],
    "mapped",
    [
      483
    ]
  ],
  [
    [
      483,
      483
    ],
    "valid"
  ],
  [
    [
      484,
      484
    ],
    "mapped",
    [
      485
    ]
  ],
  [
    [
      485,
      485
    ],
    "valid"
  ],
  [
    [
      486,
      486
    ],
    "mapped",
    [
      487
    ]
  ],
  [
    [
      487,
      487
    ],
    "valid"
  ],
  [
    [
      488,
      488
    ],
    "mapped",
    [
      489
    ]
  ],
  [
    [
      489,
      489
    ],
    "valid"
  ],
  [
    [
      490,
      490
    ],
    "mapped",
    [
      491
    ]
  ],
  [
    [
      491,
      491
    ],
    "valid"
  ],
  [
    [
      492,
      492
    ],
    "mapped",
    [
      493
    ]
  ],
  [
    [
      493,
      493
    ],
    "valid"
  ],
  [
    [
      494,
      494
    ],
    "mapped",
    [
      495
    ]
  ],
  [
    [
      495,
      496
    ],
    "valid"
  ],
  [
    [
      497,
      499
    ],
    "mapped",
    [
      100,
      122
    ]
  ],
  [
    [
      500,
      500
    ],
    "mapped",
    [
      501
    ]
  ],
  [
    [
      501,
      501
    ],
    "valid"
  ],
  [
    [
      502,
      502
    ],
    "mapped",
    [
      405
    ]
  ],
  [
    [
      503,
      503
    ],
    "mapped",
    [
      447
    ]
  ],
  [
    [
      504,
      504
    ],
    "mapped",
    [
      505
    ]
  ],
  [
    [
      505,
      505
    ],
    "valid"
  ],
  [
    [
      506,
      506
    ],
    "mapped",
    [
      507
    ]
  ],
  [
    [
      507,
      507
    ],
    "valid"
  ],
  [
    [
      508,
      508
    ],
    "mapped",
    [
      509
    ]
  ],
  [
    [
      509,
      509
    ],
    "valid"
  ],
  [
    [
      510,
      510
    ],
    "mapped",
    [
      511
    ]
  ],
  [
    [
      511,
      511
    ],
    "valid"
  ],
  [
    [
      512,
      512
    ],
    "mapped",
    [
      513
    ]
  ],
  [
    [
      513,
      513
    ],
    "valid"
  ],
  [
    [
      514,
      514
    ],
    "mapped",
    [
      515
    ]
  ],
  [
    [
      515,
      515
    ],
    "valid"
  ],
  [
    [
      516,
      516
    ],
    "mapped",
    [
      517
    ]
  ],
  [
    [
      517,
      517
    ],
    "valid"
  ],
  [
    [
      518,
      518
    ],
    "mapped",
    [
      519
    ]
  ],
  [
    [
      519,
      519
    ],
    "valid"
  ],
  [
    [
      520,
      520
    ],
    "mapped",
    [
      521
    ]
  ],
  [
    [
      521,
      521
    ],
    "valid"
  ],
  [
    [
      522,
      522
    ],
    "mapped",
    [
      523
    ]
  ],
  [
    [
      523,
      523
    ],
    "valid"
  ],
  [
    [
      524,
      524
    ],
    "mapped",
    [
      525
    ]
  ],
  [
    [
      525,
      525
    ],
    "valid"
  ],
  [
    [
      526,
      526
    ],
    "mapped",
    [
      527
    ]
  ],
  [
    [
      527,
      527
    ],
    "valid"
  ],
  [
    [
      528,
      528
    ],
    "mapped",
    [
      529
    ]
  ],
  [
    [
      529,
      529
    ],
    "valid"
  ],
  [
    [
      530,
      530
    ],
    "mapped",
    [
      531
    ]
  ],
  [
    [
      531,
      531
    ],
    "valid"
  ],
  [
    [
      532,
      532
    ],
    "mapped",
    [
      533
    ]
  ],
  [
    [
      533,
      533
    ],
    "valid"
  ],
  [
    [
      534,
      534
    ],
    "mapped",
    [
      535
    ]
  ],
  [
    [
      535,
      535
    ],
    "valid"
  ],
  [
    [
      536,
      536
    ],
    "mapped",
    [
      537
    ]
  ],
  [
    [
      537,
      537
    ],
    "valid"
  ],
  [
    [
      538,
      538
    ],
    "mapped",
    [
      539
    ]
  ],
  [
    [
      539,
      539
    ],
    "valid"
  ],
  [
    [
      540,
      540
    ],
    "mapped",
    [
      541
    ]
  ],
  [
    [
      541,
      541
    ],
    "valid"
  ],
  [
    [
      542,
      542
    ],
    "mapped",
    [
      543
    ]
  ],
  [
    [
      543,
      543
    ],
    "valid"
  ],
  [
    [
      544,
      544
    ],
    "mapped",
    [
      414
    ]
  ],
  [
    [
      545,
      545
    ],
    "valid"
  ],
  [
    [
      546,
      546
    ],
    "mapped",
    [
      547
    ]
  ],
  [
    [
      547,
      547
    ],
    "valid"
  ],
  [
    [
      548,
      548
    ],
    "mapped",
    [
      549
    ]
  ],
  [
    [
      549,
      549
    ],
    "valid"
  ],
  [
    [
      550,
      550
    ],
    "mapped",
    [
      551
    ]
  ],
  [
    [
      551,
      551
    ],
    "valid"
  ],
  [
    [
      552,
      552
    ],
    "mapped",
    [
      553
    ]
  ],
  [
    [
      553,
      553
    ],
    "valid"
  ],
  [
    [
      554,
      554
    ],
    "mapped",
    [
      555
    ]
  ],
  [
    [
      555,
      555
    ],
    "valid"
  ],
  [
    [
      556,
      556
    ],
    "mapped",
    [
      557
    ]
  ],
  [
    [
      557,
      557
    ],
    "valid"
  ],
  [
    [
      558,
      558
    ],
    "mapped",
    [
      559
    ]
  ],
  [
    [
      559,
      559
    ],
    "valid"
  ],
  [
    [
      560,
      560
    ],
    "mapped",
    [
      561
    ]
  ],
  [
    [
      561,
      561
    ],
    "valid"
  ],
  [
    [
      562,
      562
    ],
    "mapped",
    [
      563
    ]
  ],
  [
    [
      563,
      563
    ],
    "valid"
  ],
  [
    [
      564,
      566
    ],
    "valid"
  ],
  [
    [
      567,
      569
    ],
    "valid"
  ],
  [
    [
      570,
      570
    ],
    "mapped",
    [
      11365
    ]
  ],
  [
    [
      571,
      571
    ],
    "mapped",
    [
      572
    ]
  ],
  [
    [
      572,
      572
    ],
    "valid"
  ],
  [
    [
      573,
      573
    ],
    "mapped",
    [
      410
    ]
  ],
  [
    [
      574,
      574
    ],
    "mapped",
    [
      11366
    ]
  ],
  [
    [
      575,
      576
    ],
    "valid"
  ],
  [
    [
      577,
      577
    ],
    "mapped",
    [
      578
    ]
  ],
  [
    [
      578,
      578
    ],
    "valid"
  ],
  [
    [
      579,
      579
    ],
    "mapped",
    [
      384
    ]
  ],
  [
    [
      580,
      580
    ],
    "mapped",
    [
      649
    ]
  ],
  [
    [
      581,
      581
    ],
    "mapped",
    [
      652
    ]
  ],
  [
    [
      582,
      582
    ],
    "mapped",
    [
      583
    ]
  ],
  [
    [
      583,
      583
    ],
    "valid"
  ],
  [
    [
      584,
      584
    ],
    "mapped",
    [
      585
    ]
  ],
  [
    [
      585,
      585
    ],
    "valid"
  ],
  [
    [
      586,
      586
    ],
    "mapped",
    [
      587
    ]
  ],
  [
    [
      587,
      587
    ],
    "valid"
  ],
  [
    [
      588,
      588
    ],
    "mapped",
    [
      589
    ]
  ],
  [
    [
      589,
      589
    ],
    "valid"
  ],
  [
    [
      590,
      590
    ],
    "mapped",
    [
      591
    ]
  ],
  [
    [
      591,
      591
    ],
    "valid"
  ],
  [
    [
      592,
      680
    ],
    "valid"
  ],
  [
    [
      681,
      685
    ],
    "valid"
  ],
  [
    [
      686,
      687
    ],
    "valid"
  ],
  [
    [
      688,
      688
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      689,
      689
    ],
    "mapped",
    [
      614
    ]
  ],
  [
    [
      690,
      690
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      691,
      691
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      692,
      692
    ],
    "mapped",
    [
      633
    ]
  ],
  [
    [
      693,
      693
    ],
    "mapped",
    [
      635
    ]
  ],
  [
    [
      694,
      694
    ],
    "mapped",
    [
      641
    ]
  ],
  [
    [
      695,
      695
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      696,
      696
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      697,
      705
    ],
    "valid"
  ],
  [
    [
      706,
      709
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      710,
      721
    ],
    "valid"
  ],
  [
    [
      722,
      727
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      728,
      728
    ],
    "disallowed_STD3_mapped",
    [
      32,
      774
    ]
  ],
  [
    [
      729,
      729
    ],
    "disallowed_STD3_mapped",
    [
      32,
      775
    ]
  ],
  [
    [
      730,
      730
    ],
    "disallowed_STD3_mapped",
    [
      32,
      778
    ]
  ],
  [
    [
      731,
      731
    ],
    "disallowed_STD3_mapped",
    [
      32,
      808
    ]
  ],
  [
    [
      732,
      732
    ],
    "disallowed_STD3_mapped",
    [
      32,
      771
    ]
  ],
  [
    [
      733,
      733
    ],
    "disallowed_STD3_mapped",
    [
      32,
      779
    ]
  ],
  [
    [
      734,
      734
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      735,
      735
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      736,
      736
    ],
    "mapped",
    [
      611
    ]
  ],
  [
    [
      737,
      737
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      738,
      738
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      739,
      739
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      740,
      740
    ],
    "mapped",
    [
      661
    ]
  ],
  [
    [
      741,
      745
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      746,
      747
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      748,
      748
    ],
    "valid"
  ],
  [
    [
      749,
      749
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      750,
      750
    ],
    "valid"
  ],
  [
    [
      751,
      767
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      768,
      831
    ],
    "valid"
  ],
  [
    [
      832,
      832
    ],
    "mapped",
    [
      768
    ]
  ],
  [
    [
      833,
      833
    ],
    "mapped",
    [
      769
    ]
  ],
  [
    [
      834,
      834
    ],
    "valid"
  ],
  [
    [
      835,
      835
    ],
    "mapped",
    [
      787
    ]
  ],
  [
    [
      836,
      836
    ],
    "mapped",
    [
      776,
      769
    ]
  ],
  [
    [
      837,
      837
    ],
    "mapped",
    [
      953
    ]
  ],
  [
    [
      838,
      846
    ],
    "valid"
  ],
  [
    [
      847,
      847
    ],
    "ignored"
  ],
  [
    [
      848,
      855
    ],
    "valid"
  ],
  [
    [
      856,
      860
    ],
    "valid"
  ],
  [
    [
      861,
      863
    ],
    "valid"
  ],
  [
    [
      864,
      865
    ],
    "valid"
  ],
  [
    [
      866,
      866
    ],
    "valid"
  ],
  [
    [
      867,
      879
    ],
    "valid"
  ],
  [
    [
      880,
      880
    ],
    "mapped",
    [
      881
    ]
  ],
  [
    [
      881,
      881
    ],
    "valid"
  ],
  [
    [
      882,
      882
    ],
    "mapped",
    [
      883
    ]
  ],
  [
    [
      883,
      883
    ],
    "valid"
  ],
  [
    [
      884,
      884
    ],
    "mapped",
    [
      697
    ]
  ],
  [
    [
      885,
      885
    ],
    "valid"
  ],
  [
    [
      886,
      886
    ],
    "mapped",
    [
      887
    ]
  ],
  [
    [
      887,
      887
    ],
    "valid"
  ],
  [
    [
      888,
      889
    ],
    "disallowed"
  ],
  [
    [
      890,
      890
    ],
    "disallowed_STD3_mapped",
    [
      32,
      953
    ]
  ],
  [
    [
      891,
      893
    ],
    "valid"
  ],
  [
    [
      894,
      894
    ],
    "disallowed_STD3_mapped",
    [
      59
    ]
  ],
  [
    [
      895,
      895
    ],
    "mapped",
    [
      1011
    ]
  ],
  [
    [
      896,
      899
    ],
    "disallowed"
  ],
  [
    [
      900,
      900
    ],
    "disallowed_STD3_mapped",
    [
      32,
      769
    ]
  ],
  [
    [
      901,
      901
    ],
    "disallowed_STD3_mapped",
    [
      32,
      776,
      769
    ]
  ],
  [
    [
      902,
      902
    ],
    "mapped",
    [
      940
    ]
  ],
  [
    [
      903,
      903
    ],
    "mapped",
    [
      183
    ]
  ],
  [
    [
      904,
      904
    ],
    "mapped",
    [
      941
    ]
  ],
  [
    [
      905,
      905
    ],
    "mapped",
    [
      942
    ]
  ],
  [
    [
      906,
      906
    ],
    "mapped",
    [
      943
    ]
  ],
  [
    [
      907,
      907
    ],
    "disallowed"
  ],
  [
    [
      908,
      908
    ],
    "mapped",
    [
      972
    ]
  ],
  [
    [
      909,
      909
    ],
    "disallowed"
  ],
  [
    [
      910,
      910
    ],
    "mapped",
    [
      973
    ]
  ],
  [
    [
      911,
      911
    ],
    "mapped",
    [
      974
    ]
  ],
  [
    [
      912,
      912
    ],
    "valid"
  ],
  [
    [
      913,
      913
    ],
    "mapped",
    [
      945
    ]
  ],
  [
    [
      914,
      914
    ],
    "mapped",
    [
      946
    ]
  ],
  [
    [
      915,
      915
    ],
    "mapped",
    [
      947
    ]
  ],
  [
    [
      916,
      916
    ],
    "mapped",
    [
      948
    ]
  ],
  [
    [
      917,
      917
    ],
    "mapped",
    [
      949
    ]
  ],
  [
    [
      918,
      918
    ],
    "mapped",
    [
      950
    ]
  ],
  [
    [
      919,
      919
    ],
    "mapped",
    [
      951
    ]
  ],
  [
    [
      920,
      920
    ],
    "mapped",
    [
      952
    ]
  ],
  [
    [
      921,
      921
    ],
    "mapped",
    [
      953
    ]
  ],
  [
    [
      922,
      922
    ],
    "mapped",
    [
      954
    ]
  ],
  [
    [
      923,
      923
    ],
    "mapped",
    [
      955
    ]
  ],
  [
    [
      924,
      924
    ],
    "mapped",
    [
      956
    ]
  ],
  [
    [
      925,
      925
    ],
    "mapped",
    [
      957
    ]
  ],
  [
    [
      926,
      926
    ],
    "mapped",
    [
      958
    ]
  ],
  [
    [
      927,
      927
    ],
    "mapped",
    [
      959
    ]
  ],
  [
    [
      928,
      928
    ],
    "mapped",
    [
      960
    ]
  ],
  [
    [
      929,
      929
    ],
    "mapped",
    [
      961
    ]
  ],
  [
    [
      930,
      930
    ],
    "disallowed"
  ],
  [
    [
      931,
      931
    ],
    "mapped",
    [
      963
    ]
  ],
  [
    [
      932,
      932
    ],
    "mapped",
    [
      964
    ]
  ],
  [
    [
      933,
      933
    ],
    "mapped",
    [
      965
    ]
  ],
  [
    [
      934,
      934
    ],
    "mapped",
    [
      966
    ]
  ],
  [
    [
      935,
      935
    ],
    "mapped",
    [
      967
    ]
  ],
  [
    [
      936,
      936
    ],
    "mapped",
    [
      968
    ]
  ],
  [
    [
      937,
      937
    ],
    "mapped",
    [
      969
    ]
  ],
  [
    [
      938,
      938
    ],
    "mapped",
    [
      970
    ]
  ],
  [
    [
      939,
      939
    ],
    "mapped",
    [
      971
    ]
  ],
  [
    [
      940,
      961
    ],
    "valid"
  ],
  [
    [
      962,
      962
    ],
    "deviation",
    [
      963
    ]
  ],
  [
    [
      963,
      974
    ],
    "valid"
  ],
  [
    [
      975,
      975
    ],
    "mapped",
    [
      983
    ]
  ],
  [
    [
      976,
      976
    ],
    "mapped",
    [
      946
    ]
  ],
  [
    [
      977,
      977
    ],
    "mapped",
    [
      952
    ]
  ],
  [
    [
      978,
      978
    ],
    "mapped",
    [
      965
    ]
  ],
  [
    [
      979,
      979
    ],
    "mapped",
    [
      973
    ]
  ],
  [
    [
      980,
      980
    ],
    "mapped",
    [
      971
    ]
  ],
  [
    [
      981,
      981
    ],
    "mapped",
    [
      966
    ]
  ],
  [
    [
      982,
      982
    ],
    "mapped",
    [
      960
    ]
  ],
  [
    [
      983,
      983
    ],
    "valid"
  ],
  [
    [
      984,
      984
    ],
    "mapped",
    [
      985
    ]
  ],
  [
    [
      985,
      985
    ],
    "valid"
  ],
  [
    [
      986,
      986
    ],
    "mapped",
    [
      987
    ]
  ],
  [
    [
      987,
      987
    ],
    "valid"
  ],
  [
    [
      988,
      988
    ],
    "mapped",
    [
      989
    ]
  ],
  [
    [
      989,
      989
    ],
    "valid"
  ],
  [
    [
      990,
      990
    ],
    "mapped",
    [
      991
    ]
  ],
  [
    [
      991,
      991
    ],
    "valid"
  ],
  [
    [
      992,
      992
    ],
    "mapped",
    [
      993
    ]
  ],
  [
    [
      993,
      993
    ],
    "valid"
  ],
  [
    [
      994,
      994
    ],
    "mapped",
    [
      995
    ]
  ],
  [
    [
      995,
      995
    ],
    "valid"
  ],
  [
    [
      996,
      996
    ],
    "mapped",
    [
      997
    ]
  ],
  [
    [
      997,
      997
    ],
    "valid"
  ],
  [
    [
      998,
      998
    ],
    "mapped",
    [
      999
    ]
  ],
  [
    [
      999,
      999
    ],
    "valid"
  ],
  [
    [
      1e3,
      1e3
    ],
    "mapped",
    [
      1001
    ]
  ],
  [
    [
      1001,
      1001
    ],
    "valid"
  ],
  [
    [
      1002,
      1002
    ],
    "mapped",
    [
      1003
    ]
  ],
  [
    [
      1003,
      1003
    ],
    "valid"
  ],
  [
    [
      1004,
      1004
    ],
    "mapped",
    [
      1005
    ]
  ],
  [
    [
      1005,
      1005
    ],
    "valid"
  ],
  [
    [
      1006,
      1006
    ],
    "mapped",
    [
      1007
    ]
  ],
  [
    [
      1007,
      1007
    ],
    "valid"
  ],
  [
    [
      1008,
      1008
    ],
    "mapped",
    [
      954
    ]
  ],
  [
    [
      1009,
      1009
    ],
    "mapped",
    [
      961
    ]
  ],
  [
    [
      1010,
      1010
    ],
    "mapped",
    [
      963
    ]
  ],
  [
    [
      1011,
      1011
    ],
    "valid"
  ],
  [
    [
      1012,
      1012
    ],
    "mapped",
    [
      952
    ]
  ],
  [
    [
      1013,
      1013
    ],
    "mapped",
    [
      949
    ]
  ],
  [
    [
      1014,
      1014
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      1015,
      1015
    ],
    "mapped",
    [
      1016
    ]
  ],
  [
    [
      1016,
      1016
    ],
    "valid"
  ],
  [
    [
      1017,
      1017
    ],
    "mapped",
    [
      963
    ]
  ],
  [
    [
      1018,
      1018
    ],
    "mapped",
    [
      1019
    ]
  ],
  [
    [
      1019,
      1019
    ],
    "valid"
  ],
  [
    [
      1020,
      1020
    ],
    "valid"
  ],
  [
    [
      1021,
      1021
    ],
    "mapped",
    [
      891
    ]
  ],
  [
    [
      1022,
      1022
    ],
    "mapped",
    [
      892
    ]
  ],
  [
    [
      1023,
      1023
    ],
    "mapped",
    [
      893
    ]
  ],
  [
    [
      1024,
      1024
    ],
    "mapped",
    [
      1104
    ]
  ],
  [
    [
      1025,
      1025
    ],
    "mapped",
    [
      1105
    ]
  ],
  [
    [
      1026,
      1026
    ],
    "mapped",
    [
      1106
    ]
  ],
  [
    [
      1027,
      1027
    ],
    "mapped",
    [
      1107
    ]
  ],
  [
    [
      1028,
      1028
    ],
    "mapped",
    [
      1108
    ]
  ],
  [
    [
      1029,
      1029
    ],
    "mapped",
    [
      1109
    ]
  ],
  [
    [
      1030,
      1030
    ],
    "mapped",
    [
      1110
    ]
  ],
  [
    [
      1031,
      1031
    ],
    "mapped",
    [
      1111
    ]
  ],
  [
    [
      1032,
      1032
    ],
    "mapped",
    [
      1112
    ]
  ],
  [
    [
      1033,
      1033
    ],
    "mapped",
    [
      1113
    ]
  ],
  [
    [
      1034,
      1034
    ],
    "mapped",
    [
      1114
    ]
  ],
  [
    [
      1035,
      1035
    ],
    "mapped",
    [
      1115
    ]
  ],
  [
    [
      1036,
      1036
    ],
    "mapped",
    [
      1116
    ]
  ],
  [
    [
      1037,
      1037
    ],
    "mapped",
    [
      1117
    ]
  ],
  [
    [
      1038,
      1038
    ],
    "mapped",
    [
      1118
    ]
  ],
  [
    [
      1039,
      1039
    ],
    "mapped",
    [
      1119
    ]
  ],
  [
    [
      1040,
      1040
    ],
    "mapped",
    [
      1072
    ]
  ],
  [
    [
      1041,
      1041
    ],
    "mapped",
    [
      1073
    ]
  ],
  [
    [
      1042,
      1042
    ],
    "mapped",
    [
      1074
    ]
  ],
  [
    [
      1043,
      1043
    ],
    "mapped",
    [
      1075
    ]
  ],
  [
    [
      1044,
      1044
    ],
    "mapped",
    [
      1076
    ]
  ],
  [
    [
      1045,
      1045
    ],
    "mapped",
    [
      1077
    ]
  ],
  [
    [
      1046,
      1046
    ],
    "mapped",
    [
      1078
    ]
  ],
  [
    [
      1047,
      1047
    ],
    "mapped",
    [
      1079
    ]
  ],
  [
    [
      1048,
      1048
    ],
    "mapped",
    [
      1080
    ]
  ],
  [
    [
      1049,
      1049
    ],
    "mapped",
    [
      1081
    ]
  ],
  [
    [
      1050,
      1050
    ],
    "mapped",
    [
      1082
    ]
  ],
  [
    [
      1051,
      1051
    ],
    "mapped",
    [
      1083
    ]
  ],
  [
    [
      1052,
      1052
    ],
    "mapped",
    [
      1084
    ]
  ],
  [
    [
      1053,
      1053
    ],
    "mapped",
    [
      1085
    ]
  ],
  [
    [
      1054,
      1054
    ],
    "mapped",
    [
      1086
    ]
  ],
  [
    [
      1055,
      1055
    ],
    "mapped",
    [
      1087
    ]
  ],
  [
    [
      1056,
      1056
    ],
    "mapped",
    [
      1088
    ]
  ],
  [
    [
      1057,
      1057
    ],
    "mapped",
    [
      1089
    ]
  ],
  [
    [
      1058,
      1058
    ],
    "mapped",
    [
      1090
    ]
  ],
  [
    [
      1059,
      1059
    ],
    "mapped",
    [
      1091
    ]
  ],
  [
    [
      1060,
      1060
    ],
    "mapped",
    [
      1092
    ]
  ],
  [
    [
      1061,
      1061
    ],
    "mapped",
    [
      1093
    ]
  ],
  [
    [
      1062,
      1062
    ],
    "mapped",
    [
      1094
    ]
  ],
  [
    [
      1063,
      1063
    ],
    "mapped",
    [
      1095
    ]
  ],
  [
    [
      1064,
      1064
    ],
    "mapped",
    [
      1096
    ]
  ],
  [
    [
      1065,
      1065
    ],
    "mapped",
    [
      1097
    ]
  ],
  [
    [
      1066,
      1066
    ],
    "mapped",
    [
      1098
    ]
  ],
  [
    [
      1067,
      1067
    ],
    "mapped",
    [
      1099
    ]
  ],
  [
    [
      1068,
      1068
    ],
    "mapped",
    [
      1100
    ]
  ],
  [
    [
      1069,
      1069
    ],
    "mapped",
    [
      1101
    ]
  ],
  [
    [
      1070,
      1070
    ],
    "mapped",
    [
      1102
    ]
  ],
  [
    [
      1071,
      1071
    ],
    "mapped",
    [
      1103
    ]
  ],
  [
    [
      1072,
      1103
    ],
    "valid"
  ],
  [
    [
      1104,
      1104
    ],
    "valid"
  ],
  [
    [
      1105,
      1116
    ],
    "valid"
  ],
  [
    [
      1117,
      1117
    ],
    "valid"
  ],
  [
    [
      1118,
      1119
    ],
    "valid"
  ],
  [
    [
      1120,
      1120
    ],
    "mapped",
    [
      1121
    ]
  ],
  [
    [
      1121,
      1121
    ],
    "valid"
  ],
  [
    [
      1122,
      1122
    ],
    "mapped",
    [
      1123
    ]
  ],
  [
    [
      1123,
      1123
    ],
    "valid"
  ],
  [
    [
      1124,
      1124
    ],
    "mapped",
    [
      1125
    ]
  ],
  [
    [
      1125,
      1125
    ],
    "valid"
  ],
  [
    [
      1126,
      1126
    ],
    "mapped",
    [
      1127
    ]
  ],
  [
    [
      1127,
      1127
    ],
    "valid"
  ],
  [
    [
      1128,
      1128
    ],
    "mapped",
    [
      1129
    ]
  ],
  [
    [
      1129,
      1129
    ],
    "valid"
  ],
  [
    [
      1130,
      1130
    ],
    "mapped",
    [
      1131
    ]
  ],
  [
    [
      1131,
      1131
    ],
    "valid"
  ],
  [
    [
      1132,
      1132
    ],
    "mapped",
    [
      1133
    ]
  ],
  [
    [
      1133,
      1133
    ],
    "valid"
  ],
  [
    [
      1134,
      1134
    ],
    "mapped",
    [
      1135
    ]
  ],
  [
    [
      1135,
      1135
    ],
    "valid"
  ],
  [
    [
      1136,
      1136
    ],
    "mapped",
    [
      1137
    ]
  ],
  [
    [
      1137,
      1137
    ],
    "valid"
  ],
  [
    [
      1138,
      1138
    ],
    "mapped",
    [
      1139
    ]
  ],
  [
    [
      1139,
      1139
    ],
    "valid"
  ],
  [
    [
      1140,
      1140
    ],
    "mapped",
    [
      1141
    ]
  ],
  [
    [
      1141,
      1141
    ],
    "valid"
  ],
  [
    [
      1142,
      1142
    ],
    "mapped",
    [
      1143
    ]
  ],
  [
    [
      1143,
      1143
    ],
    "valid"
  ],
  [
    [
      1144,
      1144
    ],
    "mapped",
    [
      1145
    ]
  ],
  [
    [
      1145,
      1145
    ],
    "valid"
  ],
  [
    [
      1146,
      1146
    ],
    "mapped",
    [
      1147
    ]
  ],
  [
    [
      1147,
      1147
    ],
    "valid"
  ],
  [
    [
      1148,
      1148
    ],
    "mapped",
    [
      1149
    ]
  ],
  [
    [
      1149,
      1149
    ],
    "valid"
  ],
  [
    [
      1150,
      1150
    ],
    "mapped",
    [
      1151
    ]
  ],
  [
    [
      1151,
      1151
    ],
    "valid"
  ],
  [
    [
      1152,
      1152
    ],
    "mapped",
    [
      1153
    ]
  ],
  [
    [
      1153,
      1153
    ],
    "valid"
  ],
  [
    [
      1154,
      1154
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      1155,
      1158
    ],
    "valid"
  ],
  [
    [
      1159,
      1159
    ],
    "valid"
  ],
  [
    [
      1160,
      1161
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      1162,
      1162
    ],
    "mapped",
    [
      1163
    ]
  ],
  [
    [
      1163,
      1163
    ],
    "valid"
  ],
  [
    [
      1164,
      1164
    ],
    "mapped",
    [
      1165
    ]
  ],
  [
    [
      1165,
      1165
    ],
    "valid"
  ],
  [
    [
      1166,
      1166
    ],
    "mapped",
    [
      1167
    ]
  ],
  [
    [
      1167,
      1167
    ],
    "valid"
  ],
  [
    [
      1168,
      1168
    ],
    "mapped",
    [
      1169
    ]
  ],
  [
    [
      1169,
      1169
    ],
    "valid"
  ],
  [
    [
      1170,
      1170
    ],
    "mapped",
    [
      1171
    ]
  ],
  [
    [
      1171,
      1171
    ],
    "valid"
  ],
  [
    [
      1172,
      1172
    ],
    "mapped",
    [
      1173
    ]
  ],
  [
    [
      1173,
      1173
    ],
    "valid"
  ],
  [
    [
      1174,
      1174
    ],
    "mapped",
    [
      1175
    ]
  ],
  [
    [
      1175,
      1175
    ],
    "valid"
  ],
  [
    [
      1176,
      1176
    ],
    "mapped",
    [
      1177
    ]
  ],
  [
    [
      1177,
      1177
    ],
    "valid"
  ],
  [
    [
      1178,
      1178
    ],
    "mapped",
    [
      1179
    ]
  ],
  [
    [
      1179,
      1179
    ],
    "valid"
  ],
  [
    [
      1180,
      1180
    ],
    "mapped",
    [
      1181
    ]
  ],
  [
    [
      1181,
      1181
    ],
    "valid"
  ],
  [
    [
      1182,
      1182
    ],
    "mapped",
    [
      1183
    ]
  ],
  [
    [
      1183,
      1183
    ],
    "valid"
  ],
  [
    [
      1184,
      1184
    ],
    "mapped",
    [
      1185
    ]
  ],
  [
    [
      1185,
      1185
    ],
    "valid"
  ],
  [
    [
      1186,
      1186
    ],
    "mapped",
    [
      1187
    ]
  ],
  [
    [
      1187,
      1187
    ],
    "valid"
  ],
  [
    [
      1188,
      1188
    ],
    "mapped",
    [
      1189
    ]
  ],
  [
    [
      1189,
      1189
    ],
    "valid"
  ],
  [
    [
      1190,
      1190
    ],
    "mapped",
    [
      1191
    ]
  ],
  [
    [
      1191,
      1191
    ],
    "valid"
  ],
  [
    [
      1192,
      1192
    ],
    "mapped",
    [
      1193
    ]
  ],
  [
    [
      1193,
      1193
    ],
    "valid"
  ],
  [
    [
      1194,
      1194
    ],
    "mapped",
    [
      1195
    ]
  ],
  [
    [
      1195,
      1195
    ],
    "valid"
  ],
  [
    [
      1196,
      1196
    ],
    "mapped",
    [
      1197
    ]
  ],
  [
    [
      1197,
      1197
    ],
    "valid"
  ],
  [
    [
      1198,
      1198
    ],
    "mapped",
    [
      1199
    ]
  ],
  [
    [
      1199,
      1199
    ],
    "valid"
  ],
  [
    [
      1200,
      1200
    ],
    "mapped",
    [
      1201
    ]
  ],
  [
    [
      1201,
      1201
    ],
    "valid"
  ],
  [
    [
      1202,
      1202
    ],
    "mapped",
    [
      1203
    ]
  ],
  [
    [
      1203,
      1203
    ],
    "valid"
  ],
  [
    [
      1204,
      1204
    ],
    "mapped",
    [
      1205
    ]
  ],
  [
    [
      1205,
      1205
    ],
    "valid"
  ],
  [
    [
      1206,
      1206
    ],
    "mapped",
    [
      1207
    ]
  ],
  [
    [
      1207,
      1207
    ],
    "valid"
  ],
  [
    [
      1208,
      1208
    ],
    "mapped",
    [
      1209
    ]
  ],
  [
    [
      1209,
      1209
    ],
    "valid"
  ],
  [
    [
      1210,
      1210
    ],
    "mapped",
    [
      1211
    ]
  ],
  [
    [
      1211,
      1211
    ],
    "valid"
  ],
  [
    [
      1212,
      1212
    ],
    "mapped",
    [
      1213
    ]
  ],
  [
    [
      1213,
      1213
    ],
    "valid"
  ],
  [
    [
      1214,
      1214
    ],
    "mapped",
    [
      1215
    ]
  ],
  [
    [
      1215,
      1215
    ],
    "valid"
  ],
  [
    [
      1216,
      1216
    ],
    "disallowed"
  ],
  [
    [
      1217,
      1217
    ],
    "mapped",
    [
      1218
    ]
  ],
  [
    [
      1218,
      1218
    ],
    "valid"
  ],
  [
    [
      1219,
      1219
    ],
    "mapped",
    [
      1220
    ]
  ],
  [
    [
      1220,
      1220
    ],
    "valid"
  ],
  [
    [
      1221,
      1221
    ],
    "mapped",
    [
      1222
    ]
  ],
  [
    [
      1222,
      1222
    ],
    "valid"
  ],
  [
    [
      1223,
      1223
    ],
    "mapped",
    [
      1224
    ]
  ],
  [
    [
      1224,
      1224
    ],
    "valid"
  ],
  [
    [
      1225,
      1225
    ],
    "mapped",
    [
      1226
    ]
  ],
  [
    [
      1226,
      1226
    ],
    "valid"
  ],
  [
    [
      1227,
      1227
    ],
    "mapped",
    [
      1228
    ]
  ],
  [
    [
      1228,
      1228
    ],
    "valid"
  ],
  [
    [
      1229,
      1229
    ],
    "mapped",
    [
      1230
    ]
  ],
  [
    [
      1230,
      1230
    ],
    "valid"
  ],
  [
    [
      1231,
      1231
    ],
    "valid"
  ],
  [
    [
      1232,
      1232
    ],
    "mapped",
    [
      1233
    ]
  ],
  [
    [
      1233,
      1233
    ],
    "valid"
  ],
  [
    [
      1234,
      1234
    ],
    "mapped",
    [
      1235
    ]
  ],
  [
    [
      1235,
      1235
    ],
    "valid"
  ],
  [
    [
      1236,
      1236
    ],
    "mapped",
    [
      1237
    ]
  ],
  [
    [
      1237,
      1237
    ],
    "valid"
  ],
  [
    [
      1238,
      1238
    ],
    "mapped",
    [
      1239
    ]
  ],
  [
    [
      1239,
      1239
    ],
    "valid"
  ],
  [
    [
      1240,
      1240
    ],
    "mapped",
    [
      1241
    ]
  ],
  [
    [
      1241,
      1241
    ],
    "valid"
  ],
  [
    [
      1242,
      1242
    ],
    "mapped",
    [
      1243
    ]
  ],
  [
    [
      1243,
      1243
    ],
    "valid"
  ],
  [
    [
      1244,
      1244
    ],
    "mapped",
    [
      1245
    ]
  ],
  [
    [
      1245,
      1245
    ],
    "valid"
  ],
  [
    [
      1246,
      1246
    ],
    "mapped",
    [
      1247
    ]
  ],
  [
    [
      1247,
      1247
    ],
    "valid"
  ],
  [
    [
      1248,
      1248
    ],
    "mapped",
    [
      1249
    ]
  ],
  [
    [
      1249,
      1249
    ],
    "valid"
  ],
  [
    [
      1250,
      1250
    ],
    "mapped",
    [
      1251
    ]
  ],
  [
    [
      1251,
      1251
    ],
    "valid"
  ],
  [
    [
      1252,
      1252
    ],
    "mapped",
    [
      1253
    ]
  ],
  [
    [
      1253,
      1253
    ],
    "valid"
  ],
  [
    [
      1254,
      1254
    ],
    "mapped",
    [
      1255
    ]
  ],
  [
    [
      1255,
      1255
    ],
    "valid"
  ],
  [
    [
      1256,
      1256
    ],
    "mapped",
    [
      1257
    ]
  ],
  [
    [
      1257,
      1257
    ],
    "valid"
  ],
  [
    [
      1258,
      1258
    ],
    "mapped",
    [
      1259
    ]
  ],
  [
    [
      1259,
      1259
    ],
    "valid"
  ],
  [
    [
      1260,
      1260
    ],
    "mapped",
    [
      1261
    ]
  ],
  [
    [
      1261,
      1261
    ],
    "valid"
  ],
  [
    [
      1262,
      1262
    ],
    "mapped",
    [
      1263
    ]
  ],
  [
    [
      1263,
      1263
    ],
    "valid"
  ],
  [
    [
      1264,
      1264
    ],
    "mapped",
    [
      1265
    ]
  ],
  [
    [
      1265,
      1265
    ],
    "valid"
  ],
  [
    [
      1266,
      1266
    ],
    "mapped",
    [
      1267
    ]
  ],
  [
    [
      1267,
      1267
    ],
    "valid"
  ],
  [
    [
      1268,
      1268
    ],
    "mapped",
    [
      1269
    ]
  ],
  [
    [
      1269,
      1269
    ],
    "valid"
  ],
  [
    [
      1270,
      1270
    ],
    "mapped",
    [
      1271
    ]
  ],
  [
    [
      1271,
      1271
    ],
    "valid"
  ],
  [
    [
      1272,
      1272
    ],
    "mapped",
    [
      1273
    ]
  ],
  [
    [
      1273,
      1273
    ],
    "valid"
  ],
  [
    [
      1274,
      1274
    ],
    "mapped",
    [
      1275
    ]
  ],
  [
    [
      1275,
      1275
    ],
    "valid"
  ],
  [
    [
      1276,
      1276
    ],
    "mapped",
    [
      1277
    ]
  ],
  [
    [
      1277,
      1277
    ],
    "valid"
  ],
  [
    [
      1278,
      1278
    ],
    "mapped",
    [
      1279
    ]
  ],
  [
    [
      1279,
      1279
    ],
    "valid"
  ],
  [
    [
      1280,
      1280
    ],
    "mapped",
    [
      1281
    ]
  ],
  [
    [
      1281,
      1281
    ],
    "valid"
  ],
  [
    [
      1282,
      1282
    ],
    "mapped",
    [
      1283
    ]
  ],
  [
    [
      1283,
      1283
    ],
    "valid"
  ],
  [
    [
      1284,
      1284
    ],
    "mapped",
    [
      1285
    ]
  ],
  [
    [
      1285,
      1285
    ],
    "valid"
  ],
  [
    [
      1286,
      1286
    ],
    "mapped",
    [
      1287
    ]
  ],
  [
    [
      1287,
      1287
    ],
    "valid"
  ],
  [
    [
      1288,
      1288
    ],
    "mapped",
    [
      1289
    ]
  ],
  [
    [
      1289,
      1289
    ],
    "valid"
  ],
  [
    [
      1290,
      1290
    ],
    "mapped",
    [
      1291
    ]
  ],
  [
    [
      1291,
      1291
    ],
    "valid"
  ],
  [
    [
      1292,
      1292
    ],
    "mapped",
    [
      1293
    ]
  ],
  [
    [
      1293,
      1293
    ],
    "valid"
  ],
  [
    [
      1294,
      1294
    ],
    "mapped",
    [
      1295
    ]
  ],
  [
    [
      1295,
      1295
    ],
    "valid"
  ],
  [
    [
      1296,
      1296
    ],
    "mapped",
    [
      1297
    ]
  ],
  [
    [
      1297,
      1297
    ],
    "valid"
  ],
  [
    [
      1298,
      1298
    ],
    "mapped",
    [
      1299
    ]
  ],
  [
    [
      1299,
      1299
    ],
    "valid"
  ],
  [
    [
      1300,
      1300
    ],
    "mapped",
    [
      1301
    ]
  ],
  [
    [
      1301,
      1301
    ],
    "valid"
  ],
  [
    [
      1302,
      1302
    ],
    "mapped",
    [
      1303
    ]
  ],
  [
    [
      1303,
      1303
    ],
    "valid"
  ],
  [
    [
      1304,
      1304
    ],
    "mapped",
    [
      1305
    ]
  ],
  [
    [
      1305,
      1305
    ],
    "valid"
  ],
  [
    [
      1306,
      1306
    ],
    "mapped",
    [
      1307
    ]
  ],
  [
    [
      1307,
      1307
    ],
    "valid"
  ],
  [
    [
      1308,
      1308
    ],
    "mapped",
    [
      1309
    ]
  ],
  [
    [
      1309,
      1309
    ],
    "valid"
  ],
  [
    [
      1310,
      1310
    ],
    "mapped",
    [
      1311
    ]
  ],
  [
    [
      1311,
      1311
    ],
    "valid"
  ],
  [
    [
      1312,
      1312
    ],
    "mapped",
    [
      1313
    ]
  ],
  [
    [
      1313,
      1313
    ],
    "valid"
  ],
  [
    [
      1314,
      1314
    ],
    "mapped",
    [
      1315
    ]
  ],
  [
    [
      1315,
      1315
    ],
    "valid"
  ],
  [
    [
      1316,
      1316
    ],
    "mapped",
    [
      1317
    ]
  ],
  [
    [
      1317,
      1317
    ],
    "valid"
  ],
  [
    [
      1318,
      1318
    ],
    "mapped",
    [
      1319
    ]
  ],
  [
    [
      1319,
      1319
    ],
    "valid"
  ],
  [
    [
      1320,
      1320
    ],
    "mapped",
    [
      1321
    ]
  ],
  [
    [
      1321,
      1321
    ],
    "valid"
  ],
  [
    [
      1322,
      1322
    ],
    "mapped",
    [
      1323
    ]
  ],
  [
    [
      1323,
      1323
    ],
    "valid"
  ],
  [
    [
      1324,
      1324
    ],
    "mapped",
    [
      1325
    ]
  ],
  [
    [
      1325,
      1325
    ],
    "valid"
  ],
  [
    [
      1326,
      1326
    ],
    "mapped",
    [
      1327
    ]
  ],
  [
    [
      1327,
      1327
    ],
    "valid"
  ],
  [
    [
      1328,
      1328
    ],
    "disallowed"
  ],
  [
    [
      1329,
      1329
    ],
    "mapped",
    [
      1377
    ]
  ],
  [
    [
      1330,
      1330
    ],
    "mapped",
    [
      1378
    ]
  ],
  [
    [
      1331,
      1331
    ],
    "mapped",
    [
      1379
    ]
  ],
  [
    [
      1332,
      1332
    ],
    "mapped",
    [
      1380
    ]
  ],
  [
    [
      1333,
      1333
    ],
    "mapped",
    [
      1381
    ]
  ],
  [
    [
      1334,
      1334
    ],
    "mapped",
    [
      1382
    ]
  ],
  [
    [
      1335,
      1335
    ],
    "mapped",
    [
      1383
    ]
  ],
  [
    [
      1336,
      1336
    ],
    "mapped",
    [
      1384
    ]
  ],
  [
    [
      1337,
      1337
    ],
    "mapped",
    [
      1385
    ]
  ],
  [
    [
      1338,
      1338
    ],
    "mapped",
    [
      1386
    ]
  ],
  [
    [
      1339,
      1339
    ],
    "mapped",
    [
      1387
    ]
  ],
  [
    [
      1340,
      1340
    ],
    "mapped",
    [
      1388
    ]
  ],
  [
    [
      1341,
      1341
    ],
    "mapped",
    [
      1389
    ]
  ],
  [
    [
      1342,
      1342
    ],
    "mapped",
    [
      1390
    ]
  ],
  [
    [
      1343,
      1343
    ],
    "mapped",
    [
      1391
    ]
  ],
  [
    [
      1344,
      1344
    ],
    "mapped",
    [
      1392
    ]
  ],
  [
    [
      1345,
      1345
    ],
    "mapped",
    [
      1393
    ]
  ],
  [
    [
      1346,
      1346
    ],
    "mapped",
    [
      1394
    ]
  ],
  [
    [
      1347,
      1347
    ],
    "mapped",
    [
      1395
    ]
  ],
  [
    [
      1348,
      1348
    ],
    "mapped",
    [
      1396
    ]
  ],
  [
    [
      1349,
      1349
    ],
    "mapped",
    [
      1397
    ]
  ],
  [
    [
      1350,
      1350
    ],
    "mapped",
    [
      1398
    ]
  ],
  [
    [
      1351,
      1351
    ],
    "mapped",
    [
      1399
    ]
  ],
  [
    [
      1352,
      1352
    ],
    "mapped",
    [
      1400
    ]
  ],
  [
    [
      1353,
      1353
    ],
    "mapped",
    [
      1401
    ]
  ],
  [
    [
      1354,
      1354
    ],
    "mapped",
    [
      1402
    ]
  ],
  [
    [
      1355,
      1355
    ],
    "mapped",
    [
      1403
    ]
  ],
  [
    [
      1356,
      1356
    ],
    "mapped",
    [
      1404
    ]
  ],
  [
    [
      1357,
      1357
    ],
    "mapped",
    [
      1405
    ]
  ],
  [
    [
      1358,
      1358
    ],
    "mapped",
    [
      1406
    ]
  ],
  [
    [
      1359,
      1359
    ],
    "mapped",
    [
      1407
    ]
  ],
  [
    [
      1360,
      1360
    ],
    "mapped",
    [
      1408
    ]
  ],
  [
    [
      1361,
      1361
    ],
    "mapped",
    [
      1409
    ]
  ],
  [
    [
      1362,
      1362
    ],
    "mapped",
    [
      1410
    ]
  ],
  [
    [
      1363,
      1363
    ],
    "mapped",
    [
      1411
    ]
  ],
  [
    [
      1364,
      1364
    ],
    "mapped",
    [
      1412
    ]
  ],
  [
    [
      1365,
      1365
    ],
    "mapped",
    [
      1413
    ]
  ],
  [
    [
      1366,
      1366
    ],
    "mapped",
    [
      1414
    ]
  ],
  [
    [
      1367,
      1368
    ],
    "disallowed"
  ],
  [
    [
      1369,
      1369
    ],
    "valid"
  ],
  [
    [
      1370,
      1375
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      1376,
      1376
    ],
    "disallowed"
  ],
  [
    [
      1377,
      1414
    ],
    "valid"
  ],
  [
    [
      1415,
      1415
    ],
    "mapped",
    [
      1381,
      1410
    ]
  ],
  [
    [
      1416,
      1416
    ],
    "disallowed"
  ],
  [
    [
      1417,
      1417
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      1418,
      1418
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      1419,
      1420
    ],
    "disallowed"
  ],
  [
    [
      1421,
      1422
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      1423,
      1423
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      1424,
      1424
    ],
    "disallowed"
  ],
  [
    [
      1425,
      1441
    ],
    "valid"
  ],
  [
    [
      1442,
      1442
    ],
    "valid"
  ],
  [
    [
      1443,
      1455
    ],
    "valid"
  ],
  [
    [
      1456,
      1465
    ],
    "valid"
  ],
  [
    [
      1466,
      1466
    ],
    "valid"
  ],
  [
    [
      1467,
      1469
    ],
    "valid"
  ],
  [
    [
      1470,
      1470
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      1471,
      1471
    ],
    "valid"
  ],
  [
    [
      1472,
      1472
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      1473,
      1474
    ],
    "valid"
  ],
  [
    [
      1475,
      1475
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      1476,
      1476
    ],
    "valid"
  ],
  [
    [
      1477,
      1477
    ],
    "valid"
  ],
  [
    [
      1478,
      1478
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      1479,
      1479
    ],
    "valid"
  ],
  [
    [
      1480,
      1487
    ],
    "disallowed"
  ],
  [
    [
      1488,
      1514
    ],
    "valid"
  ],
  [
    [
      1515,
      1519
    ],
    "disallowed"
  ],
  [
    [
      1520,
      1524
    ],
    "valid"
  ],
  [
    [
      1525,
      1535
    ],
    "disallowed"
  ],
  [
    [
      1536,
      1539
    ],
    "disallowed"
  ],
  [
    [
      1540,
      1540
    ],
    "disallowed"
  ],
  [
    [
      1541,
      1541
    ],
    "disallowed"
  ],
  [
    [
      1542,
      1546
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      1547,
      1547
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      1548,
      1548
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      1549,
      1551
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      1552,
      1557
    ],
    "valid"
  ],
  [
    [
      1558,
      1562
    ],
    "valid"
  ],
  [
    [
      1563,
      1563
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      1564,
      1564
    ],
    "disallowed"
  ],
  [
    [
      1565,
      1565
    ],
    "disallowed"
  ],
  [
    [
      1566,
      1566
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      1567,
      1567
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      1568,
      1568
    ],
    "valid"
  ],
  [
    [
      1569,
      1594
    ],
    "valid"
  ],
  [
    [
      1595,
      1599
    ],
    "valid"
  ],
  [
    [
      1600,
      1600
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      1601,
      1618
    ],
    "valid"
  ],
  [
    [
      1619,
      1621
    ],
    "valid"
  ],
  [
    [
      1622,
      1624
    ],
    "valid"
  ],
  [
    [
      1625,
      1630
    ],
    "valid"
  ],
  [
    [
      1631,
      1631
    ],
    "valid"
  ],
  [
    [
      1632,
      1641
    ],
    "valid"
  ],
  [
    [
      1642,
      1645
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      1646,
      1647
    ],
    "valid"
  ],
  [
    [
      1648,
      1652
    ],
    "valid"
  ],
  [
    [
      1653,
      1653
    ],
    "mapped",
    [
      1575,
      1652
    ]
  ],
  [
    [
      1654,
      1654
    ],
    "mapped",
    [
      1608,
      1652
    ]
  ],
  [
    [
      1655,
      1655
    ],
    "mapped",
    [
      1735,
      1652
    ]
  ],
  [
    [
      1656,
      1656
    ],
    "mapped",
    [
      1610,
      1652
    ]
  ],
  [
    [
      1657,
      1719
    ],
    "valid"
  ],
  [
    [
      1720,
      1721
    ],
    "valid"
  ],
  [
    [
      1722,
      1726
    ],
    "valid"
  ],
  [
    [
      1727,
      1727
    ],
    "valid"
  ],
  [
    [
      1728,
      1742
    ],
    "valid"
  ],
  [
    [
      1743,
      1743
    ],
    "valid"
  ],
  [
    [
      1744,
      1747
    ],
    "valid"
  ],
  [
    [
      1748,
      1748
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      1749,
      1756
    ],
    "valid"
  ],
  [
    [
      1757,
      1757
    ],
    "disallowed"
  ],
  [
    [
      1758,
      1758
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      1759,
      1768
    ],
    "valid"
  ],
  [
    [
      1769,
      1769
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      1770,
      1773
    ],
    "valid"
  ],
  [
    [
      1774,
      1775
    ],
    "valid"
  ],
  [
    [
      1776,
      1785
    ],
    "valid"
  ],
  [
    [
      1786,
      1790
    ],
    "valid"
  ],
  [
    [
      1791,
      1791
    ],
    "valid"
  ],
  [
    [
      1792,
      1805
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      1806,
      1806
    ],
    "disallowed"
  ],
  [
    [
      1807,
      1807
    ],
    "disallowed"
  ],
  [
    [
      1808,
      1836
    ],
    "valid"
  ],
  [
    [
      1837,
      1839
    ],
    "valid"
  ],
  [
    [
      1840,
      1866
    ],
    "valid"
  ],
  [
    [
      1867,
      1868
    ],
    "disallowed"
  ],
  [
    [
      1869,
      1871
    ],
    "valid"
  ],
  [
    [
      1872,
      1901
    ],
    "valid"
  ],
  [
    [
      1902,
      1919
    ],
    "valid"
  ],
  [
    [
      1920,
      1968
    ],
    "valid"
  ],
  [
    [
      1969,
      1969
    ],
    "valid"
  ],
  [
    [
      1970,
      1983
    ],
    "disallowed"
  ],
  [
    [
      1984,
      2037
    ],
    "valid"
  ],
  [
    [
      2038,
      2042
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      2043,
      2047
    ],
    "disallowed"
  ],
  [
    [
      2048,
      2093
    ],
    "valid"
  ],
  [
    [
      2094,
      2095
    ],
    "disallowed"
  ],
  [
    [
      2096,
      2110
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      2111,
      2111
    ],
    "disallowed"
  ],
  [
    [
      2112,
      2139
    ],
    "valid"
  ],
  [
    [
      2140,
      2141
    ],
    "disallowed"
  ],
  [
    [
      2142,
      2142
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      2143,
      2207
    ],
    "disallowed"
  ],
  [
    [
      2208,
      2208
    ],
    "valid"
  ],
  [
    [
      2209,
      2209
    ],
    "valid"
  ],
  [
    [
      2210,
      2220
    ],
    "valid"
  ],
  [
    [
      2221,
      2226
    ],
    "valid"
  ],
  [
    [
      2227,
      2228
    ],
    "valid"
  ],
  [
    [
      2229,
      2274
    ],
    "disallowed"
  ],
  [
    [
      2275,
      2275
    ],
    "valid"
  ],
  [
    [
      2276,
      2302
    ],
    "valid"
  ],
  [
    [
      2303,
      2303
    ],
    "valid"
  ],
  [
    [
      2304,
      2304
    ],
    "valid"
  ],
  [
    [
      2305,
      2307
    ],
    "valid"
  ],
  [
    [
      2308,
      2308
    ],
    "valid"
  ],
  [
    [
      2309,
      2361
    ],
    "valid"
  ],
  [
    [
      2362,
      2363
    ],
    "valid"
  ],
  [
    [
      2364,
      2381
    ],
    "valid"
  ],
  [
    [
      2382,
      2382
    ],
    "valid"
  ],
  [
    [
      2383,
      2383
    ],
    "valid"
  ],
  [
    [
      2384,
      2388
    ],
    "valid"
  ],
  [
    [
      2389,
      2389
    ],
    "valid"
  ],
  [
    [
      2390,
      2391
    ],
    "valid"
  ],
  [
    [
      2392,
      2392
    ],
    "mapped",
    [
      2325,
      2364
    ]
  ],
  [
    [
      2393,
      2393
    ],
    "mapped",
    [
      2326,
      2364
    ]
  ],
  [
    [
      2394,
      2394
    ],
    "mapped",
    [
      2327,
      2364
    ]
  ],
  [
    [
      2395,
      2395
    ],
    "mapped",
    [
      2332,
      2364
    ]
  ],
  [
    [
      2396,
      2396
    ],
    "mapped",
    [
      2337,
      2364
    ]
  ],
  [
    [
      2397,
      2397
    ],
    "mapped",
    [
      2338,
      2364
    ]
  ],
  [
    [
      2398,
      2398
    ],
    "mapped",
    [
      2347,
      2364
    ]
  ],
  [
    [
      2399,
      2399
    ],
    "mapped",
    [
      2351,
      2364
    ]
  ],
  [
    [
      2400,
      2403
    ],
    "valid"
  ],
  [
    [
      2404,
      2405
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      2406,
      2415
    ],
    "valid"
  ],
  [
    [
      2416,
      2416
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      2417,
      2418
    ],
    "valid"
  ],
  [
    [
      2419,
      2423
    ],
    "valid"
  ],
  [
    [
      2424,
      2424
    ],
    "valid"
  ],
  [
    [
      2425,
      2426
    ],
    "valid"
  ],
  [
    [
      2427,
      2428
    ],
    "valid"
  ],
  [
    [
      2429,
      2429
    ],
    "valid"
  ],
  [
    [
      2430,
      2431
    ],
    "valid"
  ],
  [
    [
      2432,
      2432
    ],
    "valid"
  ],
  [
    [
      2433,
      2435
    ],
    "valid"
  ],
  [
    [
      2436,
      2436
    ],
    "disallowed"
  ],
  [
    [
      2437,
      2444
    ],
    "valid"
  ],
  [
    [
      2445,
      2446
    ],
    "disallowed"
  ],
  [
    [
      2447,
      2448
    ],
    "valid"
  ],
  [
    [
      2449,
      2450
    ],
    "disallowed"
  ],
  [
    [
      2451,
      2472
    ],
    "valid"
  ],
  [
    [
      2473,
      2473
    ],
    "disallowed"
  ],
  [
    [
      2474,
      2480
    ],
    "valid"
  ],
  [
    [
      2481,
      2481
    ],
    "disallowed"
  ],
  [
    [
      2482,
      2482
    ],
    "valid"
  ],
  [
    [
      2483,
      2485
    ],
    "disallowed"
  ],
  [
    [
      2486,
      2489
    ],
    "valid"
  ],
  [
    [
      2490,
      2491
    ],
    "disallowed"
  ],
  [
    [
      2492,
      2492
    ],
    "valid"
  ],
  [
    [
      2493,
      2493
    ],
    "valid"
  ],
  [
    [
      2494,
      2500
    ],
    "valid"
  ],
  [
    [
      2501,
      2502
    ],
    "disallowed"
  ],
  [
    [
      2503,
      2504
    ],
    "valid"
  ],
  [
    [
      2505,
      2506
    ],
    "disallowed"
  ],
  [
    [
      2507,
      2509
    ],
    "valid"
  ],
  [
    [
      2510,
      2510
    ],
    "valid"
  ],
  [
    [
      2511,
      2518
    ],
    "disallowed"
  ],
  [
    [
      2519,
      2519
    ],
    "valid"
  ],
  [
    [
      2520,
      2523
    ],
    "disallowed"
  ],
  [
    [
      2524,
      2524
    ],
    "mapped",
    [
      2465,
      2492
    ]
  ],
  [
    [
      2525,
      2525
    ],
    "mapped",
    [
      2466,
      2492
    ]
  ],
  [
    [
      2526,
      2526
    ],
    "disallowed"
  ],
  [
    [
      2527,
      2527
    ],
    "mapped",
    [
      2479,
      2492
    ]
  ],
  [
    [
      2528,
      2531
    ],
    "valid"
  ],
  [
    [
      2532,
      2533
    ],
    "disallowed"
  ],
  [
    [
      2534,
      2545
    ],
    "valid"
  ],
  [
    [
      2546,
      2554
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      2555,
      2555
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      2556,
      2560
    ],
    "disallowed"
  ],
  [
    [
      2561,
      2561
    ],
    "valid"
  ],
  [
    [
      2562,
      2562
    ],
    "valid"
  ],
  [
    [
      2563,
      2563
    ],
    "valid"
  ],
  [
    [
      2564,
      2564
    ],
    "disallowed"
  ],
  [
    [
      2565,
      2570
    ],
    "valid"
  ],
  [
    [
      2571,
      2574
    ],
    "disallowed"
  ],
  [
    [
      2575,
      2576
    ],
    "valid"
  ],
  [
    [
      2577,
      2578
    ],
    "disallowed"
  ],
  [
    [
      2579,
      2600
    ],
    "valid"
  ],
  [
    [
      2601,
      2601
    ],
    "disallowed"
  ],
  [
    [
      2602,
      2608
    ],
    "valid"
  ],
  [
    [
      2609,
      2609
    ],
    "disallowed"
  ],
  [
    [
      2610,
      2610
    ],
    "valid"
  ],
  [
    [
      2611,
      2611
    ],
    "mapped",
    [
      2610,
      2620
    ]
  ],
  [
    [
      2612,
      2612
    ],
    "disallowed"
  ],
  [
    [
      2613,
      2613
    ],
    "valid"
  ],
  [
    [
      2614,
      2614
    ],
    "mapped",
    [
      2616,
      2620
    ]
  ],
  [
    [
      2615,
      2615
    ],
    "disallowed"
  ],
  [
    [
      2616,
      2617
    ],
    "valid"
  ],
  [
    [
      2618,
      2619
    ],
    "disallowed"
  ],
  [
    [
      2620,
      2620
    ],
    "valid"
  ],
  [
    [
      2621,
      2621
    ],
    "disallowed"
  ],
  [
    [
      2622,
      2626
    ],
    "valid"
  ],
  [
    [
      2627,
      2630
    ],
    "disallowed"
  ],
  [
    [
      2631,
      2632
    ],
    "valid"
  ],
  [
    [
      2633,
      2634
    ],
    "disallowed"
  ],
  [
    [
      2635,
      2637
    ],
    "valid"
  ],
  [
    [
      2638,
      2640
    ],
    "disallowed"
  ],
  [
    [
      2641,
      2641
    ],
    "valid"
  ],
  [
    [
      2642,
      2648
    ],
    "disallowed"
  ],
  [
    [
      2649,
      2649
    ],
    "mapped",
    [
      2582,
      2620
    ]
  ],
  [
    [
      2650,
      2650
    ],
    "mapped",
    [
      2583,
      2620
    ]
  ],
  [
    [
      2651,
      2651
    ],
    "mapped",
    [
      2588,
      2620
    ]
  ],
  [
    [
      2652,
      2652
    ],
    "valid"
  ],
  [
    [
      2653,
      2653
    ],
    "disallowed"
  ],
  [
    [
      2654,
      2654
    ],
    "mapped",
    [
      2603,
      2620
    ]
  ],
  [
    [
      2655,
      2661
    ],
    "disallowed"
  ],
  [
    [
      2662,
      2676
    ],
    "valid"
  ],
  [
    [
      2677,
      2677
    ],
    "valid"
  ],
  [
    [
      2678,
      2688
    ],
    "disallowed"
  ],
  [
    [
      2689,
      2691
    ],
    "valid"
  ],
  [
    [
      2692,
      2692
    ],
    "disallowed"
  ],
  [
    [
      2693,
      2699
    ],
    "valid"
  ],
  [
    [
      2700,
      2700
    ],
    "valid"
  ],
  [
    [
      2701,
      2701
    ],
    "valid"
  ],
  [
    [
      2702,
      2702
    ],
    "disallowed"
  ],
  [
    [
      2703,
      2705
    ],
    "valid"
  ],
  [
    [
      2706,
      2706
    ],
    "disallowed"
  ],
  [
    [
      2707,
      2728
    ],
    "valid"
  ],
  [
    [
      2729,
      2729
    ],
    "disallowed"
  ],
  [
    [
      2730,
      2736
    ],
    "valid"
  ],
  [
    [
      2737,
      2737
    ],
    "disallowed"
  ],
  [
    [
      2738,
      2739
    ],
    "valid"
  ],
  [
    [
      2740,
      2740
    ],
    "disallowed"
  ],
  [
    [
      2741,
      2745
    ],
    "valid"
  ],
  [
    [
      2746,
      2747
    ],
    "disallowed"
  ],
  [
    [
      2748,
      2757
    ],
    "valid"
  ],
  [
    [
      2758,
      2758
    ],
    "disallowed"
  ],
  [
    [
      2759,
      2761
    ],
    "valid"
  ],
  [
    [
      2762,
      2762
    ],
    "disallowed"
  ],
  [
    [
      2763,
      2765
    ],
    "valid"
  ],
  [
    [
      2766,
      2767
    ],
    "disallowed"
  ],
  [
    [
      2768,
      2768
    ],
    "valid"
  ],
  [
    [
      2769,
      2783
    ],
    "disallowed"
  ],
  [
    [
      2784,
      2784
    ],
    "valid"
  ],
  [
    [
      2785,
      2787
    ],
    "valid"
  ],
  [
    [
      2788,
      2789
    ],
    "disallowed"
  ],
  [
    [
      2790,
      2799
    ],
    "valid"
  ],
  [
    [
      2800,
      2800
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      2801,
      2801
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      2802,
      2808
    ],
    "disallowed"
  ],
  [
    [
      2809,
      2809
    ],
    "valid"
  ],
  [
    [
      2810,
      2816
    ],
    "disallowed"
  ],
  [
    [
      2817,
      2819
    ],
    "valid"
  ],
  [
    [
      2820,
      2820
    ],
    "disallowed"
  ],
  [
    [
      2821,
      2828
    ],
    "valid"
  ],
  [
    [
      2829,
      2830
    ],
    "disallowed"
  ],
  [
    [
      2831,
      2832
    ],
    "valid"
  ],
  [
    [
      2833,
      2834
    ],
    "disallowed"
  ],
  [
    [
      2835,
      2856
    ],
    "valid"
  ],
  [
    [
      2857,
      2857
    ],
    "disallowed"
  ],
  [
    [
      2858,
      2864
    ],
    "valid"
  ],
  [
    [
      2865,
      2865
    ],
    "disallowed"
  ],
  [
    [
      2866,
      2867
    ],
    "valid"
  ],
  [
    [
      2868,
      2868
    ],
    "disallowed"
  ],
  [
    [
      2869,
      2869
    ],
    "valid"
  ],
  [
    [
      2870,
      2873
    ],
    "valid"
  ],
  [
    [
      2874,
      2875
    ],
    "disallowed"
  ],
  [
    [
      2876,
      2883
    ],
    "valid"
  ],
  [
    [
      2884,
      2884
    ],
    "valid"
  ],
  [
    [
      2885,
      2886
    ],
    "disallowed"
  ],
  [
    [
      2887,
      2888
    ],
    "valid"
  ],
  [
    [
      2889,
      2890
    ],
    "disallowed"
  ],
  [
    [
      2891,
      2893
    ],
    "valid"
  ],
  [
    [
      2894,
      2901
    ],
    "disallowed"
  ],
  [
    [
      2902,
      2903
    ],
    "valid"
  ],
  [
    [
      2904,
      2907
    ],
    "disallowed"
  ],
  [
    [
      2908,
      2908
    ],
    "mapped",
    [
      2849,
      2876
    ]
  ],
  [
    [
      2909,
      2909
    ],
    "mapped",
    [
      2850,
      2876
    ]
  ],
  [
    [
      2910,
      2910
    ],
    "disallowed"
  ],
  [
    [
      2911,
      2913
    ],
    "valid"
  ],
  [
    [
      2914,
      2915
    ],
    "valid"
  ],
  [
    [
      2916,
      2917
    ],
    "disallowed"
  ],
  [
    [
      2918,
      2927
    ],
    "valid"
  ],
  [
    [
      2928,
      2928
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      2929,
      2929
    ],
    "valid"
  ],
  [
    [
      2930,
      2935
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      2936,
      2945
    ],
    "disallowed"
  ],
  [
    [
      2946,
      2947
    ],
    "valid"
  ],
  [
    [
      2948,
      2948
    ],
    "disallowed"
  ],
  [
    [
      2949,
      2954
    ],
    "valid"
  ],
  [
    [
      2955,
      2957
    ],
    "disallowed"
  ],
  [
    [
      2958,
      2960
    ],
    "valid"
  ],
  [
    [
      2961,
      2961
    ],
    "disallowed"
  ],
  [
    [
      2962,
      2965
    ],
    "valid"
  ],
  [
    [
      2966,
      2968
    ],
    "disallowed"
  ],
  [
    [
      2969,
      2970
    ],
    "valid"
  ],
  [
    [
      2971,
      2971
    ],
    "disallowed"
  ],
  [
    [
      2972,
      2972
    ],
    "valid"
  ],
  [
    [
      2973,
      2973
    ],
    "disallowed"
  ],
  [
    [
      2974,
      2975
    ],
    "valid"
  ],
  [
    [
      2976,
      2978
    ],
    "disallowed"
  ],
  [
    [
      2979,
      2980
    ],
    "valid"
  ],
  [
    [
      2981,
      2983
    ],
    "disallowed"
  ],
  [
    [
      2984,
      2986
    ],
    "valid"
  ],
  [
    [
      2987,
      2989
    ],
    "disallowed"
  ],
  [
    [
      2990,
      2997
    ],
    "valid"
  ],
  [
    [
      2998,
      2998
    ],
    "valid"
  ],
  [
    [
      2999,
      3001
    ],
    "valid"
  ],
  [
    [
      3002,
      3005
    ],
    "disallowed"
  ],
  [
    [
      3006,
      3010
    ],
    "valid"
  ],
  [
    [
      3011,
      3013
    ],
    "disallowed"
  ],
  [
    [
      3014,
      3016
    ],
    "valid"
  ],
  [
    [
      3017,
      3017
    ],
    "disallowed"
  ],
  [
    [
      3018,
      3021
    ],
    "valid"
  ],
  [
    [
      3022,
      3023
    ],
    "disallowed"
  ],
  [
    [
      3024,
      3024
    ],
    "valid"
  ],
  [
    [
      3025,
      3030
    ],
    "disallowed"
  ],
  [
    [
      3031,
      3031
    ],
    "valid"
  ],
  [
    [
      3032,
      3045
    ],
    "disallowed"
  ],
  [
    [
      3046,
      3046
    ],
    "valid"
  ],
  [
    [
      3047,
      3055
    ],
    "valid"
  ],
  [
    [
      3056,
      3058
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      3059,
      3066
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      3067,
      3071
    ],
    "disallowed"
  ],
  [
    [
      3072,
      3072
    ],
    "valid"
  ],
  [
    [
      3073,
      3075
    ],
    "valid"
  ],
  [
    [
      3076,
      3076
    ],
    "disallowed"
  ],
  [
    [
      3077,
      3084
    ],
    "valid"
  ],
  [
    [
      3085,
      3085
    ],
    "disallowed"
  ],
  [
    [
      3086,
      3088
    ],
    "valid"
  ],
  [
    [
      3089,
      3089
    ],
    "disallowed"
  ],
  [
    [
      3090,
      3112
    ],
    "valid"
  ],
  [
    [
      3113,
      3113
    ],
    "disallowed"
  ],
  [
    [
      3114,
      3123
    ],
    "valid"
  ],
  [
    [
      3124,
      3124
    ],
    "valid"
  ],
  [
    [
      3125,
      3129
    ],
    "valid"
  ],
  [
    [
      3130,
      3132
    ],
    "disallowed"
  ],
  [
    [
      3133,
      3133
    ],
    "valid"
  ],
  [
    [
      3134,
      3140
    ],
    "valid"
  ],
  [
    [
      3141,
      3141
    ],
    "disallowed"
  ],
  [
    [
      3142,
      3144
    ],
    "valid"
  ],
  [
    [
      3145,
      3145
    ],
    "disallowed"
  ],
  [
    [
      3146,
      3149
    ],
    "valid"
  ],
  [
    [
      3150,
      3156
    ],
    "disallowed"
  ],
  [
    [
      3157,
      3158
    ],
    "valid"
  ],
  [
    [
      3159,
      3159
    ],
    "disallowed"
  ],
  [
    [
      3160,
      3161
    ],
    "valid"
  ],
  [
    [
      3162,
      3162
    ],
    "valid"
  ],
  [
    [
      3163,
      3167
    ],
    "disallowed"
  ],
  [
    [
      3168,
      3169
    ],
    "valid"
  ],
  [
    [
      3170,
      3171
    ],
    "valid"
  ],
  [
    [
      3172,
      3173
    ],
    "disallowed"
  ],
  [
    [
      3174,
      3183
    ],
    "valid"
  ],
  [
    [
      3184,
      3191
    ],
    "disallowed"
  ],
  [
    [
      3192,
      3199
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      3200,
      3200
    ],
    "disallowed"
  ],
  [
    [
      3201,
      3201
    ],
    "valid"
  ],
  [
    [
      3202,
      3203
    ],
    "valid"
  ],
  [
    [
      3204,
      3204
    ],
    "disallowed"
  ],
  [
    [
      3205,
      3212
    ],
    "valid"
  ],
  [
    [
      3213,
      3213
    ],
    "disallowed"
  ],
  [
    [
      3214,
      3216
    ],
    "valid"
  ],
  [
    [
      3217,
      3217
    ],
    "disallowed"
  ],
  [
    [
      3218,
      3240
    ],
    "valid"
  ],
  [
    [
      3241,
      3241
    ],
    "disallowed"
  ],
  [
    [
      3242,
      3251
    ],
    "valid"
  ],
  [
    [
      3252,
      3252
    ],
    "disallowed"
  ],
  [
    [
      3253,
      3257
    ],
    "valid"
  ],
  [
    [
      3258,
      3259
    ],
    "disallowed"
  ],
  [
    [
      3260,
      3261
    ],
    "valid"
  ],
  [
    [
      3262,
      3268
    ],
    "valid"
  ],
  [
    [
      3269,
      3269
    ],
    "disallowed"
  ],
  [
    [
      3270,
      3272
    ],
    "valid"
  ],
  [
    [
      3273,
      3273
    ],
    "disallowed"
  ],
  [
    [
      3274,
      3277
    ],
    "valid"
  ],
  [
    [
      3278,
      3284
    ],
    "disallowed"
  ],
  [
    [
      3285,
      3286
    ],
    "valid"
  ],
  [
    [
      3287,
      3293
    ],
    "disallowed"
  ],
  [
    [
      3294,
      3294
    ],
    "valid"
  ],
  [
    [
      3295,
      3295
    ],
    "disallowed"
  ],
  [
    [
      3296,
      3297
    ],
    "valid"
  ],
  [
    [
      3298,
      3299
    ],
    "valid"
  ],
  [
    [
      3300,
      3301
    ],
    "disallowed"
  ],
  [
    [
      3302,
      3311
    ],
    "valid"
  ],
  [
    [
      3312,
      3312
    ],
    "disallowed"
  ],
  [
    [
      3313,
      3314
    ],
    "valid"
  ],
  [
    [
      3315,
      3328
    ],
    "disallowed"
  ],
  [
    [
      3329,
      3329
    ],
    "valid"
  ],
  [
    [
      3330,
      3331
    ],
    "valid"
  ],
  [
    [
      3332,
      3332
    ],
    "disallowed"
  ],
  [
    [
      3333,
      3340
    ],
    "valid"
  ],
  [
    [
      3341,
      3341
    ],
    "disallowed"
  ],
  [
    [
      3342,
      3344
    ],
    "valid"
  ],
  [
    [
      3345,
      3345
    ],
    "disallowed"
  ],
  [
    [
      3346,
      3368
    ],
    "valid"
  ],
  [
    [
      3369,
      3369
    ],
    "valid"
  ],
  [
    [
      3370,
      3385
    ],
    "valid"
  ],
  [
    [
      3386,
      3386
    ],
    "valid"
  ],
  [
    [
      3387,
      3388
    ],
    "disallowed"
  ],
  [
    [
      3389,
      3389
    ],
    "valid"
  ],
  [
    [
      3390,
      3395
    ],
    "valid"
  ],
  [
    [
      3396,
      3396
    ],
    "valid"
  ],
  [
    [
      3397,
      3397
    ],
    "disallowed"
  ],
  [
    [
      3398,
      3400
    ],
    "valid"
  ],
  [
    [
      3401,
      3401
    ],
    "disallowed"
  ],
  [
    [
      3402,
      3405
    ],
    "valid"
  ],
  [
    [
      3406,
      3406
    ],
    "valid"
  ],
  [
    [
      3407,
      3414
    ],
    "disallowed"
  ],
  [
    [
      3415,
      3415
    ],
    "valid"
  ],
  [
    [
      3416,
      3422
    ],
    "disallowed"
  ],
  [
    [
      3423,
      3423
    ],
    "valid"
  ],
  [
    [
      3424,
      3425
    ],
    "valid"
  ],
  [
    [
      3426,
      3427
    ],
    "valid"
  ],
  [
    [
      3428,
      3429
    ],
    "disallowed"
  ],
  [
    [
      3430,
      3439
    ],
    "valid"
  ],
  [
    [
      3440,
      3445
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      3446,
      3448
    ],
    "disallowed"
  ],
  [
    [
      3449,
      3449
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      3450,
      3455
    ],
    "valid"
  ],
  [
    [
      3456,
      3457
    ],
    "disallowed"
  ],
  [
    [
      3458,
      3459
    ],
    "valid"
  ],
  [
    [
      3460,
      3460
    ],
    "disallowed"
  ],
  [
    [
      3461,
      3478
    ],
    "valid"
  ],
  [
    [
      3479,
      3481
    ],
    "disallowed"
  ],
  [
    [
      3482,
      3505
    ],
    "valid"
  ],
  [
    [
      3506,
      3506
    ],
    "disallowed"
  ],
  [
    [
      3507,
      3515
    ],
    "valid"
  ],
  [
    [
      3516,
      3516
    ],
    "disallowed"
  ],
  [
    [
      3517,
      3517
    ],
    "valid"
  ],
  [
    [
      3518,
      3519
    ],
    "disallowed"
  ],
  [
    [
      3520,
      3526
    ],
    "valid"
  ],
  [
    [
      3527,
      3529
    ],
    "disallowed"
  ],
  [
    [
      3530,
      3530
    ],
    "valid"
  ],
  [
    [
      3531,
      3534
    ],
    "disallowed"
  ],
  [
    [
      3535,
      3540
    ],
    "valid"
  ],
  [
    [
      3541,
      3541
    ],
    "disallowed"
  ],
  [
    [
      3542,
      3542
    ],
    "valid"
  ],
  [
    [
      3543,
      3543
    ],
    "disallowed"
  ],
  [
    [
      3544,
      3551
    ],
    "valid"
  ],
  [
    [
      3552,
      3557
    ],
    "disallowed"
  ],
  [
    [
      3558,
      3567
    ],
    "valid"
  ],
  [
    [
      3568,
      3569
    ],
    "disallowed"
  ],
  [
    [
      3570,
      3571
    ],
    "valid"
  ],
  [
    [
      3572,
      3572
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      3573,
      3584
    ],
    "disallowed"
  ],
  [
    [
      3585,
      3634
    ],
    "valid"
  ],
  [
    [
      3635,
      3635
    ],
    "mapped",
    [
      3661,
      3634
    ]
  ],
  [
    [
      3636,
      3642
    ],
    "valid"
  ],
  [
    [
      3643,
      3646
    ],
    "disallowed"
  ],
  [
    [
      3647,
      3647
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      3648,
      3662
    ],
    "valid"
  ],
  [
    [
      3663,
      3663
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      3664,
      3673
    ],
    "valid"
  ],
  [
    [
      3674,
      3675
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      3676,
      3712
    ],
    "disallowed"
  ],
  [
    [
      3713,
      3714
    ],
    "valid"
  ],
  [
    [
      3715,
      3715
    ],
    "disallowed"
  ],
  [
    [
      3716,
      3716
    ],
    "valid"
  ],
  [
    [
      3717,
      3718
    ],
    "disallowed"
  ],
  [
    [
      3719,
      3720
    ],
    "valid"
  ],
  [
    [
      3721,
      3721
    ],
    "disallowed"
  ],
  [
    [
      3722,
      3722
    ],
    "valid"
  ],
  [
    [
      3723,
      3724
    ],
    "disallowed"
  ],
  [
    [
      3725,
      3725
    ],
    "valid"
  ],
  [
    [
      3726,
      3731
    ],
    "disallowed"
  ],
  [
    [
      3732,
      3735
    ],
    "valid"
  ],
  [
    [
      3736,
      3736
    ],
    "disallowed"
  ],
  [
    [
      3737,
      3743
    ],
    "valid"
  ],
  [
    [
      3744,
      3744
    ],
    "disallowed"
  ],
  [
    [
      3745,
      3747
    ],
    "valid"
  ],
  [
    [
      3748,
      3748
    ],
    "disallowed"
  ],
  [
    [
      3749,
      3749
    ],
    "valid"
  ],
  [
    [
      3750,
      3750
    ],
    "disallowed"
  ],
  [
    [
      3751,
      3751
    ],
    "valid"
  ],
  [
    [
      3752,
      3753
    ],
    "disallowed"
  ],
  [
    [
      3754,
      3755
    ],
    "valid"
  ],
  [
    [
      3756,
      3756
    ],
    "disallowed"
  ],
  [
    [
      3757,
      3762
    ],
    "valid"
  ],
  [
    [
      3763,
      3763
    ],
    "mapped",
    [
      3789,
      3762
    ]
  ],
  [
    [
      3764,
      3769
    ],
    "valid"
  ],
  [
    [
      3770,
      3770
    ],
    "disallowed"
  ],
  [
    [
      3771,
      3773
    ],
    "valid"
  ],
  [
    [
      3774,
      3775
    ],
    "disallowed"
  ],
  [
    [
      3776,
      3780
    ],
    "valid"
  ],
  [
    [
      3781,
      3781
    ],
    "disallowed"
  ],
  [
    [
      3782,
      3782
    ],
    "valid"
  ],
  [
    [
      3783,
      3783
    ],
    "disallowed"
  ],
  [
    [
      3784,
      3789
    ],
    "valid"
  ],
  [
    [
      3790,
      3791
    ],
    "disallowed"
  ],
  [
    [
      3792,
      3801
    ],
    "valid"
  ],
  [
    [
      3802,
      3803
    ],
    "disallowed"
  ],
  [
    [
      3804,
      3804
    ],
    "mapped",
    [
      3755,
      3737
    ]
  ],
  [
    [
      3805,
      3805
    ],
    "mapped",
    [
      3755,
      3745
    ]
  ],
  [
    [
      3806,
      3807
    ],
    "valid"
  ],
  [
    [
      3808,
      3839
    ],
    "disallowed"
  ],
  [
    [
      3840,
      3840
    ],
    "valid"
  ],
  [
    [
      3841,
      3850
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      3851,
      3851
    ],
    "valid"
  ],
  [
    [
      3852,
      3852
    ],
    "mapped",
    [
      3851
    ]
  ],
  [
    [
      3853,
      3863
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      3864,
      3865
    ],
    "valid"
  ],
  [
    [
      3866,
      3871
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      3872,
      3881
    ],
    "valid"
  ],
  [
    [
      3882,
      3892
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      3893,
      3893
    ],
    "valid"
  ],
  [
    [
      3894,
      3894
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      3895,
      3895
    ],
    "valid"
  ],
  [
    [
      3896,
      3896
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      3897,
      3897
    ],
    "valid"
  ],
  [
    [
      3898,
      3901
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      3902,
      3906
    ],
    "valid"
  ],
  [
    [
      3907,
      3907
    ],
    "mapped",
    [
      3906,
      4023
    ]
  ],
  [
    [
      3908,
      3911
    ],
    "valid"
  ],
  [
    [
      3912,
      3912
    ],
    "disallowed"
  ],
  [
    [
      3913,
      3916
    ],
    "valid"
  ],
  [
    [
      3917,
      3917
    ],
    "mapped",
    [
      3916,
      4023
    ]
  ],
  [
    [
      3918,
      3921
    ],
    "valid"
  ],
  [
    [
      3922,
      3922
    ],
    "mapped",
    [
      3921,
      4023
    ]
  ],
  [
    [
      3923,
      3926
    ],
    "valid"
  ],
  [
    [
      3927,
      3927
    ],
    "mapped",
    [
      3926,
      4023
    ]
  ],
  [
    [
      3928,
      3931
    ],
    "valid"
  ],
  [
    [
      3932,
      3932
    ],
    "mapped",
    [
      3931,
      4023
    ]
  ],
  [
    [
      3933,
      3944
    ],
    "valid"
  ],
  [
    [
      3945,
      3945
    ],
    "mapped",
    [
      3904,
      4021
    ]
  ],
  [
    [
      3946,
      3946
    ],
    "valid"
  ],
  [
    [
      3947,
      3948
    ],
    "valid"
  ],
  [
    [
      3949,
      3952
    ],
    "disallowed"
  ],
  [
    [
      3953,
      3954
    ],
    "valid"
  ],
  [
    [
      3955,
      3955
    ],
    "mapped",
    [
      3953,
      3954
    ]
  ],
  [
    [
      3956,
      3956
    ],
    "valid"
  ],
  [
    [
      3957,
      3957
    ],
    "mapped",
    [
      3953,
      3956
    ]
  ],
  [
    [
      3958,
      3958
    ],
    "mapped",
    [
      4018,
      3968
    ]
  ],
  [
    [
      3959,
      3959
    ],
    "mapped",
    [
      4018,
      3953,
      3968
    ]
  ],
  [
    [
      3960,
      3960
    ],
    "mapped",
    [
      4019,
      3968
    ]
  ],
  [
    [
      3961,
      3961
    ],
    "mapped",
    [
      4019,
      3953,
      3968
    ]
  ],
  [
    [
      3962,
      3968
    ],
    "valid"
  ],
  [
    [
      3969,
      3969
    ],
    "mapped",
    [
      3953,
      3968
    ]
  ],
  [
    [
      3970,
      3972
    ],
    "valid"
  ],
  [
    [
      3973,
      3973
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      3974,
      3979
    ],
    "valid"
  ],
  [
    [
      3980,
      3983
    ],
    "valid"
  ],
  [
    [
      3984,
      3986
    ],
    "valid"
  ],
  [
    [
      3987,
      3987
    ],
    "mapped",
    [
      3986,
      4023
    ]
  ],
  [
    [
      3988,
      3989
    ],
    "valid"
  ],
  [
    [
      3990,
      3990
    ],
    "valid"
  ],
  [
    [
      3991,
      3991
    ],
    "valid"
  ],
  [
    [
      3992,
      3992
    ],
    "disallowed"
  ],
  [
    [
      3993,
      3996
    ],
    "valid"
  ],
  [
    [
      3997,
      3997
    ],
    "mapped",
    [
      3996,
      4023
    ]
  ],
  [
    [
      3998,
      4001
    ],
    "valid"
  ],
  [
    [
      4002,
      4002
    ],
    "mapped",
    [
      4001,
      4023
    ]
  ],
  [
    [
      4003,
      4006
    ],
    "valid"
  ],
  [
    [
      4007,
      4007
    ],
    "mapped",
    [
      4006,
      4023
    ]
  ],
  [
    [
      4008,
      4011
    ],
    "valid"
  ],
  [
    [
      4012,
      4012
    ],
    "mapped",
    [
      4011,
      4023
    ]
  ],
  [
    [
      4013,
      4013
    ],
    "valid"
  ],
  [
    [
      4014,
      4016
    ],
    "valid"
  ],
  [
    [
      4017,
      4023
    ],
    "valid"
  ],
  [
    [
      4024,
      4024
    ],
    "valid"
  ],
  [
    [
      4025,
      4025
    ],
    "mapped",
    [
      3984,
      4021
    ]
  ],
  [
    [
      4026,
      4028
    ],
    "valid"
  ],
  [
    [
      4029,
      4029
    ],
    "disallowed"
  ],
  [
    [
      4030,
      4037
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      4038,
      4038
    ],
    "valid"
  ],
  [
    [
      4039,
      4044
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      4045,
      4045
    ],
    "disallowed"
  ],
  [
    [
      4046,
      4046
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      4047,
      4047
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      4048,
      4049
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      4050,
      4052
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      4053,
      4056
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      4057,
      4058
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      4059,
      4095
    ],
    "disallowed"
  ],
  [
    [
      4096,
      4129
    ],
    "valid"
  ],
  [
    [
      4130,
      4130
    ],
    "valid"
  ],
  [
    [
      4131,
      4135
    ],
    "valid"
  ],
  [
    [
      4136,
      4136
    ],
    "valid"
  ],
  [
    [
      4137,
      4138
    ],
    "valid"
  ],
  [
    [
      4139,
      4139
    ],
    "valid"
  ],
  [
    [
      4140,
      4146
    ],
    "valid"
  ],
  [
    [
      4147,
      4149
    ],
    "valid"
  ],
  [
    [
      4150,
      4153
    ],
    "valid"
  ],
  [
    [
      4154,
      4159
    ],
    "valid"
  ],
  [
    [
      4160,
      4169
    ],
    "valid"
  ],
  [
    [
      4170,
      4175
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      4176,
      4185
    ],
    "valid"
  ],
  [
    [
      4186,
      4249
    ],
    "valid"
  ],
  [
    [
      4250,
      4253
    ],
    "valid"
  ],
  [
    [
      4254,
      4255
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      4256,
      4293
    ],
    "disallowed"
  ],
  [
    [
      4294,
      4294
    ],
    "disallowed"
  ],
  [
    [
      4295,
      4295
    ],
    "mapped",
    [
      11559
    ]
  ],
  [
    [
      4296,
      4300
    ],
    "disallowed"
  ],
  [
    [
      4301,
      4301
    ],
    "mapped",
    [
      11565
    ]
  ],
  [
    [
      4302,
      4303
    ],
    "disallowed"
  ],
  [
    [
      4304,
      4342
    ],
    "valid"
  ],
  [
    [
      4343,
      4344
    ],
    "valid"
  ],
  [
    [
      4345,
      4346
    ],
    "valid"
  ],
  [
    [
      4347,
      4347
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      4348,
      4348
    ],
    "mapped",
    [
      4316
    ]
  ],
  [
    [
      4349,
      4351
    ],
    "valid"
  ],
  [
    [
      4352,
      4441
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      4442,
      4446
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      4447,
      4448
    ],
    "disallowed"
  ],
  [
    [
      4449,
      4514
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      4515,
      4519
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      4520,
      4601
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      4602,
      4607
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      4608,
      4614
    ],
    "valid"
  ],
  [
    [
      4615,
      4615
    ],
    "valid"
  ],
  [
    [
      4616,
      4678
    ],
    "valid"
  ],
  [
    [
      4679,
      4679
    ],
    "valid"
  ],
  [
    [
      4680,
      4680
    ],
    "valid"
  ],
  [
    [
      4681,
      4681
    ],
    "disallowed"
  ],
  [
    [
      4682,
      4685
    ],
    "valid"
  ],
  [
    [
      4686,
      4687
    ],
    "disallowed"
  ],
  [
    [
      4688,
      4694
    ],
    "valid"
  ],
  [
    [
      4695,
      4695
    ],
    "disallowed"
  ],
  [
    [
      4696,
      4696
    ],
    "valid"
  ],
  [
    [
      4697,
      4697
    ],
    "disallowed"
  ],
  [
    [
      4698,
      4701
    ],
    "valid"
  ],
  [
    [
      4702,
      4703
    ],
    "disallowed"
  ],
  [
    [
      4704,
      4742
    ],
    "valid"
  ],
  [
    [
      4743,
      4743
    ],
    "valid"
  ],
  [
    [
      4744,
      4744
    ],
    "valid"
  ],
  [
    [
      4745,
      4745
    ],
    "disallowed"
  ],
  [
    [
      4746,
      4749
    ],
    "valid"
  ],
  [
    [
      4750,
      4751
    ],
    "disallowed"
  ],
  [
    [
      4752,
      4782
    ],
    "valid"
  ],
  [
    [
      4783,
      4783
    ],
    "valid"
  ],
  [
    [
      4784,
      4784
    ],
    "valid"
  ],
  [
    [
      4785,
      4785
    ],
    "disallowed"
  ],
  [
    [
      4786,
      4789
    ],
    "valid"
  ],
  [
    [
      4790,
      4791
    ],
    "disallowed"
  ],
  [
    [
      4792,
      4798
    ],
    "valid"
  ],
  [
    [
      4799,
      4799
    ],
    "disallowed"
  ],
  [
    [
      4800,
      4800
    ],
    "valid"
  ],
  [
    [
      4801,
      4801
    ],
    "disallowed"
  ],
  [
    [
      4802,
      4805
    ],
    "valid"
  ],
  [
    [
      4806,
      4807
    ],
    "disallowed"
  ],
  [
    [
      4808,
      4814
    ],
    "valid"
  ],
  [
    [
      4815,
      4815
    ],
    "valid"
  ],
  [
    [
      4816,
      4822
    ],
    "valid"
  ],
  [
    [
      4823,
      4823
    ],
    "disallowed"
  ],
  [
    [
      4824,
      4846
    ],
    "valid"
  ],
  [
    [
      4847,
      4847
    ],
    "valid"
  ],
  [
    [
      4848,
      4878
    ],
    "valid"
  ],
  [
    [
      4879,
      4879
    ],
    "valid"
  ],
  [
    [
      4880,
      4880
    ],
    "valid"
  ],
  [
    [
      4881,
      4881
    ],
    "disallowed"
  ],
  [
    [
      4882,
      4885
    ],
    "valid"
  ],
  [
    [
      4886,
      4887
    ],
    "disallowed"
  ],
  [
    [
      4888,
      4894
    ],
    "valid"
  ],
  [
    [
      4895,
      4895
    ],
    "valid"
  ],
  [
    [
      4896,
      4934
    ],
    "valid"
  ],
  [
    [
      4935,
      4935
    ],
    "valid"
  ],
  [
    [
      4936,
      4954
    ],
    "valid"
  ],
  [
    [
      4955,
      4956
    ],
    "disallowed"
  ],
  [
    [
      4957,
      4958
    ],
    "valid"
  ],
  [
    [
      4959,
      4959
    ],
    "valid"
  ],
  [
    [
      4960,
      4960
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      4961,
      4988
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      4989,
      4991
    ],
    "disallowed"
  ],
  [
    [
      4992,
      5007
    ],
    "valid"
  ],
  [
    [
      5008,
      5017
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      5018,
      5023
    ],
    "disallowed"
  ],
  [
    [
      5024,
      5108
    ],
    "valid"
  ],
  [
    [
      5109,
      5109
    ],
    "valid"
  ],
  [
    [
      5110,
      5111
    ],
    "disallowed"
  ],
  [
    [
      5112,
      5112
    ],
    "mapped",
    [
      5104
    ]
  ],
  [
    [
      5113,
      5113
    ],
    "mapped",
    [
      5105
    ]
  ],
  [
    [
      5114,
      5114
    ],
    "mapped",
    [
      5106
    ]
  ],
  [
    [
      5115,
      5115
    ],
    "mapped",
    [
      5107
    ]
  ],
  [
    [
      5116,
      5116
    ],
    "mapped",
    [
      5108
    ]
  ],
  [
    [
      5117,
      5117
    ],
    "mapped",
    [
      5109
    ]
  ],
  [
    [
      5118,
      5119
    ],
    "disallowed"
  ],
  [
    [
      5120,
      5120
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      5121,
      5740
    ],
    "valid"
  ],
  [
    [
      5741,
      5742
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      5743,
      5750
    ],
    "valid"
  ],
  [
    [
      5751,
      5759
    ],
    "valid"
  ],
  [
    [
      5760,
      5760
    ],
    "disallowed"
  ],
  [
    [
      5761,
      5786
    ],
    "valid"
  ],
  [
    [
      5787,
      5788
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      5789,
      5791
    ],
    "disallowed"
  ],
  [
    [
      5792,
      5866
    ],
    "valid"
  ],
  [
    [
      5867,
      5872
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      5873,
      5880
    ],
    "valid"
  ],
  [
    [
      5881,
      5887
    ],
    "disallowed"
  ],
  [
    [
      5888,
      5900
    ],
    "valid"
  ],
  [
    [
      5901,
      5901
    ],
    "disallowed"
  ],
  [
    [
      5902,
      5908
    ],
    "valid"
  ],
  [
    [
      5909,
      5919
    ],
    "disallowed"
  ],
  [
    [
      5920,
      5940
    ],
    "valid"
  ],
  [
    [
      5941,
      5942
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      5943,
      5951
    ],
    "disallowed"
  ],
  [
    [
      5952,
      5971
    ],
    "valid"
  ],
  [
    [
      5972,
      5983
    ],
    "disallowed"
  ],
  [
    [
      5984,
      5996
    ],
    "valid"
  ],
  [
    [
      5997,
      5997
    ],
    "disallowed"
  ],
  [
    [
      5998,
      6e3
    ],
    "valid"
  ],
  [
    [
      6001,
      6001
    ],
    "disallowed"
  ],
  [
    [
      6002,
      6003
    ],
    "valid"
  ],
  [
    [
      6004,
      6015
    ],
    "disallowed"
  ],
  [
    [
      6016,
      6067
    ],
    "valid"
  ],
  [
    [
      6068,
      6069
    ],
    "disallowed"
  ],
  [
    [
      6070,
      6099
    ],
    "valid"
  ],
  [
    [
      6100,
      6102
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      6103,
      6103
    ],
    "valid"
  ],
  [
    [
      6104,
      6107
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      6108,
      6108
    ],
    "valid"
  ],
  [
    [
      6109,
      6109
    ],
    "valid"
  ],
  [
    [
      6110,
      6111
    ],
    "disallowed"
  ],
  [
    [
      6112,
      6121
    ],
    "valid"
  ],
  [
    [
      6122,
      6127
    ],
    "disallowed"
  ],
  [
    [
      6128,
      6137
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      6138,
      6143
    ],
    "disallowed"
  ],
  [
    [
      6144,
      6149
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      6150,
      6150
    ],
    "disallowed"
  ],
  [
    [
      6151,
      6154
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      6155,
      6157
    ],
    "ignored"
  ],
  [
    [
      6158,
      6158
    ],
    "disallowed"
  ],
  [
    [
      6159,
      6159
    ],
    "disallowed"
  ],
  [
    [
      6160,
      6169
    ],
    "valid"
  ],
  [
    [
      6170,
      6175
    ],
    "disallowed"
  ],
  [
    [
      6176,
      6263
    ],
    "valid"
  ],
  [
    [
      6264,
      6271
    ],
    "disallowed"
  ],
  [
    [
      6272,
      6313
    ],
    "valid"
  ],
  [
    [
      6314,
      6314
    ],
    "valid"
  ],
  [
    [
      6315,
      6319
    ],
    "disallowed"
  ],
  [
    [
      6320,
      6389
    ],
    "valid"
  ],
  [
    [
      6390,
      6399
    ],
    "disallowed"
  ],
  [
    [
      6400,
      6428
    ],
    "valid"
  ],
  [
    [
      6429,
      6430
    ],
    "valid"
  ],
  [
    [
      6431,
      6431
    ],
    "disallowed"
  ],
  [
    [
      6432,
      6443
    ],
    "valid"
  ],
  [
    [
      6444,
      6447
    ],
    "disallowed"
  ],
  [
    [
      6448,
      6459
    ],
    "valid"
  ],
  [
    [
      6460,
      6463
    ],
    "disallowed"
  ],
  [
    [
      6464,
      6464
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      6465,
      6467
    ],
    "disallowed"
  ],
  [
    [
      6468,
      6469
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      6470,
      6509
    ],
    "valid"
  ],
  [
    [
      6510,
      6511
    ],
    "disallowed"
  ],
  [
    [
      6512,
      6516
    ],
    "valid"
  ],
  [
    [
      6517,
      6527
    ],
    "disallowed"
  ],
  [
    [
      6528,
      6569
    ],
    "valid"
  ],
  [
    [
      6570,
      6571
    ],
    "valid"
  ],
  [
    [
      6572,
      6575
    ],
    "disallowed"
  ],
  [
    [
      6576,
      6601
    ],
    "valid"
  ],
  [
    [
      6602,
      6607
    ],
    "disallowed"
  ],
  [
    [
      6608,
      6617
    ],
    "valid"
  ],
  [
    [
      6618,
      6618
    ],
    "valid",
    [],
    "XV8"
  ],
  [
    [
      6619,
      6621
    ],
    "disallowed"
  ],
  [
    [
      6622,
      6623
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      6624,
      6655
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      6656,
      6683
    ],
    "valid"
  ],
  [
    [
      6684,
      6685
    ],
    "disallowed"
  ],
  [
    [
      6686,
      6687
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      6688,
      6750
    ],
    "valid"
  ],
  [
    [
      6751,
      6751
    ],
    "disallowed"
  ],
  [
    [
      6752,
      6780
    ],
    "valid"
  ],
  [
    [
      6781,
      6782
    ],
    "disallowed"
  ],
  [
    [
      6783,
      6793
    ],
    "valid"
  ],
  [
    [
      6794,
      6799
    ],
    "disallowed"
  ],
  [
    [
      6800,
      6809
    ],
    "valid"
  ],
  [
    [
      6810,
      6815
    ],
    "disallowed"
  ],
  [
    [
      6816,
      6822
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      6823,
      6823
    ],
    "valid"
  ],
  [
    [
      6824,
      6829
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      6830,
      6831
    ],
    "disallowed"
  ],
  [
    [
      6832,
      6845
    ],
    "valid"
  ],
  [
    [
      6846,
      6846
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      6847,
      6911
    ],
    "disallowed"
  ],
  [
    [
      6912,
      6987
    ],
    "valid"
  ],
  [
    [
      6988,
      6991
    ],
    "disallowed"
  ],
  [
    [
      6992,
      7001
    ],
    "valid"
  ],
  [
    [
      7002,
      7018
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      7019,
      7027
    ],
    "valid"
  ],
  [
    [
      7028,
      7036
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      7037,
      7039
    ],
    "disallowed"
  ],
  [
    [
      7040,
      7082
    ],
    "valid"
  ],
  [
    [
      7083,
      7085
    ],
    "valid"
  ],
  [
    [
      7086,
      7097
    ],
    "valid"
  ],
  [
    [
      7098,
      7103
    ],
    "valid"
  ],
  [
    [
      7104,
      7155
    ],
    "valid"
  ],
  [
    [
      7156,
      7163
    ],
    "disallowed"
  ],
  [
    [
      7164,
      7167
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      7168,
      7223
    ],
    "valid"
  ],
  [
    [
      7224,
      7226
    ],
    "disallowed"
  ],
  [
    [
      7227,
      7231
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      7232,
      7241
    ],
    "valid"
  ],
  [
    [
      7242,
      7244
    ],
    "disallowed"
  ],
  [
    [
      7245,
      7293
    ],
    "valid"
  ],
  [
    [
      7294,
      7295
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      7296,
      7359
    ],
    "disallowed"
  ],
  [
    [
      7360,
      7367
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      7368,
      7375
    ],
    "disallowed"
  ],
  [
    [
      7376,
      7378
    ],
    "valid"
  ],
  [
    [
      7379,
      7379
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      7380,
      7410
    ],
    "valid"
  ],
  [
    [
      7411,
      7414
    ],
    "valid"
  ],
  [
    [
      7415,
      7415
    ],
    "disallowed"
  ],
  [
    [
      7416,
      7417
    ],
    "valid"
  ],
  [
    [
      7418,
      7423
    ],
    "disallowed"
  ],
  [
    [
      7424,
      7467
    ],
    "valid"
  ],
  [
    [
      7468,
      7468
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      7469,
      7469
    ],
    "mapped",
    [
      230
    ]
  ],
  [
    [
      7470,
      7470
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      7471,
      7471
    ],
    "valid"
  ],
  [
    [
      7472,
      7472
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      7473,
      7473
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      7474,
      7474
    ],
    "mapped",
    [
      477
    ]
  ],
  [
    [
      7475,
      7475
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      7476,
      7476
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      7477,
      7477
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      7478,
      7478
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      7479,
      7479
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      7480,
      7480
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      7481,
      7481
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      7482,
      7482
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      7483,
      7483
    ],
    "valid"
  ],
  [
    [
      7484,
      7484
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      7485,
      7485
    ],
    "mapped",
    [
      547
    ]
  ],
  [
    [
      7486,
      7486
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      7487,
      7487
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      7488,
      7488
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      7489,
      7489
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      7490,
      7490
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      7491,
      7491
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      7492,
      7492
    ],
    "mapped",
    [
      592
    ]
  ],
  [
    [
      7493,
      7493
    ],
    "mapped",
    [
      593
    ]
  ],
  [
    [
      7494,
      7494
    ],
    "mapped",
    [
      7426
    ]
  ],
  [
    [
      7495,
      7495
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      7496,
      7496
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      7497,
      7497
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      7498,
      7498
    ],
    "mapped",
    [
      601
    ]
  ],
  [
    [
      7499,
      7499
    ],
    "mapped",
    [
      603
    ]
  ],
  [
    [
      7500,
      7500
    ],
    "mapped",
    [
      604
    ]
  ],
  [
    [
      7501,
      7501
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      7502,
      7502
    ],
    "valid"
  ],
  [
    [
      7503,
      7503
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      7504,
      7504
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      7505,
      7505
    ],
    "mapped",
    [
      331
    ]
  ],
  [
    [
      7506,
      7506
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      7507,
      7507
    ],
    "mapped",
    [
      596
    ]
  ],
  [
    [
      7508,
      7508
    ],
    "mapped",
    [
      7446
    ]
  ],
  [
    [
      7509,
      7509
    ],
    "mapped",
    [
      7447
    ]
  ],
  [
    [
      7510,
      7510
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      7511,
      7511
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      7512,
      7512
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      7513,
      7513
    ],
    "mapped",
    [
      7453
    ]
  ],
  [
    [
      7514,
      7514
    ],
    "mapped",
    [
      623
    ]
  ],
  [
    [
      7515,
      7515
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      7516,
      7516
    ],
    "mapped",
    [
      7461
    ]
  ],
  [
    [
      7517,
      7517
    ],
    "mapped",
    [
      946
    ]
  ],
  [
    [
      7518,
      7518
    ],
    "mapped",
    [
      947
    ]
  ],
  [
    [
      7519,
      7519
    ],
    "mapped",
    [
      948
    ]
  ],
  [
    [
      7520,
      7520
    ],
    "mapped",
    [
      966
    ]
  ],
  [
    [
      7521,
      7521
    ],
    "mapped",
    [
      967
    ]
  ],
  [
    [
      7522,
      7522
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      7523,
      7523
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      7524,
      7524
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      7525,
      7525
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      7526,
      7526
    ],
    "mapped",
    [
      946
    ]
  ],
  [
    [
      7527,
      7527
    ],
    "mapped",
    [
      947
    ]
  ],
  [
    [
      7528,
      7528
    ],
    "mapped",
    [
      961
    ]
  ],
  [
    [
      7529,
      7529
    ],
    "mapped",
    [
      966
    ]
  ],
  [
    [
      7530,
      7530
    ],
    "mapped",
    [
      967
    ]
  ],
  [
    [
      7531,
      7531
    ],
    "valid"
  ],
  [
    [
      7532,
      7543
    ],
    "valid"
  ],
  [
    [
      7544,
      7544
    ],
    "mapped",
    [
      1085
    ]
  ],
  [
    [
      7545,
      7578
    ],
    "valid"
  ],
  [
    [
      7579,
      7579
    ],
    "mapped",
    [
      594
    ]
  ],
  [
    [
      7580,
      7580
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      7581,
      7581
    ],
    "mapped",
    [
      597
    ]
  ],
  [
    [
      7582,
      7582
    ],
    "mapped",
    [
      240
    ]
  ],
  [
    [
      7583,
      7583
    ],
    "mapped",
    [
      604
    ]
  ],
  [
    [
      7584,
      7584
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      7585,
      7585
    ],
    "mapped",
    [
      607
    ]
  ],
  [
    [
      7586,
      7586
    ],
    "mapped",
    [
      609
    ]
  ],
  [
    [
      7587,
      7587
    ],
    "mapped",
    [
      613
    ]
  ],
  [
    [
      7588,
      7588
    ],
    "mapped",
    [
      616
    ]
  ],
  [
    [
      7589,
      7589
    ],
    "mapped",
    [
      617
    ]
  ],
  [
    [
      7590,
      7590
    ],
    "mapped",
    [
      618
    ]
  ],
  [
    [
      7591,
      7591
    ],
    "mapped",
    [
      7547
    ]
  ],
  [
    [
      7592,
      7592
    ],
    "mapped",
    [
      669
    ]
  ],
  [
    [
      7593,
      7593
    ],
    "mapped",
    [
      621
    ]
  ],
  [
    [
      7594,
      7594
    ],
    "mapped",
    [
      7557
    ]
  ],
  [
    [
      7595,
      7595
    ],
    "mapped",
    [
      671
    ]
  ],
  [
    [
      7596,
      7596
    ],
    "mapped",
    [
      625
    ]
  ],
  [
    [
      7597,
      7597
    ],
    "mapped",
    [
      624
    ]
  ],
  [
    [
      7598,
      7598
    ],
    "mapped",
    [
      626
    ]
  ],
  [
    [
      7599,
      7599
    ],
    "mapped",
    [
      627
    ]
  ],
  [
    [
      7600,
      7600
    ],
    "mapped",
    [
      628
    ]
  ],
  [
    [
      7601,
      7601
    ],
    "mapped",
    [
      629
    ]
  ],
  [
    [
      7602,
      7602
    ],
    "mapped",
    [
      632
    ]
  ],
  [
    [
      7603,
      7603
    ],
    "mapped",
    [
      642
    ]
  ],
  [
    [
      7604,
      7604
    ],
    "mapped",
    [
      643
    ]
  ],
  [
    [
      7605,
      7605
    ],
    "mapped",
    [
      427
    ]
  ],
  [
    [
      7606,
      7606
    ],
    "mapped",
    [
      649
    ]
  ],
  [
    [
      7607,
      7607
    ],
    "mapped",
    [
      650
    ]
  ],
  [
    [
      7608,
      7608
    ],
    "mapped",
    [
      7452
    ]
  ],
  [
    [
      7609,
      7609
    ],
    "mapped",
    [
      651
    ]
  ],
  [
    [
      7610,
      7610
    ],
    "mapped",
    [
      652
    ]
  ],
  [
    [
      7611,
      7611
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      7612,
      7612
    ],
    "mapped",
    [
      656
    ]
  ],
  [
    [
      7613,
      7613
    ],
    "mapped",
    [
      657
    ]
  ],
  [
    [
      7614,
      7614
    ],
    "mapped",
    [
      658
    ]
  ],
  [
    [
      7615,
      7615
    ],
    "mapped",
    [
      952
    ]
  ],
  [
    [
      7616,
      7619
    ],
    "valid"
  ],
  [
    [
      7620,
      7626
    ],
    "valid"
  ],
  [
    [
      7627,
      7654
    ],
    "valid"
  ],
  [
    [
      7655,
      7669
    ],
    "valid"
  ],
  [
    [
      7670,
      7675
    ],
    "disallowed"
  ],
  [
    [
      7676,
      7676
    ],
    "valid"
  ],
  [
    [
      7677,
      7677
    ],
    "valid"
  ],
  [
    [
      7678,
      7679
    ],
    "valid"
  ],
  [
    [
      7680,
      7680
    ],
    "mapped",
    [
      7681
    ]
  ],
  [
    [
      7681,
      7681
    ],
    "valid"
  ],
  [
    [
      7682,
      7682
    ],
    "mapped",
    [
      7683
    ]
  ],
  [
    [
      7683,
      7683
    ],
    "valid"
  ],
  [
    [
      7684,
      7684
    ],
    "mapped",
    [
      7685
    ]
  ],
  [
    [
      7685,
      7685
    ],
    "valid"
  ],
  [
    [
      7686,
      7686
    ],
    "mapped",
    [
      7687
    ]
  ],
  [
    [
      7687,
      7687
    ],
    "valid"
  ],
  [
    [
      7688,
      7688
    ],
    "mapped",
    [
      7689
    ]
  ],
  [
    [
      7689,
      7689
    ],
    "valid"
  ],
  [
    [
      7690,
      7690
    ],
    "mapped",
    [
      7691
    ]
  ],
  [
    [
      7691,
      7691
    ],
    "valid"
  ],
  [
    [
      7692,
      7692
    ],
    "mapped",
    [
      7693
    ]
  ],
  [
    [
      7693,
      7693
    ],
    "valid"
  ],
  [
    [
      7694,
      7694
    ],
    "mapped",
    [
      7695
    ]
  ],
  [
    [
      7695,
      7695
    ],
    "valid"
  ],
  [
    [
      7696,
      7696
    ],
    "mapped",
    [
      7697
    ]
  ],
  [
    [
      7697,
      7697
    ],
    "valid"
  ],
  [
    [
      7698,
      7698
    ],
    "mapped",
    [
      7699
    ]
  ],
  [
    [
      7699,
      7699
    ],
    "valid"
  ],
  [
    [
      7700,
      7700
    ],
    "mapped",
    [
      7701
    ]
  ],
  [
    [
      7701,
      7701
    ],
    "valid"
  ],
  [
    [
      7702,
      7702
    ],
    "mapped",
    [
      7703
    ]
  ],
  [
    [
      7703,
      7703
    ],
    "valid"
  ],
  [
    [
      7704,
      7704
    ],
    "mapped",
    [
      7705
    ]
  ],
  [
    [
      7705,
      7705
    ],
    "valid"
  ],
  [
    [
      7706,
      7706
    ],
    "mapped",
    [
      7707
    ]
  ],
  [
    [
      7707,
      7707
    ],
    "valid"
  ],
  [
    [
      7708,
      7708
    ],
    "mapped",
    [
      7709
    ]
  ],
  [
    [
      7709,
      7709
    ],
    "valid"
  ],
  [
    [
      7710,
      7710
    ],
    "mapped",
    [
      7711
    ]
  ],
  [
    [
      7711,
      7711
    ],
    "valid"
  ],
  [
    [
      7712,
      7712
    ],
    "mapped",
    [
      7713
    ]
  ],
  [
    [
      7713,
      7713
    ],
    "valid"
  ],
  [
    [
      7714,
      7714
    ],
    "mapped",
    [
      7715
    ]
  ],
  [
    [
      7715,
      7715
    ],
    "valid"
  ],
  [
    [
      7716,
      7716
    ],
    "mapped",
    [
      7717
    ]
  ],
  [
    [
      7717,
      7717
    ],
    "valid"
  ],
  [
    [
      7718,
      7718
    ],
    "mapped",
    [
      7719
    ]
  ],
  [
    [
      7719,
      7719
    ],
    "valid"
  ],
  [
    [
      7720,
      7720
    ],
    "mapped",
    [
      7721
    ]
  ],
  [
    [
      7721,
      7721
    ],
    "valid"
  ],
  [
    [
      7722,
      7722
    ],
    "mapped",
    [
      7723
    ]
  ],
  [
    [
      7723,
      7723
    ],
    "valid"
  ],
  [
    [
      7724,
      7724
    ],
    "mapped",
    [
      7725
    ]
  ],
  [
    [
      7725,
      7725
    ],
    "valid"
  ],
  [
    [
      7726,
      7726
    ],
    "mapped",
    [
      7727
    ]
  ],
  [
    [
      7727,
      7727
    ],
    "valid"
  ],
  [
    [
      7728,
      7728
    ],
    "mapped",
    [
      7729
    ]
  ],
  [
    [
      7729,
      7729
    ],
    "valid"
  ],
  [
    [
      7730,
      7730
    ],
    "mapped",
    [
      7731
    ]
  ],
  [
    [
      7731,
      7731
    ],
    "valid"
  ],
  [
    [
      7732,
      7732
    ],
    "mapped",
    [
      7733
    ]
  ],
  [
    [
      7733,
      7733
    ],
    "valid"
  ],
  [
    [
      7734,
      7734
    ],
    "mapped",
    [
      7735
    ]
  ],
  [
    [
      7735,
      7735
    ],
    "valid"
  ],
  [
    [
      7736,
      7736
    ],
    "mapped",
    [
      7737
    ]
  ],
  [
    [
      7737,
      7737
    ],
    "valid"
  ],
  [
    [
      7738,
      7738
    ],
    "mapped",
    [
      7739
    ]
  ],
  [
    [
      7739,
      7739
    ],
    "valid"
  ],
  [
    [
      7740,
      7740
    ],
    "mapped",
    [
      7741
    ]
  ],
  [
    [
      7741,
      7741
    ],
    "valid"
  ],
  [
    [
      7742,
      7742
    ],
    "mapped",
    [
      7743
    ]
  ],
  [
    [
      7743,
      7743
    ],
    "valid"
  ],
  [
    [
      7744,
      7744
    ],
    "mapped",
    [
      7745
    ]
  ],
  [
    [
      7745,
      7745
    ],
    "valid"
  ],
  [
    [
      7746,
      7746
    ],
    "mapped",
    [
      7747
    ]
  ],
  [
    [
      7747,
      7747
    ],
    "valid"
  ],
  [
    [
      7748,
      7748
    ],
    "mapped",
    [
      7749
    ]
  ],
  [
    [
      7749,
      7749
    ],
    "valid"
  ],
  [
    [
      7750,
      7750
    ],
    "mapped",
    [
      7751
    ]
  ],
  [
    [
      7751,
      7751
    ],
    "valid"
  ],
  [
    [
      7752,
      7752
    ],
    "mapped",
    [
      7753
    ]
  ],
  [
    [
      7753,
      7753
    ],
    "valid"
  ],
  [
    [
      7754,
      7754
    ],
    "mapped",
    [
      7755
    ]
  ],
  [
    [
      7755,
      7755
    ],
    "valid"
  ],
  [
    [
      7756,
      7756
    ],
    "mapped",
    [
      7757
    ]
  ],
  [
    [
      7757,
      7757
    ],
    "valid"
  ],
  [
    [
      7758,
      7758
    ],
    "mapped",
    [
      7759
    ]
  ],
  [
    [
      7759,
      7759
    ],
    "valid"
  ],
  [
    [
      7760,
      7760
    ],
    "mapped",
    [
      7761
    ]
  ],
  [
    [
      7761,
      7761
    ],
    "valid"
  ],
  [
    [
      7762,
      7762
    ],
    "mapped",
    [
      7763
    ]
  ],
  [
    [
      7763,
      7763
    ],
    "valid"
  ],
  [
    [
      7764,
      7764
    ],
    "mapped",
    [
      7765
    ]
  ],
  [
    [
      7765,
      7765
    ],
    "valid"
  ],
  [
    [
      7766,
      7766
    ],
    "mapped",
    [
      7767
    ]
  ],
  [
    [
      7767,
      7767
    ],
    "valid"
  ],
  [
    [
      7768,
      7768
    ],
    "mapped",
    [
      7769
    ]
  ],
  [
    [
      7769,
      7769
    ],
    "valid"
  ],
  [
    [
      7770,
      7770
    ],
    "mapped",
    [
      7771
    ]
  ],
  [
    [
      7771,
      7771
    ],
    "valid"
  ],
  [
    [
      7772,
      7772
    ],
    "mapped",
    [
      7773
    ]
  ],
  [
    [
      7773,
      7773
    ],
    "valid"
  ],
  [
    [
      7774,
      7774
    ],
    "mapped",
    [
      7775
    ]
  ],
  [
    [
      7775,
      7775
    ],
    "valid"
  ],
  [
    [
      7776,
      7776
    ],
    "mapped",
    [
      7777
    ]
  ],
  [
    [
      7777,
      7777
    ],
    "valid"
  ],
  [
    [
      7778,
      7778
    ],
    "mapped",
    [
      7779
    ]
  ],
  [
    [
      7779,
      7779
    ],
    "valid"
  ],
  [
    [
      7780,
      7780
    ],
    "mapped",
    [
      7781
    ]
  ],
  [
    [
      7781,
      7781
    ],
    "valid"
  ],
  [
    [
      7782,
      7782
    ],
    "mapped",
    [
      7783
    ]
  ],
  [
    [
      7783,
      7783
    ],
    "valid"
  ],
  [
    [
      7784,
      7784
    ],
    "mapped",
    [
      7785
    ]
  ],
  [
    [
      7785,
      7785
    ],
    "valid"
  ],
  [
    [
      7786,
      7786
    ],
    "mapped",
    [
      7787
    ]
  ],
  [
    [
      7787,
      7787
    ],
    "valid"
  ],
  [
    [
      7788,
      7788
    ],
    "mapped",
    [
      7789
    ]
  ],
  [
    [
      7789,
      7789
    ],
    "valid"
  ],
  [
    [
      7790,
      7790
    ],
    "mapped",
    [
      7791
    ]
  ],
  [
    [
      7791,
      7791
    ],
    "valid"
  ],
  [
    [
      7792,
      7792
    ],
    "mapped",
    [
      7793
    ]
  ],
  [
    [
      7793,
      7793
    ],
    "valid"
  ],
  [
    [
      7794,
      7794
    ],
    "mapped",
    [
      7795
    ]
  ],
  [
    [
      7795,
      7795
    ],
    "valid"
  ],
  [
    [
      7796,
      7796
    ],
    "mapped",
    [
      7797
    ]
  ],
  [
    [
      7797,
      7797
    ],
    "valid"
  ],
  [
    [
      7798,
      7798
    ],
    "mapped",
    [
      7799
    ]
  ],
  [
    [
      7799,
      7799
    ],
    "valid"
  ],
  [
    [
      7800,
      7800
    ],
    "mapped",
    [
      7801
    ]
  ],
  [
    [
      7801,
      7801
    ],
    "valid"
  ],
  [
    [
      7802,
      7802
    ],
    "mapped",
    [
      7803
    ]
  ],
  [
    [
      7803,
      7803
    ],
    "valid"
  ],
  [
    [
      7804,
      7804
    ],
    "mapped",
    [
      7805
    ]
  ],
  [
    [
      7805,
      7805
    ],
    "valid"
  ],
  [
    [
      7806,
      7806
    ],
    "mapped",
    [
      7807
    ]
  ],
  [
    [
      7807,
      7807
    ],
    "valid"
  ],
  [
    [
      7808,
      7808
    ],
    "mapped",
    [
      7809
    ]
  ],
  [
    [
      7809,
      7809
    ],
    "valid"
  ],
  [
    [
      7810,
      7810
    ],
    "mapped",
    [
      7811
    ]
  ],
  [
    [
      7811,
      7811
    ],
    "valid"
  ],
  [
    [
      7812,
      7812
    ],
    "mapped",
    [
      7813
    ]
  ],
  [
    [
      7813,
      7813
    ],
    "valid"
  ],
  [
    [
      7814,
      7814
    ],
    "mapped",
    [
      7815
    ]
  ],
  [
    [
      7815,
      7815
    ],
    "valid"
  ],
  [
    [
      7816,
      7816
    ],
    "mapped",
    [
      7817
    ]
  ],
  [
    [
      7817,
      7817
    ],
    "valid"
  ],
  [
    [
      7818,
      7818
    ],
    "mapped",
    [
      7819
    ]
  ],
  [
    [
      7819,
      7819
    ],
    "valid"
  ],
  [
    [
      7820,
      7820
    ],
    "mapped",
    [
      7821
    ]
  ],
  [
    [
      7821,
      7821
    ],
    "valid"
  ],
  [
    [
      7822,
      7822
    ],
    "mapped",
    [
      7823
    ]
  ],
  [
    [
      7823,
      7823
    ],
    "valid"
  ],
  [
    [
      7824,
      7824
    ],
    "mapped",
    [
      7825
    ]
  ],
  [
    [
      7825,
      7825
    ],
    "valid"
  ],
  [
    [
      7826,
      7826
    ],
    "mapped",
    [
      7827
    ]
  ],
  [
    [
      7827,
      7827
    ],
    "valid"
  ],
  [
    [
      7828,
      7828
    ],
    "mapped",
    [
      7829
    ]
  ],
  [
    [
      7829,
      7833
    ],
    "valid"
  ],
  [
    [
      7834,
      7834
    ],
    "mapped",
    [
      97,
      702
    ]
  ],
  [
    [
      7835,
      7835
    ],
    "mapped",
    [
      7777
    ]
  ],
  [
    [
      7836,
      7837
    ],
    "valid"
  ],
  [
    [
      7838,
      7838
    ],
    "mapped",
    [
      115,
      115
    ]
  ],
  [
    [
      7839,
      7839
    ],
    "valid"
  ],
  [
    [
      7840,
      7840
    ],
    "mapped",
    [
      7841
    ]
  ],
  [
    [
      7841,
      7841
    ],
    "valid"
  ],
  [
    [
      7842,
      7842
    ],
    "mapped",
    [
      7843
    ]
  ],
  [
    [
      7843,
      7843
    ],
    "valid"
  ],
  [
    [
      7844,
      7844
    ],
    "mapped",
    [
      7845
    ]
  ],
  [
    [
      7845,
      7845
    ],
    "valid"
  ],
  [
    [
      7846,
      7846
    ],
    "mapped",
    [
      7847
    ]
  ],
  [
    [
      7847,
      7847
    ],
    "valid"
  ],
  [
    [
      7848,
      7848
    ],
    "mapped",
    [
      7849
    ]
  ],
  [
    [
      7849,
      7849
    ],
    "valid"
  ],
  [
    [
      7850,
      7850
    ],
    "mapped",
    [
      7851
    ]
  ],
  [
    [
      7851,
      7851
    ],
    "valid"
  ],
  [
    [
      7852,
      7852
    ],
    "mapped",
    [
      7853
    ]
  ],
  [
    [
      7853,
      7853
    ],
    "valid"
  ],
  [
    [
      7854,
      7854
    ],
    "mapped",
    [
      7855
    ]
  ],
  [
    [
      7855,
      7855
    ],
    "valid"
  ],
  [
    [
      7856,
      7856
    ],
    "mapped",
    [
      7857
    ]
  ],
  [
    [
      7857,
      7857
    ],
    "valid"
  ],
  [
    [
      7858,
      7858
    ],
    "mapped",
    [
      7859
    ]
  ],
  [
    [
      7859,
      7859
    ],
    "valid"
  ],
  [
    [
      7860,
      7860
    ],
    "mapped",
    [
      7861
    ]
  ],
  [
    [
      7861,
      7861
    ],
    "valid"
  ],
  [
    [
      7862,
      7862
    ],
    "mapped",
    [
      7863
    ]
  ],
  [
    [
      7863,
      7863
    ],
    "valid"
  ],
  [
    [
      7864,
      7864
    ],
    "mapped",
    [
      7865
    ]
  ],
  [
    [
      7865,
      7865
    ],
    "valid"
  ],
  [
    [
      7866,
      7866
    ],
    "mapped",
    [
      7867
    ]
  ],
  [
    [
      7867,
      7867
    ],
    "valid"
  ],
  [
    [
      7868,
      7868
    ],
    "mapped",
    [
      7869
    ]
  ],
  [
    [
      7869,
      7869
    ],
    "valid"
  ],
  [
    [
      7870,
      7870
    ],
    "mapped",
    [
      7871
    ]
  ],
  [
    [
      7871,
      7871
    ],
    "valid"
  ],
  [
    [
      7872,
      7872
    ],
    "mapped",
    [
      7873
    ]
  ],
  [
    [
      7873,
      7873
    ],
    "valid"
  ],
  [
    [
      7874,
      7874
    ],
    "mapped",
    [
      7875
    ]
  ],
  [
    [
      7875,
      7875
    ],
    "valid"
  ],
  [
    [
      7876,
      7876
    ],
    "mapped",
    [
      7877
    ]
  ],
  [
    [
      7877,
      7877
    ],
    "valid"
  ],
  [
    [
      7878,
      7878
    ],
    "mapped",
    [
      7879
    ]
  ],
  [
    [
      7879,
      7879
    ],
    "valid"
  ],
  [
    [
      7880,
      7880
    ],
    "mapped",
    [
      7881
    ]
  ],
  [
    [
      7881,
      7881
    ],
    "valid"
  ],
  [
    [
      7882,
      7882
    ],
    "mapped",
    [
      7883
    ]
  ],
  [
    [
      7883,
      7883
    ],
    "valid"
  ],
  [
    [
      7884,
      7884
    ],
    "mapped",
    [
      7885
    ]
  ],
  [
    [
      7885,
      7885
    ],
    "valid"
  ],
  [
    [
      7886,
      7886
    ],
    "mapped",
    [
      7887
    ]
  ],
  [
    [
      7887,
      7887
    ],
    "valid"
  ],
  [
    [
      7888,
      7888
    ],
    "mapped",
    [
      7889
    ]
  ],
  [
    [
      7889,
      7889
    ],
    "valid"
  ],
  [
    [
      7890,
      7890
    ],
    "mapped",
    [
      7891
    ]
  ],
  [
    [
      7891,
      7891
    ],
    "valid"
  ],
  [
    [
      7892,
      7892
    ],
    "mapped",
    [
      7893
    ]
  ],
  [
    [
      7893,
      7893
    ],
    "valid"
  ],
  [
    [
      7894,
      7894
    ],
    "mapped",
    [
      7895
    ]
  ],
  [
    [
      7895,
      7895
    ],
    "valid"
  ],
  [
    [
      7896,
      7896
    ],
    "mapped",
    [
      7897
    ]
  ],
  [
    [
      7897,
      7897
    ],
    "valid"
  ],
  [
    [
      7898,
      7898
    ],
    "mapped",
    [
      7899
    ]
  ],
  [
    [
      7899,
      7899
    ],
    "valid"
  ],
  [
    [
      7900,
      7900
    ],
    "mapped",
    [
      7901
    ]
  ],
  [
    [
      7901,
      7901
    ],
    "valid"
  ],
  [
    [
      7902,
      7902
    ],
    "mapped",
    [
      7903
    ]
  ],
  [
    [
      7903,
      7903
    ],
    "valid"
  ],
  [
    [
      7904,
      7904
    ],
    "mapped",
    [
      7905
    ]
  ],
  [
    [
      7905,
      7905
    ],
    "valid"
  ],
  [
    [
      7906,
      7906
    ],
    "mapped",
    [
      7907
    ]
  ],
  [
    [
      7907,
      7907
    ],
    "valid"
  ],
  [
    [
      7908,
      7908
    ],
    "mapped",
    [
      7909
    ]
  ],
  [
    [
      7909,
      7909
    ],
    "valid"
  ],
  [
    [
      7910,
      7910
    ],
    "mapped",
    [
      7911
    ]
  ],
  [
    [
      7911,
      7911
    ],
    "valid"
  ],
  [
    [
      7912,
      7912
    ],
    "mapped",
    [
      7913
    ]
  ],
  [
    [
      7913,
      7913
    ],
    "valid"
  ],
  [
    [
      7914,
      7914
    ],
    "mapped",
    [
      7915
    ]
  ],
  [
    [
      7915,
      7915
    ],
    "valid"
  ],
  [
    [
      7916,
      7916
    ],
    "mapped",
    [
      7917
    ]
  ],
  [
    [
      7917,
      7917
    ],
    "valid"
  ],
  [
    [
      7918,
      7918
    ],
    "mapped",
    [
      7919
    ]
  ],
  [
    [
      7919,
      7919
    ],
    "valid"
  ],
  [
    [
      7920,
      7920
    ],
    "mapped",
    [
      7921
    ]
  ],
  [
    [
      7921,
      7921
    ],
    "valid"
  ],
  [
    [
      7922,
      7922
    ],
    "mapped",
    [
      7923
    ]
  ],
  [
    [
      7923,
      7923
    ],
    "valid"
  ],
  [
    [
      7924,
      7924
    ],
    "mapped",
    [
      7925
    ]
  ],
  [
    [
      7925,
      7925
    ],
    "valid"
  ],
  [
    [
      7926,
      7926
    ],
    "mapped",
    [
      7927
    ]
  ],
  [
    [
      7927,
      7927
    ],
    "valid"
  ],
  [
    [
      7928,
      7928
    ],
    "mapped",
    [
      7929
    ]
  ],
  [
    [
      7929,
      7929
    ],
    "valid"
  ],
  [
    [
      7930,
      7930
    ],
    "mapped",
    [
      7931
    ]
  ],
  [
    [
      7931,
      7931
    ],
    "valid"
  ],
  [
    [
      7932,
      7932
    ],
    "mapped",
    [
      7933
    ]
  ],
  [
    [
      7933,
      7933
    ],
    "valid"
  ],
  [
    [
      7934,
      7934
    ],
    "mapped",
    [
      7935
    ]
  ],
  [
    [
      7935,
      7935
    ],
    "valid"
  ],
  [
    [
      7936,
      7943
    ],
    "valid"
  ],
  [
    [
      7944,
      7944
    ],
    "mapped",
    [
      7936
    ]
  ],
  [
    [
      7945,
      7945
    ],
    "mapped",
    [
      7937
    ]
  ],
  [
    [
      7946,
      7946
    ],
    "mapped",
    [
      7938
    ]
  ],
  [
    [
      7947,
      7947
    ],
    "mapped",
    [
      7939
    ]
  ],
  [
    [
      7948,
      7948
    ],
    "mapped",
    [
      7940
    ]
  ],
  [
    [
      7949,
      7949
    ],
    "mapped",
    [
      7941
    ]
  ],
  [
    [
      7950,
      7950
    ],
    "mapped",
    [
      7942
    ]
  ],
  [
    [
      7951,
      7951
    ],
    "mapped",
    [
      7943
    ]
  ],
  [
    [
      7952,
      7957
    ],
    "valid"
  ],
  [
    [
      7958,
      7959
    ],
    "disallowed"
  ],
  [
    [
      7960,
      7960
    ],
    "mapped",
    [
      7952
    ]
  ],
  [
    [
      7961,
      7961
    ],
    "mapped",
    [
      7953
    ]
  ],
  [
    [
      7962,
      7962
    ],
    "mapped",
    [
      7954
    ]
  ],
  [
    [
      7963,
      7963
    ],
    "mapped",
    [
      7955
    ]
  ],
  [
    [
      7964,
      7964
    ],
    "mapped",
    [
      7956
    ]
  ],
  [
    [
      7965,
      7965
    ],
    "mapped",
    [
      7957
    ]
  ],
  [
    [
      7966,
      7967
    ],
    "disallowed"
  ],
  [
    [
      7968,
      7975
    ],
    "valid"
  ],
  [
    [
      7976,
      7976
    ],
    "mapped",
    [
      7968
    ]
  ],
  [
    [
      7977,
      7977
    ],
    "mapped",
    [
      7969
    ]
  ],
  [
    [
      7978,
      7978
    ],
    "mapped",
    [
      7970
    ]
  ],
  [
    [
      7979,
      7979
    ],
    "mapped",
    [
      7971
    ]
  ],
  [
    [
      7980,
      7980
    ],
    "mapped",
    [
      7972
    ]
  ],
  [
    [
      7981,
      7981
    ],
    "mapped",
    [
      7973
    ]
  ],
  [
    [
      7982,
      7982
    ],
    "mapped",
    [
      7974
    ]
  ],
  [
    [
      7983,
      7983
    ],
    "mapped",
    [
      7975
    ]
  ],
  [
    [
      7984,
      7991
    ],
    "valid"
  ],
  [
    [
      7992,
      7992
    ],
    "mapped",
    [
      7984
    ]
  ],
  [
    [
      7993,
      7993
    ],
    "mapped",
    [
      7985
    ]
  ],
  [
    [
      7994,
      7994
    ],
    "mapped",
    [
      7986
    ]
  ],
  [
    [
      7995,
      7995
    ],
    "mapped",
    [
      7987
    ]
  ],
  [
    [
      7996,
      7996
    ],
    "mapped",
    [
      7988
    ]
  ],
  [
    [
      7997,
      7997
    ],
    "mapped",
    [
      7989
    ]
  ],
  [
    [
      7998,
      7998
    ],
    "mapped",
    [
      7990
    ]
  ],
  [
    [
      7999,
      7999
    ],
    "mapped",
    [
      7991
    ]
  ],
  [
    [
      8e3,
      8005
    ],
    "valid"
  ],
  [
    [
      8006,
      8007
    ],
    "disallowed"
  ],
  [
    [
      8008,
      8008
    ],
    "mapped",
    [
      8e3
    ]
  ],
  [
    [
      8009,
      8009
    ],
    "mapped",
    [
      8001
    ]
  ],
  [
    [
      8010,
      8010
    ],
    "mapped",
    [
      8002
    ]
  ],
  [
    [
      8011,
      8011
    ],
    "mapped",
    [
      8003
    ]
  ],
  [
    [
      8012,
      8012
    ],
    "mapped",
    [
      8004
    ]
  ],
  [
    [
      8013,
      8013
    ],
    "mapped",
    [
      8005
    ]
  ],
  [
    [
      8014,
      8015
    ],
    "disallowed"
  ],
  [
    [
      8016,
      8023
    ],
    "valid"
  ],
  [
    [
      8024,
      8024
    ],
    "disallowed"
  ],
  [
    [
      8025,
      8025
    ],
    "mapped",
    [
      8017
    ]
  ],
  [
    [
      8026,
      8026
    ],
    "disallowed"
  ],
  [
    [
      8027,
      8027
    ],
    "mapped",
    [
      8019
    ]
  ],
  [
    [
      8028,
      8028
    ],
    "disallowed"
  ],
  [
    [
      8029,
      8029
    ],
    "mapped",
    [
      8021
    ]
  ],
  [
    [
      8030,
      8030
    ],
    "disallowed"
  ],
  [
    [
      8031,
      8031
    ],
    "mapped",
    [
      8023
    ]
  ],
  [
    [
      8032,
      8039
    ],
    "valid"
  ],
  [
    [
      8040,
      8040
    ],
    "mapped",
    [
      8032
    ]
  ],
  [
    [
      8041,
      8041
    ],
    "mapped",
    [
      8033
    ]
  ],
  [
    [
      8042,
      8042
    ],
    "mapped",
    [
      8034
    ]
  ],
  [
    [
      8043,
      8043
    ],
    "mapped",
    [
      8035
    ]
  ],
  [
    [
      8044,
      8044
    ],
    "mapped",
    [
      8036
    ]
  ],
  [
    [
      8045,
      8045
    ],
    "mapped",
    [
      8037
    ]
  ],
  [
    [
      8046,
      8046
    ],
    "mapped",
    [
      8038
    ]
  ],
  [
    [
      8047,
      8047
    ],
    "mapped",
    [
      8039
    ]
  ],
  [
    [
      8048,
      8048
    ],
    "valid"
  ],
  [
    [
      8049,
      8049
    ],
    "mapped",
    [
      940
    ]
  ],
  [
    [
      8050,
      8050
    ],
    "valid"
  ],
  [
    [
      8051,
      8051
    ],
    "mapped",
    [
      941
    ]
  ],
  [
    [
      8052,
      8052
    ],
    "valid"
  ],
  [
    [
      8053,
      8053
    ],
    "mapped",
    [
      942
    ]
  ],
  [
    [
      8054,
      8054
    ],
    "valid"
  ],
  [
    [
      8055,
      8055
    ],
    "mapped",
    [
      943
    ]
  ],
  [
    [
      8056,
      8056
    ],
    "valid"
  ],
  [
    [
      8057,
      8057
    ],
    "mapped",
    [
      972
    ]
  ],
  [
    [
      8058,
      8058
    ],
    "valid"
  ],
  [
    [
      8059,
      8059
    ],
    "mapped",
    [
      973
    ]
  ],
  [
    [
      8060,
      8060
    ],
    "valid"
  ],
  [
    [
      8061,
      8061
    ],
    "mapped",
    [
      974
    ]
  ],
  [
    [
      8062,
      8063
    ],
    "disallowed"
  ],
  [
    [
      8064,
      8064
    ],
    "mapped",
    [
      7936,
      953
    ]
  ],
  [
    [
      8065,
      8065
    ],
    "mapped",
    [
      7937,
      953
    ]
  ],
  [
    [
      8066,
      8066
    ],
    "mapped",
    [
      7938,
      953
    ]
  ],
  [
    [
      8067,
      8067
    ],
    "mapped",
    [
      7939,
      953
    ]
  ],
  [
    [
      8068,
      8068
    ],
    "mapped",
    [
      7940,
      953
    ]
  ],
  [
    [
      8069,
      8069
    ],
    "mapped",
    [
      7941,
      953
    ]
  ],
  [
    [
      8070,
      8070
    ],
    "mapped",
    [
      7942,
      953
    ]
  ],
  [
    [
      8071,
      8071
    ],
    "mapped",
    [
      7943,
      953
    ]
  ],
  [
    [
      8072,
      8072
    ],
    "mapped",
    [
      7936,
      953
    ]
  ],
  [
    [
      8073,
      8073
    ],
    "mapped",
    [
      7937,
      953
    ]
  ],
  [
    [
      8074,
      8074
    ],
    "mapped",
    [
      7938,
      953
    ]
  ],
  [
    [
      8075,
      8075
    ],
    "mapped",
    [
      7939,
      953
    ]
  ],
  [
    [
      8076,
      8076
    ],
    "mapped",
    [
      7940,
      953
    ]
  ],
  [
    [
      8077,
      8077
    ],
    "mapped",
    [
      7941,
      953
    ]
  ],
  [
    [
      8078,
      8078
    ],
    "mapped",
    [
      7942,
      953
    ]
  ],
  [
    [
      8079,
      8079
    ],
    "mapped",
    [
      7943,
      953
    ]
  ],
  [
    [
      8080,
      8080
    ],
    "mapped",
    [
      7968,
      953
    ]
  ],
  [
    [
      8081,
      8081
    ],
    "mapped",
    [
      7969,
      953
    ]
  ],
  [
    [
      8082,
      8082
    ],
    "mapped",
    [
      7970,
      953
    ]
  ],
  [
    [
      8083,
      8083
    ],
    "mapped",
    [
      7971,
      953
    ]
  ],
  [
    [
      8084,
      8084
    ],
    "mapped",
    [
      7972,
      953
    ]
  ],
  [
    [
      8085,
      8085
    ],
    "mapped",
    [
      7973,
      953
    ]
  ],
  [
    [
      8086,
      8086
    ],
    "mapped",
    [
      7974,
      953
    ]
  ],
  [
    [
      8087,
      8087
    ],
    "mapped",
    [
      7975,
      953
    ]
  ],
  [
    [
      8088,
      8088
    ],
    "mapped",
    [
      7968,
      953
    ]
  ],
  [
    [
      8089,
      8089
    ],
    "mapped",
    [
      7969,
      953
    ]
  ],
  [
    [
      8090,
      8090
    ],
    "mapped",
    [
      7970,
      953
    ]
  ],
  [
    [
      8091,
      8091
    ],
    "mapped",
    [
      7971,
      953
    ]
  ],
  [
    [
      8092,
      8092
    ],
    "mapped",
    [
      7972,
      953
    ]
  ],
  [
    [
      8093,
      8093
    ],
    "mapped",
    [
      7973,
      953
    ]
  ],
  [
    [
      8094,
      8094
    ],
    "mapped",
    [
      7974,
      953
    ]
  ],
  [
    [
      8095,
      8095
    ],
    "mapped",
    [
      7975,
      953
    ]
  ],
  [
    [
      8096,
      8096
    ],
    "mapped",
    [
      8032,
      953
    ]
  ],
  [
    [
      8097,
      8097
    ],
    "mapped",
    [
      8033,
      953
    ]
  ],
  [
    [
      8098,
      8098
    ],
    "mapped",
    [
      8034,
      953
    ]
  ],
  [
    [
      8099,
      8099
    ],
    "mapped",
    [
      8035,
      953
    ]
  ],
  [
    [
      8100,
      8100
    ],
    "mapped",
    [
      8036,
      953
    ]
  ],
  [
    [
      8101,
      8101
    ],
    "mapped",
    [
      8037,
      953
    ]
  ],
  [
    [
      8102,
      8102
    ],
    "mapped",
    [
      8038,
      953
    ]
  ],
  [
    [
      8103,
      8103
    ],
    "mapped",
    [
      8039,
      953
    ]
  ],
  [
    [
      8104,
      8104
    ],
    "mapped",
    [
      8032,
      953
    ]
  ],
  [
    [
      8105,
      8105
    ],
    "mapped",
    [
      8033,
      953
    ]
  ],
  [
    [
      8106,
      8106
    ],
    "mapped",
    [
      8034,
      953
    ]
  ],
  [
    [
      8107,
      8107
    ],
    "mapped",
    [
      8035,
      953
    ]
  ],
  [
    [
      8108,
      8108
    ],
    "mapped",
    [
      8036,
      953
    ]
  ],
  [
    [
      8109,
      8109
    ],
    "mapped",
    [
      8037,
      953
    ]
  ],
  [
    [
      8110,
      8110
    ],
    "mapped",
    [
      8038,
      953
    ]
  ],
  [
    [
      8111,
      8111
    ],
    "mapped",
    [
      8039,
      953
    ]
  ],
  [
    [
      8112,
      8113
    ],
    "valid"
  ],
  [
    [
      8114,
      8114
    ],
    "mapped",
    [
      8048,
      953
    ]
  ],
  [
    [
      8115,
      8115
    ],
    "mapped",
    [
      945,
      953
    ]
  ],
  [
    [
      8116,
      8116
    ],
    "mapped",
    [
      940,
      953
    ]
  ],
  [
    [
      8117,
      8117
    ],
    "disallowed"
  ],
  [
    [
      8118,
      8118
    ],
    "valid"
  ],
  [
    [
      8119,
      8119
    ],
    "mapped",
    [
      8118,
      953
    ]
  ],
  [
    [
      8120,
      8120
    ],
    "mapped",
    [
      8112
    ]
  ],
  [
    [
      8121,
      8121
    ],
    "mapped",
    [
      8113
    ]
  ],
  [
    [
      8122,
      8122
    ],
    "mapped",
    [
      8048
    ]
  ],
  [
    [
      8123,
      8123
    ],
    "mapped",
    [
      940
    ]
  ],
  [
    [
      8124,
      8124
    ],
    "mapped",
    [
      945,
      953
    ]
  ],
  [
    [
      8125,
      8125
    ],
    "disallowed_STD3_mapped",
    [
      32,
      787
    ]
  ],
  [
    [
      8126,
      8126
    ],
    "mapped",
    [
      953
    ]
  ],
  [
    [
      8127,
      8127
    ],
    "disallowed_STD3_mapped",
    [
      32,
      787
    ]
  ],
  [
    [
      8128,
      8128
    ],
    "disallowed_STD3_mapped",
    [
      32,
      834
    ]
  ],
  [
    [
      8129,
      8129
    ],
    "disallowed_STD3_mapped",
    [
      32,
      776,
      834
    ]
  ],
  [
    [
      8130,
      8130
    ],
    "mapped",
    [
      8052,
      953
    ]
  ],
  [
    [
      8131,
      8131
    ],
    "mapped",
    [
      951,
      953
    ]
  ],
  [
    [
      8132,
      8132
    ],
    "mapped",
    [
      942,
      953
    ]
  ],
  [
    [
      8133,
      8133
    ],
    "disallowed"
  ],
  [
    [
      8134,
      8134
    ],
    "valid"
  ],
  [
    [
      8135,
      8135
    ],
    "mapped",
    [
      8134,
      953
    ]
  ],
  [
    [
      8136,
      8136
    ],
    "mapped",
    [
      8050
    ]
  ],
  [
    [
      8137,
      8137
    ],
    "mapped",
    [
      941
    ]
  ],
  [
    [
      8138,
      8138
    ],
    "mapped",
    [
      8052
    ]
  ],
  [
    [
      8139,
      8139
    ],
    "mapped",
    [
      942
    ]
  ],
  [
    [
      8140,
      8140
    ],
    "mapped",
    [
      951,
      953
    ]
  ],
  [
    [
      8141,
      8141
    ],
    "disallowed_STD3_mapped",
    [
      32,
      787,
      768
    ]
  ],
  [
    [
      8142,
      8142
    ],
    "disallowed_STD3_mapped",
    [
      32,
      787,
      769
    ]
  ],
  [
    [
      8143,
      8143
    ],
    "disallowed_STD3_mapped",
    [
      32,
      787,
      834
    ]
  ],
  [
    [
      8144,
      8146
    ],
    "valid"
  ],
  [
    [
      8147,
      8147
    ],
    "mapped",
    [
      912
    ]
  ],
  [
    [
      8148,
      8149
    ],
    "disallowed"
  ],
  [
    [
      8150,
      8151
    ],
    "valid"
  ],
  [
    [
      8152,
      8152
    ],
    "mapped",
    [
      8144
    ]
  ],
  [
    [
      8153,
      8153
    ],
    "mapped",
    [
      8145
    ]
  ],
  [
    [
      8154,
      8154
    ],
    "mapped",
    [
      8054
    ]
  ],
  [
    [
      8155,
      8155
    ],
    "mapped",
    [
      943
    ]
  ],
  [
    [
      8156,
      8156
    ],
    "disallowed"
  ],
  [
    [
      8157,
      8157
    ],
    "disallowed_STD3_mapped",
    [
      32,
      788,
      768
    ]
  ],
  [
    [
      8158,
      8158
    ],
    "disallowed_STD3_mapped",
    [
      32,
      788,
      769
    ]
  ],
  [
    [
      8159,
      8159
    ],
    "disallowed_STD3_mapped",
    [
      32,
      788,
      834
    ]
  ],
  [
    [
      8160,
      8162
    ],
    "valid"
  ],
  [
    [
      8163,
      8163
    ],
    "mapped",
    [
      944
    ]
  ],
  [
    [
      8164,
      8167
    ],
    "valid"
  ],
  [
    [
      8168,
      8168
    ],
    "mapped",
    [
      8160
    ]
  ],
  [
    [
      8169,
      8169
    ],
    "mapped",
    [
      8161
    ]
  ],
  [
    [
      8170,
      8170
    ],
    "mapped",
    [
      8058
    ]
  ],
  [
    [
      8171,
      8171
    ],
    "mapped",
    [
      973
    ]
  ],
  [
    [
      8172,
      8172
    ],
    "mapped",
    [
      8165
    ]
  ],
  [
    [
      8173,
      8173
    ],
    "disallowed_STD3_mapped",
    [
      32,
      776,
      768
    ]
  ],
  [
    [
      8174,
      8174
    ],
    "disallowed_STD3_mapped",
    [
      32,
      776,
      769
    ]
  ],
  [
    [
      8175,
      8175
    ],
    "disallowed_STD3_mapped",
    [
      96
    ]
  ],
  [
    [
      8176,
      8177
    ],
    "disallowed"
  ],
  [
    [
      8178,
      8178
    ],
    "mapped",
    [
      8060,
      953
    ]
  ],
  [
    [
      8179,
      8179
    ],
    "mapped",
    [
      969,
      953
    ]
  ],
  [
    [
      8180,
      8180
    ],
    "mapped",
    [
      974,
      953
    ]
  ],
  [
    [
      8181,
      8181
    ],
    "disallowed"
  ],
  [
    [
      8182,
      8182
    ],
    "valid"
  ],
  [
    [
      8183,
      8183
    ],
    "mapped",
    [
      8182,
      953
    ]
  ],
  [
    [
      8184,
      8184
    ],
    "mapped",
    [
      8056
    ]
  ],
  [
    [
      8185,
      8185
    ],
    "mapped",
    [
      972
    ]
  ],
  [
    [
      8186,
      8186
    ],
    "mapped",
    [
      8060
    ]
  ],
  [
    [
      8187,
      8187
    ],
    "mapped",
    [
      974
    ]
  ],
  [
    [
      8188,
      8188
    ],
    "mapped",
    [
      969,
      953
    ]
  ],
  [
    [
      8189,
      8189
    ],
    "disallowed_STD3_mapped",
    [
      32,
      769
    ]
  ],
  [
    [
      8190,
      8190
    ],
    "disallowed_STD3_mapped",
    [
      32,
      788
    ]
  ],
  [
    [
      8191,
      8191
    ],
    "disallowed"
  ],
  [
    [
      8192,
      8202
    ],
    "disallowed_STD3_mapped",
    [
      32
    ]
  ],
  [
    [
      8203,
      8203
    ],
    "ignored"
  ],
  [
    [
      8204,
      8205
    ],
    "deviation",
    []
  ],
  [
    [
      8206,
      8207
    ],
    "disallowed"
  ],
  [
    [
      8208,
      8208
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8209,
      8209
    ],
    "mapped",
    [
      8208
    ]
  ],
  [
    [
      8210,
      8214
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8215,
      8215
    ],
    "disallowed_STD3_mapped",
    [
      32,
      819
    ]
  ],
  [
    [
      8216,
      8227
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8228,
      8230
    ],
    "disallowed"
  ],
  [
    [
      8231,
      8231
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8232,
      8238
    ],
    "disallowed"
  ],
  [
    [
      8239,
      8239
    ],
    "disallowed_STD3_mapped",
    [
      32
    ]
  ],
  [
    [
      8240,
      8242
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8243,
      8243
    ],
    "mapped",
    [
      8242,
      8242
    ]
  ],
  [
    [
      8244,
      8244
    ],
    "mapped",
    [
      8242,
      8242,
      8242
    ]
  ],
  [
    [
      8245,
      8245
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8246,
      8246
    ],
    "mapped",
    [
      8245,
      8245
    ]
  ],
  [
    [
      8247,
      8247
    ],
    "mapped",
    [
      8245,
      8245,
      8245
    ]
  ],
  [
    [
      8248,
      8251
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8252,
      8252
    ],
    "disallowed_STD3_mapped",
    [
      33,
      33
    ]
  ],
  [
    [
      8253,
      8253
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8254,
      8254
    ],
    "disallowed_STD3_mapped",
    [
      32,
      773
    ]
  ],
  [
    [
      8255,
      8262
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8263,
      8263
    ],
    "disallowed_STD3_mapped",
    [
      63,
      63
    ]
  ],
  [
    [
      8264,
      8264
    ],
    "disallowed_STD3_mapped",
    [
      63,
      33
    ]
  ],
  [
    [
      8265,
      8265
    ],
    "disallowed_STD3_mapped",
    [
      33,
      63
    ]
  ],
  [
    [
      8266,
      8269
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8270,
      8274
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8275,
      8276
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8277,
      8278
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8279,
      8279
    ],
    "mapped",
    [
      8242,
      8242,
      8242,
      8242
    ]
  ],
  [
    [
      8280,
      8286
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8287,
      8287
    ],
    "disallowed_STD3_mapped",
    [
      32
    ]
  ],
  [
    [
      8288,
      8288
    ],
    "ignored"
  ],
  [
    [
      8289,
      8291
    ],
    "disallowed"
  ],
  [
    [
      8292,
      8292
    ],
    "ignored"
  ],
  [
    [
      8293,
      8293
    ],
    "disallowed"
  ],
  [
    [
      8294,
      8297
    ],
    "disallowed"
  ],
  [
    [
      8298,
      8303
    ],
    "disallowed"
  ],
  [
    [
      8304,
      8304
    ],
    "mapped",
    [
      48
    ]
  ],
  [
    [
      8305,
      8305
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      8306,
      8307
    ],
    "disallowed"
  ],
  [
    [
      8308,
      8308
    ],
    "mapped",
    [
      52
    ]
  ],
  [
    [
      8309,
      8309
    ],
    "mapped",
    [
      53
    ]
  ],
  [
    [
      8310,
      8310
    ],
    "mapped",
    [
      54
    ]
  ],
  [
    [
      8311,
      8311
    ],
    "mapped",
    [
      55
    ]
  ],
  [
    [
      8312,
      8312
    ],
    "mapped",
    [
      56
    ]
  ],
  [
    [
      8313,
      8313
    ],
    "mapped",
    [
      57
    ]
  ],
  [
    [
      8314,
      8314
    ],
    "disallowed_STD3_mapped",
    [
      43
    ]
  ],
  [
    [
      8315,
      8315
    ],
    "mapped",
    [
      8722
    ]
  ],
  [
    [
      8316,
      8316
    ],
    "disallowed_STD3_mapped",
    [
      61
    ]
  ],
  [
    [
      8317,
      8317
    ],
    "disallowed_STD3_mapped",
    [
      40
    ]
  ],
  [
    [
      8318,
      8318
    ],
    "disallowed_STD3_mapped",
    [
      41
    ]
  ],
  [
    [
      8319,
      8319
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      8320,
      8320
    ],
    "mapped",
    [
      48
    ]
  ],
  [
    [
      8321,
      8321
    ],
    "mapped",
    [
      49
    ]
  ],
  [
    [
      8322,
      8322
    ],
    "mapped",
    [
      50
    ]
  ],
  [
    [
      8323,
      8323
    ],
    "mapped",
    [
      51
    ]
  ],
  [
    [
      8324,
      8324
    ],
    "mapped",
    [
      52
    ]
  ],
  [
    [
      8325,
      8325
    ],
    "mapped",
    [
      53
    ]
  ],
  [
    [
      8326,
      8326
    ],
    "mapped",
    [
      54
    ]
  ],
  [
    [
      8327,
      8327
    ],
    "mapped",
    [
      55
    ]
  ],
  [
    [
      8328,
      8328
    ],
    "mapped",
    [
      56
    ]
  ],
  [
    [
      8329,
      8329
    ],
    "mapped",
    [
      57
    ]
  ],
  [
    [
      8330,
      8330
    ],
    "disallowed_STD3_mapped",
    [
      43
    ]
  ],
  [
    [
      8331,
      8331
    ],
    "mapped",
    [
      8722
    ]
  ],
  [
    [
      8332,
      8332
    ],
    "disallowed_STD3_mapped",
    [
      61
    ]
  ],
  [
    [
      8333,
      8333
    ],
    "disallowed_STD3_mapped",
    [
      40
    ]
  ],
  [
    [
      8334,
      8334
    ],
    "disallowed_STD3_mapped",
    [
      41
    ]
  ],
  [
    [
      8335,
      8335
    ],
    "disallowed"
  ],
  [
    [
      8336,
      8336
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      8337,
      8337
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      8338,
      8338
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      8339,
      8339
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      8340,
      8340
    ],
    "mapped",
    [
      601
    ]
  ],
  [
    [
      8341,
      8341
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      8342,
      8342
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      8343,
      8343
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      8344,
      8344
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      8345,
      8345
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      8346,
      8346
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      8347,
      8347
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      8348,
      8348
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      8349,
      8351
    ],
    "disallowed"
  ],
  [
    [
      8352,
      8359
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8360,
      8360
    ],
    "mapped",
    [
      114,
      115
    ]
  ],
  [
    [
      8361,
      8362
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8363,
      8363
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8364,
      8364
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8365,
      8367
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8368,
      8369
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8370,
      8373
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8374,
      8376
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8377,
      8377
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8378,
      8378
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8379,
      8381
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8382,
      8382
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8383,
      8399
    ],
    "disallowed"
  ],
  [
    [
      8400,
      8417
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8418,
      8419
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8420,
      8426
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8427,
      8427
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8428,
      8431
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8432,
      8432
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8433,
      8447
    ],
    "disallowed"
  ],
  [
    [
      8448,
      8448
    ],
    "disallowed_STD3_mapped",
    [
      97,
      47,
      99
    ]
  ],
  [
    [
      8449,
      8449
    ],
    "disallowed_STD3_mapped",
    [
      97,
      47,
      115
    ]
  ],
  [
    [
      8450,
      8450
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      8451,
      8451
    ],
    "mapped",
    [
      176,
      99
    ]
  ],
  [
    [
      8452,
      8452
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8453,
      8453
    ],
    "disallowed_STD3_mapped",
    [
      99,
      47,
      111
    ]
  ],
  [
    [
      8454,
      8454
    ],
    "disallowed_STD3_mapped",
    [
      99,
      47,
      117
    ]
  ],
  [
    [
      8455,
      8455
    ],
    "mapped",
    [
      603
    ]
  ],
  [
    [
      8456,
      8456
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8457,
      8457
    ],
    "mapped",
    [
      176,
      102
    ]
  ],
  [
    [
      8458,
      8458
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      8459,
      8462
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      8463,
      8463
    ],
    "mapped",
    [
      295
    ]
  ],
  [
    [
      8464,
      8465
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      8466,
      8467
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      8468,
      8468
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8469,
      8469
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      8470,
      8470
    ],
    "mapped",
    [
      110,
      111
    ]
  ],
  [
    [
      8471,
      8472
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8473,
      8473
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      8474,
      8474
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      8475,
      8477
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      8478,
      8479
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8480,
      8480
    ],
    "mapped",
    [
      115,
      109
    ]
  ],
  [
    [
      8481,
      8481
    ],
    "mapped",
    [
      116,
      101,
      108
    ]
  ],
  [
    [
      8482,
      8482
    ],
    "mapped",
    [
      116,
      109
    ]
  ],
  [
    [
      8483,
      8483
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8484,
      8484
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      8485,
      8485
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8486,
      8486
    ],
    "mapped",
    [
      969
    ]
  ],
  [
    [
      8487,
      8487
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8488,
      8488
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      8489,
      8489
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8490,
      8490
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      8491,
      8491
    ],
    "mapped",
    [
      229
    ]
  ],
  [
    [
      8492,
      8492
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      8493,
      8493
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      8494,
      8494
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8495,
      8496
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      8497,
      8497
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      8498,
      8498
    ],
    "disallowed"
  ],
  [
    [
      8499,
      8499
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      8500,
      8500
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      8501,
      8501
    ],
    "mapped",
    [
      1488
    ]
  ],
  [
    [
      8502,
      8502
    ],
    "mapped",
    [
      1489
    ]
  ],
  [
    [
      8503,
      8503
    ],
    "mapped",
    [
      1490
    ]
  ],
  [
    [
      8504,
      8504
    ],
    "mapped",
    [
      1491
    ]
  ],
  [
    [
      8505,
      8505
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      8506,
      8506
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8507,
      8507
    ],
    "mapped",
    [
      102,
      97,
      120
    ]
  ],
  [
    [
      8508,
      8508
    ],
    "mapped",
    [
      960
    ]
  ],
  [
    [
      8509,
      8510
    ],
    "mapped",
    [
      947
    ]
  ],
  [
    [
      8511,
      8511
    ],
    "mapped",
    [
      960
    ]
  ],
  [
    [
      8512,
      8512
    ],
    "mapped",
    [
      8721
    ]
  ],
  [
    [
      8513,
      8516
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8517,
      8518
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      8519,
      8519
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      8520,
      8520
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      8521,
      8521
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      8522,
      8523
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8524,
      8524
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8525,
      8525
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8526,
      8526
    ],
    "valid"
  ],
  [
    [
      8527,
      8527
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8528,
      8528
    ],
    "mapped",
    [
      49,
      8260,
      55
    ]
  ],
  [
    [
      8529,
      8529
    ],
    "mapped",
    [
      49,
      8260,
      57
    ]
  ],
  [
    [
      8530,
      8530
    ],
    "mapped",
    [
      49,
      8260,
      49,
      48
    ]
  ],
  [
    [
      8531,
      8531
    ],
    "mapped",
    [
      49,
      8260,
      51
    ]
  ],
  [
    [
      8532,
      8532
    ],
    "mapped",
    [
      50,
      8260,
      51
    ]
  ],
  [
    [
      8533,
      8533
    ],
    "mapped",
    [
      49,
      8260,
      53
    ]
  ],
  [
    [
      8534,
      8534
    ],
    "mapped",
    [
      50,
      8260,
      53
    ]
  ],
  [
    [
      8535,
      8535
    ],
    "mapped",
    [
      51,
      8260,
      53
    ]
  ],
  [
    [
      8536,
      8536
    ],
    "mapped",
    [
      52,
      8260,
      53
    ]
  ],
  [
    [
      8537,
      8537
    ],
    "mapped",
    [
      49,
      8260,
      54
    ]
  ],
  [
    [
      8538,
      8538
    ],
    "mapped",
    [
      53,
      8260,
      54
    ]
  ],
  [
    [
      8539,
      8539
    ],
    "mapped",
    [
      49,
      8260,
      56
    ]
  ],
  [
    [
      8540,
      8540
    ],
    "mapped",
    [
      51,
      8260,
      56
    ]
  ],
  [
    [
      8541,
      8541
    ],
    "mapped",
    [
      53,
      8260,
      56
    ]
  ],
  [
    [
      8542,
      8542
    ],
    "mapped",
    [
      55,
      8260,
      56
    ]
  ],
  [
    [
      8543,
      8543
    ],
    "mapped",
    [
      49,
      8260
    ]
  ],
  [
    [
      8544,
      8544
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      8545,
      8545
    ],
    "mapped",
    [
      105,
      105
    ]
  ],
  [
    [
      8546,
      8546
    ],
    "mapped",
    [
      105,
      105,
      105
    ]
  ],
  [
    [
      8547,
      8547
    ],
    "mapped",
    [
      105,
      118
    ]
  ],
  [
    [
      8548,
      8548
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      8549,
      8549
    ],
    "mapped",
    [
      118,
      105
    ]
  ],
  [
    [
      8550,
      8550
    ],
    "mapped",
    [
      118,
      105,
      105
    ]
  ],
  [
    [
      8551,
      8551
    ],
    "mapped",
    [
      118,
      105,
      105,
      105
    ]
  ],
  [
    [
      8552,
      8552
    ],
    "mapped",
    [
      105,
      120
    ]
  ],
  [
    [
      8553,
      8553
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      8554,
      8554
    ],
    "mapped",
    [
      120,
      105
    ]
  ],
  [
    [
      8555,
      8555
    ],
    "mapped",
    [
      120,
      105,
      105
    ]
  ],
  [
    [
      8556,
      8556
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      8557,
      8557
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      8558,
      8558
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      8559,
      8559
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      8560,
      8560
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      8561,
      8561
    ],
    "mapped",
    [
      105,
      105
    ]
  ],
  [
    [
      8562,
      8562
    ],
    "mapped",
    [
      105,
      105,
      105
    ]
  ],
  [
    [
      8563,
      8563
    ],
    "mapped",
    [
      105,
      118
    ]
  ],
  [
    [
      8564,
      8564
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      8565,
      8565
    ],
    "mapped",
    [
      118,
      105
    ]
  ],
  [
    [
      8566,
      8566
    ],
    "mapped",
    [
      118,
      105,
      105
    ]
  ],
  [
    [
      8567,
      8567
    ],
    "mapped",
    [
      118,
      105,
      105,
      105
    ]
  ],
  [
    [
      8568,
      8568
    ],
    "mapped",
    [
      105,
      120
    ]
  ],
  [
    [
      8569,
      8569
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      8570,
      8570
    ],
    "mapped",
    [
      120,
      105
    ]
  ],
  [
    [
      8571,
      8571
    ],
    "mapped",
    [
      120,
      105,
      105
    ]
  ],
  [
    [
      8572,
      8572
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      8573,
      8573
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      8574,
      8574
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      8575,
      8575
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      8576,
      8578
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8579,
      8579
    ],
    "disallowed"
  ],
  [
    [
      8580,
      8580
    ],
    "valid"
  ],
  [
    [
      8581,
      8584
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8585,
      8585
    ],
    "mapped",
    [
      48,
      8260,
      51
    ]
  ],
  [
    [
      8586,
      8587
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8588,
      8591
    ],
    "disallowed"
  ],
  [
    [
      8592,
      8682
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8683,
      8691
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8692,
      8703
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8704,
      8747
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8748,
      8748
    ],
    "mapped",
    [
      8747,
      8747
    ]
  ],
  [
    [
      8749,
      8749
    ],
    "mapped",
    [
      8747,
      8747,
      8747
    ]
  ],
  [
    [
      8750,
      8750
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8751,
      8751
    ],
    "mapped",
    [
      8750,
      8750
    ]
  ],
  [
    [
      8752,
      8752
    ],
    "mapped",
    [
      8750,
      8750,
      8750
    ]
  ],
  [
    [
      8753,
      8799
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8800,
      8800
    ],
    "disallowed_STD3_valid"
  ],
  [
    [
      8801,
      8813
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8814,
      8815
    ],
    "disallowed_STD3_valid"
  ],
  [
    [
      8816,
      8945
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8946,
      8959
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8960,
      8960
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8961,
      8961
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      8962,
      9e3
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9001,
      9001
    ],
    "mapped",
    [
      12296
    ]
  ],
  [
    [
      9002,
      9002
    ],
    "mapped",
    [
      12297
    ]
  ],
  [
    [
      9003,
      9082
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9083,
      9083
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9084,
      9084
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9085,
      9114
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9115,
      9166
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9167,
      9168
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9169,
      9179
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9180,
      9191
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9192,
      9192
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9193,
      9203
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9204,
      9210
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9211,
      9215
    ],
    "disallowed"
  ],
  [
    [
      9216,
      9252
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9253,
      9254
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9255,
      9279
    ],
    "disallowed"
  ],
  [
    [
      9280,
      9290
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9291,
      9311
    ],
    "disallowed"
  ],
  [
    [
      9312,
      9312
    ],
    "mapped",
    [
      49
    ]
  ],
  [
    [
      9313,
      9313
    ],
    "mapped",
    [
      50
    ]
  ],
  [
    [
      9314,
      9314
    ],
    "mapped",
    [
      51
    ]
  ],
  [
    [
      9315,
      9315
    ],
    "mapped",
    [
      52
    ]
  ],
  [
    [
      9316,
      9316
    ],
    "mapped",
    [
      53
    ]
  ],
  [
    [
      9317,
      9317
    ],
    "mapped",
    [
      54
    ]
  ],
  [
    [
      9318,
      9318
    ],
    "mapped",
    [
      55
    ]
  ],
  [
    [
      9319,
      9319
    ],
    "mapped",
    [
      56
    ]
  ],
  [
    [
      9320,
      9320
    ],
    "mapped",
    [
      57
    ]
  ],
  [
    [
      9321,
      9321
    ],
    "mapped",
    [
      49,
      48
    ]
  ],
  [
    [
      9322,
      9322
    ],
    "mapped",
    [
      49,
      49
    ]
  ],
  [
    [
      9323,
      9323
    ],
    "mapped",
    [
      49,
      50
    ]
  ],
  [
    [
      9324,
      9324
    ],
    "mapped",
    [
      49,
      51
    ]
  ],
  [
    [
      9325,
      9325
    ],
    "mapped",
    [
      49,
      52
    ]
  ],
  [
    [
      9326,
      9326
    ],
    "mapped",
    [
      49,
      53
    ]
  ],
  [
    [
      9327,
      9327
    ],
    "mapped",
    [
      49,
      54
    ]
  ],
  [
    [
      9328,
      9328
    ],
    "mapped",
    [
      49,
      55
    ]
  ],
  [
    [
      9329,
      9329
    ],
    "mapped",
    [
      49,
      56
    ]
  ],
  [
    [
      9330,
      9330
    ],
    "mapped",
    [
      49,
      57
    ]
  ],
  [
    [
      9331,
      9331
    ],
    "mapped",
    [
      50,
      48
    ]
  ],
  [
    [
      9332,
      9332
    ],
    "disallowed_STD3_mapped",
    [
      40,
      49,
      41
    ]
  ],
  [
    [
      9333,
      9333
    ],
    "disallowed_STD3_mapped",
    [
      40,
      50,
      41
    ]
  ],
  [
    [
      9334,
      9334
    ],
    "disallowed_STD3_mapped",
    [
      40,
      51,
      41
    ]
  ],
  [
    [
      9335,
      9335
    ],
    "disallowed_STD3_mapped",
    [
      40,
      52,
      41
    ]
  ],
  [
    [
      9336,
      9336
    ],
    "disallowed_STD3_mapped",
    [
      40,
      53,
      41
    ]
  ],
  [
    [
      9337,
      9337
    ],
    "disallowed_STD3_mapped",
    [
      40,
      54,
      41
    ]
  ],
  [
    [
      9338,
      9338
    ],
    "disallowed_STD3_mapped",
    [
      40,
      55,
      41
    ]
  ],
  [
    [
      9339,
      9339
    ],
    "disallowed_STD3_mapped",
    [
      40,
      56,
      41
    ]
  ],
  [
    [
      9340,
      9340
    ],
    "disallowed_STD3_mapped",
    [
      40,
      57,
      41
    ]
  ],
  [
    [
      9341,
      9341
    ],
    "disallowed_STD3_mapped",
    [
      40,
      49,
      48,
      41
    ]
  ],
  [
    [
      9342,
      9342
    ],
    "disallowed_STD3_mapped",
    [
      40,
      49,
      49,
      41
    ]
  ],
  [
    [
      9343,
      9343
    ],
    "disallowed_STD3_mapped",
    [
      40,
      49,
      50,
      41
    ]
  ],
  [
    [
      9344,
      9344
    ],
    "disallowed_STD3_mapped",
    [
      40,
      49,
      51,
      41
    ]
  ],
  [
    [
      9345,
      9345
    ],
    "disallowed_STD3_mapped",
    [
      40,
      49,
      52,
      41
    ]
  ],
  [
    [
      9346,
      9346
    ],
    "disallowed_STD3_mapped",
    [
      40,
      49,
      53,
      41
    ]
  ],
  [
    [
      9347,
      9347
    ],
    "disallowed_STD3_mapped",
    [
      40,
      49,
      54,
      41
    ]
  ],
  [
    [
      9348,
      9348
    ],
    "disallowed_STD3_mapped",
    [
      40,
      49,
      55,
      41
    ]
  ],
  [
    [
      9349,
      9349
    ],
    "disallowed_STD3_mapped",
    [
      40,
      49,
      56,
      41
    ]
  ],
  [
    [
      9350,
      9350
    ],
    "disallowed_STD3_mapped",
    [
      40,
      49,
      57,
      41
    ]
  ],
  [
    [
      9351,
      9351
    ],
    "disallowed_STD3_mapped",
    [
      40,
      50,
      48,
      41
    ]
  ],
  [
    [
      9352,
      9371
    ],
    "disallowed"
  ],
  [
    [
      9372,
      9372
    ],
    "disallowed_STD3_mapped",
    [
      40,
      97,
      41
    ]
  ],
  [
    [
      9373,
      9373
    ],
    "disallowed_STD3_mapped",
    [
      40,
      98,
      41
    ]
  ],
  [
    [
      9374,
      9374
    ],
    "disallowed_STD3_mapped",
    [
      40,
      99,
      41
    ]
  ],
  [
    [
      9375,
      9375
    ],
    "disallowed_STD3_mapped",
    [
      40,
      100,
      41
    ]
  ],
  [
    [
      9376,
      9376
    ],
    "disallowed_STD3_mapped",
    [
      40,
      101,
      41
    ]
  ],
  [
    [
      9377,
      9377
    ],
    "disallowed_STD3_mapped",
    [
      40,
      102,
      41
    ]
  ],
  [
    [
      9378,
      9378
    ],
    "disallowed_STD3_mapped",
    [
      40,
      103,
      41
    ]
  ],
  [
    [
      9379,
      9379
    ],
    "disallowed_STD3_mapped",
    [
      40,
      104,
      41
    ]
  ],
  [
    [
      9380,
      9380
    ],
    "disallowed_STD3_mapped",
    [
      40,
      105,
      41
    ]
  ],
  [
    [
      9381,
      9381
    ],
    "disallowed_STD3_mapped",
    [
      40,
      106,
      41
    ]
  ],
  [
    [
      9382,
      9382
    ],
    "disallowed_STD3_mapped",
    [
      40,
      107,
      41
    ]
  ],
  [
    [
      9383,
      9383
    ],
    "disallowed_STD3_mapped",
    [
      40,
      108,
      41
    ]
  ],
  [
    [
      9384,
      9384
    ],
    "disallowed_STD3_mapped",
    [
      40,
      109,
      41
    ]
  ],
  [
    [
      9385,
      9385
    ],
    "disallowed_STD3_mapped",
    [
      40,
      110,
      41
    ]
  ],
  [
    [
      9386,
      9386
    ],
    "disallowed_STD3_mapped",
    [
      40,
      111,
      41
    ]
  ],
  [
    [
      9387,
      9387
    ],
    "disallowed_STD3_mapped",
    [
      40,
      112,
      41
    ]
  ],
  [
    [
      9388,
      9388
    ],
    "disallowed_STD3_mapped",
    [
      40,
      113,
      41
    ]
  ],
  [
    [
      9389,
      9389
    ],
    "disallowed_STD3_mapped",
    [
      40,
      114,
      41
    ]
  ],
  [
    [
      9390,
      9390
    ],
    "disallowed_STD3_mapped",
    [
      40,
      115,
      41
    ]
  ],
  [
    [
      9391,
      9391
    ],
    "disallowed_STD3_mapped",
    [
      40,
      116,
      41
    ]
  ],
  [
    [
      9392,
      9392
    ],
    "disallowed_STD3_mapped",
    [
      40,
      117,
      41
    ]
  ],
  [
    [
      9393,
      9393
    ],
    "disallowed_STD3_mapped",
    [
      40,
      118,
      41
    ]
  ],
  [
    [
      9394,
      9394
    ],
    "disallowed_STD3_mapped",
    [
      40,
      119,
      41
    ]
  ],
  [
    [
      9395,
      9395
    ],
    "disallowed_STD3_mapped",
    [
      40,
      120,
      41
    ]
  ],
  [
    [
      9396,
      9396
    ],
    "disallowed_STD3_mapped",
    [
      40,
      121,
      41
    ]
  ],
  [
    [
      9397,
      9397
    ],
    "disallowed_STD3_mapped",
    [
      40,
      122,
      41
    ]
  ],
  [
    [
      9398,
      9398
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      9399,
      9399
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      9400,
      9400
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      9401,
      9401
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      9402,
      9402
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      9403,
      9403
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      9404,
      9404
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      9405,
      9405
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      9406,
      9406
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      9407,
      9407
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      9408,
      9408
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      9409,
      9409
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      9410,
      9410
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      9411,
      9411
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      9412,
      9412
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      9413,
      9413
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      9414,
      9414
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      9415,
      9415
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      9416,
      9416
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      9417,
      9417
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      9418,
      9418
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      9419,
      9419
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      9420,
      9420
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      9421,
      9421
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      9422,
      9422
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      9423,
      9423
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      9424,
      9424
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      9425,
      9425
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      9426,
      9426
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      9427,
      9427
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      9428,
      9428
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      9429,
      9429
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      9430,
      9430
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      9431,
      9431
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      9432,
      9432
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      9433,
      9433
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      9434,
      9434
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      9435,
      9435
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      9436,
      9436
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      9437,
      9437
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      9438,
      9438
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      9439,
      9439
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      9440,
      9440
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      9441,
      9441
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      9442,
      9442
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      9443,
      9443
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      9444,
      9444
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      9445,
      9445
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      9446,
      9446
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      9447,
      9447
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      9448,
      9448
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      9449,
      9449
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      9450,
      9450
    ],
    "mapped",
    [
      48
    ]
  ],
  [
    [
      9451,
      9470
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9471,
      9471
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9472,
      9621
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9622,
      9631
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9632,
      9711
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9712,
      9719
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9720,
      9727
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9728,
      9747
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9748,
      9749
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9750,
      9751
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9752,
      9752
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9753,
      9753
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9754,
      9839
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9840,
      9841
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9842,
      9853
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9854,
      9855
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9856,
      9865
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9866,
      9873
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9874,
      9884
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9885,
      9885
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9886,
      9887
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9888,
      9889
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9890,
      9905
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9906,
      9906
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9907,
      9916
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9917,
      9919
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9920,
      9923
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9924,
      9933
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9934,
      9934
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9935,
      9953
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9954,
      9954
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9955,
      9955
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9956,
      9959
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9960,
      9983
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9984,
      9984
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9985,
      9988
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9989,
      9989
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9990,
      9993
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9994,
      9995
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      9996,
      10023
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10024,
      10024
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10025,
      10059
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10060,
      10060
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10061,
      10061
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10062,
      10062
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10063,
      10066
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10067,
      10069
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10070,
      10070
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10071,
      10071
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10072,
      10078
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10079,
      10080
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10081,
      10087
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10088,
      10101
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10102,
      10132
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10133,
      10135
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10136,
      10159
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10160,
      10160
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10161,
      10174
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10175,
      10175
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10176,
      10182
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10183,
      10186
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10187,
      10187
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10188,
      10188
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10189,
      10189
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10190,
      10191
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10192,
      10219
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10220,
      10223
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10224,
      10239
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10240,
      10495
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10496,
      10763
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10764,
      10764
    ],
    "mapped",
    [
      8747,
      8747,
      8747,
      8747
    ]
  ],
  [
    [
      10765,
      10867
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10868,
      10868
    ],
    "disallowed_STD3_mapped",
    [
      58,
      58,
      61
    ]
  ],
  [
    [
      10869,
      10869
    ],
    "disallowed_STD3_mapped",
    [
      61,
      61
    ]
  ],
  [
    [
      10870,
      10870
    ],
    "disallowed_STD3_mapped",
    [
      61,
      61,
      61
    ]
  ],
  [
    [
      10871,
      10971
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      10972,
      10972
    ],
    "mapped",
    [
      10973,
      824
    ]
  ],
  [
    [
      10973,
      11007
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      11008,
      11021
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      11022,
      11027
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      11028,
      11034
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      11035,
      11039
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      11040,
      11043
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      11044,
      11084
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      11085,
      11087
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      11088,
      11092
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      11093,
      11097
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      11098,
      11123
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      11124,
      11125
    ],
    "disallowed"
  ],
  [
    [
      11126,
      11157
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      11158,
      11159
    ],
    "disallowed"
  ],
  [
    [
      11160,
      11193
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      11194,
      11196
    ],
    "disallowed"
  ],
  [
    [
      11197,
      11208
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      11209,
      11209
    ],
    "disallowed"
  ],
  [
    [
      11210,
      11217
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      11218,
      11243
    ],
    "disallowed"
  ],
  [
    [
      11244,
      11247
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      11248,
      11263
    ],
    "disallowed"
  ],
  [
    [
      11264,
      11264
    ],
    "mapped",
    [
      11312
    ]
  ],
  [
    [
      11265,
      11265
    ],
    "mapped",
    [
      11313
    ]
  ],
  [
    [
      11266,
      11266
    ],
    "mapped",
    [
      11314
    ]
  ],
  [
    [
      11267,
      11267
    ],
    "mapped",
    [
      11315
    ]
  ],
  [
    [
      11268,
      11268
    ],
    "mapped",
    [
      11316
    ]
  ],
  [
    [
      11269,
      11269
    ],
    "mapped",
    [
      11317
    ]
  ],
  [
    [
      11270,
      11270
    ],
    "mapped",
    [
      11318
    ]
  ],
  [
    [
      11271,
      11271
    ],
    "mapped",
    [
      11319
    ]
  ],
  [
    [
      11272,
      11272
    ],
    "mapped",
    [
      11320
    ]
  ],
  [
    [
      11273,
      11273
    ],
    "mapped",
    [
      11321
    ]
  ],
  [
    [
      11274,
      11274
    ],
    "mapped",
    [
      11322
    ]
  ],
  [
    [
      11275,
      11275
    ],
    "mapped",
    [
      11323
    ]
  ],
  [
    [
      11276,
      11276
    ],
    "mapped",
    [
      11324
    ]
  ],
  [
    [
      11277,
      11277
    ],
    "mapped",
    [
      11325
    ]
  ],
  [
    [
      11278,
      11278
    ],
    "mapped",
    [
      11326
    ]
  ],
  [
    [
      11279,
      11279
    ],
    "mapped",
    [
      11327
    ]
  ],
  [
    [
      11280,
      11280
    ],
    "mapped",
    [
      11328
    ]
  ],
  [
    [
      11281,
      11281
    ],
    "mapped",
    [
      11329
    ]
  ],
  [
    [
      11282,
      11282
    ],
    "mapped",
    [
      11330
    ]
  ],
  [
    [
      11283,
      11283
    ],
    "mapped",
    [
      11331
    ]
  ],
  [
    [
      11284,
      11284
    ],
    "mapped",
    [
      11332
    ]
  ],
  [
    [
      11285,
      11285
    ],
    "mapped",
    [
      11333
    ]
  ],
  [
    [
      11286,
      11286
    ],
    "mapped",
    [
      11334
    ]
  ],
  [
    [
      11287,
      11287
    ],
    "mapped",
    [
      11335
    ]
  ],
  [
    [
      11288,
      11288
    ],
    "mapped",
    [
      11336
    ]
  ],
  [
    [
      11289,
      11289
    ],
    "mapped",
    [
      11337
    ]
  ],
  [
    [
      11290,
      11290
    ],
    "mapped",
    [
      11338
    ]
  ],
  [
    [
      11291,
      11291
    ],
    "mapped",
    [
      11339
    ]
  ],
  [
    [
      11292,
      11292
    ],
    "mapped",
    [
      11340
    ]
  ],
  [
    [
      11293,
      11293
    ],
    "mapped",
    [
      11341
    ]
  ],
  [
    [
      11294,
      11294
    ],
    "mapped",
    [
      11342
    ]
  ],
  [
    [
      11295,
      11295
    ],
    "mapped",
    [
      11343
    ]
  ],
  [
    [
      11296,
      11296
    ],
    "mapped",
    [
      11344
    ]
  ],
  [
    [
      11297,
      11297
    ],
    "mapped",
    [
      11345
    ]
  ],
  [
    [
      11298,
      11298
    ],
    "mapped",
    [
      11346
    ]
  ],
  [
    [
      11299,
      11299
    ],
    "mapped",
    [
      11347
    ]
  ],
  [
    [
      11300,
      11300
    ],
    "mapped",
    [
      11348
    ]
  ],
  [
    [
      11301,
      11301
    ],
    "mapped",
    [
      11349
    ]
  ],
  [
    [
      11302,
      11302
    ],
    "mapped",
    [
      11350
    ]
  ],
  [
    [
      11303,
      11303
    ],
    "mapped",
    [
      11351
    ]
  ],
  [
    [
      11304,
      11304
    ],
    "mapped",
    [
      11352
    ]
  ],
  [
    [
      11305,
      11305
    ],
    "mapped",
    [
      11353
    ]
  ],
  [
    [
      11306,
      11306
    ],
    "mapped",
    [
      11354
    ]
  ],
  [
    [
      11307,
      11307
    ],
    "mapped",
    [
      11355
    ]
  ],
  [
    [
      11308,
      11308
    ],
    "mapped",
    [
      11356
    ]
  ],
  [
    [
      11309,
      11309
    ],
    "mapped",
    [
      11357
    ]
  ],
  [
    [
      11310,
      11310
    ],
    "mapped",
    [
      11358
    ]
  ],
  [
    [
      11311,
      11311
    ],
    "disallowed"
  ],
  [
    [
      11312,
      11358
    ],
    "valid"
  ],
  [
    [
      11359,
      11359
    ],
    "disallowed"
  ],
  [
    [
      11360,
      11360
    ],
    "mapped",
    [
      11361
    ]
  ],
  [
    [
      11361,
      11361
    ],
    "valid"
  ],
  [
    [
      11362,
      11362
    ],
    "mapped",
    [
      619
    ]
  ],
  [
    [
      11363,
      11363
    ],
    "mapped",
    [
      7549
    ]
  ],
  [
    [
      11364,
      11364
    ],
    "mapped",
    [
      637
    ]
  ],
  [
    [
      11365,
      11366
    ],
    "valid"
  ],
  [
    [
      11367,
      11367
    ],
    "mapped",
    [
      11368
    ]
  ],
  [
    [
      11368,
      11368
    ],
    "valid"
  ],
  [
    [
      11369,
      11369
    ],
    "mapped",
    [
      11370
    ]
  ],
  [
    [
      11370,
      11370
    ],
    "valid"
  ],
  [
    [
      11371,
      11371
    ],
    "mapped",
    [
      11372
    ]
  ],
  [
    [
      11372,
      11372
    ],
    "valid"
  ],
  [
    [
      11373,
      11373
    ],
    "mapped",
    [
      593
    ]
  ],
  [
    [
      11374,
      11374
    ],
    "mapped",
    [
      625
    ]
  ],
  [
    [
      11375,
      11375
    ],
    "mapped",
    [
      592
    ]
  ],
  [
    [
      11376,
      11376
    ],
    "mapped",
    [
      594
    ]
  ],
  [
    [
      11377,
      11377
    ],
    "valid"
  ],
  [
    [
      11378,
      11378
    ],
    "mapped",
    [
      11379
    ]
  ],
  [
    [
      11379,
      11379
    ],
    "valid"
  ],
  [
    [
      11380,
      11380
    ],
    "valid"
  ],
  [
    [
      11381,
      11381
    ],
    "mapped",
    [
      11382
    ]
  ],
  [
    [
      11382,
      11383
    ],
    "valid"
  ],
  [
    [
      11384,
      11387
    ],
    "valid"
  ],
  [
    [
      11388,
      11388
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      11389,
      11389
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      11390,
      11390
    ],
    "mapped",
    [
      575
    ]
  ],
  [
    [
      11391,
      11391
    ],
    "mapped",
    [
      576
    ]
  ],
  [
    [
      11392,
      11392
    ],
    "mapped",
    [
      11393
    ]
  ],
  [
    [
      11393,
      11393
    ],
    "valid"
  ],
  [
    [
      11394,
      11394
    ],
    "mapped",
    [
      11395
    ]
  ],
  [
    [
      11395,
      11395
    ],
    "valid"
  ],
  [
    [
      11396,
      11396
    ],
    "mapped",
    [
      11397
    ]
  ],
  [
    [
      11397,
      11397
    ],
    "valid"
  ],
  [
    [
      11398,
      11398
    ],
    "mapped",
    [
      11399
    ]
  ],
  [
    [
      11399,
      11399
    ],
    "valid"
  ],
  [
    [
      11400,
      11400
    ],
    "mapped",
    [
      11401
    ]
  ],
  [
    [
      11401,
      11401
    ],
    "valid"
  ],
  [
    [
      11402,
      11402
    ],
    "mapped",
    [
      11403
    ]
  ],
  [
    [
      11403,
      11403
    ],
    "valid"
  ],
  [
    [
      11404,
      11404
    ],
    "mapped",
    [
      11405
    ]
  ],
  [
    [
      11405,
      11405
    ],
    "valid"
  ],
  [
    [
      11406,
      11406
    ],
    "mapped",
    [
      11407
    ]
  ],
  [
    [
      11407,
      11407
    ],
    "valid"
  ],
  [
    [
      11408,
      11408
    ],
    "mapped",
    [
      11409
    ]
  ],
  [
    [
      11409,
      11409
    ],
    "valid"
  ],
  [
    [
      11410,
      11410
    ],
    "mapped",
    [
      11411
    ]
  ],
  [
    [
      11411,
      11411
    ],
    "valid"
  ],
  [
    [
      11412,
      11412
    ],
    "mapped",
    [
      11413
    ]
  ],
  [
    [
      11413,
      11413
    ],
    "valid"
  ],
  [
    [
      11414,
      11414
    ],
    "mapped",
    [
      11415
    ]
  ],
  [
    [
      11415,
      11415
    ],
    "valid"
  ],
  [
    [
      11416,
      11416
    ],
    "mapped",
    [
      11417
    ]
  ],
  [
    [
      11417,
      11417
    ],
    "valid"
  ],
  [
    [
      11418,
      11418
    ],
    "mapped",
    [
      11419
    ]
  ],
  [
    [
      11419,
      11419
    ],
    "valid"
  ],
  [
    [
      11420,
      11420
    ],
    "mapped",
    [
      11421
    ]
  ],
  [
    [
      11421,
      11421
    ],
    "valid"
  ],
  [
    [
      11422,
      11422
    ],
    "mapped",
    [
      11423
    ]
  ],
  [
    [
      11423,
      11423
    ],
    "valid"
  ],
  [
    [
      11424,
      11424
    ],
    "mapped",
    [
      11425
    ]
  ],
  [
    [
      11425,
      11425
    ],
    "valid"
  ],
  [
    [
      11426,
      11426
    ],
    "mapped",
    [
      11427
    ]
  ],
  [
    [
      11427,
      11427
    ],
    "valid"
  ],
  [
    [
      11428,
      11428
    ],
    "mapped",
    [
      11429
    ]
  ],
  [
    [
      11429,
      11429
    ],
    "valid"
  ],
  [
    [
      11430,
      11430
    ],
    "mapped",
    [
      11431
    ]
  ],
  [
    [
      11431,
      11431
    ],
    "valid"
  ],
  [
    [
      11432,
      11432
    ],
    "mapped",
    [
      11433
    ]
  ],
  [
    [
      11433,
      11433
    ],
    "valid"
  ],
  [
    [
      11434,
      11434
    ],
    "mapped",
    [
      11435
    ]
  ],
  [
    [
      11435,
      11435
    ],
    "valid"
  ],
  [
    [
      11436,
      11436
    ],
    "mapped",
    [
      11437
    ]
  ],
  [
    [
      11437,
      11437
    ],
    "valid"
  ],
  [
    [
      11438,
      11438
    ],
    "mapped",
    [
      11439
    ]
  ],
  [
    [
      11439,
      11439
    ],
    "valid"
  ],
  [
    [
      11440,
      11440
    ],
    "mapped",
    [
      11441
    ]
  ],
  [
    [
      11441,
      11441
    ],
    "valid"
  ],
  [
    [
      11442,
      11442
    ],
    "mapped",
    [
      11443
    ]
  ],
  [
    [
      11443,
      11443
    ],
    "valid"
  ],
  [
    [
      11444,
      11444
    ],
    "mapped",
    [
      11445
    ]
  ],
  [
    [
      11445,
      11445
    ],
    "valid"
  ],
  [
    [
      11446,
      11446
    ],
    "mapped",
    [
      11447
    ]
  ],
  [
    [
      11447,
      11447
    ],
    "valid"
  ],
  [
    [
      11448,
      11448
    ],
    "mapped",
    [
      11449
    ]
  ],
  [
    [
      11449,
      11449
    ],
    "valid"
  ],
  [
    [
      11450,
      11450
    ],
    "mapped",
    [
      11451
    ]
  ],
  [
    [
      11451,
      11451
    ],
    "valid"
  ],
  [
    [
      11452,
      11452
    ],
    "mapped",
    [
      11453
    ]
  ],
  [
    [
      11453,
      11453
    ],
    "valid"
  ],
  [
    [
      11454,
      11454
    ],
    "mapped",
    [
      11455
    ]
  ],
  [
    [
      11455,
      11455
    ],
    "valid"
  ],
  [
    [
      11456,
      11456
    ],
    "mapped",
    [
      11457
    ]
  ],
  [
    [
      11457,
      11457
    ],
    "valid"
  ],
  [
    [
      11458,
      11458
    ],
    "mapped",
    [
      11459
    ]
  ],
  [
    [
      11459,
      11459
    ],
    "valid"
  ],
  [
    [
      11460,
      11460
    ],
    "mapped",
    [
      11461
    ]
  ],
  [
    [
      11461,
      11461
    ],
    "valid"
  ],
  [
    [
      11462,
      11462
    ],
    "mapped",
    [
      11463
    ]
  ],
  [
    [
      11463,
      11463
    ],
    "valid"
  ],
  [
    [
      11464,
      11464
    ],
    "mapped",
    [
      11465
    ]
  ],
  [
    [
      11465,
      11465
    ],
    "valid"
  ],
  [
    [
      11466,
      11466
    ],
    "mapped",
    [
      11467
    ]
  ],
  [
    [
      11467,
      11467
    ],
    "valid"
  ],
  [
    [
      11468,
      11468
    ],
    "mapped",
    [
      11469
    ]
  ],
  [
    [
      11469,
      11469
    ],
    "valid"
  ],
  [
    [
      11470,
      11470
    ],
    "mapped",
    [
      11471
    ]
  ],
  [
    [
      11471,
      11471
    ],
    "valid"
  ],
  [
    [
      11472,
      11472
    ],
    "mapped",
    [
      11473
    ]
  ],
  [
    [
      11473,
      11473
    ],
    "valid"
  ],
  [
    [
      11474,
      11474
    ],
    "mapped",
    [
      11475
    ]
  ],
  [
    [
      11475,
      11475
    ],
    "valid"
  ],
  [
    [
      11476,
      11476
    ],
    "mapped",
    [
      11477
    ]
  ],
  [
    [
      11477,
      11477
    ],
    "valid"
  ],
  [
    [
      11478,
      11478
    ],
    "mapped",
    [
      11479
    ]
  ],
  [
    [
      11479,
      11479
    ],
    "valid"
  ],
  [
    [
      11480,
      11480
    ],
    "mapped",
    [
      11481
    ]
  ],
  [
    [
      11481,
      11481
    ],
    "valid"
  ],
  [
    [
      11482,
      11482
    ],
    "mapped",
    [
      11483
    ]
  ],
  [
    [
      11483,
      11483
    ],
    "valid"
  ],
  [
    [
      11484,
      11484
    ],
    "mapped",
    [
      11485
    ]
  ],
  [
    [
      11485,
      11485
    ],
    "valid"
  ],
  [
    [
      11486,
      11486
    ],
    "mapped",
    [
      11487
    ]
  ],
  [
    [
      11487,
      11487
    ],
    "valid"
  ],
  [
    [
      11488,
      11488
    ],
    "mapped",
    [
      11489
    ]
  ],
  [
    [
      11489,
      11489
    ],
    "valid"
  ],
  [
    [
      11490,
      11490
    ],
    "mapped",
    [
      11491
    ]
  ],
  [
    [
      11491,
      11492
    ],
    "valid"
  ],
  [
    [
      11493,
      11498
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      11499,
      11499
    ],
    "mapped",
    [
      11500
    ]
  ],
  [
    [
      11500,
      11500
    ],
    "valid"
  ],
  [
    [
      11501,
      11501
    ],
    "mapped",
    [
      11502
    ]
  ],
  [
    [
      11502,
      11505
    ],
    "valid"
  ],
  [
    [
      11506,
      11506
    ],
    "mapped",
    [
      11507
    ]
  ],
  [
    [
      11507,
      11507
    ],
    "valid"
  ],
  [
    [
      11508,
      11512
    ],
    "disallowed"
  ],
  [
    [
      11513,
      11519
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      11520,
      11557
    ],
    "valid"
  ],
  [
    [
      11558,
      11558
    ],
    "disallowed"
  ],
  [
    [
      11559,
      11559
    ],
    "valid"
  ],
  [
    [
      11560,
      11564
    ],
    "disallowed"
  ],
  [
    [
      11565,
      11565
    ],
    "valid"
  ],
  [
    [
      11566,
      11567
    ],
    "disallowed"
  ],
  [
    [
      11568,
      11621
    ],
    "valid"
  ],
  [
    [
      11622,
      11623
    ],
    "valid"
  ],
  [
    [
      11624,
      11630
    ],
    "disallowed"
  ],
  [
    [
      11631,
      11631
    ],
    "mapped",
    [
      11617
    ]
  ],
  [
    [
      11632,
      11632
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      11633,
      11646
    ],
    "disallowed"
  ],
  [
    [
      11647,
      11647
    ],
    "valid"
  ],
  [
    [
      11648,
      11670
    ],
    "valid"
  ],
  [
    [
      11671,
      11679
    ],
    "disallowed"
  ],
  [
    [
      11680,
      11686
    ],
    "valid"
  ],
  [
    [
      11687,
      11687
    ],
    "disallowed"
  ],
  [
    [
      11688,
      11694
    ],
    "valid"
  ],
  [
    [
      11695,
      11695
    ],
    "disallowed"
  ],
  [
    [
      11696,
      11702
    ],
    "valid"
  ],
  [
    [
      11703,
      11703
    ],
    "disallowed"
  ],
  [
    [
      11704,
      11710
    ],
    "valid"
  ],
  [
    [
      11711,
      11711
    ],
    "disallowed"
  ],
  [
    [
      11712,
      11718
    ],
    "valid"
  ],
  [
    [
      11719,
      11719
    ],
    "disallowed"
  ],
  [
    [
      11720,
      11726
    ],
    "valid"
  ],
  [
    [
      11727,
      11727
    ],
    "disallowed"
  ],
  [
    [
      11728,
      11734
    ],
    "valid"
  ],
  [
    [
      11735,
      11735
    ],
    "disallowed"
  ],
  [
    [
      11736,
      11742
    ],
    "valid"
  ],
  [
    [
      11743,
      11743
    ],
    "disallowed"
  ],
  [
    [
      11744,
      11775
    ],
    "valid"
  ],
  [
    [
      11776,
      11799
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      11800,
      11803
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      11804,
      11805
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      11806,
      11822
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      11823,
      11823
    ],
    "valid"
  ],
  [
    [
      11824,
      11824
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      11825,
      11825
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      11826,
      11835
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      11836,
      11842
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      11843,
      11903
    ],
    "disallowed"
  ],
  [
    [
      11904,
      11929
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      11930,
      11930
    ],
    "disallowed"
  ],
  [
    [
      11931,
      11934
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      11935,
      11935
    ],
    "mapped",
    [
      27597
    ]
  ],
  [
    [
      11936,
      12018
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      12019,
      12019
    ],
    "mapped",
    [
      40863
    ]
  ],
  [
    [
      12020,
      12031
    ],
    "disallowed"
  ],
  [
    [
      12032,
      12032
    ],
    "mapped",
    [
      19968
    ]
  ],
  [
    [
      12033,
      12033
    ],
    "mapped",
    [
      20008
    ]
  ],
  [
    [
      12034,
      12034
    ],
    "mapped",
    [
      20022
    ]
  ],
  [
    [
      12035,
      12035
    ],
    "mapped",
    [
      20031
    ]
  ],
  [
    [
      12036,
      12036
    ],
    "mapped",
    [
      20057
    ]
  ],
  [
    [
      12037,
      12037
    ],
    "mapped",
    [
      20101
    ]
  ],
  [
    [
      12038,
      12038
    ],
    "mapped",
    [
      20108
    ]
  ],
  [
    [
      12039,
      12039
    ],
    "mapped",
    [
      20128
    ]
  ],
  [
    [
      12040,
      12040
    ],
    "mapped",
    [
      20154
    ]
  ],
  [
    [
      12041,
      12041
    ],
    "mapped",
    [
      20799
    ]
  ],
  [
    [
      12042,
      12042
    ],
    "mapped",
    [
      20837
    ]
  ],
  [
    [
      12043,
      12043
    ],
    "mapped",
    [
      20843
    ]
  ],
  [
    [
      12044,
      12044
    ],
    "mapped",
    [
      20866
    ]
  ],
  [
    [
      12045,
      12045
    ],
    "mapped",
    [
      20886
    ]
  ],
  [
    [
      12046,
      12046
    ],
    "mapped",
    [
      20907
    ]
  ],
  [
    [
      12047,
      12047
    ],
    "mapped",
    [
      20960
    ]
  ],
  [
    [
      12048,
      12048
    ],
    "mapped",
    [
      20981
    ]
  ],
  [
    [
      12049,
      12049
    ],
    "mapped",
    [
      20992
    ]
  ],
  [
    [
      12050,
      12050
    ],
    "mapped",
    [
      21147
    ]
  ],
  [
    [
      12051,
      12051
    ],
    "mapped",
    [
      21241
    ]
  ],
  [
    [
      12052,
      12052
    ],
    "mapped",
    [
      21269
    ]
  ],
  [
    [
      12053,
      12053
    ],
    "mapped",
    [
      21274
    ]
  ],
  [
    [
      12054,
      12054
    ],
    "mapped",
    [
      21304
    ]
  ],
  [
    [
      12055,
      12055
    ],
    "mapped",
    [
      21313
    ]
  ],
  [
    [
      12056,
      12056
    ],
    "mapped",
    [
      21340
    ]
  ],
  [
    [
      12057,
      12057
    ],
    "mapped",
    [
      21353
    ]
  ],
  [
    [
      12058,
      12058
    ],
    "mapped",
    [
      21378
    ]
  ],
  [
    [
      12059,
      12059
    ],
    "mapped",
    [
      21430
    ]
  ],
  [
    [
      12060,
      12060
    ],
    "mapped",
    [
      21448
    ]
  ],
  [
    [
      12061,
      12061
    ],
    "mapped",
    [
      21475
    ]
  ],
  [
    [
      12062,
      12062
    ],
    "mapped",
    [
      22231
    ]
  ],
  [
    [
      12063,
      12063
    ],
    "mapped",
    [
      22303
    ]
  ],
  [
    [
      12064,
      12064
    ],
    "mapped",
    [
      22763
    ]
  ],
  [
    [
      12065,
      12065
    ],
    "mapped",
    [
      22786
    ]
  ],
  [
    [
      12066,
      12066
    ],
    "mapped",
    [
      22794
    ]
  ],
  [
    [
      12067,
      12067
    ],
    "mapped",
    [
      22805
    ]
  ],
  [
    [
      12068,
      12068
    ],
    "mapped",
    [
      22823
    ]
  ],
  [
    [
      12069,
      12069
    ],
    "mapped",
    [
      22899
    ]
  ],
  [
    [
      12070,
      12070
    ],
    "mapped",
    [
      23376
    ]
  ],
  [
    [
      12071,
      12071
    ],
    "mapped",
    [
      23424
    ]
  ],
  [
    [
      12072,
      12072
    ],
    "mapped",
    [
      23544
    ]
  ],
  [
    [
      12073,
      12073
    ],
    "mapped",
    [
      23567
    ]
  ],
  [
    [
      12074,
      12074
    ],
    "mapped",
    [
      23586
    ]
  ],
  [
    [
      12075,
      12075
    ],
    "mapped",
    [
      23608
    ]
  ],
  [
    [
      12076,
      12076
    ],
    "mapped",
    [
      23662
    ]
  ],
  [
    [
      12077,
      12077
    ],
    "mapped",
    [
      23665
    ]
  ],
  [
    [
      12078,
      12078
    ],
    "mapped",
    [
      24027
    ]
  ],
  [
    [
      12079,
      12079
    ],
    "mapped",
    [
      24037
    ]
  ],
  [
    [
      12080,
      12080
    ],
    "mapped",
    [
      24049
    ]
  ],
  [
    [
      12081,
      12081
    ],
    "mapped",
    [
      24062
    ]
  ],
  [
    [
      12082,
      12082
    ],
    "mapped",
    [
      24178
    ]
  ],
  [
    [
      12083,
      12083
    ],
    "mapped",
    [
      24186
    ]
  ],
  [
    [
      12084,
      12084
    ],
    "mapped",
    [
      24191
    ]
  ],
  [
    [
      12085,
      12085
    ],
    "mapped",
    [
      24308
    ]
  ],
  [
    [
      12086,
      12086
    ],
    "mapped",
    [
      24318
    ]
  ],
  [
    [
      12087,
      12087
    ],
    "mapped",
    [
      24331
    ]
  ],
  [
    [
      12088,
      12088
    ],
    "mapped",
    [
      24339
    ]
  ],
  [
    [
      12089,
      12089
    ],
    "mapped",
    [
      24400
    ]
  ],
  [
    [
      12090,
      12090
    ],
    "mapped",
    [
      24417
    ]
  ],
  [
    [
      12091,
      12091
    ],
    "mapped",
    [
      24435
    ]
  ],
  [
    [
      12092,
      12092
    ],
    "mapped",
    [
      24515
    ]
  ],
  [
    [
      12093,
      12093
    ],
    "mapped",
    [
      25096
    ]
  ],
  [
    [
      12094,
      12094
    ],
    "mapped",
    [
      25142
    ]
  ],
  [
    [
      12095,
      12095
    ],
    "mapped",
    [
      25163
    ]
  ],
  [
    [
      12096,
      12096
    ],
    "mapped",
    [
      25903
    ]
  ],
  [
    [
      12097,
      12097
    ],
    "mapped",
    [
      25908
    ]
  ],
  [
    [
      12098,
      12098
    ],
    "mapped",
    [
      25991
    ]
  ],
  [
    [
      12099,
      12099
    ],
    "mapped",
    [
      26007
    ]
  ],
  [
    [
      12100,
      12100
    ],
    "mapped",
    [
      26020
    ]
  ],
  [
    [
      12101,
      12101
    ],
    "mapped",
    [
      26041
    ]
  ],
  [
    [
      12102,
      12102
    ],
    "mapped",
    [
      26080
    ]
  ],
  [
    [
      12103,
      12103
    ],
    "mapped",
    [
      26085
    ]
  ],
  [
    [
      12104,
      12104
    ],
    "mapped",
    [
      26352
    ]
  ],
  [
    [
      12105,
      12105
    ],
    "mapped",
    [
      26376
    ]
  ],
  [
    [
      12106,
      12106
    ],
    "mapped",
    [
      26408
    ]
  ],
  [
    [
      12107,
      12107
    ],
    "mapped",
    [
      27424
    ]
  ],
  [
    [
      12108,
      12108
    ],
    "mapped",
    [
      27490
    ]
  ],
  [
    [
      12109,
      12109
    ],
    "mapped",
    [
      27513
    ]
  ],
  [
    [
      12110,
      12110
    ],
    "mapped",
    [
      27571
    ]
  ],
  [
    [
      12111,
      12111
    ],
    "mapped",
    [
      27595
    ]
  ],
  [
    [
      12112,
      12112
    ],
    "mapped",
    [
      27604
    ]
  ],
  [
    [
      12113,
      12113
    ],
    "mapped",
    [
      27611
    ]
  ],
  [
    [
      12114,
      12114
    ],
    "mapped",
    [
      27663
    ]
  ],
  [
    [
      12115,
      12115
    ],
    "mapped",
    [
      27668
    ]
  ],
  [
    [
      12116,
      12116
    ],
    "mapped",
    [
      27700
    ]
  ],
  [
    [
      12117,
      12117
    ],
    "mapped",
    [
      28779
    ]
  ],
  [
    [
      12118,
      12118
    ],
    "mapped",
    [
      29226
    ]
  ],
  [
    [
      12119,
      12119
    ],
    "mapped",
    [
      29238
    ]
  ],
  [
    [
      12120,
      12120
    ],
    "mapped",
    [
      29243
    ]
  ],
  [
    [
      12121,
      12121
    ],
    "mapped",
    [
      29247
    ]
  ],
  [
    [
      12122,
      12122
    ],
    "mapped",
    [
      29255
    ]
  ],
  [
    [
      12123,
      12123
    ],
    "mapped",
    [
      29273
    ]
  ],
  [
    [
      12124,
      12124
    ],
    "mapped",
    [
      29275
    ]
  ],
  [
    [
      12125,
      12125
    ],
    "mapped",
    [
      29356
    ]
  ],
  [
    [
      12126,
      12126
    ],
    "mapped",
    [
      29572
    ]
  ],
  [
    [
      12127,
      12127
    ],
    "mapped",
    [
      29577
    ]
  ],
  [
    [
      12128,
      12128
    ],
    "mapped",
    [
      29916
    ]
  ],
  [
    [
      12129,
      12129
    ],
    "mapped",
    [
      29926
    ]
  ],
  [
    [
      12130,
      12130
    ],
    "mapped",
    [
      29976
    ]
  ],
  [
    [
      12131,
      12131
    ],
    "mapped",
    [
      29983
    ]
  ],
  [
    [
      12132,
      12132
    ],
    "mapped",
    [
      29992
    ]
  ],
  [
    [
      12133,
      12133
    ],
    "mapped",
    [
      3e4
    ]
  ],
  [
    [
      12134,
      12134
    ],
    "mapped",
    [
      30091
    ]
  ],
  [
    [
      12135,
      12135
    ],
    "mapped",
    [
      30098
    ]
  ],
  [
    [
      12136,
      12136
    ],
    "mapped",
    [
      30326
    ]
  ],
  [
    [
      12137,
      12137
    ],
    "mapped",
    [
      30333
    ]
  ],
  [
    [
      12138,
      12138
    ],
    "mapped",
    [
      30382
    ]
  ],
  [
    [
      12139,
      12139
    ],
    "mapped",
    [
      30399
    ]
  ],
  [
    [
      12140,
      12140
    ],
    "mapped",
    [
      30446
    ]
  ],
  [
    [
      12141,
      12141
    ],
    "mapped",
    [
      30683
    ]
  ],
  [
    [
      12142,
      12142
    ],
    "mapped",
    [
      30690
    ]
  ],
  [
    [
      12143,
      12143
    ],
    "mapped",
    [
      30707
    ]
  ],
  [
    [
      12144,
      12144
    ],
    "mapped",
    [
      31034
    ]
  ],
  [
    [
      12145,
      12145
    ],
    "mapped",
    [
      31160
    ]
  ],
  [
    [
      12146,
      12146
    ],
    "mapped",
    [
      31166
    ]
  ],
  [
    [
      12147,
      12147
    ],
    "mapped",
    [
      31348
    ]
  ],
  [
    [
      12148,
      12148
    ],
    "mapped",
    [
      31435
    ]
  ],
  [
    [
      12149,
      12149
    ],
    "mapped",
    [
      31481
    ]
  ],
  [
    [
      12150,
      12150
    ],
    "mapped",
    [
      31859
    ]
  ],
  [
    [
      12151,
      12151
    ],
    "mapped",
    [
      31992
    ]
  ],
  [
    [
      12152,
      12152
    ],
    "mapped",
    [
      32566
    ]
  ],
  [
    [
      12153,
      12153
    ],
    "mapped",
    [
      32593
    ]
  ],
  [
    [
      12154,
      12154
    ],
    "mapped",
    [
      32650
    ]
  ],
  [
    [
      12155,
      12155
    ],
    "mapped",
    [
      32701
    ]
  ],
  [
    [
      12156,
      12156
    ],
    "mapped",
    [
      32769
    ]
  ],
  [
    [
      12157,
      12157
    ],
    "mapped",
    [
      32780
    ]
  ],
  [
    [
      12158,
      12158
    ],
    "mapped",
    [
      32786
    ]
  ],
  [
    [
      12159,
      12159
    ],
    "mapped",
    [
      32819
    ]
  ],
  [
    [
      12160,
      12160
    ],
    "mapped",
    [
      32895
    ]
  ],
  [
    [
      12161,
      12161
    ],
    "mapped",
    [
      32905
    ]
  ],
  [
    [
      12162,
      12162
    ],
    "mapped",
    [
      33251
    ]
  ],
  [
    [
      12163,
      12163
    ],
    "mapped",
    [
      33258
    ]
  ],
  [
    [
      12164,
      12164
    ],
    "mapped",
    [
      33267
    ]
  ],
  [
    [
      12165,
      12165
    ],
    "mapped",
    [
      33276
    ]
  ],
  [
    [
      12166,
      12166
    ],
    "mapped",
    [
      33292
    ]
  ],
  [
    [
      12167,
      12167
    ],
    "mapped",
    [
      33307
    ]
  ],
  [
    [
      12168,
      12168
    ],
    "mapped",
    [
      33311
    ]
  ],
  [
    [
      12169,
      12169
    ],
    "mapped",
    [
      33390
    ]
  ],
  [
    [
      12170,
      12170
    ],
    "mapped",
    [
      33394
    ]
  ],
  [
    [
      12171,
      12171
    ],
    "mapped",
    [
      33400
    ]
  ],
  [
    [
      12172,
      12172
    ],
    "mapped",
    [
      34381
    ]
  ],
  [
    [
      12173,
      12173
    ],
    "mapped",
    [
      34411
    ]
  ],
  [
    [
      12174,
      12174
    ],
    "mapped",
    [
      34880
    ]
  ],
  [
    [
      12175,
      12175
    ],
    "mapped",
    [
      34892
    ]
  ],
  [
    [
      12176,
      12176
    ],
    "mapped",
    [
      34915
    ]
  ],
  [
    [
      12177,
      12177
    ],
    "mapped",
    [
      35198
    ]
  ],
  [
    [
      12178,
      12178
    ],
    "mapped",
    [
      35211
    ]
  ],
  [
    [
      12179,
      12179
    ],
    "mapped",
    [
      35282
    ]
  ],
  [
    [
      12180,
      12180
    ],
    "mapped",
    [
      35328
    ]
  ],
  [
    [
      12181,
      12181
    ],
    "mapped",
    [
      35895
    ]
  ],
  [
    [
      12182,
      12182
    ],
    "mapped",
    [
      35910
    ]
  ],
  [
    [
      12183,
      12183
    ],
    "mapped",
    [
      35925
    ]
  ],
  [
    [
      12184,
      12184
    ],
    "mapped",
    [
      35960
    ]
  ],
  [
    [
      12185,
      12185
    ],
    "mapped",
    [
      35997
    ]
  ],
  [
    [
      12186,
      12186
    ],
    "mapped",
    [
      36196
    ]
  ],
  [
    [
      12187,
      12187
    ],
    "mapped",
    [
      36208
    ]
  ],
  [
    [
      12188,
      12188
    ],
    "mapped",
    [
      36275
    ]
  ],
  [
    [
      12189,
      12189
    ],
    "mapped",
    [
      36523
    ]
  ],
  [
    [
      12190,
      12190
    ],
    "mapped",
    [
      36554
    ]
  ],
  [
    [
      12191,
      12191
    ],
    "mapped",
    [
      36763
    ]
  ],
  [
    [
      12192,
      12192
    ],
    "mapped",
    [
      36784
    ]
  ],
  [
    [
      12193,
      12193
    ],
    "mapped",
    [
      36789
    ]
  ],
  [
    [
      12194,
      12194
    ],
    "mapped",
    [
      37009
    ]
  ],
  [
    [
      12195,
      12195
    ],
    "mapped",
    [
      37193
    ]
  ],
  [
    [
      12196,
      12196
    ],
    "mapped",
    [
      37318
    ]
  ],
  [
    [
      12197,
      12197
    ],
    "mapped",
    [
      37324
    ]
  ],
  [
    [
      12198,
      12198
    ],
    "mapped",
    [
      37329
    ]
  ],
  [
    [
      12199,
      12199
    ],
    "mapped",
    [
      38263
    ]
  ],
  [
    [
      12200,
      12200
    ],
    "mapped",
    [
      38272
    ]
  ],
  [
    [
      12201,
      12201
    ],
    "mapped",
    [
      38428
    ]
  ],
  [
    [
      12202,
      12202
    ],
    "mapped",
    [
      38582
    ]
  ],
  [
    [
      12203,
      12203
    ],
    "mapped",
    [
      38585
    ]
  ],
  [
    [
      12204,
      12204
    ],
    "mapped",
    [
      38632
    ]
  ],
  [
    [
      12205,
      12205
    ],
    "mapped",
    [
      38737
    ]
  ],
  [
    [
      12206,
      12206
    ],
    "mapped",
    [
      38750
    ]
  ],
  [
    [
      12207,
      12207
    ],
    "mapped",
    [
      38754
    ]
  ],
  [
    [
      12208,
      12208
    ],
    "mapped",
    [
      38761
    ]
  ],
  [
    [
      12209,
      12209
    ],
    "mapped",
    [
      38859
    ]
  ],
  [
    [
      12210,
      12210
    ],
    "mapped",
    [
      38893
    ]
  ],
  [
    [
      12211,
      12211
    ],
    "mapped",
    [
      38899
    ]
  ],
  [
    [
      12212,
      12212
    ],
    "mapped",
    [
      38913
    ]
  ],
  [
    [
      12213,
      12213
    ],
    "mapped",
    [
      39080
    ]
  ],
  [
    [
      12214,
      12214
    ],
    "mapped",
    [
      39131
    ]
  ],
  [
    [
      12215,
      12215
    ],
    "mapped",
    [
      39135
    ]
  ],
  [
    [
      12216,
      12216
    ],
    "mapped",
    [
      39318
    ]
  ],
  [
    [
      12217,
      12217
    ],
    "mapped",
    [
      39321
    ]
  ],
  [
    [
      12218,
      12218
    ],
    "mapped",
    [
      39340
    ]
  ],
  [
    [
      12219,
      12219
    ],
    "mapped",
    [
      39592
    ]
  ],
  [
    [
      12220,
      12220
    ],
    "mapped",
    [
      39640
    ]
  ],
  [
    [
      12221,
      12221
    ],
    "mapped",
    [
      39647
    ]
  ],
  [
    [
      12222,
      12222
    ],
    "mapped",
    [
      39717
    ]
  ],
  [
    [
      12223,
      12223
    ],
    "mapped",
    [
      39727
    ]
  ],
  [
    [
      12224,
      12224
    ],
    "mapped",
    [
      39730
    ]
  ],
  [
    [
      12225,
      12225
    ],
    "mapped",
    [
      39740
    ]
  ],
  [
    [
      12226,
      12226
    ],
    "mapped",
    [
      39770
    ]
  ],
  [
    [
      12227,
      12227
    ],
    "mapped",
    [
      40165
    ]
  ],
  [
    [
      12228,
      12228
    ],
    "mapped",
    [
      40565
    ]
  ],
  [
    [
      12229,
      12229
    ],
    "mapped",
    [
      40575
    ]
  ],
  [
    [
      12230,
      12230
    ],
    "mapped",
    [
      40613
    ]
  ],
  [
    [
      12231,
      12231
    ],
    "mapped",
    [
      40635
    ]
  ],
  [
    [
      12232,
      12232
    ],
    "mapped",
    [
      40643
    ]
  ],
  [
    [
      12233,
      12233
    ],
    "mapped",
    [
      40653
    ]
  ],
  [
    [
      12234,
      12234
    ],
    "mapped",
    [
      40657
    ]
  ],
  [
    [
      12235,
      12235
    ],
    "mapped",
    [
      40697
    ]
  ],
  [
    [
      12236,
      12236
    ],
    "mapped",
    [
      40701
    ]
  ],
  [
    [
      12237,
      12237
    ],
    "mapped",
    [
      40718
    ]
  ],
  [
    [
      12238,
      12238
    ],
    "mapped",
    [
      40723
    ]
  ],
  [
    [
      12239,
      12239
    ],
    "mapped",
    [
      40736
    ]
  ],
  [
    [
      12240,
      12240
    ],
    "mapped",
    [
      40763
    ]
  ],
  [
    [
      12241,
      12241
    ],
    "mapped",
    [
      40778
    ]
  ],
  [
    [
      12242,
      12242
    ],
    "mapped",
    [
      40786
    ]
  ],
  [
    [
      12243,
      12243
    ],
    "mapped",
    [
      40845
    ]
  ],
  [
    [
      12244,
      12244
    ],
    "mapped",
    [
      40860
    ]
  ],
  [
    [
      12245,
      12245
    ],
    "mapped",
    [
      40864
    ]
  ],
  [
    [
      12246,
      12271
    ],
    "disallowed"
  ],
  [
    [
      12272,
      12283
    ],
    "disallowed"
  ],
  [
    [
      12284,
      12287
    ],
    "disallowed"
  ],
  [
    [
      12288,
      12288
    ],
    "disallowed_STD3_mapped",
    [
      32
    ]
  ],
  [
    [
      12289,
      12289
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      12290,
      12290
    ],
    "mapped",
    [
      46
    ]
  ],
  [
    [
      12291,
      12292
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      12293,
      12295
    ],
    "valid"
  ],
  [
    [
      12296,
      12329
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      12330,
      12333
    ],
    "valid"
  ],
  [
    [
      12334,
      12341
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      12342,
      12342
    ],
    "mapped",
    [
      12306
    ]
  ],
  [
    [
      12343,
      12343
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      12344,
      12344
    ],
    "mapped",
    [
      21313
    ]
  ],
  [
    [
      12345,
      12345
    ],
    "mapped",
    [
      21316
    ]
  ],
  [
    [
      12346,
      12346
    ],
    "mapped",
    [
      21317
    ]
  ],
  [
    [
      12347,
      12347
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      12348,
      12348
    ],
    "valid"
  ],
  [
    [
      12349,
      12349
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      12350,
      12350
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      12351,
      12351
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      12352,
      12352
    ],
    "disallowed"
  ],
  [
    [
      12353,
      12436
    ],
    "valid"
  ],
  [
    [
      12437,
      12438
    ],
    "valid"
  ],
  [
    [
      12439,
      12440
    ],
    "disallowed"
  ],
  [
    [
      12441,
      12442
    ],
    "valid"
  ],
  [
    [
      12443,
      12443
    ],
    "disallowed_STD3_mapped",
    [
      32,
      12441
    ]
  ],
  [
    [
      12444,
      12444
    ],
    "disallowed_STD3_mapped",
    [
      32,
      12442
    ]
  ],
  [
    [
      12445,
      12446
    ],
    "valid"
  ],
  [
    [
      12447,
      12447
    ],
    "mapped",
    [
      12424,
      12426
    ]
  ],
  [
    [
      12448,
      12448
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      12449,
      12542
    ],
    "valid"
  ],
  [
    [
      12543,
      12543
    ],
    "mapped",
    [
      12467,
      12488
    ]
  ],
  [
    [
      12544,
      12548
    ],
    "disallowed"
  ],
  [
    [
      12549,
      12588
    ],
    "valid"
  ],
  [
    [
      12589,
      12589
    ],
    "valid"
  ],
  [
    [
      12590,
      12592
    ],
    "disallowed"
  ],
  [
    [
      12593,
      12593
    ],
    "mapped",
    [
      4352
    ]
  ],
  [
    [
      12594,
      12594
    ],
    "mapped",
    [
      4353
    ]
  ],
  [
    [
      12595,
      12595
    ],
    "mapped",
    [
      4522
    ]
  ],
  [
    [
      12596,
      12596
    ],
    "mapped",
    [
      4354
    ]
  ],
  [
    [
      12597,
      12597
    ],
    "mapped",
    [
      4524
    ]
  ],
  [
    [
      12598,
      12598
    ],
    "mapped",
    [
      4525
    ]
  ],
  [
    [
      12599,
      12599
    ],
    "mapped",
    [
      4355
    ]
  ],
  [
    [
      12600,
      12600
    ],
    "mapped",
    [
      4356
    ]
  ],
  [
    [
      12601,
      12601
    ],
    "mapped",
    [
      4357
    ]
  ],
  [
    [
      12602,
      12602
    ],
    "mapped",
    [
      4528
    ]
  ],
  [
    [
      12603,
      12603
    ],
    "mapped",
    [
      4529
    ]
  ],
  [
    [
      12604,
      12604
    ],
    "mapped",
    [
      4530
    ]
  ],
  [
    [
      12605,
      12605
    ],
    "mapped",
    [
      4531
    ]
  ],
  [
    [
      12606,
      12606
    ],
    "mapped",
    [
      4532
    ]
  ],
  [
    [
      12607,
      12607
    ],
    "mapped",
    [
      4533
    ]
  ],
  [
    [
      12608,
      12608
    ],
    "mapped",
    [
      4378
    ]
  ],
  [
    [
      12609,
      12609
    ],
    "mapped",
    [
      4358
    ]
  ],
  [
    [
      12610,
      12610
    ],
    "mapped",
    [
      4359
    ]
  ],
  [
    [
      12611,
      12611
    ],
    "mapped",
    [
      4360
    ]
  ],
  [
    [
      12612,
      12612
    ],
    "mapped",
    [
      4385
    ]
  ],
  [
    [
      12613,
      12613
    ],
    "mapped",
    [
      4361
    ]
  ],
  [
    [
      12614,
      12614
    ],
    "mapped",
    [
      4362
    ]
  ],
  [
    [
      12615,
      12615
    ],
    "mapped",
    [
      4363
    ]
  ],
  [
    [
      12616,
      12616
    ],
    "mapped",
    [
      4364
    ]
  ],
  [
    [
      12617,
      12617
    ],
    "mapped",
    [
      4365
    ]
  ],
  [
    [
      12618,
      12618
    ],
    "mapped",
    [
      4366
    ]
  ],
  [
    [
      12619,
      12619
    ],
    "mapped",
    [
      4367
    ]
  ],
  [
    [
      12620,
      12620
    ],
    "mapped",
    [
      4368
    ]
  ],
  [
    [
      12621,
      12621
    ],
    "mapped",
    [
      4369
    ]
  ],
  [
    [
      12622,
      12622
    ],
    "mapped",
    [
      4370
    ]
  ],
  [
    [
      12623,
      12623
    ],
    "mapped",
    [
      4449
    ]
  ],
  [
    [
      12624,
      12624
    ],
    "mapped",
    [
      4450
    ]
  ],
  [
    [
      12625,
      12625
    ],
    "mapped",
    [
      4451
    ]
  ],
  [
    [
      12626,
      12626
    ],
    "mapped",
    [
      4452
    ]
  ],
  [
    [
      12627,
      12627
    ],
    "mapped",
    [
      4453
    ]
  ],
  [
    [
      12628,
      12628
    ],
    "mapped",
    [
      4454
    ]
  ],
  [
    [
      12629,
      12629
    ],
    "mapped",
    [
      4455
    ]
  ],
  [
    [
      12630,
      12630
    ],
    "mapped",
    [
      4456
    ]
  ],
  [
    [
      12631,
      12631
    ],
    "mapped",
    [
      4457
    ]
  ],
  [
    [
      12632,
      12632
    ],
    "mapped",
    [
      4458
    ]
  ],
  [
    [
      12633,
      12633
    ],
    "mapped",
    [
      4459
    ]
  ],
  [
    [
      12634,
      12634
    ],
    "mapped",
    [
      4460
    ]
  ],
  [
    [
      12635,
      12635
    ],
    "mapped",
    [
      4461
    ]
  ],
  [
    [
      12636,
      12636
    ],
    "mapped",
    [
      4462
    ]
  ],
  [
    [
      12637,
      12637
    ],
    "mapped",
    [
      4463
    ]
  ],
  [
    [
      12638,
      12638
    ],
    "mapped",
    [
      4464
    ]
  ],
  [
    [
      12639,
      12639
    ],
    "mapped",
    [
      4465
    ]
  ],
  [
    [
      12640,
      12640
    ],
    "mapped",
    [
      4466
    ]
  ],
  [
    [
      12641,
      12641
    ],
    "mapped",
    [
      4467
    ]
  ],
  [
    [
      12642,
      12642
    ],
    "mapped",
    [
      4468
    ]
  ],
  [
    [
      12643,
      12643
    ],
    "mapped",
    [
      4469
    ]
  ],
  [
    [
      12644,
      12644
    ],
    "disallowed"
  ],
  [
    [
      12645,
      12645
    ],
    "mapped",
    [
      4372
    ]
  ],
  [
    [
      12646,
      12646
    ],
    "mapped",
    [
      4373
    ]
  ],
  [
    [
      12647,
      12647
    ],
    "mapped",
    [
      4551
    ]
  ],
  [
    [
      12648,
      12648
    ],
    "mapped",
    [
      4552
    ]
  ],
  [
    [
      12649,
      12649
    ],
    "mapped",
    [
      4556
    ]
  ],
  [
    [
      12650,
      12650
    ],
    "mapped",
    [
      4558
    ]
  ],
  [
    [
      12651,
      12651
    ],
    "mapped",
    [
      4563
    ]
  ],
  [
    [
      12652,
      12652
    ],
    "mapped",
    [
      4567
    ]
  ],
  [
    [
      12653,
      12653
    ],
    "mapped",
    [
      4569
    ]
  ],
  [
    [
      12654,
      12654
    ],
    "mapped",
    [
      4380
    ]
  ],
  [
    [
      12655,
      12655
    ],
    "mapped",
    [
      4573
    ]
  ],
  [
    [
      12656,
      12656
    ],
    "mapped",
    [
      4575
    ]
  ],
  [
    [
      12657,
      12657
    ],
    "mapped",
    [
      4381
    ]
  ],
  [
    [
      12658,
      12658
    ],
    "mapped",
    [
      4382
    ]
  ],
  [
    [
      12659,
      12659
    ],
    "mapped",
    [
      4384
    ]
  ],
  [
    [
      12660,
      12660
    ],
    "mapped",
    [
      4386
    ]
  ],
  [
    [
      12661,
      12661
    ],
    "mapped",
    [
      4387
    ]
  ],
  [
    [
      12662,
      12662
    ],
    "mapped",
    [
      4391
    ]
  ],
  [
    [
      12663,
      12663
    ],
    "mapped",
    [
      4393
    ]
  ],
  [
    [
      12664,
      12664
    ],
    "mapped",
    [
      4395
    ]
  ],
  [
    [
      12665,
      12665
    ],
    "mapped",
    [
      4396
    ]
  ],
  [
    [
      12666,
      12666
    ],
    "mapped",
    [
      4397
    ]
  ],
  [
    [
      12667,
      12667
    ],
    "mapped",
    [
      4398
    ]
  ],
  [
    [
      12668,
      12668
    ],
    "mapped",
    [
      4399
    ]
  ],
  [
    [
      12669,
      12669
    ],
    "mapped",
    [
      4402
    ]
  ],
  [
    [
      12670,
      12670
    ],
    "mapped",
    [
      4406
    ]
  ],
  [
    [
      12671,
      12671
    ],
    "mapped",
    [
      4416
    ]
  ],
  [
    [
      12672,
      12672
    ],
    "mapped",
    [
      4423
    ]
  ],
  [
    [
      12673,
      12673
    ],
    "mapped",
    [
      4428
    ]
  ],
  [
    [
      12674,
      12674
    ],
    "mapped",
    [
      4593
    ]
  ],
  [
    [
      12675,
      12675
    ],
    "mapped",
    [
      4594
    ]
  ],
  [
    [
      12676,
      12676
    ],
    "mapped",
    [
      4439
    ]
  ],
  [
    [
      12677,
      12677
    ],
    "mapped",
    [
      4440
    ]
  ],
  [
    [
      12678,
      12678
    ],
    "mapped",
    [
      4441
    ]
  ],
  [
    [
      12679,
      12679
    ],
    "mapped",
    [
      4484
    ]
  ],
  [
    [
      12680,
      12680
    ],
    "mapped",
    [
      4485
    ]
  ],
  [
    [
      12681,
      12681
    ],
    "mapped",
    [
      4488
    ]
  ],
  [
    [
      12682,
      12682
    ],
    "mapped",
    [
      4497
    ]
  ],
  [
    [
      12683,
      12683
    ],
    "mapped",
    [
      4498
    ]
  ],
  [
    [
      12684,
      12684
    ],
    "mapped",
    [
      4500
    ]
  ],
  [
    [
      12685,
      12685
    ],
    "mapped",
    [
      4510
    ]
  ],
  [
    [
      12686,
      12686
    ],
    "mapped",
    [
      4513
    ]
  ],
  [
    [
      12687,
      12687
    ],
    "disallowed"
  ],
  [
    [
      12688,
      12689
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      12690,
      12690
    ],
    "mapped",
    [
      19968
    ]
  ],
  [
    [
      12691,
      12691
    ],
    "mapped",
    [
      20108
    ]
  ],
  [
    [
      12692,
      12692
    ],
    "mapped",
    [
      19977
    ]
  ],
  [
    [
      12693,
      12693
    ],
    "mapped",
    [
      22235
    ]
  ],
  [
    [
      12694,
      12694
    ],
    "mapped",
    [
      19978
    ]
  ],
  [
    [
      12695,
      12695
    ],
    "mapped",
    [
      20013
    ]
  ],
  [
    [
      12696,
      12696
    ],
    "mapped",
    [
      19979
    ]
  ],
  [
    [
      12697,
      12697
    ],
    "mapped",
    [
      30002
    ]
  ],
  [
    [
      12698,
      12698
    ],
    "mapped",
    [
      20057
    ]
  ],
  [
    [
      12699,
      12699
    ],
    "mapped",
    [
      19993
    ]
  ],
  [
    [
      12700,
      12700
    ],
    "mapped",
    [
      19969
    ]
  ],
  [
    [
      12701,
      12701
    ],
    "mapped",
    [
      22825
    ]
  ],
  [
    [
      12702,
      12702
    ],
    "mapped",
    [
      22320
    ]
  ],
  [
    [
      12703,
      12703
    ],
    "mapped",
    [
      20154
    ]
  ],
  [
    [
      12704,
      12727
    ],
    "valid"
  ],
  [
    [
      12728,
      12730
    ],
    "valid"
  ],
  [
    [
      12731,
      12735
    ],
    "disallowed"
  ],
  [
    [
      12736,
      12751
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      12752,
      12771
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      12772,
      12783
    ],
    "disallowed"
  ],
  [
    [
      12784,
      12799
    ],
    "valid"
  ],
  [
    [
      12800,
      12800
    ],
    "disallowed_STD3_mapped",
    [
      40,
      4352,
      41
    ]
  ],
  [
    [
      12801,
      12801
    ],
    "disallowed_STD3_mapped",
    [
      40,
      4354,
      41
    ]
  ],
  [
    [
      12802,
      12802
    ],
    "disallowed_STD3_mapped",
    [
      40,
      4355,
      41
    ]
  ],
  [
    [
      12803,
      12803
    ],
    "disallowed_STD3_mapped",
    [
      40,
      4357,
      41
    ]
  ],
  [
    [
      12804,
      12804
    ],
    "disallowed_STD3_mapped",
    [
      40,
      4358,
      41
    ]
  ],
  [
    [
      12805,
      12805
    ],
    "disallowed_STD3_mapped",
    [
      40,
      4359,
      41
    ]
  ],
  [
    [
      12806,
      12806
    ],
    "disallowed_STD3_mapped",
    [
      40,
      4361,
      41
    ]
  ],
  [
    [
      12807,
      12807
    ],
    "disallowed_STD3_mapped",
    [
      40,
      4363,
      41
    ]
  ],
  [
    [
      12808,
      12808
    ],
    "disallowed_STD3_mapped",
    [
      40,
      4364,
      41
    ]
  ],
  [
    [
      12809,
      12809
    ],
    "disallowed_STD3_mapped",
    [
      40,
      4366,
      41
    ]
  ],
  [
    [
      12810,
      12810
    ],
    "disallowed_STD3_mapped",
    [
      40,
      4367,
      41
    ]
  ],
  [
    [
      12811,
      12811
    ],
    "disallowed_STD3_mapped",
    [
      40,
      4368,
      41
    ]
  ],
  [
    [
      12812,
      12812
    ],
    "disallowed_STD3_mapped",
    [
      40,
      4369,
      41
    ]
  ],
  [
    [
      12813,
      12813
    ],
    "disallowed_STD3_mapped",
    [
      40,
      4370,
      41
    ]
  ],
  [
    [
      12814,
      12814
    ],
    "disallowed_STD3_mapped",
    [
      40,
      44032,
      41
    ]
  ],
  [
    [
      12815,
      12815
    ],
    "disallowed_STD3_mapped",
    [
      40,
      45208,
      41
    ]
  ],
  [
    [
      12816,
      12816
    ],
    "disallowed_STD3_mapped",
    [
      40,
      45796,
      41
    ]
  ],
  [
    [
      12817,
      12817
    ],
    "disallowed_STD3_mapped",
    [
      40,
      46972,
      41
    ]
  ],
  [
    [
      12818,
      12818
    ],
    "disallowed_STD3_mapped",
    [
      40,
      47560,
      41
    ]
  ],
  [
    [
      12819,
      12819
    ],
    "disallowed_STD3_mapped",
    [
      40,
      48148,
      41
    ]
  ],
  [
    [
      12820,
      12820
    ],
    "disallowed_STD3_mapped",
    [
      40,
      49324,
      41
    ]
  ],
  [
    [
      12821,
      12821
    ],
    "disallowed_STD3_mapped",
    [
      40,
      50500,
      41
    ]
  ],
  [
    [
      12822,
      12822
    ],
    "disallowed_STD3_mapped",
    [
      40,
      51088,
      41
    ]
  ],
  [
    [
      12823,
      12823
    ],
    "disallowed_STD3_mapped",
    [
      40,
      52264,
      41
    ]
  ],
  [
    [
      12824,
      12824
    ],
    "disallowed_STD3_mapped",
    [
      40,
      52852,
      41
    ]
  ],
  [
    [
      12825,
      12825
    ],
    "disallowed_STD3_mapped",
    [
      40,
      53440,
      41
    ]
  ],
  [
    [
      12826,
      12826
    ],
    "disallowed_STD3_mapped",
    [
      40,
      54028,
      41
    ]
  ],
  [
    [
      12827,
      12827
    ],
    "disallowed_STD3_mapped",
    [
      40,
      54616,
      41
    ]
  ],
  [
    [
      12828,
      12828
    ],
    "disallowed_STD3_mapped",
    [
      40,
      51452,
      41
    ]
  ],
  [
    [
      12829,
      12829
    ],
    "disallowed_STD3_mapped",
    [
      40,
      50724,
      51204,
      41
    ]
  ],
  [
    [
      12830,
      12830
    ],
    "disallowed_STD3_mapped",
    [
      40,
      50724,
      54980,
      41
    ]
  ],
  [
    [
      12831,
      12831
    ],
    "disallowed"
  ],
  [
    [
      12832,
      12832
    ],
    "disallowed_STD3_mapped",
    [
      40,
      19968,
      41
    ]
  ],
  [
    [
      12833,
      12833
    ],
    "disallowed_STD3_mapped",
    [
      40,
      20108,
      41
    ]
  ],
  [
    [
      12834,
      12834
    ],
    "disallowed_STD3_mapped",
    [
      40,
      19977,
      41
    ]
  ],
  [
    [
      12835,
      12835
    ],
    "disallowed_STD3_mapped",
    [
      40,
      22235,
      41
    ]
  ],
  [
    [
      12836,
      12836
    ],
    "disallowed_STD3_mapped",
    [
      40,
      20116,
      41
    ]
  ],
  [
    [
      12837,
      12837
    ],
    "disallowed_STD3_mapped",
    [
      40,
      20845,
      41
    ]
  ],
  [
    [
      12838,
      12838
    ],
    "disallowed_STD3_mapped",
    [
      40,
      19971,
      41
    ]
  ],
  [
    [
      12839,
      12839
    ],
    "disallowed_STD3_mapped",
    [
      40,
      20843,
      41
    ]
  ],
  [
    [
      12840,
      12840
    ],
    "disallowed_STD3_mapped",
    [
      40,
      20061,
      41
    ]
  ],
  [
    [
      12841,
      12841
    ],
    "disallowed_STD3_mapped",
    [
      40,
      21313,
      41
    ]
  ],
  [
    [
      12842,
      12842
    ],
    "disallowed_STD3_mapped",
    [
      40,
      26376,
      41
    ]
  ],
  [
    [
      12843,
      12843
    ],
    "disallowed_STD3_mapped",
    [
      40,
      28779,
      41
    ]
  ],
  [
    [
      12844,
      12844
    ],
    "disallowed_STD3_mapped",
    [
      40,
      27700,
      41
    ]
  ],
  [
    [
      12845,
      12845
    ],
    "disallowed_STD3_mapped",
    [
      40,
      26408,
      41
    ]
  ],
  [
    [
      12846,
      12846
    ],
    "disallowed_STD3_mapped",
    [
      40,
      37329,
      41
    ]
  ],
  [
    [
      12847,
      12847
    ],
    "disallowed_STD3_mapped",
    [
      40,
      22303,
      41
    ]
  ],
  [
    [
      12848,
      12848
    ],
    "disallowed_STD3_mapped",
    [
      40,
      26085,
      41
    ]
  ],
  [
    [
      12849,
      12849
    ],
    "disallowed_STD3_mapped",
    [
      40,
      26666,
      41
    ]
  ],
  [
    [
      12850,
      12850
    ],
    "disallowed_STD3_mapped",
    [
      40,
      26377,
      41
    ]
  ],
  [
    [
      12851,
      12851
    ],
    "disallowed_STD3_mapped",
    [
      40,
      31038,
      41
    ]
  ],
  [
    [
      12852,
      12852
    ],
    "disallowed_STD3_mapped",
    [
      40,
      21517,
      41
    ]
  ],
  [
    [
      12853,
      12853
    ],
    "disallowed_STD3_mapped",
    [
      40,
      29305,
      41
    ]
  ],
  [
    [
      12854,
      12854
    ],
    "disallowed_STD3_mapped",
    [
      40,
      36001,
      41
    ]
  ],
  [
    [
      12855,
      12855
    ],
    "disallowed_STD3_mapped",
    [
      40,
      31069,
      41
    ]
  ],
  [
    [
      12856,
      12856
    ],
    "disallowed_STD3_mapped",
    [
      40,
      21172,
      41
    ]
  ],
  [
    [
      12857,
      12857
    ],
    "disallowed_STD3_mapped",
    [
      40,
      20195,
      41
    ]
  ],
  [
    [
      12858,
      12858
    ],
    "disallowed_STD3_mapped",
    [
      40,
      21628,
      41
    ]
  ],
  [
    [
      12859,
      12859
    ],
    "disallowed_STD3_mapped",
    [
      40,
      23398,
      41
    ]
  ],
  [
    [
      12860,
      12860
    ],
    "disallowed_STD3_mapped",
    [
      40,
      30435,
      41
    ]
  ],
  [
    [
      12861,
      12861
    ],
    "disallowed_STD3_mapped",
    [
      40,
      20225,
      41
    ]
  ],
  [
    [
      12862,
      12862
    ],
    "disallowed_STD3_mapped",
    [
      40,
      36039,
      41
    ]
  ],
  [
    [
      12863,
      12863
    ],
    "disallowed_STD3_mapped",
    [
      40,
      21332,
      41
    ]
  ],
  [
    [
      12864,
      12864
    ],
    "disallowed_STD3_mapped",
    [
      40,
      31085,
      41
    ]
  ],
  [
    [
      12865,
      12865
    ],
    "disallowed_STD3_mapped",
    [
      40,
      20241,
      41
    ]
  ],
  [
    [
      12866,
      12866
    ],
    "disallowed_STD3_mapped",
    [
      40,
      33258,
      41
    ]
  ],
  [
    [
      12867,
      12867
    ],
    "disallowed_STD3_mapped",
    [
      40,
      33267,
      41
    ]
  ],
  [
    [
      12868,
      12868
    ],
    "mapped",
    [
      21839
    ]
  ],
  [
    [
      12869,
      12869
    ],
    "mapped",
    [
      24188
    ]
  ],
  [
    [
      12870,
      12870
    ],
    "mapped",
    [
      25991
    ]
  ],
  [
    [
      12871,
      12871
    ],
    "mapped",
    [
      31631
    ]
  ],
  [
    [
      12872,
      12879
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      12880,
      12880
    ],
    "mapped",
    [
      112,
      116,
      101
    ]
  ],
  [
    [
      12881,
      12881
    ],
    "mapped",
    [
      50,
      49
    ]
  ],
  [
    [
      12882,
      12882
    ],
    "mapped",
    [
      50,
      50
    ]
  ],
  [
    [
      12883,
      12883
    ],
    "mapped",
    [
      50,
      51
    ]
  ],
  [
    [
      12884,
      12884
    ],
    "mapped",
    [
      50,
      52
    ]
  ],
  [
    [
      12885,
      12885
    ],
    "mapped",
    [
      50,
      53
    ]
  ],
  [
    [
      12886,
      12886
    ],
    "mapped",
    [
      50,
      54
    ]
  ],
  [
    [
      12887,
      12887
    ],
    "mapped",
    [
      50,
      55
    ]
  ],
  [
    [
      12888,
      12888
    ],
    "mapped",
    [
      50,
      56
    ]
  ],
  [
    [
      12889,
      12889
    ],
    "mapped",
    [
      50,
      57
    ]
  ],
  [
    [
      12890,
      12890
    ],
    "mapped",
    [
      51,
      48
    ]
  ],
  [
    [
      12891,
      12891
    ],
    "mapped",
    [
      51,
      49
    ]
  ],
  [
    [
      12892,
      12892
    ],
    "mapped",
    [
      51,
      50
    ]
  ],
  [
    [
      12893,
      12893
    ],
    "mapped",
    [
      51,
      51
    ]
  ],
  [
    [
      12894,
      12894
    ],
    "mapped",
    [
      51,
      52
    ]
  ],
  [
    [
      12895,
      12895
    ],
    "mapped",
    [
      51,
      53
    ]
  ],
  [
    [
      12896,
      12896
    ],
    "mapped",
    [
      4352
    ]
  ],
  [
    [
      12897,
      12897
    ],
    "mapped",
    [
      4354
    ]
  ],
  [
    [
      12898,
      12898
    ],
    "mapped",
    [
      4355
    ]
  ],
  [
    [
      12899,
      12899
    ],
    "mapped",
    [
      4357
    ]
  ],
  [
    [
      12900,
      12900
    ],
    "mapped",
    [
      4358
    ]
  ],
  [
    [
      12901,
      12901
    ],
    "mapped",
    [
      4359
    ]
  ],
  [
    [
      12902,
      12902
    ],
    "mapped",
    [
      4361
    ]
  ],
  [
    [
      12903,
      12903
    ],
    "mapped",
    [
      4363
    ]
  ],
  [
    [
      12904,
      12904
    ],
    "mapped",
    [
      4364
    ]
  ],
  [
    [
      12905,
      12905
    ],
    "mapped",
    [
      4366
    ]
  ],
  [
    [
      12906,
      12906
    ],
    "mapped",
    [
      4367
    ]
  ],
  [
    [
      12907,
      12907
    ],
    "mapped",
    [
      4368
    ]
  ],
  [
    [
      12908,
      12908
    ],
    "mapped",
    [
      4369
    ]
  ],
  [
    [
      12909,
      12909
    ],
    "mapped",
    [
      4370
    ]
  ],
  [
    [
      12910,
      12910
    ],
    "mapped",
    [
      44032
    ]
  ],
  [
    [
      12911,
      12911
    ],
    "mapped",
    [
      45208
    ]
  ],
  [
    [
      12912,
      12912
    ],
    "mapped",
    [
      45796
    ]
  ],
  [
    [
      12913,
      12913
    ],
    "mapped",
    [
      46972
    ]
  ],
  [
    [
      12914,
      12914
    ],
    "mapped",
    [
      47560
    ]
  ],
  [
    [
      12915,
      12915
    ],
    "mapped",
    [
      48148
    ]
  ],
  [
    [
      12916,
      12916
    ],
    "mapped",
    [
      49324
    ]
  ],
  [
    [
      12917,
      12917
    ],
    "mapped",
    [
      50500
    ]
  ],
  [
    [
      12918,
      12918
    ],
    "mapped",
    [
      51088
    ]
  ],
  [
    [
      12919,
      12919
    ],
    "mapped",
    [
      52264
    ]
  ],
  [
    [
      12920,
      12920
    ],
    "mapped",
    [
      52852
    ]
  ],
  [
    [
      12921,
      12921
    ],
    "mapped",
    [
      53440
    ]
  ],
  [
    [
      12922,
      12922
    ],
    "mapped",
    [
      54028
    ]
  ],
  [
    [
      12923,
      12923
    ],
    "mapped",
    [
      54616
    ]
  ],
  [
    [
      12924,
      12924
    ],
    "mapped",
    [
      52280,
      44256
    ]
  ],
  [
    [
      12925,
      12925
    ],
    "mapped",
    [
      51452,
      51032
    ]
  ],
  [
    [
      12926,
      12926
    ],
    "mapped",
    [
      50864
    ]
  ],
  [
    [
      12927,
      12927
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      12928,
      12928
    ],
    "mapped",
    [
      19968
    ]
  ],
  [
    [
      12929,
      12929
    ],
    "mapped",
    [
      20108
    ]
  ],
  [
    [
      12930,
      12930
    ],
    "mapped",
    [
      19977
    ]
  ],
  [
    [
      12931,
      12931
    ],
    "mapped",
    [
      22235
    ]
  ],
  [
    [
      12932,
      12932
    ],
    "mapped",
    [
      20116
    ]
  ],
  [
    [
      12933,
      12933
    ],
    "mapped",
    [
      20845
    ]
  ],
  [
    [
      12934,
      12934
    ],
    "mapped",
    [
      19971
    ]
  ],
  [
    [
      12935,
      12935
    ],
    "mapped",
    [
      20843
    ]
  ],
  [
    [
      12936,
      12936
    ],
    "mapped",
    [
      20061
    ]
  ],
  [
    [
      12937,
      12937
    ],
    "mapped",
    [
      21313
    ]
  ],
  [
    [
      12938,
      12938
    ],
    "mapped",
    [
      26376
    ]
  ],
  [
    [
      12939,
      12939
    ],
    "mapped",
    [
      28779
    ]
  ],
  [
    [
      12940,
      12940
    ],
    "mapped",
    [
      27700
    ]
  ],
  [
    [
      12941,
      12941
    ],
    "mapped",
    [
      26408
    ]
  ],
  [
    [
      12942,
      12942
    ],
    "mapped",
    [
      37329
    ]
  ],
  [
    [
      12943,
      12943
    ],
    "mapped",
    [
      22303
    ]
  ],
  [
    [
      12944,
      12944
    ],
    "mapped",
    [
      26085
    ]
  ],
  [
    [
      12945,
      12945
    ],
    "mapped",
    [
      26666
    ]
  ],
  [
    [
      12946,
      12946
    ],
    "mapped",
    [
      26377
    ]
  ],
  [
    [
      12947,
      12947
    ],
    "mapped",
    [
      31038
    ]
  ],
  [
    [
      12948,
      12948
    ],
    "mapped",
    [
      21517
    ]
  ],
  [
    [
      12949,
      12949
    ],
    "mapped",
    [
      29305
    ]
  ],
  [
    [
      12950,
      12950
    ],
    "mapped",
    [
      36001
    ]
  ],
  [
    [
      12951,
      12951
    ],
    "mapped",
    [
      31069
    ]
  ],
  [
    [
      12952,
      12952
    ],
    "mapped",
    [
      21172
    ]
  ],
  [
    [
      12953,
      12953
    ],
    "mapped",
    [
      31192
    ]
  ],
  [
    [
      12954,
      12954
    ],
    "mapped",
    [
      30007
    ]
  ],
  [
    [
      12955,
      12955
    ],
    "mapped",
    [
      22899
    ]
  ],
  [
    [
      12956,
      12956
    ],
    "mapped",
    [
      36969
    ]
  ],
  [
    [
      12957,
      12957
    ],
    "mapped",
    [
      20778
    ]
  ],
  [
    [
      12958,
      12958
    ],
    "mapped",
    [
      21360
    ]
  ],
  [
    [
      12959,
      12959
    ],
    "mapped",
    [
      27880
    ]
  ],
  [
    [
      12960,
      12960
    ],
    "mapped",
    [
      38917
    ]
  ],
  [
    [
      12961,
      12961
    ],
    "mapped",
    [
      20241
    ]
  ],
  [
    [
      12962,
      12962
    ],
    "mapped",
    [
      20889
    ]
  ],
  [
    [
      12963,
      12963
    ],
    "mapped",
    [
      27491
    ]
  ],
  [
    [
      12964,
      12964
    ],
    "mapped",
    [
      19978
    ]
  ],
  [
    [
      12965,
      12965
    ],
    "mapped",
    [
      20013
    ]
  ],
  [
    [
      12966,
      12966
    ],
    "mapped",
    [
      19979
    ]
  ],
  [
    [
      12967,
      12967
    ],
    "mapped",
    [
      24038
    ]
  ],
  [
    [
      12968,
      12968
    ],
    "mapped",
    [
      21491
    ]
  ],
  [
    [
      12969,
      12969
    ],
    "mapped",
    [
      21307
    ]
  ],
  [
    [
      12970,
      12970
    ],
    "mapped",
    [
      23447
    ]
  ],
  [
    [
      12971,
      12971
    ],
    "mapped",
    [
      23398
    ]
  ],
  [
    [
      12972,
      12972
    ],
    "mapped",
    [
      30435
    ]
  ],
  [
    [
      12973,
      12973
    ],
    "mapped",
    [
      20225
    ]
  ],
  [
    [
      12974,
      12974
    ],
    "mapped",
    [
      36039
    ]
  ],
  [
    [
      12975,
      12975
    ],
    "mapped",
    [
      21332
    ]
  ],
  [
    [
      12976,
      12976
    ],
    "mapped",
    [
      22812
    ]
  ],
  [
    [
      12977,
      12977
    ],
    "mapped",
    [
      51,
      54
    ]
  ],
  [
    [
      12978,
      12978
    ],
    "mapped",
    [
      51,
      55
    ]
  ],
  [
    [
      12979,
      12979
    ],
    "mapped",
    [
      51,
      56
    ]
  ],
  [
    [
      12980,
      12980
    ],
    "mapped",
    [
      51,
      57
    ]
  ],
  [
    [
      12981,
      12981
    ],
    "mapped",
    [
      52,
      48
    ]
  ],
  [
    [
      12982,
      12982
    ],
    "mapped",
    [
      52,
      49
    ]
  ],
  [
    [
      12983,
      12983
    ],
    "mapped",
    [
      52,
      50
    ]
  ],
  [
    [
      12984,
      12984
    ],
    "mapped",
    [
      52,
      51
    ]
  ],
  [
    [
      12985,
      12985
    ],
    "mapped",
    [
      52,
      52
    ]
  ],
  [
    [
      12986,
      12986
    ],
    "mapped",
    [
      52,
      53
    ]
  ],
  [
    [
      12987,
      12987
    ],
    "mapped",
    [
      52,
      54
    ]
  ],
  [
    [
      12988,
      12988
    ],
    "mapped",
    [
      52,
      55
    ]
  ],
  [
    [
      12989,
      12989
    ],
    "mapped",
    [
      52,
      56
    ]
  ],
  [
    [
      12990,
      12990
    ],
    "mapped",
    [
      52,
      57
    ]
  ],
  [
    [
      12991,
      12991
    ],
    "mapped",
    [
      53,
      48
    ]
  ],
  [
    [
      12992,
      12992
    ],
    "mapped",
    [
      49,
      26376
    ]
  ],
  [
    [
      12993,
      12993
    ],
    "mapped",
    [
      50,
      26376
    ]
  ],
  [
    [
      12994,
      12994
    ],
    "mapped",
    [
      51,
      26376
    ]
  ],
  [
    [
      12995,
      12995
    ],
    "mapped",
    [
      52,
      26376
    ]
  ],
  [
    [
      12996,
      12996
    ],
    "mapped",
    [
      53,
      26376
    ]
  ],
  [
    [
      12997,
      12997
    ],
    "mapped",
    [
      54,
      26376
    ]
  ],
  [
    [
      12998,
      12998
    ],
    "mapped",
    [
      55,
      26376
    ]
  ],
  [
    [
      12999,
      12999
    ],
    "mapped",
    [
      56,
      26376
    ]
  ],
  [
    [
      13e3,
      13e3
    ],
    "mapped",
    [
      57,
      26376
    ]
  ],
  [
    [
      13001,
      13001
    ],
    "mapped",
    [
      49,
      48,
      26376
    ]
  ],
  [
    [
      13002,
      13002
    ],
    "mapped",
    [
      49,
      49,
      26376
    ]
  ],
  [
    [
      13003,
      13003
    ],
    "mapped",
    [
      49,
      50,
      26376
    ]
  ],
  [
    [
      13004,
      13004
    ],
    "mapped",
    [
      104,
      103
    ]
  ],
  [
    [
      13005,
      13005
    ],
    "mapped",
    [
      101,
      114,
      103
    ]
  ],
  [
    [
      13006,
      13006
    ],
    "mapped",
    [
      101,
      118
    ]
  ],
  [
    [
      13007,
      13007
    ],
    "mapped",
    [
      108,
      116,
      100
    ]
  ],
  [
    [
      13008,
      13008
    ],
    "mapped",
    [
      12450
    ]
  ],
  [
    [
      13009,
      13009
    ],
    "mapped",
    [
      12452
    ]
  ],
  [
    [
      13010,
      13010
    ],
    "mapped",
    [
      12454
    ]
  ],
  [
    [
      13011,
      13011
    ],
    "mapped",
    [
      12456
    ]
  ],
  [
    [
      13012,
      13012
    ],
    "mapped",
    [
      12458
    ]
  ],
  [
    [
      13013,
      13013
    ],
    "mapped",
    [
      12459
    ]
  ],
  [
    [
      13014,
      13014
    ],
    "mapped",
    [
      12461
    ]
  ],
  [
    [
      13015,
      13015
    ],
    "mapped",
    [
      12463
    ]
  ],
  [
    [
      13016,
      13016
    ],
    "mapped",
    [
      12465
    ]
  ],
  [
    [
      13017,
      13017
    ],
    "mapped",
    [
      12467
    ]
  ],
  [
    [
      13018,
      13018
    ],
    "mapped",
    [
      12469
    ]
  ],
  [
    [
      13019,
      13019
    ],
    "mapped",
    [
      12471
    ]
  ],
  [
    [
      13020,
      13020
    ],
    "mapped",
    [
      12473
    ]
  ],
  [
    [
      13021,
      13021
    ],
    "mapped",
    [
      12475
    ]
  ],
  [
    [
      13022,
      13022
    ],
    "mapped",
    [
      12477
    ]
  ],
  [
    [
      13023,
      13023
    ],
    "mapped",
    [
      12479
    ]
  ],
  [
    [
      13024,
      13024
    ],
    "mapped",
    [
      12481
    ]
  ],
  [
    [
      13025,
      13025
    ],
    "mapped",
    [
      12484
    ]
  ],
  [
    [
      13026,
      13026
    ],
    "mapped",
    [
      12486
    ]
  ],
  [
    [
      13027,
      13027
    ],
    "mapped",
    [
      12488
    ]
  ],
  [
    [
      13028,
      13028
    ],
    "mapped",
    [
      12490
    ]
  ],
  [
    [
      13029,
      13029
    ],
    "mapped",
    [
      12491
    ]
  ],
  [
    [
      13030,
      13030
    ],
    "mapped",
    [
      12492
    ]
  ],
  [
    [
      13031,
      13031
    ],
    "mapped",
    [
      12493
    ]
  ],
  [
    [
      13032,
      13032
    ],
    "mapped",
    [
      12494
    ]
  ],
  [
    [
      13033,
      13033
    ],
    "mapped",
    [
      12495
    ]
  ],
  [
    [
      13034,
      13034
    ],
    "mapped",
    [
      12498
    ]
  ],
  [
    [
      13035,
      13035
    ],
    "mapped",
    [
      12501
    ]
  ],
  [
    [
      13036,
      13036
    ],
    "mapped",
    [
      12504
    ]
  ],
  [
    [
      13037,
      13037
    ],
    "mapped",
    [
      12507
    ]
  ],
  [
    [
      13038,
      13038
    ],
    "mapped",
    [
      12510
    ]
  ],
  [
    [
      13039,
      13039
    ],
    "mapped",
    [
      12511
    ]
  ],
  [
    [
      13040,
      13040
    ],
    "mapped",
    [
      12512
    ]
  ],
  [
    [
      13041,
      13041
    ],
    "mapped",
    [
      12513
    ]
  ],
  [
    [
      13042,
      13042
    ],
    "mapped",
    [
      12514
    ]
  ],
  [
    [
      13043,
      13043
    ],
    "mapped",
    [
      12516
    ]
  ],
  [
    [
      13044,
      13044
    ],
    "mapped",
    [
      12518
    ]
  ],
  [
    [
      13045,
      13045
    ],
    "mapped",
    [
      12520
    ]
  ],
  [
    [
      13046,
      13046
    ],
    "mapped",
    [
      12521
    ]
  ],
  [
    [
      13047,
      13047
    ],
    "mapped",
    [
      12522
    ]
  ],
  [
    [
      13048,
      13048
    ],
    "mapped",
    [
      12523
    ]
  ],
  [
    [
      13049,
      13049
    ],
    "mapped",
    [
      12524
    ]
  ],
  [
    [
      13050,
      13050
    ],
    "mapped",
    [
      12525
    ]
  ],
  [
    [
      13051,
      13051
    ],
    "mapped",
    [
      12527
    ]
  ],
  [
    [
      13052,
      13052
    ],
    "mapped",
    [
      12528
    ]
  ],
  [
    [
      13053,
      13053
    ],
    "mapped",
    [
      12529
    ]
  ],
  [
    [
      13054,
      13054
    ],
    "mapped",
    [
      12530
    ]
  ],
  [
    [
      13055,
      13055
    ],
    "disallowed"
  ],
  [
    [
      13056,
      13056
    ],
    "mapped",
    [
      12450,
      12497,
      12540,
      12488
    ]
  ],
  [
    [
      13057,
      13057
    ],
    "mapped",
    [
      12450,
      12523,
      12501,
      12449
    ]
  ],
  [
    [
      13058,
      13058
    ],
    "mapped",
    [
      12450,
      12531,
      12506,
      12450
    ]
  ],
  [
    [
      13059,
      13059
    ],
    "mapped",
    [
      12450,
      12540,
      12523
    ]
  ],
  [
    [
      13060,
      13060
    ],
    "mapped",
    [
      12452,
      12491,
      12531,
      12464
    ]
  ],
  [
    [
      13061,
      13061
    ],
    "mapped",
    [
      12452,
      12531,
      12481
    ]
  ],
  [
    [
      13062,
      13062
    ],
    "mapped",
    [
      12454,
      12457,
      12531
    ]
  ],
  [
    [
      13063,
      13063
    ],
    "mapped",
    [
      12456,
      12473,
      12463,
      12540,
      12489
    ]
  ],
  [
    [
      13064,
      13064
    ],
    "mapped",
    [
      12456,
      12540,
      12459,
      12540
    ]
  ],
  [
    [
      13065,
      13065
    ],
    "mapped",
    [
      12458,
      12531,
      12473
    ]
  ],
  [
    [
      13066,
      13066
    ],
    "mapped",
    [
      12458,
      12540,
      12512
    ]
  ],
  [
    [
      13067,
      13067
    ],
    "mapped",
    [
      12459,
      12452,
      12522
    ]
  ],
  [
    [
      13068,
      13068
    ],
    "mapped",
    [
      12459,
      12521,
      12483,
      12488
    ]
  ],
  [
    [
      13069,
      13069
    ],
    "mapped",
    [
      12459,
      12525,
      12522,
      12540
    ]
  ],
  [
    [
      13070,
      13070
    ],
    "mapped",
    [
      12460,
      12525,
      12531
    ]
  ],
  [
    [
      13071,
      13071
    ],
    "mapped",
    [
      12460,
      12531,
      12510
    ]
  ],
  [
    [
      13072,
      13072
    ],
    "mapped",
    [
      12462,
      12460
    ]
  ],
  [
    [
      13073,
      13073
    ],
    "mapped",
    [
      12462,
      12491,
      12540
    ]
  ],
  [
    [
      13074,
      13074
    ],
    "mapped",
    [
      12461,
      12517,
      12522,
      12540
    ]
  ],
  [
    [
      13075,
      13075
    ],
    "mapped",
    [
      12462,
      12523,
      12480,
      12540
    ]
  ],
  [
    [
      13076,
      13076
    ],
    "mapped",
    [
      12461,
      12525
    ]
  ],
  [
    [
      13077,
      13077
    ],
    "mapped",
    [
      12461,
      12525,
      12464,
      12521,
      12512
    ]
  ],
  [
    [
      13078,
      13078
    ],
    "mapped",
    [
      12461,
      12525,
      12513,
      12540,
      12488,
      12523
    ]
  ],
  [
    [
      13079,
      13079
    ],
    "mapped",
    [
      12461,
      12525,
      12527,
      12483,
      12488
    ]
  ],
  [
    [
      13080,
      13080
    ],
    "mapped",
    [
      12464,
      12521,
      12512
    ]
  ],
  [
    [
      13081,
      13081
    ],
    "mapped",
    [
      12464,
      12521,
      12512,
      12488,
      12531
    ]
  ],
  [
    [
      13082,
      13082
    ],
    "mapped",
    [
      12463,
      12523,
      12476,
      12452,
      12525
    ]
  ],
  [
    [
      13083,
      13083
    ],
    "mapped",
    [
      12463,
      12525,
      12540,
      12493
    ]
  ],
  [
    [
      13084,
      13084
    ],
    "mapped",
    [
      12465,
      12540,
      12473
    ]
  ],
  [
    [
      13085,
      13085
    ],
    "mapped",
    [
      12467,
      12523,
      12490
    ]
  ],
  [
    [
      13086,
      13086
    ],
    "mapped",
    [
      12467,
      12540,
      12509
    ]
  ],
  [
    [
      13087,
      13087
    ],
    "mapped",
    [
      12469,
      12452,
      12463,
      12523
    ]
  ],
  [
    [
      13088,
      13088
    ],
    "mapped",
    [
      12469,
      12531,
      12481,
      12540,
      12512
    ]
  ],
  [
    [
      13089,
      13089
    ],
    "mapped",
    [
      12471,
      12522,
      12531,
      12464
    ]
  ],
  [
    [
      13090,
      13090
    ],
    "mapped",
    [
      12475,
      12531,
      12481
    ]
  ],
  [
    [
      13091,
      13091
    ],
    "mapped",
    [
      12475,
      12531,
      12488
    ]
  ],
  [
    [
      13092,
      13092
    ],
    "mapped",
    [
      12480,
      12540,
      12473
    ]
  ],
  [
    [
      13093,
      13093
    ],
    "mapped",
    [
      12487,
      12471
    ]
  ],
  [
    [
      13094,
      13094
    ],
    "mapped",
    [
      12489,
      12523
    ]
  ],
  [
    [
      13095,
      13095
    ],
    "mapped",
    [
      12488,
      12531
    ]
  ],
  [
    [
      13096,
      13096
    ],
    "mapped",
    [
      12490,
      12494
    ]
  ],
  [
    [
      13097,
      13097
    ],
    "mapped",
    [
      12494,
      12483,
      12488
    ]
  ],
  [
    [
      13098,
      13098
    ],
    "mapped",
    [
      12495,
      12452,
      12484
    ]
  ],
  [
    [
      13099,
      13099
    ],
    "mapped",
    [
      12497,
      12540,
      12475,
      12531,
      12488
    ]
  ],
  [
    [
      13100,
      13100
    ],
    "mapped",
    [
      12497,
      12540,
      12484
    ]
  ],
  [
    [
      13101,
      13101
    ],
    "mapped",
    [
      12496,
      12540,
      12524,
      12523
    ]
  ],
  [
    [
      13102,
      13102
    ],
    "mapped",
    [
      12500,
      12450,
      12473,
      12488,
      12523
    ]
  ],
  [
    [
      13103,
      13103
    ],
    "mapped",
    [
      12500,
      12463,
      12523
    ]
  ],
  [
    [
      13104,
      13104
    ],
    "mapped",
    [
      12500,
      12467
    ]
  ],
  [
    [
      13105,
      13105
    ],
    "mapped",
    [
      12499,
      12523
    ]
  ],
  [
    [
      13106,
      13106
    ],
    "mapped",
    [
      12501,
      12449,
      12521,
      12483,
      12489
    ]
  ],
  [
    [
      13107,
      13107
    ],
    "mapped",
    [
      12501,
      12451,
      12540,
      12488
    ]
  ],
  [
    [
      13108,
      13108
    ],
    "mapped",
    [
      12502,
      12483,
      12471,
      12455,
      12523
    ]
  ],
  [
    [
      13109,
      13109
    ],
    "mapped",
    [
      12501,
      12521,
      12531
    ]
  ],
  [
    [
      13110,
      13110
    ],
    "mapped",
    [
      12504,
      12463,
      12479,
      12540,
      12523
    ]
  ],
  [
    [
      13111,
      13111
    ],
    "mapped",
    [
      12506,
      12477
    ]
  ],
  [
    [
      13112,
      13112
    ],
    "mapped",
    [
      12506,
      12491,
      12498
    ]
  ],
  [
    [
      13113,
      13113
    ],
    "mapped",
    [
      12504,
      12523,
      12484
    ]
  ],
  [
    [
      13114,
      13114
    ],
    "mapped",
    [
      12506,
      12531,
      12473
    ]
  ],
  [
    [
      13115,
      13115
    ],
    "mapped",
    [
      12506,
      12540,
      12472
    ]
  ],
  [
    [
      13116,
      13116
    ],
    "mapped",
    [
      12505,
      12540,
      12479
    ]
  ],
  [
    [
      13117,
      13117
    ],
    "mapped",
    [
      12509,
      12452,
      12531,
      12488
    ]
  ],
  [
    [
      13118,
      13118
    ],
    "mapped",
    [
      12508,
      12523,
      12488
    ]
  ],
  [
    [
      13119,
      13119
    ],
    "mapped",
    [
      12507,
      12531
    ]
  ],
  [
    [
      13120,
      13120
    ],
    "mapped",
    [
      12509,
      12531,
      12489
    ]
  ],
  [
    [
      13121,
      13121
    ],
    "mapped",
    [
      12507,
      12540,
      12523
    ]
  ],
  [
    [
      13122,
      13122
    ],
    "mapped",
    [
      12507,
      12540,
      12531
    ]
  ],
  [
    [
      13123,
      13123
    ],
    "mapped",
    [
      12510,
      12452,
      12463,
      12525
    ]
  ],
  [
    [
      13124,
      13124
    ],
    "mapped",
    [
      12510,
      12452,
      12523
    ]
  ],
  [
    [
      13125,
      13125
    ],
    "mapped",
    [
      12510,
      12483,
      12495
    ]
  ],
  [
    [
      13126,
      13126
    ],
    "mapped",
    [
      12510,
      12523,
      12463
    ]
  ],
  [
    [
      13127,
      13127
    ],
    "mapped",
    [
      12510,
      12531,
      12471,
      12519,
      12531
    ]
  ],
  [
    [
      13128,
      13128
    ],
    "mapped",
    [
      12511,
      12463,
      12525,
      12531
    ]
  ],
  [
    [
      13129,
      13129
    ],
    "mapped",
    [
      12511,
      12522
    ]
  ],
  [
    [
      13130,
      13130
    ],
    "mapped",
    [
      12511,
      12522,
      12496,
      12540,
      12523
    ]
  ],
  [
    [
      13131,
      13131
    ],
    "mapped",
    [
      12513,
      12460
    ]
  ],
  [
    [
      13132,
      13132
    ],
    "mapped",
    [
      12513,
      12460,
      12488,
      12531
    ]
  ],
  [
    [
      13133,
      13133
    ],
    "mapped",
    [
      12513,
      12540,
      12488,
      12523
    ]
  ],
  [
    [
      13134,
      13134
    ],
    "mapped",
    [
      12516,
      12540,
      12489
    ]
  ],
  [
    [
      13135,
      13135
    ],
    "mapped",
    [
      12516,
      12540,
      12523
    ]
  ],
  [
    [
      13136,
      13136
    ],
    "mapped",
    [
      12518,
      12450,
      12531
    ]
  ],
  [
    [
      13137,
      13137
    ],
    "mapped",
    [
      12522,
      12483,
      12488,
      12523
    ]
  ],
  [
    [
      13138,
      13138
    ],
    "mapped",
    [
      12522,
      12521
    ]
  ],
  [
    [
      13139,
      13139
    ],
    "mapped",
    [
      12523,
      12500,
      12540
    ]
  ],
  [
    [
      13140,
      13140
    ],
    "mapped",
    [
      12523,
      12540,
      12502,
      12523
    ]
  ],
  [
    [
      13141,
      13141
    ],
    "mapped",
    [
      12524,
      12512
    ]
  ],
  [
    [
      13142,
      13142
    ],
    "mapped",
    [
      12524,
      12531,
      12488,
      12466,
      12531
    ]
  ],
  [
    [
      13143,
      13143
    ],
    "mapped",
    [
      12527,
      12483,
      12488
    ]
  ],
  [
    [
      13144,
      13144
    ],
    "mapped",
    [
      48,
      28857
    ]
  ],
  [
    [
      13145,
      13145
    ],
    "mapped",
    [
      49,
      28857
    ]
  ],
  [
    [
      13146,
      13146
    ],
    "mapped",
    [
      50,
      28857
    ]
  ],
  [
    [
      13147,
      13147
    ],
    "mapped",
    [
      51,
      28857
    ]
  ],
  [
    [
      13148,
      13148
    ],
    "mapped",
    [
      52,
      28857
    ]
  ],
  [
    [
      13149,
      13149
    ],
    "mapped",
    [
      53,
      28857
    ]
  ],
  [
    [
      13150,
      13150
    ],
    "mapped",
    [
      54,
      28857
    ]
  ],
  [
    [
      13151,
      13151
    ],
    "mapped",
    [
      55,
      28857
    ]
  ],
  [
    [
      13152,
      13152
    ],
    "mapped",
    [
      56,
      28857
    ]
  ],
  [
    [
      13153,
      13153
    ],
    "mapped",
    [
      57,
      28857
    ]
  ],
  [
    [
      13154,
      13154
    ],
    "mapped",
    [
      49,
      48,
      28857
    ]
  ],
  [
    [
      13155,
      13155
    ],
    "mapped",
    [
      49,
      49,
      28857
    ]
  ],
  [
    [
      13156,
      13156
    ],
    "mapped",
    [
      49,
      50,
      28857
    ]
  ],
  [
    [
      13157,
      13157
    ],
    "mapped",
    [
      49,
      51,
      28857
    ]
  ],
  [
    [
      13158,
      13158
    ],
    "mapped",
    [
      49,
      52,
      28857
    ]
  ],
  [
    [
      13159,
      13159
    ],
    "mapped",
    [
      49,
      53,
      28857
    ]
  ],
  [
    [
      13160,
      13160
    ],
    "mapped",
    [
      49,
      54,
      28857
    ]
  ],
  [
    [
      13161,
      13161
    ],
    "mapped",
    [
      49,
      55,
      28857
    ]
  ],
  [
    [
      13162,
      13162
    ],
    "mapped",
    [
      49,
      56,
      28857
    ]
  ],
  [
    [
      13163,
      13163
    ],
    "mapped",
    [
      49,
      57,
      28857
    ]
  ],
  [
    [
      13164,
      13164
    ],
    "mapped",
    [
      50,
      48,
      28857
    ]
  ],
  [
    [
      13165,
      13165
    ],
    "mapped",
    [
      50,
      49,
      28857
    ]
  ],
  [
    [
      13166,
      13166
    ],
    "mapped",
    [
      50,
      50,
      28857
    ]
  ],
  [
    [
      13167,
      13167
    ],
    "mapped",
    [
      50,
      51,
      28857
    ]
  ],
  [
    [
      13168,
      13168
    ],
    "mapped",
    [
      50,
      52,
      28857
    ]
  ],
  [
    [
      13169,
      13169
    ],
    "mapped",
    [
      104,
      112,
      97
    ]
  ],
  [
    [
      13170,
      13170
    ],
    "mapped",
    [
      100,
      97
    ]
  ],
  [
    [
      13171,
      13171
    ],
    "mapped",
    [
      97,
      117
    ]
  ],
  [
    [
      13172,
      13172
    ],
    "mapped",
    [
      98,
      97,
      114
    ]
  ],
  [
    [
      13173,
      13173
    ],
    "mapped",
    [
      111,
      118
    ]
  ],
  [
    [
      13174,
      13174
    ],
    "mapped",
    [
      112,
      99
    ]
  ],
  [
    [
      13175,
      13175
    ],
    "mapped",
    [
      100,
      109
    ]
  ],
  [
    [
      13176,
      13176
    ],
    "mapped",
    [
      100,
      109,
      50
    ]
  ],
  [
    [
      13177,
      13177
    ],
    "mapped",
    [
      100,
      109,
      51
    ]
  ],
  [
    [
      13178,
      13178
    ],
    "mapped",
    [
      105,
      117
    ]
  ],
  [
    [
      13179,
      13179
    ],
    "mapped",
    [
      24179,
      25104
    ]
  ],
  [
    [
      13180,
      13180
    ],
    "mapped",
    [
      26157,
      21644
    ]
  ],
  [
    [
      13181,
      13181
    ],
    "mapped",
    [
      22823,
      27491
    ]
  ],
  [
    [
      13182,
      13182
    ],
    "mapped",
    [
      26126,
      27835
    ]
  ],
  [
    [
      13183,
      13183
    ],
    "mapped",
    [
      26666,
      24335,
      20250,
      31038
    ]
  ],
  [
    [
      13184,
      13184
    ],
    "mapped",
    [
      112,
      97
    ]
  ],
  [
    [
      13185,
      13185
    ],
    "mapped",
    [
      110,
      97
    ]
  ],
  [
    [
      13186,
      13186
    ],
    "mapped",
    [
      956,
      97
    ]
  ],
  [
    [
      13187,
      13187
    ],
    "mapped",
    [
      109,
      97
    ]
  ],
  [
    [
      13188,
      13188
    ],
    "mapped",
    [
      107,
      97
    ]
  ],
  [
    [
      13189,
      13189
    ],
    "mapped",
    [
      107,
      98
    ]
  ],
  [
    [
      13190,
      13190
    ],
    "mapped",
    [
      109,
      98
    ]
  ],
  [
    [
      13191,
      13191
    ],
    "mapped",
    [
      103,
      98
    ]
  ],
  [
    [
      13192,
      13192
    ],
    "mapped",
    [
      99,
      97,
      108
    ]
  ],
  [
    [
      13193,
      13193
    ],
    "mapped",
    [
      107,
      99,
      97,
      108
    ]
  ],
  [
    [
      13194,
      13194
    ],
    "mapped",
    [
      112,
      102
    ]
  ],
  [
    [
      13195,
      13195
    ],
    "mapped",
    [
      110,
      102
    ]
  ],
  [
    [
      13196,
      13196
    ],
    "mapped",
    [
      956,
      102
    ]
  ],
  [
    [
      13197,
      13197
    ],
    "mapped",
    [
      956,
      103
    ]
  ],
  [
    [
      13198,
      13198
    ],
    "mapped",
    [
      109,
      103
    ]
  ],
  [
    [
      13199,
      13199
    ],
    "mapped",
    [
      107,
      103
    ]
  ],
  [
    [
      13200,
      13200
    ],
    "mapped",
    [
      104,
      122
    ]
  ],
  [
    [
      13201,
      13201
    ],
    "mapped",
    [
      107,
      104,
      122
    ]
  ],
  [
    [
      13202,
      13202
    ],
    "mapped",
    [
      109,
      104,
      122
    ]
  ],
  [
    [
      13203,
      13203
    ],
    "mapped",
    [
      103,
      104,
      122
    ]
  ],
  [
    [
      13204,
      13204
    ],
    "mapped",
    [
      116,
      104,
      122
    ]
  ],
  [
    [
      13205,
      13205
    ],
    "mapped",
    [
      956,
      108
    ]
  ],
  [
    [
      13206,
      13206
    ],
    "mapped",
    [
      109,
      108
    ]
  ],
  [
    [
      13207,
      13207
    ],
    "mapped",
    [
      100,
      108
    ]
  ],
  [
    [
      13208,
      13208
    ],
    "mapped",
    [
      107,
      108
    ]
  ],
  [
    [
      13209,
      13209
    ],
    "mapped",
    [
      102,
      109
    ]
  ],
  [
    [
      13210,
      13210
    ],
    "mapped",
    [
      110,
      109
    ]
  ],
  [
    [
      13211,
      13211
    ],
    "mapped",
    [
      956,
      109
    ]
  ],
  [
    [
      13212,
      13212
    ],
    "mapped",
    [
      109,
      109
    ]
  ],
  [
    [
      13213,
      13213
    ],
    "mapped",
    [
      99,
      109
    ]
  ],
  [
    [
      13214,
      13214
    ],
    "mapped",
    [
      107,
      109
    ]
  ],
  [
    [
      13215,
      13215
    ],
    "mapped",
    [
      109,
      109,
      50
    ]
  ],
  [
    [
      13216,
      13216
    ],
    "mapped",
    [
      99,
      109,
      50
    ]
  ],
  [
    [
      13217,
      13217
    ],
    "mapped",
    [
      109,
      50
    ]
  ],
  [
    [
      13218,
      13218
    ],
    "mapped",
    [
      107,
      109,
      50
    ]
  ],
  [
    [
      13219,
      13219
    ],
    "mapped",
    [
      109,
      109,
      51
    ]
  ],
  [
    [
      13220,
      13220
    ],
    "mapped",
    [
      99,
      109,
      51
    ]
  ],
  [
    [
      13221,
      13221
    ],
    "mapped",
    [
      109,
      51
    ]
  ],
  [
    [
      13222,
      13222
    ],
    "mapped",
    [
      107,
      109,
      51
    ]
  ],
  [
    [
      13223,
      13223
    ],
    "mapped",
    [
      109,
      8725,
      115
    ]
  ],
  [
    [
      13224,
      13224
    ],
    "mapped",
    [
      109,
      8725,
      115,
      50
    ]
  ],
  [
    [
      13225,
      13225
    ],
    "mapped",
    [
      112,
      97
    ]
  ],
  [
    [
      13226,
      13226
    ],
    "mapped",
    [
      107,
      112,
      97
    ]
  ],
  [
    [
      13227,
      13227
    ],
    "mapped",
    [
      109,
      112,
      97
    ]
  ],
  [
    [
      13228,
      13228
    ],
    "mapped",
    [
      103,
      112,
      97
    ]
  ],
  [
    [
      13229,
      13229
    ],
    "mapped",
    [
      114,
      97,
      100
    ]
  ],
  [
    [
      13230,
      13230
    ],
    "mapped",
    [
      114,
      97,
      100,
      8725,
      115
    ]
  ],
  [
    [
      13231,
      13231
    ],
    "mapped",
    [
      114,
      97,
      100,
      8725,
      115,
      50
    ]
  ],
  [
    [
      13232,
      13232
    ],
    "mapped",
    [
      112,
      115
    ]
  ],
  [
    [
      13233,
      13233
    ],
    "mapped",
    [
      110,
      115
    ]
  ],
  [
    [
      13234,
      13234
    ],
    "mapped",
    [
      956,
      115
    ]
  ],
  [
    [
      13235,
      13235
    ],
    "mapped",
    [
      109,
      115
    ]
  ],
  [
    [
      13236,
      13236
    ],
    "mapped",
    [
      112,
      118
    ]
  ],
  [
    [
      13237,
      13237
    ],
    "mapped",
    [
      110,
      118
    ]
  ],
  [
    [
      13238,
      13238
    ],
    "mapped",
    [
      956,
      118
    ]
  ],
  [
    [
      13239,
      13239
    ],
    "mapped",
    [
      109,
      118
    ]
  ],
  [
    [
      13240,
      13240
    ],
    "mapped",
    [
      107,
      118
    ]
  ],
  [
    [
      13241,
      13241
    ],
    "mapped",
    [
      109,
      118
    ]
  ],
  [
    [
      13242,
      13242
    ],
    "mapped",
    [
      112,
      119
    ]
  ],
  [
    [
      13243,
      13243
    ],
    "mapped",
    [
      110,
      119
    ]
  ],
  [
    [
      13244,
      13244
    ],
    "mapped",
    [
      956,
      119
    ]
  ],
  [
    [
      13245,
      13245
    ],
    "mapped",
    [
      109,
      119
    ]
  ],
  [
    [
      13246,
      13246
    ],
    "mapped",
    [
      107,
      119
    ]
  ],
  [
    [
      13247,
      13247
    ],
    "mapped",
    [
      109,
      119
    ]
  ],
  [
    [
      13248,
      13248
    ],
    "mapped",
    [
      107,
      969
    ]
  ],
  [
    [
      13249,
      13249
    ],
    "mapped",
    [
      109,
      969
    ]
  ],
  [
    [
      13250,
      13250
    ],
    "disallowed"
  ],
  [
    [
      13251,
      13251
    ],
    "mapped",
    [
      98,
      113
    ]
  ],
  [
    [
      13252,
      13252
    ],
    "mapped",
    [
      99,
      99
    ]
  ],
  [
    [
      13253,
      13253
    ],
    "mapped",
    [
      99,
      100
    ]
  ],
  [
    [
      13254,
      13254
    ],
    "mapped",
    [
      99,
      8725,
      107,
      103
    ]
  ],
  [
    [
      13255,
      13255
    ],
    "disallowed"
  ],
  [
    [
      13256,
      13256
    ],
    "mapped",
    [
      100,
      98
    ]
  ],
  [
    [
      13257,
      13257
    ],
    "mapped",
    [
      103,
      121
    ]
  ],
  [
    [
      13258,
      13258
    ],
    "mapped",
    [
      104,
      97
    ]
  ],
  [
    [
      13259,
      13259
    ],
    "mapped",
    [
      104,
      112
    ]
  ],
  [
    [
      13260,
      13260
    ],
    "mapped",
    [
      105,
      110
    ]
  ],
  [
    [
      13261,
      13261
    ],
    "mapped",
    [
      107,
      107
    ]
  ],
  [
    [
      13262,
      13262
    ],
    "mapped",
    [
      107,
      109
    ]
  ],
  [
    [
      13263,
      13263
    ],
    "mapped",
    [
      107,
      116
    ]
  ],
  [
    [
      13264,
      13264
    ],
    "mapped",
    [
      108,
      109
    ]
  ],
  [
    [
      13265,
      13265
    ],
    "mapped",
    [
      108,
      110
    ]
  ],
  [
    [
      13266,
      13266
    ],
    "mapped",
    [
      108,
      111,
      103
    ]
  ],
  [
    [
      13267,
      13267
    ],
    "mapped",
    [
      108,
      120
    ]
  ],
  [
    [
      13268,
      13268
    ],
    "mapped",
    [
      109,
      98
    ]
  ],
  [
    [
      13269,
      13269
    ],
    "mapped",
    [
      109,
      105,
      108
    ]
  ],
  [
    [
      13270,
      13270
    ],
    "mapped",
    [
      109,
      111,
      108
    ]
  ],
  [
    [
      13271,
      13271
    ],
    "mapped",
    [
      112,
      104
    ]
  ],
  [
    [
      13272,
      13272
    ],
    "disallowed"
  ],
  [
    [
      13273,
      13273
    ],
    "mapped",
    [
      112,
      112,
      109
    ]
  ],
  [
    [
      13274,
      13274
    ],
    "mapped",
    [
      112,
      114
    ]
  ],
  [
    [
      13275,
      13275
    ],
    "mapped",
    [
      115,
      114
    ]
  ],
  [
    [
      13276,
      13276
    ],
    "mapped",
    [
      115,
      118
    ]
  ],
  [
    [
      13277,
      13277
    ],
    "mapped",
    [
      119,
      98
    ]
  ],
  [
    [
      13278,
      13278
    ],
    "mapped",
    [
      118,
      8725,
      109
    ]
  ],
  [
    [
      13279,
      13279
    ],
    "mapped",
    [
      97,
      8725,
      109
    ]
  ],
  [
    [
      13280,
      13280
    ],
    "mapped",
    [
      49,
      26085
    ]
  ],
  [
    [
      13281,
      13281
    ],
    "mapped",
    [
      50,
      26085
    ]
  ],
  [
    [
      13282,
      13282
    ],
    "mapped",
    [
      51,
      26085
    ]
  ],
  [
    [
      13283,
      13283
    ],
    "mapped",
    [
      52,
      26085
    ]
  ],
  [
    [
      13284,
      13284
    ],
    "mapped",
    [
      53,
      26085
    ]
  ],
  [
    [
      13285,
      13285
    ],
    "mapped",
    [
      54,
      26085
    ]
  ],
  [
    [
      13286,
      13286
    ],
    "mapped",
    [
      55,
      26085
    ]
  ],
  [
    [
      13287,
      13287
    ],
    "mapped",
    [
      56,
      26085
    ]
  ],
  [
    [
      13288,
      13288
    ],
    "mapped",
    [
      57,
      26085
    ]
  ],
  [
    [
      13289,
      13289
    ],
    "mapped",
    [
      49,
      48,
      26085
    ]
  ],
  [
    [
      13290,
      13290
    ],
    "mapped",
    [
      49,
      49,
      26085
    ]
  ],
  [
    [
      13291,
      13291
    ],
    "mapped",
    [
      49,
      50,
      26085
    ]
  ],
  [
    [
      13292,
      13292
    ],
    "mapped",
    [
      49,
      51,
      26085
    ]
  ],
  [
    [
      13293,
      13293
    ],
    "mapped",
    [
      49,
      52,
      26085
    ]
  ],
  [
    [
      13294,
      13294
    ],
    "mapped",
    [
      49,
      53,
      26085
    ]
  ],
  [
    [
      13295,
      13295
    ],
    "mapped",
    [
      49,
      54,
      26085
    ]
  ],
  [
    [
      13296,
      13296
    ],
    "mapped",
    [
      49,
      55,
      26085
    ]
  ],
  [
    [
      13297,
      13297
    ],
    "mapped",
    [
      49,
      56,
      26085
    ]
  ],
  [
    [
      13298,
      13298
    ],
    "mapped",
    [
      49,
      57,
      26085
    ]
  ],
  [
    [
      13299,
      13299
    ],
    "mapped",
    [
      50,
      48,
      26085
    ]
  ],
  [
    [
      13300,
      13300
    ],
    "mapped",
    [
      50,
      49,
      26085
    ]
  ],
  [
    [
      13301,
      13301
    ],
    "mapped",
    [
      50,
      50,
      26085
    ]
  ],
  [
    [
      13302,
      13302
    ],
    "mapped",
    [
      50,
      51,
      26085
    ]
  ],
  [
    [
      13303,
      13303
    ],
    "mapped",
    [
      50,
      52,
      26085
    ]
  ],
  [
    [
      13304,
      13304
    ],
    "mapped",
    [
      50,
      53,
      26085
    ]
  ],
  [
    [
      13305,
      13305
    ],
    "mapped",
    [
      50,
      54,
      26085
    ]
  ],
  [
    [
      13306,
      13306
    ],
    "mapped",
    [
      50,
      55,
      26085
    ]
  ],
  [
    [
      13307,
      13307
    ],
    "mapped",
    [
      50,
      56,
      26085
    ]
  ],
  [
    [
      13308,
      13308
    ],
    "mapped",
    [
      50,
      57,
      26085
    ]
  ],
  [
    [
      13309,
      13309
    ],
    "mapped",
    [
      51,
      48,
      26085
    ]
  ],
  [
    [
      13310,
      13310
    ],
    "mapped",
    [
      51,
      49,
      26085
    ]
  ],
  [
    [
      13311,
      13311
    ],
    "mapped",
    [
      103,
      97,
      108
    ]
  ],
  [
    [
      13312,
      19893
    ],
    "valid"
  ],
  [
    [
      19894,
      19903
    ],
    "disallowed"
  ],
  [
    [
      19904,
      19967
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      19968,
      40869
    ],
    "valid"
  ],
  [
    [
      40870,
      40891
    ],
    "valid"
  ],
  [
    [
      40892,
      40899
    ],
    "valid"
  ],
  [
    [
      40900,
      40907
    ],
    "valid"
  ],
  [
    [
      40908,
      40908
    ],
    "valid"
  ],
  [
    [
      40909,
      40917
    ],
    "valid"
  ],
  [
    [
      40918,
      40959
    ],
    "disallowed"
  ],
  [
    [
      40960,
      42124
    ],
    "valid"
  ],
  [
    [
      42125,
      42127
    ],
    "disallowed"
  ],
  [
    [
      42128,
      42145
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      42146,
      42147
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      42148,
      42163
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      42164,
      42164
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      42165,
      42176
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      42177,
      42177
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      42178,
      42180
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      42181,
      42181
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      42182,
      42182
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      42183,
      42191
    ],
    "disallowed"
  ],
  [
    [
      42192,
      42237
    ],
    "valid"
  ],
  [
    [
      42238,
      42239
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      42240,
      42508
    ],
    "valid"
  ],
  [
    [
      42509,
      42511
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      42512,
      42539
    ],
    "valid"
  ],
  [
    [
      42540,
      42559
    ],
    "disallowed"
  ],
  [
    [
      42560,
      42560
    ],
    "mapped",
    [
      42561
    ]
  ],
  [
    [
      42561,
      42561
    ],
    "valid"
  ],
  [
    [
      42562,
      42562
    ],
    "mapped",
    [
      42563
    ]
  ],
  [
    [
      42563,
      42563
    ],
    "valid"
  ],
  [
    [
      42564,
      42564
    ],
    "mapped",
    [
      42565
    ]
  ],
  [
    [
      42565,
      42565
    ],
    "valid"
  ],
  [
    [
      42566,
      42566
    ],
    "mapped",
    [
      42567
    ]
  ],
  [
    [
      42567,
      42567
    ],
    "valid"
  ],
  [
    [
      42568,
      42568
    ],
    "mapped",
    [
      42569
    ]
  ],
  [
    [
      42569,
      42569
    ],
    "valid"
  ],
  [
    [
      42570,
      42570
    ],
    "mapped",
    [
      42571
    ]
  ],
  [
    [
      42571,
      42571
    ],
    "valid"
  ],
  [
    [
      42572,
      42572
    ],
    "mapped",
    [
      42573
    ]
  ],
  [
    [
      42573,
      42573
    ],
    "valid"
  ],
  [
    [
      42574,
      42574
    ],
    "mapped",
    [
      42575
    ]
  ],
  [
    [
      42575,
      42575
    ],
    "valid"
  ],
  [
    [
      42576,
      42576
    ],
    "mapped",
    [
      42577
    ]
  ],
  [
    [
      42577,
      42577
    ],
    "valid"
  ],
  [
    [
      42578,
      42578
    ],
    "mapped",
    [
      42579
    ]
  ],
  [
    [
      42579,
      42579
    ],
    "valid"
  ],
  [
    [
      42580,
      42580
    ],
    "mapped",
    [
      42581
    ]
  ],
  [
    [
      42581,
      42581
    ],
    "valid"
  ],
  [
    [
      42582,
      42582
    ],
    "mapped",
    [
      42583
    ]
  ],
  [
    [
      42583,
      42583
    ],
    "valid"
  ],
  [
    [
      42584,
      42584
    ],
    "mapped",
    [
      42585
    ]
  ],
  [
    [
      42585,
      42585
    ],
    "valid"
  ],
  [
    [
      42586,
      42586
    ],
    "mapped",
    [
      42587
    ]
  ],
  [
    [
      42587,
      42587
    ],
    "valid"
  ],
  [
    [
      42588,
      42588
    ],
    "mapped",
    [
      42589
    ]
  ],
  [
    [
      42589,
      42589
    ],
    "valid"
  ],
  [
    [
      42590,
      42590
    ],
    "mapped",
    [
      42591
    ]
  ],
  [
    [
      42591,
      42591
    ],
    "valid"
  ],
  [
    [
      42592,
      42592
    ],
    "mapped",
    [
      42593
    ]
  ],
  [
    [
      42593,
      42593
    ],
    "valid"
  ],
  [
    [
      42594,
      42594
    ],
    "mapped",
    [
      42595
    ]
  ],
  [
    [
      42595,
      42595
    ],
    "valid"
  ],
  [
    [
      42596,
      42596
    ],
    "mapped",
    [
      42597
    ]
  ],
  [
    [
      42597,
      42597
    ],
    "valid"
  ],
  [
    [
      42598,
      42598
    ],
    "mapped",
    [
      42599
    ]
  ],
  [
    [
      42599,
      42599
    ],
    "valid"
  ],
  [
    [
      42600,
      42600
    ],
    "mapped",
    [
      42601
    ]
  ],
  [
    [
      42601,
      42601
    ],
    "valid"
  ],
  [
    [
      42602,
      42602
    ],
    "mapped",
    [
      42603
    ]
  ],
  [
    [
      42603,
      42603
    ],
    "valid"
  ],
  [
    [
      42604,
      42604
    ],
    "mapped",
    [
      42605
    ]
  ],
  [
    [
      42605,
      42607
    ],
    "valid"
  ],
  [
    [
      42608,
      42611
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      42612,
      42619
    ],
    "valid"
  ],
  [
    [
      42620,
      42621
    ],
    "valid"
  ],
  [
    [
      42622,
      42622
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      42623,
      42623
    ],
    "valid"
  ],
  [
    [
      42624,
      42624
    ],
    "mapped",
    [
      42625
    ]
  ],
  [
    [
      42625,
      42625
    ],
    "valid"
  ],
  [
    [
      42626,
      42626
    ],
    "mapped",
    [
      42627
    ]
  ],
  [
    [
      42627,
      42627
    ],
    "valid"
  ],
  [
    [
      42628,
      42628
    ],
    "mapped",
    [
      42629
    ]
  ],
  [
    [
      42629,
      42629
    ],
    "valid"
  ],
  [
    [
      42630,
      42630
    ],
    "mapped",
    [
      42631
    ]
  ],
  [
    [
      42631,
      42631
    ],
    "valid"
  ],
  [
    [
      42632,
      42632
    ],
    "mapped",
    [
      42633
    ]
  ],
  [
    [
      42633,
      42633
    ],
    "valid"
  ],
  [
    [
      42634,
      42634
    ],
    "mapped",
    [
      42635
    ]
  ],
  [
    [
      42635,
      42635
    ],
    "valid"
  ],
  [
    [
      42636,
      42636
    ],
    "mapped",
    [
      42637
    ]
  ],
  [
    [
      42637,
      42637
    ],
    "valid"
  ],
  [
    [
      42638,
      42638
    ],
    "mapped",
    [
      42639
    ]
  ],
  [
    [
      42639,
      42639
    ],
    "valid"
  ],
  [
    [
      42640,
      42640
    ],
    "mapped",
    [
      42641
    ]
  ],
  [
    [
      42641,
      42641
    ],
    "valid"
  ],
  [
    [
      42642,
      42642
    ],
    "mapped",
    [
      42643
    ]
  ],
  [
    [
      42643,
      42643
    ],
    "valid"
  ],
  [
    [
      42644,
      42644
    ],
    "mapped",
    [
      42645
    ]
  ],
  [
    [
      42645,
      42645
    ],
    "valid"
  ],
  [
    [
      42646,
      42646
    ],
    "mapped",
    [
      42647
    ]
  ],
  [
    [
      42647,
      42647
    ],
    "valid"
  ],
  [
    [
      42648,
      42648
    ],
    "mapped",
    [
      42649
    ]
  ],
  [
    [
      42649,
      42649
    ],
    "valid"
  ],
  [
    [
      42650,
      42650
    ],
    "mapped",
    [
      42651
    ]
  ],
  [
    [
      42651,
      42651
    ],
    "valid"
  ],
  [
    [
      42652,
      42652
    ],
    "mapped",
    [
      1098
    ]
  ],
  [
    [
      42653,
      42653
    ],
    "mapped",
    [
      1100
    ]
  ],
  [
    [
      42654,
      42654
    ],
    "valid"
  ],
  [
    [
      42655,
      42655
    ],
    "valid"
  ],
  [
    [
      42656,
      42725
    ],
    "valid"
  ],
  [
    [
      42726,
      42735
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      42736,
      42737
    ],
    "valid"
  ],
  [
    [
      42738,
      42743
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      42744,
      42751
    ],
    "disallowed"
  ],
  [
    [
      42752,
      42774
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      42775,
      42778
    ],
    "valid"
  ],
  [
    [
      42779,
      42783
    ],
    "valid"
  ],
  [
    [
      42784,
      42785
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      42786,
      42786
    ],
    "mapped",
    [
      42787
    ]
  ],
  [
    [
      42787,
      42787
    ],
    "valid"
  ],
  [
    [
      42788,
      42788
    ],
    "mapped",
    [
      42789
    ]
  ],
  [
    [
      42789,
      42789
    ],
    "valid"
  ],
  [
    [
      42790,
      42790
    ],
    "mapped",
    [
      42791
    ]
  ],
  [
    [
      42791,
      42791
    ],
    "valid"
  ],
  [
    [
      42792,
      42792
    ],
    "mapped",
    [
      42793
    ]
  ],
  [
    [
      42793,
      42793
    ],
    "valid"
  ],
  [
    [
      42794,
      42794
    ],
    "mapped",
    [
      42795
    ]
  ],
  [
    [
      42795,
      42795
    ],
    "valid"
  ],
  [
    [
      42796,
      42796
    ],
    "mapped",
    [
      42797
    ]
  ],
  [
    [
      42797,
      42797
    ],
    "valid"
  ],
  [
    [
      42798,
      42798
    ],
    "mapped",
    [
      42799
    ]
  ],
  [
    [
      42799,
      42801
    ],
    "valid"
  ],
  [
    [
      42802,
      42802
    ],
    "mapped",
    [
      42803
    ]
  ],
  [
    [
      42803,
      42803
    ],
    "valid"
  ],
  [
    [
      42804,
      42804
    ],
    "mapped",
    [
      42805
    ]
  ],
  [
    [
      42805,
      42805
    ],
    "valid"
  ],
  [
    [
      42806,
      42806
    ],
    "mapped",
    [
      42807
    ]
  ],
  [
    [
      42807,
      42807
    ],
    "valid"
  ],
  [
    [
      42808,
      42808
    ],
    "mapped",
    [
      42809
    ]
  ],
  [
    [
      42809,
      42809
    ],
    "valid"
  ],
  [
    [
      42810,
      42810
    ],
    "mapped",
    [
      42811
    ]
  ],
  [
    [
      42811,
      42811
    ],
    "valid"
  ],
  [
    [
      42812,
      42812
    ],
    "mapped",
    [
      42813
    ]
  ],
  [
    [
      42813,
      42813
    ],
    "valid"
  ],
  [
    [
      42814,
      42814
    ],
    "mapped",
    [
      42815
    ]
  ],
  [
    [
      42815,
      42815
    ],
    "valid"
  ],
  [
    [
      42816,
      42816
    ],
    "mapped",
    [
      42817
    ]
  ],
  [
    [
      42817,
      42817
    ],
    "valid"
  ],
  [
    [
      42818,
      42818
    ],
    "mapped",
    [
      42819
    ]
  ],
  [
    [
      42819,
      42819
    ],
    "valid"
  ],
  [
    [
      42820,
      42820
    ],
    "mapped",
    [
      42821
    ]
  ],
  [
    [
      42821,
      42821
    ],
    "valid"
  ],
  [
    [
      42822,
      42822
    ],
    "mapped",
    [
      42823
    ]
  ],
  [
    [
      42823,
      42823
    ],
    "valid"
  ],
  [
    [
      42824,
      42824
    ],
    "mapped",
    [
      42825
    ]
  ],
  [
    [
      42825,
      42825
    ],
    "valid"
  ],
  [
    [
      42826,
      42826
    ],
    "mapped",
    [
      42827
    ]
  ],
  [
    [
      42827,
      42827
    ],
    "valid"
  ],
  [
    [
      42828,
      42828
    ],
    "mapped",
    [
      42829
    ]
  ],
  [
    [
      42829,
      42829
    ],
    "valid"
  ],
  [
    [
      42830,
      42830
    ],
    "mapped",
    [
      42831
    ]
  ],
  [
    [
      42831,
      42831
    ],
    "valid"
  ],
  [
    [
      42832,
      42832
    ],
    "mapped",
    [
      42833
    ]
  ],
  [
    [
      42833,
      42833
    ],
    "valid"
  ],
  [
    [
      42834,
      42834
    ],
    "mapped",
    [
      42835
    ]
  ],
  [
    [
      42835,
      42835
    ],
    "valid"
  ],
  [
    [
      42836,
      42836
    ],
    "mapped",
    [
      42837
    ]
  ],
  [
    [
      42837,
      42837
    ],
    "valid"
  ],
  [
    [
      42838,
      42838
    ],
    "mapped",
    [
      42839
    ]
  ],
  [
    [
      42839,
      42839
    ],
    "valid"
  ],
  [
    [
      42840,
      42840
    ],
    "mapped",
    [
      42841
    ]
  ],
  [
    [
      42841,
      42841
    ],
    "valid"
  ],
  [
    [
      42842,
      42842
    ],
    "mapped",
    [
      42843
    ]
  ],
  [
    [
      42843,
      42843
    ],
    "valid"
  ],
  [
    [
      42844,
      42844
    ],
    "mapped",
    [
      42845
    ]
  ],
  [
    [
      42845,
      42845
    ],
    "valid"
  ],
  [
    [
      42846,
      42846
    ],
    "mapped",
    [
      42847
    ]
  ],
  [
    [
      42847,
      42847
    ],
    "valid"
  ],
  [
    [
      42848,
      42848
    ],
    "mapped",
    [
      42849
    ]
  ],
  [
    [
      42849,
      42849
    ],
    "valid"
  ],
  [
    [
      42850,
      42850
    ],
    "mapped",
    [
      42851
    ]
  ],
  [
    [
      42851,
      42851
    ],
    "valid"
  ],
  [
    [
      42852,
      42852
    ],
    "mapped",
    [
      42853
    ]
  ],
  [
    [
      42853,
      42853
    ],
    "valid"
  ],
  [
    [
      42854,
      42854
    ],
    "mapped",
    [
      42855
    ]
  ],
  [
    [
      42855,
      42855
    ],
    "valid"
  ],
  [
    [
      42856,
      42856
    ],
    "mapped",
    [
      42857
    ]
  ],
  [
    [
      42857,
      42857
    ],
    "valid"
  ],
  [
    [
      42858,
      42858
    ],
    "mapped",
    [
      42859
    ]
  ],
  [
    [
      42859,
      42859
    ],
    "valid"
  ],
  [
    [
      42860,
      42860
    ],
    "mapped",
    [
      42861
    ]
  ],
  [
    [
      42861,
      42861
    ],
    "valid"
  ],
  [
    [
      42862,
      42862
    ],
    "mapped",
    [
      42863
    ]
  ],
  [
    [
      42863,
      42863
    ],
    "valid"
  ],
  [
    [
      42864,
      42864
    ],
    "mapped",
    [
      42863
    ]
  ],
  [
    [
      42865,
      42872
    ],
    "valid"
  ],
  [
    [
      42873,
      42873
    ],
    "mapped",
    [
      42874
    ]
  ],
  [
    [
      42874,
      42874
    ],
    "valid"
  ],
  [
    [
      42875,
      42875
    ],
    "mapped",
    [
      42876
    ]
  ],
  [
    [
      42876,
      42876
    ],
    "valid"
  ],
  [
    [
      42877,
      42877
    ],
    "mapped",
    [
      7545
    ]
  ],
  [
    [
      42878,
      42878
    ],
    "mapped",
    [
      42879
    ]
  ],
  [
    [
      42879,
      42879
    ],
    "valid"
  ],
  [
    [
      42880,
      42880
    ],
    "mapped",
    [
      42881
    ]
  ],
  [
    [
      42881,
      42881
    ],
    "valid"
  ],
  [
    [
      42882,
      42882
    ],
    "mapped",
    [
      42883
    ]
  ],
  [
    [
      42883,
      42883
    ],
    "valid"
  ],
  [
    [
      42884,
      42884
    ],
    "mapped",
    [
      42885
    ]
  ],
  [
    [
      42885,
      42885
    ],
    "valid"
  ],
  [
    [
      42886,
      42886
    ],
    "mapped",
    [
      42887
    ]
  ],
  [
    [
      42887,
      42888
    ],
    "valid"
  ],
  [
    [
      42889,
      42890
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      42891,
      42891
    ],
    "mapped",
    [
      42892
    ]
  ],
  [
    [
      42892,
      42892
    ],
    "valid"
  ],
  [
    [
      42893,
      42893
    ],
    "mapped",
    [
      613
    ]
  ],
  [
    [
      42894,
      42894
    ],
    "valid"
  ],
  [
    [
      42895,
      42895
    ],
    "valid"
  ],
  [
    [
      42896,
      42896
    ],
    "mapped",
    [
      42897
    ]
  ],
  [
    [
      42897,
      42897
    ],
    "valid"
  ],
  [
    [
      42898,
      42898
    ],
    "mapped",
    [
      42899
    ]
  ],
  [
    [
      42899,
      42899
    ],
    "valid"
  ],
  [
    [
      42900,
      42901
    ],
    "valid"
  ],
  [
    [
      42902,
      42902
    ],
    "mapped",
    [
      42903
    ]
  ],
  [
    [
      42903,
      42903
    ],
    "valid"
  ],
  [
    [
      42904,
      42904
    ],
    "mapped",
    [
      42905
    ]
  ],
  [
    [
      42905,
      42905
    ],
    "valid"
  ],
  [
    [
      42906,
      42906
    ],
    "mapped",
    [
      42907
    ]
  ],
  [
    [
      42907,
      42907
    ],
    "valid"
  ],
  [
    [
      42908,
      42908
    ],
    "mapped",
    [
      42909
    ]
  ],
  [
    [
      42909,
      42909
    ],
    "valid"
  ],
  [
    [
      42910,
      42910
    ],
    "mapped",
    [
      42911
    ]
  ],
  [
    [
      42911,
      42911
    ],
    "valid"
  ],
  [
    [
      42912,
      42912
    ],
    "mapped",
    [
      42913
    ]
  ],
  [
    [
      42913,
      42913
    ],
    "valid"
  ],
  [
    [
      42914,
      42914
    ],
    "mapped",
    [
      42915
    ]
  ],
  [
    [
      42915,
      42915
    ],
    "valid"
  ],
  [
    [
      42916,
      42916
    ],
    "mapped",
    [
      42917
    ]
  ],
  [
    [
      42917,
      42917
    ],
    "valid"
  ],
  [
    [
      42918,
      42918
    ],
    "mapped",
    [
      42919
    ]
  ],
  [
    [
      42919,
      42919
    ],
    "valid"
  ],
  [
    [
      42920,
      42920
    ],
    "mapped",
    [
      42921
    ]
  ],
  [
    [
      42921,
      42921
    ],
    "valid"
  ],
  [
    [
      42922,
      42922
    ],
    "mapped",
    [
      614
    ]
  ],
  [
    [
      42923,
      42923
    ],
    "mapped",
    [
      604
    ]
  ],
  [
    [
      42924,
      42924
    ],
    "mapped",
    [
      609
    ]
  ],
  [
    [
      42925,
      42925
    ],
    "mapped",
    [
      620
    ]
  ],
  [
    [
      42926,
      42927
    ],
    "disallowed"
  ],
  [
    [
      42928,
      42928
    ],
    "mapped",
    [
      670
    ]
  ],
  [
    [
      42929,
      42929
    ],
    "mapped",
    [
      647
    ]
  ],
  [
    [
      42930,
      42930
    ],
    "mapped",
    [
      669
    ]
  ],
  [
    [
      42931,
      42931
    ],
    "mapped",
    [
      43859
    ]
  ],
  [
    [
      42932,
      42932
    ],
    "mapped",
    [
      42933
    ]
  ],
  [
    [
      42933,
      42933
    ],
    "valid"
  ],
  [
    [
      42934,
      42934
    ],
    "mapped",
    [
      42935
    ]
  ],
  [
    [
      42935,
      42935
    ],
    "valid"
  ],
  [
    [
      42936,
      42998
    ],
    "disallowed"
  ],
  [
    [
      42999,
      42999
    ],
    "valid"
  ],
  [
    [
      43e3,
      43e3
    ],
    "mapped",
    [
      295
    ]
  ],
  [
    [
      43001,
      43001
    ],
    "mapped",
    [
      339
    ]
  ],
  [
    [
      43002,
      43002
    ],
    "valid"
  ],
  [
    [
      43003,
      43007
    ],
    "valid"
  ],
  [
    [
      43008,
      43047
    ],
    "valid"
  ],
  [
    [
      43048,
      43051
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      43052,
      43055
    ],
    "disallowed"
  ],
  [
    [
      43056,
      43065
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      43066,
      43071
    ],
    "disallowed"
  ],
  [
    [
      43072,
      43123
    ],
    "valid"
  ],
  [
    [
      43124,
      43127
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      43128,
      43135
    ],
    "disallowed"
  ],
  [
    [
      43136,
      43204
    ],
    "valid"
  ],
  [
    [
      43205,
      43213
    ],
    "disallowed"
  ],
  [
    [
      43214,
      43215
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      43216,
      43225
    ],
    "valid"
  ],
  [
    [
      43226,
      43231
    ],
    "disallowed"
  ],
  [
    [
      43232,
      43255
    ],
    "valid"
  ],
  [
    [
      43256,
      43258
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      43259,
      43259
    ],
    "valid"
  ],
  [
    [
      43260,
      43260
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      43261,
      43261
    ],
    "valid"
  ],
  [
    [
      43262,
      43263
    ],
    "disallowed"
  ],
  [
    [
      43264,
      43309
    ],
    "valid"
  ],
  [
    [
      43310,
      43311
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      43312,
      43347
    ],
    "valid"
  ],
  [
    [
      43348,
      43358
    ],
    "disallowed"
  ],
  [
    [
      43359,
      43359
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      43360,
      43388
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      43389,
      43391
    ],
    "disallowed"
  ],
  [
    [
      43392,
      43456
    ],
    "valid"
  ],
  [
    [
      43457,
      43469
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      43470,
      43470
    ],
    "disallowed"
  ],
  [
    [
      43471,
      43481
    ],
    "valid"
  ],
  [
    [
      43482,
      43485
    ],
    "disallowed"
  ],
  [
    [
      43486,
      43487
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      43488,
      43518
    ],
    "valid"
  ],
  [
    [
      43519,
      43519
    ],
    "disallowed"
  ],
  [
    [
      43520,
      43574
    ],
    "valid"
  ],
  [
    [
      43575,
      43583
    ],
    "disallowed"
  ],
  [
    [
      43584,
      43597
    ],
    "valid"
  ],
  [
    [
      43598,
      43599
    ],
    "disallowed"
  ],
  [
    [
      43600,
      43609
    ],
    "valid"
  ],
  [
    [
      43610,
      43611
    ],
    "disallowed"
  ],
  [
    [
      43612,
      43615
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      43616,
      43638
    ],
    "valid"
  ],
  [
    [
      43639,
      43641
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      43642,
      43643
    ],
    "valid"
  ],
  [
    [
      43644,
      43647
    ],
    "valid"
  ],
  [
    [
      43648,
      43714
    ],
    "valid"
  ],
  [
    [
      43715,
      43738
    ],
    "disallowed"
  ],
  [
    [
      43739,
      43741
    ],
    "valid"
  ],
  [
    [
      43742,
      43743
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      43744,
      43759
    ],
    "valid"
  ],
  [
    [
      43760,
      43761
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      43762,
      43766
    ],
    "valid"
  ],
  [
    [
      43767,
      43776
    ],
    "disallowed"
  ],
  [
    [
      43777,
      43782
    ],
    "valid"
  ],
  [
    [
      43783,
      43784
    ],
    "disallowed"
  ],
  [
    [
      43785,
      43790
    ],
    "valid"
  ],
  [
    [
      43791,
      43792
    ],
    "disallowed"
  ],
  [
    [
      43793,
      43798
    ],
    "valid"
  ],
  [
    [
      43799,
      43807
    ],
    "disallowed"
  ],
  [
    [
      43808,
      43814
    ],
    "valid"
  ],
  [
    [
      43815,
      43815
    ],
    "disallowed"
  ],
  [
    [
      43816,
      43822
    ],
    "valid"
  ],
  [
    [
      43823,
      43823
    ],
    "disallowed"
  ],
  [
    [
      43824,
      43866
    ],
    "valid"
  ],
  [
    [
      43867,
      43867
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      43868,
      43868
    ],
    "mapped",
    [
      42791
    ]
  ],
  [
    [
      43869,
      43869
    ],
    "mapped",
    [
      43831
    ]
  ],
  [
    [
      43870,
      43870
    ],
    "mapped",
    [
      619
    ]
  ],
  [
    [
      43871,
      43871
    ],
    "mapped",
    [
      43858
    ]
  ],
  [
    [
      43872,
      43875
    ],
    "valid"
  ],
  [
    [
      43876,
      43877
    ],
    "valid"
  ],
  [
    [
      43878,
      43887
    ],
    "disallowed"
  ],
  [
    [
      43888,
      43888
    ],
    "mapped",
    [
      5024
    ]
  ],
  [
    [
      43889,
      43889
    ],
    "mapped",
    [
      5025
    ]
  ],
  [
    [
      43890,
      43890
    ],
    "mapped",
    [
      5026
    ]
  ],
  [
    [
      43891,
      43891
    ],
    "mapped",
    [
      5027
    ]
  ],
  [
    [
      43892,
      43892
    ],
    "mapped",
    [
      5028
    ]
  ],
  [
    [
      43893,
      43893
    ],
    "mapped",
    [
      5029
    ]
  ],
  [
    [
      43894,
      43894
    ],
    "mapped",
    [
      5030
    ]
  ],
  [
    [
      43895,
      43895
    ],
    "mapped",
    [
      5031
    ]
  ],
  [
    [
      43896,
      43896
    ],
    "mapped",
    [
      5032
    ]
  ],
  [
    [
      43897,
      43897
    ],
    "mapped",
    [
      5033
    ]
  ],
  [
    [
      43898,
      43898
    ],
    "mapped",
    [
      5034
    ]
  ],
  [
    [
      43899,
      43899
    ],
    "mapped",
    [
      5035
    ]
  ],
  [
    [
      43900,
      43900
    ],
    "mapped",
    [
      5036
    ]
  ],
  [
    [
      43901,
      43901
    ],
    "mapped",
    [
      5037
    ]
  ],
  [
    [
      43902,
      43902
    ],
    "mapped",
    [
      5038
    ]
  ],
  [
    [
      43903,
      43903
    ],
    "mapped",
    [
      5039
    ]
  ],
  [
    [
      43904,
      43904
    ],
    "mapped",
    [
      5040
    ]
  ],
  [
    [
      43905,
      43905
    ],
    "mapped",
    [
      5041
    ]
  ],
  [
    [
      43906,
      43906
    ],
    "mapped",
    [
      5042
    ]
  ],
  [
    [
      43907,
      43907
    ],
    "mapped",
    [
      5043
    ]
  ],
  [
    [
      43908,
      43908
    ],
    "mapped",
    [
      5044
    ]
  ],
  [
    [
      43909,
      43909
    ],
    "mapped",
    [
      5045
    ]
  ],
  [
    [
      43910,
      43910
    ],
    "mapped",
    [
      5046
    ]
  ],
  [
    [
      43911,
      43911
    ],
    "mapped",
    [
      5047
    ]
  ],
  [
    [
      43912,
      43912
    ],
    "mapped",
    [
      5048
    ]
  ],
  [
    [
      43913,
      43913
    ],
    "mapped",
    [
      5049
    ]
  ],
  [
    [
      43914,
      43914
    ],
    "mapped",
    [
      5050
    ]
  ],
  [
    [
      43915,
      43915
    ],
    "mapped",
    [
      5051
    ]
  ],
  [
    [
      43916,
      43916
    ],
    "mapped",
    [
      5052
    ]
  ],
  [
    [
      43917,
      43917
    ],
    "mapped",
    [
      5053
    ]
  ],
  [
    [
      43918,
      43918
    ],
    "mapped",
    [
      5054
    ]
  ],
  [
    [
      43919,
      43919
    ],
    "mapped",
    [
      5055
    ]
  ],
  [
    [
      43920,
      43920
    ],
    "mapped",
    [
      5056
    ]
  ],
  [
    [
      43921,
      43921
    ],
    "mapped",
    [
      5057
    ]
  ],
  [
    [
      43922,
      43922
    ],
    "mapped",
    [
      5058
    ]
  ],
  [
    [
      43923,
      43923
    ],
    "mapped",
    [
      5059
    ]
  ],
  [
    [
      43924,
      43924
    ],
    "mapped",
    [
      5060
    ]
  ],
  [
    [
      43925,
      43925
    ],
    "mapped",
    [
      5061
    ]
  ],
  [
    [
      43926,
      43926
    ],
    "mapped",
    [
      5062
    ]
  ],
  [
    [
      43927,
      43927
    ],
    "mapped",
    [
      5063
    ]
  ],
  [
    [
      43928,
      43928
    ],
    "mapped",
    [
      5064
    ]
  ],
  [
    [
      43929,
      43929
    ],
    "mapped",
    [
      5065
    ]
  ],
  [
    [
      43930,
      43930
    ],
    "mapped",
    [
      5066
    ]
  ],
  [
    [
      43931,
      43931
    ],
    "mapped",
    [
      5067
    ]
  ],
  [
    [
      43932,
      43932
    ],
    "mapped",
    [
      5068
    ]
  ],
  [
    [
      43933,
      43933
    ],
    "mapped",
    [
      5069
    ]
  ],
  [
    [
      43934,
      43934
    ],
    "mapped",
    [
      5070
    ]
  ],
  [
    [
      43935,
      43935
    ],
    "mapped",
    [
      5071
    ]
  ],
  [
    [
      43936,
      43936
    ],
    "mapped",
    [
      5072
    ]
  ],
  [
    [
      43937,
      43937
    ],
    "mapped",
    [
      5073
    ]
  ],
  [
    [
      43938,
      43938
    ],
    "mapped",
    [
      5074
    ]
  ],
  [
    [
      43939,
      43939
    ],
    "mapped",
    [
      5075
    ]
  ],
  [
    [
      43940,
      43940
    ],
    "mapped",
    [
      5076
    ]
  ],
  [
    [
      43941,
      43941
    ],
    "mapped",
    [
      5077
    ]
  ],
  [
    [
      43942,
      43942
    ],
    "mapped",
    [
      5078
    ]
  ],
  [
    [
      43943,
      43943
    ],
    "mapped",
    [
      5079
    ]
  ],
  [
    [
      43944,
      43944
    ],
    "mapped",
    [
      5080
    ]
  ],
  [
    [
      43945,
      43945
    ],
    "mapped",
    [
      5081
    ]
  ],
  [
    [
      43946,
      43946
    ],
    "mapped",
    [
      5082
    ]
  ],
  [
    [
      43947,
      43947
    ],
    "mapped",
    [
      5083
    ]
  ],
  [
    [
      43948,
      43948
    ],
    "mapped",
    [
      5084
    ]
  ],
  [
    [
      43949,
      43949
    ],
    "mapped",
    [
      5085
    ]
  ],
  [
    [
      43950,
      43950
    ],
    "mapped",
    [
      5086
    ]
  ],
  [
    [
      43951,
      43951
    ],
    "mapped",
    [
      5087
    ]
  ],
  [
    [
      43952,
      43952
    ],
    "mapped",
    [
      5088
    ]
  ],
  [
    [
      43953,
      43953
    ],
    "mapped",
    [
      5089
    ]
  ],
  [
    [
      43954,
      43954
    ],
    "mapped",
    [
      5090
    ]
  ],
  [
    [
      43955,
      43955
    ],
    "mapped",
    [
      5091
    ]
  ],
  [
    [
      43956,
      43956
    ],
    "mapped",
    [
      5092
    ]
  ],
  [
    [
      43957,
      43957
    ],
    "mapped",
    [
      5093
    ]
  ],
  [
    [
      43958,
      43958
    ],
    "mapped",
    [
      5094
    ]
  ],
  [
    [
      43959,
      43959
    ],
    "mapped",
    [
      5095
    ]
  ],
  [
    [
      43960,
      43960
    ],
    "mapped",
    [
      5096
    ]
  ],
  [
    [
      43961,
      43961
    ],
    "mapped",
    [
      5097
    ]
  ],
  [
    [
      43962,
      43962
    ],
    "mapped",
    [
      5098
    ]
  ],
  [
    [
      43963,
      43963
    ],
    "mapped",
    [
      5099
    ]
  ],
  [
    [
      43964,
      43964
    ],
    "mapped",
    [
      5100
    ]
  ],
  [
    [
      43965,
      43965
    ],
    "mapped",
    [
      5101
    ]
  ],
  [
    [
      43966,
      43966
    ],
    "mapped",
    [
      5102
    ]
  ],
  [
    [
      43967,
      43967
    ],
    "mapped",
    [
      5103
    ]
  ],
  [
    [
      43968,
      44010
    ],
    "valid"
  ],
  [
    [
      44011,
      44011
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      44012,
      44013
    ],
    "valid"
  ],
  [
    [
      44014,
      44015
    ],
    "disallowed"
  ],
  [
    [
      44016,
      44025
    ],
    "valid"
  ],
  [
    [
      44026,
      44031
    ],
    "disallowed"
  ],
  [
    [
      44032,
      55203
    ],
    "valid"
  ],
  [
    [
      55204,
      55215
    ],
    "disallowed"
  ],
  [
    [
      55216,
      55238
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      55239,
      55242
    ],
    "disallowed"
  ],
  [
    [
      55243,
      55291
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      55292,
      55295
    ],
    "disallowed"
  ],
  [
    [
      55296,
      57343
    ],
    "disallowed"
  ],
  [
    [
      57344,
      63743
    ],
    "disallowed"
  ],
  [
    [
      63744,
      63744
    ],
    "mapped",
    [
      35912
    ]
  ],
  [
    [
      63745,
      63745
    ],
    "mapped",
    [
      26356
    ]
  ],
  [
    [
      63746,
      63746
    ],
    "mapped",
    [
      36554
    ]
  ],
  [
    [
      63747,
      63747
    ],
    "mapped",
    [
      36040
    ]
  ],
  [
    [
      63748,
      63748
    ],
    "mapped",
    [
      28369
    ]
  ],
  [
    [
      63749,
      63749
    ],
    "mapped",
    [
      20018
    ]
  ],
  [
    [
      63750,
      63750
    ],
    "mapped",
    [
      21477
    ]
  ],
  [
    [
      63751,
      63752
    ],
    "mapped",
    [
      40860
    ]
  ],
  [
    [
      63753,
      63753
    ],
    "mapped",
    [
      22865
    ]
  ],
  [
    [
      63754,
      63754
    ],
    "mapped",
    [
      37329
    ]
  ],
  [
    [
      63755,
      63755
    ],
    "mapped",
    [
      21895
    ]
  ],
  [
    [
      63756,
      63756
    ],
    "mapped",
    [
      22856
    ]
  ],
  [
    [
      63757,
      63757
    ],
    "mapped",
    [
      25078
    ]
  ],
  [
    [
      63758,
      63758
    ],
    "mapped",
    [
      30313
    ]
  ],
  [
    [
      63759,
      63759
    ],
    "mapped",
    [
      32645
    ]
  ],
  [
    [
      63760,
      63760
    ],
    "mapped",
    [
      34367
    ]
  ],
  [
    [
      63761,
      63761
    ],
    "mapped",
    [
      34746
    ]
  ],
  [
    [
      63762,
      63762
    ],
    "mapped",
    [
      35064
    ]
  ],
  [
    [
      63763,
      63763
    ],
    "mapped",
    [
      37007
    ]
  ],
  [
    [
      63764,
      63764
    ],
    "mapped",
    [
      27138
    ]
  ],
  [
    [
      63765,
      63765
    ],
    "mapped",
    [
      27931
    ]
  ],
  [
    [
      63766,
      63766
    ],
    "mapped",
    [
      28889
    ]
  ],
  [
    [
      63767,
      63767
    ],
    "mapped",
    [
      29662
    ]
  ],
  [
    [
      63768,
      63768
    ],
    "mapped",
    [
      33853
    ]
  ],
  [
    [
      63769,
      63769
    ],
    "mapped",
    [
      37226
    ]
  ],
  [
    [
      63770,
      63770
    ],
    "mapped",
    [
      39409
    ]
  ],
  [
    [
      63771,
      63771
    ],
    "mapped",
    [
      20098
    ]
  ],
  [
    [
      63772,
      63772
    ],
    "mapped",
    [
      21365
    ]
  ],
  [
    [
      63773,
      63773
    ],
    "mapped",
    [
      27396
    ]
  ],
  [
    [
      63774,
      63774
    ],
    "mapped",
    [
      29211
    ]
  ],
  [
    [
      63775,
      63775
    ],
    "mapped",
    [
      34349
    ]
  ],
  [
    [
      63776,
      63776
    ],
    "mapped",
    [
      40478
    ]
  ],
  [
    [
      63777,
      63777
    ],
    "mapped",
    [
      23888
    ]
  ],
  [
    [
      63778,
      63778
    ],
    "mapped",
    [
      28651
    ]
  ],
  [
    [
      63779,
      63779
    ],
    "mapped",
    [
      34253
    ]
  ],
  [
    [
      63780,
      63780
    ],
    "mapped",
    [
      35172
    ]
  ],
  [
    [
      63781,
      63781
    ],
    "mapped",
    [
      25289
    ]
  ],
  [
    [
      63782,
      63782
    ],
    "mapped",
    [
      33240
    ]
  ],
  [
    [
      63783,
      63783
    ],
    "mapped",
    [
      34847
    ]
  ],
  [
    [
      63784,
      63784
    ],
    "mapped",
    [
      24266
    ]
  ],
  [
    [
      63785,
      63785
    ],
    "mapped",
    [
      26391
    ]
  ],
  [
    [
      63786,
      63786
    ],
    "mapped",
    [
      28010
    ]
  ],
  [
    [
      63787,
      63787
    ],
    "mapped",
    [
      29436
    ]
  ],
  [
    [
      63788,
      63788
    ],
    "mapped",
    [
      37070
    ]
  ],
  [
    [
      63789,
      63789
    ],
    "mapped",
    [
      20358
    ]
  ],
  [
    [
      63790,
      63790
    ],
    "mapped",
    [
      20919
    ]
  ],
  [
    [
      63791,
      63791
    ],
    "mapped",
    [
      21214
    ]
  ],
  [
    [
      63792,
      63792
    ],
    "mapped",
    [
      25796
    ]
  ],
  [
    [
      63793,
      63793
    ],
    "mapped",
    [
      27347
    ]
  ],
  [
    [
      63794,
      63794
    ],
    "mapped",
    [
      29200
    ]
  ],
  [
    [
      63795,
      63795
    ],
    "mapped",
    [
      30439
    ]
  ],
  [
    [
      63796,
      63796
    ],
    "mapped",
    [
      32769
    ]
  ],
  [
    [
      63797,
      63797
    ],
    "mapped",
    [
      34310
    ]
  ],
  [
    [
      63798,
      63798
    ],
    "mapped",
    [
      34396
    ]
  ],
  [
    [
      63799,
      63799
    ],
    "mapped",
    [
      36335
    ]
  ],
  [
    [
      63800,
      63800
    ],
    "mapped",
    [
      38706
    ]
  ],
  [
    [
      63801,
      63801
    ],
    "mapped",
    [
      39791
    ]
  ],
  [
    [
      63802,
      63802
    ],
    "mapped",
    [
      40442
    ]
  ],
  [
    [
      63803,
      63803
    ],
    "mapped",
    [
      30860
    ]
  ],
  [
    [
      63804,
      63804
    ],
    "mapped",
    [
      31103
    ]
  ],
  [
    [
      63805,
      63805
    ],
    "mapped",
    [
      32160
    ]
  ],
  [
    [
      63806,
      63806
    ],
    "mapped",
    [
      33737
    ]
  ],
  [
    [
      63807,
      63807
    ],
    "mapped",
    [
      37636
    ]
  ],
  [
    [
      63808,
      63808
    ],
    "mapped",
    [
      40575
    ]
  ],
  [
    [
      63809,
      63809
    ],
    "mapped",
    [
      35542
    ]
  ],
  [
    [
      63810,
      63810
    ],
    "mapped",
    [
      22751
    ]
  ],
  [
    [
      63811,
      63811
    ],
    "mapped",
    [
      24324
    ]
  ],
  [
    [
      63812,
      63812
    ],
    "mapped",
    [
      31840
    ]
  ],
  [
    [
      63813,
      63813
    ],
    "mapped",
    [
      32894
    ]
  ],
  [
    [
      63814,
      63814
    ],
    "mapped",
    [
      29282
    ]
  ],
  [
    [
      63815,
      63815
    ],
    "mapped",
    [
      30922
    ]
  ],
  [
    [
      63816,
      63816
    ],
    "mapped",
    [
      36034
    ]
  ],
  [
    [
      63817,
      63817
    ],
    "mapped",
    [
      38647
    ]
  ],
  [
    [
      63818,
      63818
    ],
    "mapped",
    [
      22744
    ]
  ],
  [
    [
      63819,
      63819
    ],
    "mapped",
    [
      23650
    ]
  ],
  [
    [
      63820,
      63820
    ],
    "mapped",
    [
      27155
    ]
  ],
  [
    [
      63821,
      63821
    ],
    "mapped",
    [
      28122
    ]
  ],
  [
    [
      63822,
      63822
    ],
    "mapped",
    [
      28431
    ]
  ],
  [
    [
      63823,
      63823
    ],
    "mapped",
    [
      32047
    ]
  ],
  [
    [
      63824,
      63824
    ],
    "mapped",
    [
      32311
    ]
  ],
  [
    [
      63825,
      63825
    ],
    "mapped",
    [
      38475
    ]
  ],
  [
    [
      63826,
      63826
    ],
    "mapped",
    [
      21202
    ]
  ],
  [
    [
      63827,
      63827
    ],
    "mapped",
    [
      32907
    ]
  ],
  [
    [
      63828,
      63828
    ],
    "mapped",
    [
      20956
    ]
  ],
  [
    [
      63829,
      63829
    ],
    "mapped",
    [
      20940
    ]
  ],
  [
    [
      63830,
      63830
    ],
    "mapped",
    [
      31260
    ]
  ],
  [
    [
      63831,
      63831
    ],
    "mapped",
    [
      32190
    ]
  ],
  [
    [
      63832,
      63832
    ],
    "mapped",
    [
      33777
    ]
  ],
  [
    [
      63833,
      63833
    ],
    "mapped",
    [
      38517
    ]
  ],
  [
    [
      63834,
      63834
    ],
    "mapped",
    [
      35712
    ]
  ],
  [
    [
      63835,
      63835
    ],
    "mapped",
    [
      25295
    ]
  ],
  [
    [
      63836,
      63836
    ],
    "mapped",
    [
      27138
    ]
  ],
  [
    [
      63837,
      63837
    ],
    "mapped",
    [
      35582
    ]
  ],
  [
    [
      63838,
      63838
    ],
    "mapped",
    [
      20025
    ]
  ],
  [
    [
      63839,
      63839
    ],
    "mapped",
    [
      23527
    ]
  ],
  [
    [
      63840,
      63840
    ],
    "mapped",
    [
      24594
    ]
  ],
  [
    [
      63841,
      63841
    ],
    "mapped",
    [
      29575
    ]
  ],
  [
    [
      63842,
      63842
    ],
    "mapped",
    [
      30064
    ]
  ],
  [
    [
      63843,
      63843
    ],
    "mapped",
    [
      21271
    ]
  ],
  [
    [
      63844,
      63844
    ],
    "mapped",
    [
      30971
    ]
  ],
  [
    [
      63845,
      63845
    ],
    "mapped",
    [
      20415
    ]
  ],
  [
    [
      63846,
      63846
    ],
    "mapped",
    [
      24489
    ]
  ],
  [
    [
      63847,
      63847
    ],
    "mapped",
    [
      19981
    ]
  ],
  [
    [
      63848,
      63848
    ],
    "mapped",
    [
      27852
    ]
  ],
  [
    [
      63849,
      63849
    ],
    "mapped",
    [
      25976
    ]
  ],
  [
    [
      63850,
      63850
    ],
    "mapped",
    [
      32034
    ]
  ],
  [
    [
      63851,
      63851
    ],
    "mapped",
    [
      21443
    ]
  ],
  [
    [
      63852,
      63852
    ],
    "mapped",
    [
      22622
    ]
  ],
  [
    [
      63853,
      63853
    ],
    "mapped",
    [
      30465
    ]
  ],
  [
    [
      63854,
      63854
    ],
    "mapped",
    [
      33865
    ]
  ],
  [
    [
      63855,
      63855
    ],
    "mapped",
    [
      35498
    ]
  ],
  [
    [
      63856,
      63856
    ],
    "mapped",
    [
      27578
    ]
  ],
  [
    [
      63857,
      63857
    ],
    "mapped",
    [
      36784
    ]
  ],
  [
    [
      63858,
      63858
    ],
    "mapped",
    [
      27784
    ]
  ],
  [
    [
      63859,
      63859
    ],
    "mapped",
    [
      25342
    ]
  ],
  [
    [
      63860,
      63860
    ],
    "mapped",
    [
      33509
    ]
  ],
  [
    [
      63861,
      63861
    ],
    "mapped",
    [
      25504
    ]
  ],
  [
    [
      63862,
      63862
    ],
    "mapped",
    [
      30053
    ]
  ],
  [
    [
      63863,
      63863
    ],
    "mapped",
    [
      20142
    ]
  ],
  [
    [
      63864,
      63864
    ],
    "mapped",
    [
      20841
    ]
  ],
  [
    [
      63865,
      63865
    ],
    "mapped",
    [
      20937
    ]
  ],
  [
    [
      63866,
      63866
    ],
    "mapped",
    [
      26753
    ]
  ],
  [
    [
      63867,
      63867
    ],
    "mapped",
    [
      31975
    ]
  ],
  [
    [
      63868,
      63868
    ],
    "mapped",
    [
      33391
    ]
  ],
  [
    [
      63869,
      63869
    ],
    "mapped",
    [
      35538
    ]
  ],
  [
    [
      63870,
      63870
    ],
    "mapped",
    [
      37327
    ]
  ],
  [
    [
      63871,
      63871
    ],
    "mapped",
    [
      21237
    ]
  ],
  [
    [
      63872,
      63872
    ],
    "mapped",
    [
      21570
    ]
  ],
  [
    [
      63873,
      63873
    ],
    "mapped",
    [
      22899
    ]
  ],
  [
    [
      63874,
      63874
    ],
    "mapped",
    [
      24300
    ]
  ],
  [
    [
      63875,
      63875
    ],
    "mapped",
    [
      26053
    ]
  ],
  [
    [
      63876,
      63876
    ],
    "mapped",
    [
      28670
    ]
  ],
  [
    [
      63877,
      63877
    ],
    "mapped",
    [
      31018
    ]
  ],
  [
    [
      63878,
      63878
    ],
    "mapped",
    [
      38317
    ]
  ],
  [
    [
      63879,
      63879
    ],
    "mapped",
    [
      39530
    ]
  ],
  [
    [
      63880,
      63880
    ],
    "mapped",
    [
      40599
    ]
  ],
  [
    [
      63881,
      63881
    ],
    "mapped",
    [
      40654
    ]
  ],
  [
    [
      63882,
      63882
    ],
    "mapped",
    [
      21147
    ]
  ],
  [
    [
      63883,
      63883
    ],
    "mapped",
    [
      26310
    ]
  ],
  [
    [
      63884,
      63884
    ],
    "mapped",
    [
      27511
    ]
  ],
  [
    [
      63885,
      63885
    ],
    "mapped",
    [
      36706
    ]
  ],
  [
    [
      63886,
      63886
    ],
    "mapped",
    [
      24180
    ]
  ],
  [
    [
      63887,
      63887
    ],
    "mapped",
    [
      24976
    ]
  ],
  [
    [
      63888,
      63888
    ],
    "mapped",
    [
      25088
    ]
  ],
  [
    [
      63889,
      63889
    ],
    "mapped",
    [
      25754
    ]
  ],
  [
    [
      63890,
      63890
    ],
    "mapped",
    [
      28451
    ]
  ],
  [
    [
      63891,
      63891
    ],
    "mapped",
    [
      29001
    ]
  ],
  [
    [
      63892,
      63892
    ],
    "mapped",
    [
      29833
    ]
  ],
  [
    [
      63893,
      63893
    ],
    "mapped",
    [
      31178
    ]
  ],
  [
    [
      63894,
      63894
    ],
    "mapped",
    [
      32244
    ]
  ],
  [
    [
      63895,
      63895
    ],
    "mapped",
    [
      32879
    ]
  ],
  [
    [
      63896,
      63896
    ],
    "mapped",
    [
      36646
    ]
  ],
  [
    [
      63897,
      63897
    ],
    "mapped",
    [
      34030
    ]
  ],
  [
    [
      63898,
      63898
    ],
    "mapped",
    [
      36899
    ]
  ],
  [
    [
      63899,
      63899
    ],
    "mapped",
    [
      37706
    ]
  ],
  [
    [
      63900,
      63900
    ],
    "mapped",
    [
      21015
    ]
  ],
  [
    [
      63901,
      63901
    ],
    "mapped",
    [
      21155
    ]
  ],
  [
    [
      63902,
      63902
    ],
    "mapped",
    [
      21693
    ]
  ],
  [
    [
      63903,
      63903
    ],
    "mapped",
    [
      28872
    ]
  ],
  [
    [
      63904,
      63904
    ],
    "mapped",
    [
      35010
    ]
  ],
  [
    [
      63905,
      63905
    ],
    "mapped",
    [
      35498
    ]
  ],
  [
    [
      63906,
      63906
    ],
    "mapped",
    [
      24265
    ]
  ],
  [
    [
      63907,
      63907
    ],
    "mapped",
    [
      24565
    ]
  ],
  [
    [
      63908,
      63908
    ],
    "mapped",
    [
      25467
    ]
  ],
  [
    [
      63909,
      63909
    ],
    "mapped",
    [
      27566
    ]
  ],
  [
    [
      63910,
      63910
    ],
    "mapped",
    [
      31806
    ]
  ],
  [
    [
      63911,
      63911
    ],
    "mapped",
    [
      29557
    ]
  ],
  [
    [
      63912,
      63912
    ],
    "mapped",
    [
      20196
    ]
  ],
  [
    [
      63913,
      63913
    ],
    "mapped",
    [
      22265
    ]
  ],
  [
    [
      63914,
      63914
    ],
    "mapped",
    [
      23527
    ]
  ],
  [
    [
      63915,
      63915
    ],
    "mapped",
    [
      23994
    ]
  ],
  [
    [
      63916,
      63916
    ],
    "mapped",
    [
      24604
    ]
  ],
  [
    [
      63917,
      63917
    ],
    "mapped",
    [
      29618
    ]
  ],
  [
    [
      63918,
      63918
    ],
    "mapped",
    [
      29801
    ]
  ],
  [
    [
      63919,
      63919
    ],
    "mapped",
    [
      32666
    ]
  ],
  [
    [
      63920,
      63920
    ],
    "mapped",
    [
      32838
    ]
  ],
  [
    [
      63921,
      63921
    ],
    "mapped",
    [
      37428
    ]
  ],
  [
    [
      63922,
      63922
    ],
    "mapped",
    [
      38646
    ]
  ],
  [
    [
      63923,
      63923
    ],
    "mapped",
    [
      38728
    ]
  ],
  [
    [
      63924,
      63924
    ],
    "mapped",
    [
      38936
    ]
  ],
  [
    [
      63925,
      63925
    ],
    "mapped",
    [
      20363
    ]
  ],
  [
    [
      63926,
      63926
    ],
    "mapped",
    [
      31150
    ]
  ],
  [
    [
      63927,
      63927
    ],
    "mapped",
    [
      37300
    ]
  ],
  [
    [
      63928,
      63928
    ],
    "mapped",
    [
      38584
    ]
  ],
  [
    [
      63929,
      63929
    ],
    "mapped",
    [
      24801
    ]
  ],
  [
    [
      63930,
      63930
    ],
    "mapped",
    [
      20102
    ]
  ],
  [
    [
      63931,
      63931
    ],
    "mapped",
    [
      20698
    ]
  ],
  [
    [
      63932,
      63932
    ],
    "mapped",
    [
      23534
    ]
  ],
  [
    [
      63933,
      63933
    ],
    "mapped",
    [
      23615
    ]
  ],
  [
    [
      63934,
      63934
    ],
    "mapped",
    [
      26009
    ]
  ],
  [
    [
      63935,
      63935
    ],
    "mapped",
    [
      27138
    ]
  ],
  [
    [
      63936,
      63936
    ],
    "mapped",
    [
      29134
    ]
  ],
  [
    [
      63937,
      63937
    ],
    "mapped",
    [
      30274
    ]
  ],
  [
    [
      63938,
      63938
    ],
    "mapped",
    [
      34044
    ]
  ],
  [
    [
      63939,
      63939
    ],
    "mapped",
    [
      36988
    ]
  ],
  [
    [
      63940,
      63940
    ],
    "mapped",
    [
      40845
    ]
  ],
  [
    [
      63941,
      63941
    ],
    "mapped",
    [
      26248
    ]
  ],
  [
    [
      63942,
      63942
    ],
    "mapped",
    [
      38446
    ]
  ],
  [
    [
      63943,
      63943
    ],
    "mapped",
    [
      21129
    ]
  ],
  [
    [
      63944,
      63944
    ],
    "mapped",
    [
      26491
    ]
  ],
  [
    [
      63945,
      63945
    ],
    "mapped",
    [
      26611
    ]
  ],
  [
    [
      63946,
      63946
    ],
    "mapped",
    [
      27969
    ]
  ],
  [
    [
      63947,
      63947
    ],
    "mapped",
    [
      28316
    ]
  ],
  [
    [
      63948,
      63948
    ],
    "mapped",
    [
      29705
    ]
  ],
  [
    [
      63949,
      63949
    ],
    "mapped",
    [
      30041
    ]
  ],
  [
    [
      63950,
      63950
    ],
    "mapped",
    [
      30827
    ]
  ],
  [
    [
      63951,
      63951
    ],
    "mapped",
    [
      32016
    ]
  ],
  [
    [
      63952,
      63952
    ],
    "mapped",
    [
      39006
    ]
  ],
  [
    [
      63953,
      63953
    ],
    "mapped",
    [
      20845
    ]
  ],
  [
    [
      63954,
      63954
    ],
    "mapped",
    [
      25134
    ]
  ],
  [
    [
      63955,
      63955
    ],
    "mapped",
    [
      38520
    ]
  ],
  [
    [
      63956,
      63956
    ],
    "mapped",
    [
      20523
    ]
  ],
  [
    [
      63957,
      63957
    ],
    "mapped",
    [
      23833
    ]
  ],
  [
    [
      63958,
      63958
    ],
    "mapped",
    [
      28138
    ]
  ],
  [
    [
      63959,
      63959
    ],
    "mapped",
    [
      36650
    ]
  ],
  [
    [
      63960,
      63960
    ],
    "mapped",
    [
      24459
    ]
  ],
  [
    [
      63961,
      63961
    ],
    "mapped",
    [
      24900
    ]
  ],
  [
    [
      63962,
      63962
    ],
    "mapped",
    [
      26647
    ]
  ],
  [
    [
      63963,
      63963
    ],
    "mapped",
    [
      29575
    ]
  ],
  [
    [
      63964,
      63964
    ],
    "mapped",
    [
      38534
    ]
  ],
  [
    [
      63965,
      63965
    ],
    "mapped",
    [
      21033
    ]
  ],
  [
    [
      63966,
      63966
    ],
    "mapped",
    [
      21519
    ]
  ],
  [
    [
      63967,
      63967
    ],
    "mapped",
    [
      23653
    ]
  ],
  [
    [
      63968,
      63968
    ],
    "mapped",
    [
      26131
    ]
  ],
  [
    [
      63969,
      63969
    ],
    "mapped",
    [
      26446
    ]
  ],
  [
    [
      63970,
      63970
    ],
    "mapped",
    [
      26792
    ]
  ],
  [
    [
      63971,
      63971
    ],
    "mapped",
    [
      27877
    ]
  ],
  [
    [
      63972,
      63972
    ],
    "mapped",
    [
      29702
    ]
  ],
  [
    [
      63973,
      63973
    ],
    "mapped",
    [
      30178
    ]
  ],
  [
    [
      63974,
      63974
    ],
    "mapped",
    [
      32633
    ]
  ],
  [
    [
      63975,
      63975
    ],
    "mapped",
    [
      35023
    ]
  ],
  [
    [
      63976,
      63976
    ],
    "mapped",
    [
      35041
    ]
  ],
  [
    [
      63977,
      63977
    ],
    "mapped",
    [
      37324
    ]
  ],
  [
    [
      63978,
      63978
    ],
    "mapped",
    [
      38626
    ]
  ],
  [
    [
      63979,
      63979
    ],
    "mapped",
    [
      21311
    ]
  ],
  [
    [
      63980,
      63980
    ],
    "mapped",
    [
      28346
    ]
  ],
  [
    [
      63981,
      63981
    ],
    "mapped",
    [
      21533
    ]
  ],
  [
    [
      63982,
      63982
    ],
    "mapped",
    [
      29136
    ]
  ],
  [
    [
      63983,
      63983
    ],
    "mapped",
    [
      29848
    ]
  ],
  [
    [
      63984,
      63984
    ],
    "mapped",
    [
      34298
    ]
  ],
  [
    [
      63985,
      63985
    ],
    "mapped",
    [
      38563
    ]
  ],
  [
    [
      63986,
      63986
    ],
    "mapped",
    [
      40023
    ]
  ],
  [
    [
      63987,
      63987
    ],
    "mapped",
    [
      40607
    ]
  ],
  [
    [
      63988,
      63988
    ],
    "mapped",
    [
      26519
    ]
  ],
  [
    [
      63989,
      63989
    ],
    "mapped",
    [
      28107
    ]
  ],
  [
    [
      63990,
      63990
    ],
    "mapped",
    [
      33256
    ]
  ],
  [
    [
      63991,
      63991
    ],
    "mapped",
    [
      31435
    ]
  ],
  [
    [
      63992,
      63992
    ],
    "mapped",
    [
      31520
    ]
  ],
  [
    [
      63993,
      63993
    ],
    "mapped",
    [
      31890
    ]
  ],
  [
    [
      63994,
      63994
    ],
    "mapped",
    [
      29376
    ]
  ],
  [
    [
      63995,
      63995
    ],
    "mapped",
    [
      28825
    ]
  ],
  [
    [
      63996,
      63996
    ],
    "mapped",
    [
      35672
    ]
  ],
  [
    [
      63997,
      63997
    ],
    "mapped",
    [
      20160
    ]
  ],
  [
    [
      63998,
      63998
    ],
    "mapped",
    [
      33590
    ]
  ],
  [
    [
      63999,
      63999
    ],
    "mapped",
    [
      21050
    ]
  ],
  [
    [
      64e3,
      64e3
    ],
    "mapped",
    [
      20999
    ]
  ],
  [
    [
      64001,
      64001
    ],
    "mapped",
    [
      24230
    ]
  ],
  [
    [
      64002,
      64002
    ],
    "mapped",
    [
      25299
    ]
  ],
  [
    [
      64003,
      64003
    ],
    "mapped",
    [
      31958
    ]
  ],
  [
    [
      64004,
      64004
    ],
    "mapped",
    [
      23429
    ]
  ],
  [
    [
      64005,
      64005
    ],
    "mapped",
    [
      27934
    ]
  ],
  [
    [
      64006,
      64006
    ],
    "mapped",
    [
      26292
    ]
  ],
  [
    [
      64007,
      64007
    ],
    "mapped",
    [
      36667
    ]
  ],
  [
    [
      64008,
      64008
    ],
    "mapped",
    [
      34892
    ]
  ],
  [
    [
      64009,
      64009
    ],
    "mapped",
    [
      38477
    ]
  ],
  [
    [
      64010,
      64010
    ],
    "mapped",
    [
      35211
    ]
  ],
  [
    [
      64011,
      64011
    ],
    "mapped",
    [
      24275
    ]
  ],
  [
    [
      64012,
      64012
    ],
    "mapped",
    [
      20800
    ]
  ],
  [
    [
      64013,
      64013
    ],
    "mapped",
    [
      21952
    ]
  ],
  [
    [
      64014,
      64015
    ],
    "valid"
  ],
  [
    [
      64016,
      64016
    ],
    "mapped",
    [
      22618
    ]
  ],
  [
    [
      64017,
      64017
    ],
    "valid"
  ],
  [
    [
      64018,
      64018
    ],
    "mapped",
    [
      26228
    ]
  ],
  [
    [
      64019,
      64020
    ],
    "valid"
  ],
  [
    [
      64021,
      64021
    ],
    "mapped",
    [
      20958
    ]
  ],
  [
    [
      64022,
      64022
    ],
    "mapped",
    [
      29482
    ]
  ],
  [
    [
      64023,
      64023
    ],
    "mapped",
    [
      30410
    ]
  ],
  [
    [
      64024,
      64024
    ],
    "mapped",
    [
      31036
    ]
  ],
  [
    [
      64025,
      64025
    ],
    "mapped",
    [
      31070
    ]
  ],
  [
    [
      64026,
      64026
    ],
    "mapped",
    [
      31077
    ]
  ],
  [
    [
      64027,
      64027
    ],
    "mapped",
    [
      31119
    ]
  ],
  [
    [
      64028,
      64028
    ],
    "mapped",
    [
      38742
    ]
  ],
  [
    [
      64029,
      64029
    ],
    "mapped",
    [
      31934
    ]
  ],
  [
    [
      64030,
      64030
    ],
    "mapped",
    [
      32701
    ]
  ],
  [
    [
      64031,
      64031
    ],
    "valid"
  ],
  [
    [
      64032,
      64032
    ],
    "mapped",
    [
      34322
    ]
  ],
  [
    [
      64033,
      64033
    ],
    "valid"
  ],
  [
    [
      64034,
      64034
    ],
    "mapped",
    [
      35576
    ]
  ],
  [
    [
      64035,
      64036
    ],
    "valid"
  ],
  [
    [
      64037,
      64037
    ],
    "mapped",
    [
      36920
    ]
  ],
  [
    [
      64038,
      64038
    ],
    "mapped",
    [
      37117
    ]
  ],
  [
    [
      64039,
      64041
    ],
    "valid"
  ],
  [
    [
      64042,
      64042
    ],
    "mapped",
    [
      39151
    ]
  ],
  [
    [
      64043,
      64043
    ],
    "mapped",
    [
      39164
    ]
  ],
  [
    [
      64044,
      64044
    ],
    "mapped",
    [
      39208
    ]
  ],
  [
    [
      64045,
      64045
    ],
    "mapped",
    [
      40372
    ]
  ],
  [
    [
      64046,
      64046
    ],
    "mapped",
    [
      37086
    ]
  ],
  [
    [
      64047,
      64047
    ],
    "mapped",
    [
      38583
    ]
  ],
  [
    [
      64048,
      64048
    ],
    "mapped",
    [
      20398
    ]
  ],
  [
    [
      64049,
      64049
    ],
    "mapped",
    [
      20711
    ]
  ],
  [
    [
      64050,
      64050
    ],
    "mapped",
    [
      20813
    ]
  ],
  [
    [
      64051,
      64051
    ],
    "mapped",
    [
      21193
    ]
  ],
  [
    [
      64052,
      64052
    ],
    "mapped",
    [
      21220
    ]
  ],
  [
    [
      64053,
      64053
    ],
    "mapped",
    [
      21329
    ]
  ],
  [
    [
      64054,
      64054
    ],
    "mapped",
    [
      21917
    ]
  ],
  [
    [
      64055,
      64055
    ],
    "mapped",
    [
      22022
    ]
  ],
  [
    [
      64056,
      64056
    ],
    "mapped",
    [
      22120
    ]
  ],
  [
    [
      64057,
      64057
    ],
    "mapped",
    [
      22592
    ]
  ],
  [
    [
      64058,
      64058
    ],
    "mapped",
    [
      22696
    ]
  ],
  [
    [
      64059,
      64059
    ],
    "mapped",
    [
      23652
    ]
  ],
  [
    [
      64060,
      64060
    ],
    "mapped",
    [
      23662
    ]
  ],
  [
    [
      64061,
      64061
    ],
    "mapped",
    [
      24724
    ]
  ],
  [
    [
      64062,
      64062
    ],
    "mapped",
    [
      24936
    ]
  ],
  [
    [
      64063,
      64063
    ],
    "mapped",
    [
      24974
    ]
  ],
  [
    [
      64064,
      64064
    ],
    "mapped",
    [
      25074
    ]
  ],
  [
    [
      64065,
      64065
    ],
    "mapped",
    [
      25935
    ]
  ],
  [
    [
      64066,
      64066
    ],
    "mapped",
    [
      26082
    ]
  ],
  [
    [
      64067,
      64067
    ],
    "mapped",
    [
      26257
    ]
  ],
  [
    [
      64068,
      64068
    ],
    "mapped",
    [
      26757
    ]
  ],
  [
    [
      64069,
      64069
    ],
    "mapped",
    [
      28023
    ]
  ],
  [
    [
      64070,
      64070
    ],
    "mapped",
    [
      28186
    ]
  ],
  [
    [
      64071,
      64071
    ],
    "mapped",
    [
      28450
    ]
  ],
  [
    [
      64072,
      64072
    ],
    "mapped",
    [
      29038
    ]
  ],
  [
    [
      64073,
      64073
    ],
    "mapped",
    [
      29227
    ]
  ],
  [
    [
      64074,
      64074
    ],
    "mapped",
    [
      29730
    ]
  ],
  [
    [
      64075,
      64075
    ],
    "mapped",
    [
      30865
    ]
  ],
  [
    [
      64076,
      64076
    ],
    "mapped",
    [
      31038
    ]
  ],
  [
    [
      64077,
      64077
    ],
    "mapped",
    [
      31049
    ]
  ],
  [
    [
      64078,
      64078
    ],
    "mapped",
    [
      31048
    ]
  ],
  [
    [
      64079,
      64079
    ],
    "mapped",
    [
      31056
    ]
  ],
  [
    [
      64080,
      64080
    ],
    "mapped",
    [
      31062
    ]
  ],
  [
    [
      64081,
      64081
    ],
    "mapped",
    [
      31069
    ]
  ],
  [
    [
      64082,
      64082
    ],
    "mapped",
    [
      31117
    ]
  ],
  [
    [
      64083,
      64083
    ],
    "mapped",
    [
      31118
    ]
  ],
  [
    [
      64084,
      64084
    ],
    "mapped",
    [
      31296
    ]
  ],
  [
    [
      64085,
      64085
    ],
    "mapped",
    [
      31361
    ]
  ],
  [
    [
      64086,
      64086
    ],
    "mapped",
    [
      31680
    ]
  ],
  [
    [
      64087,
      64087
    ],
    "mapped",
    [
      32244
    ]
  ],
  [
    [
      64088,
      64088
    ],
    "mapped",
    [
      32265
    ]
  ],
  [
    [
      64089,
      64089
    ],
    "mapped",
    [
      32321
    ]
  ],
  [
    [
      64090,
      64090
    ],
    "mapped",
    [
      32626
    ]
  ],
  [
    [
      64091,
      64091
    ],
    "mapped",
    [
      32773
    ]
  ],
  [
    [
      64092,
      64092
    ],
    "mapped",
    [
      33261
    ]
  ],
  [
    [
      64093,
      64094
    ],
    "mapped",
    [
      33401
    ]
  ],
  [
    [
      64095,
      64095
    ],
    "mapped",
    [
      33879
    ]
  ],
  [
    [
      64096,
      64096
    ],
    "mapped",
    [
      35088
    ]
  ],
  [
    [
      64097,
      64097
    ],
    "mapped",
    [
      35222
    ]
  ],
  [
    [
      64098,
      64098
    ],
    "mapped",
    [
      35585
    ]
  ],
  [
    [
      64099,
      64099
    ],
    "mapped",
    [
      35641
    ]
  ],
  [
    [
      64100,
      64100
    ],
    "mapped",
    [
      36051
    ]
  ],
  [
    [
      64101,
      64101
    ],
    "mapped",
    [
      36104
    ]
  ],
  [
    [
      64102,
      64102
    ],
    "mapped",
    [
      36790
    ]
  ],
  [
    [
      64103,
      64103
    ],
    "mapped",
    [
      36920
    ]
  ],
  [
    [
      64104,
      64104
    ],
    "mapped",
    [
      38627
    ]
  ],
  [
    [
      64105,
      64105
    ],
    "mapped",
    [
      38911
    ]
  ],
  [
    [
      64106,
      64106
    ],
    "mapped",
    [
      38971
    ]
  ],
  [
    [
      64107,
      64107
    ],
    "mapped",
    [
      24693
    ]
  ],
  [
    [
      64108,
      64108
    ],
    "mapped",
    [
      148206
    ]
  ],
  [
    [
      64109,
      64109
    ],
    "mapped",
    [
      33304
    ]
  ],
  [
    [
      64110,
      64111
    ],
    "disallowed"
  ],
  [
    [
      64112,
      64112
    ],
    "mapped",
    [
      20006
    ]
  ],
  [
    [
      64113,
      64113
    ],
    "mapped",
    [
      20917
    ]
  ],
  [
    [
      64114,
      64114
    ],
    "mapped",
    [
      20840
    ]
  ],
  [
    [
      64115,
      64115
    ],
    "mapped",
    [
      20352
    ]
  ],
  [
    [
      64116,
      64116
    ],
    "mapped",
    [
      20805
    ]
  ],
  [
    [
      64117,
      64117
    ],
    "mapped",
    [
      20864
    ]
  ],
  [
    [
      64118,
      64118
    ],
    "mapped",
    [
      21191
    ]
  ],
  [
    [
      64119,
      64119
    ],
    "mapped",
    [
      21242
    ]
  ],
  [
    [
      64120,
      64120
    ],
    "mapped",
    [
      21917
    ]
  ],
  [
    [
      64121,
      64121
    ],
    "mapped",
    [
      21845
    ]
  ],
  [
    [
      64122,
      64122
    ],
    "mapped",
    [
      21913
    ]
  ],
  [
    [
      64123,
      64123
    ],
    "mapped",
    [
      21986
    ]
  ],
  [
    [
      64124,
      64124
    ],
    "mapped",
    [
      22618
    ]
  ],
  [
    [
      64125,
      64125
    ],
    "mapped",
    [
      22707
    ]
  ],
  [
    [
      64126,
      64126
    ],
    "mapped",
    [
      22852
    ]
  ],
  [
    [
      64127,
      64127
    ],
    "mapped",
    [
      22868
    ]
  ],
  [
    [
      64128,
      64128
    ],
    "mapped",
    [
      23138
    ]
  ],
  [
    [
      64129,
      64129
    ],
    "mapped",
    [
      23336
    ]
  ],
  [
    [
      64130,
      64130
    ],
    "mapped",
    [
      24274
    ]
  ],
  [
    [
      64131,
      64131
    ],
    "mapped",
    [
      24281
    ]
  ],
  [
    [
      64132,
      64132
    ],
    "mapped",
    [
      24425
    ]
  ],
  [
    [
      64133,
      64133
    ],
    "mapped",
    [
      24493
    ]
  ],
  [
    [
      64134,
      64134
    ],
    "mapped",
    [
      24792
    ]
  ],
  [
    [
      64135,
      64135
    ],
    "mapped",
    [
      24910
    ]
  ],
  [
    [
      64136,
      64136
    ],
    "mapped",
    [
      24840
    ]
  ],
  [
    [
      64137,
      64137
    ],
    "mapped",
    [
      24974
    ]
  ],
  [
    [
      64138,
      64138
    ],
    "mapped",
    [
      24928
    ]
  ],
  [
    [
      64139,
      64139
    ],
    "mapped",
    [
      25074
    ]
  ],
  [
    [
      64140,
      64140
    ],
    "mapped",
    [
      25140
    ]
  ],
  [
    [
      64141,
      64141
    ],
    "mapped",
    [
      25540
    ]
  ],
  [
    [
      64142,
      64142
    ],
    "mapped",
    [
      25628
    ]
  ],
  [
    [
      64143,
      64143
    ],
    "mapped",
    [
      25682
    ]
  ],
  [
    [
      64144,
      64144
    ],
    "mapped",
    [
      25942
    ]
  ],
  [
    [
      64145,
      64145
    ],
    "mapped",
    [
      26228
    ]
  ],
  [
    [
      64146,
      64146
    ],
    "mapped",
    [
      26391
    ]
  ],
  [
    [
      64147,
      64147
    ],
    "mapped",
    [
      26395
    ]
  ],
  [
    [
      64148,
      64148
    ],
    "mapped",
    [
      26454
    ]
  ],
  [
    [
      64149,
      64149
    ],
    "mapped",
    [
      27513
    ]
  ],
  [
    [
      64150,
      64150
    ],
    "mapped",
    [
      27578
    ]
  ],
  [
    [
      64151,
      64151
    ],
    "mapped",
    [
      27969
    ]
  ],
  [
    [
      64152,
      64152
    ],
    "mapped",
    [
      28379
    ]
  ],
  [
    [
      64153,
      64153
    ],
    "mapped",
    [
      28363
    ]
  ],
  [
    [
      64154,
      64154
    ],
    "mapped",
    [
      28450
    ]
  ],
  [
    [
      64155,
      64155
    ],
    "mapped",
    [
      28702
    ]
  ],
  [
    [
      64156,
      64156
    ],
    "mapped",
    [
      29038
    ]
  ],
  [
    [
      64157,
      64157
    ],
    "mapped",
    [
      30631
    ]
  ],
  [
    [
      64158,
      64158
    ],
    "mapped",
    [
      29237
    ]
  ],
  [
    [
      64159,
      64159
    ],
    "mapped",
    [
      29359
    ]
  ],
  [
    [
      64160,
      64160
    ],
    "mapped",
    [
      29482
    ]
  ],
  [
    [
      64161,
      64161
    ],
    "mapped",
    [
      29809
    ]
  ],
  [
    [
      64162,
      64162
    ],
    "mapped",
    [
      29958
    ]
  ],
  [
    [
      64163,
      64163
    ],
    "mapped",
    [
      30011
    ]
  ],
  [
    [
      64164,
      64164
    ],
    "mapped",
    [
      30237
    ]
  ],
  [
    [
      64165,
      64165
    ],
    "mapped",
    [
      30239
    ]
  ],
  [
    [
      64166,
      64166
    ],
    "mapped",
    [
      30410
    ]
  ],
  [
    [
      64167,
      64167
    ],
    "mapped",
    [
      30427
    ]
  ],
  [
    [
      64168,
      64168
    ],
    "mapped",
    [
      30452
    ]
  ],
  [
    [
      64169,
      64169
    ],
    "mapped",
    [
      30538
    ]
  ],
  [
    [
      64170,
      64170
    ],
    "mapped",
    [
      30528
    ]
  ],
  [
    [
      64171,
      64171
    ],
    "mapped",
    [
      30924
    ]
  ],
  [
    [
      64172,
      64172
    ],
    "mapped",
    [
      31409
    ]
  ],
  [
    [
      64173,
      64173
    ],
    "mapped",
    [
      31680
    ]
  ],
  [
    [
      64174,
      64174
    ],
    "mapped",
    [
      31867
    ]
  ],
  [
    [
      64175,
      64175
    ],
    "mapped",
    [
      32091
    ]
  ],
  [
    [
      64176,
      64176
    ],
    "mapped",
    [
      32244
    ]
  ],
  [
    [
      64177,
      64177
    ],
    "mapped",
    [
      32574
    ]
  ],
  [
    [
      64178,
      64178
    ],
    "mapped",
    [
      32773
    ]
  ],
  [
    [
      64179,
      64179
    ],
    "mapped",
    [
      33618
    ]
  ],
  [
    [
      64180,
      64180
    ],
    "mapped",
    [
      33775
    ]
  ],
  [
    [
      64181,
      64181
    ],
    "mapped",
    [
      34681
    ]
  ],
  [
    [
      64182,
      64182
    ],
    "mapped",
    [
      35137
    ]
  ],
  [
    [
      64183,
      64183
    ],
    "mapped",
    [
      35206
    ]
  ],
  [
    [
      64184,
      64184
    ],
    "mapped",
    [
      35222
    ]
  ],
  [
    [
      64185,
      64185
    ],
    "mapped",
    [
      35519
    ]
  ],
  [
    [
      64186,
      64186
    ],
    "mapped",
    [
      35576
    ]
  ],
  [
    [
      64187,
      64187
    ],
    "mapped",
    [
      35531
    ]
  ],
  [
    [
      64188,
      64188
    ],
    "mapped",
    [
      35585
    ]
  ],
  [
    [
      64189,
      64189
    ],
    "mapped",
    [
      35582
    ]
  ],
  [
    [
      64190,
      64190
    ],
    "mapped",
    [
      35565
    ]
  ],
  [
    [
      64191,
      64191
    ],
    "mapped",
    [
      35641
    ]
  ],
  [
    [
      64192,
      64192
    ],
    "mapped",
    [
      35722
    ]
  ],
  [
    [
      64193,
      64193
    ],
    "mapped",
    [
      36104
    ]
  ],
  [
    [
      64194,
      64194
    ],
    "mapped",
    [
      36664
    ]
  ],
  [
    [
      64195,
      64195
    ],
    "mapped",
    [
      36978
    ]
  ],
  [
    [
      64196,
      64196
    ],
    "mapped",
    [
      37273
    ]
  ],
  [
    [
      64197,
      64197
    ],
    "mapped",
    [
      37494
    ]
  ],
  [
    [
      64198,
      64198
    ],
    "mapped",
    [
      38524
    ]
  ],
  [
    [
      64199,
      64199
    ],
    "mapped",
    [
      38627
    ]
  ],
  [
    [
      64200,
      64200
    ],
    "mapped",
    [
      38742
    ]
  ],
  [
    [
      64201,
      64201
    ],
    "mapped",
    [
      38875
    ]
  ],
  [
    [
      64202,
      64202
    ],
    "mapped",
    [
      38911
    ]
  ],
  [
    [
      64203,
      64203
    ],
    "mapped",
    [
      38923
    ]
  ],
  [
    [
      64204,
      64204
    ],
    "mapped",
    [
      38971
    ]
  ],
  [
    [
      64205,
      64205
    ],
    "mapped",
    [
      39698
    ]
  ],
  [
    [
      64206,
      64206
    ],
    "mapped",
    [
      40860
    ]
  ],
  [
    [
      64207,
      64207
    ],
    "mapped",
    [
      141386
    ]
  ],
  [
    [
      64208,
      64208
    ],
    "mapped",
    [
      141380
    ]
  ],
  [
    [
      64209,
      64209
    ],
    "mapped",
    [
      144341
    ]
  ],
  [
    [
      64210,
      64210
    ],
    "mapped",
    [
      15261
    ]
  ],
  [
    [
      64211,
      64211
    ],
    "mapped",
    [
      16408
    ]
  ],
  [
    [
      64212,
      64212
    ],
    "mapped",
    [
      16441
    ]
  ],
  [
    [
      64213,
      64213
    ],
    "mapped",
    [
      152137
    ]
  ],
  [
    [
      64214,
      64214
    ],
    "mapped",
    [
      154832
    ]
  ],
  [
    [
      64215,
      64215
    ],
    "mapped",
    [
      163539
    ]
  ],
  [
    [
      64216,
      64216
    ],
    "mapped",
    [
      40771
    ]
  ],
  [
    [
      64217,
      64217
    ],
    "mapped",
    [
      40846
    ]
  ],
  [
    [
      64218,
      64255
    ],
    "disallowed"
  ],
  [
    [
      64256,
      64256
    ],
    "mapped",
    [
      102,
      102
    ]
  ],
  [
    [
      64257,
      64257
    ],
    "mapped",
    [
      102,
      105
    ]
  ],
  [
    [
      64258,
      64258
    ],
    "mapped",
    [
      102,
      108
    ]
  ],
  [
    [
      64259,
      64259
    ],
    "mapped",
    [
      102,
      102,
      105
    ]
  ],
  [
    [
      64260,
      64260
    ],
    "mapped",
    [
      102,
      102,
      108
    ]
  ],
  [
    [
      64261,
      64262
    ],
    "mapped",
    [
      115,
      116
    ]
  ],
  [
    [
      64263,
      64274
    ],
    "disallowed"
  ],
  [
    [
      64275,
      64275
    ],
    "mapped",
    [
      1396,
      1398
    ]
  ],
  [
    [
      64276,
      64276
    ],
    "mapped",
    [
      1396,
      1381
    ]
  ],
  [
    [
      64277,
      64277
    ],
    "mapped",
    [
      1396,
      1387
    ]
  ],
  [
    [
      64278,
      64278
    ],
    "mapped",
    [
      1406,
      1398
    ]
  ],
  [
    [
      64279,
      64279
    ],
    "mapped",
    [
      1396,
      1389
    ]
  ],
  [
    [
      64280,
      64284
    ],
    "disallowed"
  ],
  [
    [
      64285,
      64285
    ],
    "mapped",
    [
      1497,
      1460
    ]
  ],
  [
    [
      64286,
      64286
    ],
    "valid"
  ],
  [
    [
      64287,
      64287
    ],
    "mapped",
    [
      1522,
      1463
    ]
  ],
  [
    [
      64288,
      64288
    ],
    "mapped",
    [
      1506
    ]
  ],
  [
    [
      64289,
      64289
    ],
    "mapped",
    [
      1488
    ]
  ],
  [
    [
      64290,
      64290
    ],
    "mapped",
    [
      1491
    ]
  ],
  [
    [
      64291,
      64291
    ],
    "mapped",
    [
      1492
    ]
  ],
  [
    [
      64292,
      64292
    ],
    "mapped",
    [
      1499
    ]
  ],
  [
    [
      64293,
      64293
    ],
    "mapped",
    [
      1500
    ]
  ],
  [
    [
      64294,
      64294
    ],
    "mapped",
    [
      1501
    ]
  ],
  [
    [
      64295,
      64295
    ],
    "mapped",
    [
      1512
    ]
  ],
  [
    [
      64296,
      64296
    ],
    "mapped",
    [
      1514
    ]
  ],
  [
    [
      64297,
      64297
    ],
    "disallowed_STD3_mapped",
    [
      43
    ]
  ],
  [
    [
      64298,
      64298
    ],
    "mapped",
    [
      1513,
      1473
    ]
  ],
  [
    [
      64299,
      64299
    ],
    "mapped",
    [
      1513,
      1474
    ]
  ],
  [
    [
      64300,
      64300
    ],
    "mapped",
    [
      1513,
      1468,
      1473
    ]
  ],
  [
    [
      64301,
      64301
    ],
    "mapped",
    [
      1513,
      1468,
      1474
    ]
  ],
  [
    [
      64302,
      64302
    ],
    "mapped",
    [
      1488,
      1463
    ]
  ],
  [
    [
      64303,
      64303
    ],
    "mapped",
    [
      1488,
      1464
    ]
  ],
  [
    [
      64304,
      64304
    ],
    "mapped",
    [
      1488,
      1468
    ]
  ],
  [
    [
      64305,
      64305
    ],
    "mapped",
    [
      1489,
      1468
    ]
  ],
  [
    [
      64306,
      64306
    ],
    "mapped",
    [
      1490,
      1468
    ]
  ],
  [
    [
      64307,
      64307
    ],
    "mapped",
    [
      1491,
      1468
    ]
  ],
  [
    [
      64308,
      64308
    ],
    "mapped",
    [
      1492,
      1468
    ]
  ],
  [
    [
      64309,
      64309
    ],
    "mapped",
    [
      1493,
      1468
    ]
  ],
  [
    [
      64310,
      64310
    ],
    "mapped",
    [
      1494,
      1468
    ]
  ],
  [
    [
      64311,
      64311
    ],
    "disallowed"
  ],
  [
    [
      64312,
      64312
    ],
    "mapped",
    [
      1496,
      1468
    ]
  ],
  [
    [
      64313,
      64313
    ],
    "mapped",
    [
      1497,
      1468
    ]
  ],
  [
    [
      64314,
      64314
    ],
    "mapped",
    [
      1498,
      1468
    ]
  ],
  [
    [
      64315,
      64315
    ],
    "mapped",
    [
      1499,
      1468
    ]
  ],
  [
    [
      64316,
      64316
    ],
    "mapped",
    [
      1500,
      1468
    ]
  ],
  [
    [
      64317,
      64317
    ],
    "disallowed"
  ],
  [
    [
      64318,
      64318
    ],
    "mapped",
    [
      1502,
      1468
    ]
  ],
  [
    [
      64319,
      64319
    ],
    "disallowed"
  ],
  [
    [
      64320,
      64320
    ],
    "mapped",
    [
      1504,
      1468
    ]
  ],
  [
    [
      64321,
      64321
    ],
    "mapped",
    [
      1505,
      1468
    ]
  ],
  [
    [
      64322,
      64322
    ],
    "disallowed"
  ],
  [
    [
      64323,
      64323
    ],
    "mapped",
    [
      1507,
      1468
    ]
  ],
  [
    [
      64324,
      64324
    ],
    "mapped",
    [
      1508,
      1468
    ]
  ],
  [
    [
      64325,
      64325
    ],
    "disallowed"
  ],
  [
    [
      64326,
      64326
    ],
    "mapped",
    [
      1510,
      1468
    ]
  ],
  [
    [
      64327,
      64327
    ],
    "mapped",
    [
      1511,
      1468
    ]
  ],
  [
    [
      64328,
      64328
    ],
    "mapped",
    [
      1512,
      1468
    ]
  ],
  [
    [
      64329,
      64329
    ],
    "mapped",
    [
      1513,
      1468
    ]
  ],
  [
    [
      64330,
      64330
    ],
    "mapped",
    [
      1514,
      1468
    ]
  ],
  [
    [
      64331,
      64331
    ],
    "mapped",
    [
      1493,
      1465
    ]
  ],
  [
    [
      64332,
      64332
    ],
    "mapped",
    [
      1489,
      1471
    ]
  ],
  [
    [
      64333,
      64333
    ],
    "mapped",
    [
      1499,
      1471
    ]
  ],
  [
    [
      64334,
      64334
    ],
    "mapped",
    [
      1508,
      1471
    ]
  ],
  [
    [
      64335,
      64335
    ],
    "mapped",
    [
      1488,
      1500
    ]
  ],
  [
    [
      64336,
      64337
    ],
    "mapped",
    [
      1649
    ]
  ],
  [
    [
      64338,
      64341
    ],
    "mapped",
    [
      1659
    ]
  ],
  [
    [
      64342,
      64345
    ],
    "mapped",
    [
      1662
    ]
  ],
  [
    [
      64346,
      64349
    ],
    "mapped",
    [
      1664
    ]
  ],
  [
    [
      64350,
      64353
    ],
    "mapped",
    [
      1658
    ]
  ],
  [
    [
      64354,
      64357
    ],
    "mapped",
    [
      1663
    ]
  ],
  [
    [
      64358,
      64361
    ],
    "mapped",
    [
      1657
    ]
  ],
  [
    [
      64362,
      64365
    ],
    "mapped",
    [
      1700
    ]
  ],
  [
    [
      64366,
      64369
    ],
    "mapped",
    [
      1702
    ]
  ],
  [
    [
      64370,
      64373
    ],
    "mapped",
    [
      1668
    ]
  ],
  [
    [
      64374,
      64377
    ],
    "mapped",
    [
      1667
    ]
  ],
  [
    [
      64378,
      64381
    ],
    "mapped",
    [
      1670
    ]
  ],
  [
    [
      64382,
      64385
    ],
    "mapped",
    [
      1671
    ]
  ],
  [
    [
      64386,
      64387
    ],
    "mapped",
    [
      1677
    ]
  ],
  [
    [
      64388,
      64389
    ],
    "mapped",
    [
      1676
    ]
  ],
  [
    [
      64390,
      64391
    ],
    "mapped",
    [
      1678
    ]
  ],
  [
    [
      64392,
      64393
    ],
    "mapped",
    [
      1672
    ]
  ],
  [
    [
      64394,
      64395
    ],
    "mapped",
    [
      1688
    ]
  ],
  [
    [
      64396,
      64397
    ],
    "mapped",
    [
      1681
    ]
  ],
  [
    [
      64398,
      64401
    ],
    "mapped",
    [
      1705
    ]
  ],
  [
    [
      64402,
      64405
    ],
    "mapped",
    [
      1711
    ]
  ],
  [
    [
      64406,
      64409
    ],
    "mapped",
    [
      1715
    ]
  ],
  [
    [
      64410,
      64413
    ],
    "mapped",
    [
      1713
    ]
  ],
  [
    [
      64414,
      64415
    ],
    "mapped",
    [
      1722
    ]
  ],
  [
    [
      64416,
      64419
    ],
    "mapped",
    [
      1723
    ]
  ],
  [
    [
      64420,
      64421
    ],
    "mapped",
    [
      1728
    ]
  ],
  [
    [
      64422,
      64425
    ],
    "mapped",
    [
      1729
    ]
  ],
  [
    [
      64426,
      64429
    ],
    "mapped",
    [
      1726
    ]
  ],
  [
    [
      64430,
      64431
    ],
    "mapped",
    [
      1746
    ]
  ],
  [
    [
      64432,
      64433
    ],
    "mapped",
    [
      1747
    ]
  ],
  [
    [
      64434,
      64449
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      64450,
      64466
    ],
    "disallowed"
  ],
  [
    [
      64467,
      64470
    ],
    "mapped",
    [
      1709
    ]
  ],
  [
    [
      64471,
      64472
    ],
    "mapped",
    [
      1735
    ]
  ],
  [
    [
      64473,
      64474
    ],
    "mapped",
    [
      1734
    ]
  ],
  [
    [
      64475,
      64476
    ],
    "mapped",
    [
      1736
    ]
  ],
  [
    [
      64477,
      64477
    ],
    "mapped",
    [
      1735,
      1652
    ]
  ],
  [
    [
      64478,
      64479
    ],
    "mapped",
    [
      1739
    ]
  ],
  [
    [
      64480,
      64481
    ],
    "mapped",
    [
      1733
    ]
  ],
  [
    [
      64482,
      64483
    ],
    "mapped",
    [
      1737
    ]
  ],
  [
    [
      64484,
      64487
    ],
    "mapped",
    [
      1744
    ]
  ],
  [
    [
      64488,
      64489
    ],
    "mapped",
    [
      1609
    ]
  ],
  [
    [
      64490,
      64491
    ],
    "mapped",
    [
      1574,
      1575
    ]
  ],
  [
    [
      64492,
      64493
    ],
    "mapped",
    [
      1574,
      1749
    ]
  ],
  [
    [
      64494,
      64495
    ],
    "mapped",
    [
      1574,
      1608
    ]
  ],
  [
    [
      64496,
      64497
    ],
    "mapped",
    [
      1574,
      1735
    ]
  ],
  [
    [
      64498,
      64499
    ],
    "mapped",
    [
      1574,
      1734
    ]
  ],
  [
    [
      64500,
      64501
    ],
    "mapped",
    [
      1574,
      1736
    ]
  ],
  [
    [
      64502,
      64504
    ],
    "mapped",
    [
      1574,
      1744
    ]
  ],
  [
    [
      64505,
      64507
    ],
    "mapped",
    [
      1574,
      1609
    ]
  ],
  [
    [
      64508,
      64511
    ],
    "mapped",
    [
      1740
    ]
  ],
  [
    [
      64512,
      64512
    ],
    "mapped",
    [
      1574,
      1580
    ]
  ],
  [
    [
      64513,
      64513
    ],
    "mapped",
    [
      1574,
      1581
    ]
  ],
  [
    [
      64514,
      64514
    ],
    "mapped",
    [
      1574,
      1605
    ]
  ],
  [
    [
      64515,
      64515
    ],
    "mapped",
    [
      1574,
      1609
    ]
  ],
  [
    [
      64516,
      64516
    ],
    "mapped",
    [
      1574,
      1610
    ]
  ],
  [
    [
      64517,
      64517
    ],
    "mapped",
    [
      1576,
      1580
    ]
  ],
  [
    [
      64518,
      64518
    ],
    "mapped",
    [
      1576,
      1581
    ]
  ],
  [
    [
      64519,
      64519
    ],
    "mapped",
    [
      1576,
      1582
    ]
  ],
  [
    [
      64520,
      64520
    ],
    "mapped",
    [
      1576,
      1605
    ]
  ],
  [
    [
      64521,
      64521
    ],
    "mapped",
    [
      1576,
      1609
    ]
  ],
  [
    [
      64522,
      64522
    ],
    "mapped",
    [
      1576,
      1610
    ]
  ],
  [
    [
      64523,
      64523
    ],
    "mapped",
    [
      1578,
      1580
    ]
  ],
  [
    [
      64524,
      64524
    ],
    "mapped",
    [
      1578,
      1581
    ]
  ],
  [
    [
      64525,
      64525
    ],
    "mapped",
    [
      1578,
      1582
    ]
  ],
  [
    [
      64526,
      64526
    ],
    "mapped",
    [
      1578,
      1605
    ]
  ],
  [
    [
      64527,
      64527
    ],
    "mapped",
    [
      1578,
      1609
    ]
  ],
  [
    [
      64528,
      64528
    ],
    "mapped",
    [
      1578,
      1610
    ]
  ],
  [
    [
      64529,
      64529
    ],
    "mapped",
    [
      1579,
      1580
    ]
  ],
  [
    [
      64530,
      64530
    ],
    "mapped",
    [
      1579,
      1605
    ]
  ],
  [
    [
      64531,
      64531
    ],
    "mapped",
    [
      1579,
      1609
    ]
  ],
  [
    [
      64532,
      64532
    ],
    "mapped",
    [
      1579,
      1610
    ]
  ],
  [
    [
      64533,
      64533
    ],
    "mapped",
    [
      1580,
      1581
    ]
  ],
  [
    [
      64534,
      64534
    ],
    "mapped",
    [
      1580,
      1605
    ]
  ],
  [
    [
      64535,
      64535
    ],
    "mapped",
    [
      1581,
      1580
    ]
  ],
  [
    [
      64536,
      64536
    ],
    "mapped",
    [
      1581,
      1605
    ]
  ],
  [
    [
      64537,
      64537
    ],
    "mapped",
    [
      1582,
      1580
    ]
  ],
  [
    [
      64538,
      64538
    ],
    "mapped",
    [
      1582,
      1581
    ]
  ],
  [
    [
      64539,
      64539
    ],
    "mapped",
    [
      1582,
      1605
    ]
  ],
  [
    [
      64540,
      64540
    ],
    "mapped",
    [
      1587,
      1580
    ]
  ],
  [
    [
      64541,
      64541
    ],
    "mapped",
    [
      1587,
      1581
    ]
  ],
  [
    [
      64542,
      64542
    ],
    "mapped",
    [
      1587,
      1582
    ]
  ],
  [
    [
      64543,
      64543
    ],
    "mapped",
    [
      1587,
      1605
    ]
  ],
  [
    [
      64544,
      64544
    ],
    "mapped",
    [
      1589,
      1581
    ]
  ],
  [
    [
      64545,
      64545
    ],
    "mapped",
    [
      1589,
      1605
    ]
  ],
  [
    [
      64546,
      64546
    ],
    "mapped",
    [
      1590,
      1580
    ]
  ],
  [
    [
      64547,
      64547
    ],
    "mapped",
    [
      1590,
      1581
    ]
  ],
  [
    [
      64548,
      64548
    ],
    "mapped",
    [
      1590,
      1582
    ]
  ],
  [
    [
      64549,
      64549
    ],
    "mapped",
    [
      1590,
      1605
    ]
  ],
  [
    [
      64550,
      64550
    ],
    "mapped",
    [
      1591,
      1581
    ]
  ],
  [
    [
      64551,
      64551
    ],
    "mapped",
    [
      1591,
      1605
    ]
  ],
  [
    [
      64552,
      64552
    ],
    "mapped",
    [
      1592,
      1605
    ]
  ],
  [
    [
      64553,
      64553
    ],
    "mapped",
    [
      1593,
      1580
    ]
  ],
  [
    [
      64554,
      64554
    ],
    "mapped",
    [
      1593,
      1605
    ]
  ],
  [
    [
      64555,
      64555
    ],
    "mapped",
    [
      1594,
      1580
    ]
  ],
  [
    [
      64556,
      64556
    ],
    "mapped",
    [
      1594,
      1605
    ]
  ],
  [
    [
      64557,
      64557
    ],
    "mapped",
    [
      1601,
      1580
    ]
  ],
  [
    [
      64558,
      64558
    ],
    "mapped",
    [
      1601,
      1581
    ]
  ],
  [
    [
      64559,
      64559
    ],
    "mapped",
    [
      1601,
      1582
    ]
  ],
  [
    [
      64560,
      64560
    ],
    "mapped",
    [
      1601,
      1605
    ]
  ],
  [
    [
      64561,
      64561
    ],
    "mapped",
    [
      1601,
      1609
    ]
  ],
  [
    [
      64562,
      64562
    ],
    "mapped",
    [
      1601,
      1610
    ]
  ],
  [
    [
      64563,
      64563
    ],
    "mapped",
    [
      1602,
      1581
    ]
  ],
  [
    [
      64564,
      64564
    ],
    "mapped",
    [
      1602,
      1605
    ]
  ],
  [
    [
      64565,
      64565
    ],
    "mapped",
    [
      1602,
      1609
    ]
  ],
  [
    [
      64566,
      64566
    ],
    "mapped",
    [
      1602,
      1610
    ]
  ],
  [
    [
      64567,
      64567
    ],
    "mapped",
    [
      1603,
      1575
    ]
  ],
  [
    [
      64568,
      64568
    ],
    "mapped",
    [
      1603,
      1580
    ]
  ],
  [
    [
      64569,
      64569
    ],
    "mapped",
    [
      1603,
      1581
    ]
  ],
  [
    [
      64570,
      64570
    ],
    "mapped",
    [
      1603,
      1582
    ]
  ],
  [
    [
      64571,
      64571
    ],
    "mapped",
    [
      1603,
      1604
    ]
  ],
  [
    [
      64572,
      64572
    ],
    "mapped",
    [
      1603,
      1605
    ]
  ],
  [
    [
      64573,
      64573
    ],
    "mapped",
    [
      1603,
      1609
    ]
  ],
  [
    [
      64574,
      64574
    ],
    "mapped",
    [
      1603,
      1610
    ]
  ],
  [
    [
      64575,
      64575
    ],
    "mapped",
    [
      1604,
      1580
    ]
  ],
  [
    [
      64576,
      64576
    ],
    "mapped",
    [
      1604,
      1581
    ]
  ],
  [
    [
      64577,
      64577
    ],
    "mapped",
    [
      1604,
      1582
    ]
  ],
  [
    [
      64578,
      64578
    ],
    "mapped",
    [
      1604,
      1605
    ]
  ],
  [
    [
      64579,
      64579
    ],
    "mapped",
    [
      1604,
      1609
    ]
  ],
  [
    [
      64580,
      64580
    ],
    "mapped",
    [
      1604,
      1610
    ]
  ],
  [
    [
      64581,
      64581
    ],
    "mapped",
    [
      1605,
      1580
    ]
  ],
  [
    [
      64582,
      64582
    ],
    "mapped",
    [
      1605,
      1581
    ]
  ],
  [
    [
      64583,
      64583
    ],
    "mapped",
    [
      1605,
      1582
    ]
  ],
  [
    [
      64584,
      64584
    ],
    "mapped",
    [
      1605,
      1605
    ]
  ],
  [
    [
      64585,
      64585
    ],
    "mapped",
    [
      1605,
      1609
    ]
  ],
  [
    [
      64586,
      64586
    ],
    "mapped",
    [
      1605,
      1610
    ]
  ],
  [
    [
      64587,
      64587
    ],
    "mapped",
    [
      1606,
      1580
    ]
  ],
  [
    [
      64588,
      64588
    ],
    "mapped",
    [
      1606,
      1581
    ]
  ],
  [
    [
      64589,
      64589
    ],
    "mapped",
    [
      1606,
      1582
    ]
  ],
  [
    [
      64590,
      64590
    ],
    "mapped",
    [
      1606,
      1605
    ]
  ],
  [
    [
      64591,
      64591
    ],
    "mapped",
    [
      1606,
      1609
    ]
  ],
  [
    [
      64592,
      64592
    ],
    "mapped",
    [
      1606,
      1610
    ]
  ],
  [
    [
      64593,
      64593
    ],
    "mapped",
    [
      1607,
      1580
    ]
  ],
  [
    [
      64594,
      64594
    ],
    "mapped",
    [
      1607,
      1605
    ]
  ],
  [
    [
      64595,
      64595
    ],
    "mapped",
    [
      1607,
      1609
    ]
  ],
  [
    [
      64596,
      64596
    ],
    "mapped",
    [
      1607,
      1610
    ]
  ],
  [
    [
      64597,
      64597
    ],
    "mapped",
    [
      1610,
      1580
    ]
  ],
  [
    [
      64598,
      64598
    ],
    "mapped",
    [
      1610,
      1581
    ]
  ],
  [
    [
      64599,
      64599
    ],
    "mapped",
    [
      1610,
      1582
    ]
  ],
  [
    [
      64600,
      64600
    ],
    "mapped",
    [
      1610,
      1605
    ]
  ],
  [
    [
      64601,
      64601
    ],
    "mapped",
    [
      1610,
      1609
    ]
  ],
  [
    [
      64602,
      64602
    ],
    "mapped",
    [
      1610,
      1610
    ]
  ],
  [
    [
      64603,
      64603
    ],
    "mapped",
    [
      1584,
      1648
    ]
  ],
  [
    [
      64604,
      64604
    ],
    "mapped",
    [
      1585,
      1648
    ]
  ],
  [
    [
      64605,
      64605
    ],
    "mapped",
    [
      1609,
      1648
    ]
  ],
  [
    [
      64606,
      64606
    ],
    "disallowed_STD3_mapped",
    [
      32,
      1612,
      1617
    ]
  ],
  [
    [
      64607,
      64607
    ],
    "disallowed_STD3_mapped",
    [
      32,
      1613,
      1617
    ]
  ],
  [
    [
      64608,
      64608
    ],
    "disallowed_STD3_mapped",
    [
      32,
      1614,
      1617
    ]
  ],
  [
    [
      64609,
      64609
    ],
    "disallowed_STD3_mapped",
    [
      32,
      1615,
      1617
    ]
  ],
  [
    [
      64610,
      64610
    ],
    "disallowed_STD3_mapped",
    [
      32,
      1616,
      1617
    ]
  ],
  [
    [
      64611,
      64611
    ],
    "disallowed_STD3_mapped",
    [
      32,
      1617,
      1648
    ]
  ],
  [
    [
      64612,
      64612
    ],
    "mapped",
    [
      1574,
      1585
    ]
  ],
  [
    [
      64613,
      64613
    ],
    "mapped",
    [
      1574,
      1586
    ]
  ],
  [
    [
      64614,
      64614
    ],
    "mapped",
    [
      1574,
      1605
    ]
  ],
  [
    [
      64615,
      64615
    ],
    "mapped",
    [
      1574,
      1606
    ]
  ],
  [
    [
      64616,
      64616
    ],
    "mapped",
    [
      1574,
      1609
    ]
  ],
  [
    [
      64617,
      64617
    ],
    "mapped",
    [
      1574,
      1610
    ]
  ],
  [
    [
      64618,
      64618
    ],
    "mapped",
    [
      1576,
      1585
    ]
  ],
  [
    [
      64619,
      64619
    ],
    "mapped",
    [
      1576,
      1586
    ]
  ],
  [
    [
      64620,
      64620
    ],
    "mapped",
    [
      1576,
      1605
    ]
  ],
  [
    [
      64621,
      64621
    ],
    "mapped",
    [
      1576,
      1606
    ]
  ],
  [
    [
      64622,
      64622
    ],
    "mapped",
    [
      1576,
      1609
    ]
  ],
  [
    [
      64623,
      64623
    ],
    "mapped",
    [
      1576,
      1610
    ]
  ],
  [
    [
      64624,
      64624
    ],
    "mapped",
    [
      1578,
      1585
    ]
  ],
  [
    [
      64625,
      64625
    ],
    "mapped",
    [
      1578,
      1586
    ]
  ],
  [
    [
      64626,
      64626
    ],
    "mapped",
    [
      1578,
      1605
    ]
  ],
  [
    [
      64627,
      64627
    ],
    "mapped",
    [
      1578,
      1606
    ]
  ],
  [
    [
      64628,
      64628
    ],
    "mapped",
    [
      1578,
      1609
    ]
  ],
  [
    [
      64629,
      64629
    ],
    "mapped",
    [
      1578,
      1610
    ]
  ],
  [
    [
      64630,
      64630
    ],
    "mapped",
    [
      1579,
      1585
    ]
  ],
  [
    [
      64631,
      64631
    ],
    "mapped",
    [
      1579,
      1586
    ]
  ],
  [
    [
      64632,
      64632
    ],
    "mapped",
    [
      1579,
      1605
    ]
  ],
  [
    [
      64633,
      64633
    ],
    "mapped",
    [
      1579,
      1606
    ]
  ],
  [
    [
      64634,
      64634
    ],
    "mapped",
    [
      1579,
      1609
    ]
  ],
  [
    [
      64635,
      64635
    ],
    "mapped",
    [
      1579,
      1610
    ]
  ],
  [
    [
      64636,
      64636
    ],
    "mapped",
    [
      1601,
      1609
    ]
  ],
  [
    [
      64637,
      64637
    ],
    "mapped",
    [
      1601,
      1610
    ]
  ],
  [
    [
      64638,
      64638
    ],
    "mapped",
    [
      1602,
      1609
    ]
  ],
  [
    [
      64639,
      64639
    ],
    "mapped",
    [
      1602,
      1610
    ]
  ],
  [
    [
      64640,
      64640
    ],
    "mapped",
    [
      1603,
      1575
    ]
  ],
  [
    [
      64641,
      64641
    ],
    "mapped",
    [
      1603,
      1604
    ]
  ],
  [
    [
      64642,
      64642
    ],
    "mapped",
    [
      1603,
      1605
    ]
  ],
  [
    [
      64643,
      64643
    ],
    "mapped",
    [
      1603,
      1609
    ]
  ],
  [
    [
      64644,
      64644
    ],
    "mapped",
    [
      1603,
      1610
    ]
  ],
  [
    [
      64645,
      64645
    ],
    "mapped",
    [
      1604,
      1605
    ]
  ],
  [
    [
      64646,
      64646
    ],
    "mapped",
    [
      1604,
      1609
    ]
  ],
  [
    [
      64647,
      64647
    ],
    "mapped",
    [
      1604,
      1610
    ]
  ],
  [
    [
      64648,
      64648
    ],
    "mapped",
    [
      1605,
      1575
    ]
  ],
  [
    [
      64649,
      64649
    ],
    "mapped",
    [
      1605,
      1605
    ]
  ],
  [
    [
      64650,
      64650
    ],
    "mapped",
    [
      1606,
      1585
    ]
  ],
  [
    [
      64651,
      64651
    ],
    "mapped",
    [
      1606,
      1586
    ]
  ],
  [
    [
      64652,
      64652
    ],
    "mapped",
    [
      1606,
      1605
    ]
  ],
  [
    [
      64653,
      64653
    ],
    "mapped",
    [
      1606,
      1606
    ]
  ],
  [
    [
      64654,
      64654
    ],
    "mapped",
    [
      1606,
      1609
    ]
  ],
  [
    [
      64655,
      64655
    ],
    "mapped",
    [
      1606,
      1610
    ]
  ],
  [
    [
      64656,
      64656
    ],
    "mapped",
    [
      1609,
      1648
    ]
  ],
  [
    [
      64657,
      64657
    ],
    "mapped",
    [
      1610,
      1585
    ]
  ],
  [
    [
      64658,
      64658
    ],
    "mapped",
    [
      1610,
      1586
    ]
  ],
  [
    [
      64659,
      64659
    ],
    "mapped",
    [
      1610,
      1605
    ]
  ],
  [
    [
      64660,
      64660
    ],
    "mapped",
    [
      1610,
      1606
    ]
  ],
  [
    [
      64661,
      64661
    ],
    "mapped",
    [
      1610,
      1609
    ]
  ],
  [
    [
      64662,
      64662
    ],
    "mapped",
    [
      1610,
      1610
    ]
  ],
  [
    [
      64663,
      64663
    ],
    "mapped",
    [
      1574,
      1580
    ]
  ],
  [
    [
      64664,
      64664
    ],
    "mapped",
    [
      1574,
      1581
    ]
  ],
  [
    [
      64665,
      64665
    ],
    "mapped",
    [
      1574,
      1582
    ]
  ],
  [
    [
      64666,
      64666
    ],
    "mapped",
    [
      1574,
      1605
    ]
  ],
  [
    [
      64667,
      64667
    ],
    "mapped",
    [
      1574,
      1607
    ]
  ],
  [
    [
      64668,
      64668
    ],
    "mapped",
    [
      1576,
      1580
    ]
  ],
  [
    [
      64669,
      64669
    ],
    "mapped",
    [
      1576,
      1581
    ]
  ],
  [
    [
      64670,
      64670
    ],
    "mapped",
    [
      1576,
      1582
    ]
  ],
  [
    [
      64671,
      64671
    ],
    "mapped",
    [
      1576,
      1605
    ]
  ],
  [
    [
      64672,
      64672
    ],
    "mapped",
    [
      1576,
      1607
    ]
  ],
  [
    [
      64673,
      64673
    ],
    "mapped",
    [
      1578,
      1580
    ]
  ],
  [
    [
      64674,
      64674
    ],
    "mapped",
    [
      1578,
      1581
    ]
  ],
  [
    [
      64675,
      64675
    ],
    "mapped",
    [
      1578,
      1582
    ]
  ],
  [
    [
      64676,
      64676
    ],
    "mapped",
    [
      1578,
      1605
    ]
  ],
  [
    [
      64677,
      64677
    ],
    "mapped",
    [
      1578,
      1607
    ]
  ],
  [
    [
      64678,
      64678
    ],
    "mapped",
    [
      1579,
      1605
    ]
  ],
  [
    [
      64679,
      64679
    ],
    "mapped",
    [
      1580,
      1581
    ]
  ],
  [
    [
      64680,
      64680
    ],
    "mapped",
    [
      1580,
      1605
    ]
  ],
  [
    [
      64681,
      64681
    ],
    "mapped",
    [
      1581,
      1580
    ]
  ],
  [
    [
      64682,
      64682
    ],
    "mapped",
    [
      1581,
      1605
    ]
  ],
  [
    [
      64683,
      64683
    ],
    "mapped",
    [
      1582,
      1580
    ]
  ],
  [
    [
      64684,
      64684
    ],
    "mapped",
    [
      1582,
      1605
    ]
  ],
  [
    [
      64685,
      64685
    ],
    "mapped",
    [
      1587,
      1580
    ]
  ],
  [
    [
      64686,
      64686
    ],
    "mapped",
    [
      1587,
      1581
    ]
  ],
  [
    [
      64687,
      64687
    ],
    "mapped",
    [
      1587,
      1582
    ]
  ],
  [
    [
      64688,
      64688
    ],
    "mapped",
    [
      1587,
      1605
    ]
  ],
  [
    [
      64689,
      64689
    ],
    "mapped",
    [
      1589,
      1581
    ]
  ],
  [
    [
      64690,
      64690
    ],
    "mapped",
    [
      1589,
      1582
    ]
  ],
  [
    [
      64691,
      64691
    ],
    "mapped",
    [
      1589,
      1605
    ]
  ],
  [
    [
      64692,
      64692
    ],
    "mapped",
    [
      1590,
      1580
    ]
  ],
  [
    [
      64693,
      64693
    ],
    "mapped",
    [
      1590,
      1581
    ]
  ],
  [
    [
      64694,
      64694
    ],
    "mapped",
    [
      1590,
      1582
    ]
  ],
  [
    [
      64695,
      64695
    ],
    "mapped",
    [
      1590,
      1605
    ]
  ],
  [
    [
      64696,
      64696
    ],
    "mapped",
    [
      1591,
      1581
    ]
  ],
  [
    [
      64697,
      64697
    ],
    "mapped",
    [
      1592,
      1605
    ]
  ],
  [
    [
      64698,
      64698
    ],
    "mapped",
    [
      1593,
      1580
    ]
  ],
  [
    [
      64699,
      64699
    ],
    "mapped",
    [
      1593,
      1605
    ]
  ],
  [
    [
      64700,
      64700
    ],
    "mapped",
    [
      1594,
      1580
    ]
  ],
  [
    [
      64701,
      64701
    ],
    "mapped",
    [
      1594,
      1605
    ]
  ],
  [
    [
      64702,
      64702
    ],
    "mapped",
    [
      1601,
      1580
    ]
  ],
  [
    [
      64703,
      64703
    ],
    "mapped",
    [
      1601,
      1581
    ]
  ],
  [
    [
      64704,
      64704
    ],
    "mapped",
    [
      1601,
      1582
    ]
  ],
  [
    [
      64705,
      64705
    ],
    "mapped",
    [
      1601,
      1605
    ]
  ],
  [
    [
      64706,
      64706
    ],
    "mapped",
    [
      1602,
      1581
    ]
  ],
  [
    [
      64707,
      64707
    ],
    "mapped",
    [
      1602,
      1605
    ]
  ],
  [
    [
      64708,
      64708
    ],
    "mapped",
    [
      1603,
      1580
    ]
  ],
  [
    [
      64709,
      64709
    ],
    "mapped",
    [
      1603,
      1581
    ]
  ],
  [
    [
      64710,
      64710
    ],
    "mapped",
    [
      1603,
      1582
    ]
  ],
  [
    [
      64711,
      64711
    ],
    "mapped",
    [
      1603,
      1604
    ]
  ],
  [
    [
      64712,
      64712
    ],
    "mapped",
    [
      1603,
      1605
    ]
  ],
  [
    [
      64713,
      64713
    ],
    "mapped",
    [
      1604,
      1580
    ]
  ],
  [
    [
      64714,
      64714
    ],
    "mapped",
    [
      1604,
      1581
    ]
  ],
  [
    [
      64715,
      64715
    ],
    "mapped",
    [
      1604,
      1582
    ]
  ],
  [
    [
      64716,
      64716
    ],
    "mapped",
    [
      1604,
      1605
    ]
  ],
  [
    [
      64717,
      64717
    ],
    "mapped",
    [
      1604,
      1607
    ]
  ],
  [
    [
      64718,
      64718
    ],
    "mapped",
    [
      1605,
      1580
    ]
  ],
  [
    [
      64719,
      64719
    ],
    "mapped",
    [
      1605,
      1581
    ]
  ],
  [
    [
      64720,
      64720
    ],
    "mapped",
    [
      1605,
      1582
    ]
  ],
  [
    [
      64721,
      64721
    ],
    "mapped",
    [
      1605,
      1605
    ]
  ],
  [
    [
      64722,
      64722
    ],
    "mapped",
    [
      1606,
      1580
    ]
  ],
  [
    [
      64723,
      64723
    ],
    "mapped",
    [
      1606,
      1581
    ]
  ],
  [
    [
      64724,
      64724
    ],
    "mapped",
    [
      1606,
      1582
    ]
  ],
  [
    [
      64725,
      64725
    ],
    "mapped",
    [
      1606,
      1605
    ]
  ],
  [
    [
      64726,
      64726
    ],
    "mapped",
    [
      1606,
      1607
    ]
  ],
  [
    [
      64727,
      64727
    ],
    "mapped",
    [
      1607,
      1580
    ]
  ],
  [
    [
      64728,
      64728
    ],
    "mapped",
    [
      1607,
      1605
    ]
  ],
  [
    [
      64729,
      64729
    ],
    "mapped",
    [
      1607,
      1648
    ]
  ],
  [
    [
      64730,
      64730
    ],
    "mapped",
    [
      1610,
      1580
    ]
  ],
  [
    [
      64731,
      64731
    ],
    "mapped",
    [
      1610,
      1581
    ]
  ],
  [
    [
      64732,
      64732
    ],
    "mapped",
    [
      1610,
      1582
    ]
  ],
  [
    [
      64733,
      64733
    ],
    "mapped",
    [
      1610,
      1605
    ]
  ],
  [
    [
      64734,
      64734
    ],
    "mapped",
    [
      1610,
      1607
    ]
  ],
  [
    [
      64735,
      64735
    ],
    "mapped",
    [
      1574,
      1605
    ]
  ],
  [
    [
      64736,
      64736
    ],
    "mapped",
    [
      1574,
      1607
    ]
  ],
  [
    [
      64737,
      64737
    ],
    "mapped",
    [
      1576,
      1605
    ]
  ],
  [
    [
      64738,
      64738
    ],
    "mapped",
    [
      1576,
      1607
    ]
  ],
  [
    [
      64739,
      64739
    ],
    "mapped",
    [
      1578,
      1605
    ]
  ],
  [
    [
      64740,
      64740
    ],
    "mapped",
    [
      1578,
      1607
    ]
  ],
  [
    [
      64741,
      64741
    ],
    "mapped",
    [
      1579,
      1605
    ]
  ],
  [
    [
      64742,
      64742
    ],
    "mapped",
    [
      1579,
      1607
    ]
  ],
  [
    [
      64743,
      64743
    ],
    "mapped",
    [
      1587,
      1605
    ]
  ],
  [
    [
      64744,
      64744
    ],
    "mapped",
    [
      1587,
      1607
    ]
  ],
  [
    [
      64745,
      64745
    ],
    "mapped",
    [
      1588,
      1605
    ]
  ],
  [
    [
      64746,
      64746
    ],
    "mapped",
    [
      1588,
      1607
    ]
  ],
  [
    [
      64747,
      64747
    ],
    "mapped",
    [
      1603,
      1604
    ]
  ],
  [
    [
      64748,
      64748
    ],
    "mapped",
    [
      1603,
      1605
    ]
  ],
  [
    [
      64749,
      64749
    ],
    "mapped",
    [
      1604,
      1605
    ]
  ],
  [
    [
      64750,
      64750
    ],
    "mapped",
    [
      1606,
      1605
    ]
  ],
  [
    [
      64751,
      64751
    ],
    "mapped",
    [
      1606,
      1607
    ]
  ],
  [
    [
      64752,
      64752
    ],
    "mapped",
    [
      1610,
      1605
    ]
  ],
  [
    [
      64753,
      64753
    ],
    "mapped",
    [
      1610,
      1607
    ]
  ],
  [
    [
      64754,
      64754
    ],
    "mapped",
    [
      1600,
      1614,
      1617
    ]
  ],
  [
    [
      64755,
      64755
    ],
    "mapped",
    [
      1600,
      1615,
      1617
    ]
  ],
  [
    [
      64756,
      64756
    ],
    "mapped",
    [
      1600,
      1616,
      1617
    ]
  ],
  [
    [
      64757,
      64757
    ],
    "mapped",
    [
      1591,
      1609
    ]
  ],
  [
    [
      64758,
      64758
    ],
    "mapped",
    [
      1591,
      1610
    ]
  ],
  [
    [
      64759,
      64759
    ],
    "mapped",
    [
      1593,
      1609
    ]
  ],
  [
    [
      64760,
      64760
    ],
    "mapped",
    [
      1593,
      1610
    ]
  ],
  [
    [
      64761,
      64761
    ],
    "mapped",
    [
      1594,
      1609
    ]
  ],
  [
    [
      64762,
      64762
    ],
    "mapped",
    [
      1594,
      1610
    ]
  ],
  [
    [
      64763,
      64763
    ],
    "mapped",
    [
      1587,
      1609
    ]
  ],
  [
    [
      64764,
      64764
    ],
    "mapped",
    [
      1587,
      1610
    ]
  ],
  [
    [
      64765,
      64765
    ],
    "mapped",
    [
      1588,
      1609
    ]
  ],
  [
    [
      64766,
      64766
    ],
    "mapped",
    [
      1588,
      1610
    ]
  ],
  [
    [
      64767,
      64767
    ],
    "mapped",
    [
      1581,
      1609
    ]
  ],
  [
    [
      64768,
      64768
    ],
    "mapped",
    [
      1581,
      1610
    ]
  ],
  [
    [
      64769,
      64769
    ],
    "mapped",
    [
      1580,
      1609
    ]
  ],
  [
    [
      64770,
      64770
    ],
    "mapped",
    [
      1580,
      1610
    ]
  ],
  [
    [
      64771,
      64771
    ],
    "mapped",
    [
      1582,
      1609
    ]
  ],
  [
    [
      64772,
      64772
    ],
    "mapped",
    [
      1582,
      1610
    ]
  ],
  [
    [
      64773,
      64773
    ],
    "mapped",
    [
      1589,
      1609
    ]
  ],
  [
    [
      64774,
      64774
    ],
    "mapped",
    [
      1589,
      1610
    ]
  ],
  [
    [
      64775,
      64775
    ],
    "mapped",
    [
      1590,
      1609
    ]
  ],
  [
    [
      64776,
      64776
    ],
    "mapped",
    [
      1590,
      1610
    ]
  ],
  [
    [
      64777,
      64777
    ],
    "mapped",
    [
      1588,
      1580
    ]
  ],
  [
    [
      64778,
      64778
    ],
    "mapped",
    [
      1588,
      1581
    ]
  ],
  [
    [
      64779,
      64779
    ],
    "mapped",
    [
      1588,
      1582
    ]
  ],
  [
    [
      64780,
      64780
    ],
    "mapped",
    [
      1588,
      1605
    ]
  ],
  [
    [
      64781,
      64781
    ],
    "mapped",
    [
      1588,
      1585
    ]
  ],
  [
    [
      64782,
      64782
    ],
    "mapped",
    [
      1587,
      1585
    ]
  ],
  [
    [
      64783,
      64783
    ],
    "mapped",
    [
      1589,
      1585
    ]
  ],
  [
    [
      64784,
      64784
    ],
    "mapped",
    [
      1590,
      1585
    ]
  ],
  [
    [
      64785,
      64785
    ],
    "mapped",
    [
      1591,
      1609
    ]
  ],
  [
    [
      64786,
      64786
    ],
    "mapped",
    [
      1591,
      1610
    ]
  ],
  [
    [
      64787,
      64787
    ],
    "mapped",
    [
      1593,
      1609
    ]
  ],
  [
    [
      64788,
      64788
    ],
    "mapped",
    [
      1593,
      1610
    ]
  ],
  [
    [
      64789,
      64789
    ],
    "mapped",
    [
      1594,
      1609
    ]
  ],
  [
    [
      64790,
      64790
    ],
    "mapped",
    [
      1594,
      1610
    ]
  ],
  [
    [
      64791,
      64791
    ],
    "mapped",
    [
      1587,
      1609
    ]
  ],
  [
    [
      64792,
      64792
    ],
    "mapped",
    [
      1587,
      1610
    ]
  ],
  [
    [
      64793,
      64793
    ],
    "mapped",
    [
      1588,
      1609
    ]
  ],
  [
    [
      64794,
      64794
    ],
    "mapped",
    [
      1588,
      1610
    ]
  ],
  [
    [
      64795,
      64795
    ],
    "mapped",
    [
      1581,
      1609
    ]
  ],
  [
    [
      64796,
      64796
    ],
    "mapped",
    [
      1581,
      1610
    ]
  ],
  [
    [
      64797,
      64797
    ],
    "mapped",
    [
      1580,
      1609
    ]
  ],
  [
    [
      64798,
      64798
    ],
    "mapped",
    [
      1580,
      1610
    ]
  ],
  [
    [
      64799,
      64799
    ],
    "mapped",
    [
      1582,
      1609
    ]
  ],
  [
    [
      64800,
      64800
    ],
    "mapped",
    [
      1582,
      1610
    ]
  ],
  [
    [
      64801,
      64801
    ],
    "mapped",
    [
      1589,
      1609
    ]
  ],
  [
    [
      64802,
      64802
    ],
    "mapped",
    [
      1589,
      1610
    ]
  ],
  [
    [
      64803,
      64803
    ],
    "mapped",
    [
      1590,
      1609
    ]
  ],
  [
    [
      64804,
      64804
    ],
    "mapped",
    [
      1590,
      1610
    ]
  ],
  [
    [
      64805,
      64805
    ],
    "mapped",
    [
      1588,
      1580
    ]
  ],
  [
    [
      64806,
      64806
    ],
    "mapped",
    [
      1588,
      1581
    ]
  ],
  [
    [
      64807,
      64807
    ],
    "mapped",
    [
      1588,
      1582
    ]
  ],
  [
    [
      64808,
      64808
    ],
    "mapped",
    [
      1588,
      1605
    ]
  ],
  [
    [
      64809,
      64809
    ],
    "mapped",
    [
      1588,
      1585
    ]
  ],
  [
    [
      64810,
      64810
    ],
    "mapped",
    [
      1587,
      1585
    ]
  ],
  [
    [
      64811,
      64811
    ],
    "mapped",
    [
      1589,
      1585
    ]
  ],
  [
    [
      64812,
      64812
    ],
    "mapped",
    [
      1590,
      1585
    ]
  ],
  [
    [
      64813,
      64813
    ],
    "mapped",
    [
      1588,
      1580
    ]
  ],
  [
    [
      64814,
      64814
    ],
    "mapped",
    [
      1588,
      1581
    ]
  ],
  [
    [
      64815,
      64815
    ],
    "mapped",
    [
      1588,
      1582
    ]
  ],
  [
    [
      64816,
      64816
    ],
    "mapped",
    [
      1588,
      1605
    ]
  ],
  [
    [
      64817,
      64817
    ],
    "mapped",
    [
      1587,
      1607
    ]
  ],
  [
    [
      64818,
      64818
    ],
    "mapped",
    [
      1588,
      1607
    ]
  ],
  [
    [
      64819,
      64819
    ],
    "mapped",
    [
      1591,
      1605
    ]
  ],
  [
    [
      64820,
      64820
    ],
    "mapped",
    [
      1587,
      1580
    ]
  ],
  [
    [
      64821,
      64821
    ],
    "mapped",
    [
      1587,
      1581
    ]
  ],
  [
    [
      64822,
      64822
    ],
    "mapped",
    [
      1587,
      1582
    ]
  ],
  [
    [
      64823,
      64823
    ],
    "mapped",
    [
      1588,
      1580
    ]
  ],
  [
    [
      64824,
      64824
    ],
    "mapped",
    [
      1588,
      1581
    ]
  ],
  [
    [
      64825,
      64825
    ],
    "mapped",
    [
      1588,
      1582
    ]
  ],
  [
    [
      64826,
      64826
    ],
    "mapped",
    [
      1591,
      1605
    ]
  ],
  [
    [
      64827,
      64827
    ],
    "mapped",
    [
      1592,
      1605
    ]
  ],
  [
    [
      64828,
      64829
    ],
    "mapped",
    [
      1575,
      1611
    ]
  ],
  [
    [
      64830,
      64831
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      64832,
      64847
    ],
    "disallowed"
  ],
  [
    [
      64848,
      64848
    ],
    "mapped",
    [
      1578,
      1580,
      1605
    ]
  ],
  [
    [
      64849,
      64850
    ],
    "mapped",
    [
      1578,
      1581,
      1580
    ]
  ],
  [
    [
      64851,
      64851
    ],
    "mapped",
    [
      1578,
      1581,
      1605
    ]
  ],
  [
    [
      64852,
      64852
    ],
    "mapped",
    [
      1578,
      1582,
      1605
    ]
  ],
  [
    [
      64853,
      64853
    ],
    "mapped",
    [
      1578,
      1605,
      1580
    ]
  ],
  [
    [
      64854,
      64854
    ],
    "mapped",
    [
      1578,
      1605,
      1581
    ]
  ],
  [
    [
      64855,
      64855
    ],
    "mapped",
    [
      1578,
      1605,
      1582
    ]
  ],
  [
    [
      64856,
      64857
    ],
    "mapped",
    [
      1580,
      1605,
      1581
    ]
  ],
  [
    [
      64858,
      64858
    ],
    "mapped",
    [
      1581,
      1605,
      1610
    ]
  ],
  [
    [
      64859,
      64859
    ],
    "mapped",
    [
      1581,
      1605,
      1609
    ]
  ],
  [
    [
      64860,
      64860
    ],
    "mapped",
    [
      1587,
      1581,
      1580
    ]
  ],
  [
    [
      64861,
      64861
    ],
    "mapped",
    [
      1587,
      1580,
      1581
    ]
  ],
  [
    [
      64862,
      64862
    ],
    "mapped",
    [
      1587,
      1580,
      1609
    ]
  ],
  [
    [
      64863,
      64864
    ],
    "mapped",
    [
      1587,
      1605,
      1581
    ]
  ],
  [
    [
      64865,
      64865
    ],
    "mapped",
    [
      1587,
      1605,
      1580
    ]
  ],
  [
    [
      64866,
      64867
    ],
    "mapped",
    [
      1587,
      1605,
      1605
    ]
  ],
  [
    [
      64868,
      64869
    ],
    "mapped",
    [
      1589,
      1581,
      1581
    ]
  ],
  [
    [
      64870,
      64870
    ],
    "mapped",
    [
      1589,
      1605,
      1605
    ]
  ],
  [
    [
      64871,
      64872
    ],
    "mapped",
    [
      1588,
      1581,
      1605
    ]
  ],
  [
    [
      64873,
      64873
    ],
    "mapped",
    [
      1588,
      1580,
      1610
    ]
  ],
  [
    [
      64874,
      64875
    ],
    "mapped",
    [
      1588,
      1605,
      1582
    ]
  ],
  [
    [
      64876,
      64877
    ],
    "mapped",
    [
      1588,
      1605,
      1605
    ]
  ],
  [
    [
      64878,
      64878
    ],
    "mapped",
    [
      1590,
      1581,
      1609
    ]
  ],
  [
    [
      64879,
      64880
    ],
    "mapped",
    [
      1590,
      1582,
      1605
    ]
  ],
  [
    [
      64881,
      64882
    ],
    "mapped",
    [
      1591,
      1605,
      1581
    ]
  ],
  [
    [
      64883,
      64883
    ],
    "mapped",
    [
      1591,
      1605,
      1605
    ]
  ],
  [
    [
      64884,
      64884
    ],
    "mapped",
    [
      1591,
      1605,
      1610
    ]
  ],
  [
    [
      64885,
      64885
    ],
    "mapped",
    [
      1593,
      1580,
      1605
    ]
  ],
  [
    [
      64886,
      64887
    ],
    "mapped",
    [
      1593,
      1605,
      1605
    ]
  ],
  [
    [
      64888,
      64888
    ],
    "mapped",
    [
      1593,
      1605,
      1609
    ]
  ],
  [
    [
      64889,
      64889
    ],
    "mapped",
    [
      1594,
      1605,
      1605
    ]
  ],
  [
    [
      64890,
      64890
    ],
    "mapped",
    [
      1594,
      1605,
      1610
    ]
  ],
  [
    [
      64891,
      64891
    ],
    "mapped",
    [
      1594,
      1605,
      1609
    ]
  ],
  [
    [
      64892,
      64893
    ],
    "mapped",
    [
      1601,
      1582,
      1605
    ]
  ],
  [
    [
      64894,
      64894
    ],
    "mapped",
    [
      1602,
      1605,
      1581
    ]
  ],
  [
    [
      64895,
      64895
    ],
    "mapped",
    [
      1602,
      1605,
      1605
    ]
  ],
  [
    [
      64896,
      64896
    ],
    "mapped",
    [
      1604,
      1581,
      1605
    ]
  ],
  [
    [
      64897,
      64897
    ],
    "mapped",
    [
      1604,
      1581,
      1610
    ]
  ],
  [
    [
      64898,
      64898
    ],
    "mapped",
    [
      1604,
      1581,
      1609
    ]
  ],
  [
    [
      64899,
      64900
    ],
    "mapped",
    [
      1604,
      1580,
      1580
    ]
  ],
  [
    [
      64901,
      64902
    ],
    "mapped",
    [
      1604,
      1582,
      1605
    ]
  ],
  [
    [
      64903,
      64904
    ],
    "mapped",
    [
      1604,
      1605,
      1581
    ]
  ],
  [
    [
      64905,
      64905
    ],
    "mapped",
    [
      1605,
      1581,
      1580
    ]
  ],
  [
    [
      64906,
      64906
    ],
    "mapped",
    [
      1605,
      1581,
      1605
    ]
  ],
  [
    [
      64907,
      64907
    ],
    "mapped",
    [
      1605,
      1581,
      1610
    ]
  ],
  [
    [
      64908,
      64908
    ],
    "mapped",
    [
      1605,
      1580,
      1581
    ]
  ],
  [
    [
      64909,
      64909
    ],
    "mapped",
    [
      1605,
      1580,
      1605
    ]
  ],
  [
    [
      64910,
      64910
    ],
    "mapped",
    [
      1605,
      1582,
      1580
    ]
  ],
  [
    [
      64911,
      64911
    ],
    "mapped",
    [
      1605,
      1582,
      1605
    ]
  ],
  [
    [
      64912,
      64913
    ],
    "disallowed"
  ],
  [
    [
      64914,
      64914
    ],
    "mapped",
    [
      1605,
      1580,
      1582
    ]
  ],
  [
    [
      64915,
      64915
    ],
    "mapped",
    [
      1607,
      1605,
      1580
    ]
  ],
  [
    [
      64916,
      64916
    ],
    "mapped",
    [
      1607,
      1605,
      1605
    ]
  ],
  [
    [
      64917,
      64917
    ],
    "mapped",
    [
      1606,
      1581,
      1605
    ]
  ],
  [
    [
      64918,
      64918
    ],
    "mapped",
    [
      1606,
      1581,
      1609
    ]
  ],
  [
    [
      64919,
      64920
    ],
    "mapped",
    [
      1606,
      1580,
      1605
    ]
  ],
  [
    [
      64921,
      64921
    ],
    "mapped",
    [
      1606,
      1580,
      1609
    ]
  ],
  [
    [
      64922,
      64922
    ],
    "mapped",
    [
      1606,
      1605,
      1610
    ]
  ],
  [
    [
      64923,
      64923
    ],
    "mapped",
    [
      1606,
      1605,
      1609
    ]
  ],
  [
    [
      64924,
      64925
    ],
    "mapped",
    [
      1610,
      1605,
      1605
    ]
  ],
  [
    [
      64926,
      64926
    ],
    "mapped",
    [
      1576,
      1582,
      1610
    ]
  ],
  [
    [
      64927,
      64927
    ],
    "mapped",
    [
      1578,
      1580,
      1610
    ]
  ],
  [
    [
      64928,
      64928
    ],
    "mapped",
    [
      1578,
      1580,
      1609
    ]
  ],
  [
    [
      64929,
      64929
    ],
    "mapped",
    [
      1578,
      1582,
      1610
    ]
  ],
  [
    [
      64930,
      64930
    ],
    "mapped",
    [
      1578,
      1582,
      1609
    ]
  ],
  [
    [
      64931,
      64931
    ],
    "mapped",
    [
      1578,
      1605,
      1610
    ]
  ],
  [
    [
      64932,
      64932
    ],
    "mapped",
    [
      1578,
      1605,
      1609
    ]
  ],
  [
    [
      64933,
      64933
    ],
    "mapped",
    [
      1580,
      1605,
      1610
    ]
  ],
  [
    [
      64934,
      64934
    ],
    "mapped",
    [
      1580,
      1581,
      1609
    ]
  ],
  [
    [
      64935,
      64935
    ],
    "mapped",
    [
      1580,
      1605,
      1609
    ]
  ],
  [
    [
      64936,
      64936
    ],
    "mapped",
    [
      1587,
      1582,
      1609
    ]
  ],
  [
    [
      64937,
      64937
    ],
    "mapped",
    [
      1589,
      1581,
      1610
    ]
  ],
  [
    [
      64938,
      64938
    ],
    "mapped",
    [
      1588,
      1581,
      1610
    ]
  ],
  [
    [
      64939,
      64939
    ],
    "mapped",
    [
      1590,
      1581,
      1610
    ]
  ],
  [
    [
      64940,
      64940
    ],
    "mapped",
    [
      1604,
      1580,
      1610
    ]
  ],
  [
    [
      64941,
      64941
    ],
    "mapped",
    [
      1604,
      1605,
      1610
    ]
  ],
  [
    [
      64942,
      64942
    ],
    "mapped",
    [
      1610,
      1581,
      1610
    ]
  ],
  [
    [
      64943,
      64943
    ],
    "mapped",
    [
      1610,
      1580,
      1610
    ]
  ],
  [
    [
      64944,
      64944
    ],
    "mapped",
    [
      1610,
      1605,
      1610
    ]
  ],
  [
    [
      64945,
      64945
    ],
    "mapped",
    [
      1605,
      1605,
      1610
    ]
  ],
  [
    [
      64946,
      64946
    ],
    "mapped",
    [
      1602,
      1605,
      1610
    ]
  ],
  [
    [
      64947,
      64947
    ],
    "mapped",
    [
      1606,
      1581,
      1610
    ]
  ],
  [
    [
      64948,
      64948
    ],
    "mapped",
    [
      1602,
      1605,
      1581
    ]
  ],
  [
    [
      64949,
      64949
    ],
    "mapped",
    [
      1604,
      1581,
      1605
    ]
  ],
  [
    [
      64950,
      64950
    ],
    "mapped",
    [
      1593,
      1605,
      1610
    ]
  ],
  [
    [
      64951,
      64951
    ],
    "mapped",
    [
      1603,
      1605,
      1610
    ]
  ],
  [
    [
      64952,
      64952
    ],
    "mapped",
    [
      1606,
      1580,
      1581
    ]
  ],
  [
    [
      64953,
      64953
    ],
    "mapped",
    [
      1605,
      1582,
      1610
    ]
  ],
  [
    [
      64954,
      64954
    ],
    "mapped",
    [
      1604,
      1580,
      1605
    ]
  ],
  [
    [
      64955,
      64955
    ],
    "mapped",
    [
      1603,
      1605,
      1605
    ]
  ],
  [
    [
      64956,
      64956
    ],
    "mapped",
    [
      1604,
      1580,
      1605
    ]
  ],
  [
    [
      64957,
      64957
    ],
    "mapped",
    [
      1606,
      1580,
      1581
    ]
  ],
  [
    [
      64958,
      64958
    ],
    "mapped",
    [
      1580,
      1581,
      1610
    ]
  ],
  [
    [
      64959,
      64959
    ],
    "mapped",
    [
      1581,
      1580,
      1610
    ]
  ],
  [
    [
      64960,
      64960
    ],
    "mapped",
    [
      1605,
      1580,
      1610
    ]
  ],
  [
    [
      64961,
      64961
    ],
    "mapped",
    [
      1601,
      1605,
      1610
    ]
  ],
  [
    [
      64962,
      64962
    ],
    "mapped",
    [
      1576,
      1581,
      1610
    ]
  ],
  [
    [
      64963,
      64963
    ],
    "mapped",
    [
      1603,
      1605,
      1605
    ]
  ],
  [
    [
      64964,
      64964
    ],
    "mapped",
    [
      1593,
      1580,
      1605
    ]
  ],
  [
    [
      64965,
      64965
    ],
    "mapped",
    [
      1589,
      1605,
      1605
    ]
  ],
  [
    [
      64966,
      64966
    ],
    "mapped",
    [
      1587,
      1582,
      1610
    ]
  ],
  [
    [
      64967,
      64967
    ],
    "mapped",
    [
      1606,
      1580,
      1610
    ]
  ],
  [
    [
      64968,
      64975
    ],
    "disallowed"
  ],
  [
    [
      64976,
      65007
    ],
    "disallowed"
  ],
  [
    [
      65008,
      65008
    ],
    "mapped",
    [
      1589,
      1604,
      1746
    ]
  ],
  [
    [
      65009,
      65009
    ],
    "mapped",
    [
      1602,
      1604,
      1746
    ]
  ],
  [
    [
      65010,
      65010
    ],
    "mapped",
    [
      1575,
      1604,
      1604,
      1607
    ]
  ],
  [
    [
      65011,
      65011
    ],
    "mapped",
    [
      1575,
      1603,
      1576,
      1585
    ]
  ],
  [
    [
      65012,
      65012
    ],
    "mapped",
    [
      1605,
      1581,
      1605,
      1583
    ]
  ],
  [
    [
      65013,
      65013
    ],
    "mapped",
    [
      1589,
      1604,
      1593,
      1605
    ]
  ],
  [
    [
      65014,
      65014
    ],
    "mapped",
    [
      1585,
      1587,
      1608,
      1604
    ]
  ],
  [
    [
      65015,
      65015
    ],
    "mapped",
    [
      1593,
      1604,
      1610,
      1607
    ]
  ],
  [
    [
      65016,
      65016
    ],
    "mapped",
    [
      1608,
      1587,
      1604,
      1605
    ]
  ],
  [
    [
      65017,
      65017
    ],
    "mapped",
    [
      1589,
      1604,
      1609
    ]
  ],
  [
    [
      65018,
      65018
    ],
    "disallowed_STD3_mapped",
    [
      1589,
      1604,
      1609,
      32,
      1575,
      1604,
      1604,
      1607,
      32,
      1593,
      1604,
      1610,
      1607,
      32,
      1608,
      1587,
      1604,
      1605
    ]
  ],
  [
    [
      65019,
      65019
    ],
    "disallowed_STD3_mapped",
    [
      1580,
      1604,
      32,
      1580,
      1604,
      1575,
      1604,
      1607
    ]
  ],
  [
    [
      65020,
      65020
    ],
    "mapped",
    [
      1585,
      1740,
      1575,
      1604
    ]
  ],
  [
    [
      65021,
      65021
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      65022,
      65023
    ],
    "disallowed"
  ],
  [
    [
      65024,
      65039
    ],
    "ignored"
  ],
  [
    [
      65040,
      65040
    ],
    "disallowed_STD3_mapped",
    [
      44
    ]
  ],
  [
    [
      65041,
      65041
    ],
    "mapped",
    [
      12289
    ]
  ],
  [
    [
      65042,
      65042
    ],
    "disallowed"
  ],
  [
    [
      65043,
      65043
    ],
    "disallowed_STD3_mapped",
    [
      58
    ]
  ],
  [
    [
      65044,
      65044
    ],
    "disallowed_STD3_mapped",
    [
      59
    ]
  ],
  [
    [
      65045,
      65045
    ],
    "disallowed_STD3_mapped",
    [
      33
    ]
  ],
  [
    [
      65046,
      65046
    ],
    "disallowed_STD3_mapped",
    [
      63
    ]
  ],
  [
    [
      65047,
      65047
    ],
    "mapped",
    [
      12310
    ]
  ],
  [
    [
      65048,
      65048
    ],
    "mapped",
    [
      12311
    ]
  ],
  [
    [
      65049,
      65049
    ],
    "disallowed"
  ],
  [
    [
      65050,
      65055
    ],
    "disallowed"
  ],
  [
    [
      65056,
      65059
    ],
    "valid"
  ],
  [
    [
      65060,
      65062
    ],
    "valid"
  ],
  [
    [
      65063,
      65069
    ],
    "valid"
  ],
  [
    [
      65070,
      65071
    ],
    "valid"
  ],
  [
    [
      65072,
      65072
    ],
    "disallowed"
  ],
  [
    [
      65073,
      65073
    ],
    "mapped",
    [
      8212
    ]
  ],
  [
    [
      65074,
      65074
    ],
    "mapped",
    [
      8211
    ]
  ],
  [
    [
      65075,
      65076
    ],
    "disallowed_STD3_mapped",
    [
      95
    ]
  ],
  [
    [
      65077,
      65077
    ],
    "disallowed_STD3_mapped",
    [
      40
    ]
  ],
  [
    [
      65078,
      65078
    ],
    "disallowed_STD3_mapped",
    [
      41
    ]
  ],
  [
    [
      65079,
      65079
    ],
    "disallowed_STD3_mapped",
    [
      123
    ]
  ],
  [
    [
      65080,
      65080
    ],
    "disallowed_STD3_mapped",
    [
      125
    ]
  ],
  [
    [
      65081,
      65081
    ],
    "mapped",
    [
      12308
    ]
  ],
  [
    [
      65082,
      65082
    ],
    "mapped",
    [
      12309
    ]
  ],
  [
    [
      65083,
      65083
    ],
    "mapped",
    [
      12304
    ]
  ],
  [
    [
      65084,
      65084
    ],
    "mapped",
    [
      12305
    ]
  ],
  [
    [
      65085,
      65085
    ],
    "mapped",
    [
      12298
    ]
  ],
  [
    [
      65086,
      65086
    ],
    "mapped",
    [
      12299
    ]
  ],
  [
    [
      65087,
      65087
    ],
    "mapped",
    [
      12296
    ]
  ],
  [
    [
      65088,
      65088
    ],
    "mapped",
    [
      12297
    ]
  ],
  [
    [
      65089,
      65089
    ],
    "mapped",
    [
      12300
    ]
  ],
  [
    [
      65090,
      65090
    ],
    "mapped",
    [
      12301
    ]
  ],
  [
    [
      65091,
      65091
    ],
    "mapped",
    [
      12302
    ]
  ],
  [
    [
      65092,
      65092
    ],
    "mapped",
    [
      12303
    ]
  ],
  [
    [
      65093,
      65094
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      65095,
      65095
    ],
    "disallowed_STD3_mapped",
    [
      91
    ]
  ],
  [
    [
      65096,
      65096
    ],
    "disallowed_STD3_mapped",
    [
      93
    ]
  ],
  [
    [
      65097,
      65100
    ],
    "disallowed_STD3_mapped",
    [
      32,
      773
    ]
  ],
  [
    [
      65101,
      65103
    ],
    "disallowed_STD3_mapped",
    [
      95
    ]
  ],
  [
    [
      65104,
      65104
    ],
    "disallowed_STD3_mapped",
    [
      44
    ]
  ],
  [
    [
      65105,
      65105
    ],
    "mapped",
    [
      12289
    ]
  ],
  [
    [
      65106,
      65106
    ],
    "disallowed"
  ],
  [
    [
      65107,
      65107
    ],
    "disallowed"
  ],
  [
    [
      65108,
      65108
    ],
    "disallowed_STD3_mapped",
    [
      59
    ]
  ],
  [
    [
      65109,
      65109
    ],
    "disallowed_STD3_mapped",
    [
      58
    ]
  ],
  [
    [
      65110,
      65110
    ],
    "disallowed_STD3_mapped",
    [
      63
    ]
  ],
  [
    [
      65111,
      65111
    ],
    "disallowed_STD3_mapped",
    [
      33
    ]
  ],
  [
    [
      65112,
      65112
    ],
    "mapped",
    [
      8212
    ]
  ],
  [
    [
      65113,
      65113
    ],
    "disallowed_STD3_mapped",
    [
      40
    ]
  ],
  [
    [
      65114,
      65114
    ],
    "disallowed_STD3_mapped",
    [
      41
    ]
  ],
  [
    [
      65115,
      65115
    ],
    "disallowed_STD3_mapped",
    [
      123
    ]
  ],
  [
    [
      65116,
      65116
    ],
    "disallowed_STD3_mapped",
    [
      125
    ]
  ],
  [
    [
      65117,
      65117
    ],
    "mapped",
    [
      12308
    ]
  ],
  [
    [
      65118,
      65118
    ],
    "mapped",
    [
      12309
    ]
  ],
  [
    [
      65119,
      65119
    ],
    "disallowed_STD3_mapped",
    [
      35
    ]
  ],
  [
    [
      65120,
      65120
    ],
    "disallowed_STD3_mapped",
    [
      38
    ]
  ],
  [
    [
      65121,
      65121
    ],
    "disallowed_STD3_mapped",
    [
      42
    ]
  ],
  [
    [
      65122,
      65122
    ],
    "disallowed_STD3_mapped",
    [
      43
    ]
  ],
  [
    [
      65123,
      65123
    ],
    "mapped",
    [
      45
    ]
  ],
  [
    [
      65124,
      65124
    ],
    "disallowed_STD3_mapped",
    [
      60
    ]
  ],
  [
    [
      65125,
      65125
    ],
    "disallowed_STD3_mapped",
    [
      62
    ]
  ],
  [
    [
      65126,
      65126
    ],
    "disallowed_STD3_mapped",
    [
      61
    ]
  ],
  [
    [
      65127,
      65127
    ],
    "disallowed"
  ],
  [
    [
      65128,
      65128
    ],
    "disallowed_STD3_mapped",
    [
      92
    ]
  ],
  [
    [
      65129,
      65129
    ],
    "disallowed_STD3_mapped",
    [
      36
    ]
  ],
  [
    [
      65130,
      65130
    ],
    "disallowed_STD3_mapped",
    [
      37
    ]
  ],
  [
    [
      65131,
      65131
    ],
    "disallowed_STD3_mapped",
    [
      64
    ]
  ],
  [
    [
      65132,
      65135
    ],
    "disallowed"
  ],
  [
    [
      65136,
      65136
    ],
    "disallowed_STD3_mapped",
    [
      32,
      1611
    ]
  ],
  [
    [
      65137,
      65137
    ],
    "mapped",
    [
      1600,
      1611
    ]
  ],
  [
    [
      65138,
      65138
    ],
    "disallowed_STD3_mapped",
    [
      32,
      1612
    ]
  ],
  [
    [
      65139,
      65139
    ],
    "valid"
  ],
  [
    [
      65140,
      65140
    ],
    "disallowed_STD3_mapped",
    [
      32,
      1613
    ]
  ],
  [
    [
      65141,
      65141
    ],
    "disallowed"
  ],
  [
    [
      65142,
      65142
    ],
    "disallowed_STD3_mapped",
    [
      32,
      1614
    ]
  ],
  [
    [
      65143,
      65143
    ],
    "mapped",
    [
      1600,
      1614
    ]
  ],
  [
    [
      65144,
      65144
    ],
    "disallowed_STD3_mapped",
    [
      32,
      1615
    ]
  ],
  [
    [
      65145,
      65145
    ],
    "mapped",
    [
      1600,
      1615
    ]
  ],
  [
    [
      65146,
      65146
    ],
    "disallowed_STD3_mapped",
    [
      32,
      1616
    ]
  ],
  [
    [
      65147,
      65147
    ],
    "mapped",
    [
      1600,
      1616
    ]
  ],
  [
    [
      65148,
      65148
    ],
    "disallowed_STD3_mapped",
    [
      32,
      1617
    ]
  ],
  [
    [
      65149,
      65149
    ],
    "mapped",
    [
      1600,
      1617
    ]
  ],
  [
    [
      65150,
      65150
    ],
    "disallowed_STD3_mapped",
    [
      32,
      1618
    ]
  ],
  [
    [
      65151,
      65151
    ],
    "mapped",
    [
      1600,
      1618
    ]
  ],
  [
    [
      65152,
      65152
    ],
    "mapped",
    [
      1569
    ]
  ],
  [
    [
      65153,
      65154
    ],
    "mapped",
    [
      1570
    ]
  ],
  [
    [
      65155,
      65156
    ],
    "mapped",
    [
      1571
    ]
  ],
  [
    [
      65157,
      65158
    ],
    "mapped",
    [
      1572
    ]
  ],
  [
    [
      65159,
      65160
    ],
    "mapped",
    [
      1573
    ]
  ],
  [
    [
      65161,
      65164
    ],
    "mapped",
    [
      1574
    ]
  ],
  [
    [
      65165,
      65166
    ],
    "mapped",
    [
      1575
    ]
  ],
  [
    [
      65167,
      65170
    ],
    "mapped",
    [
      1576
    ]
  ],
  [
    [
      65171,
      65172
    ],
    "mapped",
    [
      1577
    ]
  ],
  [
    [
      65173,
      65176
    ],
    "mapped",
    [
      1578
    ]
  ],
  [
    [
      65177,
      65180
    ],
    "mapped",
    [
      1579
    ]
  ],
  [
    [
      65181,
      65184
    ],
    "mapped",
    [
      1580
    ]
  ],
  [
    [
      65185,
      65188
    ],
    "mapped",
    [
      1581
    ]
  ],
  [
    [
      65189,
      65192
    ],
    "mapped",
    [
      1582
    ]
  ],
  [
    [
      65193,
      65194
    ],
    "mapped",
    [
      1583
    ]
  ],
  [
    [
      65195,
      65196
    ],
    "mapped",
    [
      1584
    ]
  ],
  [
    [
      65197,
      65198
    ],
    "mapped",
    [
      1585
    ]
  ],
  [
    [
      65199,
      65200
    ],
    "mapped",
    [
      1586
    ]
  ],
  [
    [
      65201,
      65204
    ],
    "mapped",
    [
      1587
    ]
  ],
  [
    [
      65205,
      65208
    ],
    "mapped",
    [
      1588
    ]
  ],
  [
    [
      65209,
      65212
    ],
    "mapped",
    [
      1589
    ]
  ],
  [
    [
      65213,
      65216
    ],
    "mapped",
    [
      1590
    ]
  ],
  [
    [
      65217,
      65220
    ],
    "mapped",
    [
      1591
    ]
  ],
  [
    [
      65221,
      65224
    ],
    "mapped",
    [
      1592
    ]
  ],
  [
    [
      65225,
      65228
    ],
    "mapped",
    [
      1593
    ]
  ],
  [
    [
      65229,
      65232
    ],
    "mapped",
    [
      1594
    ]
  ],
  [
    [
      65233,
      65236
    ],
    "mapped",
    [
      1601
    ]
  ],
  [
    [
      65237,
      65240
    ],
    "mapped",
    [
      1602
    ]
  ],
  [
    [
      65241,
      65244
    ],
    "mapped",
    [
      1603
    ]
  ],
  [
    [
      65245,
      65248
    ],
    "mapped",
    [
      1604
    ]
  ],
  [
    [
      65249,
      65252
    ],
    "mapped",
    [
      1605
    ]
  ],
  [
    [
      65253,
      65256
    ],
    "mapped",
    [
      1606
    ]
  ],
  [
    [
      65257,
      65260
    ],
    "mapped",
    [
      1607
    ]
  ],
  [
    [
      65261,
      65262
    ],
    "mapped",
    [
      1608
    ]
  ],
  [
    [
      65263,
      65264
    ],
    "mapped",
    [
      1609
    ]
  ],
  [
    [
      65265,
      65268
    ],
    "mapped",
    [
      1610
    ]
  ],
  [
    [
      65269,
      65270
    ],
    "mapped",
    [
      1604,
      1570
    ]
  ],
  [
    [
      65271,
      65272
    ],
    "mapped",
    [
      1604,
      1571
    ]
  ],
  [
    [
      65273,
      65274
    ],
    "mapped",
    [
      1604,
      1573
    ]
  ],
  [
    [
      65275,
      65276
    ],
    "mapped",
    [
      1604,
      1575
    ]
  ],
  [
    [
      65277,
      65278
    ],
    "disallowed"
  ],
  [
    [
      65279,
      65279
    ],
    "ignored"
  ],
  [
    [
      65280,
      65280
    ],
    "disallowed"
  ],
  [
    [
      65281,
      65281
    ],
    "disallowed_STD3_mapped",
    [
      33
    ]
  ],
  [
    [
      65282,
      65282
    ],
    "disallowed_STD3_mapped",
    [
      34
    ]
  ],
  [
    [
      65283,
      65283
    ],
    "disallowed_STD3_mapped",
    [
      35
    ]
  ],
  [
    [
      65284,
      65284
    ],
    "disallowed_STD3_mapped",
    [
      36
    ]
  ],
  [
    [
      65285,
      65285
    ],
    "disallowed_STD3_mapped",
    [
      37
    ]
  ],
  [
    [
      65286,
      65286
    ],
    "disallowed_STD3_mapped",
    [
      38
    ]
  ],
  [
    [
      65287,
      65287
    ],
    "disallowed_STD3_mapped",
    [
      39
    ]
  ],
  [
    [
      65288,
      65288
    ],
    "disallowed_STD3_mapped",
    [
      40
    ]
  ],
  [
    [
      65289,
      65289
    ],
    "disallowed_STD3_mapped",
    [
      41
    ]
  ],
  [
    [
      65290,
      65290
    ],
    "disallowed_STD3_mapped",
    [
      42
    ]
  ],
  [
    [
      65291,
      65291
    ],
    "disallowed_STD3_mapped",
    [
      43
    ]
  ],
  [
    [
      65292,
      65292
    ],
    "disallowed_STD3_mapped",
    [
      44
    ]
  ],
  [
    [
      65293,
      65293
    ],
    "mapped",
    [
      45
    ]
  ],
  [
    [
      65294,
      65294
    ],
    "mapped",
    [
      46
    ]
  ],
  [
    [
      65295,
      65295
    ],
    "disallowed_STD3_mapped",
    [
      47
    ]
  ],
  [
    [
      65296,
      65296
    ],
    "mapped",
    [
      48
    ]
  ],
  [
    [
      65297,
      65297
    ],
    "mapped",
    [
      49
    ]
  ],
  [
    [
      65298,
      65298
    ],
    "mapped",
    [
      50
    ]
  ],
  [
    [
      65299,
      65299
    ],
    "mapped",
    [
      51
    ]
  ],
  [
    [
      65300,
      65300
    ],
    "mapped",
    [
      52
    ]
  ],
  [
    [
      65301,
      65301
    ],
    "mapped",
    [
      53
    ]
  ],
  [
    [
      65302,
      65302
    ],
    "mapped",
    [
      54
    ]
  ],
  [
    [
      65303,
      65303
    ],
    "mapped",
    [
      55
    ]
  ],
  [
    [
      65304,
      65304
    ],
    "mapped",
    [
      56
    ]
  ],
  [
    [
      65305,
      65305
    ],
    "mapped",
    [
      57
    ]
  ],
  [
    [
      65306,
      65306
    ],
    "disallowed_STD3_mapped",
    [
      58
    ]
  ],
  [
    [
      65307,
      65307
    ],
    "disallowed_STD3_mapped",
    [
      59
    ]
  ],
  [
    [
      65308,
      65308
    ],
    "disallowed_STD3_mapped",
    [
      60
    ]
  ],
  [
    [
      65309,
      65309
    ],
    "disallowed_STD3_mapped",
    [
      61
    ]
  ],
  [
    [
      65310,
      65310
    ],
    "disallowed_STD3_mapped",
    [
      62
    ]
  ],
  [
    [
      65311,
      65311
    ],
    "disallowed_STD3_mapped",
    [
      63
    ]
  ],
  [
    [
      65312,
      65312
    ],
    "disallowed_STD3_mapped",
    [
      64
    ]
  ],
  [
    [
      65313,
      65313
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      65314,
      65314
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      65315,
      65315
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      65316,
      65316
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      65317,
      65317
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      65318,
      65318
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      65319,
      65319
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      65320,
      65320
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      65321,
      65321
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      65322,
      65322
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      65323,
      65323
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      65324,
      65324
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      65325,
      65325
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      65326,
      65326
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      65327,
      65327
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      65328,
      65328
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      65329,
      65329
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      65330,
      65330
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      65331,
      65331
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      65332,
      65332
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      65333,
      65333
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      65334,
      65334
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      65335,
      65335
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      65336,
      65336
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      65337,
      65337
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      65338,
      65338
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      65339,
      65339
    ],
    "disallowed_STD3_mapped",
    [
      91
    ]
  ],
  [
    [
      65340,
      65340
    ],
    "disallowed_STD3_mapped",
    [
      92
    ]
  ],
  [
    [
      65341,
      65341
    ],
    "disallowed_STD3_mapped",
    [
      93
    ]
  ],
  [
    [
      65342,
      65342
    ],
    "disallowed_STD3_mapped",
    [
      94
    ]
  ],
  [
    [
      65343,
      65343
    ],
    "disallowed_STD3_mapped",
    [
      95
    ]
  ],
  [
    [
      65344,
      65344
    ],
    "disallowed_STD3_mapped",
    [
      96
    ]
  ],
  [
    [
      65345,
      65345
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      65346,
      65346
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      65347,
      65347
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      65348,
      65348
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      65349,
      65349
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      65350,
      65350
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      65351,
      65351
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      65352,
      65352
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      65353,
      65353
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      65354,
      65354
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      65355,
      65355
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      65356,
      65356
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      65357,
      65357
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      65358,
      65358
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      65359,
      65359
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      65360,
      65360
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      65361,
      65361
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      65362,
      65362
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      65363,
      65363
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      65364,
      65364
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      65365,
      65365
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      65366,
      65366
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      65367,
      65367
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      65368,
      65368
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      65369,
      65369
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      65370,
      65370
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      65371,
      65371
    ],
    "disallowed_STD3_mapped",
    [
      123
    ]
  ],
  [
    [
      65372,
      65372
    ],
    "disallowed_STD3_mapped",
    [
      124
    ]
  ],
  [
    [
      65373,
      65373
    ],
    "disallowed_STD3_mapped",
    [
      125
    ]
  ],
  [
    [
      65374,
      65374
    ],
    "disallowed_STD3_mapped",
    [
      126
    ]
  ],
  [
    [
      65375,
      65375
    ],
    "mapped",
    [
      10629
    ]
  ],
  [
    [
      65376,
      65376
    ],
    "mapped",
    [
      10630
    ]
  ],
  [
    [
      65377,
      65377
    ],
    "mapped",
    [
      46
    ]
  ],
  [
    [
      65378,
      65378
    ],
    "mapped",
    [
      12300
    ]
  ],
  [
    [
      65379,
      65379
    ],
    "mapped",
    [
      12301
    ]
  ],
  [
    [
      65380,
      65380
    ],
    "mapped",
    [
      12289
    ]
  ],
  [
    [
      65381,
      65381
    ],
    "mapped",
    [
      12539
    ]
  ],
  [
    [
      65382,
      65382
    ],
    "mapped",
    [
      12530
    ]
  ],
  [
    [
      65383,
      65383
    ],
    "mapped",
    [
      12449
    ]
  ],
  [
    [
      65384,
      65384
    ],
    "mapped",
    [
      12451
    ]
  ],
  [
    [
      65385,
      65385
    ],
    "mapped",
    [
      12453
    ]
  ],
  [
    [
      65386,
      65386
    ],
    "mapped",
    [
      12455
    ]
  ],
  [
    [
      65387,
      65387
    ],
    "mapped",
    [
      12457
    ]
  ],
  [
    [
      65388,
      65388
    ],
    "mapped",
    [
      12515
    ]
  ],
  [
    [
      65389,
      65389
    ],
    "mapped",
    [
      12517
    ]
  ],
  [
    [
      65390,
      65390
    ],
    "mapped",
    [
      12519
    ]
  ],
  [
    [
      65391,
      65391
    ],
    "mapped",
    [
      12483
    ]
  ],
  [
    [
      65392,
      65392
    ],
    "mapped",
    [
      12540
    ]
  ],
  [
    [
      65393,
      65393
    ],
    "mapped",
    [
      12450
    ]
  ],
  [
    [
      65394,
      65394
    ],
    "mapped",
    [
      12452
    ]
  ],
  [
    [
      65395,
      65395
    ],
    "mapped",
    [
      12454
    ]
  ],
  [
    [
      65396,
      65396
    ],
    "mapped",
    [
      12456
    ]
  ],
  [
    [
      65397,
      65397
    ],
    "mapped",
    [
      12458
    ]
  ],
  [
    [
      65398,
      65398
    ],
    "mapped",
    [
      12459
    ]
  ],
  [
    [
      65399,
      65399
    ],
    "mapped",
    [
      12461
    ]
  ],
  [
    [
      65400,
      65400
    ],
    "mapped",
    [
      12463
    ]
  ],
  [
    [
      65401,
      65401
    ],
    "mapped",
    [
      12465
    ]
  ],
  [
    [
      65402,
      65402
    ],
    "mapped",
    [
      12467
    ]
  ],
  [
    [
      65403,
      65403
    ],
    "mapped",
    [
      12469
    ]
  ],
  [
    [
      65404,
      65404
    ],
    "mapped",
    [
      12471
    ]
  ],
  [
    [
      65405,
      65405
    ],
    "mapped",
    [
      12473
    ]
  ],
  [
    [
      65406,
      65406
    ],
    "mapped",
    [
      12475
    ]
  ],
  [
    [
      65407,
      65407
    ],
    "mapped",
    [
      12477
    ]
  ],
  [
    [
      65408,
      65408
    ],
    "mapped",
    [
      12479
    ]
  ],
  [
    [
      65409,
      65409
    ],
    "mapped",
    [
      12481
    ]
  ],
  [
    [
      65410,
      65410
    ],
    "mapped",
    [
      12484
    ]
  ],
  [
    [
      65411,
      65411
    ],
    "mapped",
    [
      12486
    ]
  ],
  [
    [
      65412,
      65412
    ],
    "mapped",
    [
      12488
    ]
  ],
  [
    [
      65413,
      65413
    ],
    "mapped",
    [
      12490
    ]
  ],
  [
    [
      65414,
      65414
    ],
    "mapped",
    [
      12491
    ]
  ],
  [
    [
      65415,
      65415
    ],
    "mapped",
    [
      12492
    ]
  ],
  [
    [
      65416,
      65416
    ],
    "mapped",
    [
      12493
    ]
  ],
  [
    [
      65417,
      65417
    ],
    "mapped",
    [
      12494
    ]
  ],
  [
    [
      65418,
      65418
    ],
    "mapped",
    [
      12495
    ]
  ],
  [
    [
      65419,
      65419
    ],
    "mapped",
    [
      12498
    ]
  ],
  [
    [
      65420,
      65420
    ],
    "mapped",
    [
      12501
    ]
  ],
  [
    [
      65421,
      65421
    ],
    "mapped",
    [
      12504
    ]
  ],
  [
    [
      65422,
      65422
    ],
    "mapped",
    [
      12507
    ]
  ],
  [
    [
      65423,
      65423
    ],
    "mapped",
    [
      12510
    ]
  ],
  [
    [
      65424,
      65424
    ],
    "mapped",
    [
      12511
    ]
  ],
  [
    [
      65425,
      65425
    ],
    "mapped",
    [
      12512
    ]
  ],
  [
    [
      65426,
      65426
    ],
    "mapped",
    [
      12513
    ]
  ],
  [
    [
      65427,
      65427
    ],
    "mapped",
    [
      12514
    ]
  ],
  [
    [
      65428,
      65428
    ],
    "mapped",
    [
      12516
    ]
  ],
  [
    [
      65429,
      65429
    ],
    "mapped",
    [
      12518
    ]
  ],
  [
    [
      65430,
      65430
    ],
    "mapped",
    [
      12520
    ]
  ],
  [
    [
      65431,
      65431
    ],
    "mapped",
    [
      12521
    ]
  ],
  [
    [
      65432,
      65432
    ],
    "mapped",
    [
      12522
    ]
  ],
  [
    [
      65433,
      65433
    ],
    "mapped",
    [
      12523
    ]
  ],
  [
    [
      65434,
      65434
    ],
    "mapped",
    [
      12524
    ]
  ],
  [
    [
      65435,
      65435
    ],
    "mapped",
    [
      12525
    ]
  ],
  [
    [
      65436,
      65436
    ],
    "mapped",
    [
      12527
    ]
  ],
  [
    [
      65437,
      65437
    ],
    "mapped",
    [
      12531
    ]
  ],
  [
    [
      65438,
      65438
    ],
    "mapped",
    [
      12441
    ]
  ],
  [
    [
      65439,
      65439
    ],
    "mapped",
    [
      12442
    ]
  ],
  [
    [
      65440,
      65440
    ],
    "disallowed"
  ],
  [
    [
      65441,
      65441
    ],
    "mapped",
    [
      4352
    ]
  ],
  [
    [
      65442,
      65442
    ],
    "mapped",
    [
      4353
    ]
  ],
  [
    [
      65443,
      65443
    ],
    "mapped",
    [
      4522
    ]
  ],
  [
    [
      65444,
      65444
    ],
    "mapped",
    [
      4354
    ]
  ],
  [
    [
      65445,
      65445
    ],
    "mapped",
    [
      4524
    ]
  ],
  [
    [
      65446,
      65446
    ],
    "mapped",
    [
      4525
    ]
  ],
  [
    [
      65447,
      65447
    ],
    "mapped",
    [
      4355
    ]
  ],
  [
    [
      65448,
      65448
    ],
    "mapped",
    [
      4356
    ]
  ],
  [
    [
      65449,
      65449
    ],
    "mapped",
    [
      4357
    ]
  ],
  [
    [
      65450,
      65450
    ],
    "mapped",
    [
      4528
    ]
  ],
  [
    [
      65451,
      65451
    ],
    "mapped",
    [
      4529
    ]
  ],
  [
    [
      65452,
      65452
    ],
    "mapped",
    [
      4530
    ]
  ],
  [
    [
      65453,
      65453
    ],
    "mapped",
    [
      4531
    ]
  ],
  [
    [
      65454,
      65454
    ],
    "mapped",
    [
      4532
    ]
  ],
  [
    [
      65455,
      65455
    ],
    "mapped",
    [
      4533
    ]
  ],
  [
    [
      65456,
      65456
    ],
    "mapped",
    [
      4378
    ]
  ],
  [
    [
      65457,
      65457
    ],
    "mapped",
    [
      4358
    ]
  ],
  [
    [
      65458,
      65458
    ],
    "mapped",
    [
      4359
    ]
  ],
  [
    [
      65459,
      65459
    ],
    "mapped",
    [
      4360
    ]
  ],
  [
    [
      65460,
      65460
    ],
    "mapped",
    [
      4385
    ]
  ],
  [
    [
      65461,
      65461
    ],
    "mapped",
    [
      4361
    ]
  ],
  [
    [
      65462,
      65462
    ],
    "mapped",
    [
      4362
    ]
  ],
  [
    [
      65463,
      65463
    ],
    "mapped",
    [
      4363
    ]
  ],
  [
    [
      65464,
      65464
    ],
    "mapped",
    [
      4364
    ]
  ],
  [
    [
      65465,
      65465
    ],
    "mapped",
    [
      4365
    ]
  ],
  [
    [
      65466,
      65466
    ],
    "mapped",
    [
      4366
    ]
  ],
  [
    [
      65467,
      65467
    ],
    "mapped",
    [
      4367
    ]
  ],
  [
    [
      65468,
      65468
    ],
    "mapped",
    [
      4368
    ]
  ],
  [
    [
      65469,
      65469
    ],
    "mapped",
    [
      4369
    ]
  ],
  [
    [
      65470,
      65470
    ],
    "mapped",
    [
      4370
    ]
  ],
  [
    [
      65471,
      65473
    ],
    "disallowed"
  ],
  [
    [
      65474,
      65474
    ],
    "mapped",
    [
      4449
    ]
  ],
  [
    [
      65475,
      65475
    ],
    "mapped",
    [
      4450
    ]
  ],
  [
    [
      65476,
      65476
    ],
    "mapped",
    [
      4451
    ]
  ],
  [
    [
      65477,
      65477
    ],
    "mapped",
    [
      4452
    ]
  ],
  [
    [
      65478,
      65478
    ],
    "mapped",
    [
      4453
    ]
  ],
  [
    [
      65479,
      65479
    ],
    "mapped",
    [
      4454
    ]
  ],
  [
    [
      65480,
      65481
    ],
    "disallowed"
  ],
  [
    [
      65482,
      65482
    ],
    "mapped",
    [
      4455
    ]
  ],
  [
    [
      65483,
      65483
    ],
    "mapped",
    [
      4456
    ]
  ],
  [
    [
      65484,
      65484
    ],
    "mapped",
    [
      4457
    ]
  ],
  [
    [
      65485,
      65485
    ],
    "mapped",
    [
      4458
    ]
  ],
  [
    [
      65486,
      65486
    ],
    "mapped",
    [
      4459
    ]
  ],
  [
    [
      65487,
      65487
    ],
    "mapped",
    [
      4460
    ]
  ],
  [
    [
      65488,
      65489
    ],
    "disallowed"
  ],
  [
    [
      65490,
      65490
    ],
    "mapped",
    [
      4461
    ]
  ],
  [
    [
      65491,
      65491
    ],
    "mapped",
    [
      4462
    ]
  ],
  [
    [
      65492,
      65492
    ],
    "mapped",
    [
      4463
    ]
  ],
  [
    [
      65493,
      65493
    ],
    "mapped",
    [
      4464
    ]
  ],
  [
    [
      65494,
      65494
    ],
    "mapped",
    [
      4465
    ]
  ],
  [
    [
      65495,
      65495
    ],
    "mapped",
    [
      4466
    ]
  ],
  [
    [
      65496,
      65497
    ],
    "disallowed"
  ],
  [
    [
      65498,
      65498
    ],
    "mapped",
    [
      4467
    ]
  ],
  [
    [
      65499,
      65499
    ],
    "mapped",
    [
      4468
    ]
  ],
  [
    [
      65500,
      65500
    ],
    "mapped",
    [
      4469
    ]
  ],
  [
    [
      65501,
      65503
    ],
    "disallowed"
  ],
  [
    [
      65504,
      65504
    ],
    "mapped",
    [
      162
    ]
  ],
  [
    [
      65505,
      65505
    ],
    "mapped",
    [
      163
    ]
  ],
  [
    [
      65506,
      65506
    ],
    "mapped",
    [
      172
    ]
  ],
  [
    [
      65507,
      65507
    ],
    "disallowed_STD3_mapped",
    [
      32,
      772
    ]
  ],
  [
    [
      65508,
      65508
    ],
    "mapped",
    [
      166
    ]
  ],
  [
    [
      65509,
      65509
    ],
    "mapped",
    [
      165
    ]
  ],
  [
    [
      65510,
      65510
    ],
    "mapped",
    [
      8361
    ]
  ],
  [
    [
      65511,
      65511
    ],
    "disallowed"
  ],
  [
    [
      65512,
      65512
    ],
    "mapped",
    [
      9474
    ]
  ],
  [
    [
      65513,
      65513
    ],
    "mapped",
    [
      8592
    ]
  ],
  [
    [
      65514,
      65514
    ],
    "mapped",
    [
      8593
    ]
  ],
  [
    [
      65515,
      65515
    ],
    "mapped",
    [
      8594
    ]
  ],
  [
    [
      65516,
      65516
    ],
    "mapped",
    [
      8595
    ]
  ],
  [
    [
      65517,
      65517
    ],
    "mapped",
    [
      9632
    ]
  ],
  [
    [
      65518,
      65518
    ],
    "mapped",
    [
      9675
    ]
  ],
  [
    [
      65519,
      65528
    ],
    "disallowed"
  ],
  [
    [
      65529,
      65531
    ],
    "disallowed"
  ],
  [
    [
      65532,
      65532
    ],
    "disallowed"
  ],
  [
    [
      65533,
      65533
    ],
    "disallowed"
  ],
  [
    [
      65534,
      65535
    ],
    "disallowed"
  ],
  [
    [
      65536,
      65547
    ],
    "valid"
  ],
  [
    [
      65548,
      65548
    ],
    "disallowed"
  ],
  [
    [
      65549,
      65574
    ],
    "valid"
  ],
  [
    [
      65575,
      65575
    ],
    "disallowed"
  ],
  [
    [
      65576,
      65594
    ],
    "valid"
  ],
  [
    [
      65595,
      65595
    ],
    "disallowed"
  ],
  [
    [
      65596,
      65597
    ],
    "valid"
  ],
  [
    [
      65598,
      65598
    ],
    "disallowed"
  ],
  [
    [
      65599,
      65613
    ],
    "valid"
  ],
  [
    [
      65614,
      65615
    ],
    "disallowed"
  ],
  [
    [
      65616,
      65629
    ],
    "valid"
  ],
  [
    [
      65630,
      65663
    ],
    "disallowed"
  ],
  [
    [
      65664,
      65786
    ],
    "valid"
  ],
  [
    [
      65787,
      65791
    ],
    "disallowed"
  ],
  [
    [
      65792,
      65794
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      65795,
      65798
    ],
    "disallowed"
  ],
  [
    [
      65799,
      65843
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      65844,
      65846
    ],
    "disallowed"
  ],
  [
    [
      65847,
      65855
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      65856,
      65930
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      65931,
      65932
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      65933,
      65935
    ],
    "disallowed"
  ],
  [
    [
      65936,
      65947
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      65948,
      65951
    ],
    "disallowed"
  ],
  [
    [
      65952,
      65952
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      65953,
      65999
    ],
    "disallowed"
  ],
  [
    [
      66e3,
      66044
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      66045,
      66045
    ],
    "valid"
  ],
  [
    [
      66046,
      66175
    ],
    "disallowed"
  ],
  [
    [
      66176,
      66204
    ],
    "valid"
  ],
  [
    [
      66205,
      66207
    ],
    "disallowed"
  ],
  [
    [
      66208,
      66256
    ],
    "valid"
  ],
  [
    [
      66257,
      66271
    ],
    "disallowed"
  ],
  [
    [
      66272,
      66272
    ],
    "valid"
  ],
  [
    [
      66273,
      66299
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      66300,
      66303
    ],
    "disallowed"
  ],
  [
    [
      66304,
      66334
    ],
    "valid"
  ],
  [
    [
      66335,
      66335
    ],
    "valid"
  ],
  [
    [
      66336,
      66339
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      66340,
      66351
    ],
    "disallowed"
  ],
  [
    [
      66352,
      66368
    ],
    "valid"
  ],
  [
    [
      66369,
      66369
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      66370,
      66377
    ],
    "valid"
  ],
  [
    [
      66378,
      66378
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      66379,
      66383
    ],
    "disallowed"
  ],
  [
    [
      66384,
      66426
    ],
    "valid"
  ],
  [
    [
      66427,
      66431
    ],
    "disallowed"
  ],
  [
    [
      66432,
      66461
    ],
    "valid"
  ],
  [
    [
      66462,
      66462
    ],
    "disallowed"
  ],
  [
    [
      66463,
      66463
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      66464,
      66499
    ],
    "valid"
  ],
  [
    [
      66500,
      66503
    ],
    "disallowed"
  ],
  [
    [
      66504,
      66511
    ],
    "valid"
  ],
  [
    [
      66512,
      66517
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      66518,
      66559
    ],
    "disallowed"
  ],
  [
    [
      66560,
      66560
    ],
    "mapped",
    [
      66600
    ]
  ],
  [
    [
      66561,
      66561
    ],
    "mapped",
    [
      66601
    ]
  ],
  [
    [
      66562,
      66562
    ],
    "mapped",
    [
      66602
    ]
  ],
  [
    [
      66563,
      66563
    ],
    "mapped",
    [
      66603
    ]
  ],
  [
    [
      66564,
      66564
    ],
    "mapped",
    [
      66604
    ]
  ],
  [
    [
      66565,
      66565
    ],
    "mapped",
    [
      66605
    ]
  ],
  [
    [
      66566,
      66566
    ],
    "mapped",
    [
      66606
    ]
  ],
  [
    [
      66567,
      66567
    ],
    "mapped",
    [
      66607
    ]
  ],
  [
    [
      66568,
      66568
    ],
    "mapped",
    [
      66608
    ]
  ],
  [
    [
      66569,
      66569
    ],
    "mapped",
    [
      66609
    ]
  ],
  [
    [
      66570,
      66570
    ],
    "mapped",
    [
      66610
    ]
  ],
  [
    [
      66571,
      66571
    ],
    "mapped",
    [
      66611
    ]
  ],
  [
    [
      66572,
      66572
    ],
    "mapped",
    [
      66612
    ]
  ],
  [
    [
      66573,
      66573
    ],
    "mapped",
    [
      66613
    ]
  ],
  [
    [
      66574,
      66574
    ],
    "mapped",
    [
      66614
    ]
  ],
  [
    [
      66575,
      66575
    ],
    "mapped",
    [
      66615
    ]
  ],
  [
    [
      66576,
      66576
    ],
    "mapped",
    [
      66616
    ]
  ],
  [
    [
      66577,
      66577
    ],
    "mapped",
    [
      66617
    ]
  ],
  [
    [
      66578,
      66578
    ],
    "mapped",
    [
      66618
    ]
  ],
  [
    [
      66579,
      66579
    ],
    "mapped",
    [
      66619
    ]
  ],
  [
    [
      66580,
      66580
    ],
    "mapped",
    [
      66620
    ]
  ],
  [
    [
      66581,
      66581
    ],
    "mapped",
    [
      66621
    ]
  ],
  [
    [
      66582,
      66582
    ],
    "mapped",
    [
      66622
    ]
  ],
  [
    [
      66583,
      66583
    ],
    "mapped",
    [
      66623
    ]
  ],
  [
    [
      66584,
      66584
    ],
    "mapped",
    [
      66624
    ]
  ],
  [
    [
      66585,
      66585
    ],
    "mapped",
    [
      66625
    ]
  ],
  [
    [
      66586,
      66586
    ],
    "mapped",
    [
      66626
    ]
  ],
  [
    [
      66587,
      66587
    ],
    "mapped",
    [
      66627
    ]
  ],
  [
    [
      66588,
      66588
    ],
    "mapped",
    [
      66628
    ]
  ],
  [
    [
      66589,
      66589
    ],
    "mapped",
    [
      66629
    ]
  ],
  [
    [
      66590,
      66590
    ],
    "mapped",
    [
      66630
    ]
  ],
  [
    [
      66591,
      66591
    ],
    "mapped",
    [
      66631
    ]
  ],
  [
    [
      66592,
      66592
    ],
    "mapped",
    [
      66632
    ]
  ],
  [
    [
      66593,
      66593
    ],
    "mapped",
    [
      66633
    ]
  ],
  [
    [
      66594,
      66594
    ],
    "mapped",
    [
      66634
    ]
  ],
  [
    [
      66595,
      66595
    ],
    "mapped",
    [
      66635
    ]
  ],
  [
    [
      66596,
      66596
    ],
    "mapped",
    [
      66636
    ]
  ],
  [
    [
      66597,
      66597
    ],
    "mapped",
    [
      66637
    ]
  ],
  [
    [
      66598,
      66598
    ],
    "mapped",
    [
      66638
    ]
  ],
  [
    [
      66599,
      66599
    ],
    "mapped",
    [
      66639
    ]
  ],
  [
    [
      66600,
      66637
    ],
    "valid"
  ],
  [
    [
      66638,
      66717
    ],
    "valid"
  ],
  [
    [
      66718,
      66719
    ],
    "disallowed"
  ],
  [
    [
      66720,
      66729
    ],
    "valid"
  ],
  [
    [
      66730,
      66815
    ],
    "disallowed"
  ],
  [
    [
      66816,
      66855
    ],
    "valid"
  ],
  [
    [
      66856,
      66863
    ],
    "disallowed"
  ],
  [
    [
      66864,
      66915
    ],
    "valid"
  ],
  [
    [
      66916,
      66926
    ],
    "disallowed"
  ],
  [
    [
      66927,
      66927
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      66928,
      67071
    ],
    "disallowed"
  ],
  [
    [
      67072,
      67382
    ],
    "valid"
  ],
  [
    [
      67383,
      67391
    ],
    "disallowed"
  ],
  [
    [
      67392,
      67413
    ],
    "valid"
  ],
  [
    [
      67414,
      67423
    ],
    "disallowed"
  ],
  [
    [
      67424,
      67431
    ],
    "valid"
  ],
  [
    [
      67432,
      67583
    ],
    "disallowed"
  ],
  [
    [
      67584,
      67589
    ],
    "valid"
  ],
  [
    [
      67590,
      67591
    ],
    "disallowed"
  ],
  [
    [
      67592,
      67592
    ],
    "valid"
  ],
  [
    [
      67593,
      67593
    ],
    "disallowed"
  ],
  [
    [
      67594,
      67637
    ],
    "valid"
  ],
  [
    [
      67638,
      67638
    ],
    "disallowed"
  ],
  [
    [
      67639,
      67640
    ],
    "valid"
  ],
  [
    [
      67641,
      67643
    ],
    "disallowed"
  ],
  [
    [
      67644,
      67644
    ],
    "valid"
  ],
  [
    [
      67645,
      67646
    ],
    "disallowed"
  ],
  [
    [
      67647,
      67647
    ],
    "valid"
  ],
  [
    [
      67648,
      67669
    ],
    "valid"
  ],
  [
    [
      67670,
      67670
    ],
    "disallowed"
  ],
  [
    [
      67671,
      67679
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      67680,
      67702
    ],
    "valid"
  ],
  [
    [
      67703,
      67711
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      67712,
      67742
    ],
    "valid"
  ],
  [
    [
      67743,
      67750
    ],
    "disallowed"
  ],
  [
    [
      67751,
      67759
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      67760,
      67807
    ],
    "disallowed"
  ],
  [
    [
      67808,
      67826
    ],
    "valid"
  ],
  [
    [
      67827,
      67827
    ],
    "disallowed"
  ],
  [
    [
      67828,
      67829
    ],
    "valid"
  ],
  [
    [
      67830,
      67834
    ],
    "disallowed"
  ],
  [
    [
      67835,
      67839
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      67840,
      67861
    ],
    "valid"
  ],
  [
    [
      67862,
      67865
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      67866,
      67867
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      67868,
      67870
    ],
    "disallowed"
  ],
  [
    [
      67871,
      67871
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      67872,
      67897
    ],
    "valid"
  ],
  [
    [
      67898,
      67902
    ],
    "disallowed"
  ],
  [
    [
      67903,
      67903
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      67904,
      67967
    ],
    "disallowed"
  ],
  [
    [
      67968,
      68023
    ],
    "valid"
  ],
  [
    [
      68024,
      68027
    ],
    "disallowed"
  ],
  [
    [
      68028,
      68029
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      68030,
      68031
    ],
    "valid"
  ],
  [
    [
      68032,
      68047
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      68048,
      68049
    ],
    "disallowed"
  ],
  [
    [
      68050,
      68095
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      68096,
      68099
    ],
    "valid"
  ],
  [
    [
      68100,
      68100
    ],
    "disallowed"
  ],
  [
    [
      68101,
      68102
    ],
    "valid"
  ],
  [
    [
      68103,
      68107
    ],
    "disallowed"
  ],
  [
    [
      68108,
      68115
    ],
    "valid"
  ],
  [
    [
      68116,
      68116
    ],
    "disallowed"
  ],
  [
    [
      68117,
      68119
    ],
    "valid"
  ],
  [
    [
      68120,
      68120
    ],
    "disallowed"
  ],
  [
    [
      68121,
      68147
    ],
    "valid"
  ],
  [
    [
      68148,
      68151
    ],
    "disallowed"
  ],
  [
    [
      68152,
      68154
    ],
    "valid"
  ],
  [
    [
      68155,
      68158
    ],
    "disallowed"
  ],
  [
    [
      68159,
      68159
    ],
    "valid"
  ],
  [
    [
      68160,
      68167
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      68168,
      68175
    ],
    "disallowed"
  ],
  [
    [
      68176,
      68184
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      68185,
      68191
    ],
    "disallowed"
  ],
  [
    [
      68192,
      68220
    ],
    "valid"
  ],
  [
    [
      68221,
      68223
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      68224,
      68252
    ],
    "valid"
  ],
  [
    [
      68253,
      68255
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      68256,
      68287
    ],
    "disallowed"
  ],
  [
    [
      68288,
      68295
    ],
    "valid"
  ],
  [
    [
      68296,
      68296
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      68297,
      68326
    ],
    "valid"
  ],
  [
    [
      68327,
      68330
    ],
    "disallowed"
  ],
  [
    [
      68331,
      68342
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      68343,
      68351
    ],
    "disallowed"
  ],
  [
    [
      68352,
      68405
    ],
    "valid"
  ],
  [
    [
      68406,
      68408
    ],
    "disallowed"
  ],
  [
    [
      68409,
      68415
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      68416,
      68437
    ],
    "valid"
  ],
  [
    [
      68438,
      68439
    ],
    "disallowed"
  ],
  [
    [
      68440,
      68447
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      68448,
      68466
    ],
    "valid"
  ],
  [
    [
      68467,
      68471
    ],
    "disallowed"
  ],
  [
    [
      68472,
      68479
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      68480,
      68497
    ],
    "valid"
  ],
  [
    [
      68498,
      68504
    ],
    "disallowed"
  ],
  [
    [
      68505,
      68508
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      68509,
      68520
    ],
    "disallowed"
  ],
  [
    [
      68521,
      68527
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      68528,
      68607
    ],
    "disallowed"
  ],
  [
    [
      68608,
      68680
    ],
    "valid"
  ],
  [
    [
      68681,
      68735
    ],
    "disallowed"
  ],
  [
    [
      68736,
      68736
    ],
    "mapped",
    [
      68800
    ]
  ],
  [
    [
      68737,
      68737
    ],
    "mapped",
    [
      68801
    ]
  ],
  [
    [
      68738,
      68738
    ],
    "mapped",
    [
      68802
    ]
  ],
  [
    [
      68739,
      68739
    ],
    "mapped",
    [
      68803
    ]
  ],
  [
    [
      68740,
      68740
    ],
    "mapped",
    [
      68804
    ]
  ],
  [
    [
      68741,
      68741
    ],
    "mapped",
    [
      68805
    ]
  ],
  [
    [
      68742,
      68742
    ],
    "mapped",
    [
      68806
    ]
  ],
  [
    [
      68743,
      68743
    ],
    "mapped",
    [
      68807
    ]
  ],
  [
    [
      68744,
      68744
    ],
    "mapped",
    [
      68808
    ]
  ],
  [
    [
      68745,
      68745
    ],
    "mapped",
    [
      68809
    ]
  ],
  [
    [
      68746,
      68746
    ],
    "mapped",
    [
      68810
    ]
  ],
  [
    [
      68747,
      68747
    ],
    "mapped",
    [
      68811
    ]
  ],
  [
    [
      68748,
      68748
    ],
    "mapped",
    [
      68812
    ]
  ],
  [
    [
      68749,
      68749
    ],
    "mapped",
    [
      68813
    ]
  ],
  [
    [
      68750,
      68750
    ],
    "mapped",
    [
      68814
    ]
  ],
  [
    [
      68751,
      68751
    ],
    "mapped",
    [
      68815
    ]
  ],
  [
    [
      68752,
      68752
    ],
    "mapped",
    [
      68816
    ]
  ],
  [
    [
      68753,
      68753
    ],
    "mapped",
    [
      68817
    ]
  ],
  [
    [
      68754,
      68754
    ],
    "mapped",
    [
      68818
    ]
  ],
  [
    [
      68755,
      68755
    ],
    "mapped",
    [
      68819
    ]
  ],
  [
    [
      68756,
      68756
    ],
    "mapped",
    [
      68820
    ]
  ],
  [
    [
      68757,
      68757
    ],
    "mapped",
    [
      68821
    ]
  ],
  [
    [
      68758,
      68758
    ],
    "mapped",
    [
      68822
    ]
  ],
  [
    [
      68759,
      68759
    ],
    "mapped",
    [
      68823
    ]
  ],
  [
    [
      68760,
      68760
    ],
    "mapped",
    [
      68824
    ]
  ],
  [
    [
      68761,
      68761
    ],
    "mapped",
    [
      68825
    ]
  ],
  [
    [
      68762,
      68762
    ],
    "mapped",
    [
      68826
    ]
  ],
  [
    [
      68763,
      68763
    ],
    "mapped",
    [
      68827
    ]
  ],
  [
    [
      68764,
      68764
    ],
    "mapped",
    [
      68828
    ]
  ],
  [
    [
      68765,
      68765
    ],
    "mapped",
    [
      68829
    ]
  ],
  [
    [
      68766,
      68766
    ],
    "mapped",
    [
      68830
    ]
  ],
  [
    [
      68767,
      68767
    ],
    "mapped",
    [
      68831
    ]
  ],
  [
    [
      68768,
      68768
    ],
    "mapped",
    [
      68832
    ]
  ],
  [
    [
      68769,
      68769
    ],
    "mapped",
    [
      68833
    ]
  ],
  [
    [
      68770,
      68770
    ],
    "mapped",
    [
      68834
    ]
  ],
  [
    [
      68771,
      68771
    ],
    "mapped",
    [
      68835
    ]
  ],
  [
    [
      68772,
      68772
    ],
    "mapped",
    [
      68836
    ]
  ],
  [
    [
      68773,
      68773
    ],
    "mapped",
    [
      68837
    ]
  ],
  [
    [
      68774,
      68774
    ],
    "mapped",
    [
      68838
    ]
  ],
  [
    [
      68775,
      68775
    ],
    "mapped",
    [
      68839
    ]
  ],
  [
    [
      68776,
      68776
    ],
    "mapped",
    [
      68840
    ]
  ],
  [
    [
      68777,
      68777
    ],
    "mapped",
    [
      68841
    ]
  ],
  [
    [
      68778,
      68778
    ],
    "mapped",
    [
      68842
    ]
  ],
  [
    [
      68779,
      68779
    ],
    "mapped",
    [
      68843
    ]
  ],
  [
    [
      68780,
      68780
    ],
    "mapped",
    [
      68844
    ]
  ],
  [
    [
      68781,
      68781
    ],
    "mapped",
    [
      68845
    ]
  ],
  [
    [
      68782,
      68782
    ],
    "mapped",
    [
      68846
    ]
  ],
  [
    [
      68783,
      68783
    ],
    "mapped",
    [
      68847
    ]
  ],
  [
    [
      68784,
      68784
    ],
    "mapped",
    [
      68848
    ]
  ],
  [
    [
      68785,
      68785
    ],
    "mapped",
    [
      68849
    ]
  ],
  [
    [
      68786,
      68786
    ],
    "mapped",
    [
      68850
    ]
  ],
  [
    [
      68787,
      68799
    ],
    "disallowed"
  ],
  [
    [
      68800,
      68850
    ],
    "valid"
  ],
  [
    [
      68851,
      68857
    ],
    "disallowed"
  ],
  [
    [
      68858,
      68863
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      68864,
      69215
    ],
    "disallowed"
  ],
  [
    [
      69216,
      69246
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      69247,
      69631
    ],
    "disallowed"
  ],
  [
    [
      69632,
      69702
    ],
    "valid"
  ],
  [
    [
      69703,
      69709
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      69710,
      69713
    ],
    "disallowed"
  ],
  [
    [
      69714,
      69733
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      69734,
      69743
    ],
    "valid"
  ],
  [
    [
      69744,
      69758
    ],
    "disallowed"
  ],
  [
    [
      69759,
      69759
    ],
    "valid"
  ],
  [
    [
      69760,
      69818
    ],
    "valid"
  ],
  [
    [
      69819,
      69820
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      69821,
      69821
    ],
    "disallowed"
  ],
  [
    [
      69822,
      69825
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      69826,
      69839
    ],
    "disallowed"
  ],
  [
    [
      69840,
      69864
    ],
    "valid"
  ],
  [
    [
      69865,
      69871
    ],
    "disallowed"
  ],
  [
    [
      69872,
      69881
    ],
    "valid"
  ],
  [
    [
      69882,
      69887
    ],
    "disallowed"
  ],
  [
    [
      69888,
      69940
    ],
    "valid"
  ],
  [
    [
      69941,
      69941
    ],
    "disallowed"
  ],
  [
    [
      69942,
      69951
    ],
    "valid"
  ],
  [
    [
      69952,
      69955
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      69956,
      69967
    ],
    "disallowed"
  ],
  [
    [
      69968,
      70003
    ],
    "valid"
  ],
  [
    [
      70004,
      70005
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      70006,
      70006
    ],
    "valid"
  ],
  [
    [
      70007,
      70015
    ],
    "disallowed"
  ],
  [
    [
      70016,
      70084
    ],
    "valid"
  ],
  [
    [
      70085,
      70088
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      70089,
      70089
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      70090,
      70092
    ],
    "valid"
  ],
  [
    [
      70093,
      70093
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      70094,
      70095
    ],
    "disallowed"
  ],
  [
    [
      70096,
      70105
    ],
    "valid"
  ],
  [
    [
      70106,
      70106
    ],
    "valid"
  ],
  [
    [
      70107,
      70107
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      70108,
      70108
    ],
    "valid"
  ],
  [
    [
      70109,
      70111
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      70112,
      70112
    ],
    "disallowed"
  ],
  [
    [
      70113,
      70132
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      70133,
      70143
    ],
    "disallowed"
  ],
  [
    [
      70144,
      70161
    ],
    "valid"
  ],
  [
    [
      70162,
      70162
    ],
    "disallowed"
  ],
  [
    [
      70163,
      70199
    ],
    "valid"
  ],
  [
    [
      70200,
      70205
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      70206,
      70271
    ],
    "disallowed"
  ],
  [
    [
      70272,
      70278
    ],
    "valid"
  ],
  [
    [
      70279,
      70279
    ],
    "disallowed"
  ],
  [
    [
      70280,
      70280
    ],
    "valid"
  ],
  [
    [
      70281,
      70281
    ],
    "disallowed"
  ],
  [
    [
      70282,
      70285
    ],
    "valid"
  ],
  [
    [
      70286,
      70286
    ],
    "disallowed"
  ],
  [
    [
      70287,
      70301
    ],
    "valid"
  ],
  [
    [
      70302,
      70302
    ],
    "disallowed"
  ],
  [
    [
      70303,
      70312
    ],
    "valid"
  ],
  [
    [
      70313,
      70313
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      70314,
      70319
    ],
    "disallowed"
  ],
  [
    [
      70320,
      70378
    ],
    "valid"
  ],
  [
    [
      70379,
      70383
    ],
    "disallowed"
  ],
  [
    [
      70384,
      70393
    ],
    "valid"
  ],
  [
    [
      70394,
      70399
    ],
    "disallowed"
  ],
  [
    [
      70400,
      70400
    ],
    "valid"
  ],
  [
    [
      70401,
      70403
    ],
    "valid"
  ],
  [
    [
      70404,
      70404
    ],
    "disallowed"
  ],
  [
    [
      70405,
      70412
    ],
    "valid"
  ],
  [
    [
      70413,
      70414
    ],
    "disallowed"
  ],
  [
    [
      70415,
      70416
    ],
    "valid"
  ],
  [
    [
      70417,
      70418
    ],
    "disallowed"
  ],
  [
    [
      70419,
      70440
    ],
    "valid"
  ],
  [
    [
      70441,
      70441
    ],
    "disallowed"
  ],
  [
    [
      70442,
      70448
    ],
    "valid"
  ],
  [
    [
      70449,
      70449
    ],
    "disallowed"
  ],
  [
    [
      70450,
      70451
    ],
    "valid"
  ],
  [
    [
      70452,
      70452
    ],
    "disallowed"
  ],
  [
    [
      70453,
      70457
    ],
    "valid"
  ],
  [
    [
      70458,
      70459
    ],
    "disallowed"
  ],
  [
    [
      70460,
      70468
    ],
    "valid"
  ],
  [
    [
      70469,
      70470
    ],
    "disallowed"
  ],
  [
    [
      70471,
      70472
    ],
    "valid"
  ],
  [
    [
      70473,
      70474
    ],
    "disallowed"
  ],
  [
    [
      70475,
      70477
    ],
    "valid"
  ],
  [
    [
      70478,
      70479
    ],
    "disallowed"
  ],
  [
    [
      70480,
      70480
    ],
    "valid"
  ],
  [
    [
      70481,
      70486
    ],
    "disallowed"
  ],
  [
    [
      70487,
      70487
    ],
    "valid"
  ],
  [
    [
      70488,
      70492
    ],
    "disallowed"
  ],
  [
    [
      70493,
      70499
    ],
    "valid"
  ],
  [
    [
      70500,
      70501
    ],
    "disallowed"
  ],
  [
    [
      70502,
      70508
    ],
    "valid"
  ],
  [
    [
      70509,
      70511
    ],
    "disallowed"
  ],
  [
    [
      70512,
      70516
    ],
    "valid"
  ],
  [
    [
      70517,
      70783
    ],
    "disallowed"
  ],
  [
    [
      70784,
      70853
    ],
    "valid"
  ],
  [
    [
      70854,
      70854
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      70855,
      70855
    ],
    "valid"
  ],
  [
    [
      70856,
      70863
    ],
    "disallowed"
  ],
  [
    [
      70864,
      70873
    ],
    "valid"
  ],
  [
    [
      70874,
      71039
    ],
    "disallowed"
  ],
  [
    [
      71040,
      71093
    ],
    "valid"
  ],
  [
    [
      71094,
      71095
    ],
    "disallowed"
  ],
  [
    [
      71096,
      71104
    ],
    "valid"
  ],
  [
    [
      71105,
      71113
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      71114,
      71127
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      71128,
      71133
    ],
    "valid"
  ],
  [
    [
      71134,
      71167
    ],
    "disallowed"
  ],
  [
    [
      71168,
      71232
    ],
    "valid"
  ],
  [
    [
      71233,
      71235
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      71236,
      71236
    ],
    "valid"
  ],
  [
    [
      71237,
      71247
    ],
    "disallowed"
  ],
  [
    [
      71248,
      71257
    ],
    "valid"
  ],
  [
    [
      71258,
      71295
    ],
    "disallowed"
  ],
  [
    [
      71296,
      71351
    ],
    "valid"
  ],
  [
    [
      71352,
      71359
    ],
    "disallowed"
  ],
  [
    [
      71360,
      71369
    ],
    "valid"
  ],
  [
    [
      71370,
      71423
    ],
    "disallowed"
  ],
  [
    [
      71424,
      71449
    ],
    "valid"
  ],
  [
    [
      71450,
      71452
    ],
    "disallowed"
  ],
  [
    [
      71453,
      71467
    ],
    "valid"
  ],
  [
    [
      71468,
      71471
    ],
    "disallowed"
  ],
  [
    [
      71472,
      71481
    ],
    "valid"
  ],
  [
    [
      71482,
      71487
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      71488,
      71839
    ],
    "disallowed"
  ],
  [
    [
      71840,
      71840
    ],
    "mapped",
    [
      71872
    ]
  ],
  [
    [
      71841,
      71841
    ],
    "mapped",
    [
      71873
    ]
  ],
  [
    [
      71842,
      71842
    ],
    "mapped",
    [
      71874
    ]
  ],
  [
    [
      71843,
      71843
    ],
    "mapped",
    [
      71875
    ]
  ],
  [
    [
      71844,
      71844
    ],
    "mapped",
    [
      71876
    ]
  ],
  [
    [
      71845,
      71845
    ],
    "mapped",
    [
      71877
    ]
  ],
  [
    [
      71846,
      71846
    ],
    "mapped",
    [
      71878
    ]
  ],
  [
    [
      71847,
      71847
    ],
    "mapped",
    [
      71879
    ]
  ],
  [
    [
      71848,
      71848
    ],
    "mapped",
    [
      71880
    ]
  ],
  [
    [
      71849,
      71849
    ],
    "mapped",
    [
      71881
    ]
  ],
  [
    [
      71850,
      71850
    ],
    "mapped",
    [
      71882
    ]
  ],
  [
    [
      71851,
      71851
    ],
    "mapped",
    [
      71883
    ]
  ],
  [
    [
      71852,
      71852
    ],
    "mapped",
    [
      71884
    ]
  ],
  [
    [
      71853,
      71853
    ],
    "mapped",
    [
      71885
    ]
  ],
  [
    [
      71854,
      71854
    ],
    "mapped",
    [
      71886
    ]
  ],
  [
    [
      71855,
      71855
    ],
    "mapped",
    [
      71887
    ]
  ],
  [
    [
      71856,
      71856
    ],
    "mapped",
    [
      71888
    ]
  ],
  [
    [
      71857,
      71857
    ],
    "mapped",
    [
      71889
    ]
  ],
  [
    [
      71858,
      71858
    ],
    "mapped",
    [
      71890
    ]
  ],
  [
    [
      71859,
      71859
    ],
    "mapped",
    [
      71891
    ]
  ],
  [
    [
      71860,
      71860
    ],
    "mapped",
    [
      71892
    ]
  ],
  [
    [
      71861,
      71861
    ],
    "mapped",
    [
      71893
    ]
  ],
  [
    [
      71862,
      71862
    ],
    "mapped",
    [
      71894
    ]
  ],
  [
    [
      71863,
      71863
    ],
    "mapped",
    [
      71895
    ]
  ],
  [
    [
      71864,
      71864
    ],
    "mapped",
    [
      71896
    ]
  ],
  [
    [
      71865,
      71865
    ],
    "mapped",
    [
      71897
    ]
  ],
  [
    [
      71866,
      71866
    ],
    "mapped",
    [
      71898
    ]
  ],
  [
    [
      71867,
      71867
    ],
    "mapped",
    [
      71899
    ]
  ],
  [
    [
      71868,
      71868
    ],
    "mapped",
    [
      71900
    ]
  ],
  [
    [
      71869,
      71869
    ],
    "mapped",
    [
      71901
    ]
  ],
  [
    [
      71870,
      71870
    ],
    "mapped",
    [
      71902
    ]
  ],
  [
    [
      71871,
      71871
    ],
    "mapped",
    [
      71903
    ]
  ],
  [
    [
      71872,
      71913
    ],
    "valid"
  ],
  [
    [
      71914,
      71922
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      71923,
      71934
    ],
    "disallowed"
  ],
  [
    [
      71935,
      71935
    ],
    "valid"
  ],
  [
    [
      71936,
      72383
    ],
    "disallowed"
  ],
  [
    [
      72384,
      72440
    ],
    "valid"
  ],
  [
    [
      72441,
      73727
    ],
    "disallowed"
  ],
  [
    [
      73728,
      74606
    ],
    "valid"
  ],
  [
    [
      74607,
      74648
    ],
    "valid"
  ],
  [
    [
      74649,
      74649
    ],
    "valid"
  ],
  [
    [
      74650,
      74751
    ],
    "disallowed"
  ],
  [
    [
      74752,
      74850
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      74851,
      74862
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      74863,
      74863
    ],
    "disallowed"
  ],
  [
    [
      74864,
      74867
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      74868,
      74868
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      74869,
      74879
    ],
    "disallowed"
  ],
  [
    [
      74880,
      75075
    ],
    "valid"
  ],
  [
    [
      75076,
      77823
    ],
    "disallowed"
  ],
  [
    [
      77824,
      78894
    ],
    "valid"
  ],
  [
    [
      78895,
      82943
    ],
    "disallowed"
  ],
  [
    [
      82944,
      83526
    ],
    "valid"
  ],
  [
    [
      83527,
      92159
    ],
    "disallowed"
  ],
  [
    [
      92160,
      92728
    ],
    "valid"
  ],
  [
    [
      92729,
      92735
    ],
    "disallowed"
  ],
  [
    [
      92736,
      92766
    ],
    "valid"
  ],
  [
    [
      92767,
      92767
    ],
    "disallowed"
  ],
  [
    [
      92768,
      92777
    ],
    "valid"
  ],
  [
    [
      92778,
      92781
    ],
    "disallowed"
  ],
  [
    [
      92782,
      92783
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      92784,
      92879
    ],
    "disallowed"
  ],
  [
    [
      92880,
      92909
    ],
    "valid"
  ],
  [
    [
      92910,
      92911
    ],
    "disallowed"
  ],
  [
    [
      92912,
      92916
    ],
    "valid"
  ],
  [
    [
      92917,
      92917
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      92918,
      92927
    ],
    "disallowed"
  ],
  [
    [
      92928,
      92982
    ],
    "valid"
  ],
  [
    [
      92983,
      92991
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      92992,
      92995
    ],
    "valid"
  ],
  [
    [
      92996,
      92997
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      92998,
      93007
    ],
    "disallowed"
  ],
  [
    [
      93008,
      93017
    ],
    "valid"
  ],
  [
    [
      93018,
      93018
    ],
    "disallowed"
  ],
  [
    [
      93019,
      93025
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      93026,
      93026
    ],
    "disallowed"
  ],
  [
    [
      93027,
      93047
    ],
    "valid"
  ],
  [
    [
      93048,
      93052
    ],
    "disallowed"
  ],
  [
    [
      93053,
      93071
    ],
    "valid"
  ],
  [
    [
      93072,
      93951
    ],
    "disallowed"
  ],
  [
    [
      93952,
      94020
    ],
    "valid"
  ],
  [
    [
      94021,
      94031
    ],
    "disallowed"
  ],
  [
    [
      94032,
      94078
    ],
    "valid"
  ],
  [
    [
      94079,
      94094
    ],
    "disallowed"
  ],
  [
    [
      94095,
      94111
    ],
    "valid"
  ],
  [
    [
      94112,
      110591
    ],
    "disallowed"
  ],
  [
    [
      110592,
      110593
    ],
    "valid"
  ],
  [
    [
      110594,
      113663
    ],
    "disallowed"
  ],
  [
    [
      113664,
      113770
    ],
    "valid"
  ],
  [
    [
      113771,
      113775
    ],
    "disallowed"
  ],
  [
    [
      113776,
      113788
    ],
    "valid"
  ],
  [
    [
      113789,
      113791
    ],
    "disallowed"
  ],
  [
    [
      113792,
      113800
    ],
    "valid"
  ],
  [
    [
      113801,
      113807
    ],
    "disallowed"
  ],
  [
    [
      113808,
      113817
    ],
    "valid"
  ],
  [
    [
      113818,
      113819
    ],
    "disallowed"
  ],
  [
    [
      113820,
      113820
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      113821,
      113822
    ],
    "valid"
  ],
  [
    [
      113823,
      113823
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      113824,
      113827
    ],
    "ignored"
  ],
  [
    [
      113828,
      118783
    ],
    "disallowed"
  ],
  [
    [
      118784,
      119029
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      119030,
      119039
    ],
    "disallowed"
  ],
  [
    [
      119040,
      119078
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      119079,
      119080
    ],
    "disallowed"
  ],
  [
    [
      119081,
      119081
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      119082,
      119133
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      119134,
      119134
    ],
    "mapped",
    [
      119127,
      119141
    ]
  ],
  [
    [
      119135,
      119135
    ],
    "mapped",
    [
      119128,
      119141
    ]
  ],
  [
    [
      119136,
      119136
    ],
    "mapped",
    [
      119128,
      119141,
      119150
    ]
  ],
  [
    [
      119137,
      119137
    ],
    "mapped",
    [
      119128,
      119141,
      119151
    ]
  ],
  [
    [
      119138,
      119138
    ],
    "mapped",
    [
      119128,
      119141,
      119152
    ]
  ],
  [
    [
      119139,
      119139
    ],
    "mapped",
    [
      119128,
      119141,
      119153
    ]
  ],
  [
    [
      119140,
      119140
    ],
    "mapped",
    [
      119128,
      119141,
      119154
    ]
  ],
  [
    [
      119141,
      119154
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      119155,
      119162
    ],
    "disallowed"
  ],
  [
    [
      119163,
      119226
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      119227,
      119227
    ],
    "mapped",
    [
      119225,
      119141
    ]
  ],
  [
    [
      119228,
      119228
    ],
    "mapped",
    [
      119226,
      119141
    ]
  ],
  [
    [
      119229,
      119229
    ],
    "mapped",
    [
      119225,
      119141,
      119150
    ]
  ],
  [
    [
      119230,
      119230
    ],
    "mapped",
    [
      119226,
      119141,
      119150
    ]
  ],
  [
    [
      119231,
      119231
    ],
    "mapped",
    [
      119225,
      119141,
      119151
    ]
  ],
  [
    [
      119232,
      119232
    ],
    "mapped",
    [
      119226,
      119141,
      119151
    ]
  ],
  [
    [
      119233,
      119261
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      119262,
      119272
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      119273,
      119295
    ],
    "disallowed"
  ],
  [
    [
      119296,
      119365
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      119366,
      119551
    ],
    "disallowed"
  ],
  [
    [
      119552,
      119638
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      119639,
      119647
    ],
    "disallowed"
  ],
  [
    [
      119648,
      119665
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      119666,
      119807
    ],
    "disallowed"
  ],
  [
    [
      119808,
      119808
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      119809,
      119809
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      119810,
      119810
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      119811,
      119811
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      119812,
      119812
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      119813,
      119813
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      119814,
      119814
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      119815,
      119815
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      119816,
      119816
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      119817,
      119817
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      119818,
      119818
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      119819,
      119819
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      119820,
      119820
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      119821,
      119821
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      119822,
      119822
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      119823,
      119823
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      119824,
      119824
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      119825,
      119825
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      119826,
      119826
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      119827,
      119827
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      119828,
      119828
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      119829,
      119829
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      119830,
      119830
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      119831,
      119831
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      119832,
      119832
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      119833,
      119833
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      119834,
      119834
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      119835,
      119835
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      119836,
      119836
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      119837,
      119837
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      119838,
      119838
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      119839,
      119839
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      119840,
      119840
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      119841,
      119841
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      119842,
      119842
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      119843,
      119843
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      119844,
      119844
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      119845,
      119845
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      119846,
      119846
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      119847,
      119847
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      119848,
      119848
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      119849,
      119849
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      119850,
      119850
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      119851,
      119851
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      119852,
      119852
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      119853,
      119853
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      119854,
      119854
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      119855,
      119855
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      119856,
      119856
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      119857,
      119857
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      119858,
      119858
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      119859,
      119859
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      119860,
      119860
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      119861,
      119861
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      119862,
      119862
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      119863,
      119863
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      119864,
      119864
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      119865,
      119865
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      119866,
      119866
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      119867,
      119867
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      119868,
      119868
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      119869,
      119869
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      119870,
      119870
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      119871,
      119871
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      119872,
      119872
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      119873,
      119873
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      119874,
      119874
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      119875,
      119875
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      119876,
      119876
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      119877,
      119877
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      119878,
      119878
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      119879,
      119879
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      119880,
      119880
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      119881,
      119881
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      119882,
      119882
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      119883,
      119883
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      119884,
      119884
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      119885,
      119885
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      119886,
      119886
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      119887,
      119887
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      119888,
      119888
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      119889,
      119889
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      119890,
      119890
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      119891,
      119891
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      119892,
      119892
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      119893,
      119893
    ],
    "disallowed"
  ],
  [
    [
      119894,
      119894
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      119895,
      119895
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      119896,
      119896
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      119897,
      119897
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      119898,
      119898
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      119899,
      119899
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      119900,
      119900
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      119901,
      119901
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      119902,
      119902
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      119903,
      119903
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      119904,
      119904
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      119905,
      119905
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      119906,
      119906
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      119907,
      119907
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      119908,
      119908
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      119909,
      119909
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      119910,
      119910
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      119911,
      119911
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      119912,
      119912
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      119913,
      119913
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      119914,
      119914
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      119915,
      119915
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      119916,
      119916
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      119917,
      119917
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      119918,
      119918
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      119919,
      119919
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      119920,
      119920
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      119921,
      119921
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      119922,
      119922
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      119923,
      119923
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      119924,
      119924
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      119925,
      119925
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      119926,
      119926
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      119927,
      119927
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      119928,
      119928
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      119929,
      119929
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      119930,
      119930
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      119931,
      119931
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      119932,
      119932
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      119933,
      119933
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      119934,
      119934
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      119935,
      119935
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      119936,
      119936
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      119937,
      119937
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      119938,
      119938
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      119939,
      119939
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      119940,
      119940
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      119941,
      119941
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      119942,
      119942
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      119943,
      119943
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      119944,
      119944
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      119945,
      119945
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      119946,
      119946
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      119947,
      119947
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      119948,
      119948
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      119949,
      119949
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      119950,
      119950
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      119951,
      119951
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      119952,
      119952
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      119953,
      119953
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      119954,
      119954
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      119955,
      119955
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      119956,
      119956
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      119957,
      119957
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      119958,
      119958
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      119959,
      119959
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      119960,
      119960
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      119961,
      119961
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      119962,
      119962
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      119963,
      119963
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      119964,
      119964
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      119965,
      119965
    ],
    "disallowed"
  ],
  [
    [
      119966,
      119966
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      119967,
      119967
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      119968,
      119969
    ],
    "disallowed"
  ],
  [
    [
      119970,
      119970
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      119971,
      119972
    ],
    "disallowed"
  ],
  [
    [
      119973,
      119973
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      119974,
      119974
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      119975,
      119976
    ],
    "disallowed"
  ],
  [
    [
      119977,
      119977
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      119978,
      119978
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      119979,
      119979
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      119980,
      119980
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      119981,
      119981
    ],
    "disallowed"
  ],
  [
    [
      119982,
      119982
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      119983,
      119983
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      119984,
      119984
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      119985,
      119985
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      119986,
      119986
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      119987,
      119987
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      119988,
      119988
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      119989,
      119989
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      119990,
      119990
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      119991,
      119991
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      119992,
      119992
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      119993,
      119993
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      119994,
      119994
    ],
    "disallowed"
  ],
  [
    [
      119995,
      119995
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      119996,
      119996
    ],
    "disallowed"
  ],
  [
    [
      119997,
      119997
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      119998,
      119998
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      119999,
      119999
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      12e4,
      12e4
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      120001,
      120001
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      120002,
      120002
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      120003,
      120003
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      120004,
      120004
    ],
    "disallowed"
  ],
  [
    [
      120005,
      120005
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      120006,
      120006
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      120007,
      120007
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      120008,
      120008
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      120009,
      120009
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      120010,
      120010
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      120011,
      120011
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      120012,
      120012
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      120013,
      120013
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      120014,
      120014
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      120015,
      120015
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      120016,
      120016
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      120017,
      120017
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      120018,
      120018
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      120019,
      120019
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      120020,
      120020
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      120021,
      120021
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      120022,
      120022
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      120023,
      120023
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      120024,
      120024
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      120025,
      120025
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      120026,
      120026
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      120027,
      120027
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      120028,
      120028
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      120029,
      120029
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      120030,
      120030
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      120031,
      120031
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      120032,
      120032
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      120033,
      120033
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      120034,
      120034
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      120035,
      120035
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      120036,
      120036
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      120037,
      120037
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      120038,
      120038
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      120039,
      120039
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      120040,
      120040
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      120041,
      120041
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      120042,
      120042
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      120043,
      120043
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      120044,
      120044
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      120045,
      120045
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      120046,
      120046
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      120047,
      120047
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      120048,
      120048
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      120049,
      120049
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      120050,
      120050
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      120051,
      120051
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      120052,
      120052
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      120053,
      120053
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      120054,
      120054
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      120055,
      120055
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      120056,
      120056
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      120057,
      120057
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      120058,
      120058
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      120059,
      120059
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      120060,
      120060
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      120061,
      120061
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      120062,
      120062
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      120063,
      120063
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      120064,
      120064
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      120065,
      120065
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      120066,
      120066
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      120067,
      120067
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      120068,
      120068
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      120069,
      120069
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      120070,
      120070
    ],
    "disallowed"
  ],
  [
    [
      120071,
      120071
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      120072,
      120072
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      120073,
      120073
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      120074,
      120074
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      120075,
      120076
    ],
    "disallowed"
  ],
  [
    [
      120077,
      120077
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      120078,
      120078
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      120079,
      120079
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      120080,
      120080
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      120081,
      120081
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      120082,
      120082
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      120083,
      120083
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      120084,
      120084
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      120085,
      120085
    ],
    "disallowed"
  ],
  [
    [
      120086,
      120086
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      120087,
      120087
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      120088,
      120088
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      120089,
      120089
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      120090,
      120090
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      120091,
      120091
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      120092,
      120092
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      120093,
      120093
    ],
    "disallowed"
  ],
  [
    [
      120094,
      120094
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      120095,
      120095
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      120096,
      120096
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      120097,
      120097
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      120098,
      120098
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      120099,
      120099
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      120100,
      120100
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      120101,
      120101
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      120102,
      120102
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      120103,
      120103
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      120104,
      120104
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      120105,
      120105
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      120106,
      120106
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      120107,
      120107
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      120108,
      120108
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      120109,
      120109
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      120110,
      120110
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      120111,
      120111
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      120112,
      120112
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      120113,
      120113
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      120114,
      120114
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      120115,
      120115
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      120116,
      120116
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      120117,
      120117
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      120118,
      120118
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      120119,
      120119
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      120120,
      120120
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      120121,
      120121
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      120122,
      120122
    ],
    "disallowed"
  ],
  [
    [
      120123,
      120123
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      120124,
      120124
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      120125,
      120125
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      120126,
      120126
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      120127,
      120127
    ],
    "disallowed"
  ],
  [
    [
      120128,
      120128
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      120129,
      120129
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      120130,
      120130
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      120131,
      120131
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      120132,
      120132
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      120133,
      120133
    ],
    "disallowed"
  ],
  [
    [
      120134,
      120134
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      120135,
      120137
    ],
    "disallowed"
  ],
  [
    [
      120138,
      120138
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      120139,
      120139
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      120140,
      120140
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      120141,
      120141
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      120142,
      120142
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      120143,
      120143
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      120144,
      120144
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      120145,
      120145
    ],
    "disallowed"
  ],
  [
    [
      120146,
      120146
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      120147,
      120147
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      120148,
      120148
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      120149,
      120149
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      120150,
      120150
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      120151,
      120151
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      120152,
      120152
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      120153,
      120153
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      120154,
      120154
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      120155,
      120155
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      120156,
      120156
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      120157,
      120157
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      120158,
      120158
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      120159,
      120159
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      120160,
      120160
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      120161,
      120161
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      120162,
      120162
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      120163,
      120163
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      120164,
      120164
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      120165,
      120165
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      120166,
      120166
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      120167,
      120167
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      120168,
      120168
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      120169,
      120169
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      120170,
      120170
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      120171,
      120171
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      120172,
      120172
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      120173,
      120173
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      120174,
      120174
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      120175,
      120175
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      120176,
      120176
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      120177,
      120177
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      120178,
      120178
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      120179,
      120179
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      120180,
      120180
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      120181,
      120181
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      120182,
      120182
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      120183,
      120183
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      120184,
      120184
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      120185,
      120185
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      120186,
      120186
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      120187,
      120187
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      120188,
      120188
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      120189,
      120189
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      120190,
      120190
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      120191,
      120191
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      120192,
      120192
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      120193,
      120193
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      120194,
      120194
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      120195,
      120195
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      120196,
      120196
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      120197,
      120197
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      120198,
      120198
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      120199,
      120199
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      120200,
      120200
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      120201,
      120201
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      120202,
      120202
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      120203,
      120203
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      120204,
      120204
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      120205,
      120205
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      120206,
      120206
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      120207,
      120207
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      120208,
      120208
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      120209,
      120209
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      120210,
      120210
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      120211,
      120211
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      120212,
      120212
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      120213,
      120213
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      120214,
      120214
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      120215,
      120215
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      120216,
      120216
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      120217,
      120217
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      120218,
      120218
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      120219,
      120219
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      120220,
      120220
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      120221,
      120221
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      120222,
      120222
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      120223,
      120223
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      120224,
      120224
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      120225,
      120225
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      120226,
      120226
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      120227,
      120227
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      120228,
      120228
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      120229,
      120229
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      120230,
      120230
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      120231,
      120231
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      120232,
      120232
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      120233,
      120233
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      120234,
      120234
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      120235,
      120235
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      120236,
      120236
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      120237,
      120237
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      120238,
      120238
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      120239,
      120239
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      120240,
      120240
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      120241,
      120241
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      120242,
      120242
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      120243,
      120243
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      120244,
      120244
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      120245,
      120245
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      120246,
      120246
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      120247,
      120247
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      120248,
      120248
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      120249,
      120249
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      120250,
      120250
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      120251,
      120251
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      120252,
      120252
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      120253,
      120253
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      120254,
      120254
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      120255,
      120255
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      120256,
      120256
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      120257,
      120257
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      120258,
      120258
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      120259,
      120259
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      120260,
      120260
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      120261,
      120261
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      120262,
      120262
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      120263,
      120263
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      120264,
      120264
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      120265,
      120265
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      120266,
      120266
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      120267,
      120267
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      120268,
      120268
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      120269,
      120269
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      120270,
      120270
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      120271,
      120271
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      120272,
      120272
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      120273,
      120273
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      120274,
      120274
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      120275,
      120275
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      120276,
      120276
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      120277,
      120277
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      120278,
      120278
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      120279,
      120279
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      120280,
      120280
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      120281,
      120281
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      120282,
      120282
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      120283,
      120283
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      120284,
      120284
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      120285,
      120285
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      120286,
      120286
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      120287,
      120287
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      120288,
      120288
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      120289,
      120289
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      120290,
      120290
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      120291,
      120291
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      120292,
      120292
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      120293,
      120293
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      120294,
      120294
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      120295,
      120295
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      120296,
      120296
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      120297,
      120297
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      120298,
      120298
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      120299,
      120299
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      120300,
      120300
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      120301,
      120301
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      120302,
      120302
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      120303,
      120303
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      120304,
      120304
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      120305,
      120305
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      120306,
      120306
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      120307,
      120307
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      120308,
      120308
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      120309,
      120309
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      120310,
      120310
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      120311,
      120311
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      120312,
      120312
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      120313,
      120313
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      120314,
      120314
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      120315,
      120315
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      120316,
      120316
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      120317,
      120317
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      120318,
      120318
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      120319,
      120319
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      120320,
      120320
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      120321,
      120321
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      120322,
      120322
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      120323,
      120323
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      120324,
      120324
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      120325,
      120325
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      120326,
      120326
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      120327,
      120327
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      120328,
      120328
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      120329,
      120329
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      120330,
      120330
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      120331,
      120331
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      120332,
      120332
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      120333,
      120333
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      120334,
      120334
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      120335,
      120335
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      120336,
      120336
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      120337,
      120337
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      120338,
      120338
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      120339,
      120339
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      120340,
      120340
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      120341,
      120341
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      120342,
      120342
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      120343,
      120343
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      120344,
      120344
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      120345,
      120345
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      120346,
      120346
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      120347,
      120347
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      120348,
      120348
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      120349,
      120349
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      120350,
      120350
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      120351,
      120351
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      120352,
      120352
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      120353,
      120353
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      120354,
      120354
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      120355,
      120355
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      120356,
      120356
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      120357,
      120357
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      120358,
      120358
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      120359,
      120359
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      120360,
      120360
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      120361,
      120361
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      120362,
      120362
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      120363,
      120363
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      120364,
      120364
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      120365,
      120365
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      120366,
      120366
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      120367,
      120367
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      120368,
      120368
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      120369,
      120369
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      120370,
      120370
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      120371,
      120371
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      120372,
      120372
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      120373,
      120373
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      120374,
      120374
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      120375,
      120375
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      120376,
      120376
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      120377,
      120377
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      120378,
      120378
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      120379,
      120379
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      120380,
      120380
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      120381,
      120381
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      120382,
      120382
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      120383,
      120383
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      120384,
      120384
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      120385,
      120385
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      120386,
      120386
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      120387,
      120387
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      120388,
      120388
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      120389,
      120389
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      120390,
      120390
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      120391,
      120391
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      120392,
      120392
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      120393,
      120393
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      120394,
      120394
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      120395,
      120395
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      120396,
      120396
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      120397,
      120397
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      120398,
      120398
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      120399,
      120399
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      120400,
      120400
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      120401,
      120401
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      120402,
      120402
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      120403,
      120403
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      120404,
      120404
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      120405,
      120405
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      120406,
      120406
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      120407,
      120407
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      120408,
      120408
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      120409,
      120409
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      120410,
      120410
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      120411,
      120411
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      120412,
      120412
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      120413,
      120413
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      120414,
      120414
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      120415,
      120415
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      120416,
      120416
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      120417,
      120417
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      120418,
      120418
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      120419,
      120419
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      120420,
      120420
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      120421,
      120421
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      120422,
      120422
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      120423,
      120423
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      120424,
      120424
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      120425,
      120425
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      120426,
      120426
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      120427,
      120427
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      120428,
      120428
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      120429,
      120429
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      120430,
      120430
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      120431,
      120431
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      120432,
      120432
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      120433,
      120433
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      120434,
      120434
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      120435,
      120435
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      120436,
      120436
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      120437,
      120437
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      120438,
      120438
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      120439,
      120439
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      120440,
      120440
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      120441,
      120441
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      120442,
      120442
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      120443,
      120443
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      120444,
      120444
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      120445,
      120445
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      120446,
      120446
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      120447,
      120447
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      120448,
      120448
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      120449,
      120449
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      120450,
      120450
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      120451,
      120451
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      120452,
      120452
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      120453,
      120453
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      120454,
      120454
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      120455,
      120455
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      120456,
      120456
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      120457,
      120457
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      120458,
      120458
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      120459,
      120459
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      120460,
      120460
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      120461,
      120461
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      120462,
      120462
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      120463,
      120463
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      120464,
      120464
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      120465,
      120465
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      120466,
      120466
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      120467,
      120467
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      120468,
      120468
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      120469,
      120469
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      120470,
      120470
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      120471,
      120471
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      120472,
      120472
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      120473,
      120473
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      120474,
      120474
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      120475,
      120475
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      120476,
      120476
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      120477,
      120477
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      120478,
      120478
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      120479,
      120479
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      120480,
      120480
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      120481,
      120481
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      120482,
      120482
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      120483,
      120483
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      120484,
      120484
    ],
    "mapped",
    [
      305
    ]
  ],
  [
    [
      120485,
      120485
    ],
    "mapped",
    [
      567
    ]
  ],
  [
    [
      120486,
      120487
    ],
    "disallowed"
  ],
  [
    [
      120488,
      120488
    ],
    "mapped",
    [
      945
    ]
  ],
  [
    [
      120489,
      120489
    ],
    "mapped",
    [
      946
    ]
  ],
  [
    [
      120490,
      120490
    ],
    "mapped",
    [
      947
    ]
  ],
  [
    [
      120491,
      120491
    ],
    "mapped",
    [
      948
    ]
  ],
  [
    [
      120492,
      120492
    ],
    "mapped",
    [
      949
    ]
  ],
  [
    [
      120493,
      120493
    ],
    "mapped",
    [
      950
    ]
  ],
  [
    [
      120494,
      120494
    ],
    "mapped",
    [
      951
    ]
  ],
  [
    [
      120495,
      120495
    ],
    "mapped",
    [
      952
    ]
  ],
  [
    [
      120496,
      120496
    ],
    "mapped",
    [
      953
    ]
  ],
  [
    [
      120497,
      120497
    ],
    "mapped",
    [
      954
    ]
  ],
  [
    [
      120498,
      120498
    ],
    "mapped",
    [
      955
    ]
  ],
  [
    [
      120499,
      120499
    ],
    "mapped",
    [
      956
    ]
  ],
  [
    [
      120500,
      120500
    ],
    "mapped",
    [
      957
    ]
  ],
  [
    [
      120501,
      120501
    ],
    "mapped",
    [
      958
    ]
  ],
  [
    [
      120502,
      120502
    ],
    "mapped",
    [
      959
    ]
  ],
  [
    [
      120503,
      120503
    ],
    "mapped",
    [
      960
    ]
  ],
  [
    [
      120504,
      120504
    ],
    "mapped",
    [
      961
    ]
  ],
  [
    [
      120505,
      120505
    ],
    "mapped",
    [
      952
    ]
  ],
  [
    [
      120506,
      120506
    ],
    "mapped",
    [
      963
    ]
  ],
  [
    [
      120507,
      120507
    ],
    "mapped",
    [
      964
    ]
  ],
  [
    [
      120508,
      120508
    ],
    "mapped",
    [
      965
    ]
  ],
  [
    [
      120509,
      120509
    ],
    "mapped",
    [
      966
    ]
  ],
  [
    [
      120510,
      120510
    ],
    "mapped",
    [
      967
    ]
  ],
  [
    [
      120511,
      120511
    ],
    "mapped",
    [
      968
    ]
  ],
  [
    [
      120512,
      120512
    ],
    "mapped",
    [
      969
    ]
  ],
  [
    [
      120513,
      120513
    ],
    "mapped",
    [
      8711
    ]
  ],
  [
    [
      120514,
      120514
    ],
    "mapped",
    [
      945
    ]
  ],
  [
    [
      120515,
      120515
    ],
    "mapped",
    [
      946
    ]
  ],
  [
    [
      120516,
      120516
    ],
    "mapped",
    [
      947
    ]
  ],
  [
    [
      120517,
      120517
    ],
    "mapped",
    [
      948
    ]
  ],
  [
    [
      120518,
      120518
    ],
    "mapped",
    [
      949
    ]
  ],
  [
    [
      120519,
      120519
    ],
    "mapped",
    [
      950
    ]
  ],
  [
    [
      120520,
      120520
    ],
    "mapped",
    [
      951
    ]
  ],
  [
    [
      120521,
      120521
    ],
    "mapped",
    [
      952
    ]
  ],
  [
    [
      120522,
      120522
    ],
    "mapped",
    [
      953
    ]
  ],
  [
    [
      120523,
      120523
    ],
    "mapped",
    [
      954
    ]
  ],
  [
    [
      120524,
      120524
    ],
    "mapped",
    [
      955
    ]
  ],
  [
    [
      120525,
      120525
    ],
    "mapped",
    [
      956
    ]
  ],
  [
    [
      120526,
      120526
    ],
    "mapped",
    [
      957
    ]
  ],
  [
    [
      120527,
      120527
    ],
    "mapped",
    [
      958
    ]
  ],
  [
    [
      120528,
      120528
    ],
    "mapped",
    [
      959
    ]
  ],
  [
    [
      120529,
      120529
    ],
    "mapped",
    [
      960
    ]
  ],
  [
    [
      120530,
      120530
    ],
    "mapped",
    [
      961
    ]
  ],
  [
    [
      120531,
      120532
    ],
    "mapped",
    [
      963
    ]
  ],
  [
    [
      120533,
      120533
    ],
    "mapped",
    [
      964
    ]
  ],
  [
    [
      120534,
      120534
    ],
    "mapped",
    [
      965
    ]
  ],
  [
    [
      120535,
      120535
    ],
    "mapped",
    [
      966
    ]
  ],
  [
    [
      120536,
      120536
    ],
    "mapped",
    [
      967
    ]
  ],
  [
    [
      120537,
      120537
    ],
    "mapped",
    [
      968
    ]
  ],
  [
    [
      120538,
      120538
    ],
    "mapped",
    [
      969
    ]
  ],
  [
    [
      120539,
      120539
    ],
    "mapped",
    [
      8706
    ]
  ],
  [
    [
      120540,
      120540
    ],
    "mapped",
    [
      949
    ]
  ],
  [
    [
      120541,
      120541
    ],
    "mapped",
    [
      952
    ]
  ],
  [
    [
      120542,
      120542
    ],
    "mapped",
    [
      954
    ]
  ],
  [
    [
      120543,
      120543
    ],
    "mapped",
    [
      966
    ]
  ],
  [
    [
      120544,
      120544
    ],
    "mapped",
    [
      961
    ]
  ],
  [
    [
      120545,
      120545
    ],
    "mapped",
    [
      960
    ]
  ],
  [
    [
      120546,
      120546
    ],
    "mapped",
    [
      945
    ]
  ],
  [
    [
      120547,
      120547
    ],
    "mapped",
    [
      946
    ]
  ],
  [
    [
      120548,
      120548
    ],
    "mapped",
    [
      947
    ]
  ],
  [
    [
      120549,
      120549
    ],
    "mapped",
    [
      948
    ]
  ],
  [
    [
      120550,
      120550
    ],
    "mapped",
    [
      949
    ]
  ],
  [
    [
      120551,
      120551
    ],
    "mapped",
    [
      950
    ]
  ],
  [
    [
      120552,
      120552
    ],
    "mapped",
    [
      951
    ]
  ],
  [
    [
      120553,
      120553
    ],
    "mapped",
    [
      952
    ]
  ],
  [
    [
      120554,
      120554
    ],
    "mapped",
    [
      953
    ]
  ],
  [
    [
      120555,
      120555
    ],
    "mapped",
    [
      954
    ]
  ],
  [
    [
      120556,
      120556
    ],
    "mapped",
    [
      955
    ]
  ],
  [
    [
      120557,
      120557
    ],
    "mapped",
    [
      956
    ]
  ],
  [
    [
      120558,
      120558
    ],
    "mapped",
    [
      957
    ]
  ],
  [
    [
      120559,
      120559
    ],
    "mapped",
    [
      958
    ]
  ],
  [
    [
      120560,
      120560
    ],
    "mapped",
    [
      959
    ]
  ],
  [
    [
      120561,
      120561
    ],
    "mapped",
    [
      960
    ]
  ],
  [
    [
      120562,
      120562
    ],
    "mapped",
    [
      961
    ]
  ],
  [
    [
      120563,
      120563
    ],
    "mapped",
    [
      952
    ]
  ],
  [
    [
      120564,
      120564
    ],
    "mapped",
    [
      963
    ]
  ],
  [
    [
      120565,
      120565
    ],
    "mapped",
    [
      964
    ]
  ],
  [
    [
      120566,
      120566
    ],
    "mapped",
    [
      965
    ]
  ],
  [
    [
      120567,
      120567
    ],
    "mapped",
    [
      966
    ]
  ],
  [
    [
      120568,
      120568
    ],
    "mapped",
    [
      967
    ]
  ],
  [
    [
      120569,
      120569
    ],
    "mapped",
    [
      968
    ]
  ],
  [
    [
      120570,
      120570
    ],
    "mapped",
    [
      969
    ]
  ],
  [
    [
      120571,
      120571
    ],
    "mapped",
    [
      8711
    ]
  ],
  [
    [
      120572,
      120572
    ],
    "mapped",
    [
      945
    ]
  ],
  [
    [
      120573,
      120573
    ],
    "mapped",
    [
      946
    ]
  ],
  [
    [
      120574,
      120574
    ],
    "mapped",
    [
      947
    ]
  ],
  [
    [
      120575,
      120575
    ],
    "mapped",
    [
      948
    ]
  ],
  [
    [
      120576,
      120576
    ],
    "mapped",
    [
      949
    ]
  ],
  [
    [
      120577,
      120577
    ],
    "mapped",
    [
      950
    ]
  ],
  [
    [
      120578,
      120578
    ],
    "mapped",
    [
      951
    ]
  ],
  [
    [
      120579,
      120579
    ],
    "mapped",
    [
      952
    ]
  ],
  [
    [
      120580,
      120580
    ],
    "mapped",
    [
      953
    ]
  ],
  [
    [
      120581,
      120581
    ],
    "mapped",
    [
      954
    ]
  ],
  [
    [
      120582,
      120582
    ],
    "mapped",
    [
      955
    ]
  ],
  [
    [
      120583,
      120583
    ],
    "mapped",
    [
      956
    ]
  ],
  [
    [
      120584,
      120584
    ],
    "mapped",
    [
      957
    ]
  ],
  [
    [
      120585,
      120585
    ],
    "mapped",
    [
      958
    ]
  ],
  [
    [
      120586,
      120586
    ],
    "mapped",
    [
      959
    ]
  ],
  [
    [
      120587,
      120587
    ],
    "mapped",
    [
      960
    ]
  ],
  [
    [
      120588,
      120588
    ],
    "mapped",
    [
      961
    ]
  ],
  [
    [
      120589,
      120590
    ],
    "mapped",
    [
      963
    ]
  ],
  [
    [
      120591,
      120591
    ],
    "mapped",
    [
      964
    ]
  ],
  [
    [
      120592,
      120592
    ],
    "mapped",
    [
      965
    ]
  ],
  [
    [
      120593,
      120593
    ],
    "mapped",
    [
      966
    ]
  ],
  [
    [
      120594,
      120594
    ],
    "mapped",
    [
      967
    ]
  ],
  [
    [
      120595,
      120595
    ],
    "mapped",
    [
      968
    ]
  ],
  [
    [
      120596,
      120596
    ],
    "mapped",
    [
      969
    ]
  ],
  [
    [
      120597,
      120597
    ],
    "mapped",
    [
      8706
    ]
  ],
  [
    [
      120598,
      120598
    ],
    "mapped",
    [
      949
    ]
  ],
  [
    [
      120599,
      120599
    ],
    "mapped",
    [
      952
    ]
  ],
  [
    [
      120600,
      120600
    ],
    "mapped",
    [
      954
    ]
  ],
  [
    [
      120601,
      120601
    ],
    "mapped",
    [
      966
    ]
  ],
  [
    [
      120602,
      120602
    ],
    "mapped",
    [
      961
    ]
  ],
  [
    [
      120603,
      120603
    ],
    "mapped",
    [
      960
    ]
  ],
  [
    [
      120604,
      120604
    ],
    "mapped",
    [
      945
    ]
  ],
  [
    [
      120605,
      120605
    ],
    "mapped",
    [
      946
    ]
  ],
  [
    [
      120606,
      120606
    ],
    "mapped",
    [
      947
    ]
  ],
  [
    [
      120607,
      120607
    ],
    "mapped",
    [
      948
    ]
  ],
  [
    [
      120608,
      120608
    ],
    "mapped",
    [
      949
    ]
  ],
  [
    [
      120609,
      120609
    ],
    "mapped",
    [
      950
    ]
  ],
  [
    [
      120610,
      120610
    ],
    "mapped",
    [
      951
    ]
  ],
  [
    [
      120611,
      120611
    ],
    "mapped",
    [
      952
    ]
  ],
  [
    [
      120612,
      120612
    ],
    "mapped",
    [
      953
    ]
  ],
  [
    [
      120613,
      120613
    ],
    "mapped",
    [
      954
    ]
  ],
  [
    [
      120614,
      120614
    ],
    "mapped",
    [
      955
    ]
  ],
  [
    [
      120615,
      120615
    ],
    "mapped",
    [
      956
    ]
  ],
  [
    [
      120616,
      120616
    ],
    "mapped",
    [
      957
    ]
  ],
  [
    [
      120617,
      120617
    ],
    "mapped",
    [
      958
    ]
  ],
  [
    [
      120618,
      120618
    ],
    "mapped",
    [
      959
    ]
  ],
  [
    [
      120619,
      120619
    ],
    "mapped",
    [
      960
    ]
  ],
  [
    [
      120620,
      120620
    ],
    "mapped",
    [
      961
    ]
  ],
  [
    [
      120621,
      120621
    ],
    "mapped",
    [
      952
    ]
  ],
  [
    [
      120622,
      120622
    ],
    "mapped",
    [
      963
    ]
  ],
  [
    [
      120623,
      120623
    ],
    "mapped",
    [
      964
    ]
  ],
  [
    [
      120624,
      120624
    ],
    "mapped",
    [
      965
    ]
  ],
  [
    [
      120625,
      120625
    ],
    "mapped",
    [
      966
    ]
  ],
  [
    [
      120626,
      120626
    ],
    "mapped",
    [
      967
    ]
  ],
  [
    [
      120627,
      120627
    ],
    "mapped",
    [
      968
    ]
  ],
  [
    [
      120628,
      120628
    ],
    "mapped",
    [
      969
    ]
  ],
  [
    [
      120629,
      120629
    ],
    "mapped",
    [
      8711
    ]
  ],
  [
    [
      120630,
      120630
    ],
    "mapped",
    [
      945
    ]
  ],
  [
    [
      120631,
      120631
    ],
    "mapped",
    [
      946
    ]
  ],
  [
    [
      120632,
      120632
    ],
    "mapped",
    [
      947
    ]
  ],
  [
    [
      120633,
      120633
    ],
    "mapped",
    [
      948
    ]
  ],
  [
    [
      120634,
      120634
    ],
    "mapped",
    [
      949
    ]
  ],
  [
    [
      120635,
      120635
    ],
    "mapped",
    [
      950
    ]
  ],
  [
    [
      120636,
      120636
    ],
    "mapped",
    [
      951
    ]
  ],
  [
    [
      120637,
      120637
    ],
    "mapped",
    [
      952
    ]
  ],
  [
    [
      120638,
      120638
    ],
    "mapped",
    [
      953
    ]
  ],
  [
    [
      120639,
      120639
    ],
    "mapped",
    [
      954
    ]
  ],
  [
    [
      120640,
      120640
    ],
    "mapped",
    [
      955
    ]
  ],
  [
    [
      120641,
      120641
    ],
    "mapped",
    [
      956
    ]
  ],
  [
    [
      120642,
      120642
    ],
    "mapped",
    [
      957
    ]
  ],
  [
    [
      120643,
      120643
    ],
    "mapped",
    [
      958
    ]
  ],
  [
    [
      120644,
      120644
    ],
    "mapped",
    [
      959
    ]
  ],
  [
    [
      120645,
      120645
    ],
    "mapped",
    [
      960
    ]
  ],
  [
    [
      120646,
      120646
    ],
    "mapped",
    [
      961
    ]
  ],
  [
    [
      120647,
      120648
    ],
    "mapped",
    [
      963
    ]
  ],
  [
    [
      120649,
      120649
    ],
    "mapped",
    [
      964
    ]
  ],
  [
    [
      120650,
      120650
    ],
    "mapped",
    [
      965
    ]
  ],
  [
    [
      120651,
      120651
    ],
    "mapped",
    [
      966
    ]
  ],
  [
    [
      120652,
      120652
    ],
    "mapped",
    [
      967
    ]
  ],
  [
    [
      120653,
      120653
    ],
    "mapped",
    [
      968
    ]
  ],
  [
    [
      120654,
      120654
    ],
    "mapped",
    [
      969
    ]
  ],
  [
    [
      120655,
      120655
    ],
    "mapped",
    [
      8706
    ]
  ],
  [
    [
      120656,
      120656
    ],
    "mapped",
    [
      949
    ]
  ],
  [
    [
      120657,
      120657
    ],
    "mapped",
    [
      952
    ]
  ],
  [
    [
      120658,
      120658
    ],
    "mapped",
    [
      954
    ]
  ],
  [
    [
      120659,
      120659
    ],
    "mapped",
    [
      966
    ]
  ],
  [
    [
      120660,
      120660
    ],
    "mapped",
    [
      961
    ]
  ],
  [
    [
      120661,
      120661
    ],
    "mapped",
    [
      960
    ]
  ],
  [
    [
      120662,
      120662
    ],
    "mapped",
    [
      945
    ]
  ],
  [
    [
      120663,
      120663
    ],
    "mapped",
    [
      946
    ]
  ],
  [
    [
      120664,
      120664
    ],
    "mapped",
    [
      947
    ]
  ],
  [
    [
      120665,
      120665
    ],
    "mapped",
    [
      948
    ]
  ],
  [
    [
      120666,
      120666
    ],
    "mapped",
    [
      949
    ]
  ],
  [
    [
      120667,
      120667
    ],
    "mapped",
    [
      950
    ]
  ],
  [
    [
      120668,
      120668
    ],
    "mapped",
    [
      951
    ]
  ],
  [
    [
      120669,
      120669
    ],
    "mapped",
    [
      952
    ]
  ],
  [
    [
      120670,
      120670
    ],
    "mapped",
    [
      953
    ]
  ],
  [
    [
      120671,
      120671
    ],
    "mapped",
    [
      954
    ]
  ],
  [
    [
      120672,
      120672
    ],
    "mapped",
    [
      955
    ]
  ],
  [
    [
      120673,
      120673
    ],
    "mapped",
    [
      956
    ]
  ],
  [
    [
      120674,
      120674
    ],
    "mapped",
    [
      957
    ]
  ],
  [
    [
      120675,
      120675
    ],
    "mapped",
    [
      958
    ]
  ],
  [
    [
      120676,
      120676
    ],
    "mapped",
    [
      959
    ]
  ],
  [
    [
      120677,
      120677
    ],
    "mapped",
    [
      960
    ]
  ],
  [
    [
      120678,
      120678
    ],
    "mapped",
    [
      961
    ]
  ],
  [
    [
      120679,
      120679
    ],
    "mapped",
    [
      952
    ]
  ],
  [
    [
      120680,
      120680
    ],
    "mapped",
    [
      963
    ]
  ],
  [
    [
      120681,
      120681
    ],
    "mapped",
    [
      964
    ]
  ],
  [
    [
      120682,
      120682
    ],
    "mapped",
    [
      965
    ]
  ],
  [
    [
      120683,
      120683
    ],
    "mapped",
    [
      966
    ]
  ],
  [
    [
      120684,
      120684
    ],
    "mapped",
    [
      967
    ]
  ],
  [
    [
      120685,
      120685
    ],
    "mapped",
    [
      968
    ]
  ],
  [
    [
      120686,
      120686
    ],
    "mapped",
    [
      969
    ]
  ],
  [
    [
      120687,
      120687
    ],
    "mapped",
    [
      8711
    ]
  ],
  [
    [
      120688,
      120688
    ],
    "mapped",
    [
      945
    ]
  ],
  [
    [
      120689,
      120689
    ],
    "mapped",
    [
      946
    ]
  ],
  [
    [
      120690,
      120690
    ],
    "mapped",
    [
      947
    ]
  ],
  [
    [
      120691,
      120691
    ],
    "mapped",
    [
      948
    ]
  ],
  [
    [
      120692,
      120692
    ],
    "mapped",
    [
      949
    ]
  ],
  [
    [
      120693,
      120693
    ],
    "mapped",
    [
      950
    ]
  ],
  [
    [
      120694,
      120694
    ],
    "mapped",
    [
      951
    ]
  ],
  [
    [
      120695,
      120695
    ],
    "mapped",
    [
      952
    ]
  ],
  [
    [
      120696,
      120696
    ],
    "mapped",
    [
      953
    ]
  ],
  [
    [
      120697,
      120697
    ],
    "mapped",
    [
      954
    ]
  ],
  [
    [
      120698,
      120698
    ],
    "mapped",
    [
      955
    ]
  ],
  [
    [
      120699,
      120699
    ],
    "mapped",
    [
      956
    ]
  ],
  [
    [
      120700,
      120700
    ],
    "mapped",
    [
      957
    ]
  ],
  [
    [
      120701,
      120701
    ],
    "mapped",
    [
      958
    ]
  ],
  [
    [
      120702,
      120702
    ],
    "mapped",
    [
      959
    ]
  ],
  [
    [
      120703,
      120703
    ],
    "mapped",
    [
      960
    ]
  ],
  [
    [
      120704,
      120704
    ],
    "mapped",
    [
      961
    ]
  ],
  [
    [
      120705,
      120706
    ],
    "mapped",
    [
      963
    ]
  ],
  [
    [
      120707,
      120707
    ],
    "mapped",
    [
      964
    ]
  ],
  [
    [
      120708,
      120708
    ],
    "mapped",
    [
      965
    ]
  ],
  [
    [
      120709,
      120709
    ],
    "mapped",
    [
      966
    ]
  ],
  [
    [
      120710,
      120710
    ],
    "mapped",
    [
      967
    ]
  ],
  [
    [
      120711,
      120711
    ],
    "mapped",
    [
      968
    ]
  ],
  [
    [
      120712,
      120712
    ],
    "mapped",
    [
      969
    ]
  ],
  [
    [
      120713,
      120713
    ],
    "mapped",
    [
      8706
    ]
  ],
  [
    [
      120714,
      120714
    ],
    "mapped",
    [
      949
    ]
  ],
  [
    [
      120715,
      120715
    ],
    "mapped",
    [
      952
    ]
  ],
  [
    [
      120716,
      120716
    ],
    "mapped",
    [
      954
    ]
  ],
  [
    [
      120717,
      120717
    ],
    "mapped",
    [
      966
    ]
  ],
  [
    [
      120718,
      120718
    ],
    "mapped",
    [
      961
    ]
  ],
  [
    [
      120719,
      120719
    ],
    "mapped",
    [
      960
    ]
  ],
  [
    [
      120720,
      120720
    ],
    "mapped",
    [
      945
    ]
  ],
  [
    [
      120721,
      120721
    ],
    "mapped",
    [
      946
    ]
  ],
  [
    [
      120722,
      120722
    ],
    "mapped",
    [
      947
    ]
  ],
  [
    [
      120723,
      120723
    ],
    "mapped",
    [
      948
    ]
  ],
  [
    [
      120724,
      120724
    ],
    "mapped",
    [
      949
    ]
  ],
  [
    [
      120725,
      120725
    ],
    "mapped",
    [
      950
    ]
  ],
  [
    [
      120726,
      120726
    ],
    "mapped",
    [
      951
    ]
  ],
  [
    [
      120727,
      120727
    ],
    "mapped",
    [
      952
    ]
  ],
  [
    [
      120728,
      120728
    ],
    "mapped",
    [
      953
    ]
  ],
  [
    [
      120729,
      120729
    ],
    "mapped",
    [
      954
    ]
  ],
  [
    [
      120730,
      120730
    ],
    "mapped",
    [
      955
    ]
  ],
  [
    [
      120731,
      120731
    ],
    "mapped",
    [
      956
    ]
  ],
  [
    [
      120732,
      120732
    ],
    "mapped",
    [
      957
    ]
  ],
  [
    [
      120733,
      120733
    ],
    "mapped",
    [
      958
    ]
  ],
  [
    [
      120734,
      120734
    ],
    "mapped",
    [
      959
    ]
  ],
  [
    [
      120735,
      120735
    ],
    "mapped",
    [
      960
    ]
  ],
  [
    [
      120736,
      120736
    ],
    "mapped",
    [
      961
    ]
  ],
  [
    [
      120737,
      120737
    ],
    "mapped",
    [
      952
    ]
  ],
  [
    [
      120738,
      120738
    ],
    "mapped",
    [
      963
    ]
  ],
  [
    [
      120739,
      120739
    ],
    "mapped",
    [
      964
    ]
  ],
  [
    [
      120740,
      120740
    ],
    "mapped",
    [
      965
    ]
  ],
  [
    [
      120741,
      120741
    ],
    "mapped",
    [
      966
    ]
  ],
  [
    [
      120742,
      120742
    ],
    "mapped",
    [
      967
    ]
  ],
  [
    [
      120743,
      120743
    ],
    "mapped",
    [
      968
    ]
  ],
  [
    [
      120744,
      120744
    ],
    "mapped",
    [
      969
    ]
  ],
  [
    [
      120745,
      120745
    ],
    "mapped",
    [
      8711
    ]
  ],
  [
    [
      120746,
      120746
    ],
    "mapped",
    [
      945
    ]
  ],
  [
    [
      120747,
      120747
    ],
    "mapped",
    [
      946
    ]
  ],
  [
    [
      120748,
      120748
    ],
    "mapped",
    [
      947
    ]
  ],
  [
    [
      120749,
      120749
    ],
    "mapped",
    [
      948
    ]
  ],
  [
    [
      120750,
      120750
    ],
    "mapped",
    [
      949
    ]
  ],
  [
    [
      120751,
      120751
    ],
    "mapped",
    [
      950
    ]
  ],
  [
    [
      120752,
      120752
    ],
    "mapped",
    [
      951
    ]
  ],
  [
    [
      120753,
      120753
    ],
    "mapped",
    [
      952
    ]
  ],
  [
    [
      120754,
      120754
    ],
    "mapped",
    [
      953
    ]
  ],
  [
    [
      120755,
      120755
    ],
    "mapped",
    [
      954
    ]
  ],
  [
    [
      120756,
      120756
    ],
    "mapped",
    [
      955
    ]
  ],
  [
    [
      120757,
      120757
    ],
    "mapped",
    [
      956
    ]
  ],
  [
    [
      120758,
      120758
    ],
    "mapped",
    [
      957
    ]
  ],
  [
    [
      120759,
      120759
    ],
    "mapped",
    [
      958
    ]
  ],
  [
    [
      120760,
      120760
    ],
    "mapped",
    [
      959
    ]
  ],
  [
    [
      120761,
      120761
    ],
    "mapped",
    [
      960
    ]
  ],
  [
    [
      120762,
      120762
    ],
    "mapped",
    [
      961
    ]
  ],
  [
    [
      120763,
      120764
    ],
    "mapped",
    [
      963
    ]
  ],
  [
    [
      120765,
      120765
    ],
    "mapped",
    [
      964
    ]
  ],
  [
    [
      120766,
      120766
    ],
    "mapped",
    [
      965
    ]
  ],
  [
    [
      120767,
      120767
    ],
    "mapped",
    [
      966
    ]
  ],
  [
    [
      120768,
      120768
    ],
    "mapped",
    [
      967
    ]
  ],
  [
    [
      120769,
      120769
    ],
    "mapped",
    [
      968
    ]
  ],
  [
    [
      120770,
      120770
    ],
    "mapped",
    [
      969
    ]
  ],
  [
    [
      120771,
      120771
    ],
    "mapped",
    [
      8706
    ]
  ],
  [
    [
      120772,
      120772
    ],
    "mapped",
    [
      949
    ]
  ],
  [
    [
      120773,
      120773
    ],
    "mapped",
    [
      952
    ]
  ],
  [
    [
      120774,
      120774
    ],
    "mapped",
    [
      954
    ]
  ],
  [
    [
      120775,
      120775
    ],
    "mapped",
    [
      966
    ]
  ],
  [
    [
      120776,
      120776
    ],
    "mapped",
    [
      961
    ]
  ],
  [
    [
      120777,
      120777
    ],
    "mapped",
    [
      960
    ]
  ],
  [
    [
      120778,
      120779
    ],
    "mapped",
    [
      989
    ]
  ],
  [
    [
      120780,
      120781
    ],
    "disallowed"
  ],
  [
    [
      120782,
      120782
    ],
    "mapped",
    [
      48
    ]
  ],
  [
    [
      120783,
      120783
    ],
    "mapped",
    [
      49
    ]
  ],
  [
    [
      120784,
      120784
    ],
    "mapped",
    [
      50
    ]
  ],
  [
    [
      120785,
      120785
    ],
    "mapped",
    [
      51
    ]
  ],
  [
    [
      120786,
      120786
    ],
    "mapped",
    [
      52
    ]
  ],
  [
    [
      120787,
      120787
    ],
    "mapped",
    [
      53
    ]
  ],
  [
    [
      120788,
      120788
    ],
    "mapped",
    [
      54
    ]
  ],
  [
    [
      120789,
      120789
    ],
    "mapped",
    [
      55
    ]
  ],
  [
    [
      120790,
      120790
    ],
    "mapped",
    [
      56
    ]
  ],
  [
    [
      120791,
      120791
    ],
    "mapped",
    [
      57
    ]
  ],
  [
    [
      120792,
      120792
    ],
    "mapped",
    [
      48
    ]
  ],
  [
    [
      120793,
      120793
    ],
    "mapped",
    [
      49
    ]
  ],
  [
    [
      120794,
      120794
    ],
    "mapped",
    [
      50
    ]
  ],
  [
    [
      120795,
      120795
    ],
    "mapped",
    [
      51
    ]
  ],
  [
    [
      120796,
      120796
    ],
    "mapped",
    [
      52
    ]
  ],
  [
    [
      120797,
      120797
    ],
    "mapped",
    [
      53
    ]
  ],
  [
    [
      120798,
      120798
    ],
    "mapped",
    [
      54
    ]
  ],
  [
    [
      120799,
      120799
    ],
    "mapped",
    [
      55
    ]
  ],
  [
    [
      120800,
      120800
    ],
    "mapped",
    [
      56
    ]
  ],
  [
    [
      120801,
      120801
    ],
    "mapped",
    [
      57
    ]
  ],
  [
    [
      120802,
      120802
    ],
    "mapped",
    [
      48
    ]
  ],
  [
    [
      120803,
      120803
    ],
    "mapped",
    [
      49
    ]
  ],
  [
    [
      120804,
      120804
    ],
    "mapped",
    [
      50
    ]
  ],
  [
    [
      120805,
      120805
    ],
    "mapped",
    [
      51
    ]
  ],
  [
    [
      120806,
      120806
    ],
    "mapped",
    [
      52
    ]
  ],
  [
    [
      120807,
      120807
    ],
    "mapped",
    [
      53
    ]
  ],
  [
    [
      120808,
      120808
    ],
    "mapped",
    [
      54
    ]
  ],
  [
    [
      120809,
      120809
    ],
    "mapped",
    [
      55
    ]
  ],
  [
    [
      120810,
      120810
    ],
    "mapped",
    [
      56
    ]
  ],
  [
    [
      120811,
      120811
    ],
    "mapped",
    [
      57
    ]
  ],
  [
    [
      120812,
      120812
    ],
    "mapped",
    [
      48
    ]
  ],
  [
    [
      120813,
      120813
    ],
    "mapped",
    [
      49
    ]
  ],
  [
    [
      120814,
      120814
    ],
    "mapped",
    [
      50
    ]
  ],
  [
    [
      120815,
      120815
    ],
    "mapped",
    [
      51
    ]
  ],
  [
    [
      120816,
      120816
    ],
    "mapped",
    [
      52
    ]
  ],
  [
    [
      120817,
      120817
    ],
    "mapped",
    [
      53
    ]
  ],
  [
    [
      120818,
      120818
    ],
    "mapped",
    [
      54
    ]
  ],
  [
    [
      120819,
      120819
    ],
    "mapped",
    [
      55
    ]
  ],
  [
    [
      120820,
      120820
    ],
    "mapped",
    [
      56
    ]
  ],
  [
    [
      120821,
      120821
    ],
    "mapped",
    [
      57
    ]
  ],
  [
    [
      120822,
      120822
    ],
    "mapped",
    [
      48
    ]
  ],
  [
    [
      120823,
      120823
    ],
    "mapped",
    [
      49
    ]
  ],
  [
    [
      120824,
      120824
    ],
    "mapped",
    [
      50
    ]
  ],
  [
    [
      120825,
      120825
    ],
    "mapped",
    [
      51
    ]
  ],
  [
    [
      120826,
      120826
    ],
    "mapped",
    [
      52
    ]
  ],
  [
    [
      120827,
      120827
    ],
    "mapped",
    [
      53
    ]
  ],
  [
    [
      120828,
      120828
    ],
    "mapped",
    [
      54
    ]
  ],
  [
    [
      120829,
      120829
    ],
    "mapped",
    [
      55
    ]
  ],
  [
    [
      120830,
      120830
    ],
    "mapped",
    [
      56
    ]
  ],
  [
    [
      120831,
      120831
    ],
    "mapped",
    [
      57
    ]
  ],
  [
    [
      120832,
      121343
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      121344,
      121398
    ],
    "valid"
  ],
  [
    [
      121399,
      121402
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      121403,
      121452
    ],
    "valid"
  ],
  [
    [
      121453,
      121460
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      121461,
      121461
    ],
    "valid"
  ],
  [
    [
      121462,
      121475
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      121476,
      121476
    ],
    "valid"
  ],
  [
    [
      121477,
      121483
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      121484,
      121498
    ],
    "disallowed"
  ],
  [
    [
      121499,
      121503
    ],
    "valid"
  ],
  [
    [
      121504,
      121504
    ],
    "disallowed"
  ],
  [
    [
      121505,
      121519
    ],
    "valid"
  ],
  [
    [
      121520,
      124927
    ],
    "disallowed"
  ],
  [
    [
      124928,
      125124
    ],
    "valid"
  ],
  [
    [
      125125,
      125126
    ],
    "disallowed"
  ],
  [
    [
      125127,
      125135
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      125136,
      125142
    ],
    "valid"
  ],
  [
    [
      125143,
      126463
    ],
    "disallowed"
  ],
  [
    [
      126464,
      126464
    ],
    "mapped",
    [
      1575
    ]
  ],
  [
    [
      126465,
      126465
    ],
    "mapped",
    [
      1576
    ]
  ],
  [
    [
      126466,
      126466
    ],
    "mapped",
    [
      1580
    ]
  ],
  [
    [
      126467,
      126467
    ],
    "mapped",
    [
      1583
    ]
  ],
  [
    [
      126468,
      126468
    ],
    "disallowed"
  ],
  [
    [
      126469,
      126469
    ],
    "mapped",
    [
      1608
    ]
  ],
  [
    [
      126470,
      126470
    ],
    "mapped",
    [
      1586
    ]
  ],
  [
    [
      126471,
      126471
    ],
    "mapped",
    [
      1581
    ]
  ],
  [
    [
      126472,
      126472
    ],
    "mapped",
    [
      1591
    ]
  ],
  [
    [
      126473,
      126473
    ],
    "mapped",
    [
      1610
    ]
  ],
  [
    [
      126474,
      126474
    ],
    "mapped",
    [
      1603
    ]
  ],
  [
    [
      126475,
      126475
    ],
    "mapped",
    [
      1604
    ]
  ],
  [
    [
      126476,
      126476
    ],
    "mapped",
    [
      1605
    ]
  ],
  [
    [
      126477,
      126477
    ],
    "mapped",
    [
      1606
    ]
  ],
  [
    [
      126478,
      126478
    ],
    "mapped",
    [
      1587
    ]
  ],
  [
    [
      126479,
      126479
    ],
    "mapped",
    [
      1593
    ]
  ],
  [
    [
      126480,
      126480
    ],
    "mapped",
    [
      1601
    ]
  ],
  [
    [
      126481,
      126481
    ],
    "mapped",
    [
      1589
    ]
  ],
  [
    [
      126482,
      126482
    ],
    "mapped",
    [
      1602
    ]
  ],
  [
    [
      126483,
      126483
    ],
    "mapped",
    [
      1585
    ]
  ],
  [
    [
      126484,
      126484
    ],
    "mapped",
    [
      1588
    ]
  ],
  [
    [
      126485,
      126485
    ],
    "mapped",
    [
      1578
    ]
  ],
  [
    [
      126486,
      126486
    ],
    "mapped",
    [
      1579
    ]
  ],
  [
    [
      126487,
      126487
    ],
    "mapped",
    [
      1582
    ]
  ],
  [
    [
      126488,
      126488
    ],
    "mapped",
    [
      1584
    ]
  ],
  [
    [
      126489,
      126489
    ],
    "mapped",
    [
      1590
    ]
  ],
  [
    [
      126490,
      126490
    ],
    "mapped",
    [
      1592
    ]
  ],
  [
    [
      126491,
      126491
    ],
    "mapped",
    [
      1594
    ]
  ],
  [
    [
      126492,
      126492
    ],
    "mapped",
    [
      1646
    ]
  ],
  [
    [
      126493,
      126493
    ],
    "mapped",
    [
      1722
    ]
  ],
  [
    [
      126494,
      126494
    ],
    "mapped",
    [
      1697
    ]
  ],
  [
    [
      126495,
      126495
    ],
    "mapped",
    [
      1647
    ]
  ],
  [
    [
      126496,
      126496
    ],
    "disallowed"
  ],
  [
    [
      126497,
      126497
    ],
    "mapped",
    [
      1576
    ]
  ],
  [
    [
      126498,
      126498
    ],
    "mapped",
    [
      1580
    ]
  ],
  [
    [
      126499,
      126499
    ],
    "disallowed"
  ],
  [
    [
      126500,
      126500
    ],
    "mapped",
    [
      1607
    ]
  ],
  [
    [
      126501,
      126502
    ],
    "disallowed"
  ],
  [
    [
      126503,
      126503
    ],
    "mapped",
    [
      1581
    ]
  ],
  [
    [
      126504,
      126504
    ],
    "disallowed"
  ],
  [
    [
      126505,
      126505
    ],
    "mapped",
    [
      1610
    ]
  ],
  [
    [
      126506,
      126506
    ],
    "mapped",
    [
      1603
    ]
  ],
  [
    [
      126507,
      126507
    ],
    "mapped",
    [
      1604
    ]
  ],
  [
    [
      126508,
      126508
    ],
    "mapped",
    [
      1605
    ]
  ],
  [
    [
      126509,
      126509
    ],
    "mapped",
    [
      1606
    ]
  ],
  [
    [
      126510,
      126510
    ],
    "mapped",
    [
      1587
    ]
  ],
  [
    [
      126511,
      126511
    ],
    "mapped",
    [
      1593
    ]
  ],
  [
    [
      126512,
      126512
    ],
    "mapped",
    [
      1601
    ]
  ],
  [
    [
      126513,
      126513
    ],
    "mapped",
    [
      1589
    ]
  ],
  [
    [
      126514,
      126514
    ],
    "mapped",
    [
      1602
    ]
  ],
  [
    [
      126515,
      126515
    ],
    "disallowed"
  ],
  [
    [
      126516,
      126516
    ],
    "mapped",
    [
      1588
    ]
  ],
  [
    [
      126517,
      126517
    ],
    "mapped",
    [
      1578
    ]
  ],
  [
    [
      126518,
      126518
    ],
    "mapped",
    [
      1579
    ]
  ],
  [
    [
      126519,
      126519
    ],
    "mapped",
    [
      1582
    ]
  ],
  [
    [
      126520,
      126520
    ],
    "disallowed"
  ],
  [
    [
      126521,
      126521
    ],
    "mapped",
    [
      1590
    ]
  ],
  [
    [
      126522,
      126522
    ],
    "disallowed"
  ],
  [
    [
      126523,
      126523
    ],
    "mapped",
    [
      1594
    ]
  ],
  [
    [
      126524,
      126529
    ],
    "disallowed"
  ],
  [
    [
      126530,
      126530
    ],
    "mapped",
    [
      1580
    ]
  ],
  [
    [
      126531,
      126534
    ],
    "disallowed"
  ],
  [
    [
      126535,
      126535
    ],
    "mapped",
    [
      1581
    ]
  ],
  [
    [
      126536,
      126536
    ],
    "disallowed"
  ],
  [
    [
      126537,
      126537
    ],
    "mapped",
    [
      1610
    ]
  ],
  [
    [
      126538,
      126538
    ],
    "disallowed"
  ],
  [
    [
      126539,
      126539
    ],
    "mapped",
    [
      1604
    ]
  ],
  [
    [
      126540,
      126540
    ],
    "disallowed"
  ],
  [
    [
      126541,
      126541
    ],
    "mapped",
    [
      1606
    ]
  ],
  [
    [
      126542,
      126542
    ],
    "mapped",
    [
      1587
    ]
  ],
  [
    [
      126543,
      126543
    ],
    "mapped",
    [
      1593
    ]
  ],
  [
    [
      126544,
      126544
    ],
    "disallowed"
  ],
  [
    [
      126545,
      126545
    ],
    "mapped",
    [
      1589
    ]
  ],
  [
    [
      126546,
      126546
    ],
    "mapped",
    [
      1602
    ]
  ],
  [
    [
      126547,
      126547
    ],
    "disallowed"
  ],
  [
    [
      126548,
      126548
    ],
    "mapped",
    [
      1588
    ]
  ],
  [
    [
      126549,
      126550
    ],
    "disallowed"
  ],
  [
    [
      126551,
      126551
    ],
    "mapped",
    [
      1582
    ]
  ],
  [
    [
      126552,
      126552
    ],
    "disallowed"
  ],
  [
    [
      126553,
      126553
    ],
    "mapped",
    [
      1590
    ]
  ],
  [
    [
      126554,
      126554
    ],
    "disallowed"
  ],
  [
    [
      126555,
      126555
    ],
    "mapped",
    [
      1594
    ]
  ],
  [
    [
      126556,
      126556
    ],
    "disallowed"
  ],
  [
    [
      126557,
      126557
    ],
    "mapped",
    [
      1722
    ]
  ],
  [
    [
      126558,
      126558
    ],
    "disallowed"
  ],
  [
    [
      126559,
      126559
    ],
    "mapped",
    [
      1647
    ]
  ],
  [
    [
      126560,
      126560
    ],
    "disallowed"
  ],
  [
    [
      126561,
      126561
    ],
    "mapped",
    [
      1576
    ]
  ],
  [
    [
      126562,
      126562
    ],
    "mapped",
    [
      1580
    ]
  ],
  [
    [
      126563,
      126563
    ],
    "disallowed"
  ],
  [
    [
      126564,
      126564
    ],
    "mapped",
    [
      1607
    ]
  ],
  [
    [
      126565,
      126566
    ],
    "disallowed"
  ],
  [
    [
      126567,
      126567
    ],
    "mapped",
    [
      1581
    ]
  ],
  [
    [
      126568,
      126568
    ],
    "mapped",
    [
      1591
    ]
  ],
  [
    [
      126569,
      126569
    ],
    "mapped",
    [
      1610
    ]
  ],
  [
    [
      126570,
      126570
    ],
    "mapped",
    [
      1603
    ]
  ],
  [
    [
      126571,
      126571
    ],
    "disallowed"
  ],
  [
    [
      126572,
      126572
    ],
    "mapped",
    [
      1605
    ]
  ],
  [
    [
      126573,
      126573
    ],
    "mapped",
    [
      1606
    ]
  ],
  [
    [
      126574,
      126574
    ],
    "mapped",
    [
      1587
    ]
  ],
  [
    [
      126575,
      126575
    ],
    "mapped",
    [
      1593
    ]
  ],
  [
    [
      126576,
      126576
    ],
    "mapped",
    [
      1601
    ]
  ],
  [
    [
      126577,
      126577
    ],
    "mapped",
    [
      1589
    ]
  ],
  [
    [
      126578,
      126578
    ],
    "mapped",
    [
      1602
    ]
  ],
  [
    [
      126579,
      126579
    ],
    "disallowed"
  ],
  [
    [
      126580,
      126580
    ],
    "mapped",
    [
      1588
    ]
  ],
  [
    [
      126581,
      126581
    ],
    "mapped",
    [
      1578
    ]
  ],
  [
    [
      126582,
      126582
    ],
    "mapped",
    [
      1579
    ]
  ],
  [
    [
      126583,
      126583
    ],
    "mapped",
    [
      1582
    ]
  ],
  [
    [
      126584,
      126584
    ],
    "disallowed"
  ],
  [
    [
      126585,
      126585
    ],
    "mapped",
    [
      1590
    ]
  ],
  [
    [
      126586,
      126586
    ],
    "mapped",
    [
      1592
    ]
  ],
  [
    [
      126587,
      126587
    ],
    "mapped",
    [
      1594
    ]
  ],
  [
    [
      126588,
      126588
    ],
    "mapped",
    [
      1646
    ]
  ],
  [
    [
      126589,
      126589
    ],
    "disallowed"
  ],
  [
    [
      126590,
      126590
    ],
    "mapped",
    [
      1697
    ]
  ],
  [
    [
      126591,
      126591
    ],
    "disallowed"
  ],
  [
    [
      126592,
      126592
    ],
    "mapped",
    [
      1575
    ]
  ],
  [
    [
      126593,
      126593
    ],
    "mapped",
    [
      1576
    ]
  ],
  [
    [
      126594,
      126594
    ],
    "mapped",
    [
      1580
    ]
  ],
  [
    [
      126595,
      126595
    ],
    "mapped",
    [
      1583
    ]
  ],
  [
    [
      126596,
      126596
    ],
    "mapped",
    [
      1607
    ]
  ],
  [
    [
      126597,
      126597
    ],
    "mapped",
    [
      1608
    ]
  ],
  [
    [
      126598,
      126598
    ],
    "mapped",
    [
      1586
    ]
  ],
  [
    [
      126599,
      126599
    ],
    "mapped",
    [
      1581
    ]
  ],
  [
    [
      126600,
      126600
    ],
    "mapped",
    [
      1591
    ]
  ],
  [
    [
      126601,
      126601
    ],
    "mapped",
    [
      1610
    ]
  ],
  [
    [
      126602,
      126602
    ],
    "disallowed"
  ],
  [
    [
      126603,
      126603
    ],
    "mapped",
    [
      1604
    ]
  ],
  [
    [
      126604,
      126604
    ],
    "mapped",
    [
      1605
    ]
  ],
  [
    [
      126605,
      126605
    ],
    "mapped",
    [
      1606
    ]
  ],
  [
    [
      126606,
      126606
    ],
    "mapped",
    [
      1587
    ]
  ],
  [
    [
      126607,
      126607
    ],
    "mapped",
    [
      1593
    ]
  ],
  [
    [
      126608,
      126608
    ],
    "mapped",
    [
      1601
    ]
  ],
  [
    [
      126609,
      126609
    ],
    "mapped",
    [
      1589
    ]
  ],
  [
    [
      126610,
      126610
    ],
    "mapped",
    [
      1602
    ]
  ],
  [
    [
      126611,
      126611
    ],
    "mapped",
    [
      1585
    ]
  ],
  [
    [
      126612,
      126612
    ],
    "mapped",
    [
      1588
    ]
  ],
  [
    [
      126613,
      126613
    ],
    "mapped",
    [
      1578
    ]
  ],
  [
    [
      126614,
      126614
    ],
    "mapped",
    [
      1579
    ]
  ],
  [
    [
      126615,
      126615
    ],
    "mapped",
    [
      1582
    ]
  ],
  [
    [
      126616,
      126616
    ],
    "mapped",
    [
      1584
    ]
  ],
  [
    [
      126617,
      126617
    ],
    "mapped",
    [
      1590
    ]
  ],
  [
    [
      126618,
      126618
    ],
    "mapped",
    [
      1592
    ]
  ],
  [
    [
      126619,
      126619
    ],
    "mapped",
    [
      1594
    ]
  ],
  [
    [
      126620,
      126624
    ],
    "disallowed"
  ],
  [
    [
      126625,
      126625
    ],
    "mapped",
    [
      1576
    ]
  ],
  [
    [
      126626,
      126626
    ],
    "mapped",
    [
      1580
    ]
  ],
  [
    [
      126627,
      126627
    ],
    "mapped",
    [
      1583
    ]
  ],
  [
    [
      126628,
      126628
    ],
    "disallowed"
  ],
  [
    [
      126629,
      126629
    ],
    "mapped",
    [
      1608
    ]
  ],
  [
    [
      126630,
      126630
    ],
    "mapped",
    [
      1586
    ]
  ],
  [
    [
      126631,
      126631
    ],
    "mapped",
    [
      1581
    ]
  ],
  [
    [
      126632,
      126632
    ],
    "mapped",
    [
      1591
    ]
  ],
  [
    [
      126633,
      126633
    ],
    "mapped",
    [
      1610
    ]
  ],
  [
    [
      126634,
      126634
    ],
    "disallowed"
  ],
  [
    [
      126635,
      126635
    ],
    "mapped",
    [
      1604
    ]
  ],
  [
    [
      126636,
      126636
    ],
    "mapped",
    [
      1605
    ]
  ],
  [
    [
      126637,
      126637
    ],
    "mapped",
    [
      1606
    ]
  ],
  [
    [
      126638,
      126638
    ],
    "mapped",
    [
      1587
    ]
  ],
  [
    [
      126639,
      126639
    ],
    "mapped",
    [
      1593
    ]
  ],
  [
    [
      126640,
      126640
    ],
    "mapped",
    [
      1601
    ]
  ],
  [
    [
      126641,
      126641
    ],
    "mapped",
    [
      1589
    ]
  ],
  [
    [
      126642,
      126642
    ],
    "mapped",
    [
      1602
    ]
  ],
  [
    [
      126643,
      126643
    ],
    "mapped",
    [
      1585
    ]
  ],
  [
    [
      126644,
      126644
    ],
    "mapped",
    [
      1588
    ]
  ],
  [
    [
      126645,
      126645
    ],
    "mapped",
    [
      1578
    ]
  ],
  [
    [
      126646,
      126646
    ],
    "mapped",
    [
      1579
    ]
  ],
  [
    [
      126647,
      126647
    ],
    "mapped",
    [
      1582
    ]
  ],
  [
    [
      126648,
      126648
    ],
    "mapped",
    [
      1584
    ]
  ],
  [
    [
      126649,
      126649
    ],
    "mapped",
    [
      1590
    ]
  ],
  [
    [
      126650,
      126650
    ],
    "mapped",
    [
      1592
    ]
  ],
  [
    [
      126651,
      126651
    ],
    "mapped",
    [
      1594
    ]
  ],
  [
    [
      126652,
      126703
    ],
    "disallowed"
  ],
  [
    [
      126704,
      126705
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      126706,
      126975
    ],
    "disallowed"
  ],
  [
    [
      126976,
      127019
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127020,
      127023
    ],
    "disallowed"
  ],
  [
    [
      127024,
      127123
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127124,
      127135
    ],
    "disallowed"
  ],
  [
    [
      127136,
      127150
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127151,
      127152
    ],
    "disallowed"
  ],
  [
    [
      127153,
      127166
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127167,
      127167
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127168,
      127168
    ],
    "disallowed"
  ],
  [
    [
      127169,
      127183
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127184,
      127184
    ],
    "disallowed"
  ],
  [
    [
      127185,
      127199
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127200,
      127221
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127222,
      127231
    ],
    "disallowed"
  ],
  [
    [
      127232,
      127232
    ],
    "disallowed"
  ],
  [
    [
      127233,
      127233
    ],
    "disallowed_STD3_mapped",
    [
      48,
      44
    ]
  ],
  [
    [
      127234,
      127234
    ],
    "disallowed_STD3_mapped",
    [
      49,
      44
    ]
  ],
  [
    [
      127235,
      127235
    ],
    "disallowed_STD3_mapped",
    [
      50,
      44
    ]
  ],
  [
    [
      127236,
      127236
    ],
    "disallowed_STD3_mapped",
    [
      51,
      44
    ]
  ],
  [
    [
      127237,
      127237
    ],
    "disallowed_STD3_mapped",
    [
      52,
      44
    ]
  ],
  [
    [
      127238,
      127238
    ],
    "disallowed_STD3_mapped",
    [
      53,
      44
    ]
  ],
  [
    [
      127239,
      127239
    ],
    "disallowed_STD3_mapped",
    [
      54,
      44
    ]
  ],
  [
    [
      127240,
      127240
    ],
    "disallowed_STD3_mapped",
    [
      55,
      44
    ]
  ],
  [
    [
      127241,
      127241
    ],
    "disallowed_STD3_mapped",
    [
      56,
      44
    ]
  ],
  [
    [
      127242,
      127242
    ],
    "disallowed_STD3_mapped",
    [
      57,
      44
    ]
  ],
  [
    [
      127243,
      127244
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127245,
      127247
    ],
    "disallowed"
  ],
  [
    [
      127248,
      127248
    ],
    "disallowed_STD3_mapped",
    [
      40,
      97,
      41
    ]
  ],
  [
    [
      127249,
      127249
    ],
    "disallowed_STD3_mapped",
    [
      40,
      98,
      41
    ]
  ],
  [
    [
      127250,
      127250
    ],
    "disallowed_STD3_mapped",
    [
      40,
      99,
      41
    ]
  ],
  [
    [
      127251,
      127251
    ],
    "disallowed_STD3_mapped",
    [
      40,
      100,
      41
    ]
  ],
  [
    [
      127252,
      127252
    ],
    "disallowed_STD3_mapped",
    [
      40,
      101,
      41
    ]
  ],
  [
    [
      127253,
      127253
    ],
    "disallowed_STD3_mapped",
    [
      40,
      102,
      41
    ]
  ],
  [
    [
      127254,
      127254
    ],
    "disallowed_STD3_mapped",
    [
      40,
      103,
      41
    ]
  ],
  [
    [
      127255,
      127255
    ],
    "disallowed_STD3_mapped",
    [
      40,
      104,
      41
    ]
  ],
  [
    [
      127256,
      127256
    ],
    "disallowed_STD3_mapped",
    [
      40,
      105,
      41
    ]
  ],
  [
    [
      127257,
      127257
    ],
    "disallowed_STD3_mapped",
    [
      40,
      106,
      41
    ]
  ],
  [
    [
      127258,
      127258
    ],
    "disallowed_STD3_mapped",
    [
      40,
      107,
      41
    ]
  ],
  [
    [
      127259,
      127259
    ],
    "disallowed_STD3_mapped",
    [
      40,
      108,
      41
    ]
  ],
  [
    [
      127260,
      127260
    ],
    "disallowed_STD3_mapped",
    [
      40,
      109,
      41
    ]
  ],
  [
    [
      127261,
      127261
    ],
    "disallowed_STD3_mapped",
    [
      40,
      110,
      41
    ]
  ],
  [
    [
      127262,
      127262
    ],
    "disallowed_STD3_mapped",
    [
      40,
      111,
      41
    ]
  ],
  [
    [
      127263,
      127263
    ],
    "disallowed_STD3_mapped",
    [
      40,
      112,
      41
    ]
  ],
  [
    [
      127264,
      127264
    ],
    "disallowed_STD3_mapped",
    [
      40,
      113,
      41
    ]
  ],
  [
    [
      127265,
      127265
    ],
    "disallowed_STD3_mapped",
    [
      40,
      114,
      41
    ]
  ],
  [
    [
      127266,
      127266
    ],
    "disallowed_STD3_mapped",
    [
      40,
      115,
      41
    ]
  ],
  [
    [
      127267,
      127267
    ],
    "disallowed_STD3_mapped",
    [
      40,
      116,
      41
    ]
  ],
  [
    [
      127268,
      127268
    ],
    "disallowed_STD3_mapped",
    [
      40,
      117,
      41
    ]
  ],
  [
    [
      127269,
      127269
    ],
    "disallowed_STD3_mapped",
    [
      40,
      118,
      41
    ]
  ],
  [
    [
      127270,
      127270
    ],
    "disallowed_STD3_mapped",
    [
      40,
      119,
      41
    ]
  ],
  [
    [
      127271,
      127271
    ],
    "disallowed_STD3_mapped",
    [
      40,
      120,
      41
    ]
  ],
  [
    [
      127272,
      127272
    ],
    "disallowed_STD3_mapped",
    [
      40,
      121,
      41
    ]
  ],
  [
    [
      127273,
      127273
    ],
    "disallowed_STD3_mapped",
    [
      40,
      122,
      41
    ]
  ],
  [
    [
      127274,
      127274
    ],
    "mapped",
    [
      12308,
      115,
      12309
    ]
  ],
  [
    [
      127275,
      127275
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      127276,
      127276
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      127277,
      127277
    ],
    "mapped",
    [
      99,
      100
    ]
  ],
  [
    [
      127278,
      127278
    ],
    "mapped",
    [
      119,
      122
    ]
  ],
  [
    [
      127279,
      127279
    ],
    "disallowed"
  ],
  [
    [
      127280,
      127280
    ],
    "mapped",
    [
      97
    ]
  ],
  [
    [
      127281,
      127281
    ],
    "mapped",
    [
      98
    ]
  ],
  [
    [
      127282,
      127282
    ],
    "mapped",
    [
      99
    ]
  ],
  [
    [
      127283,
      127283
    ],
    "mapped",
    [
      100
    ]
  ],
  [
    [
      127284,
      127284
    ],
    "mapped",
    [
      101
    ]
  ],
  [
    [
      127285,
      127285
    ],
    "mapped",
    [
      102
    ]
  ],
  [
    [
      127286,
      127286
    ],
    "mapped",
    [
      103
    ]
  ],
  [
    [
      127287,
      127287
    ],
    "mapped",
    [
      104
    ]
  ],
  [
    [
      127288,
      127288
    ],
    "mapped",
    [
      105
    ]
  ],
  [
    [
      127289,
      127289
    ],
    "mapped",
    [
      106
    ]
  ],
  [
    [
      127290,
      127290
    ],
    "mapped",
    [
      107
    ]
  ],
  [
    [
      127291,
      127291
    ],
    "mapped",
    [
      108
    ]
  ],
  [
    [
      127292,
      127292
    ],
    "mapped",
    [
      109
    ]
  ],
  [
    [
      127293,
      127293
    ],
    "mapped",
    [
      110
    ]
  ],
  [
    [
      127294,
      127294
    ],
    "mapped",
    [
      111
    ]
  ],
  [
    [
      127295,
      127295
    ],
    "mapped",
    [
      112
    ]
  ],
  [
    [
      127296,
      127296
    ],
    "mapped",
    [
      113
    ]
  ],
  [
    [
      127297,
      127297
    ],
    "mapped",
    [
      114
    ]
  ],
  [
    [
      127298,
      127298
    ],
    "mapped",
    [
      115
    ]
  ],
  [
    [
      127299,
      127299
    ],
    "mapped",
    [
      116
    ]
  ],
  [
    [
      127300,
      127300
    ],
    "mapped",
    [
      117
    ]
  ],
  [
    [
      127301,
      127301
    ],
    "mapped",
    [
      118
    ]
  ],
  [
    [
      127302,
      127302
    ],
    "mapped",
    [
      119
    ]
  ],
  [
    [
      127303,
      127303
    ],
    "mapped",
    [
      120
    ]
  ],
  [
    [
      127304,
      127304
    ],
    "mapped",
    [
      121
    ]
  ],
  [
    [
      127305,
      127305
    ],
    "mapped",
    [
      122
    ]
  ],
  [
    [
      127306,
      127306
    ],
    "mapped",
    [
      104,
      118
    ]
  ],
  [
    [
      127307,
      127307
    ],
    "mapped",
    [
      109,
      118
    ]
  ],
  [
    [
      127308,
      127308
    ],
    "mapped",
    [
      115,
      100
    ]
  ],
  [
    [
      127309,
      127309
    ],
    "mapped",
    [
      115,
      115
    ]
  ],
  [
    [
      127310,
      127310
    ],
    "mapped",
    [
      112,
      112,
      118
    ]
  ],
  [
    [
      127311,
      127311
    ],
    "mapped",
    [
      119,
      99
    ]
  ],
  [
    [
      127312,
      127318
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127319,
      127319
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127320,
      127326
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127327,
      127327
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127328,
      127337
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127338,
      127338
    ],
    "mapped",
    [
      109,
      99
    ]
  ],
  [
    [
      127339,
      127339
    ],
    "mapped",
    [
      109,
      100
    ]
  ],
  [
    [
      127340,
      127343
    ],
    "disallowed"
  ],
  [
    [
      127344,
      127352
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127353,
      127353
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127354,
      127354
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127355,
      127356
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127357,
      127358
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127359,
      127359
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127360,
      127369
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127370,
      127373
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127374,
      127375
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127376,
      127376
    ],
    "mapped",
    [
      100,
      106
    ]
  ],
  [
    [
      127377,
      127386
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127387,
      127461
    ],
    "disallowed"
  ],
  [
    [
      127462,
      127487
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127488,
      127488
    ],
    "mapped",
    [
      12411,
      12363
    ]
  ],
  [
    [
      127489,
      127489
    ],
    "mapped",
    [
      12467,
      12467
    ]
  ],
  [
    [
      127490,
      127490
    ],
    "mapped",
    [
      12469
    ]
  ],
  [
    [
      127491,
      127503
    ],
    "disallowed"
  ],
  [
    [
      127504,
      127504
    ],
    "mapped",
    [
      25163
    ]
  ],
  [
    [
      127505,
      127505
    ],
    "mapped",
    [
      23383
    ]
  ],
  [
    [
      127506,
      127506
    ],
    "mapped",
    [
      21452
    ]
  ],
  [
    [
      127507,
      127507
    ],
    "mapped",
    [
      12487
    ]
  ],
  [
    [
      127508,
      127508
    ],
    "mapped",
    [
      20108
    ]
  ],
  [
    [
      127509,
      127509
    ],
    "mapped",
    [
      22810
    ]
  ],
  [
    [
      127510,
      127510
    ],
    "mapped",
    [
      35299
    ]
  ],
  [
    [
      127511,
      127511
    ],
    "mapped",
    [
      22825
    ]
  ],
  [
    [
      127512,
      127512
    ],
    "mapped",
    [
      20132
    ]
  ],
  [
    [
      127513,
      127513
    ],
    "mapped",
    [
      26144
    ]
  ],
  [
    [
      127514,
      127514
    ],
    "mapped",
    [
      28961
    ]
  ],
  [
    [
      127515,
      127515
    ],
    "mapped",
    [
      26009
    ]
  ],
  [
    [
      127516,
      127516
    ],
    "mapped",
    [
      21069
    ]
  ],
  [
    [
      127517,
      127517
    ],
    "mapped",
    [
      24460
    ]
  ],
  [
    [
      127518,
      127518
    ],
    "mapped",
    [
      20877
    ]
  ],
  [
    [
      127519,
      127519
    ],
    "mapped",
    [
      26032
    ]
  ],
  [
    [
      127520,
      127520
    ],
    "mapped",
    [
      21021
    ]
  ],
  [
    [
      127521,
      127521
    ],
    "mapped",
    [
      32066
    ]
  ],
  [
    [
      127522,
      127522
    ],
    "mapped",
    [
      29983
    ]
  ],
  [
    [
      127523,
      127523
    ],
    "mapped",
    [
      36009
    ]
  ],
  [
    [
      127524,
      127524
    ],
    "mapped",
    [
      22768
    ]
  ],
  [
    [
      127525,
      127525
    ],
    "mapped",
    [
      21561
    ]
  ],
  [
    [
      127526,
      127526
    ],
    "mapped",
    [
      28436
    ]
  ],
  [
    [
      127527,
      127527
    ],
    "mapped",
    [
      25237
    ]
  ],
  [
    [
      127528,
      127528
    ],
    "mapped",
    [
      25429
    ]
  ],
  [
    [
      127529,
      127529
    ],
    "mapped",
    [
      19968
    ]
  ],
  [
    [
      127530,
      127530
    ],
    "mapped",
    [
      19977
    ]
  ],
  [
    [
      127531,
      127531
    ],
    "mapped",
    [
      36938
    ]
  ],
  [
    [
      127532,
      127532
    ],
    "mapped",
    [
      24038
    ]
  ],
  [
    [
      127533,
      127533
    ],
    "mapped",
    [
      20013
    ]
  ],
  [
    [
      127534,
      127534
    ],
    "mapped",
    [
      21491
    ]
  ],
  [
    [
      127535,
      127535
    ],
    "mapped",
    [
      25351
    ]
  ],
  [
    [
      127536,
      127536
    ],
    "mapped",
    [
      36208
    ]
  ],
  [
    [
      127537,
      127537
    ],
    "mapped",
    [
      25171
    ]
  ],
  [
    [
      127538,
      127538
    ],
    "mapped",
    [
      31105
    ]
  ],
  [
    [
      127539,
      127539
    ],
    "mapped",
    [
      31354
    ]
  ],
  [
    [
      127540,
      127540
    ],
    "mapped",
    [
      21512
    ]
  ],
  [
    [
      127541,
      127541
    ],
    "mapped",
    [
      28288
    ]
  ],
  [
    [
      127542,
      127542
    ],
    "mapped",
    [
      26377
    ]
  ],
  [
    [
      127543,
      127543
    ],
    "mapped",
    [
      26376
    ]
  ],
  [
    [
      127544,
      127544
    ],
    "mapped",
    [
      30003
    ]
  ],
  [
    [
      127545,
      127545
    ],
    "mapped",
    [
      21106
    ]
  ],
  [
    [
      127546,
      127546
    ],
    "mapped",
    [
      21942
    ]
  ],
  [
    [
      127547,
      127551
    ],
    "disallowed"
  ],
  [
    [
      127552,
      127552
    ],
    "mapped",
    [
      12308,
      26412,
      12309
    ]
  ],
  [
    [
      127553,
      127553
    ],
    "mapped",
    [
      12308,
      19977,
      12309
    ]
  ],
  [
    [
      127554,
      127554
    ],
    "mapped",
    [
      12308,
      20108,
      12309
    ]
  ],
  [
    [
      127555,
      127555
    ],
    "mapped",
    [
      12308,
      23433,
      12309
    ]
  ],
  [
    [
      127556,
      127556
    ],
    "mapped",
    [
      12308,
      28857,
      12309
    ]
  ],
  [
    [
      127557,
      127557
    ],
    "mapped",
    [
      12308,
      25171,
      12309
    ]
  ],
  [
    [
      127558,
      127558
    ],
    "mapped",
    [
      12308,
      30423,
      12309
    ]
  ],
  [
    [
      127559,
      127559
    ],
    "mapped",
    [
      12308,
      21213,
      12309
    ]
  ],
  [
    [
      127560,
      127560
    ],
    "mapped",
    [
      12308,
      25943,
      12309
    ]
  ],
  [
    [
      127561,
      127567
    ],
    "disallowed"
  ],
  [
    [
      127568,
      127568
    ],
    "mapped",
    [
      24471
    ]
  ],
  [
    [
      127569,
      127569
    ],
    "mapped",
    [
      21487
    ]
  ],
  [
    [
      127570,
      127743
    ],
    "disallowed"
  ],
  [
    [
      127744,
      127776
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127777,
      127788
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127789,
      127791
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127792,
      127797
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127798,
      127798
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127799,
      127868
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127869,
      127869
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127870,
      127871
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127872,
      127891
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127892,
      127903
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127904,
      127940
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127941,
      127941
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127942,
      127946
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127947,
      127950
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127951,
      127955
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127956,
      127967
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127968,
      127984
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127985,
      127991
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      127992,
      127999
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128e3,
      128062
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128063,
      128063
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128064,
      128064
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128065,
      128065
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128066,
      128247
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128248,
      128248
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128249,
      128252
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128253,
      128254
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128255,
      128255
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128256,
      128317
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128318,
      128319
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128320,
      128323
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128324,
      128330
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128331,
      128335
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128336,
      128359
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128360,
      128377
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128378,
      128378
    ],
    "disallowed"
  ],
  [
    [
      128379,
      128419
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128420,
      128420
    ],
    "disallowed"
  ],
  [
    [
      128421,
      128506
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128507,
      128511
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128512,
      128512
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128513,
      128528
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128529,
      128529
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128530,
      128532
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128533,
      128533
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128534,
      128534
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128535,
      128535
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128536,
      128536
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128537,
      128537
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128538,
      128538
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128539,
      128539
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128540,
      128542
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128543,
      128543
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128544,
      128549
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128550,
      128551
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128552,
      128555
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128556,
      128556
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128557,
      128557
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128558,
      128559
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128560,
      128563
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128564,
      128564
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128565,
      128576
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128577,
      128578
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128579,
      128580
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128581,
      128591
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128592,
      128639
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128640,
      128709
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128710,
      128719
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128720,
      128720
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128721,
      128735
    ],
    "disallowed"
  ],
  [
    [
      128736,
      128748
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128749,
      128751
    ],
    "disallowed"
  ],
  [
    [
      128752,
      128755
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128756,
      128767
    ],
    "disallowed"
  ],
  [
    [
      128768,
      128883
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128884,
      128895
    ],
    "disallowed"
  ],
  [
    [
      128896,
      128980
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      128981,
      129023
    ],
    "disallowed"
  ],
  [
    [
      129024,
      129035
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      129036,
      129039
    ],
    "disallowed"
  ],
  [
    [
      129040,
      129095
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      129096,
      129103
    ],
    "disallowed"
  ],
  [
    [
      129104,
      129113
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      129114,
      129119
    ],
    "disallowed"
  ],
  [
    [
      129120,
      129159
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      129160,
      129167
    ],
    "disallowed"
  ],
  [
    [
      129168,
      129197
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      129198,
      129295
    ],
    "disallowed"
  ],
  [
    [
      129296,
      129304
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      129305,
      129407
    ],
    "disallowed"
  ],
  [
    [
      129408,
      129412
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      129413,
      129471
    ],
    "disallowed"
  ],
  [
    [
      129472,
      129472
    ],
    "valid",
    [],
    "NV8"
  ],
  [
    [
      129473,
      131069
    ],
    "disallowed"
  ],
  [
    [
      131070,
      131071
    ],
    "disallowed"
  ],
  [
    [
      131072,
      173782
    ],
    "valid"
  ],
  [
    [
      173783,
      173823
    ],
    "disallowed"
  ],
  [
    [
      173824,
      177972
    ],
    "valid"
  ],
  [
    [
      177973,
      177983
    ],
    "disallowed"
  ],
  [
    [
      177984,
      178205
    ],
    "valid"
  ],
  [
    [
      178206,
      178207
    ],
    "disallowed"
  ],
  [
    [
      178208,
      183969
    ],
    "valid"
  ],
  [
    [
      183970,
      194559
    ],
    "disallowed"
  ],
  [
    [
      194560,
      194560
    ],
    "mapped",
    [
      20029
    ]
  ],
  [
    [
      194561,
      194561
    ],
    "mapped",
    [
      20024
    ]
  ],
  [
    [
      194562,
      194562
    ],
    "mapped",
    [
      20033
    ]
  ],
  [
    [
      194563,
      194563
    ],
    "mapped",
    [
      131362
    ]
  ],
  [
    [
      194564,
      194564
    ],
    "mapped",
    [
      20320
    ]
  ],
  [
    [
      194565,
      194565
    ],
    "mapped",
    [
      20398
    ]
  ],
  [
    [
      194566,
      194566
    ],
    "mapped",
    [
      20411
    ]
  ],
  [
    [
      194567,
      194567
    ],
    "mapped",
    [
      20482
    ]
  ],
  [
    [
      194568,
      194568
    ],
    "mapped",
    [
      20602
    ]
  ],
  [
    [
      194569,
      194569
    ],
    "mapped",
    [
      20633
    ]
  ],
  [
    [
      194570,
      194570
    ],
    "mapped",
    [
      20711
    ]
  ],
  [
    [
      194571,
      194571
    ],
    "mapped",
    [
      20687
    ]
  ],
  [
    [
      194572,
      194572
    ],
    "mapped",
    [
      13470
    ]
  ],
  [
    [
      194573,
      194573
    ],
    "mapped",
    [
      132666
    ]
  ],
  [
    [
      194574,
      194574
    ],
    "mapped",
    [
      20813
    ]
  ],
  [
    [
      194575,
      194575
    ],
    "mapped",
    [
      20820
    ]
  ],
  [
    [
      194576,
      194576
    ],
    "mapped",
    [
      20836
    ]
  ],
  [
    [
      194577,
      194577
    ],
    "mapped",
    [
      20855
    ]
  ],
  [
    [
      194578,
      194578
    ],
    "mapped",
    [
      132380
    ]
  ],
  [
    [
      194579,
      194579
    ],
    "mapped",
    [
      13497
    ]
  ],
  [
    [
      194580,
      194580
    ],
    "mapped",
    [
      20839
    ]
  ],
  [
    [
      194581,
      194581
    ],
    "mapped",
    [
      20877
    ]
  ],
  [
    [
      194582,
      194582
    ],
    "mapped",
    [
      132427
    ]
  ],
  [
    [
      194583,
      194583
    ],
    "mapped",
    [
      20887
    ]
  ],
  [
    [
      194584,
      194584
    ],
    "mapped",
    [
      20900
    ]
  ],
  [
    [
      194585,
      194585
    ],
    "mapped",
    [
      20172
    ]
  ],
  [
    [
      194586,
      194586
    ],
    "mapped",
    [
      20908
    ]
  ],
  [
    [
      194587,
      194587
    ],
    "mapped",
    [
      20917
    ]
  ],
  [
    [
      194588,
      194588
    ],
    "mapped",
    [
      168415
    ]
  ],
  [
    [
      194589,
      194589
    ],
    "mapped",
    [
      20981
    ]
  ],
  [
    [
      194590,
      194590
    ],
    "mapped",
    [
      20995
    ]
  ],
  [
    [
      194591,
      194591
    ],
    "mapped",
    [
      13535
    ]
  ],
  [
    [
      194592,
      194592
    ],
    "mapped",
    [
      21051
    ]
  ],
  [
    [
      194593,
      194593
    ],
    "mapped",
    [
      21062
    ]
  ],
  [
    [
      194594,
      194594
    ],
    "mapped",
    [
      21106
    ]
  ],
  [
    [
      194595,
      194595
    ],
    "mapped",
    [
      21111
    ]
  ],
  [
    [
      194596,
      194596
    ],
    "mapped",
    [
      13589
    ]
  ],
  [
    [
      194597,
      194597
    ],
    "mapped",
    [
      21191
    ]
  ],
  [
    [
      194598,
      194598
    ],
    "mapped",
    [
      21193
    ]
  ],
  [
    [
      194599,
      194599
    ],
    "mapped",
    [
      21220
    ]
  ],
  [
    [
      194600,
      194600
    ],
    "mapped",
    [
      21242
    ]
  ],
  [
    [
      194601,
      194601
    ],
    "mapped",
    [
      21253
    ]
  ],
  [
    [
      194602,
      194602
    ],
    "mapped",
    [
      21254
    ]
  ],
  [
    [
      194603,
      194603
    ],
    "mapped",
    [
      21271
    ]
  ],
  [
    [
      194604,
      194604
    ],
    "mapped",
    [
      21321
    ]
  ],
  [
    [
      194605,
      194605
    ],
    "mapped",
    [
      21329
    ]
  ],
  [
    [
      194606,
      194606
    ],
    "mapped",
    [
      21338
    ]
  ],
  [
    [
      194607,
      194607
    ],
    "mapped",
    [
      21363
    ]
  ],
  [
    [
      194608,
      194608
    ],
    "mapped",
    [
      21373
    ]
  ],
  [
    [
      194609,
      194611
    ],
    "mapped",
    [
      21375
    ]
  ],
  [
    [
      194612,
      194612
    ],
    "mapped",
    [
      133676
    ]
  ],
  [
    [
      194613,
      194613
    ],
    "mapped",
    [
      28784
    ]
  ],
  [
    [
      194614,
      194614
    ],
    "mapped",
    [
      21450
    ]
  ],
  [
    [
      194615,
      194615
    ],
    "mapped",
    [
      21471
    ]
  ],
  [
    [
      194616,
      194616
    ],
    "mapped",
    [
      133987
    ]
  ],
  [
    [
      194617,
      194617
    ],
    "mapped",
    [
      21483
    ]
  ],
  [
    [
      194618,
      194618
    ],
    "mapped",
    [
      21489
    ]
  ],
  [
    [
      194619,
      194619
    ],
    "mapped",
    [
      21510
    ]
  ],
  [
    [
      194620,
      194620
    ],
    "mapped",
    [
      21662
    ]
  ],
  [
    [
      194621,
      194621
    ],
    "mapped",
    [
      21560
    ]
  ],
  [
    [
      194622,
      194622
    ],
    "mapped",
    [
      21576
    ]
  ],
  [
    [
      194623,
      194623
    ],
    "mapped",
    [
      21608
    ]
  ],
  [
    [
      194624,
      194624
    ],
    "mapped",
    [
      21666
    ]
  ],
  [
    [
      194625,
      194625
    ],
    "mapped",
    [
      21750
    ]
  ],
  [
    [
      194626,
      194626
    ],
    "mapped",
    [
      21776
    ]
  ],
  [
    [
      194627,
      194627
    ],
    "mapped",
    [
      21843
    ]
  ],
  [
    [
      194628,
      194628
    ],
    "mapped",
    [
      21859
    ]
  ],
  [
    [
      194629,
      194630
    ],
    "mapped",
    [
      21892
    ]
  ],
  [
    [
      194631,
      194631
    ],
    "mapped",
    [
      21913
    ]
  ],
  [
    [
      194632,
      194632
    ],
    "mapped",
    [
      21931
    ]
  ],
  [
    [
      194633,
      194633
    ],
    "mapped",
    [
      21939
    ]
  ],
  [
    [
      194634,
      194634
    ],
    "mapped",
    [
      21954
    ]
  ],
  [
    [
      194635,
      194635
    ],
    "mapped",
    [
      22294
    ]
  ],
  [
    [
      194636,
      194636
    ],
    "mapped",
    [
      22022
    ]
  ],
  [
    [
      194637,
      194637
    ],
    "mapped",
    [
      22295
    ]
  ],
  [
    [
      194638,
      194638
    ],
    "mapped",
    [
      22097
    ]
  ],
  [
    [
      194639,
      194639
    ],
    "mapped",
    [
      22132
    ]
  ],
  [
    [
      194640,
      194640
    ],
    "mapped",
    [
      20999
    ]
  ],
  [
    [
      194641,
      194641
    ],
    "mapped",
    [
      22766
    ]
  ],
  [
    [
      194642,
      194642
    ],
    "mapped",
    [
      22478
    ]
  ],
  [
    [
      194643,
      194643
    ],
    "mapped",
    [
      22516
    ]
  ],
  [
    [
      194644,
      194644
    ],
    "mapped",
    [
      22541
    ]
  ],
  [
    [
      194645,
      194645
    ],
    "mapped",
    [
      22411
    ]
  ],
  [
    [
      194646,
      194646
    ],
    "mapped",
    [
      22578
    ]
  ],
  [
    [
      194647,
      194647
    ],
    "mapped",
    [
      22577
    ]
  ],
  [
    [
      194648,
      194648
    ],
    "mapped",
    [
      22700
    ]
  ],
  [
    [
      194649,
      194649
    ],
    "mapped",
    [
      136420
    ]
  ],
  [
    [
      194650,
      194650
    ],
    "mapped",
    [
      22770
    ]
  ],
  [
    [
      194651,
      194651
    ],
    "mapped",
    [
      22775
    ]
  ],
  [
    [
      194652,
      194652
    ],
    "mapped",
    [
      22790
    ]
  ],
  [
    [
      194653,
      194653
    ],
    "mapped",
    [
      22810
    ]
  ],
  [
    [
      194654,
      194654
    ],
    "mapped",
    [
      22818
    ]
  ],
  [
    [
      194655,
      194655
    ],
    "mapped",
    [
      22882
    ]
  ],
  [
    [
      194656,
      194656
    ],
    "mapped",
    [
      136872
    ]
  ],
  [
    [
      194657,
      194657
    ],
    "mapped",
    [
      136938
    ]
  ],
  [
    [
      194658,
      194658
    ],
    "mapped",
    [
      23020
    ]
  ],
  [
    [
      194659,
      194659
    ],
    "mapped",
    [
      23067
    ]
  ],
  [
    [
      194660,
      194660
    ],
    "mapped",
    [
      23079
    ]
  ],
  [
    [
      194661,
      194661
    ],
    "mapped",
    [
      23e3
    ]
  ],
  [
    [
      194662,
      194662
    ],
    "mapped",
    [
      23142
    ]
  ],
  [
    [
      194663,
      194663
    ],
    "mapped",
    [
      14062
    ]
  ],
  [
    [
      194664,
      194664
    ],
    "disallowed"
  ],
  [
    [
      194665,
      194665
    ],
    "mapped",
    [
      23304
    ]
  ],
  [
    [
      194666,
      194667
    ],
    "mapped",
    [
      23358
    ]
  ],
  [
    [
      194668,
      194668
    ],
    "mapped",
    [
      137672
    ]
  ],
  [
    [
      194669,
      194669
    ],
    "mapped",
    [
      23491
    ]
  ],
  [
    [
      194670,
      194670
    ],
    "mapped",
    [
      23512
    ]
  ],
  [
    [
      194671,
      194671
    ],
    "mapped",
    [
      23527
    ]
  ],
  [
    [
      194672,
      194672
    ],
    "mapped",
    [
      23539
    ]
  ],
  [
    [
      194673,
      194673
    ],
    "mapped",
    [
      138008
    ]
  ],
  [
    [
      194674,
      194674
    ],
    "mapped",
    [
      23551
    ]
  ],
  [
    [
      194675,
      194675
    ],
    "mapped",
    [
      23558
    ]
  ],
  [
    [
      194676,
      194676
    ],
    "disallowed"
  ],
  [
    [
      194677,
      194677
    ],
    "mapped",
    [
      23586
    ]
  ],
  [
    [
      194678,
      194678
    ],
    "mapped",
    [
      14209
    ]
  ],
  [
    [
      194679,
      194679
    ],
    "mapped",
    [
      23648
    ]
  ],
  [
    [
      194680,
      194680
    ],
    "mapped",
    [
      23662
    ]
  ],
  [
    [
      194681,
      194681
    ],
    "mapped",
    [
      23744
    ]
  ],
  [
    [
      194682,
      194682
    ],
    "mapped",
    [
      23693
    ]
  ],
  [
    [
      194683,
      194683
    ],
    "mapped",
    [
      138724
    ]
  ],
  [
    [
      194684,
      194684
    ],
    "mapped",
    [
      23875
    ]
  ],
  [
    [
      194685,
      194685
    ],
    "mapped",
    [
      138726
    ]
  ],
  [
    [
      194686,
      194686
    ],
    "mapped",
    [
      23918
    ]
  ],
  [
    [
      194687,
      194687
    ],
    "mapped",
    [
      23915
    ]
  ],
  [
    [
      194688,
      194688
    ],
    "mapped",
    [
      23932
    ]
  ],
  [
    [
      194689,
      194689
    ],
    "mapped",
    [
      24033
    ]
  ],
  [
    [
      194690,
      194690
    ],
    "mapped",
    [
      24034
    ]
  ],
  [
    [
      194691,
      194691
    ],
    "mapped",
    [
      14383
    ]
  ],
  [
    [
      194692,
      194692
    ],
    "mapped",
    [
      24061
    ]
  ],
  [
    [
      194693,
      194693
    ],
    "mapped",
    [
      24104
    ]
  ],
  [
    [
      194694,
      194694
    ],
    "mapped",
    [
      24125
    ]
  ],
  [
    [
      194695,
      194695
    ],
    "mapped",
    [
      24169
    ]
  ],
  [
    [
      194696,
      194696
    ],
    "mapped",
    [
      14434
    ]
  ],
  [
    [
      194697,
      194697
    ],
    "mapped",
    [
      139651
    ]
  ],
  [
    [
      194698,
      194698
    ],
    "mapped",
    [
      14460
    ]
  ],
  [
    [
      194699,
      194699
    ],
    "mapped",
    [
      24240
    ]
  ],
  [
    [
      194700,
      194700
    ],
    "mapped",
    [
      24243
    ]
  ],
  [
    [
      194701,
      194701
    ],
    "mapped",
    [
      24246
    ]
  ],
  [
    [
      194702,
      194702
    ],
    "mapped",
    [
      24266
    ]
  ],
  [
    [
      194703,
      194703
    ],
    "mapped",
    [
      172946
    ]
  ],
  [
    [
      194704,
      194704
    ],
    "mapped",
    [
      24318
    ]
  ],
  [
    [
      194705,
      194706
    ],
    "mapped",
    [
      140081
    ]
  ],
  [
    [
      194707,
      194707
    ],
    "mapped",
    [
      33281
    ]
  ],
  [
    [
      194708,
      194709
    ],
    "mapped",
    [
      24354
    ]
  ],
  [
    [
      194710,
      194710
    ],
    "mapped",
    [
      14535
    ]
  ],
  [
    [
      194711,
      194711
    ],
    "mapped",
    [
      144056
    ]
  ],
  [
    [
      194712,
      194712
    ],
    "mapped",
    [
      156122
    ]
  ],
  [
    [
      194713,
      194713
    ],
    "mapped",
    [
      24418
    ]
  ],
  [
    [
      194714,
      194714
    ],
    "mapped",
    [
      24427
    ]
  ],
  [
    [
      194715,
      194715
    ],
    "mapped",
    [
      14563
    ]
  ],
  [
    [
      194716,
      194716
    ],
    "mapped",
    [
      24474
    ]
  ],
  [
    [
      194717,
      194717
    ],
    "mapped",
    [
      24525
    ]
  ],
  [
    [
      194718,
      194718
    ],
    "mapped",
    [
      24535
    ]
  ],
  [
    [
      194719,
      194719
    ],
    "mapped",
    [
      24569
    ]
  ],
  [
    [
      194720,
      194720
    ],
    "mapped",
    [
      24705
    ]
  ],
  [
    [
      194721,
      194721
    ],
    "mapped",
    [
      14650
    ]
  ],
  [
    [
      194722,
      194722
    ],
    "mapped",
    [
      14620
    ]
  ],
  [
    [
      194723,
      194723
    ],
    "mapped",
    [
      24724
    ]
  ],
  [
    [
      194724,
      194724
    ],
    "mapped",
    [
      141012
    ]
  ],
  [
    [
      194725,
      194725
    ],
    "mapped",
    [
      24775
    ]
  ],
  [
    [
      194726,
      194726
    ],
    "mapped",
    [
      24904
    ]
  ],
  [
    [
      194727,
      194727
    ],
    "mapped",
    [
      24908
    ]
  ],
  [
    [
      194728,
      194728
    ],
    "mapped",
    [
      24910
    ]
  ],
  [
    [
      194729,
      194729
    ],
    "mapped",
    [
      24908
    ]
  ],
  [
    [
      194730,
      194730
    ],
    "mapped",
    [
      24954
    ]
  ],
  [
    [
      194731,
      194731
    ],
    "mapped",
    [
      24974
    ]
  ],
  [
    [
      194732,
      194732
    ],
    "mapped",
    [
      25010
    ]
  ],
  [
    [
      194733,
      194733
    ],
    "mapped",
    [
      24996
    ]
  ],
  [
    [
      194734,
      194734
    ],
    "mapped",
    [
      25007
    ]
  ],
  [
    [
      194735,
      194735
    ],
    "mapped",
    [
      25054
    ]
  ],
  [
    [
      194736,
      194736
    ],
    "mapped",
    [
      25074
    ]
  ],
  [
    [
      194737,
      194737
    ],
    "mapped",
    [
      25078
    ]
  ],
  [
    [
      194738,
      194738
    ],
    "mapped",
    [
      25104
    ]
  ],
  [
    [
      194739,
      194739
    ],
    "mapped",
    [
      25115
    ]
  ],
  [
    [
      194740,
      194740
    ],
    "mapped",
    [
      25181
    ]
  ],
  [
    [
      194741,
      194741
    ],
    "mapped",
    [
      25265
    ]
  ],
  [
    [
      194742,
      194742
    ],
    "mapped",
    [
      25300
    ]
  ],
  [
    [
      194743,
      194743
    ],
    "mapped",
    [
      25424
    ]
  ],
  [
    [
      194744,
      194744
    ],
    "mapped",
    [
      142092
    ]
  ],
  [
    [
      194745,
      194745
    ],
    "mapped",
    [
      25405
    ]
  ],
  [
    [
      194746,
      194746
    ],
    "mapped",
    [
      25340
    ]
  ],
  [
    [
      194747,
      194747
    ],
    "mapped",
    [
      25448
    ]
  ],
  [
    [
      194748,
      194748
    ],
    "mapped",
    [
      25475
    ]
  ],
  [
    [
      194749,
      194749
    ],
    "mapped",
    [
      25572
    ]
  ],
  [
    [
      194750,
      194750
    ],
    "mapped",
    [
      142321
    ]
  ],
  [
    [
      194751,
      194751
    ],
    "mapped",
    [
      25634
    ]
  ],
  [
    [
      194752,
      194752
    ],
    "mapped",
    [
      25541
    ]
  ],
  [
    [
      194753,
      194753
    ],
    "mapped",
    [
      25513
    ]
  ],
  [
    [
      194754,
      194754
    ],
    "mapped",
    [
      14894
    ]
  ],
  [
    [
      194755,
      194755
    ],
    "mapped",
    [
      25705
    ]
  ],
  [
    [
      194756,
      194756
    ],
    "mapped",
    [
      25726
    ]
  ],
  [
    [
      194757,
      194757
    ],
    "mapped",
    [
      25757
    ]
  ],
  [
    [
      194758,
      194758
    ],
    "mapped",
    [
      25719
    ]
  ],
  [
    [
      194759,
      194759
    ],
    "mapped",
    [
      14956
    ]
  ],
  [
    [
      194760,
      194760
    ],
    "mapped",
    [
      25935
    ]
  ],
  [
    [
      194761,
      194761
    ],
    "mapped",
    [
      25964
    ]
  ],
  [
    [
      194762,
      194762
    ],
    "mapped",
    [
      143370
    ]
  ],
  [
    [
      194763,
      194763
    ],
    "mapped",
    [
      26083
    ]
  ],
  [
    [
      194764,
      194764
    ],
    "mapped",
    [
      26360
    ]
  ],
  [
    [
      194765,
      194765
    ],
    "mapped",
    [
      26185
    ]
  ],
  [
    [
      194766,
      194766
    ],
    "mapped",
    [
      15129
    ]
  ],
  [
    [
      194767,
      194767
    ],
    "mapped",
    [
      26257
    ]
  ],
  [
    [
      194768,
      194768
    ],
    "mapped",
    [
      15112
    ]
  ],
  [
    [
      194769,
      194769
    ],
    "mapped",
    [
      15076
    ]
  ],
  [
    [
      194770,
      194770
    ],
    "mapped",
    [
      20882
    ]
  ],
  [
    [
      194771,
      194771
    ],
    "mapped",
    [
      20885
    ]
  ],
  [
    [
      194772,
      194772
    ],
    "mapped",
    [
      26368
    ]
  ],
  [
    [
      194773,
      194773
    ],
    "mapped",
    [
      26268
    ]
  ],
  [
    [
      194774,
      194774
    ],
    "mapped",
    [
      32941
    ]
  ],
  [
    [
      194775,
      194775
    ],
    "mapped",
    [
      17369
    ]
  ],
  [
    [
      194776,
      194776
    ],
    "mapped",
    [
      26391
    ]
  ],
  [
    [
      194777,
      194777
    ],
    "mapped",
    [
      26395
    ]
  ],
  [
    [
      194778,
      194778
    ],
    "mapped",
    [
      26401
    ]
  ],
  [
    [
      194779,
      194779
    ],
    "mapped",
    [
      26462
    ]
  ],
  [
    [
      194780,
      194780
    ],
    "mapped",
    [
      26451
    ]
  ],
  [
    [
      194781,
      194781
    ],
    "mapped",
    [
      144323
    ]
  ],
  [
    [
      194782,
      194782
    ],
    "mapped",
    [
      15177
    ]
  ],
  [
    [
      194783,
      194783
    ],
    "mapped",
    [
      26618
    ]
  ],
  [
    [
      194784,
      194784
    ],
    "mapped",
    [
      26501
    ]
  ],
  [
    [
      194785,
      194785
    ],
    "mapped",
    [
      26706
    ]
  ],
  [
    [
      194786,
      194786
    ],
    "mapped",
    [
      26757
    ]
  ],
  [
    [
      194787,
      194787
    ],
    "mapped",
    [
      144493
    ]
  ],
  [
    [
      194788,
      194788
    ],
    "mapped",
    [
      26766
    ]
  ],
  [
    [
      194789,
      194789
    ],
    "mapped",
    [
      26655
    ]
  ],
  [
    [
      194790,
      194790
    ],
    "mapped",
    [
      26900
    ]
  ],
  [
    [
      194791,
      194791
    ],
    "mapped",
    [
      15261
    ]
  ],
  [
    [
      194792,
      194792
    ],
    "mapped",
    [
      26946
    ]
  ],
  [
    [
      194793,
      194793
    ],
    "mapped",
    [
      27043
    ]
  ],
  [
    [
      194794,
      194794
    ],
    "mapped",
    [
      27114
    ]
  ],
  [
    [
      194795,
      194795
    ],
    "mapped",
    [
      27304
    ]
  ],
  [
    [
      194796,
      194796
    ],
    "mapped",
    [
      145059
    ]
  ],
  [
    [
      194797,
      194797
    ],
    "mapped",
    [
      27355
    ]
  ],
  [
    [
      194798,
      194798
    ],
    "mapped",
    [
      15384
    ]
  ],
  [
    [
      194799,
      194799
    ],
    "mapped",
    [
      27425
    ]
  ],
  [
    [
      194800,
      194800
    ],
    "mapped",
    [
      145575
    ]
  ],
  [
    [
      194801,
      194801
    ],
    "mapped",
    [
      27476
    ]
  ],
  [
    [
      194802,
      194802
    ],
    "mapped",
    [
      15438
    ]
  ],
  [
    [
      194803,
      194803
    ],
    "mapped",
    [
      27506
    ]
  ],
  [
    [
      194804,
      194804
    ],
    "mapped",
    [
      27551
    ]
  ],
  [
    [
      194805,
      194805
    ],
    "mapped",
    [
      27578
    ]
  ],
  [
    [
      194806,
      194806
    ],
    "mapped",
    [
      27579
    ]
  ],
  [
    [
      194807,
      194807
    ],
    "mapped",
    [
      146061
    ]
  ],
  [
    [
      194808,
      194808
    ],
    "mapped",
    [
      138507
    ]
  ],
  [
    [
      194809,
      194809
    ],
    "mapped",
    [
      146170
    ]
  ],
  [
    [
      194810,
      194810
    ],
    "mapped",
    [
      27726
    ]
  ],
  [
    [
      194811,
      194811
    ],
    "mapped",
    [
      146620
    ]
  ],
  [
    [
      194812,
      194812
    ],
    "mapped",
    [
      27839
    ]
  ],
  [
    [
      194813,
      194813
    ],
    "mapped",
    [
      27853
    ]
  ],
  [
    [
      194814,
      194814
    ],
    "mapped",
    [
      27751
    ]
  ],
  [
    [
      194815,
      194815
    ],
    "mapped",
    [
      27926
    ]
  ],
  [
    [
      194816,
      194816
    ],
    "mapped",
    [
      27966
    ]
  ],
  [
    [
      194817,
      194817
    ],
    "mapped",
    [
      28023
    ]
  ],
  [
    [
      194818,
      194818
    ],
    "mapped",
    [
      27969
    ]
  ],
  [
    [
      194819,
      194819
    ],
    "mapped",
    [
      28009
    ]
  ],
  [
    [
      194820,
      194820
    ],
    "mapped",
    [
      28024
    ]
  ],
  [
    [
      194821,
      194821
    ],
    "mapped",
    [
      28037
    ]
  ],
  [
    [
      194822,
      194822
    ],
    "mapped",
    [
      146718
    ]
  ],
  [
    [
      194823,
      194823
    ],
    "mapped",
    [
      27956
    ]
  ],
  [
    [
      194824,
      194824
    ],
    "mapped",
    [
      28207
    ]
  ],
  [
    [
      194825,
      194825
    ],
    "mapped",
    [
      28270
    ]
  ],
  [
    [
      194826,
      194826
    ],
    "mapped",
    [
      15667
    ]
  ],
  [
    [
      194827,
      194827
    ],
    "mapped",
    [
      28363
    ]
  ],
  [
    [
      194828,
      194828
    ],
    "mapped",
    [
      28359
    ]
  ],
  [
    [
      194829,
      194829
    ],
    "mapped",
    [
      147153
    ]
  ],
  [
    [
      194830,
      194830
    ],
    "mapped",
    [
      28153
    ]
  ],
  [
    [
      194831,
      194831
    ],
    "mapped",
    [
      28526
    ]
  ],
  [
    [
      194832,
      194832
    ],
    "mapped",
    [
      147294
    ]
  ],
  [
    [
      194833,
      194833
    ],
    "mapped",
    [
      147342
    ]
  ],
  [
    [
      194834,
      194834
    ],
    "mapped",
    [
      28614
    ]
  ],
  [
    [
      194835,
      194835
    ],
    "mapped",
    [
      28729
    ]
  ],
  [
    [
      194836,
      194836
    ],
    "mapped",
    [
      28702
    ]
  ],
  [
    [
      194837,
      194837
    ],
    "mapped",
    [
      28699
    ]
  ],
  [
    [
      194838,
      194838
    ],
    "mapped",
    [
      15766
    ]
  ],
  [
    [
      194839,
      194839
    ],
    "mapped",
    [
      28746
    ]
  ],
  [
    [
      194840,
      194840
    ],
    "mapped",
    [
      28797
    ]
  ],
  [
    [
      194841,
      194841
    ],
    "mapped",
    [
      28791
    ]
  ],
  [
    [
      194842,
      194842
    ],
    "mapped",
    [
      28845
    ]
  ],
  [
    [
      194843,
      194843
    ],
    "mapped",
    [
      132389
    ]
  ],
  [
    [
      194844,
      194844
    ],
    "mapped",
    [
      28997
    ]
  ],
  [
    [
      194845,
      194845
    ],
    "mapped",
    [
      148067
    ]
  ],
  [
    [
      194846,
      194846
    ],
    "mapped",
    [
      29084
    ]
  ],
  [
    [
      194847,
      194847
    ],
    "disallowed"
  ],
  [
    [
      194848,
      194848
    ],
    "mapped",
    [
      29224
    ]
  ],
  [
    [
      194849,
      194849
    ],
    "mapped",
    [
      29237
    ]
  ],
  [
    [
      194850,
      194850
    ],
    "mapped",
    [
      29264
    ]
  ],
  [
    [
      194851,
      194851
    ],
    "mapped",
    [
      149e3
    ]
  ],
  [
    [
      194852,
      194852
    ],
    "mapped",
    [
      29312
    ]
  ],
  [
    [
      194853,
      194853
    ],
    "mapped",
    [
      29333
    ]
  ],
  [
    [
      194854,
      194854
    ],
    "mapped",
    [
      149301
    ]
  ],
  [
    [
      194855,
      194855
    ],
    "mapped",
    [
      149524
    ]
  ],
  [
    [
      194856,
      194856
    ],
    "mapped",
    [
      29562
    ]
  ],
  [
    [
      194857,
      194857
    ],
    "mapped",
    [
      29579
    ]
  ],
  [
    [
      194858,
      194858
    ],
    "mapped",
    [
      16044
    ]
  ],
  [
    [
      194859,
      194859
    ],
    "mapped",
    [
      29605
    ]
  ],
  [
    [
      194860,
      194861
    ],
    "mapped",
    [
      16056
    ]
  ],
  [
    [
      194862,
      194862
    ],
    "mapped",
    [
      29767
    ]
  ],
  [
    [
      194863,
      194863
    ],
    "mapped",
    [
      29788
    ]
  ],
  [
    [
      194864,
      194864
    ],
    "mapped",
    [
      29809
    ]
  ],
  [
    [
      194865,
      194865
    ],
    "mapped",
    [
      29829
    ]
  ],
  [
    [
      194866,
      194866
    ],
    "mapped",
    [
      29898
    ]
  ],
  [
    [
      194867,
      194867
    ],
    "mapped",
    [
      16155
    ]
  ],
  [
    [
      194868,
      194868
    ],
    "mapped",
    [
      29988
    ]
  ],
  [
    [
      194869,
      194869
    ],
    "mapped",
    [
      150582
    ]
  ],
  [
    [
      194870,
      194870
    ],
    "mapped",
    [
      30014
    ]
  ],
  [
    [
      194871,
      194871
    ],
    "mapped",
    [
      150674
    ]
  ],
  [
    [
      194872,
      194872
    ],
    "mapped",
    [
      30064
    ]
  ],
  [
    [
      194873,
      194873
    ],
    "mapped",
    [
      139679
    ]
  ],
  [
    [
      194874,
      194874
    ],
    "mapped",
    [
      30224
    ]
  ],
  [
    [
      194875,
      194875
    ],
    "mapped",
    [
      151457
    ]
  ],
  [
    [
      194876,
      194876
    ],
    "mapped",
    [
      151480
    ]
  ],
  [
    [
      194877,
      194877
    ],
    "mapped",
    [
      151620
    ]
  ],
  [
    [
      194878,
      194878
    ],
    "mapped",
    [
      16380
    ]
  ],
  [
    [
      194879,
      194879
    ],
    "mapped",
    [
      16392
    ]
  ],
  [
    [
      194880,
      194880
    ],
    "mapped",
    [
      30452
    ]
  ],
  [
    [
      194881,
      194881
    ],
    "mapped",
    [
      151795
    ]
  ],
  [
    [
      194882,
      194882
    ],
    "mapped",
    [
      151794
    ]
  ],
  [
    [
      194883,
      194883
    ],
    "mapped",
    [
      151833
    ]
  ],
  [
    [
      194884,
      194884
    ],
    "mapped",
    [
      151859
    ]
  ],
  [
    [
      194885,
      194885
    ],
    "mapped",
    [
      30494
    ]
  ],
  [
    [
      194886,
      194887
    ],
    "mapped",
    [
      30495
    ]
  ],
  [
    [
      194888,
      194888
    ],
    "mapped",
    [
      30538
    ]
  ],
  [
    [
      194889,
      194889
    ],
    "mapped",
    [
      16441
    ]
  ],
  [
    [
      194890,
      194890
    ],
    "mapped",
    [
      30603
    ]
  ],
  [
    [
      194891,
      194891
    ],
    "mapped",
    [
      16454
    ]
  ],
  [
    [
      194892,
      194892
    ],
    "mapped",
    [
      16534
    ]
  ],
  [
    [
      194893,
      194893
    ],
    "mapped",
    [
      152605
    ]
  ],
  [
    [
      194894,
      194894
    ],
    "mapped",
    [
      30798
    ]
  ],
  [
    [
      194895,
      194895
    ],
    "mapped",
    [
      30860
    ]
  ],
  [
    [
      194896,
      194896
    ],
    "mapped",
    [
      30924
    ]
  ],
  [
    [
      194897,
      194897
    ],
    "mapped",
    [
      16611
    ]
  ],
  [
    [
      194898,
      194898
    ],
    "mapped",
    [
      153126
    ]
  ],
  [
    [
      194899,
      194899
    ],
    "mapped",
    [
      31062
    ]
  ],
  [
    [
      194900,
      194900
    ],
    "mapped",
    [
      153242
    ]
  ],
  [
    [
      194901,
      194901
    ],
    "mapped",
    [
      153285
    ]
  ],
  [
    [
      194902,
      194902
    ],
    "mapped",
    [
      31119
    ]
  ],
  [
    [
      194903,
      194903
    ],
    "mapped",
    [
      31211
    ]
  ],
  [
    [
      194904,
      194904
    ],
    "mapped",
    [
      16687
    ]
  ],
  [
    [
      194905,
      194905
    ],
    "mapped",
    [
      31296
    ]
  ],
  [
    [
      194906,
      194906
    ],
    "mapped",
    [
      31306
    ]
  ],
  [
    [
      194907,
      194907
    ],
    "mapped",
    [
      31311
    ]
  ],
  [
    [
      194908,
      194908
    ],
    "mapped",
    [
      153980
    ]
  ],
  [
    [
      194909,
      194910
    ],
    "mapped",
    [
      154279
    ]
  ],
  [
    [
      194911,
      194911
    ],
    "disallowed"
  ],
  [
    [
      194912,
      194912
    ],
    "mapped",
    [
      16898
    ]
  ],
  [
    [
      194913,
      194913
    ],
    "mapped",
    [
      154539
    ]
  ],
  [
    [
      194914,
      194914
    ],
    "mapped",
    [
      31686
    ]
  ],
  [
    [
      194915,
      194915
    ],
    "mapped",
    [
      31689
    ]
  ],
  [
    [
      194916,
      194916
    ],
    "mapped",
    [
      16935
    ]
  ],
  [
    [
      194917,
      194917
    ],
    "mapped",
    [
      154752
    ]
  ],
  [
    [
      194918,
      194918
    ],
    "mapped",
    [
      31954
    ]
  ],
  [
    [
      194919,
      194919
    ],
    "mapped",
    [
      17056
    ]
  ],
  [
    [
      194920,
      194920
    ],
    "mapped",
    [
      31976
    ]
  ],
  [
    [
      194921,
      194921
    ],
    "mapped",
    [
      31971
    ]
  ],
  [
    [
      194922,
      194922
    ],
    "mapped",
    [
      32e3
    ]
  ],
  [
    [
      194923,
      194923
    ],
    "mapped",
    [
      155526
    ]
  ],
  [
    [
      194924,
      194924
    ],
    "mapped",
    [
      32099
    ]
  ],
  [
    [
      194925,
      194925
    ],
    "mapped",
    [
      17153
    ]
  ],
  [
    [
      194926,
      194926
    ],
    "mapped",
    [
      32199
    ]
  ],
  [
    [
      194927,
      194927
    ],
    "mapped",
    [
      32258
    ]
  ],
  [
    [
      194928,
      194928
    ],
    "mapped",
    [
      32325
    ]
  ],
  [
    [
      194929,
      194929
    ],
    "mapped",
    [
      17204
    ]
  ],
  [
    [
      194930,
      194930
    ],
    "mapped",
    [
      156200
    ]
  ],
  [
    [
      194931,
      194931
    ],
    "mapped",
    [
      156231
    ]
  ],
  [
    [
      194932,
      194932
    ],
    "mapped",
    [
      17241
    ]
  ],
  [
    [
      194933,
      194933
    ],
    "mapped",
    [
      156377
    ]
  ],
  [
    [
      194934,
      194934
    ],
    "mapped",
    [
      32634
    ]
  ],
  [
    [
      194935,
      194935
    ],
    "mapped",
    [
      156478
    ]
  ],
  [
    [
      194936,
      194936
    ],
    "mapped",
    [
      32661
    ]
  ],
  [
    [
      194937,
      194937
    ],
    "mapped",
    [
      32762
    ]
  ],
  [
    [
      194938,
      194938
    ],
    "mapped",
    [
      32773
    ]
  ],
  [
    [
      194939,
      194939
    ],
    "mapped",
    [
      156890
    ]
  ],
  [
    [
      194940,
      194940
    ],
    "mapped",
    [
      156963
    ]
  ],
  [
    [
      194941,
      194941
    ],
    "mapped",
    [
      32864
    ]
  ],
  [
    [
      194942,
      194942
    ],
    "mapped",
    [
      157096
    ]
  ],
  [
    [
      194943,
      194943
    ],
    "mapped",
    [
      32880
    ]
  ],
  [
    [
      194944,
      194944
    ],
    "mapped",
    [
      144223
    ]
  ],
  [
    [
      194945,
      194945
    ],
    "mapped",
    [
      17365
    ]
  ],
  [
    [
      194946,
      194946
    ],
    "mapped",
    [
      32946
    ]
  ],
  [
    [
      194947,
      194947
    ],
    "mapped",
    [
      33027
    ]
  ],
  [
    [
      194948,
      194948
    ],
    "mapped",
    [
      17419
    ]
  ],
  [
    [
      194949,
      194949
    ],
    "mapped",
    [
      33086
    ]
  ],
  [
    [
      194950,
      194950
    ],
    "mapped",
    [
      23221
    ]
  ],
  [
    [
      194951,
      194951
    ],
    "mapped",
    [
      157607
    ]
  ],
  [
    [
      194952,
      194952
    ],
    "mapped",
    [
      157621
    ]
  ],
  [
    [
      194953,
      194953
    ],
    "mapped",
    [
      144275
    ]
  ],
  [
    [
      194954,
      194954
    ],
    "mapped",
    [
      144284
    ]
  ],
  [
    [
      194955,
      194955
    ],
    "mapped",
    [
      33281
    ]
  ],
  [
    [
      194956,
      194956
    ],
    "mapped",
    [
      33284
    ]
  ],
  [
    [
      194957,
      194957
    ],
    "mapped",
    [
      36766
    ]
  ],
  [
    [
      194958,
      194958
    ],
    "mapped",
    [
      17515
    ]
  ],
  [
    [
      194959,
      194959
    ],
    "mapped",
    [
      33425
    ]
  ],
  [
    [
      194960,
      194960
    ],
    "mapped",
    [
      33419
    ]
  ],
  [
    [
      194961,
      194961
    ],
    "mapped",
    [
      33437
    ]
  ],
  [
    [
      194962,
      194962
    ],
    "mapped",
    [
      21171
    ]
  ],
  [
    [
      194963,
      194963
    ],
    "mapped",
    [
      33457
    ]
  ],
  [
    [
      194964,
      194964
    ],
    "mapped",
    [
      33459
    ]
  ],
  [
    [
      194965,
      194965
    ],
    "mapped",
    [
      33469
    ]
  ],
  [
    [
      194966,
      194966
    ],
    "mapped",
    [
      33510
    ]
  ],
  [
    [
      194967,
      194967
    ],
    "mapped",
    [
      158524
    ]
  ],
  [
    [
      194968,
      194968
    ],
    "mapped",
    [
      33509
    ]
  ],
  [
    [
      194969,
      194969
    ],
    "mapped",
    [
      33565
    ]
  ],
  [
    [
      194970,
      194970
    ],
    "mapped",
    [
      33635
    ]
  ],
  [
    [
      194971,
      194971
    ],
    "mapped",
    [
      33709
    ]
  ],
  [
    [
      194972,
      194972
    ],
    "mapped",
    [
      33571
    ]
  ],
  [
    [
      194973,
      194973
    ],
    "mapped",
    [
      33725
    ]
  ],
  [
    [
      194974,
      194974
    ],
    "mapped",
    [
      33767
    ]
  ],
  [
    [
      194975,
      194975
    ],
    "mapped",
    [
      33879
    ]
  ],
  [
    [
      194976,
      194976
    ],
    "mapped",
    [
      33619
    ]
  ],
  [
    [
      194977,
      194977
    ],
    "mapped",
    [
      33738
    ]
  ],
  [
    [
      194978,
      194978
    ],
    "mapped",
    [
      33740
    ]
  ],
  [
    [
      194979,
      194979
    ],
    "mapped",
    [
      33756
    ]
  ],
  [
    [
      194980,
      194980
    ],
    "mapped",
    [
      158774
    ]
  ],
  [
    [
      194981,
      194981
    ],
    "mapped",
    [
      159083
    ]
  ],
  [
    [
      194982,
      194982
    ],
    "mapped",
    [
      158933
    ]
  ],
  [
    [
      194983,
      194983
    ],
    "mapped",
    [
      17707
    ]
  ],
  [
    [
      194984,
      194984
    ],
    "mapped",
    [
      34033
    ]
  ],
  [
    [
      194985,
      194985
    ],
    "mapped",
    [
      34035
    ]
  ],
  [
    [
      194986,
      194986
    ],
    "mapped",
    [
      34070
    ]
  ],
  [
    [
      194987,
      194987
    ],
    "mapped",
    [
      160714
    ]
  ],
  [
    [
      194988,
      194988
    ],
    "mapped",
    [
      34148
    ]
  ],
  [
    [
      194989,
      194989
    ],
    "mapped",
    [
      159532
    ]
  ],
  [
    [
      194990,
      194990
    ],
    "mapped",
    [
      17757
    ]
  ],
  [
    [
      194991,
      194991
    ],
    "mapped",
    [
      17761
    ]
  ],
  [
    [
      194992,
      194992
    ],
    "mapped",
    [
      159665
    ]
  ],
  [
    [
      194993,
      194993
    ],
    "mapped",
    [
      159954
    ]
  ],
  [
    [
      194994,
      194994
    ],
    "mapped",
    [
      17771
    ]
  ],
  [
    [
      194995,
      194995
    ],
    "mapped",
    [
      34384
    ]
  ],
  [
    [
      194996,
      194996
    ],
    "mapped",
    [
      34396
    ]
  ],
  [
    [
      194997,
      194997
    ],
    "mapped",
    [
      34407
    ]
  ],
  [
    [
      194998,
      194998
    ],
    "mapped",
    [
      34409
    ]
  ],
  [
    [
      194999,
      194999
    ],
    "mapped",
    [
      34473
    ]
  ],
  [
    [
      195e3,
      195e3
    ],
    "mapped",
    [
      34440
    ]
  ],
  [
    [
      195001,
      195001
    ],
    "mapped",
    [
      34574
    ]
  ],
  [
    [
      195002,
      195002
    ],
    "mapped",
    [
      34530
    ]
  ],
  [
    [
      195003,
      195003
    ],
    "mapped",
    [
      34681
    ]
  ],
  [
    [
      195004,
      195004
    ],
    "mapped",
    [
      34600
    ]
  ],
  [
    [
      195005,
      195005
    ],
    "mapped",
    [
      34667
    ]
  ],
  [
    [
      195006,
      195006
    ],
    "mapped",
    [
      34694
    ]
  ],
  [
    [
      195007,
      195007
    ],
    "disallowed"
  ],
  [
    [
      195008,
      195008
    ],
    "mapped",
    [
      34785
    ]
  ],
  [
    [
      195009,
      195009
    ],
    "mapped",
    [
      34817
    ]
  ],
  [
    [
      195010,
      195010
    ],
    "mapped",
    [
      17913
    ]
  ],
  [
    [
      195011,
      195011
    ],
    "mapped",
    [
      34912
    ]
  ],
  [
    [
      195012,
      195012
    ],
    "mapped",
    [
      34915
    ]
  ],
  [
    [
      195013,
      195013
    ],
    "mapped",
    [
      161383
    ]
  ],
  [
    [
      195014,
      195014
    ],
    "mapped",
    [
      35031
    ]
  ],
  [
    [
      195015,
      195015
    ],
    "mapped",
    [
      35038
    ]
  ],
  [
    [
      195016,
      195016
    ],
    "mapped",
    [
      17973
    ]
  ],
  [
    [
      195017,
      195017
    ],
    "mapped",
    [
      35066
    ]
  ],
  [
    [
      195018,
      195018
    ],
    "mapped",
    [
      13499
    ]
  ],
  [
    [
      195019,
      195019
    ],
    "mapped",
    [
      161966
    ]
  ],
  [
    [
      195020,
      195020
    ],
    "mapped",
    [
      162150
    ]
  ],
  [
    [
      195021,
      195021
    ],
    "mapped",
    [
      18110
    ]
  ],
  [
    [
      195022,
      195022
    ],
    "mapped",
    [
      18119
    ]
  ],
  [
    [
      195023,
      195023
    ],
    "mapped",
    [
      35488
    ]
  ],
  [
    [
      195024,
      195024
    ],
    "mapped",
    [
      35565
    ]
  ],
  [
    [
      195025,
      195025
    ],
    "mapped",
    [
      35722
    ]
  ],
  [
    [
      195026,
      195026
    ],
    "mapped",
    [
      35925
    ]
  ],
  [
    [
      195027,
      195027
    ],
    "mapped",
    [
      162984
    ]
  ],
  [
    [
      195028,
      195028
    ],
    "mapped",
    [
      36011
    ]
  ],
  [
    [
      195029,
      195029
    ],
    "mapped",
    [
      36033
    ]
  ],
  [
    [
      195030,
      195030
    ],
    "mapped",
    [
      36123
    ]
  ],
  [
    [
      195031,
      195031
    ],
    "mapped",
    [
      36215
    ]
  ],
  [
    [
      195032,
      195032
    ],
    "mapped",
    [
      163631
    ]
  ],
  [
    [
      195033,
      195033
    ],
    "mapped",
    [
      133124
    ]
  ],
  [
    [
      195034,
      195034
    ],
    "mapped",
    [
      36299
    ]
  ],
  [
    [
      195035,
      195035
    ],
    "mapped",
    [
      36284
    ]
  ],
  [
    [
      195036,
      195036
    ],
    "mapped",
    [
      36336
    ]
  ],
  [
    [
      195037,
      195037
    ],
    "mapped",
    [
      133342
    ]
  ],
  [
    [
      195038,
      195038
    ],
    "mapped",
    [
      36564
    ]
  ],
  [
    [
      195039,
      195039
    ],
    "mapped",
    [
      36664
    ]
  ],
  [
    [
      195040,
      195040
    ],
    "mapped",
    [
      165330
    ]
  ],
  [
    [
      195041,
      195041
    ],
    "mapped",
    [
      165357
    ]
  ],
  [
    [
      195042,
      195042
    ],
    "mapped",
    [
      37012
    ]
  ],
  [
    [
      195043,
      195043
    ],
    "mapped",
    [
      37105
    ]
  ],
  [
    [
      195044,
      195044
    ],
    "mapped",
    [
      37137
    ]
  ],
  [
    [
      195045,
      195045
    ],
    "mapped",
    [
      165678
    ]
  ],
  [
    [
      195046,
      195046
    ],
    "mapped",
    [
      37147
    ]
  ],
  [
    [
      195047,
      195047
    ],
    "mapped",
    [
      37432
    ]
  ],
  [
    [
      195048,
      195048
    ],
    "mapped",
    [
      37591
    ]
  ],
  [
    [
      195049,
      195049
    ],
    "mapped",
    [
      37592
    ]
  ],
  [
    [
      195050,
      195050
    ],
    "mapped",
    [
      37500
    ]
  ],
  [
    [
      195051,
      195051
    ],
    "mapped",
    [
      37881
    ]
  ],
  [
    [
      195052,
      195052
    ],
    "mapped",
    [
      37909
    ]
  ],
  [
    [
      195053,
      195053
    ],
    "mapped",
    [
      166906
    ]
  ],
  [
    [
      195054,
      195054
    ],
    "mapped",
    [
      38283
    ]
  ],
  [
    [
      195055,
      195055
    ],
    "mapped",
    [
      18837
    ]
  ],
  [
    [
      195056,
      195056
    ],
    "mapped",
    [
      38327
    ]
  ],
  [
    [
      195057,
      195057
    ],
    "mapped",
    [
      167287
    ]
  ],
  [
    [
      195058,
      195058
    ],
    "mapped",
    [
      18918
    ]
  ],
  [
    [
      195059,
      195059
    ],
    "mapped",
    [
      38595
    ]
  ],
  [
    [
      195060,
      195060
    ],
    "mapped",
    [
      23986
    ]
  ],
  [
    [
      195061,
      195061
    ],
    "mapped",
    [
      38691
    ]
  ],
  [
    [
      195062,
      195062
    ],
    "mapped",
    [
      168261
    ]
  ],
  [
    [
      195063,
      195063
    ],
    "mapped",
    [
      168474
    ]
  ],
  [
    [
      195064,
      195064
    ],
    "mapped",
    [
      19054
    ]
  ],
  [
    [
      195065,
      195065
    ],
    "mapped",
    [
      19062
    ]
  ],
  [
    [
      195066,
      195066
    ],
    "mapped",
    [
      38880
    ]
  ],
  [
    [
      195067,
      195067
    ],
    "mapped",
    [
      168970
    ]
  ],
  [
    [
      195068,
      195068
    ],
    "mapped",
    [
      19122
    ]
  ],
  [
    [
      195069,
      195069
    ],
    "mapped",
    [
      169110
    ]
  ],
  [
    [
      195070,
      195071
    ],
    "mapped",
    [
      38923
    ]
  ],
  [
    [
      195072,
      195072
    ],
    "mapped",
    [
      38953
    ]
  ],
  [
    [
      195073,
      195073
    ],
    "mapped",
    [
      169398
    ]
  ],
  [
    [
      195074,
      195074
    ],
    "mapped",
    [
      39138
    ]
  ],
  [
    [
      195075,
      195075
    ],
    "mapped",
    [
      19251
    ]
  ],
  [
    [
      195076,
      195076
    ],
    "mapped",
    [
      39209
    ]
  ],
  [
    [
      195077,
      195077
    ],
    "mapped",
    [
      39335
    ]
  ],
  [
    [
      195078,
      195078
    ],
    "mapped",
    [
      39362
    ]
  ],
  [
    [
      195079,
      195079
    ],
    "mapped",
    [
      39422
    ]
  ],
  [
    [
      195080,
      195080
    ],
    "mapped",
    [
      19406
    ]
  ],
  [
    [
      195081,
      195081
    ],
    "mapped",
    [
      170800
    ]
  ],
  [
    [
      195082,
      195082
    ],
    "mapped",
    [
      39698
    ]
  ],
  [
    [
      195083,
      195083
    ],
    "mapped",
    [
      4e4
    ]
  ],
  [
    [
      195084,
      195084
    ],
    "mapped",
    [
      40189
    ]
  ],
  [
    [
      195085,
      195085
    ],
    "mapped",
    [
      19662
    ]
  ],
  [
    [
      195086,
      195086
    ],
    "mapped",
    [
      19693
    ]
  ],
  [
    [
      195087,
      195087
    ],
    "mapped",
    [
      40295
    ]
  ],
  [
    [
      195088,
      195088
    ],
    "mapped",
    [
      172238
    ]
  ],
  [
    [
      195089,
      195089
    ],
    "mapped",
    [
      19704
    ]
  ],
  [
    [
      195090,
      195090
    ],
    "mapped",
    [
      172293
    ]
  ],
  [
    [
      195091,
      195091
    ],
    "mapped",
    [
      172558
    ]
  ],
  [
    [
      195092,
      195092
    ],
    "mapped",
    [
      172689
    ]
  ],
  [
    [
      195093,
      195093
    ],
    "mapped",
    [
      40635
    ]
  ],
  [
    [
      195094,
      195094
    ],
    "mapped",
    [
      19798
    ]
  ],
  [
    [
      195095,
      195095
    ],
    "mapped",
    [
      40697
    ]
  ],
  [
    [
      195096,
      195096
    ],
    "mapped",
    [
      40702
    ]
  ],
  [
    [
      195097,
      195097
    ],
    "mapped",
    [
      40709
    ]
  ],
  [
    [
      195098,
      195098
    ],
    "mapped",
    [
      40719
    ]
  ],
  [
    [
      195099,
      195099
    ],
    "mapped",
    [
      40726
    ]
  ],
  [
    [
      195100,
      195100
    ],
    "mapped",
    [
      40763
    ]
  ],
  [
    [
      195101,
      195101
    ],
    "mapped",
    [
      173568
    ]
  ],
  [
    [
      195102,
      196605
    ],
    "disallowed"
  ],
  [
    [
      196606,
      196607
    ],
    "disallowed"
  ],
  [
    [
      196608,
      262141
    ],
    "disallowed"
  ],
  [
    [
      262142,
      262143
    ],
    "disallowed"
  ],
  [
    [
      262144,
      327677
    ],
    "disallowed"
  ],
  [
    [
      327678,
      327679
    ],
    "disallowed"
  ],
  [
    [
      327680,
      393213
    ],
    "disallowed"
  ],
  [
    [
      393214,
      393215
    ],
    "disallowed"
  ],
  [
    [
      393216,
      458749
    ],
    "disallowed"
  ],
  [
    [
      458750,
      458751
    ],
    "disallowed"
  ],
  [
    [
      458752,
      524285
    ],
    "disallowed"
  ],
  [
    [
      524286,
      524287
    ],
    "disallowed"
  ],
  [
    [
      524288,
      589821
    ],
    "disallowed"
  ],
  [
    [
      589822,
      589823
    ],
    "disallowed"
  ],
  [
    [
      589824,
      655357
    ],
    "disallowed"
  ],
  [
    [
      655358,
      655359
    ],
    "disallowed"
  ],
  [
    [
      655360,
      720893
    ],
    "disallowed"
  ],
  [
    [
      720894,
      720895
    ],
    "disallowed"
  ],
  [
    [
      720896,
      786429
    ],
    "disallowed"
  ],
  [
    [
      786430,
      786431
    ],
    "disallowed"
  ],
  [
    [
      786432,
      851965
    ],
    "disallowed"
  ],
  [
    [
      851966,
      851967
    ],
    "disallowed"
  ],
  [
    [
      851968,
      917501
    ],
    "disallowed"
  ],
  [
    [
      917502,
      917503
    ],
    "disallowed"
  ],
  [
    [
      917504,
      917504
    ],
    "disallowed"
  ],
  [
    [
      917505,
      917505
    ],
    "disallowed"
  ],
  [
    [
      917506,
      917535
    ],
    "disallowed"
  ],
  [
    [
      917536,
      917631
    ],
    "disallowed"
  ],
  [
    [
      917632,
      917759
    ],
    "disallowed"
  ],
  [
    [
      917760,
      917999
    ],
    "ignored"
  ],
  [
    [
      918e3,
      983037
    ],
    "disallowed"
  ],
  [
    [
      983038,
      983039
    ],
    "disallowed"
  ],
  [
    [
      983040,
      1048573
    ],
    "disallowed"
  ],
  [
    [
      1048574,
      1048575
    ],
    "disallowed"
  ],
  [
    [
      1048576,
      1114109
    ],
    "disallowed"
  ],
  [
    [
      1114110,
      1114111
    ],
    "disallowed"
  ]
];
var Vg = Ns, Ip = wF, Xr = {
  TRANSITIONAL: 0,
  NONTRANSITIONAL: 1
};
function zg(e) {
  return e.split("\0").map(function(t) {
    return t.normalize("NFC");
  }).join("\0");
}
function qg(e) {
  for (var t = 0, a = Ip.length - 1; t <= a; ) {
    var r = Math.floor((t + a) / 2), f = Ip[r];
    if (f[0][0] <= e && f[0][1] >= e)
      return f;
    f[0][0] > e ? a = r - 1 : t = r + 1;
  }
  return null;
}
var SF = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g;
function Kg(e) {
  return e.replace(SF, "_").length;
}
function EF(e, t, a) {
  for (var r = !1, f = "", i = Kg(e), n = 0; n < i; ++n) {
    var o = e.codePointAt(n), s = qg(o);
    switch (s[1]) {
      case "disallowed":
        r = !0, f += String.fromCodePoint(o);
        break;
      case "ignored":
        break;
      case "mapped":
        f += String.fromCodePoint.apply(String, s[2]);
        break;
      case "deviation":
        a === Xr.TRANSITIONAL ? f += String.fromCodePoint.apply(String, s[2]) : f += String.fromCodePoint(o);
        break;
      case "valid":
        f += String.fromCodePoint(o);
        break;
      case "disallowed_STD3_mapped":
        t ? (r = !0, f += String.fromCodePoint(o)) : f += String.fromCodePoint.apply(String, s[2]);
        break;
      case "disallowed_STD3_valid":
        t && (r = !0), f += String.fromCodePoint(o);
        break;
    }
  }
  return {
    string: f,
    error: r
  };
}
var TF = /[\u0300-\u036F\u0483-\u0489\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u0711\u0730-\u074A\u07A6-\u07B0\u07EB-\u07F3\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08E4-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A70\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B62\u0B63\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0C00-\u0C03\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0D01-\u0D03\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D82\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0EB1\u0EB4-\u0EB9\u0EBB\u0EBC\u0EC8-\u0ECD\u0F18\u0F19\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F\u109A-\u109D\u135D-\u135F\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u180B-\u180D\u18A9\u1920-\u192B\u1930-\u193B\u19B0-\u19C0\u19C8\u19C9\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F\u1AB0-\u1ABE\u1B00-\u1B04\u1B34-\u1B44\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BE6-\u1BF3\u1C24-\u1C37\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF2-\u1CF4\u1CF8\u1CF9\u1DC0-\u1DF5\u1DFC-\u1DFF\u20D0-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA66F-\uA672\uA674-\uA67D\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA880\uA881\uA8B4-\uA8C4\uA8E0-\uA8F1\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9E5\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uFB1E\uFE00-\uFE0F\uFE20-\uFE2D]|\uD800[\uDDFD\uDEE0\uDF76-\uDF7A]|\uD802[\uDE01-\uDE03\uDE05\uDE06\uDE0C-\uDE0F\uDE38-\uDE3A\uDE3F\uDEE5\uDEE6]|\uD804[\uDC00-\uDC02\uDC38-\uDC46\uDC7F-\uDC82\uDCB0-\uDCBA\uDD00-\uDD02\uDD27-\uDD34\uDD73\uDD80-\uDD82\uDDB3-\uDDC0\uDE2C-\uDE37\uDEDF-\uDEEA\uDF01-\uDF03\uDF3C\uDF3E-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF57\uDF62\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDCB0-\uDCC3\uDDAF-\uDDB5\uDDB8-\uDDC0\uDE30-\uDE40\uDEAB-\uDEB7]|\uD81A[\uDEF0-\uDEF4\uDF30-\uDF36]|\uD81B[\uDF51-\uDF7E\uDF8F-\uDF92]|\uD82F[\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD83A[\uDCD0-\uDCD6]|\uDB40[\uDD00-\uDDEF]/;
function AF(e, t) {
  e.substr(0, 4) === "xn--" && (e = Vg.toUnicode(e), Xr.NONTRANSITIONAL);
  var a = !1;
  (zg(e) !== e || e[3] === "-" && e[4] === "-" || e[0] === "-" || e[e.length - 1] === "-" || e.indexOf(".") !== -1 || e.search(TF) === 0) && (a = !0);
  for (var r = Kg(e), f = 0; f < r; ++f) {
    var i = qg(e.codePointAt(f));
    if (Uf === Xr.TRANSITIONAL && i[1] !== "valid" || Uf === Xr.NONTRANSITIONAL && i[1] !== "valid" && i[1] !== "deviation") {
      a = !0;
      break;
    }
  }
  return {
    label: e,
    error: a
  };
}
function Uf(e, t, a) {
  var r = EF(e, t, a);
  r.string = zg(r.string);
  for (var f = r.string.split("."), i = 0; i < f.length; ++i)
    try {
      var n = AF(f[i]);
      f[i] = n.label, r.error = r.error || n.error;
    } catch {
      r.error = !0;
    }
  return {
    string: f.join("."),
    error: r.error
  };
}
tn.toASCII = function(e, t, a, r) {
  var f = Uf(e, t, a), i = f.string.split(".");
  if (i = i.map(function(s) {
    try {
      return Vg.toASCII(s);
    } catch {
      return f.error = !0, s;
    }
  }), r) {
    var n = i.slice(0, i.length - 1).join(".").length;
    (n.length > 253 || n.length === 0) && (f.error = !0);
    for (var o = 0; o < i.length; ++o)
      if (i.length > 63 || i.length === 0) {
        f.error = !0;
        break;
      }
  }
  return f.error ? null : i.join(".");
};
tn.toUnicode = function(e, t) {
  var a = Uf(e, t, Xr.NONTRANSITIONAL);
  return {
    domain: a.string,
    error: a.error
  };
};
tn.PROCESSING_OPTIONS = Xr;
(function(e) {
  const t = Ns, a = tn, r = {
    ftp: 21,
    file: null,
    gopher: 70,
    http: 80,
    https: 443,
    ws: 80,
    wss: 443
  }, f = Symbol("failure");
  function i(j) {
    return t.ucs2.decode(j).length;
  }
  function n(j, V) {
    const n7 = j[V];
    return isNaN(n7) ? void 0 : String.fromCodePoint(n7);
  }
  function o(j) {
    return j >= 48 && j <= 57;
  }
  function s(j) {
    return j >= 65 && j <= 90 || j >= 97 && j <= 122;
  }
  function b(j) {
    return s(j) || o(j);
  }
  function l(j) {
    return o(j) || j >= 65 && j <= 70 || j >= 97 && j <= 102;
  }
  function v(j) {
    return j === "." || j.toLowerCase() === "%2e";
  }
  function m(j) {
    return j = j.toLowerCase(), j === ".." || j === "%2e." || j === ".%2e" || j === "%2e%2e";
  }
  function x(j, V) {
    return s(j) && (V === 58 || V === 124);
  }
  function I(j) {
    return j.length === 2 && s(j.codePointAt(0)) && (j[1] === ":" || j[1] === "|");
  }
  function k(j) {
    return j.length === 2 && s(j.codePointAt(0)) && j[1] === ":";
  }
  function P(j) {
    return j.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|%|\/|:|\?|@|\[|\\|\]/) !== -1;
  }
  function M(j) {
    return j.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|\/|:|\?|@|\[|\\|\]/) !== -1;
  }
  function R(j) {
    return r[j] !== void 0;
  }
  function F(j) {
    return R(j.scheme);
  }
  function C(j) {
    return r[j];
  }
  function L(j) {
    let V = j.toString(16).toUpperCase();
    return V.length === 1 && (V = "0" + V), "%" + V;
  }
  function U(j) {
    const V = new Q.Buffer(j);
    let n7 = "";
    for (let K = 0; K < V.length; ++K)
      n7 += L(V[K]);
    return n7;
  }
  function q(j) {
    const V = new Q.Buffer(j), n7 = [];
    for (let K = 0; K < V.length; ++K)
      V[K] !== 37 ? n7.push(V[K]) : V[K] === 37 && l(V[K + 1]) && l(V[K + 2]) ? (n7.push(parseInt(V.slice(K + 1, K + 3).toString(), 16)), K += 2) : n7.push(V[K]);
    return new Q.Buffer(n7).toString();
  }
  function Z(j) {
    return j <= 31 || j > 126;
  }
  const z = /* @__PURE__ */ new Set([32, 34, 35, 60, 62, 63, 96, 123, 125]);
  function G(j) {
    return Z(j) || z.has(j);
  }
  const O = /* @__PURE__ */ new Set([47, 58, 59, 61, 64, 91, 92, 93, 94, 124]);
  function u(j) {
    return G(j) || O.has(j);
  }
  function p(j, V) {
    const n7 = String.fromCodePoint(j);
    return V(j) ? U(n7) : n7;
  }
  function d(j) {
    let V = 10;
    return j.length >= 2 && j.charAt(0) === "0" && j.charAt(1).toLowerCase() === "x" ? (j = j.substring(2), V = 16) : j.length >= 2 && j.charAt(0) === "0" && (j = j.substring(1), V = 8), j === "" ? 0 : (V === 10 ? /[^0-9]/ : V === 16 ? /[^0-9A-Fa-f]/ : /[^0-7]/).test(j) ? f : parseInt(j, V);
  }
  function c(j) {
    const V = j.split(".");
    if (V[V.length - 1] === "" && V.length > 1 && V.pop(), V.length > 4)
      return j;
    const n7 = [];
    for (const D of V) {
      if (D === "")
        return j;
      const W = d(D);
      if (W === f)
        return j;
      n7.push(W);
    }
    for (let D = 0; D < n7.length - 1; ++D)
      if (n7[D] > 255)
        return f;
    if (n7[n7.length - 1] >= Math.pow(256, 5 - n7.length))
      return f;
    let K = n7.pop(), B = 0;
    for (const D of n7)
      K += D * Math.pow(256, 3 - B), ++B;
    return K;
  }
  function y(j) {
    let V = "", n7 = j;
    for (let K = 1; K <= 4; ++K)
      V = String(n7 % 256) + V, K !== 4 && (V = "." + V), n7 = Math.floor(n7 / 256);
    return V;
  }
  function S(j) {
    const V = [0, 0, 0, 0, 0, 0, 0, 0];
    let n7 = 0, K = null, B = 0;
    if (j = t.ucs2.decode(j), j[B] === 58) {
      if (j[B + 1] !== 58)
        return f;
      B += 2, ++n7, K = n7;
    }
    for (; B < j.length; ) {
      if (n7 === 8)
        return f;
      if (j[B] === 58) {
        if (K !== null)
          return f;
        ++B, ++n7, K = n7;
        continue;
      }
      let D = 0, W = 0;
      for (; W < 4 && l(j[B]); )
        D = D * 16 + parseInt(n(j, B), 16), ++B, ++W;
      if (j[B] === 46) {
        if (W === 0 || (B -= W, n7 > 6))
          return f;
        let e7 = 0;
        for (; j[B] !== void 0; ) {
          let o7 = null;
          if (e7 > 0)
            if (j[B] === 46 && e7 < 4)
              ++B;
            else
              return f;
          if (!o(j[B]))
            return f;
          for (; o(j[B]); ) {
            const a7 = parseInt(n(j, B));
            if (o7 === null)
              o7 = a7;
            else {
              if (o7 === 0)
                return f;
              o7 = o7 * 10 + a7;
            }
            if (o7 > 255)
              return f;
            ++B;
          }
          V[n7] = V[n7] * 256 + o7, ++e7, (e7 === 2 || e7 === 4) && ++n7;
        }
        if (e7 !== 4)
          return f;
        break;
      } else if (j[B] === 58) {
        if (++B, j[B] === void 0)
          return f;
      } else if (j[B] !== void 0)
        return f;
      V[n7] = D, ++n7;
    }
    if (K !== null) {
      let D = n7 - K;
      for (n7 = 7; n7 !== 0 && D > 0; ) {
        const W = V[K + D - 1];
        V[K + D - 1] = V[n7], V[n7] = W, --n7, --D;
      }
    } else if (K === null && n7 !== 8)
      return f;
    return V;
  }
  function T(j) {
    let V = "";
    const K = A(j).idx;
    let B = !1;
    for (let D = 0; D <= 7; ++D)
      if (!(B && j[D] === 0)) {
        if (B && (B = !1), K === D) {
          V += D === 0 ? "::" : ":", B = !0;
          continue;
        }
        V += j[D].toString(16), D !== 7 && (V += ":");
      }
    return V;
  }
  function g(j, V) {
    if (j[0] === "[")
      return j[j.length - 1] !== "]" ? f : S(j.substring(1, j.length - 1));
    if (!V)
      return w(j);
    const n7 = q(j), K = a.toASCII(n7, !1, a.PROCESSING_OPTIONS.NONTRANSITIONAL, !1);
    if (K === null || P(K))
      return f;
    const B = c(K);
    return typeof B == "number" || B === f ? B : K;
  }
  function w(j) {
    if (M(j))
      return f;
    let V = "";
    const n7 = t.ucs2.decode(j);
    for (let K = 0; K < n7.length; ++K)
      V += p(n7[K], Z);
    return V;
  }
  function A(j) {
    let V = null, n7 = 1, K = null, B = 0;
    for (let D = 0; D < j.length; ++D)
      j[D] !== 0 ? (B > n7 && (V = K, n7 = B), K = null, B = 0) : (K === null && (K = D), ++B);
    return B > n7 && (V = K, n7 = B), {
      idx: V,
      len: n7
    };
  }
  function h(j) {
    return typeof j == "number" ? y(j) : j instanceof Array ? "[" + T(j) + "]" : j;
  }
  function N(j) {
    return j.replace(/^[\u0000-\u001F\u0020]+|[\u0000-\u001F\u0020]+$/g, "");
  }
  function Y(j) {
    return j.replace(/\u0009|\u000A|\u000D/g, "");
  }
  function t7(j) {
    const V = j.path;
    V.length !== 0 && (j.scheme === "file" && V.length === 1 && X(V[0]) || V.pop());
  }
  function H(j) {
    return j.username !== "" || j.password !== "";
  }
  function $(j) {
    return j.host === null || j.host === "" || j.cannotBeABaseURL || j.scheme === "file";
  }
  function X(j) {
    return /^[A-Za-z]:$/.test(j);
  }
  function i7(j, V, n7, K, B) {
    if (this.pointer = 0, this.input = j, this.base = V || null, this.encodingOverride = n7 || "utf-8", this.stateOverride = B, this.url = K, this.failure = !1, this.parseError = !1, !this.url) {
      this.url = {
        scheme: "",
        username: "",
        password: "",
        host: null,
        port: null,
        path: [],
        query: null,
        fragment: null,
        cannotBeABaseURL: !1
      };
      const W = N(this.input);
      W !== this.input && (this.parseError = !0), this.input = W;
    }
    const D = Y(this.input);
    for (D !== this.input && (this.parseError = !0), this.input = D, this.state = B || "scheme start", this.buffer = "", this.atFlag = !1, this.arrFlag = !1, this.passwordTokenSeenFlag = !1, this.input = t.ucs2.decode(this.input); this.pointer <= this.input.length; ++this.pointer) {
      const W = this.input[this.pointer], e7 = isNaN(W) ? void 0 : String.fromCodePoint(W), o7 = this["parse " + this.state](W, e7);
      if (o7) {
        if (o7 === f) {
          this.failure = !0;
          break;
        }
      } else
        break;
    }
  }
  i7.prototype["parse scheme start"] = function(V, n7) {
    if (s(V))
      this.buffer += n7.toLowerCase(), this.state = "scheme";
    else if (!this.stateOverride)
      this.state = "no scheme", --this.pointer;
    else
      return this.parseError = !0, f;
    return !0;
  }, i7.prototype["parse scheme"] = function(V, n7) {
    if (b(V) || V === 43 || V === 45 || V === 46)
      this.buffer += n7.toLowerCase();
    else if (V === 58) {
      if (this.stateOverride && (F(this.url) && !R(this.buffer) || !F(this.url) && R(this.buffer) || (H(this.url) || this.url.port !== null) && this.buffer === "file" || this.url.scheme === "file" && (this.url.host === "" || this.url.host === null)) || (this.url.scheme = this.buffer, this.buffer = "", this.stateOverride))
        return !1;
      this.url.scheme === "file" ? ((this.input[this.pointer + 1] !== 47 || this.input[this.pointer + 2] !== 47) && (this.parseError = !0), this.state = "file") : F(this.url) && this.base !== null && this.base.scheme === this.url.scheme ? this.state = "special relative or authority" : F(this.url) ? this.state = "special authority slashes" : this.input[this.pointer + 1] === 47 ? (this.state = "path or authority", ++this.pointer) : (this.url.cannotBeABaseURL = !0, this.url.path.push(""), this.state = "cannot-be-a-base-URL path");
    } else if (!this.stateOverride)
      this.buffer = "", this.state = "no scheme", this.pointer = -1;
    else
      return this.parseError = !0, f;
    return !0;
  }, i7.prototype["parse no scheme"] = function(V) {
    return this.base === null || this.base.cannotBeABaseURL && V !== 35 ? f : (this.base.cannotBeABaseURL && V === 35 ? (this.url.scheme = this.base.scheme, this.url.path = this.base.path.slice(), this.url.query = this.base.query, this.url.fragment = "", this.url.cannotBeABaseURL = !0, this.state = "fragment") : this.base.scheme === "file" ? (this.state = "file", --this.pointer) : (this.state = "relative", --this.pointer), !0);
  }, i7.prototype["parse special relative or authority"] = function(V) {
    return V === 47 && this.input[this.pointer + 1] === 47 ? (this.state = "special authority ignore slashes", ++this.pointer) : (this.parseError = !0, this.state = "relative", --this.pointer), !0;
  }, i7.prototype["parse path or authority"] = function(V) {
    return V === 47 ? this.state = "authority" : (this.state = "path", --this.pointer), !0;
  }, i7.prototype["parse relative"] = function(V) {
    return this.url.scheme = this.base.scheme, isNaN(V) ? (this.url.username = this.base.username, this.url.password = this.base.password, this.url.host = this.base.host, this.url.port = this.base.port, this.url.path = this.base.path.slice(), this.url.query = this.base.query) : V === 47 ? this.state = "relative slash" : V === 63 ? (this.url.username = this.base.username, this.url.password = this.base.password, this.url.host = this.base.host, this.url.port = this.base.port, this.url.path = this.base.path.slice(), this.url.query = "", this.state = "query") : V === 35 ? (this.url.username = this.base.username, this.url.password = this.base.password, this.url.host = this.base.host, this.url.port = this.base.port, this.url.path = this.base.path.slice(), this.url.query = this.base.query, this.url.fragment = "", this.state = "fragment") : F(this.url) && V === 92 ? (this.parseError = !0, this.state = "relative slash") : (this.url.username = this.base.username, this.url.password = this.base.password, this.url.host = this.base.host, this.url.port = this.base.port, this.url.path = this.base.path.slice(0, this.base.path.length - 1), this.state = "path", --this.pointer), !0;
  }, i7.prototype["parse relative slash"] = function(V) {
    return F(this.url) && (V === 47 || V === 92) ? (V === 92 && (this.parseError = !0), this.state = "special authority ignore slashes") : V === 47 ? this.state = "authority" : (this.url.username = this.base.username, this.url.password = this.base.password, this.url.host = this.base.host, this.url.port = this.base.port, this.state = "path", --this.pointer), !0;
  }, i7.prototype["parse special authority slashes"] = function(V) {
    return V === 47 && this.input[this.pointer + 1] === 47 ? (this.state = "special authority ignore slashes", ++this.pointer) : (this.parseError = !0, this.state = "special authority ignore slashes", --this.pointer), !0;
  }, i7.prototype["parse special authority ignore slashes"] = function(V) {
    return V !== 47 && V !== 92 ? (this.state = "authority", --this.pointer) : this.parseError = !0, !0;
  }, i7.prototype["parse authority"] = function(V, n7) {
    if (V === 64) {
      this.parseError = !0, this.atFlag && (this.buffer = "%40" + this.buffer), this.atFlag = !0;
      const K = i(this.buffer);
      for (let B = 0; B < K; ++B) {
        const D = this.buffer.codePointAt(B);
        if (D === 58 && !this.passwordTokenSeenFlag) {
          this.passwordTokenSeenFlag = !0;
          continue;
        }
        const W = p(D, u);
        this.passwordTokenSeenFlag ? this.url.password += W : this.url.username += W;
      }
      this.buffer = "";
    } else if (isNaN(V) || V === 47 || V === 63 || V === 35 || F(this.url) && V === 92) {
      if (this.atFlag && this.buffer === "")
        return this.parseError = !0, f;
      this.pointer -= i(this.buffer) + 1, this.buffer = "", this.state = "host";
    } else
      this.buffer += n7;
    return !0;
  }, i7.prototype["parse hostname"] = i7.prototype["parse host"] = function(V, n7) {
    if (this.stateOverride && this.url.scheme === "file")
      --this.pointer, this.state = "file host";
    else if (V === 58 && !this.arrFlag) {
      if (this.buffer === "")
        return this.parseError = !0, f;
      const K = g(this.buffer, F(this.url));
      if (K === f)
        return f;
      if (this.url.host = K, this.buffer = "", this.state = "port", this.stateOverride === "hostname")
        return !1;
    } else if (isNaN(V) || V === 47 || V === 63 || V === 35 || F(this.url) && V === 92) {
      if (--this.pointer, F(this.url) && this.buffer === "")
        return this.parseError = !0, f;
      if (this.stateOverride && this.buffer === "" && (H(this.url) || this.url.port !== null))
        return this.parseError = !0, !1;
      const K = g(this.buffer, F(this.url));
      if (K === f)
        return f;
      if (this.url.host = K, this.buffer = "", this.state = "path start", this.stateOverride)
        return !1;
    } else
      V === 91 ? this.arrFlag = !0 : V === 93 && (this.arrFlag = !1), this.buffer += n7;
    return !0;
  }, i7.prototype["parse port"] = function(V, n7) {
    if (o(V))
      this.buffer += n7;
    else if (isNaN(V) || V === 47 || V === 63 || V === 35 || F(this.url) && V === 92 || this.stateOverride) {
      if (this.buffer !== "") {
        const K = parseInt(this.buffer);
        if (K > Math.pow(2, 16) - 1)
          return this.parseError = !0, f;
        this.url.port = K === C(this.url.scheme) ? null : K, this.buffer = "";
      }
      if (this.stateOverride)
        return !1;
      this.state = "path start", --this.pointer;
    } else
      return this.parseError = !0, f;
    return !0;
  };
  const J = /* @__PURE__ */ new Set([47, 92, 63, 35]);
  i7.prototype["parse file"] = function(V) {
    return this.url.scheme = "file", V === 47 || V === 92 ? (V === 92 && (this.parseError = !0), this.state = "file slash") : this.base !== null && this.base.scheme === "file" ? isNaN(V) ? (this.url.host = this.base.host, this.url.path = this.base.path.slice(), this.url.query = this.base.query) : V === 63 ? (this.url.host = this.base.host, this.url.path = this.base.path.slice(), this.url.query = "", this.state = "query") : V === 35 ? (this.url.host = this.base.host, this.url.path = this.base.path.slice(), this.url.query = this.base.query, this.url.fragment = "", this.state = "fragment") : (this.input.length - this.pointer - 1 === 0 || // remaining consists of 0 code points
    !x(V, this.input[this.pointer + 1]) || this.input.length - this.pointer - 1 >= 2 && // remaining has at least 2 code points
    !J.has(this.input[this.pointer + 2]) ? (this.url.host = this.base.host, this.url.path = this.base.path.slice(), t7(this.url)) : this.parseError = !0, this.state = "path", --this.pointer) : (this.state = "path", --this.pointer), !0;
  }, i7.prototype["parse file slash"] = function(V) {
    return V === 47 || V === 92 ? (V === 92 && (this.parseError = !0), this.state = "file host") : (this.base !== null && this.base.scheme === "file" && (k(this.base.path[0]) ? this.url.path.push(this.base.path[0]) : this.url.host = this.base.host), this.state = "path", --this.pointer), !0;
  }, i7.prototype["parse file host"] = function(V, n7) {
    if (isNaN(V) || V === 47 || V === 92 || V === 63 || V === 35)
      if (--this.pointer, !this.stateOverride && I(this.buffer))
        this.parseError = !0, this.state = "path";
      else if (this.buffer === "") {
        if (this.url.host = "", this.stateOverride)
          return !1;
        this.state = "path start";
      } else {
        let K = g(this.buffer, F(this.url));
        if (K === f)
          return f;
        if (K === "localhost" && (K = ""), this.url.host = K, this.stateOverride)
          return !1;
        this.buffer = "", this.state = "path start";
      }
    else
      this.buffer += n7;
    return !0;
  }, i7.prototype["parse path start"] = function(V) {
    return F(this.url) ? (V === 92 && (this.parseError = !0), this.state = "path", V !== 47 && V !== 92 && --this.pointer) : !this.stateOverride && V === 63 ? (this.url.query = "", this.state = "query") : !this.stateOverride && V === 35 ? (this.url.fragment = "", this.state = "fragment") : V !== void 0 && (this.state = "path", V !== 47 && --this.pointer), !0;
  }, i7.prototype["parse path"] = function(V) {
    if (isNaN(V) || V === 47 || F(this.url) && V === 92 || !this.stateOverride && (V === 63 || V === 35)) {
      if (F(this.url) && V === 92 && (this.parseError = !0), m(this.buffer) ? (t7(this.url), V !== 47 && !(F(this.url) && V === 92) && this.url.path.push("")) : v(this.buffer) && V !== 47 && !(F(this.url) && V === 92) ? this.url.path.push("") : v(this.buffer) || (this.url.scheme === "file" && this.url.path.length === 0 && I(this.buffer) && (this.url.host !== "" && this.url.host !== null && (this.parseError = !0, this.url.host = ""), this.buffer = this.buffer[0] + ":"), this.url.path.push(this.buffer)), this.buffer = "", this.url.scheme === "file" && (V === void 0 || V === 63 || V === 35))
        for (; this.url.path.length > 1 && this.url.path[0] === ""; )
          this.parseError = !0, this.url.path.shift();
      V === 63 && (this.url.query = "", this.state = "query"), V === 35 && (this.url.fragment = "", this.state = "fragment");
    } else
      V === 37 && (!l(this.input[this.pointer + 1]) || !l(this.input[this.pointer + 2])) && (this.parseError = !0), this.buffer += p(V, G);
    return !0;
  }, i7.prototype["parse cannot-be-a-base-URL path"] = function(V) {
    return V === 63 ? (this.url.query = "", this.state = "query") : V === 35 ? (this.url.fragment = "", this.state = "fragment") : (!isNaN(V) && V !== 37 && (this.parseError = !0), V === 37 && (!l(this.input[this.pointer + 1]) || !l(this.input[this.pointer + 2])) && (this.parseError = !0), isNaN(V) || (this.url.path[0] = this.url.path[0] + p(V, Z))), !0;
  }, i7.prototype["parse query"] = function(V, n7) {
    if (isNaN(V) || !this.stateOverride && V === 35) {
      (!F(this.url) || this.url.scheme === "ws" || this.url.scheme === "wss") && (this.encodingOverride = "utf-8");
      const K = new Q.Buffer(this.buffer);
      for (let B = 0; B < K.length; ++B)
        K[B] < 33 || K[B] > 126 || K[B] === 34 || K[B] === 35 || K[B] === 60 || K[B] === 62 ? this.url.query += L(K[B]) : this.url.query += String.fromCodePoint(K[B]);
      this.buffer = "", V === 35 && (this.url.fragment = "", this.state = "fragment");
    } else
      V === 37 && (!l(this.input[this.pointer + 1]) || !l(this.input[this.pointer + 2])) && (this.parseError = !0), this.buffer += n7;
    return !0;
  }, i7.prototype["parse fragment"] = function(V) {
    return isNaN(V) || (V === 0 ? this.parseError = !0 : (V === 37 && (!l(this.input[this.pointer + 1]) || !l(this.input[this.pointer + 2])) && (this.parseError = !0), this.url.fragment += p(V, Z))), !0;
  };
  function _(j, V) {
    let n7 = j.scheme + ":";
    if (j.host !== null ? (n7 += "//", (j.username !== "" || j.password !== "") && (n7 += j.username, j.password !== "" && (n7 += ":" + j.password), n7 += "@"), n7 += h(j.host), j.port !== null && (n7 += ":" + j.port)) : j.host === null && j.scheme === "file" && (n7 += "//"), j.cannotBeABaseURL)
      n7 += j.path[0];
    else
      for (const K of j.path)
        n7 += "/" + K;
    return j.query !== null && (n7 += "?" + j.query), !V && j.fragment !== null && (n7 += "#" + j.fragment), n7;
  }
  function E(j) {
    let V = j.scheme + "://";
    return V += h(j.host), j.port !== null && (V += ":" + j.port), V;
  }
  e.exports.serializeURL = _, e.exports.serializeURLOrigin = function(j) {
    switch (j.scheme) {
      case "blob":
        try {
          return e.exports.serializeURLOrigin(e.exports.parseURL(j.path[0]));
        } catch {
          return "null";
        }
      case "ftp":
      case "gopher":
      case "http":
      case "https":
      case "ws":
      case "wss":
        return E({
          scheme: j.scheme,
          host: j.host,
          port: j.port
        });
      case "file":
        return "file://";
      default:
        return "null";
    }
  }, e.exports.basicURLParse = function(j, V) {
    V === void 0 && (V = {});
    const n7 = new i7(j, V.baseURL, V.encodingOverride, V.url, V.stateOverride);
    return n7.failure ? "failure" : n7.url;
  }, e.exports.setTheUsername = function(j, V) {
    j.username = "";
    const n7 = t.ucs2.decode(V);
    for (let K = 0; K < n7.length; ++K)
      j.username += p(n7[K], u);
  }, e.exports.setThePassword = function(j, V) {
    j.password = "";
    const n7 = t.ucs2.decode(V);
    for (let K = 0; K < n7.length; ++K)
      j.password += p(n7[K], u);
  }, e.exports.serializeHost = h, e.exports.cannotHaveAUsernamePasswordPort = $, e.exports.serializeInteger = function(j) {
    return String(j);
  }, e.exports.parseURL = function(j, V) {
    return V === void 0 && (V = {}), e.exports.basicURLParse(j, { baseURL: V.baseURL, encodingOverride: V.encodingOverride });
  };
})(jg);
var aa = jg.exports;
const Fe = aa;
$g.implementation = class {
  constructor(t) {
    const a = t[0], r = t[1];
    let f = null;
    if (r !== void 0 && (f = Fe.basicURLParse(r), f === "failure"))
      throw new TypeError("Invalid base URL");
    const i = Fe.basicURLParse(a, { baseURL: f });
    if (i === "failure")
      throw new TypeError("Invalid URL");
    this._url = i;
  }
  get href() {
    return Fe.serializeURL(this._url);
  }
  set href(t) {
    const a = Fe.basicURLParse(t);
    if (a === "failure")
      throw new TypeError("Invalid URL");
    this._url = a;
  }
  get origin() {
    return Fe.serializeURLOrigin(this._url);
  }
  get protocol() {
    return this._url.scheme + ":";
  }
  set protocol(t) {
    Fe.basicURLParse(t + ":", { url: this._url, stateOverride: "scheme start" });
  }
  get username() {
    return this._url.username;
  }
  set username(t) {
    Fe.cannotHaveAUsernamePasswordPort(this._url) || Fe.setTheUsername(this._url, t);
  }
  get password() {
    return this._url.password;
  }
  set password(t) {
    Fe.cannotHaveAUsernamePasswordPort(this._url) || Fe.setThePassword(this._url, t);
  }
  get host() {
    const t = this._url;
    return t.host === null ? "" : t.port === null ? Fe.serializeHost(t.host) : Fe.serializeHost(t.host) + ":" + Fe.serializeInteger(t.port);
  }
  set host(t) {
    this._url.cannotBeABaseURL || Fe.basicURLParse(t, { url: this._url, stateOverride: "host" });
  }
  get hostname() {
    return this._url.host === null ? "" : Fe.serializeHost(this._url.host);
  }
  set hostname(t) {
    this._url.cannotBeABaseURL || Fe.basicURLParse(t, { url: this._url, stateOverride: "hostname" });
  }
  get port() {
    return this._url.port === null ? "" : Fe.serializeInteger(this._url.port);
  }
  set port(t) {
    Fe.cannotHaveAUsernamePasswordPort(this._url) || (t === "" ? this._url.port = null : Fe.basicURLParse(t, { url: this._url, stateOverride: "port" }));
  }
  get pathname() {
    return this._url.cannotBeABaseURL ? this._url.path[0] : this._url.path.length === 0 ? "" : "/" + this._url.path.join("/");
  }
  set pathname(t) {
    this._url.cannotBeABaseURL || (this._url.path = [], Fe.basicURLParse(t, { url: this._url, stateOverride: "path start" }));
  }
  get search() {
    return this._url.query === null || this._url.query === "" ? "" : "?" + this._url.query;
  }
  set search(t) {
    const a = this._url;
    if (t === "") {
      a.query = null;
      return;
    }
    const r = t[0] === "?" ? t.substring(1) : t;
    a.query = "", Fe.basicURLParse(r, { url: a, stateOverride: "query" });
  }
  get hash() {
    return this._url.fragment === null || this._url.fragment === "" ? "" : "#" + this._url.fragment;
  }
  set hash(t) {
    if (t === "") {
      this._url.fragment = null;
      return;
    }
    const a = t[0] === "#" ? t.substring(1) : t;
    this._url.fragment = "", Fe.basicURLParse(a, { url: this._url, stateOverride: "fragment" });
  }
  toJSON() {
    return this.href;
  }
};
(function(e) {
  const t = gF, a = _F, r = $g, f = a.implSymbol;
  function i(n) {
    if (!this || this[f] || !(this instanceof i))
      throw new TypeError("Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.");
    if (arguments.length < 1)
      throw new TypeError("Failed to construct 'URL': 1 argument required, but only " + arguments.length + " present.");
    const o = [];
    for (let s = 0; s < arguments.length && s < 2; ++s)
      o[s] = arguments[s];
    o[0] = t.USVString(o[0]), o[1] !== void 0 && (o[1] = t.USVString(o[1])), e.exports.setup(this, o);
  }
  i.prototype.toJSON = function() {
    if (!this || !e.exports.is(this))
      throw new TypeError("Illegal invocation");
    const o = [];
    for (let s = 0; s < arguments.length && s < 0; ++s)
      o[s] = arguments[s];
    return this[f].toJSON.apply(this[f], o);
  }, Object.defineProperty(i.prototype, "href", {
    get() {
      return this[f].href;
    },
    set(n) {
      n = t.USVString(n), this[f].href = n;
    },
    enumerable: !0,
    configurable: !0
  }), i.prototype.toString = function() {
    if (!this || !e.exports.is(this))
      throw new TypeError("Illegal invocation");
    return this.href;
  }, Object.defineProperty(i.prototype, "origin", {
    get() {
      return this[f].origin;
    },
    enumerable: !0,
    configurable: !0
  }), Object.defineProperty(i.prototype, "protocol", {
    get() {
      return this[f].protocol;
    },
    set(n) {
      n = t.USVString(n), this[f].protocol = n;
    },
    enumerable: !0,
    configurable: !0
  }), Object.defineProperty(i.prototype, "username", {
    get() {
      return this[f].username;
    },
    set(n) {
      n = t.USVString(n), this[f].username = n;
    },
    enumerable: !0,
    configurable: !0
  }), Object.defineProperty(i.prototype, "password", {
    get() {
      return this[f].password;
    },
    set(n) {
      n = t.USVString(n), this[f].password = n;
    },
    enumerable: !0,
    configurable: !0
  }), Object.defineProperty(i.prototype, "host", {
    get() {
      return this[f].host;
    },
    set(n) {
      n = t.USVString(n), this[f].host = n;
    },
    enumerable: !0,
    configurable: !0
  }), Object.defineProperty(i.prototype, "hostname", {
    get() {
      return this[f].hostname;
    },
    set(n) {
      n = t.USVString(n), this[f].hostname = n;
    },
    enumerable: !0,
    configurable: !0
  }), Object.defineProperty(i.prototype, "port", {
    get() {
      return this[f].port;
    },
    set(n) {
      n = t.USVString(n), this[f].port = n;
    },
    enumerable: !0,
    configurable: !0
  }), Object.defineProperty(i.prototype, "pathname", {
    get() {
      return this[f].pathname;
    },
    set(n) {
      n = t.USVString(n), this[f].pathname = n;
    },
    enumerable: !0,
    configurable: !0
  }), Object.defineProperty(i.prototype, "search", {
    get() {
      return this[f].search;
    },
    set(n) {
      n = t.USVString(n), this[f].search = n;
    },
    enumerable: !0,
    configurable: !0
  }), Object.defineProperty(i.prototype, "hash", {
    get() {
      return this[f].hash;
    },
    set(n) {
      n = t.USVString(n), this[f].hash = n;
    },
    enumerable: !0,
    configurable: !0
  }), e.exports = {
    is(n) {
      return !!n && n[f] instanceof r.implementation;
    },
    create(n, o) {
      let s = Object.create(i.prototype);
      return this.setup(s, n, o), s;
    },
    setup(n, o, s) {
      s || (s = {}), s.wrapper = n, n[f] = new r.implementation(o, s), n[f][a.wrapperSymbol] = n;
    },
    interface: i,
    expose: {
      Window: { URL: i },
      Worker: { URL: i }
    }
  };
})(Hg);
var IF = Hg.exports;
W5.URL = IF.interface;
W5.serializeURL = aa.serializeURL;
W5.serializeURLOrigin = aa.serializeURLOrigin;
W5.basicURLParse = aa.basicURLParse;
W5.setTheUsername = aa.setTheUsername;
W5.setThePassword = aa.setThePassword;
W5.serializeHost = aa.serializeHost;
W5.serializeInteger = aa.serializeInteger;
W5.parseURL = aa.parseURL;
var Gg = { exports: {} };
(function(e) {
  var t = Yd, a = Cs, r = e.exports;
  for (var f in t)
    t.hasOwnProperty(f) && (r[f] = t[f]);
  r.request = function(n, o) {
    return n = i(n), t.request.call(this, n, o);
  }, r.get = function(n, o) {
    return n = i(n), t.get.call(this, n, o);
  };
  function i(n) {
    if (typeof n == "string" && (n = a.parse(n)), n.protocol || (n.protocol = "https:"), n.protocol !== "https:")
      throw new Error('Protocol "' + n.protocol + '" not supported. Expected "https:"');
    return n;
  }
})(Gg);
var kF = Gg.exports;
const OF = /* @__PURE__ */ Qt(kF), PF = B5.Readable, Mt = Symbol("buffer"), po = Symbol("type");
let tc = class ls {
  constructor() {
    this[po] = "";
    const t = arguments[0], a = arguments[1], r = [];
    let f = 0;
    if (t) {
      const n = t, o = Number(n.length);
      for (let s = 0; s < o; s++) {
        const b = n[s];
        let l;
        b instanceof Q.Buffer ? l = b : ArrayBuffer.isView(b) ? l = Q.Buffer.from(b.buffer, b.byteOffset, b.byteLength) : b instanceof ArrayBuffer ? l = Q.Buffer.from(b) : b instanceof ls ? l = b[Mt] : l = Q.Buffer.from(typeof b == "string" ? b : String(b)), f += l.length, r.push(l);
      }
    }
    this[Mt] = Q.Buffer.concat(r);
    let i = a && a.type !== void 0 && String(a.type).toLowerCase();
    i && !/[^\u0020-\u007E]/.test(i) && (this[po] = i);
  }
  get size() {
    return this[Mt].length;
  }
  get type() {
    return this[po];
  }
  text() {
    return Promise.resolve(this[Mt].toString());
  }
  arrayBuffer() {
    const t = this[Mt], a = t.buffer.slice(t.byteOffset, t.byteOffset + t.byteLength);
    return Promise.resolve(a);
  }
  stream() {
    const t = new PF();
    return t._read = function() {
    }, t.push(this[Mt]), t.push(null), t;
  }
  toString() {
    return "[object Blob]";
  }
  slice() {
    const t = this.size, a = arguments[0], r = arguments[1];
    let f, i;
    a === void 0 ? f = 0 : a < 0 ? f = Math.max(t + a, 0) : f = Math.min(a, t), r === void 0 ? i = t : r < 0 ? i = Math.max(t + r, 0) : i = Math.min(r, t);
    const n = Math.max(i - f, 0), s = this[Mt].slice(f, f + n), b = new ls([], { type: arguments[2] });
    return b[Mt] = s, b;
  }
};
Object.defineProperties(tc.prototype, {
  size: { enumerable: !0 },
  type: { enumerable: !0 },
  slice: { enumerable: !0 }
});
Object.defineProperty(tc.prototype, Symbol.toStringTag, {
  value: "Blob",
  writable: !1,
  enumerable: !1,
  configurable: !0
});
function A0(e, t, a) {
  Error.call(this, e), this.message = e, this.type = t, a && (this.code = this.errno = a.code), Error.captureStackTrace(this, this.constructor);
}
A0.prototype = Object.create(Error.prototype);
A0.prototype.constructor = A0;
A0.prototype.name = "FetchError";
let ps;
try {
  ps = require("encoding").convert;
} catch {
}
const Ut = Symbol("Body internals"), kp = B5.PassThrough;
function n0(e) {
  var t = this, a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, r = a.size;
  let f = r === void 0 ? 0 : r;
  var i = a.timeout;
  let n = i === void 0 ? 0 : i;
  e == null ? e = null : Wg(e) ? e = Q.Buffer.from(e.toString()) : _6(e) || Q.Buffer.isBuffer(e) || (Object.prototype.toString.call(e) === "[object ArrayBuffer]" ? e = Q.Buffer.from(e) : ArrayBuffer.isView(e) ? e = Q.Buffer.from(e.buffer, e.byteOffset, e.byteLength) : e instanceof B5 || (e = Q.Buffer.from(String(e)))), this[Ut] = {
    body: e,
    disturbed: !1,
    error: null
  }, this.size = f, this.timeout = n, e instanceof B5 && e.on("error", function(o) {
    const s = o.name === "AbortError" ? o : new A0(`Invalid response body while trying to fetch ${t.url}: ${o.message}`, "system", o);
    t[Ut].error = s;
  });
}
n0.prototype = {
  get body() {
    return this[Ut].body;
  },
  get bodyUsed() {
    return this[Ut].disturbed;
  },
  /**
   * Decode response as ArrayBuffer
   *
   * @return  Promise
   */
  arrayBuffer() {
    return Br.call(this).then(function(e) {
      return e.buffer.slice(e.byteOffset, e.byteOffset + e.byteLength);
    });
  },
  /**
   * Return raw response as Blob
   *
   * @return Promise
   */
  blob() {
    let e = this.headers && this.headers.get("content-type") || "";
    return Br.call(this).then(function(t) {
      return Object.assign(
        // Prevent copying
        new tc([], {
          type: e.toLowerCase()
        }),
        {
          [Mt]: t
        }
      );
    });
  },
  /**
   * Decode response as json
   *
   * @return  Promise
   */
  json() {
    var e = this;
    return Br.call(this).then(function(t) {
      try {
        return JSON.parse(t.toString());
      } catch (a) {
        return n0.Promise.reject(new A0(`invalid json response body at ${e.url} reason: ${a.message}`, "invalid-json"));
      }
    });
  },
  /**
   * Decode response as text
   *
   * @return  Promise
   */
  text() {
    return Br.call(this).then(function(e) {
      return e.toString();
    });
  },
  /**
   * Decode response as buffer (non-spec api)
   *
   * @return  Promise
   */
  buffer() {
    return Br.call(this);
  },
  /**
   * Decode response as text, while automatically detecting the encoding and
   * trying to decode to UTF-8 (non-spec api)
   *
   * @return  Promise
   */
  textConverted() {
    var e = this;
    return Br.call(this).then(function(t) {
      return MF(t, e.headers);
    });
  }
};
Object.defineProperties(n0.prototype, {
  body: { enumerable: !0 },
  bodyUsed: { enumerable: !0 },
  arrayBuffer: { enumerable: !0 },
  blob: { enumerable: !0 },
  json: { enumerable: !0 },
  text: { enumerable: !0 }
});
n0.mixIn = function(e) {
  for (const t of Object.getOwnPropertyNames(n0.prototype))
    if (!(t in e)) {
      const a = Object.getOwnPropertyDescriptor(n0.prototype, t);
      Object.defineProperty(e, t, a);
    }
};
function Br() {
  var e = this;
  if (this[Ut].disturbed)
    return n0.Promise.reject(new TypeError(`body used already for: ${this.url}`));
  if (this[Ut].disturbed = !0, this[Ut].error)
    return n0.Promise.reject(this[Ut].error);
  let t = this.body;
  if (t === null)
    return n0.Promise.resolve(Q.Buffer.alloc(0));
  if (_6(t) && (t = t.stream()), Q.Buffer.isBuffer(t))
    return n0.Promise.resolve(t);
  if (!(t instanceof B5))
    return n0.Promise.resolve(Q.Buffer.alloc(0));
  let a = [], r = 0, f = !1;
  return new n0.Promise(function(i, n) {
    let o;
    e.timeout && (o = setTimeout(function() {
      f = !0, n(new A0(`Response timeout while trying to fetch ${e.url} (over ${e.timeout}ms)`, "body-timeout"));
    }, e.timeout)), t.on("error", function(s) {
      s.name === "AbortError" ? (f = !0, n(s)) : n(new A0(`Invalid response body while trying to fetch ${e.url}: ${s.message}`, "system", s));
    }), t.on("data", function(s) {
      if (!(f || s === null)) {
        if (e.size && r + s.length > e.size) {
          f = !0, n(new A0(`content size at ${e.url} over limit: ${e.size}`, "max-size"));
          return;
        }
        r += s.length, a.push(s);
      }
    }), t.on("end", function() {
      if (!f) {
        clearTimeout(o);
        try {
          i(Q.Buffer.concat(a, r));
        } catch (s) {
          n(new A0(`Could not create Buffer from response body for ${e.url}: ${s.message}`, "system", s));
        }
      }
    });
  });
}
function MF(e, t) {
  if (typeof ps != "function")
    throw new Error("The package `encoding` must be installed to use the textConverted() function");
  const a = t.get("content-type");
  let r = "utf-8", f, i;
  return a && (f = /charset=([^;]*)/i.exec(a)), i = e.slice(0, 1024).toString(), !f && i && (f = /<meta.+?charset=(['"])(.+?)\1/i.exec(i)), !f && i && (f = /<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(i), f || (f = /<meta[\s]+?content=(['"])(.+?)\1[\s]+?http-equiv=(['"])content-type\3/i.exec(i), f && f.pop()), f && (f = /charset=(.*)/i.exec(f.pop()))), !f && i && (f = /<\?xml.+?encoding=(['"])(.+?)\1/i.exec(i)), f && (r = f.pop(), (r === "gb2312" || r === "gbk") && (r = "gb18030")), ps(e, "UTF-8", r).toString();
}
function Wg(e) {
  return typeof e != "object" || typeof e.append != "function" || typeof e.delete != "function" || typeof e.get != "function" || typeof e.getAll != "function" || typeof e.has != "function" || typeof e.set != "function" ? !1 : e.constructor.name === "URLSearchParams" || Object.prototype.toString.call(e) === "[object URLSearchParams]" || typeof e.sort == "function";
}
function _6(e) {
  return typeof e == "object" && typeof e.arrayBuffer == "function" && typeof e.type == "string" && typeof e.stream == "function" && typeof e.constructor == "function" && typeof e.constructor.name == "string" && /^(Blob|File)$/.test(e.constructor.name) && /^(Blob|File)$/.test(e[Symbol.toStringTag]);
}
function Zg(e) {
  let t, a, r = e.body;
  if (e.bodyUsed)
    throw new Error("cannot clone body after it is used");
  return r instanceof B5 && typeof r.getBoundary != "function" && (t = new kp(), a = new kp(), r.pipe(t), r.pipe(a), e[Ut].body = t, r = a), r;
}
function Yg(e) {
  return e === null ? null : typeof e == "string" ? "text/plain;charset=UTF-8" : Wg(e) ? "application/x-www-form-urlencoded;charset=UTF-8" : _6(e) ? e.type || null : Q.Buffer.isBuffer(e) || Object.prototype.toString.call(e) === "[object ArrayBuffer]" || ArrayBuffer.isView(e) ? null : typeof e.getBoundary == "function" ? `multipart/form-data;boundary=${e.getBoundary()}` : e instanceof B5 ? null : "text/plain;charset=UTF-8";
}
function Xg(e) {
  const t = e.body;
  return t === null ? 0 : _6(t) ? t.size : Q.Buffer.isBuffer(t) ? t.length : t && typeof t.getLengthSync == "function" && (t._lengthRetrievers && t._lengthRetrievers.length == 0 || // 1.x
  t.hasKnownLength && t.hasKnownLength()) ? t.getLengthSync() : null;
}
function RF(e, t) {
  const a = t.body;
  a === null ? e.end() : _6(a) ? a.stream().pipe(e) : Q.Buffer.isBuffer(a) ? (e.write(a), e.end()) : a.pipe(e);
}
n0.Promise = Yp.Promise;
const Jg = /[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/, hs = /[^\t\x20-\x7e\x80-\xff]/;
function a9(e) {
  if (e = `${e}`, Jg.test(e) || e === "")
    throw new TypeError(`${e} is not a legal HTTP header name`);
}
function Op(e) {
  if (e = `${e}`, hs.test(e))
    throw new TypeError(`${e} is not a legal HTTP header value`);
}
function Lr(e, t) {
  t = t.toLowerCase();
  for (const a in e)
    if (a.toLowerCase() === t)
      return a;
}
const je = Symbol("map");
class D5 {
  /**
   * Headers class
   *
   * @param   Object  headers  Response headers
   * @return  Void
   */
  constructor() {
    let t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : void 0;
    if (this[je] = /* @__PURE__ */ Object.create(null), t instanceof D5) {
      const a = t.raw(), r = Object.keys(a);
      for (const f of r)
        for (const i of a[f])
          this.append(f, i);
      return;
    }
    if (t != null)
      if (typeof t == "object") {
        const a = t[Symbol.iterator];
        if (a != null) {
          if (typeof a != "function")
            throw new TypeError("Header pairs must be iterable");
          const r = [];
          for (const f of t) {
            if (typeof f != "object" || typeof f[Symbol.iterator] != "function")
              throw new TypeError("Each header pair must be iterable");
            r.push(Array.from(f));
          }
          for (const f of r) {
            if (f.length !== 2)
              throw new TypeError("Each header pair must be a name/value tuple");
            this.append(f[0], f[1]);
          }
        } else
          for (const r of Object.keys(t)) {
            const f = t[r];
            this.append(r, f);
          }
      } else
        throw new TypeError("Provided initializer must be an object");
  }
  /**
   * Return combined header value given name
   *
   * @param   String  name  Header name
   * @return  Mixed
   */
  get(t) {
    t = `${t}`, a9(t);
    const a = Lr(this[je], t);
    return a === void 0 ? null : this[je][a].join(", ");
  }
  /**
   * Iterate over all headers
   *
   * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)
   * @param   Boolean   thisArg   `this` context for callback function
   * @return  Void
   */
  forEach(t) {
    let a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : void 0, r = bs(this), f = 0;
    for (; f < r.length; ) {
      var i = r[f];
      const n = i[0], o = i[1];
      t.call(a, o, n, this), r = bs(this), f++;
    }
  }
  /**
   * Overwrite header values given name
   *
   * @param   String  name   Header name
   * @param   String  value  Header value
   * @return  Void
   */
  set(t, a) {
    t = `${t}`, a = `${a}`, a9(t), Op(a);
    const r = Lr(this[je], t);
    this[je][r !== void 0 ? r : t] = [a];
  }
  /**
   * Append a value onto existing header
   *
   * @param   String  name   Header name
   * @param   String  value  Header value
   * @return  Void
   */
  append(t, a) {
    t = `${t}`, a = `${a}`, a9(t), Op(a);
    const r = Lr(this[je], t);
    r !== void 0 ? this[je][r].push(a) : this[je][t] = [a];
  }
  /**
   * Check for header name existence
   *
   * @param   String   name  Header name
   * @return  Boolean
   */
  has(t) {
    return t = `${t}`, a9(t), Lr(this[je], t) !== void 0;
  }
  /**
   * Delete all header values given name
   *
   * @param   String  name  Header name
   * @return  Void
   */
  delete(t) {
    t = `${t}`, a9(t);
    const a = Lr(this[je], t);
    a !== void 0 && delete this[je][a];
  }
  /**
   * Return raw headers (non-spec api)
   *
   * @return  Object
   */
  raw() {
    return this[je];
  }
  /**
   * Get an iterator on keys.
   *
   * @return  Iterator
   */
  keys() {
    return ho(this, "key");
  }
  /**
   * Get an iterator on values.
   *
   * @return  Iterator
   */
  values() {
    return ho(this, "value");
  }
  /**
   * Get an iterator on entries.
   *
   * This is the default iterator of the Headers object.
   *
   * @return  Iterator
   */
  [Symbol.iterator]() {
    return ho(this, "key+value");
  }
}
D5.prototype.entries = D5.prototype[Symbol.iterator];
Object.defineProperty(D5.prototype, Symbol.toStringTag, {
  value: "Headers",
  writable: !1,
  enumerable: !1,
  configurable: !0
});
Object.defineProperties(D5.prototype, {
  get: { enumerable: !0 },
  forEach: { enumerable: !0 },
  set: { enumerable: !0 },
  append: { enumerable: !0 },
  has: { enumerable: !0 },
  delete: { enumerable: !0 },
  keys: { enumerable: !0 },
  values: { enumerable: !0 },
  entries: { enumerable: !0 }
});
function bs(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "key+value";
  return Object.keys(e[je]).sort().map(t === "key" ? function(r) {
    return r.toLowerCase();
  } : t === "value" ? function(r) {
    return e[je][r].join(", ");
  } : function(r) {
    return [r.toLowerCase(), e[je][r].join(", ")];
  });
}
const ms = Symbol("internal");
function ho(e, t) {
  const a = Object.create(ac);
  return a[ms] = {
    target: e,
    kind: t,
    index: 0
  }, a;
}
const ac = Object.setPrototypeOf({
  next() {
    if (!this || Object.getPrototypeOf(this) !== ac)
      throw new TypeError("Value of `this` is not a HeadersIterator");
    var e = this[ms];
    const t = e.target, a = e.kind, r = e.index, f = bs(t, a), i = f.length;
    return r >= i ? {
      value: void 0,
      done: !0
    } : (this[ms].index = r + 1, {
      value: f[r],
      done: !1
    });
  }
}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));
Object.defineProperty(ac, Symbol.toStringTag, {
  value: "HeadersIterator",
  writable: !1,
  enumerable: !1,
  configurable: !0
});
function BF(e) {
  const t = Object.assign({ __proto__: null }, e[je]), a = Lr(e[je], "Host");
  return a !== void 0 && (t[a] = t[a][0]), t;
}
function NF(e) {
  const t = new D5();
  for (const a of Object.keys(e))
    if (!Jg.test(a))
      if (Array.isArray(e[a]))
        for (const r of e[a])
          hs.test(r) || (t[je][a] === void 0 ? t[je][a] = [r] : t[je][a].push(r));
      else
        hs.test(e[a]) || (t[je][a] = [e[a]]);
  return t;
}
const ca = Symbol("Response internals"), CF = Fg.STATUS_CODES;
class st {
  constructor() {
    let t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null, a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    n0.call(this, t, a);
    const r = a.status || 200, f = new D5(a.headers);
    if (t != null && !f.has("Content-Type")) {
      const i = Yg(t);
      i && f.append("Content-Type", i);
    }
    this[ca] = {
      url: a.url,
      status: r,
      statusText: a.statusText || CF[r],
      headers: f,
      counter: a.counter
    };
  }
  get url() {
    return this[ca].url || "";
  }
  get status() {
    return this[ca].status;
  }
  /**
   * Convenience property representing if the request ended normally
   */
  get ok() {
    return this[ca].status >= 200 && this[ca].status < 300;
  }
  get redirected() {
    return this[ca].counter > 0;
  }
  get statusText() {
    return this[ca].statusText;
  }
  get headers() {
    return this[ca].headers;
  }
  /**
   * Clone this response
   *
   * @return  Response
   */
  clone() {
    return new st(Zg(this), {
      url: this.url,
      status: this.status,
      statusText: this.statusText,
      headers: this.headers,
      ok: this.ok,
      redirected: this.redirected
    });
  }
}
n0.mixIn(st.prototype);
Object.defineProperties(st.prototype, {
  url: { enumerable: !0 },
  status: { enumerable: !0 },
  ok: { enumerable: !0 },
  redirected: { enumerable: !0 },
  statusText: { enumerable: !0 },
  headers: { enumerable: !0 },
  clone: { enumerable: !0 }
});
Object.defineProperty(st.prototype, Symbol.toStringTag, {
  value: "Response",
  writable: !1,
  enumerable: !1,
  configurable: !0
});
const Nt = Symbol("Request internals"), DF = G9.URL || W5.URL, LF = G9.parse, FF = G9.format;
function bo(e) {
  return /^[a-zA-Z][a-zA-Z\d+\-.]*:/.exec(e) && (e = new DF(e).toString()), LF(e);
}
const HF = "destroy" in B5.Readable.prototype;
function z6(e) {
  return typeof e == "object" && typeof e[Nt] == "object";
}
function UF(e) {
  const t = e && typeof e == "object" && Object.getPrototypeOf(e);
  return !!(t && t.constructor.name === "AbortSignal");
}
class yr {
  constructor(t) {
    let a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, r;
    z6(t) ? r = bo(t.url) : (t && t.href ? r = bo(t.href) : r = bo(`${t}`), t = {});
    let f = a.method || t.method || "GET";
    if (f = f.toUpperCase(), (a.body != null || z6(t) && t.body !== null) && (f === "GET" || f === "HEAD"))
      throw new TypeError("Request with GET/HEAD method cannot have body");
    let i = a.body != null ? a.body : z6(t) && t.body !== null ? Zg(t) : null;
    n0.call(this, i, {
      timeout: a.timeout || t.timeout || 0,
      size: a.size || t.size || 0
    });
    const n = new D5(a.headers || t.headers || {});
    if (i != null && !n.has("Content-Type")) {
      const s = Yg(i);
      s && n.append("Content-Type", s);
    }
    let o = z6(t) ? t.signal : null;
    if ("signal" in a && (o = a.signal), o != null && !UF(o))
      throw new TypeError("Expected signal to be an instanceof AbortSignal");
    this[Nt] = {
      method: f,
      redirect: a.redirect || t.redirect || "follow",
      headers: n,
      parsedURL: r,
      signal: o
    }, this.follow = a.follow !== void 0 ? a.follow : t.follow !== void 0 ? t.follow : 20, this.compress = a.compress !== void 0 ? a.compress : t.compress !== void 0 ? t.compress : !0, this.counter = a.counter || t.counter || 0, this.agent = a.agent || t.agent;
  }
  get method() {
    return this[Nt].method;
  }
  get url() {
    return FF(this[Nt].parsedURL);
  }
  get headers() {
    return this[Nt].headers;
  }
  get redirect() {
    return this[Nt].redirect;
  }
  get signal() {
    return this[Nt].signal;
  }
  /**
   * Clone this request
   *
   * @return  Request
   */
  clone() {
    return new yr(this);
  }
}
n0.mixIn(yr.prototype);
Object.defineProperty(yr.prototype, Symbol.toStringTag, {
  value: "Request",
  writable: !1,
  enumerable: !1,
  configurable: !0
});
Object.defineProperties(yr.prototype, {
  method: { enumerable: !0 },
  url: { enumerable: !0 },
  headers: { enumerable: !0 },
  redirect: { enumerable: !0 },
  clone: { enumerable: !0 },
  signal: { enumerable: !0 }
});
function $F(e) {
  const t = e[Nt].parsedURL, a = new D5(e[Nt].headers);
  if (a.has("Accept") || a.set("Accept", "*/*"), !t.protocol || !t.hostname)
    throw new TypeError("Only absolute URLs are supported");
  if (!/^https?:$/.test(t.protocol))
    throw new TypeError("Only HTTP(S) protocols are supported");
  if (e.signal && e.body instanceof B5.Readable && !HF)
    throw new Error("Cancellation of streamed requests with AbortSignal is not supported in node < 8");
  let r = null;
  if (e.body == null && /^(POST|PUT)$/i.test(e.method) && (r = "0"), e.body != null) {
    const i = Xg(e);
    typeof i == "number" && (r = String(i));
  }
  r && a.set("Content-Length", r), a.has("User-Agent") || a.set("User-Agent", "node-fetch/1.0 (+https://github.com/bitinn/node-fetch)"), e.compress && !a.has("Accept-Encoding") && a.set("Accept-Encoding", "gzip,deflate");
  let f = e.agent;
  return typeof f == "function" && (f = f(t)), !a.has("Connection") && !f && a.set("Connection", "close"), Object.assign({}, t, {
    method: e.method,
    headers: BF(a),
    agent: f
  });
}
function z9(e) {
  Error.call(this, e), this.type = "aborted", this.message = e, Error.captureStackTrace(this, this.constructor);
}
z9.prototype = Object.create(Error.prototype);
z9.prototype.constructor = z9;
z9.prototype.name = "AbortError";
const vs = G9.URL || W5.URL, Pp = B5.PassThrough, jF = function(t, a) {
  const r = new vs(a).hostname, f = new vs(t).hostname;
  return r === f || r[r.length - f.length - 1] === "." && r.endsWith(f);
};
function ba(e, t) {
  if (!ba.Promise)
    throw new Error("native promise missing, set fetch.Promise to your favorite alternative");
  return n0.Promise = ba.Promise, new ba.Promise(function(a, r) {
    const f = new yr(e, t), i = $F(f), n = (i.protocol === "https:" ? OF : Fg).request, o = f.signal;
    let s = null;
    const b = function() {
      let k = new z9("The user aborted a request.");
      r(k), f.body && f.body instanceof B5.Readable && f.body.destroy(k), !(!s || !s.body) && s.body.emit("error", k);
    };
    if (o && o.aborted) {
      b();
      return;
    }
    const l = function() {
      b(), x();
    }, v = n(i);
    let m;
    o && o.addEventListener("abort", l);
    function x() {
      v.abort(), o && o.removeEventListener("abort", l), clearTimeout(m);
    }
    f.timeout && v.once("socket", function(I) {
      m = setTimeout(function() {
        r(new A0(`network timeout at: ${f.url}`, "request-timeout")), x();
      }, f.timeout);
    }), v.on("error", function(I) {
      r(new A0(`request to ${f.url} failed, reason: ${I.message}`, "system", I)), x();
    }), v.on("response", function(I) {
      clearTimeout(m);
      const k = NF(I.headers);
      if (ba.isRedirect(I.statusCode)) {
        const C = k.get("Location");
        let L = null;
        try {
          L = C === null ? null : new vs(C, f.url).toString();
        } catch {
          if (f.redirect !== "manual") {
            r(new A0(`uri requested responds with an invalid redirect URL: ${C}`, "invalid-redirect")), x();
            return;
          }
        }
        switch (f.redirect) {
          case "error":
            r(new A0(`uri requested responds with a redirect, redirect mode is set to error: ${f.url}`, "no-redirect")), x();
            return;
          case "manual":
            if (L !== null)
              try {
                k.set("Location", L);
              } catch (q) {
                r(q);
              }
            break;
          case "follow":
            if (L === null)
              break;
            if (f.counter >= f.follow) {
              r(new A0(`maximum redirect reached at: ${f.url}`, "max-redirect")), x();
              return;
            }
            const U = {
              headers: new D5(f.headers),
              follow: f.follow,
              counter: f.counter + 1,
              agent: f.agent,
              compress: f.compress,
              method: f.method,
              body: f.body,
              signal: f.signal,
              timeout: f.timeout,
              size: f.size
            };
            if (!jF(f.url, L))
              for (const q of ["authorization", "www-authenticate", "cookie", "cookie2"])
                U.headers.delete(q);
            if (I.statusCode !== 303 && f.body && Xg(f) === null) {
              r(new A0("Cannot follow redirect with body being a readable stream", "unsupported-redirect")), x();
              return;
            }
            (I.statusCode === 303 || (I.statusCode === 301 || I.statusCode === 302) && f.method === "POST") && (U.method = "GET", U.body = void 0, U.headers.delete("content-length")), a(ba(new yr(L, U))), x();
            return;
        }
      }
      I.once("end", function() {
        o && o.removeEventListener("abort", l);
      });
      let P = I.pipe(new Pp());
      const M = {
        url: f.url,
        status: I.statusCode,
        statusText: I.statusMessage,
        headers: k,
        size: f.size,
        timeout: f.timeout,
        counter: f.counter
      }, R = k.get("Content-Encoding");
      if (!f.compress || f.method === "HEAD" || R === null || I.statusCode === 204 || I.statusCode === 304) {
        s = new st(P, M), a(s);
        return;
      }
      const F = {
        flush: za.Z_SYNC_FLUSH,
        finishFlush: za.Z_SYNC_FLUSH
      };
      if (R == "gzip" || R == "x-gzip") {
        P = P.pipe(za.createGunzip(F)), s = new st(P, M), a(s);
        return;
      }
      if (R == "deflate" || R == "x-deflate") {
        I.pipe(new Pp()).once("data", function(L) {
          (L[0] & 15) === 8 ? P = P.pipe(za.createInflate()) : P = P.pipe(za.createInflateRaw()), s = new st(P, M), a(s);
        });
        return;
      }
      if (R == "br" && typeof za.createBrotliDecompress == "function") {
        P = P.pipe(za.createBrotliDecompress()), s = new st(P, M), a(s);
        return;
      }
      s = new st(P, M), a(s);
    }), RF(v, f);
  });
}
ba.isRedirect = function(e) {
  return e === 301 || e === 302 || e === 303 || e === 307 || e === 308;
};
ba.Promise = Yp.Promise;
class ys {
  static httpGet(t, a, r, f) {
    let i = "", n = 0;
    for (var o in a)
      n != 0 && (i += "&"), i += o + "=" + a[o], n++;
    i && (t += "?" + i), f = f || {};
    let s = f.headers || {}, b = f.timeout || Ne.timeout, l = {
      uri: t,
      method: "GET",
      timeout: b,
      gzip: !0,
      headers: s
    };
    if (typeof r == "function") {
      this.handleCallback((v) => xa(r, null, v), (v) => xa(r, v), l);
      return;
    }
    return new Promise((v, m) => {
      this.handleCallback(v, m, l);
    });
  }
  static async httpPost(t, a, r, f) {
    let i;
    f = f || {};
    let n = f.headers || {}, o = f.timeout || Ne.timeout;
    if (n["content-type"] = n["content-type"] || "application/json", n["content-type"] == "application/x-www-form-urlencoded") {
      let l = [];
      for (var s in a)
        l.push(`${s}=${a[s]}`);
      i = l.join("&");
    } else
      n["content-type"] == "text/plain" ? i = a : i = JSON.stringify(a);
    n["content-encoding"] == "gzip" && (i = await Sg(Q.Buffer.from(i)));
    const b = {
      uri: t,
      method: "POST",
      body: i,
      headers: n,
      timeout: o,
      gzip: !0
    };
    if (typeof r == "function") {
      this.handleCallback((l) => xa(r, null, l), (l) => xa(r, l), b);
      return;
    }
    return new Promise((l, v) => {
      this.handleCallback(l, v, b);
    });
  }
}
ys.handleCallback = (e, t, a) => {
  const r = a.uri, f = a;
  f.compress = a.gzip, delete f.uri, delete f.gzip, ba(r, f).then((i) => {
    i.status >= 200 && i.status < 300 ? e(i.json()) : (console.log("request failed.", a), t(new Error(`RequestError: statuCode:${i.statusCode} statusMessage:${i.statusMessage} body:${i.json()}`)));
  }).catch((i) => {
    console.log("request failed.", a), t(i);
  });
};
function Mp(e) {
  let t = {};
  for (var a in e) {
    let r = a.toLowerCase();
    t[r] = e[a];
  }
  return t;
}
class Ne {
  static httpGet(t, a, r) {
    return r && r.headers && (r.headers = Mp(r.headers)), g7.browser ? (r && r.headers && delete r.headers["accept-encoding"], ds.httpGet(t, a, null, r)) : ys.httpGet(t, a, null, r);
  }
  static httpPost(t, a, r) {
    return r && r.headers && (r.headers = Mp(r.headers)), g7.browser ? (r && r.headers && delete r.headers["accept-encoding"], ds.httpPost(t, a, null, r)) : ys.httpPost(t, a, null, r);
  }
}
Ne.timeout = 3 * 60 * 1e3;
class Rp {
  constructor(t, a) {
    t == Oa.MAIN ? this.serverBase = "https://mainnet.mvcapi.com" : this.serverBase = "https://testnet.mvcapi.com", a && (this.serverBase = a);
  }
  authorize(t) {
    const {
      authorization: a,
      privateKey: r
    } = t;
    a ? a.indexOf("Bearer") != 0 ? this.authorization = `Bearer ${a}` : this.authorization = a : (this.privateKey = new d7.mvc.PrivateKey(r), this.publicKey = this.privateKey.toPublicKey());
  }
  _getHeaders(t) {
    let a = {};
    if (this.authorization)
      a = {
        authorization: this.authorization
      };
    else if (this.privateKey) {
      const r = Date.now(), f = Math.random().toString().substring(2, 12), i = t + "_" + r + "_" + f, n = d7.mvc.crypto.Hash.sha256(Q.Buffer.from(i)), s = d7.mvc.crypto.ECDSA.sign(n, this.privateKey).toBuffer().toString("base64");
      a = {
        "MetaSV-Timestamp": r,
        "MetaSV-Client-Pubkey": this.publicKey.toHex(),
        "MetaSV-Nonce": f,
        "MetaSV-Signature": s
      };
    } else
      a = {};
    return a.accept = "application/json", a;
  }
  /**
   * @param {string} address
   */
  async getUnspents(t) {
    let a = `/address/${t}/utxo`, r = this.serverBase + a;
    return (await Ne.httpGet(r, {}, {
      headers: this._getHeaders(a)
    })).map((n) => ({
      txId: n.txid,
      outputIndex: n.outIndex,
      satoshis: n.value,
      address: t,
      height: n.height
    }));
  }
  async getVins(t) {
    let a = `/vin/${t}/detail`, r = this.serverBase + a;
    return await Ne.httpGet(r, {}, {
      headers: this._getHeaders(a)
    });
  }
  /**
   * @param {string} hex
   */
  async broadcast(t) {
    let a = "/tx/broadcast", r = this.serverBase + a, f = await Ne.httpPost(r, {
      hex: t
    }, {
      headers: this._getHeaders(a)
    });
    if (!f.txid)
      throw console.log(`广播出错：${f.message.toString()}`), new Error("broadcast error " + f.message.toString());
    return f.txid;
  }
  /**
   * @param {string} txid
   */
  async getRawTxData(t) {
    let a = `/tx/${t}/raw`, r = this.serverBase + a;
    return (await Ne.httpGet(r, {}, {
      headers: this._getHeaders(a)
    })).hex;
  }
  /**
   * 快速查询txid是否存在
   * @param {string} txid
   */
  async checkTxSeen(t) {
    let a = `/tx/${t}/seen`, r = this.serverBase + a;
    return await Ne.httpGet(r, {}, {
      headers: this._getHeaders(a)
    });
  }
  /**
   * 通过FT合约CodeHash+溯源genesis获取某地址的utxo列表
   */
  async getFungibleTokenUnspents(t, a, r, f = 10) {
    let i = `/contract/ft/address/${r}/utxo`, n = this.serverBase + i;
    return (await Ne.httpGet(n, {
      codeHash: t,
      genesis: a
    }, {
      headers: this._getHeaders(i)
    })).map((b) => ({
      txId: b.txid,
      outputIndex: b.txIndex,
      tokenAddress: r,
      tokenAmount: b.valueString
    }));
  }
  /**
   * 查询某人持有的某FT的余额
   */
  async getFungibleTokenBalance(t, a, r) {
    let f = `/contract/ft/address/${r}/balance`, i = this.serverBase + f, n = await Ne.httpGet(i, {
      codeHash: t,
      genesis: a
    }, {
      headers: this._getHeaders(f)
    }), o = {
      balance: "0",
      pendingBalance: "0",
      utxoCount: 0,
      decimal: 0
    };
    return n.length > 0 && (o = {
      balance: n[0].confirmedString,
      pendingBalance: n[0].unconfirmedString,
      utxoCount: n[0].utxoCount,
      decimal: n[0].decimal
    }), o;
  }
  /**
   * 查询某人持有的FT Token列表。获得每个token的余额
   */
  async getFungibleTokenSummary(t) {
    let a = `/contract/ft/address/${t}/balance`, r = this.serverBase + a, f = await Ne.httpGet(r, {}, {
      headers: this._getHeaders(a)
    }), i = [];
    return f.forEach((n) => {
      i.push({
        codehash: n.codeHash,
        genesis: n.genesis,
        sensibleId: n.sensibleId,
        symbol: n.symbol,
        decimal: n.decimal,
        balance: n.confirmedString,
        pendingBalance: n.unconfirmedString
      });
    }), i;
  }
  /**
   * 通过NFT合约CodeHash+溯源genesis获取某地址的utxo列表
   */
  async getNonFungibleTokenUnspents(t, a, r, f = 0, i = 20) {
    let n = `/contract/nft/address/${r}/utxo`, o = this.serverBase + n;
    return (await Ne.httpGet(o, {
      codeHash: t,
      genesis: a
    }, {
      headers: this._getHeaders(n)
    })).map((l) => ({
      txId: l.txid,
      outputIndex: l.txIndex,
      tokenAddress: r,
      tokenIndex: l.tokenIndex,
      metaTxId: l.metaTxid,
      metaOutputIndex: l.metaOutputIndex
    }));
  }
  /**
   * 查询某人持有的某NFT的UTXO
   */
  async getNonFungibleTokenUnspentDetail(t, a, r) {
    let f = `/contract/nft/genesis/${t}/${a}/utxo`, i = this.serverBase + f;
    return (await Ne.httpGet(i, {
      tokenIndex: r
    }, {
      headers: this._getHeaders(f)
    })).map((s) => ({
      txId: s.txid,
      outputIndex: s.txIndex,
      tokenAddress: s.address,
      tokenIndex: s.tokenIndex,
      metaTxId: s.metaTxid,
      metaOutputIndex: s.metaOutputIndex
    }))[0];
  }
  /**
   * 查询某人持有的所有NFT Token列表。获得持有的nft数量计数
   * @param {String} address
   * @returns
   */
  async getNonFungibleTokenSummary(t) {
    let a = `https://api.sensiblequery.com/nft/summary/${t}`, r = await Ne.httpGet(a, {});
    const {
      code: f,
      data: i,
      msg: n
    } = r;
    if (f != 0)
      throw new te(Q7.EC_SENSIBLE_API_ERROR, `request api failed. [url]:${a} [msg]:${n}`);
    let o = [];
    return i.forEach((s) => {
      o.push({
        codehash: s.codehash,
        genesis: s.genesis,
        sensibleId: s.sensibleId,
        count: s.count,
        pendingCount: s.pendingCount,
        metaTxId: s.metaTxId,
        metaOutputIndex: s.metaOutputIndex,
        supply: s.supply
      });
    }), o;
  }
  async getBalance(t) {
    let a = `/address/${t}/balance`, r = this.serverBase + a, f = await Ne.httpGet(r, {}, {
      headers: this._getHeaders(a)
    });
    return {
      balance: f.confirmed,
      pendingBalance: f.unconfirmed
    };
  }
  async getNftSellUtxo(t, a, r, f) {
    let i = `/contract/nft/sell/genesis/${t}/${a}/utxo`, n = this.serverBase + i;
    return (await Ne.httpGet(n, {
      tokenIndex: r
    }, {
      headers: this._getHeaders(i)
    })).filter((b) => f || b.isReady == !0).map((b) => ({
      codehash: t,
      genesis: a,
      tokenIndex: r,
      txId: b.txid,
      outputIndex: b.txIndex,
      sellerAddress: b.address,
      contractAddress: b.contractAddress,
      satoshisPrice: b.price,
      price: b.price
    }))[0];
  }
  async getNftSellList(t, a, r = 0, f = 20) {
    let i = `/contract/nft/sell/genesis/${t}/${a}/utxo`, n = this.serverBase + i;
    return (await Ne.httpGet(n, {}, {
      headers: this._getHeaders(i)
    })).filter((b) => b.isReady == !0).map((b) => ({
      codehash: t,
      genesis: a,
      tokenIndex: b.tokenIndex,
      txId: b.txid,
      outputIndex: b.txIndex,
      sellerAddress: b.address,
      satoshisPrice: b.price,
      price: b.price
    }))[0];
  }
  async getNftSellListByAddress(t, a = 0, r = 20) {
    let f = `/contract/nft/sell/address/${t}/utxo`, i = this.serverBase + f;
    return (await Ne.httpGet(i, {}, {
      headers: this._getHeaders(f)
    })).map((s) => ({
      codehash: s.codeHash,
      genesis: s.genesis,
      tokenIndex: s.tokenIndex,
      txId: s.txid,
      outputIndex: s.txIndex,
      sellerAddress: s.address,
      satoshisPrice: s.price,
      price: s.price
    }));
  }
  async getOutpointSpent(t, a) {
    let r = `https://api.sensiblequery.com/tx/${t}/out/${a}/spent`, f = await Ne.httpGet(r, {});
    const {
      code: i,
      data: n,
      msg: o
    } = f;
    return i != 0 || !n ? null : {
      spentTxId: n.txid,
      spentInputIndex: n.idx
    };
  }
  async getXpubLiteUtxo(t) {
    const a = `/xpubLite/${t}/utxo`, r = this.serverBase + a;
    return await Ne.httpGet(r, {}, {
      headers: this._getHeaders(a)
    });
  }
  async getXpubLiteBalance(t) {
    const a = `/xpubLite/${t}/balance`, r = this.serverBase + a;
    return await Ne.httpGet(r, {}, {
      headers: this._getHeaders(a)
    });
  }
}
var Oa = /* @__PURE__ */ ((e) => (e.MAIN = "mainnet", e.TEST = "testnet", e))(Oa || {}), an = /* @__PURE__ */ ((e) => (e.MVC = "mvc", e))(an || {});
class rc {
  constructor(t, a = "mvc", r) {
    switch (a) {
      case "mvc": {
        this.apiHandler = new Rp(t, r);
        break;
      }
      default: {
        this.apiHandler = new Rp(t, r);
        break;
      }
    }
  }
  /**
   * Authorization to use MetaSV
   * @param options
   * @returns
   */
  authorize(t) {
    return this.apiHandler.authorize(t);
  }
  async getUnspents(t) {
    return this.apiHandler.getUnspents(t);
  }
  async getBalance(t) {
    let a = await this.apiHandler.getBalance(t);
    return {
      balance: a.balance,
      pendingBalance: a.pendingBalance
    };
  }
  async getRawTxData(t) {
    return this.apiHandler.getRawTxData(t);
  }
  async checkTxSeen(t) {
    return this.apiHandler.checkTxSeen(t);
  }
  async broadcast(t) {
    return this.apiHandler.broadcast(t);
  }
  async getFungibleTokenUnspents(t, a, r, f) {
    return this.apiHandler.getFungibleTokenUnspents(t, a, r, f);
  }
  async getFungibleTokenBalance(t, a, r) {
    return this.apiHandler.getFungibleTokenBalance(t, a, r);
  }
  async getFungibleTokenSummary(t) {
    return this.apiHandler.getFungibleTokenSummary(t);
  }
  async getNonFungibleTokenUnspents(t, a, r, f, i) {
    return this.apiHandler.getNonFungibleTokenUnspents(t, a, r, f, i);
  }
  async getNonFungibleTokenUnspentDetail(t, a, r) {
    return this.apiHandler.getNonFungibleTokenUnspentDetail(t, a, r);
  }
  async getNonFungibleTokenSummary(t) {
    return this.apiHandler.getNonFungibleTokenSummary(t);
  }
  async getNftSellUtxo(t, a, r, f) {
    return this.apiHandler.getNftSellUtxo(t, a, r, f);
  }
  async getNftSellList(t, a, r, f) {
    return this.apiHandler.getNftSellList(t, a, r, f);
  }
  async getNftSellListByAddress(t, a, r) {
    return this.apiHandler.getNftSellListByAddress(t, a, r);
  }
  async getOutpointSpent(t, a) {
    return this.apiHandler.getOutpointSpent(t, a);
  }
  async getXpubLiteUtxo(t) {
    return this.apiHandler.getXpubLiteUtxo(t);
  }
  async getXpubLiteBalance(t) {
    return this.apiHandler.getXpubLiteBalance(t);
  }
}
const VF = 9, zF = "1.19.0+commit.72eaeba", qF = "NftGenesis", KF = "a4ccbc179c9c215ca0ea4243222626f0", GF = [
  {
    name: "LockingScriptParts",
    params: [
      {
        name: "code",
        type: "bytes"
      },
      {
        name: "data",
        type: "bytes"
      }
    ],
    genericTypes: []
  },
  {
    name: "OpPushData",
    params: [
      {
        name: "len",
        type: "int"
      },
      {
        name: "value",
        type: "int"
      }
    ],
    genericTypes: []
  },
  {
    name: "VarIntData",
    params: [
      {
        name: "len",
        type: "int"
      },
      {
        name: "value",
        type: "int"
      }
    ],
    genericTypes: []
  },
  {
    name: "TxInputProof",
    params: [
      {
        name: "hashProof",
        type: "bytes"
      },
      {
        name: "txHash",
        type: "bytes"
      },
      {
        name: "outputIndexBytes",
        type: "bytes"
      },
      {
        name: "sequenceBytes",
        type: "bytes"
      }
    ],
    genericTypes: []
  },
  {
    name: "TxOutputProof",
    params: [
      {
        name: "txHeader",
        type: "bytes"
      },
      {
        name: "hashProof",
        type: "bytes"
      },
      {
        name: "satoshiBytes",
        type: "bytes"
      },
      {
        name: "scriptHash",
        type: "bytes"
      }
    ],
    genericTypes: []
  }
], WF = [
  {
    name: "ProtoHeader",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "Backtrace",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "NftProto",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "TxUtil",
    params: [],
    properties: [],
    genericTypes: []
  }
], ZF = [], YF = [
  {
    type: "function",
    name: "unlock",
    index: 0,
    params: [
      {
        name: "txPreimage",
        type: "SigHashPreimage"
      },
      {
        name: "pubKey",
        type: "PubKey"
      },
      {
        name: "sig",
        type: "Sig"
      },
      {
        name: "genesisTxHeader",
        type: "bytes"
      },
      {
        name: "prevInputIndex",
        type: "int"
      },
      {
        name: "genesisTxInputProof",
        type: "TxInputProof"
      },
      {
        name: "prevGenesisTxHeader",
        type: "bytes"
      },
      {
        name: "prevTxOutputHashProof",
        type: "bytes"
      },
      {
        name: "prevTxOutputSatoshiBytes",
        type: "bytes"
      },
      {
        name: "nftScript",
        type: "bytes"
      },
      {
        name: "genesisSatoshis",
        type: "int"
      },
      {
        name: "nftSatoshis",
        type: "int"
      },
      {
        name: "changeAddress",
        type: "Ripemd160"
      },
      {
        name: "changeSatoshis",
        type: "int"
      },
      {
        name: "opReturnScript",
        type: "bytes"
      }
    ]
  },
  {
    type: "constructor",
    params: []
  }
], XF = [], JF = "debug", QF = "file:///Users/ivan/Codes/blockchain/meta-contract/src/mcp01/contract/nft/nftGenesis.scrypt", eH = "0176018801a901ac515301402097dfd76851bf465e8f715593b217714858bbe9570ff3bd5e33840a34e20ff0262102ba79df5f8ae7604a9830f03c7933028186aede0675a16f025dc4f8be8eec0382201008ce7480da41702918d1ec8e6849ba32b4d65b1e40dc669c31a1e6306b266c0c6d657461636f6e7472616374240000000000000000000000000000000000000000000000000000000000000000000000005779567985011455937601249376011493765893765893760114937601249376529301267976547f75777601007e81775a9d0126797601687f7700005279517f75007f7d7701fd87635379537f75517f777601007e8177537a757b7b5379535479937f75537f777b757c677601fe87635379557f75517f777601007e8177537a757b7b5379555479937f75557f777b757c677601ff87635379597f75517f777601007e8177537a757b7b5379595479937f75597f777b757c675379517f75007f777601007e8177537a757b7b5379515479937f75517f777b757c686868757777777682776e6e5c79940124937f75785c79947f7777776f756e5a799458937f75785a79947f777601007e81777777706e5c799458937f75785c79947f777601007e817777776e7c9f69012b797601687f7501447f77770054790111798763755178557a75547a547a547a547a68567956796e011279940114937f7578011279947f770801000000030000000115797e87777769567956796e5b799452937f75785b79948b7f7701007e815a7952949c777769567956796e5b79947f75785b79948c7f77016a87777769766456795679567955798c70011179947f7578586e8b80767682778c7f75007f777777777e54795479011479947f755479011379947f777e52797e54795479011579947f777e7777777776a80126790126790126795379577901317901317956795679567956790111790136790136790136790136795b7901207f755b79aa885a795a79557955795579557955795c7f75587f777601007e8177567901307f75607f77567952799f695579827752790128959d5579a878885479827701209d53798277549d547954797e53797e76577959798b0128957f7559790128957f77886d6d6d6d756f757e7656798764597959795979597954795479aa7801207f75887601207f777601007e81775579607f755c7f777601007e8177567901707f7501507f775679827752790128959d5679a878885479827701209d557955797e76587955798b0128957f7555790128957f77886d6d6d6d75686d6d6d6d6d6d756d756d75680121798277557901237952796e011379940124937f7578011379947f77777788537901237952796e0111799458937f7578011179947f777601007e817777779d547901237952796e60799458937f75786079947f777601007e817777779d012279786e011379940114937f7578011379947f770801000000030000000116797e87777769012279786e5c799452937f75785c79948b7f7701007e815b7952949c777769012279786e5c79947f75785c79948c7f77016a877777695779577957790070011279947f7578586e8b80767682778c7f75007f777777777e54795479011579947f755479011479947f777e52797e54795479011679947f777e7777777776a901247953796e011379940114937f7578011379947f777777788800567958798c9e635a795b7982775a7959798b70011579947f7578586e8b80767682778c7f75007f777777777e54795479011879947f755479011779947f777e52797e54795479011979947f777e77777777760126797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77777777680125790124797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e777700012279827700a063012279527f7502006a88012279007658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e777777680001247900a0630125790123790122797e01147e787e0123797e0121797e77760126797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e7777777768707e52797e787eaa760136797682776e58947f75780128947f777777885e795e796e011579940114937f7578011579947f77777776013679a988013479013679ad01367901197978012079012079210ac407f0e4bd44bfc207355a778b046225a7068fc59ee7eda43ad905aadbffc800206c266b30e6a1319c66dc401e5bd6b432ba49688eecd118297041da8074ce081001227956795679aa7676517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e01007e817757795679567956795679537956795479577995939521414136d08c5ed2bf3ba048afe6dcaebafeffffffffffffffffffffffffffffff006e6e9776009f636e936776687777777b757c6e5296a0636e7c947b757c6853798277527982775379012080517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e01205279947f77545379935279930130787e527e54797e58797e527e53797e52797e57797e777777777777777777777777765779ac777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777", tH = "", aH = {
  version: VF,
  compilerVersion: zF,
  contract: qF,
  md5: KF,
  structs: GF,
  library: WF,
  alias: ZF,
  abi: YF,
  stateProps: XF,
  buildType: JF,
  file: QF,
  hex: eH,
  sourceMapFile: tH
};
class Da {
  constructor(t) {
    this._contract = t;
  }
  get lockingScript() {
    return this._contract.lockingScript;
  }
  get txContext() {
    return this._contract.txContext;
  }
  get dataPart() {
    return this._contract.dataPart;
  }
  get codePart() {
    return this._contract.codePart;
  }
  setTxContext(t) {
    this._contract.txContext = t;
  }
  setDataPart(t) {
    this._contract.setDataPartInASM(t);
  }
  //取OP_RETURN之前的hash
  getCodeHash() {
    let t = this.codePart.toBuffer();
    return d7.toHex(d7.mvc.crypto.Hash.sha256ripemd160(t));
  }
  //取整体的hash
  getScriptHash() {
    return d7.toHex(d7.mvc.crypto.Hash.sha256ripemd160(this.lockingScript.toBuffer()));
  }
}
const Qg = 5, w6 = Q.Buffer.from("metacontract"), rH = w6.length, ex = rH + Qg, S6 = 4, gs = ex + S6, E6 = 4, xs = gs + E6, fH = xs;
var Jt = /* @__PURE__ */ ((e) => (e[e.FT = 1] = "FT", e[e.UNIQUE = 2] = "UNIQUE", e[e.NFT = 3] = "NFT", e[e.NFT_SELL = 65537] = "NFT_SELL", e))(Jt || {});
function F1() {
  return fH;
}
function iH(e) {
  return e.slice(e.length - ex, e.length - Qg);
}
function rn(e) {
  return e.length < gs ? 0 : e.readUIntLE(e.length - gs, S6);
}
function fc(e) {
  return e.length < xs ? 0 : e.readUIntLE(e.length - xs, E6);
}
function ic(e) {
  return iH(e).compare(w6) === 0;
}
var ma = /* @__PURE__ */ ((e) => (e[e.TRANSFER = 1] = "TRANSFER", e[e.UNLOCK_FROM_CONTRACT = 2] = "UNLOCK_FROM_CONTRACT", e))(ma || {});
const fn = 1, nn = 36, nc = 20, $f = 8, nH = 20, x9 = 8, on = 20, oc = 36, Jr = nn + F1(), jf = Jr + nc, _9 = jf + $f, lf = _9 + x9, pf = lf + on, hf = pf + oc, _s = hf, oH = Q.Buffer.alloc(nH, 0), sH = Q.Buffer.alloc(on, 0);
function tx(e) {
  return e.slice(e.length - jf, e.length - jf + nc).toString("hex");
}
function ax(e) {
  return e.length < _9 ? he.Zero : he.fromBuffer(e.slice(e.length - _9, e.length - _9 + $f), {
    endian: "little"
  });
}
function s9(e) {
  return d7.mvc.crypto.Hash.sha256ripemd160(e.slice(e.length - _9, e.length - F1()));
}
function rx(e) {
  return e.length < lf ? he.Zero : he.fromBuffer(e.slice(e.length - lf, e.length - lf + x9), {
    endian: "little"
  });
}
function sc(e) {
  return e.length < pf ? "" : e.slice(e.length - pf, e.length - pf + on).toString("hex");
}
function fx(e) {
  return e.slice(0, e.length - _s - WC(_s).length);
}
function ix(e) {
  return d7.mvc.crypto.Hash.sha256ripemd160(fx(e));
}
function nx(e) {
  if (e.length < hf)
    return {
      txid: "",
      index: 0
    };
  let t = Q.Buffer.from(e), a = t.slice(t.length - hf, t.length - hf + oc), r = a.slice(0, 32).reverse().toString("hex"), f = a.readUIntLE(32, 4);
  return {
    txid: r,
    index: f
  };
}
function ox(e) {
  if (e.length < Jr)
    return {
      txid: "",
      index: 0
    };
  let t = Q.Buffer.from(e), a = t.slice(t.length - Jr, t.length - Jr + nn), r = a.slice(0, 32).reverse().toString("hex"), f = a.readUIntLE(32, 4);
  return {
    txid: r,
    index: f
  };
}
function sn({
  metaidOutpoint: e,
  nftAddress: t,
  totalSupply: a,
  tokenIndex: r,
  genesisHash: f,
  sensibleID: i,
  protoVersion: n,
  protoType: o
}) {
  let s = Q.Buffer.alloc(oc, 0);
  if (e && e.txid) {
    const M = Q.Buffer.from(e.txid, "hex").reverse(), R = Q.Buffer.alloc(4, 0);
    R.writeUInt32LE(e.index), s = Q.Buffer.concat([M, R]);
  }
  let b = Q.Buffer.alloc(on, 0);
  t && (b = Q.Buffer.from(t, "hex"));
  let l = Q.Buffer.alloc(x9, 0);
  a && (l = a.toBuffer({
    endian: "little",
    size: x9
  }).slice(0, x9));
  let v = Q.Buffer.alloc($f, 0);
  r && (v = r.toBuffer({
    endian: "little",
    size: $f
  }));
  const m = Q.Buffer.alloc(nc, 0);
  f && m.write(f, "hex");
  let x = Q.Buffer.alloc(nn, 0);
  if (i) {
    const M = Q.Buffer.from(i.txid, "hex").reverse(), R = Q.Buffer.alloc(4, 0);
    R.writeUInt32LE(i.index), x = Q.Buffer.concat([M, R]);
  }
  const I = Q.Buffer.alloc(E6);
  n && I.writeUInt32LE(n);
  const k = Q.Buffer.alloc(S6, 0);
  o && k.writeUInt32LE(o);
  const P = Q.Buffer.concat([s, b, l, v, m, x, I, k, w6]);
  return N1(P);
}
function at(e) {
  let t = nx(e), a = sc(e), r = rx(e), f = ax(e), i = tx(e), n = ox(e), o = fc(e), s = rn(e);
  return {
    metaidOutpoint: t,
    nftAddress: a,
    totalSupply: r,
    tokenIndex: f,
    genesisHash: i,
    sensibleID: n,
    protoVersion: o,
    protoType: s
  };
}
function dc(e, t) {
  const a = e.slice(0, e.length - _s), r = sn(t);
  return Q.Buffer.concat([a, r]);
}
function sx(e) {
  return ix(e).toString("hex");
}
function ws(e) {
  return d7.mvc.crypto.Hash.sha256ripemd160(
    e.slice(e.length - jf, e.length - F1())
    // [len - (20+36+25), len - 25]
  ).toString("hex");
}
function dx(e) {
  let t = Q.Buffer.from(e);
  return t.slice(t.length - Jr, t.length - Jr + nn).toString("hex");
}
const cx = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  EMPTY_ADDRESS: sH,
  GENESIS_TOKEN_ID: oH,
  NFT_OP_TYPE: ma,
  PROTO_VERSION: fn,
  getContractCode: fx,
  getContractCodeHash: ix,
  getGenesisHash: tx,
  getMetaidOutpoint: nx,
  getNftAddress: sc,
  getNftID: s9,
  getQueryCodehash: sx,
  getQueryGenesis: ws,
  getQuerySensibleID: dx,
  getSensibleID: ox,
  getTokenIndex: ax,
  getTotalSupply: rx,
  newDataPart: sn,
  parseDataPart: at,
  updateScript: dc
}, Symbol.toStringTag, { value: "Module" })), dH = "0000000000000000000000000000000000000000000000000000000000000000";
class cc extends Da {
  constructor() {
    const t = aH;
    let a = d7.buildContractClass(t), r = new a();
    super(r);
  }
  clone() {
    let t = new cc();
    return t.setFormatedDataPart(this.getFormatedDataPart()), t;
  }
  setFormatedDataPart(t) {
    this._formatedDataPart = Object.assign({}, this._formatedDataPart, t), this._formatedDataPart.genesisHash = "", this._formatedDataPart.protoVersion = fn, this._formatedDataPart.protoType = Jt.NFT;
    const a = sn(this._formatedDataPart).toString("hex");
    super.setDataPart(a);
  }
  getFormatedDataPart() {
    return this._formatedDataPart;
  }
  setFormatedDataPartFromLockingScript(t) {
    let a = at(t.toBuffer());
    this.setFormatedDataPart(a);
  }
  isFirstGenesis() {
    return this.getFormatedDataPart().sensibleID.txid == dH;
  }
  unlock({
    txPreimage: t,
    // sig
    pubKey: a,
    sig: r,
    // GenesisTx Input Proof
    genesisTxHeader: f,
    prevInputIndex: i,
    genesisTxInputProof: n,
    // Prev GenesisTx Output Proof
    prevGenesisTxHeader: o,
    prevTxOutputHashProof: s,
    prevTxOutputSatoshiBytes: b,
    // output
    nftScript: l,
    genesisSatoshis: v,
    nftSatoshis: m,
    changeAddress: x,
    changeSatoshis: I,
    opReturnScript: k
  }) {
    return this._contract.unlock(t, a, r, f, i, n, o, s, b, l, v, m, x, I, k);
  }
}
class Vt {
  static getLockingScriptSize() {
    return this.lockingScriptSize;
  }
  static createContract() {
    return new cc();
  }
  static getDummyInstance() {
    let t = this.createContract();
    return t.setFormatedDataPart({}), t;
  }
  static calLockingScriptSize() {
    return this.getDummyInstance().lockingScript.toBuffer().length;
  }
  static calUnlockingScriptSize(t) {
    return 1e4;
  }
}
const cH = 9, uH = "1.19.0+commit.72eaeba", lH = "NftSell", pH = "d546c73b76c3a61fd075b09a27a71297", hH = [], bH = [
  {
    name: "ProtoHeader",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "NftProto",
    params: [],
    properties: [],
    genericTypes: []
  }
], mH = [], vH = [
  {
    type: "function",
    name: "unlock",
    index: 0,
    params: [
      {
        name: "txPreimage",
        type: "SigHashPreimage"
      },
      {
        name: "nftScript",
        type: "bytes"
      },
      {
        name: "senderPubKey",
        type: "PubKey"
      },
      {
        name: "senderSig",
        type: "Sig"
      },
      {
        name: "nftOutputSatoshis",
        type: "int"
      },
      {
        name: "op",
        type: "int"
      }
    ]
  },
  {
    type: "constructor",
    params: [
      {
        name: "senderAddress",
        type: "Ripemd160"
      },
      {
        name: "bsvRecAmount",
        type: "int"
      },
      {
        name: "nftCodeHash",
        type: "bytes"
      },
      {
        name: "nftID",
        type: "bytes"
      }
    ]
  }
], yH = [], gH = "debug", xH = "file:///Users/ivan/Codes/blockchain/meta-contract/src/mcp01/contract/nft/nftSell.scrypt", _H = "0176018801a901ac515301402097dfd76851bf465e8f715593b217714858bbe9570ff3bd5e33840a34e20ff0262102ba79df5f8ae7604a9830f03c7933028186aede0675a16f025dc4f8be8eec0382201008ce7480da41702918d1ec8e6849ba32b4d65b1e40dc669c31a1e6306b266c54795479850114559376012493760114937658937658937601149376012493765293<senderAddress><bsvRecAmount><nftCodeHash><nftID>00011879519c6354790118790117797e01147e787e0118797e0116797e777655797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e7777777767011b79a9557988011a79011c79ad011c798277011d79786e6e5c79947f757777a97777547988011d79786e011179947f75785e79947f77a97777537988011d797857796f755d79947f75787e707f7553795e79940114937f777e77777776011c797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e7777537a7577776876aa011e797682776e58947f75780128947f77777788011d795e7978011379011379210ac407f0e4bd44bfc207355a778b046225a7068fc59ee7eda43ad905aadbffc800206c266b30e6a1319c66dc401e5bd6b432ba49688eecd118297041da8074ce081001157956795679aa7676517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e01007e817757795679567956795679537956795479577995939521414136d08c5ed2bf3ba048afe6dcaebafeffffffffffffffffffffffffffffff006e6e9776009f636e936776687777777b757c6e5296a0636e7c947b757c6853798277527982775379012080517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e01205279947f77545379935279930130787e527e54797e58797e527e53797e52797e57797e777777777777777777777777ab765779ac7777777777777777777777777777777777777777777777777777777777777777777777777777777777", wH = "", SH = {
  version: cH,
  compilerVersion: uH,
  contract: lH,
  md5: pH,
  structs: hH,
  library: bH,
  alias: mH,
  abi: vH,
  stateProps: yH,
  buildType: gH,
  file: xH,
  hex: _H,
  sourceMapFile: wH
}, uc = 1, ux = 5, EH = 3, lc = 40, pc = 20, hc = 1, bc = 20, w9 = 8, mc = 20, dn = 36, Qr = dn + F1(), q9 = Qr + mc, bf = q9 + w9, S9 = bf + bc, Ss = S9 + hc, mf = Ss + pc, vf = mf + lc, TH = 2, cn = vf, AH = cn + TH, lx = 1, px = 2;
var E9 = /* @__PURE__ */ ((e) => (e[e.TRANSFER = 1] = "TRANSFER", e[e.UNLOCK_FROM_CONTRACT = 2] = "UNLOCK_FROM_CONTRACT", e))(E9 || {}), hx = /* @__PURE__ */ ((e) => (e[e.FALSE = 0] = "FALSE", e[e.TRUE = 1] = "TRUE", e))(hx || {});
function IH() {
  return cn;
}
function bx(e) {
  return e.length < bf ? he.Zero : he.fromBuffer(e.slice(e.length - bf, e.length - bf + w9), {
    endian: "little"
  });
}
function Vf(e) {
  return d7.mvc.crypto.Hash.sha256ripemd160(e.slice(e.length - q9, e.length - F1()));
}
function mx(e) {
  if (e.length < Qr)
    return {
      txid: "",
      index: 0
    };
  let t = Q.Buffer.from(e), a = t.slice(t.length - Qr, t.length - Qr + dn), r = a.slice(0, 32).reverse().toString("hex"), f = a.readUIntLE(32, 4);
  return {
    txid: r,
    index: f
  };
}
function vx(e) {
  return e.slice(
    e.length - q9,
    // script.length - GENESIS_HASH_OFFSET + GENESISTX_ID_OFFSET
    e.length - q9 + mc
  ).toString("hex");
}
function yx(e) {
  return e.length < S9 ? "" : e.slice(e.length - S9, e.length - S9 + bc).toString("hex");
}
function gx(e) {
  return e.length < Ss ? 0 : e.readUIntLE(e.length - Ss, hc);
}
function xx(e) {
  return e.length < mf ? "" : e.slice(e.length - mf, e.length - mf + pc).toString();
}
function _x(e) {
  return e.length < vf ? "" : e.slice(e.length - vf, e.length - vf + lc).toString();
}
function wx(e) {
  return e.slice(0, e.length - AH);
}
function zf(e) {
  return d7.mvc.crypto.Hash.sha256ripemd160(wx(e));
}
function kH(e) {
  return e.slice(e.length - cn, e.length);
}
function Sx(e, t, a) {
  const r = a.toBuffer({
    endian: "little",
    size: 8
  }), f = e.slice(0, e.length - S9);
  return Q.Buffer.concat([f, t, r, e.slice(e.length - q9, e.length)]);
}
const Ex = function(e) {
  return Q.Buffer.from(e, "hex").reverse();
}, Tx = function(e) {
  const t = Q.Buffer.alloc(4, 0);
  return t.writeUInt32LE(e), t;
}, OH = function(e, t) {
  return Q.Buffer.concat([Ex(e), Tx(t)]).toString("hex");
};
function y1({
  tokenName: e,
  tokenSymbol: t,
  decimalNum: a,
  tokenAddress: r,
  tokenAmount: f,
  genesisHash: i,
  sensibleID: n,
  protoVersion: o,
  protoType: s
}) {
  const b = Q.Buffer.alloc(lc, 0);
  e && b.write(e);
  const l = Q.Buffer.alloc(pc, 0);
  t && l.write(t);
  const v = Q.Buffer.alloc(hc, 0);
  a && v.writeUInt8(a);
  let m = Q.Buffer.alloc(w9, 0);
  f && (m = f.toBuffer({
    endian: "little",
    size: w9
  }).slice(0, w9));
  const x = Q.Buffer.alloc(mc, 0);
  i && x.write(i, "hex");
  let I = Q.Buffer.alloc(dn, 0);
  if (n) {
    const F = Q.Buffer.from(n.txid, "hex").reverse(), C = Q.Buffer.alloc(4, 0);
    C.writeUInt32LE(n.index), I = Q.Buffer.concat([F, C]);
  }
  const k = Q.Buffer.alloc(S6, 0);
  s && k.writeUInt32LE(s);
  const P = Q.Buffer.alloc(E6);
  o && P.writeUInt32LE(o);
  let M = Q.Buffer.alloc(bc, 0);
  r && (M = Q.Buffer.from(r, "hex"));
  const R = Q.Buffer.concat([
    // 新版结构变化
    b,
    l,
    v,
    M,
    // 就是 issuer 的 hashBuffer
    m,
    x,
    I,
    // 就是genesisTxidBuf
    P,
    k,
    w6
    // 旧版做法
    // tokenNameBuf,
    // tokenSymbolBuf,
    // genesisFlagBuf,
    // decimalBuf,
    // tokenAddressBuf,
    // tokenAmountBuf,
    // genesisHashBuf,
    // rabinPubKeyHashArrayHashBuf,
    // sensibleIDBuf,
    // protoVersionBuf,
    // protoTypeBuf,
    // proto.PROTO_FLAG,
  ]);
  return N1(R);
}
function Rt(e) {
  let t = _x(e), a = xx(e), r = gx(e), f = yx(e), i = bx(e), n = vx(e), o = mx(e), s = fc(e), b = rn(e);
  return {
    tokenName: t,
    tokenSymbol: a,
    decimalNum: r,
    tokenAddress: f,
    tokenAmount: i,
    genesisHash: n,
    sensibleID: o,
    protoVersion: s,
    protoType: b
  };
}
function Es(e, t) {
  const a = e.slice(0, e.length - cn), r = y1(t);
  return Q.Buffer.concat([a, r]);
}
function Ax(e) {
  return d7.toHex(zf(e));
}
function d9(e) {
  return d7.toHex(Vf(e));
}
function Ix(e) {
  let t = Q.Buffer.from(e), a = t.slice(t.length - Qr, t.length - Qr + dn);
  return d7.toHex(a);
}
const kx = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  FT_OP_TYPE: E9,
  GENESIS_FLAG: hx,
  OP_TRANSFER: lx,
  OP_UNLOCK_FROM_CONTRACT: px,
  PROTO_VERSION: uc,
  SIGNER_NUM: ux,
  SIGNER_VERIFY_NUM: EH,
  genGenesisTxid: OH,
  getContractCode: wx,
  getContractCodeHash: zf,
  getDataPart: kH,
  getDecimalNum: gx,
  getGenesisHash: vx,
  getHeaderLen: IH,
  getNewTokenScript: Sx,
  getQueryCodehash: Ax,
  getQueryGenesis: d9,
  getQuerySensibleID: Ix,
  getSensibleID: mx,
  getTokenAddress: yx,
  getTokenAmount: bx,
  getTokenID: Vf,
  getTokenName: _x,
  getTokenSymbol: xx,
  getTxIdBuf: Ex,
  getUInt32Buf: Tx,
  newDataPart: y1,
  parseDataPart: Rt,
  updateScript: Es
}, Symbol.toStringTag, { value: "Module" })), PH = d7.mvc.crypto.BN, MH = "mainnet", RH = "c776133a77886693ba2484fe12d6bdfb8f8bcb7a237e4a8a6d0f69c7d1879a08", Ox = d7.mvc.PrivateKey.fromWIF("L5k7xi4diSR8aWoGKojSNTnc3YMEXEoNpJEaGzqWimdKry6CFrzz"), Ts = Ox.toAddress(MH), Px = Ox.toPublicKey(), Ta = Px, BH = new d7.mvc.Transaction("010000000146a476c09fa48d0db861dc5c9e28dc11f9262a89d057a03d8896e93458b82e0f010000006a47304402200b70b1feb364ffe0245c78a2d163fca4bfd808976acbbb3579ba71807bd9b307022074bf5058166902632987e68a3fc6e0d6e36def18c7c184acd50dfedfa72830d9412103ac3f50a7670cd94792a61992d98aeaba4681de7777997f23fdc1ff32438f267efeffffff02e8030000000000001976a9145008595623e5364f71fea7a4ddfc20c069a028a088ace4f00c00000000001976a914200fcbd6341db16487f566b4718879409c31ed0088ac3b960a00"), NH = PH.fromString("2c8c0117aa5edba9a4539e783b6a1bdbc1ad88ad5b57f3d9c5cba55001c45e1fedb877ebc7d49d1cfa8aa938ccb303c3a37732eb0296fee4a6642b0ff1976817b603404f64c41ec098f8cd908caf64b4a3aada220ff61e252ef6d775079b69451367eda8fdb37bc55c8bfd69610e1f31b9d421ff44e3a0cfa7b11f334374827256a0b91ce80c45ffb798798e7bd6b110134e1a3c3fa89855a19829aab3922f55da92000495737e99e0094e6c4dbcc4e8d8de5459355c21ff055d039a202076e4ca263b745a885ef292eec0b5a5255e6ecc45534897d9572c3ebe97d36626c7b1e775159e00b17d03bc6d127260e13a252afd89bab72e8daf893075f18c1840cb394f18a9817913a9462c6ffc8951bee50a05f38da4c9090a4d6868cb8c955e5efb4f3be4e7cf0be1c399d78a6f6dd26a0af8492dca67843c6da9915bae571aa9f4696418ab1520dd50dd05f5c0c7a51d2843bd4d9b6b3b79910e98f3d98099fd86d71b2fac290e32bdacb31943a8384a7668c32a66be127b74390b4b0dec6455", 16);
let Bp = Q.Buffer.alloc(0);
for (let e = 0; e < ux; e++)
  Bp = Q.Buffer.concat([Bp, d7.mvc.crypto.Hash.sha256ripemd160(jC(NH.toString("hex"), $C))]);
const CH = 1, vc = 20, yc = 8, gc = 20, xc = 8, Mx = 20, Rx = 20, As = vc + F1(), yf = yc + As, gf = gc + yf, xf = xc + gf, _f = Mx + xf, mo = Rx + _f;
function DH(e) {
  return d7.toHex(e.slice(e.length - As, e.length - As + vc));
}
function LH(e) {
  return e.length < yf ? he.Zero : he.fromBuffer(e.slice(e.length - yf, e.length - yf + yc), {
    endian: "little"
  });
}
function FH(e) {
  return e.length < gf ? "" : e.slice(e.length - gf, e.length - gf + gc).toString("hex");
}
function HH(e) {
  return e.length < xf ? he.Zero : he.fromBuffer(e.slice(e.length - xf, e.length - xf + xc), {
    endian: "little"
  });
}
function UH(e) {
  return e.length < _f ? "" : e.slice(e.length - _f, e.length - _f + Mx).toString("hex");
}
function $H(e) {
  return e.length < mo ? "" : e.slice(e.length - mo, e.length - mo + Rx).toString("hex");
}
function jH({
  codehash: e,
  genesis: t,
  tokenIndex: a,
  sellerAddress: r,
  satoshisPrice: f,
  nftID: i,
  protoVersion: n,
  protoType: o
}) {
  const s = Q.Buffer.alloc(20, 0);
  i && s.write(e, "hex");
  const b = Q.Buffer.alloc(20, 0);
  i && b.write(t, "hex");
  let l = Q.Buffer.alloc(xc, 0);
  a && (l = a.toBuffer({
    endian: "little",
    size: 8
  }));
  const v = Q.Buffer.alloc(gc, 0);
  r && v.write(r, "hex");
  let m = Q.Buffer.alloc(yc, 0);
  f && (m = f.toBuffer({
    endian: "little",
    size: 8
  }));
  const x = Q.Buffer.alloc(vc, 0);
  i && x.write(i, "hex");
  const I = Q.Buffer.alloc(E6);
  n && I.writeUInt32LE(n);
  const k = Q.Buffer.alloc(S6, 0);
  o && k.writeUInt32LE(o);
  const P = Q.Buffer.concat([s, b, l, v, m, x, I, k, w6]);
  return N1(P);
}
function Is(e) {
  let t = $H(e), a = UH(e), r = HH(e), f = FH(e), i = LH(e), n = DH(e), o = fc(e), s = rn(e);
  return {
    codehash: t,
    genesis: a,
    tokenIndex: r,
    sellerAddress: f,
    satoshisPrice: i,
    nftID: n,
    protoVersion: o,
    protoType: s
  };
}
const VH = 9, zH = "1.19.0+commit.72eaeba", qH = "Nft", KH = "fb91e6eb310c18474b3bebc8579696d8", GH = [
  {
    name: "LockingScriptParts",
    params: [
      {
        name: "code",
        type: "bytes"
      },
      {
        name: "data",
        type: "bytes"
      }
    ],
    genericTypes: []
  },
  {
    name: "OpPushData",
    params: [
      {
        name: "len",
        type: "int"
      },
      {
        name: "value",
        type: "int"
      }
    ],
    genericTypes: []
  },
  {
    name: "VarIntData",
    params: [
      {
        name: "len",
        type: "int"
      },
      {
        name: "value",
        type: "int"
      }
    ],
    genericTypes: []
  },
  {
    name: "TxInputProof",
    params: [
      {
        name: "hashProof",
        type: "bytes"
      },
      {
        name: "txHash",
        type: "bytes"
      },
      {
        name: "outputIndexBytes",
        type: "bytes"
      },
      {
        name: "sequenceBytes",
        type: "bytes"
      }
    ],
    genericTypes: []
  },
  {
    name: "TxOutputProof",
    params: [
      {
        name: "txHeader",
        type: "bytes"
      },
      {
        name: "hashProof",
        type: "bytes"
      },
      {
        name: "satoshiBytes",
        type: "bytes"
      },
      {
        name: "scriptHash",
        type: "bytes"
      }
    ],
    genericTypes: []
  }
], WH = [
  {
    name: "ProtoHeader",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "AmountCheckProto",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "Backtrace",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "NftProto",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "TxUtil",
    params: [],
    properties: [],
    genericTypes: []
  }
], ZH = [], YH = [
  {
    type: "function",
    name: "unlock",
    index: 0,
    params: [
      {
        name: "txPreimage",
        type: "SigHashPreimage"
      },
      {
        name: "prevouts",
        type: "bytes"
      },
      {
        name: "prevNftInputIndex",
        type: "int"
      },
      {
        name: "prevNftAddress",
        type: "bytes"
      },
      {
        name: "nftTxHeader",
        type: "bytes"
      },
      {
        name: "nftTxInputProof",
        type: "TxInputProof"
      },
      {
        name: "prevNftTxProof",
        type: "TxOutputProof"
      },
      {
        name: "genesisScript",
        type: "bytes"
      },
      {
        name: "contractInputIndex",
        type: "int"
      },
      {
        name: "contractTxProof",
        type: "TxOutputProof"
      },
      {
        name: "amountCheckHashIndex",
        type: "int"
      },
      {
        name: "amountCheckInputIndex",
        type: "int"
      },
      {
        name: "amountCheckTxProof",
        type: "TxOutputProof"
      },
      {
        name: "amountCheckScript",
        type: "bytes"
      },
      {
        name: "senderPubKey",
        type: "PubKey"
      },
      {
        name: "senderSig",
        type: "Sig"
      },
      {
        name: "receiverAddress",
        type: "bytes"
      },
      {
        name: "nftOutputSatoshis",
        type: "int"
      },
      {
        name: "opReturnScript",
        type: "bytes"
      },
      {
        name: "changeAddress",
        type: "Ripemd160"
      },
      {
        name: "changeSatoshis",
        type: "int"
      },
      {
        name: "operation",
        type: "int"
      }
    ]
  },
  {
    type: "constructor",
    params: [
      {
        name: "unlockContractCodeHashArray",
        type: "bytes[5]"
      }
    ]
  }
], XH = [], JH = "debug", QH = "file:///Users/ivan/Codes/blockchain/meta-contract/src/mcp01/contract/nft/nft.scrypt", eU = "0176018801a901ac515301402097dfd76851bf465e8f715593b217714858bbe9570ff3bd5e33840a34e20ff0262102ba79df5f8ae7604a9830f03c7933028186aede0675a16f025dc4f8be8eec0382201008ce7480da41702918d1ec8e6849ba32b4d65b1e40dc669c31a1e6306b266c557954798501145593140000000000000000000000000000000000000000780124937601149376589376589376011493760124937652935501149376011493768b<unlockContractCodeHashArray[0]><unlockContractCodeHashArray[1]><unlockContractCodeHashArray[2]><unlockContractCodeHashArray[3]><unlockContractCodeHashArray[4]>013d7976547f75777601007e81775a9d013c79aa013e797601247f75547f777788013d797601687f7700005279517f75007f7d7701fd87635379537f75517f777601007e8177537a757b7b5379535479937f75537f777b757c677601fe87635379557f75517f777601007e8177537a757b7b5379555479937f75557f777b757c677601ff87635379597f75517f777601007e8177537a757b7b5379595479937f75597f777b757c675379517f75007f777601007e8177537a757b7b5379515479937f75517f777b757c686868757777777682776e6e5e79947f757777a86f756e0113799458937f7578011379947f777601007e81777777706e0113799458937f7578011379947f777601007e817777779f696f756e011579940124937f7578011579947f7777770141797601687f7501447f777776013f79014279013c79013c79013c79013c7958790145790145790145790145795b7901207f755b79aa885a795a79557955795579557955795c7f75587f777601007e8177567901307f75607f77567952799f695579827752790128959d5579a878885479827701209d53798277549d547954797e53797e76577959798b0128957f7559790128957f77886d6d6d6d756f757e7656798764597959795979597954795479aa7801207f75887601207f777601007e81775579607f755c7f777601007e8177567901707f7501507f775679827752790128959d5679a878885479827701209d557955797e76587955798b0128957f7555790128957f77886d6d6d6d75686d6d6d6d6d6d757801207f75013a79aa8764547954790141796f75011479947f75787e707f755379011579940114937f777e77777776a80138798776640137798277577957796e0118799458937f7578011879947f777601007e8177777701397952796e0119799458937f7578011979947f777601007e817777779d0138797856790070011a79947f7578586e8b80767682778c7f75007f777777777e54795479011d79947f755479011c79947f777e52797e54795479011f79947f777e77777777013979a8013b7988587958796e011a79940114937f7578011a79947f77777778a978886d75686d68012179519c63547954790128796f75011479947f75787e707f755379011579940114937f777e777777760127797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e777700012779827700a063012779527f7502006a88012779007658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e7777776801257901277900527900a063780127790126797e01147e787e0127797e0125797e777654797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e777777776877776f757e787e76aa760149797682776e58947f75780128947f777777885a795a796e011979940114937f7578011979947f77777776011c79879169012f79a97888012e79013079ad6d6d6d7567547954796e011379940114937f7578011379947f77777776011679876476013279a6880142790136798b0124957f750136790124957f7701357901357901357901357954795479aa7801207f75887601207f777601007e81775579607f755c7f777601007e8177567901707f7501507f775679827752790128959d5679a878885479827701209d557955797e76587955798b0128957f7555790128957f77886d6d6d6d6d680142790130798b0124957f750130790124957f77012b79a8012d7988012f79012f79012f79012f7954795479aa7801207f75887601207f777601007e81775579607f755c7f777601007e8177567901707f7501507f775679827752790128959d5679a878885479827701209d557955797e76587955798b0128957f7555790128957f77886d6d6d6d75012b798277577957796e011c79947f7578011879947f77a9777776012e7953796e55947f7578011579947f777777885679a676012f7954796e011679947f7578011579947f77777788012e795379011179947f75a9766079607960796079607955013c797600a26976559f699451958c6b6c766b796c756b6d6d756c886d6d6d6801427901177978011c79011c79210ac407f0e4bd44bfc207355a778b046225a7068fc59ee7eda43ad905aadbffc800206c266b30e6a1319c66dc401e5bd6b432ba49688eecd118297041da8074ce0810011e7956795679aa7676517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e01007e817757795679567956795679537956795479577995939521414136d08c5ed2bf3ba048afe6dcaebafeffffffffffffffffffffffffffffff006e6e9776009f636e936776687777777b757c6e5296a0636e7c947b757c6853798277527982775379012080517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e01205279947f77545379935279930130787e527e54797e58797e527e53797e52797e57797e777777777777777777777777765779ac7777777777777777777777696d6d6d6d6d6d6d6d6d6d6d6d6d6d6d6d6d6d6d6d6d6d6d6d6d6d6d6d6d6d6d6d6d7551", tU = "", aU = {
  version: VH,
  compilerVersion: zH,
  contract: qH,
  md5: KH,
  structs: GH,
  library: WH,
  alias: ZH,
  abi: YH,
  stateProps: XH,
  buildType: JH,
  file: QH,
  hex: eU,
  sourceMapFile: tU
}, rU = 9, fU = "1.19.0+commit.72eaeba", iU = "NftUnlockContractCheck", nU = "6040b90032e30bae312732ff4941cf4f", oU = [
  {
    name: "LockingScriptParts",
    params: [
      {
        name: "code",
        type: "bytes"
      },
      {
        name: "data",
        type: "bytes"
      }
    ],
    genericTypes: []
  },
  {
    name: "OpPushData",
    params: [
      {
        name: "len",
        type: "int"
      },
      {
        name: "value",
        type: "int"
      }
    ],
    genericTypes: []
  },
  {
    name: "VarIntData",
    params: [
      {
        name: "len",
        type: "int"
      },
      {
        name: "value",
        type: "int"
      }
    ],
    genericTypes: []
  },
  {
    name: "TxInputProof",
    params: [
      {
        name: "hashProof",
        type: "bytes"
      },
      {
        name: "txHash",
        type: "bytes"
      },
      {
        name: "outputIndexBytes",
        type: "bytes"
      },
      {
        name: "sequenceBytes",
        type: "bytes"
      }
    ],
    genericTypes: []
  },
  {
    name: "TxOutputProof",
    params: [
      {
        name: "txHeader",
        type: "bytes"
      },
      {
        name: "hashProof",
        type: "bytes"
      },
      {
        name: "satoshiBytes",
        type: "bytes"
      },
      {
        name: "scriptHash",
        type: "bytes"
      }
    ],
    genericTypes: []
  }
], sU = [
  {
    name: "ProtoHeader",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "AmountCheckProto",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "NftProto",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "TxUtil",
    params: [],
    properties: [],
    genericTypes: []
  }
], dU = [], cU = [
  {
    type: "function",
    name: "unlock",
    index: 0,
    params: [
      {
        name: "txPreimage",
        type: "SigHashPreimage"
      },
      {
        name: "prevouts",
        type: "bytes"
      },
      {
        name: "nftInputIndex",
        type: "int"
      },
      {
        name: "nftScript",
        type: "bytes"
      },
      {
        name: "nftTxHeader",
        type: "bytes"
      },
      {
        name: "nftTxHashProof",
        type: "bytes"
      },
      {
        name: "nftSatoshiBytes",
        type: "bytes"
      },
      {
        name: "nOutputs",
        type: "int"
      },
      {
        name: "txNftOutputIndex",
        type: "int"
      },
      {
        name: "nftOutputAddress",
        type: "bytes"
      },
      {
        name: "nftOutputSatoshis",
        type: "int"
      },
      {
        name: "otherOutputArray",
        type: "bytes"
      }
    ]
  },
  {
    type: "constructor",
    params: []
  }
], uU = [], lU = "debug", pU = "file:///Users/ivan/Codes/blockchain/meta-contract/src/mcp01/contract/nft/nftUnlockContractCheck_100.scrypt", hU = "", bU = "", mU = {
  version: rU,
  compilerVersion: fU,
  contract: iU,
  md5: nU,
  structs: oU,
  library: sU,
  alias: dU,
  abi: cU,
  stateProps: uU,
  buildType: lU,
  file: pU,
  hex: hU,
  sourceMapFile: bU
}, vU = 9, yU = "1.19.0+commit.72eaeba", gU = "NftUnlockContractCheck", xU = "c5819ca3bdcf6d2fece66c9bde74c4d7", _U = [
  {
    name: "LockingScriptParts",
    params: [
      {
        name: "code",
        type: "bytes"
      },
      {
        name: "data",
        type: "bytes"
      }
    ],
    genericTypes: []
  },
  {
    name: "OpPushData",
    params: [
      {
        name: "len",
        type: "int"
      },
      {
        name: "value",
        type: "int"
      }
    ],
    genericTypes: []
  },
  {
    name: "VarIntData",
    params: [
      {
        name: "len",
        type: "int"
      },
      {
        name: "value",
        type: "int"
      }
    ],
    genericTypes: []
  },
  {
    name: "TxInputProof",
    params: [
      {
        name: "hashProof",
        type: "bytes"
      },
      {
        name: "txHash",
        type: "bytes"
      },
      {
        name: "outputIndexBytes",
        type: "bytes"
      },
      {
        name: "sequenceBytes",
        type: "bytes"
      }
    ],
    genericTypes: []
  },
  {
    name: "TxOutputProof",
    params: [
      {
        name: "txHeader",
        type: "bytes"
      },
      {
        name: "hashProof",
        type: "bytes"
      },
      {
        name: "satoshiBytes",
        type: "bytes"
      },
      {
        name: "scriptHash",
        type: "bytes"
      }
    ],
    genericTypes: []
  }
], wU = [
  {
    name: "ProtoHeader",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "AmountCheckProto",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "NftProto",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "TxUtil",
    params: [],
    properties: [],
    genericTypes: []
  }
], SU = [], EU = [
  {
    type: "function",
    name: "unlock",
    index: 0,
    params: [
      {
        name: "txPreimage",
        type: "SigHashPreimage"
      },
      {
        name: "prevouts",
        type: "bytes"
      },
      {
        name: "nftInputIndex",
        type: "int"
      },
      {
        name: "nftScript",
        type: "bytes"
      },
      {
        name: "nftTxHeader",
        type: "bytes"
      },
      {
        name: "nftTxHashProof",
        type: "bytes"
      },
      {
        name: "nftSatoshiBytes",
        type: "bytes"
      },
      {
        name: "nOutputs",
        type: "int"
      },
      {
        name: "txNftOutputIndex",
        type: "int"
      },
      {
        name: "nftOutputAddress",
        type: "bytes"
      },
      {
        name: "nftOutputSatoshis",
        type: "int"
      },
      {
        name: "otherOutputArray",
        type: "bytes"
      }
    ]
  },
  {
    type: "constructor",
    params: []
  }
], TU = [], AU = "debug", IU = "file:///Users/ivan/Codes/blockchain/meta-contract/src/mcp01/contract/nft/nftUnlockContractCheck_20.scrypt", kU = "", OU = "", PU = {
  version: vU,
  compilerVersion: yU,
  contract: gU,
  md5: xU,
  structs: _U,
  library: wU,
  alias: SU,
  abi: EU,
  stateProps: TU,
  buildType: AU,
  file: IU,
  hex: kU,
  sourceMapFile: OU
}, MU = 9, RU = "1.19.0+commit.72eaeba", BU = "NftUnlockContractCheck", NU = "55a3ce7af7b39150a8d6b3891b89f077", CU = [
  {
    name: "LockingScriptParts",
    params: [
      {
        name: "code",
        type: "bytes"
      },
      {
        name: "data",
        type: "bytes"
      }
    ],
    genericTypes: []
  },
  {
    name: "OpPushData",
    params: [
      {
        name: "len",
        type: "int"
      },
      {
        name: "value",
        type: "int"
      }
    ],
    genericTypes: []
  },
  {
    name: "VarIntData",
    params: [
      {
        name: "len",
        type: "int"
      },
      {
        name: "value",
        type: "int"
      }
    ],
    genericTypes: []
  },
  {
    name: "TxInputProof",
    params: [
      {
        name: "hashProof",
        type: "bytes"
      },
      {
        name: "txHash",
        type: "bytes"
      },
      {
        name: "outputIndexBytes",
        type: "bytes"
      },
      {
        name: "sequenceBytes",
        type: "bytes"
      }
    ],
    genericTypes: []
  },
  {
    name: "TxOutputProof",
    params: [
      {
        name: "txHeader",
        type: "bytes"
      },
      {
        name: "hashProof",
        type: "bytes"
      },
      {
        name: "satoshiBytes",
        type: "bytes"
      },
      {
        name: "scriptHash",
        type: "bytes"
      }
    ],
    genericTypes: []
  }
], DU = [
  {
    name: "ProtoHeader",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "AmountCheckProto",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "NftProto",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "TxUtil",
    params: [],
    properties: [],
    genericTypes: []
  }
], LU = [], FU = [
  {
    type: "function",
    name: "unlock",
    index: 0,
    params: [
      {
        name: "txPreimage",
        type: "SigHashPreimage"
      },
      {
        name: "prevouts",
        type: "bytes"
      },
      {
        name: "nftInputIndex",
        type: "int"
      },
      {
        name: "nftScript",
        type: "bytes"
      },
      {
        name: "nftTxHeader",
        type: "bytes"
      },
      {
        name: "nftTxHashProof",
        type: "bytes"
      },
      {
        name: "nftSatoshiBytes",
        type: "bytes"
      },
      {
        name: "nOutputs",
        type: "int"
      },
      {
        name: "txNftOutputIndex",
        type: "int"
      },
      {
        name: "nftOutputAddress",
        type: "bytes"
      },
      {
        name: "nftOutputSatoshis",
        type: "int"
      },
      {
        name: "otherOutputArray",
        type: "bytes"
      }
    ]
  },
  {
    type: "constructor",
    params: []
  }
], HU = [], UU = "debug", $U = "file:///Users/ivan/Codes/blockchain/meta-contract/src/mcp01/contract/nft/nftUnlockContractCheck_10.scrypt", jU = "", VU = "", zU = {
  version: MU,
  compilerVersion: RU,
  contract: BU,
  md5: NU,
  structs: CU,
  library: DU,
  alias: LU,
  abi: FU,
  stateProps: HU,
  buildType: UU,
  file: $U,
  hex: jU,
  sourceMapFile: VU
}, qU = 9, KU = "1.19.0+commit.72eaeba", GU = "NftUnlockContractCheck", WU = "27e82eced782796bdebe8420633e8025", ZU = [
  {
    name: "LockingScriptParts",
    params: [
      {
        name: "code",
        type: "bytes"
      },
      {
        name: "data",
        type: "bytes"
      }
    ],
    genericTypes: []
  },
  {
    name: "OpPushData",
    params: [
      {
        name: "len",
        type: "int"
      },
      {
        name: "value",
        type: "int"
      }
    ],
    genericTypes: []
  },
  {
    name: "VarIntData",
    params: [
      {
        name: "len",
        type: "int"
      },
      {
        name: "value",
        type: "int"
      }
    ],
    genericTypes: []
  },
  {
    name: "TxInputProof",
    params: [
      {
        name: "hashProof",
        type: "bytes"
      },
      {
        name: "txHash",
        type: "bytes"
      },
      {
        name: "outputIndexBytes",
        type: "bytes"
      },
      {
        name: "sequenceBytes",
        type: "bytes"
      }
    ],
    genericTypes: []
  },
  {
    name: "TxOutputProof",
    params: [
      {
        name: "txHeader",
        type: "bytes"
      },
      {
        name: "hashProof",
        type: "bytes"
      },
      {
        name: "satoshiBytes",
        type: "bytes"
      },
      {
        name: "scriptHash",
        type: "bytes"
      }
    ],
    genericTypes: []
  }
], YU = [
  {
    name: "ProtoHeader",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "AmountCheckProto",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "NftProto",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "TxUtil",
    params: [],
    properties: [],
    genericTypes: []
  }
], XU = [], JU = [
  {
    type: "function",
    name: "unlock",
    index: 0,
    params: [
      {
        name: "txPreimage",
        type: "SigHashPreimage"
      },
      {
        name: "prevouts",
        type: "bytes"
      },
      {
        name: "nftInputIndex",
        type: "int"
      },
      {
        name: "nftScript",
        type: "bytes"
      },
      {
        name: "nftTxHeader",
        type: "bytes"
      },
      {
        name: "nftTxHashProof",
        type: "bytes"
      },
      {
        name: "nftSatoshiBytes",
        type: "bytes"
      },
      {
        name: "nOutputs",
        type: "int"
      },
      {
        name: "txNftOutputIndex",
        type: "int"
      },
      {
        name: "nftOutputAddress",
        type: "bytes"
      },
      {
        name: "nftOutputSatoshis",
        type: "int"
      },
      {
        name: "otherOutputArray",
        type: "bytes"
      }
    ]
  },
  {
    type: "constructor",
    params: []
  }
], QU = [], e$ = "debug", t$ = "file:///Users/ivan/Codes/blockchain/meta-contract/src/mcp01/contract/nft/nftUnlockContractCheck_6.scrypt", a$ = "515301402097dfd76851bf465e8f715593b217714858bbe9570ff3bd5e33840a34e20ff0262102ba79df5f8ae7604a9830f03c7933028186aede0675a16f025dc4f8be8eec0382201008ce7480da41702918d1ec8e6849ba32b4d65b1e40dc669c31a1e6306b266c557954798501145593140000000000000000000000000000000000000000780124937601149376589376589376011493760124937652935501149376011493011c79aa011e797601247f75547f777788011d797601687f7700005279517f75007f7d7701fd87635379537f75517f777601007e8177537a757b7b5379535479937f75537f777b757c677601fe87635379557f75517f777601007e8177537a757b7b5379555479937f75557f777b757c677601ff87635379597f75517f777601007e8177537a757b7b5379595479937f75597f777b757c675379517f75007f777601007e8177537a757b7b5379515479937f75517f777b757c686868757777777682776e6e55947f75785779947f7777776f756e5879947f75785779947f777777011e7982770121790121798b0124957f750121790124957f77011f79011f79011f79012379a8707058795479aa7801207f75887601207f777601007e81775579607f755c7f777601007e8177567901707f7501507f775679827752790128959d5679a878885479827701209d557955797e76587955798b0128957f7555790128957f77886d6d6d6d75567901257957796e6e011379947f757777a9777788577901257957796e011979947f7578011579947f77a977778801247956796e011279940114937f7578011279947f7777770078011679876375516701217900a2690121790123799f6968000001247956a169000125799f63000124799c6352790087670068630128795a790124796f75011779947f75787e707f755379011879940114937f777e777777760123797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775379787e547a7572537a53796d75670120797854937f75787f777601007e8177012179527954935279937f75527954937f7d775c795f795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e012679947f7578012279947f77a977775679879169686d6d6d6d5379787e547a7572537a53797552795453799393537a757b7b52796d756868510125799f63510124799c6352790087670068630128795a790124796f75011779947f75787e707f755379011879940114937f777e777777760123797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775379787e547a7572537a53796d75670120797854937f75787f777601007e8177012179527954935279937f75527954937f7d775c795f795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e012679947f7578012279947f77a977775679879169686d6d6d6d5379787e547a7572537a53797552795453799393537a757b7b52796d756868520125799f63520124799c6352790087670068630128795a790124796f75011779947f75787e707f755379011879940114937f777e777777760123797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775379787e547a7572537a53796d75670120797854937f75787f777601007e8177012179527954935279937f75527954937f7d775c795f795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e012679947f7578012279947f77a977775679879169686d6d6d6d5379787e547a7572537a53797552795453799393537a757b7b52796d756868530125799f63530124799c6352790087670068630128795a790124796f75011779947f75787e707f755379011879940114937f777e777777760123797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775379787e547a7572537a53796d75670120797854937f75787f777601007e8177012179527954935279937f75527954937f7d775c795f795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e012679947f7578012279947f77a977775679879169686d6d6d6d5379787e547a7572537a53797552795453799393537a757b7b52796d756868540125799f63540124799c6352790087670068630128795a790124796f75011779947f75787e707f755379011879940114937f777e777777760123797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775379787e547a7572537a53796d75670120797854937f75787f777601007e8177012179527954935279937f75527954937f7d775c795f795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e012679947f7578012279947f77a977775679879169686d6d6d6d5379787e547a7572537a53797552795453799393537a757b7b52796d756868550125799f63550124799c6352790087670068630128795a790124796f75011779947f75787e707f755379011879940114937f777e777777760123797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775379787e547a7572537a53796d75670120797854937f75787f777601007e8177012179527954935279937f75527954937f7d775c795f795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e012679947f7578012279947f77a977775679879169686d6d6d6d5379787e547a7572537a53797552795453799393537a757b7b52796d75686878aa76012d797682776e58947f75780128947f77777788012c79011b7978012079012079210ac407f0e4bd44bfc207355a778b046225a7068fc59ee7eda43ad905aadbffc800206c266b30e6a1319c66dc401e5bd6b432ba49688eecd118297041da8074ce081001227956795679aa7676517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e01007e817757795679567956795679537956795479577995939521414136d08c5ed2bf3ba048afe6dcaebafeffffffffffffffffffffffffffffff006e6e9776009f636e936776687777777b757c6e5296a0636e7c947b757c6853798277527982775379012080517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e01205279947f77545379935279930130787e527e54797e58797e527e53797e52797e57797e777777777777777777777777ab765779ac7777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777", r$ = "", f$ = {
  version: qU,
  compilerVersion: KU,
  contract: GU,
  md5: WU,
  structs: ZU,
  library: YU,
  alias: XU,
  abi: JU,
  stateProps: QU,
  buildType: e$,
  file: t$,
  hex: a$,
  sourceMapFile: r$
}, i$ = 9, n$ = "1.19.0+commit.72eaeba", o$ = "NftUnlockContractCheck", s$ = "666adb8e966719fe38379e24d40dda3a", d$ = [
  {
    name: "LockingScriptParts",
    params: [
      {
        name: "code",
        type: "bytes"
      },
      {
        name: "data",
        type: "bytes"
      }
    ],
    genericTypes: []
  },
  {
    name: "OpPushData",
    params: [
      {
        name: "len",
        type: "int"
      },
      {
        name: "value",
        type: "int"
      }
    ],
    genericTypes: []
  },
  {
    name: "VarIntData",
    params: [
      {
        name: "len",
        type: "int"
      },
      {
        name: "value",
        type: "int"
      }
    ],
    genericTypes: []
  },
  {
    name: "TxInputProof",
    params: [
      {
        name: "hashProof",
        type: "bytes"
      },
      {
        name: "txHash",
        type: "bytes"
      },
      {
        name: "outputIndexBytes",
        type: "bytes"
      },
      {
        name: "sequenceBytes",
        type: "bytes"
      }
    ],
    genericTypes: []
  },
  {
    name: "TxOutputProof",
    params: [
      {
        name: "txHeader",
        type: "bytes"
      },
      {
        name: "hashProof",
        type: "bytes"
      },
      {
        name: "satoshiBytes",
        type: "bytes"
      },
      {
        name: "scriptHash",
        type: "bytes"
      }
    ],
    genericTypes: []
  }
], c$ = [
  {
    name: "ProtoHeader",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "AmountCheckProto",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "NftProto",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "TxUtil",
    params: [],
    properties: [],
    genericTypes: []
  }
], u$ = [], l$ = [
  {
    type: "function",
    name: "unlock",
    index: 0,
    params: [
      {
        name: "txPreimage",
        type: "SigHashPreimage"
      },
      {
        name: "prevouts",
        type: "bytes"
      },
      {
        name: "nftInputIndex",
        type: "int"
      },
      {
        name: "nftScript",
        type: "bytes"
      },
      {
        name: "nftTxHeader",
        type: "bytes"
      },
      {
        name: "nftTxHashProof",
        type: "bytes"
      },
      {
        name: "nftSatoshiBytes",
        type: "bytes"
      },
      {
        name: "nOutputs",
        type: "int"
      },
      {
        name: "txNftOutputIndex",
        type: "int"
      },
      {
        name: "nftOutputAddress",
        type: "bytes"
      },
      {
        name: "nftOutputSatoshis",
        type: "int"
      },
      {
        name: "otherOutputArray",
        type: "bytes"
      }
    ]
  },
  {
    type: "constructor",
    params: []
  }
], p$ = [], h$ = "debug", b$ = "file:///Users/ivan/Codes/blockchain/meta-contract/src/mcp01/contract/nft/nftUnlockContractCheck.scrypt", m$ = "515301402097dfd76851bf465e8f715593b217714858bbe9570ff3bd5e33840a34e20ff0262102ba79df5f8ae7604a9830f03c7933028186aede0675a16f025dc4f8be8eec0382201008ce7480da41702918d1ec8e6849ba32b4d65b1e40dc669c31a1e6306b266c557954798501145593140000000000000000000000000000000000000000780124937601149376589376589376011493760124937652935501149376011493011c79aa011e797601247f75547f777788011d797601687f7700005279517f75007f7d7701fd87635379537f75517f777601007e8177537a757b7b5379535479937f75537f777b757c677601fe87635379557f75517f777601007e8177537a757b7b5379555479937f75557f777b757c677601ff87635379597f75517f777601007e8177537a757b7b5379595479937f75597f777b757c675379517f75007f777601007e8177537a757b7b5379515479937f75517f777b757c686868757777777682776e6e55947f75785779947f7777776f756e5879947f75785779947f777777011e7982770121790121798b0124957f750121790124957f77011f79011f79011f79012379a8707058795479aa7801207f75887601207f777601007e81775579607f755c7f777601007e8177567901707f7501507f775679827752790128959d5679a878885479827701209d557955797e76587955798b0128957f7555790128957f77886d6d6d6d75567901257957796e6e011379947f757777a9777788577901257957796e011979947f7578011579947f77a977778801247956796e011279940114937f7578011279947f7777770078011679876375516701217900a2690121790123799f6968000001247953a169000125799f63000124799c6352790087670068630128795a790124796f75011779947f75787e707f755379011879940114937f777e777777760123797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775379787e547a7572537a53796d75670120797854937f75787f777601007e8177012179527954935279937f75527954937f7d775c795f795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e012679947f7578012279947f77a977775679879169686d6d6d6d5379787e547a7572537a53797552795453799393537a757b7b52796d756868510125799f63510124799c6352790087670068630128795a790124796f75011779947f75787e707f755379011879940114937f777e777777760123797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775379787e547a7572537a53796d75670120797854937f75787f777601007e8177012179527954935279937f75527954937f7d775c795f795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e012679947f7578012279947f77a977775679879169686d6d6d6d5379787e547a7572537a53797552795453799393537a757b7b52796d756868520125799f63520124799c6352790087670068630128795a790124796f75011779947f75787e707f755379011879940114937f777e777777760123797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775379787e547a7572537a53796d75670120797854937f75787f777601007e8177012179527954935279937f75527954937f7d775c795f795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e012679947f7578012279947f77a977775679879169686d6d6d6d5379787e547a7572537a53797552795453799393537a757b7b52796d75686878aa76012d797682776e58947f75780128947f77777788012c79011b7978012079012079210ac407f0e4bd44bfc207355a778b046225a7068fc59ee7eda43ad905aadbffc800206c266b30e6a1319c66dc401e5bd6b432ba49688eecd118297041da8074ce081001227956795679aa7676517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e01007e817757795679567956795679537956795479577995939521414136d08c5ed2bf3ba048afe6dcaebafeffffffffffffffffffffffffffffff006e6e9776009f636e936776687777777b757c6e5296a0636e7c947b757c6853798277527982775379012080517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e01205279947f77545379935279930130787e527e54797e58797e527e53797e52797e57797e777777777777777777777777ab765779ac7777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777", v$ = "", y$ = {
  version: i$,
  compilerVersion: n$,
  contract: o$,
  md5: s$,
  structs: d$,
  library: c$,
  alias: u$,
  abi: l$,
  stateProps: p$,
  buildType: h$,
  file: b$,
  hex: m$,
  sourceMapFile: v$
};
function g$(e) {
  const t = Q.Buffer.concat([e.nftCodeHash, e.nftID]);
  return N1(t);
}
class _c extends Da {
  constructor(t) {
    let a;
    switch (t.unlockType) {
      case 1:
        a = y$;
        break;
      case 2:
        a = f$;
        break;
      case 3:
        a = zU;
        break;
      case 4:
        a = PU;
        break;
      case 5:
        a = mU;
        break;
      default:
        throw "invalid checkType";
    }
    const r = d7.buildContractClass(a), f = new r();
    super(f), this.constuctParams = t;
  }
  clone() {
    let t = new _c(this.constuctParams);
    return t.setFormatedDataPart(this.getFormatedDataPart()), t;
  }
  setFormatedDataPart(t) {
    this._formatedDataPart = Object.assign({}, this._formatedDataPart, t), super.setDataPart(d7.toHex(g$(this._formatedDataPart)));
  }
  getFormatedDataPart() {
    return this._formatedDataPart;
  }
  unlock({
    txPreimage: t,
    prevouts: a,
    nftInputIndex: r,
    nftScript: f,
    nftTxHeader: i,
    nftTxHashProof: n,
    nftSatoshiBytes: o,
    nOutputs: s,
    txNftOutputIndex: b,
    nftOutputAddress: l,
    nftOutputSatoshis: v,
    otherOutputArray: m
  }) {
    return this._contract.unlock(
      t,
      a,
      // nft
      r,
      f,
      i,
      n,
      o,
      // output
      s,
      b,
      l,
      v,
      m
    );
  }
}
var va = /* @__PURE__ */ ((e) => (e[e.OUT_3 = 1] = "OUT_3", e[e.OUT_6 = 2] = "OUT_6", e[e.OUT_10 = 3] = "OUT_10", e[e.OUT_20 = 4] = "OUT_20", e[e.OUT_100 = 5] = "OUT_100", e[e.UNSUPPORT = 6] = "UNSUPPORT", e))(va || {});
let x$ = [{
  type: 1,
  out: 3,
  lockingScriptSize: 0
}, {
  type: 2,
  out: 6,
  lockingScriptSize: 0
}, {
  type: 3,
  out: 10,
  lockingScriptSize: 0
}, {
  type: 4,
  out: 20,
  lockingScriptSize: 0
}, {
  type: 5,
  out: 100,
  lockingScriptSize: 0
}];
class O5 {
  static getLockingScriptSize(t) {
    return this.unlockContractTypeInfos.find((a) => a.type == t).lockingScriptSize;
  }
  static getOptimumType(t) {
    return t <= 3 ? 1 : t <= 6 ? 2 : t <= 10 ? 3 : t <= 20 ? 4 : t <= 100 ? 5 : 6;
  }
  static createContract(t) {
    return new _c({
      unlockType: t
    });
  }
  static getDummyInstance(t) {
    let a = this.createContract(t);
    return a.setFormatedDataPart({
      nftID: Ta.toBuffer(),
      nftCodeHash: Q.Buffer.from("0000000000000000000000000000000000000000", "hex")
    }), a;
  }
  static calLockingScriptSize(t) {
    return this.getDummyInstance(t).lockingScript.toBuffer().length;
  }
  static calUnlockingScriptSize(t, a, r) {
    return 1e4;
  }
}
O5.unlockContractTypeInfos = x$;
function _$() {
  return [O5.createContract(va.OUT_3), O5.createContract(va.OUT_6), O5.createContract(va.OUT_10), O5.createContract(va.OUT_20), O5.createContract(va.OUT_100)].map((t) => t.getCodeHash());
}
let wc = class {
  static init(t) {
    t ? (this.unlockContractCodeHashArray = t.unlockContractCodeHashArray.map((r) => new d7.Bytes(r)), Vt.lockingScriptSize = t.tokenGenesisSize, H0.lockingScriptSize = t.tokenSize, fr.lockingScriptSize = t.nftSellSize, O5.unlockContractTypeInfos.forEach((r, f) => {
      r.lockingScriptSize = t.unlockContractSizes[f];
    })) : (this.unlockContractCodeHashArray = _$().map((r) => new d7.Bytes(r)), Vt.lockingScriptSize = Vt.calLockingScriptSize(), H0.lockingScriptSize = H0.calLockingScriptSize(), fr.lockingScriptSize = fr.calLockingScriptSize(), O5.unlockContractTypeInfos.forEach((r, f) => {
      r.lockingScriptSize = O5.calLockingScriptSize(r.type);
    }));
    let a = H0.getDummyInstance();
    this.tokenCodeHash = a.getCodeHash();
  }
};
class Sc extends Da {
  constructor(t) {
    let a = aU, r = d7.buildContractClass(a), f = new r(t.unlockContractCodeHashArray);
    super(f), this.constuctParams = t;
  }
  clone() {
    let t = new Sc(this.constuctParams);
    return t.setFormatedDataPart(this.getFormatedDataPart()), t;
  }
  setFormatedDataPart(t) {
    this._formatedDataPart = Object.assign({}, this._formatedDataPart, t), this._formatedDataPart.protoVersion = fn, this._formatedDataPart.protoType = Jt.NFT, super.setDataPart(d7.toHex(sn(this._formatedDataPart)));
  }
  getFormatedDataPart() {
    return this._formatedDataPart;
  }
  unlock({
    txPreimage: t,
    prevouts: a,
    // nft
    prevNftInputIndex: r,
    prevNftAddress: f,
    nftTxHeader: i,
    nftTxInputProof: n,
    prevNftTxProof: o,
    genesisScript: s,
    // contract
    contractInputIndex: b,
    contractTxProof: l,
    // unlockCheck
    amountCheckHashIndex: v,
    amountCheckInputIndex: m,
    amountCheckTxProof: x,
    amountCheckScrypt: I,
    // sig
    senderPubKey: k,
    senderSig: P,
    // output
    receiverAddress: M,
    nftOutputSatoshis: R,
    opReturnScript: F,
    changeAddress: C,
    changeSatoshis: L,
    // checkInputIndex,
    // checkScriptTx,
    // checkScriptTxOutIndex,
    // lockContractInputIndex,
    // lockContractTx,
    // lockContractTxOutIndex,
    operation: U
  }) {
    return s || (s = new d7.Bytes("")), U != ma.TRANSFER && (k = new d7.PubKey("00"), P = new d7.Sig("00"), M = new d7.Bytes(""), R = new d7.Int(0), F = new d7.Bytes(""), C = new d7.Ripemd160("00"), L = new d7.Int(0)), this._contract.unlock(
      t,
      a,
      // nft
      r,
      f,
      i,
      n,
      o,
      s,
      // contract
      b,
      l,
      // unlockCheck
      v,
      m,
      x,
      I,
      // sig
      k,
      P,
      // output
      M,
      R,
      F,
      C,
      L,
      // checkInputIndex,
      // checkScriptTx,
      // checkScriptTxOutIndex,
      // lockContractInputIndex,
      // lockContractTx,
      // lockContractTxOutIndex,
      U
    );
  }
}
class H0 {
  static getLockingScriptSize() {
    return this.lockingScriptSize;
  }
  static createContract(t, a) {
    return new Sc({
      unlockContractCodeHashArray: t
    });
  }
  static getDummyInstance() {
    let t = this.createContract(wc.unlockContractCodeHashArray);
    return t.setFormatedDataPart({}), t;
  }
  static calLockingScriptSize() {
    return this.getDummyInstance().lockingScript.toBuffer().length;
  }
  static calUnlockingScriptSize(t, a, r, f) {
    return 1e4;
  }
}
const Np = d7.mvc.crypto.BN;
var ks = /* @__PURE__ */ ((e) => (e[e.SELL = 1] = "SELL", e[e.CANCEL = 2] = "CANCEL", e))(ks || {});
class rr extends Da {
  constructor(t) {
    let a = rr.getClass(), r = new a(t.senderAddress, t.bsvRecAmount, t.nftCodeHash, t.nftID);
    super(r), this.constuctParams = t;
  }
  static getClass() {
    const t = SH;
    return d7.buildContractClass(t);
  }
  static fromASM(t) {
    let f = rr.getClass().fromASM(t).scriptedConstructor.params, i = f[0], n = parseInt(f[1].value), o = f[2], s = f[3];
    return new rr({
      senderAddress: i,
      bsvRecAmount: n,
      nftCodeHash: o,
      nftID: s
    });
  }
  clone() {
    let t = new rr(this.constuctParams);
    return t.setFormatedDataPart(this.getFormatedDataPart()), t;
  }
  setFormatedDataPart(t) {
    this._formatedDataPart = Object.assign({}, this._formatedDataPart, t), this._formatedDataPart.protoVersion = CH, this._formatedDataPart.protoType = Jt.NFT_SELL, super.setDataPart(d7.toHex(jH(this._formatedDataPart)));
  }
  getFormatedDataPart() {
    return this._formatedDataPart;
  }
  setFormatedDataPartFromLockingScript(t) {
    let a = Is(t.toBuffer());
    this.setFormatedDataPart(a);
  }
  unlock({
    txPreimage: t,
    nftScript: a,
    // only cancel need
    senderPubKey: r,
    // only cancel need
    senderSig: f,
    // only cancel need
    nftOutputSatoshis: i,
    // only cancel need
    op: n
  }) {
    return n != 2 && (a = new d7.Bytes(""), r = new d7.PubKey("00"), f = new d7.Sig("00"), i = 0), this._contract.unlock(t, a, r, f, i, n);
  }
}
class fr {
  static getLockingScriptSize() {
    return this.lockingScriptSize;
  }
  static createContract(t, a, r, f) {
    return new rr({
      senderAddress: t,
      bsvRecAmount: a,
      nftCodeHash: r,
      nftID: f
    });
  }
  static createFromASM(t) {
    return rr.fromASM(t);
  }
  static getDummyInstance() {
    return this.createContract(new d7.Ripemd160(d7.toHex(Ts.hashBuffer)), 1e3, new d7.Bytes(d7.toHex(Q.Buffer.alloc(20, 0))), new d7.Bytes(d7.toHex(Q.Buffer.alloc(36, 0))));
  }
  static calLockingScriptSize() {
    let t = this.getDummyInstance();
    return t.setFormatedDataPart({
      codehash: d7.toHex(Ta),
      genesis: d7.toHex(Ta),
      tokenIndex: Np.fromString("10000000000", 10),
      sellerAddress: d7.toHex(Ts.hashBuffer),
      satoshisPrice: Np.fromString("100000000", 10),
      nftID: d7.toHex(Ta)
    }), t.lockingScript.toBuffer().length;
  }
  static calUnlockingScriptSize(t) {
    let a = this.getDummyInstance(), r = H0.getDummyInstance();
    const f = d7.getPreimage(BH, a.lockingScript.toASM(), 1), i = Q.Buffer.from(v9, "hex");
    return a.unlock({
      txPreimage: new d7.SigHashPreimage(d7.toHex(f)),
      nftScript: new d7.Bytes(r.lockingScript.toHex()),
      senderPubKey: new d7.PubKey(d7.toHex(Px)),
      senderSig: new d7.Sig(d7.toHex(i)),
      nftOutputSatoshis: 1e3,
      op: t
    }).toScript().toBuffer().length;
  }
}
const w$ = 9, S$ = "1.19.0+commit.72eaeba", E$ = "TokenGenesis", T$ = "9e138e480974c3147f0bb98de1b053ef", A$ = [
  {
    name: "LockingScriptParts",
    params: [
      {
        name: "code",
        type: "bytes"
      },
      {
        name: "data",
        type: "bytes"
      }
    ],
    genericTypes: []
  },
  {
    name: "OpPushData",
    params: [
      {
        name: "len",
        type: "int"
      },
      {
        name: "value",
        type: "int"
      }
    ],
    genericTypes: []
  },
  {
    name: "VarIntData",
    params: [
      {
        name: "len",
        type: "int"
      },
      {
        name: "value",
        type: "int"
      }
    ],
    genericTypes: []
  },
  {
    name: "TxInputProof",
    params: [
      {
        name: "hashProof",
        type: "bytes"
      },
      {
        name: "txHash",
        type: "bytes"
      },
      {
        name: "outputIndexBytes",
        type: "bytes"
      },
      {
        name: "sequenceBytes",
        type: "bytes"
      }
    ],
    genericTypes: []
  },
  {
    name: "TxOutputProof",
    params: [
      {
        name: "txHeader",
        type: "bytes"
      },
      {
        name: "hashProof",
        type: "bytes"
      },
      {
        name: "satoshiBytes",
        type: "bytes"
      },
      {
        name: "scriptHash",
        type: "bytes"
      }
    ],
    genericTypes: []
  }
], I$ = [
  {
    name: "ProtoHeader",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "TokenProto",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "Backtrace",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "TxUtil",
    params: [],
    properties: [],
    genericTypes: []
  }
], k$ = [], O$ = [
  {
    type: "function",
    name: "unlock",
    index: 0,
    params: [
      {
        name: "txPreimage",
        type: "SigHashPreimage"
      },
      {
        name: "pubKey",
        type: "PubKey"
      },
      {
        name: "sig",
        type: "Sig"
      },
      {
        name: "tokenScript",
        type: "bytes"
      },
      {
        name: "genesisTxHeader",
        type: "bytes"
      },
      {
        name: "prevInputIndex",
        type: "int"
      },
      {
        name: "genesisTxInputProof",
        type: "TxInputProof"
      },
      {
        name: "prevGenesisTxHeader",
        type: "bytes"
      },
      {
        name: "prevTxOutputHashProof",
        type: "bytes"
      },
      {
        name: "prevTxOutputSatoshiBytes",
        type: "bytes"
      },
      {
        name: "genesisSatoshis",
        type: "int"
      },
      {
        name: "tokenSatoshis",
        type: "int"
      },
      {
        name: "changeAddress",
        type: "Ripemd160"
      },
      {
        name: "changeSatoshis",
        type: "int"
      },
      {
        name: "opReturnScript",
        type: "bytes"
      }
    ]
  },
  {
    type: "constructor",
    params: []
  }
], P$ = [], M$ = "debug", R$ = "file:///Users/ivan/Codes/blockchain/meta-contract/src/mcp02/contract/token/tokenGenesis.scrypt", B$ = "0176018801a901ac515301402097dfd76851bf465e8f715593b217714858bbe9570ff3bd5e33840a34e20ff0262102ba79df5f8ae7604a9830f03c7933028186aede0675a16f025dc4f8be8eec0382201008ce7480da41702918d1ec8e6849ba32b4d65b1e40dc669c31a1e6306b266c0c6d657461636f6e7472616374567955798501145593760124937601149376589376011493768b760114937601289376529301267976547f75777601007e81775a9d0126797601687f7700005279517f75007f7d7701fd87635379537f75517f777601007e8177537a757b7b5379535479937f75537f777b757c677601fe87635379557f75517f777601007e8177537a757b7b5379555479937f75557f777b757c677601ff87635379597f75517f777601007e8177537a757b7b5379595479937f75597f777b757c675379517f75007f777601007e8177537a757b7b5379515479937f75517f777b757c686868757777777682776e6e5c79947f75785b79947f777601007e8177777776009d6f756e5e79947f75785d79947f777777140000000000000000000000000000000000000000886f756e5e79940124937f75785e79947f77777700012b797601687f7501447f7777527924000000000000000000000000000000000000000000000000000000000000000000000000876377517c76537a757b7b68557955796e011279940114937f7578011279947f770801000000010000000114797e87777769557955796e5a79947f75785a79948c7f77016a87636e5a79948b7f75785a79947f77014c87670068636e5a799452937f75785a79948b7f777601007e8177597952949c67006877776978645579a801237901237901237953795579012e79012e7956795679567956795e790133790133790133790133795b7901207f755b79aa885a795a79557955795579557955795c7f75587f777601007e8177567901307f75607f77567952799f695579827752790128959d5579a878885479827701209d53798277549d547954797e53797e76577959798b0128957f7559790128957f77886d6d6d6d756f757e7656798764597959795979597954795479aa7801207f75887601207f777601007e81775579607f755c7f777601007e8177567901707f7501507f775679827752790128959d5679a878885479827701209d557955797e76587955798b0128957f7555790128957f77886d6d6d6d75686d6d6d6d6d6d756d756d685579557954796f75011279947f75787e70011379940124937f777e77777776a9012b7982775579012d7952796e011579940124937f7578011579947f7777778878012d7952796e011579947f7578011479947f77777788587958796e6079948b7f75785e79947f777777012d7952796e011179948b7f75785f79947f77777788012c79786e5d79947f75785d79948c7f77016a87636e5d79948b7f75785d79947f77014c87670068636e5d799452937f75785d79948b7f777601007e81775c7952949c6700687777690001237900a06353790124797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77777768012d790123797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e777700012179827700a063012179527f75007f7702006a88012179007658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e7777776801227901247900527900a063780124790123797e01147e787e0124797e0122797e777654797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77777777687777707e52797e787eaa760135797682776e58947f75780128947f777777885d795d796e011779947f7578011679947f77777776013579a988013379013579ad01357901197978011f79011f79210ac407f0e4bd44bfc207355a778b046225a7068fc59ee7eda43ad905aadbffc800206c266b30e6a1319c66dc401e5bd6b432ba49688eecd118297041da8074ce081001217956795679aa7676517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e01007e817757795679567956795679537956795479577995939521414136d08c5ed2bf3ba048afe6dcaebafeffffffffffffffffffffffffffffff006e6e9776009f636e936776687777777b757c6e5296a0636e7c947b757c6853798277527982775379012080517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e01205279947f77545379935279930130787e527e54797e58797e527e53797e52797e57797e777777777777777777777777765779ac7777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777", N$ = "", C$ = {
  version: w$,
  compilerVersion: S$,
  contract: E$,
  md5: T$,
  structs: A$,
  library: I$,
  alias: k$,
  abi: O$,
  stateProps: P$,
  buildType: M$,
  file: R$,
  hex: B$,
  sourceMapFile: N$
}, D$ = 9, L$ = "1.19.0+commit.72eaeba", F$ = "Token", H$ = "2784cda7c2c25db5b8c98065e9884e09", U$ = [
  {
    name: "LockingScriptParts",
    params: [
      {
        name: "code",
        type: "bytes"
      },
      {
        name: "data",
        type: "bytes"
      }
    ],
    genericTypes: []
  },
  {
    name: "OpPushData",
    params: [
      {
        name: "len",
        type: "int"
      },
      {
        name: "value",
        type: "int"
      }
    ],
    genericTypes: []
  },
  {
    name: "VarIntData",
    params: [
      {
        name: "len",
        type: "int"
      },
      {
        name: "value",
        type: "int"
      }
    ],
    genericTypes: []
  },
  {
    name: "TxInputProof",
    params: [
      {
        name: "hashProof",
        type: "bytes"
      },
      {
        name: "txHash",
        type: "bytes"
      },
      {
        name: "outputIndexBytes",
        type: "bytes"
      },
      {
        name: "sequenceBytes",
        type: "bytes"
      }
    ],
    genericTypes: []
  },
  {
    name: "TxOutputProof",
    params: [
      {
        name: "txHeader",
        type: "bytes"
      },
      {
        name: "hashProof",
        type: "bytes"
      },
      {
        name: "satoshiBytes",
        type: "bytes"
      },
      {
        name: "scriptHash",
        type: "bytes"
      }
    ],
    genericTypes: []
  }
], $$ = [
  {
    name: "ProtoHeader",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "AmountCheckProto",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "TokenProto",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "Backtrace",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "TxUtil",
    params: [],
    properties: [],
    genericTypes: []
  }
], j$ = [], V$ = [
  {
    type: "function",
    name: "unlock",
    index: 0,
    params: [
      {
        name: "txPreimage",
        type: "SigHashPreimage"
      },
      {
        name: "prevouts",
        type: "bytes"
      },
      {
        name: "tokenInputIndex",
        type: "int"
      },
      {
        name: "amountCheckHashIndex",
        type: "int"
      },
      {
        name: "amountCheckInputIndex",
        type: "int"
      },
      {
        name: "amountCheckTxProof",
        type: "TxOutputProof"
      },
      {
        name: "amountCheckScript",
        type: "bytes"
      },
      {
        name: "prevTokenInputIndex",
        type: "int"
      },
      {
        name: "prevTokenAddress",
        type: "bytes"
      },
      {
        name: "prevTokenAmount",
        type: "int"
      },
      {
        name: "tokenTxHeader",
        type: "bytes"
      },
      {
        name: "tokenTxInputProof",
        type: "TxInputProof"
      },
      {
        name: "prevTokenTxProof",
        type: "TxOutputProof"
      },
      {
        name: "senderPubKey",
        type: "PubKey"
      },
      {
        name: "senderSig",
        type: "Sig"
      },
      {
        name: "contractInputIndex",
        type: "int"
      },
      {
        name: "contractTxProof",
        type: "TxOutputProof"
      },
      {
        name: "operation",
        type: "int"
      }
    ]
  },
  {
    type: "constructor",
    params: [
      {
        name: "transferAmountCheckCodeHashArray",
        type: "bytes[5]"
      },
      {
        name: "unlockAmountCheckCodeHashArray",
        type: "bytes[5]"
      }
    ]
  }
], z$ = [], q$ = "debug", K$ = "file:///Users/ivan/Codes/blockchain/meta-contract/src/mcp02/contract/token/token.scrypt", G$ = "515301402097dfd76851bf465e8f715593b217714858bbe9570ff3bd5e33840a34e20ff0262102ba79df5f8ae7604a9830f03c7933028186aede0675a16f025dc4f8be8eec0382201008ce7480da41702918d1ec8e6849ba32b4d65b1e40dc669c31a1e6306b266c557954798501145593140000000000000000000000000000000000000000780124937601149376589376011493768b76011493760128937652935501149376011493765493<transferAmountCheckCodeHashArray[0]><transferAmountCheckCodeHashArray[1]><transferAmountCheckCodeHashArray[2]><transferAmountCheckCodeHashArray[3]><transferAmountCheckCodeHashArray[4]><unlockAmountCheckCodeHashArray[0]><unlockAmountCheckCodeHashArray[1]><unlockAmountCheckCodeHashArray[2]><unlockAmountCheckCodeHashArray[3]><unlockAmountCheckCodeHashArray[4]>013b7976547f75777601007e81775a9d013a79aa013c797601247f75547f777788013b797601687f7700005279517f75007f7d7701fd87635379537f75517f777601007e8177537a757b7b5379535479937f75537f777b757c677601fe87635379557f75517f777601007e8177537a757b7b5379555479937f75557f777b757c677601ff87635379597f75517f777601007e8177537a757b7b5379595479937f75597f777b757c675379517f75007f777601007e8177537a757b7b5379515479937f75517f777b757c68686875777777768277012079519c636e6e011879947f7578011779947f77777776011979879169012879a97888012779012979ad7567012079529c636e6e011879947f7578011779947f77777776011979876476012379a688013d790127798b0124957f750127790124957f7701267901267901267901267954795479aa7801207f75887601207f777601007e81775579607f755c7f777601007e8177567901707f7501507f775679827752790128959d5679a878885479827701209d557955797e76587955798b0128957f7555790128957f77886d6d6d6d6d687567006968686e6e011a79940124937f7578011a79947f7777777601207f75012d79aa87646f756e011b79947f7578011a79947f77777776012b79a6875479547901377901377970011c79947f7552797e78586e8b80767682778c7f75007f777777777e54795479011f79947f777e7777777776a8012d798752796476675168696d6d68013e797601687f7501447f77777601337901377901307901307901307901307958790139790139790139790139795b7901207f755b79aa885a795a79557955795579557955795c7f75587f777601007e8177567901307f75607f77567952799f695579827752790128959d5579a878885479827701209d53798277549d547954797e53797e76577959798b0128957f7559790128957f77886d6d6d6d756f757e7656798764597959795979597954795479aa7801207f75887601207f777601007e81775579607f755c7f777601007e8177567901707f7501507f775679827752790128959d5679a878885479827701209d557955797e76587955798b0128957f7555790128957f77886d6d6d6d75686d6d6d6d6d6d75706e011c79940124937f7578011b79947f77a97777547954796e6e011879947f757777a97777014079013f79013f79013f79013f79013f79013f79013f79597959795c79014a790130795c795b798b0124957f755b790124957f775679a85879885a795a795a795a7954795479aa7801207f75887601207f777601007e81775579607f755c7f777601007e8177567901707f7501507f775679827752790128959d5679a878885479827701209d557955797e76587955798b0128957f7555790128957f77886d6d6d6d7556798277567958795279012479940114937f755279012479947f7788557958795279012479947f755279012379947f7788577978012279947f7578012179947f777601007e81770120797801145893959354935979537952799454937f7553795279947f777601007e81775579529c63527900a2695a7954795379947f75547953799452795495947f776f75549593537a757b7b5279787758798b54957f75587954957f777601007e8177587a75577a577a577a577a577a577a577a7567527900a0695679789f6968780078014ba1637551677802ff00a1635277677803ffff00a1635377675577686868775279935b7955795279947f75a976012479012479012479012479012479550119797600a26976559f699451958c6b6c766b796c756b6d6d756c876476011f79011f79011f79011f79011f79550119797600a26976559f699451958c6b6c766b796c756b6d6d756c876751686959790114795a798b0124957f755a790124957f77886d6d6d6d6d6d6d6d6d6d014179011e7978012379012379210ac407f0e4bd44bfc207355a778b046225a7068fc59ee7eda43ad905aadbffc800206c266b30e6a1319c66dc401e5bd6b432ba49688eecd118297041da8074ce081001257956795679aa7676517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e01007e817757795679567956795679537956795479577995939521414136d08c5ed2bf3ba048afe6dcaebafeffffffffffffffffffffffffffffff006e6e9776009f636e936776687777777b757c6e5296a0636e7c947b757c6853798277527982775379012080517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e01205279947f77545379935279930130787e527e54797e58797e527e53797e52797e57797e777777777777777777777777765779ac7777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777", W$ = "", Cp = {
  version: D$,
  compilerVersion: L$,
  contract: F$,
  md5: H$,
  structs: U$,
  library: $$,
  alias: j$,
  abi: V$,
  stateProps: z$,
  buildType: q$,
  file: K$,
  hex: G$,
  sourceMapFile: W$
}, Z$ = 9, Y$ = "1.19.0+commit.72eaeba", X$ = "TokenTransferCheck", J$ = "e41a12f0b2a85feddce2f3f285ce332e", Q$ = [
  {
    name: "LockingScriptParts",
    params: [
      {
        name: "code",
        type: "bytes"
      },
      {
        name: "data",
        type: "bytes"
      }
    ],
    genericTypes: []
  },
  {
    name: "OpPushData",
    params: [
      {
        name: "len",
        type: "int"
      },
      {
        name: "value",
        type: "int"
      }
    ],
    genericTypes: []
  },
  {
    name: "VarIntData",
    params: [
      {
        name: "len",
        type: "int"
      },
      {
        name: "value",
        type: "int"
      }
    ],
    genericTypes: []
  },
  {
    name: "TxInputProof",
    params: [
      {
        name: "hashProof",
        type: "bytes"
      },
      {
        name: "txHash",
        type: "bytes"
      },
      {
        name: "outputIndexBytes",
        type: "bytes"
      },
      {
        name: "sequenceBytes",
        type: "bytes"
      }
    ],
    genericTypes: []
  },
  {
    name: "TxOutputProof",
    params: [
      {
        name: "txHeader",
        type: "bytes"
      },
      {
        name: "hashProof",
        type: "bytes"
      },
      {
        name: "satoshiBytes",
        type: "bytes"
      },
      {
        name: "scriptHash",
        type: "bytes"
      }
    ],
    genericTypes: []
  }
], ej = [
  {
    name: "ProtoHeader",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "AmountCheckProto",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "TokenProto",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "Backtrace",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "TxUtil",
    params: [],
    properties: [],
    genericTypes: []
  }
], tj = [], aj = [
  {
    type: "function",
    name: "unlock",
    index: 0,
    params: [
      {
        name: "txPreimage",
        type: "SigHashPreimage"
      },
      {
        name: "prevouts",
        type: "bytes"
      },
      {
        name: "tokenScript",
        type: "bytes"
      },
      {
        name: "tokenTxHeaderArray",
        type: "bytes"
      },
      {
        name: "tokenTxHashProofArray",
        type: "bytes"
      },
      {
        name: "tokenSatoshiBytesArray",
        type: "bytes"
      },
      {
        name: "inputTokenAddressArray",
        type: "bytes"
      },
      {
        name: "inputTokenAmountArray",
        type: "bytes"
      },
      {
        name: "tokenOutputSatoshis",
        type: "int"
      },
      {
        name: "changeSatoshis",
        type: "int"
      },
      {
        name: "changeAddress",
        type: "Ripemd160"
      },
      {
        name: "opReturnScript",
        type: "bytes"
      }
    ]
  },
  {
    type: "constructor",
    params: []
  }
], rj = [], fj = "debug", ij = "file:///Users/ivan/Codes/blockchain/meta-contract/src/mcp02/contract/token/tokenTransferCheck_20To3.scrypt", nj = "", oj = "", sj = {
  version: Z$,
  compilerVersion: Y$,
  contract: X$,
  md5: J$,
  structs: Q$,
  library: ej,
  alias: tj,
  abi: aj,
  stateProps: rj,
  buildType: fj,
  file: ij,
  hex: nj,
  sourceMapFile: oj
}, dj = 9, cj = "1.19.0+commit.72eaeba", uj = "TokenTransferCheck", lj = "e29cb0437578e4aa452cd835e58e6b1f", pj = [
  {
    name: "LockingScriptParts",
    params: [
      {
        name: "code",
        type: "bytes"
      },
      {
        name: "data",
        type: "bytes"
      }
    ],
    genericTypes: []
  },
  {
    name: "OpPushData",
    params: [
      {
        name: "len",
        type: "int"
      },
      {
        name: "value",
        type: "int"
      }
    ],
    genericTypes: []
  },
  {
    name: "VarIntData",
    params: [
      {
        name: "len",
        type: "int"
      },
      {
        name: "value",
        type: "int"
      }
    ],
    genericTypes: []
  },
  {
    name: "TxInputProof",
    params: [
      {
        name: "hashProof",
        type: "bytes"
      },
      {
        name: "txHash",
        type: "bytes"
      },
      {
        name: "outputIndexBytes",
        type: "bytes"
      },
      {
        name: "sequenceBytes",
        type: "bytes"
      }
    ],
    genericTypes: []
  },
  {
    name: "TxOutputProof",
    params: [
      {
        name: "txHeader",
        type: "bytes"
      },
      {
        name: "hashProof",
        type: "bytes"
      },
      {
        name: "satoshiBytes",
        type: "bytes"
      },
      {
        name: "scriptHash",
        type: "bytes"
      }
    ],
    genericTypes: []
  }
], hj = [
  {
    name: "ProtoHeader",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "AmountCheckProto",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "TokenProto",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "Backtrace",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "TxUtil",
    params: [],
    properties: [],
    genericTypes: []
  }
], bj = [], mj = [
  {
    type: "function",
    name: "unlock",
    index: 0,
    params: [
      {
        name: "txPreimage",
        type: "SigHashPreimage"
      },
      {
        name: "prevouts",
        type: "bytes"
      },
      {
        name: "tokenScript",
        type: "bytes"
      },
      {
        name: "tokenTxHeaderArray",
        type: "bytes"
      },
      {
        name: "tokenTxHashProofArray",
        type: "bytes"
      },
      {
        name: "tokenSatoshiBytesArray",
        type: "bytes"
      },
      {
        name: "inputTokenAddressArray",
        type: "bytes"
      },
      {
        name: "inputTokenAmountArray",
        type: "bytes"
      },
      {
        name: "tokenOutputSatoshis",
        type: "int"
      },
      {
        name: "changeSatoshis",
        type: "int"
      },
      {
        name: "changeAddress",
        type: "Ripemd160"
      },
      {
        name: "opReturnScript",
        type: "bytes"
      }
    ]
  },
  {
    type: "constructor",
    params: []
  }
], vj = [], yj = "debug", gj = "file:///Users/ivan/Codes/blockchain/meta-contract/src/mcp02/contract/token/tokenTransferCheck_3To100.scrypt", xj = "", _j = "", wj = {
  version: dj,
  compilerVersion: cj,
  contract: uj,
  md5: lj,
  structs: pj,
  library: hj,
  alias: bj,
  abi: mj,
  stateProps: vj,
  buildType: yj,
  file: gj,
  hex: xj,
  sourceMapFile: _j
}, Sj = 9, Ej = "1.19.0+commit.72eaeba", Tj = "TokenTransferCheck", Aj = "c333922ef492aa9d58e7365240d247b6", Ij = [
  {
    name: "LockingScriptParts",
    params: [
      {
        name: "code",
        type: "bytes"
      },
      {
        name: "data",
        type: "bytes"
      }
    ],
    genericTypes: []
  },
  {
    name: "OpPushData",
    params: [
      {
        name: "len",
        type: "int"
      },
      {
        name: "value",
        type: "int"
      }
    ],
    genericTypes: []
  },
  {
    name: "VarIntData",
    params: [
      {
        name: "len",
        type: "int"
      },
      {
        name: "value",
        type: "int"
      }
    ],
    genericTypes: []
  },
  {
    name: "TxInputProof",
    params: [
      {
        name: "hashProof",
        type: "bytes"
      },
      {
        name: "txHash",
        type: "bytes"
      },
      {
        name: "outputIndexBytes",
        type: "bytes"
      },
      {
        name: "sequenceBytes",
        type: "bytes"
      }
    ],
    genericTypes: []
  },
  {
    name: "TxOutputProof",
    params: [
      {
        name: "txHeader",
        type: "bytes"
      },
      {
        name: "hashProof",
        type: "bytes"
      },
      {
        name: "satoshiBytes",
        type: "bytes"
      },
      {
        name: "scriptHash",
        type: "bytes"
      }
    ],
    genericTypes: []
  }
], kj = [
  {
    name: "ProtoHeader",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "AmountCheckProto",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "TokenProto",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "Backtrace",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "TxUtil",
    params: [],
    properties: [],
    genericTypes: []
  }
], Oj = [], Pj = [
  {
    type: "function",
    name: "unlock",
    index: 0,
    params: [
      {
        name: "txPreimage",
        type: "SigHashPreimage"
      },
      {
        name: "prevouts",
        type: "bytes"
      },
      {
        name: "tokenScript",
        type: "bytes"
      },
      {
        name: "tokenTxHeaderArray",
        type: "bytes"
      },
      {
        name: "tokenTxHashProofArray",
        type: "bytes"
      },
      {
        name: "tokenSatoshiBytesArray",
        type: "bytes"
      },
      {
        name: "inputTokenAddressArray",
        type: "bytes"
      },
      {
        name: "inputTokenAmountArray",
        type: "bytes"
      },
      {
        name: "tokenOutputSatoshis",
        type: "int"
      },
      {
        name: "changeSatoshis",
        type: "int"
      },
      {
        name: "changeAddress",
        type: "Ripemd160"
      },
      {
        name: "opReturnScript",
        type: "bytes"
      }
    ]
  },
  {
    type: "constructor",
    params: []
  }
], Mj = [], Rj = "debug", Bj = "file:///Users/ivan/Codes/blockchain/meta-contract/src/mcp02/contract/token/tokenTransferCheck_10To10.scrypt", Nj = "", Cj = "", Dj = {
  version: Sj,
  compilerVersion: Ej,
  contract: Tj,
  md5: Aj,
  structs: Ij,
  library: kj,
  alias: Oj,
  abi: Pj,
  stateProps: Mj,
  buildType: Rj,
  file: Bj,
  hex: Nj,
  sourceMapFile: Cj
}, Lj = 9, Fj = "1.19.0+commit.72eaeba", Hj = "TokenTransferCheck", Uj = "94a0b90b08ad2905bbb5088dc94e2e8d", $j = [
  {
    name: "LockingScriptParts",
    params: [
      {
        name: "code",
        type: "bytes"
      },
      {
        name: "data",
        type: "bytes"
      }
    ],
    genericTypes: []
  },
  {
    name: "OpPushData",
    params: [
      {
        name: "len",
        type: "int"
      },
      {
        name: "value",
        type: "int"
      }
    ],
    genericTypes: []
  },
  {
    name: "VarIntData",
    params: [
      {
        name: "len",
        type: "int"
      },
      {
        name: "value",
        type: "int"
      }
    ],
    genericTypes: []
  },
  {
    name: "TxInputProof",
    params: [
      {
        name: "hashProof",
        type: "bytes"
      },
      {
        name: "txHash",
        type: "bytes"
      },
      {
        name: "outputIndexBytes",
        type: "bytes"
      },
      {
        name: "sequenceBytes",
        type: "bytes"
      }
    ],
    genericTypes: []
  },
  {
    name: "TxOutputProof",
    params: [
      {
        name: "txHeader",
        type: "bytes"
      },
      {
        name: "hashProof",
        type: "bytes"
      },
      {
        name: "satoshiBytes",
        type: "bytes"
      },
      {
        name: "scriptHash",
        type: "bytes"
      }
    ],
    genericTypes: []
  }
], jj = [
  {
    name: "ProtoHeader",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "AmountCheckProto",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "TokenProto",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "Backtrace",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "TxUtil",
    params: [],
    properties: [],
    genericTypes: []
  }
], Vj = [], zj = [
  {
    type: "function",
    name: "unlock",
    index: 0,
    params: [
      {
        name: "txPreimage",
        type: "SigHashPreimage"
      },
      {
        name: "prevouts",
        type: "bytes"
      },
      {
        name: "tokenScript",
        type: "bytes"
      },
      {
        name: "tokenTxHeaderArray",
        type: "bytes"
      },
      {
        name: "tokenTxHashProofArray",
        type: "bytes"
      },
      {
        name: "tokenSatoshiBytesArray",
        type: "bytes"
      },
      {
        name: "inputTokenAddressArray",
        type: "bytes"
      },
      {
        name: "inputTokenAmountArray",
        type: "bytes"
      },
      {
        name: "tokenOutputSatoshis",
        type: "int"
      },
      {
        name: "changeSatoshis",
        type: "int"
      },
      {
        name: "changeAddress",
        type: "Ripemd160"
      },
      {
        name: "opReturnScript",
        type: "bytes"
      }
    ]
  },
  {
    type: "constructor",
    params: []
  }
], qj = [], Kj = "debug", Gj = "file:///Users/ivan/Codes/blockchain/meta-contract/src/mcp02/contract/token/tokenTransferCheck_6To6.scrypt", Wj = "", Zj = "", Yj = {
  version: Lj,
  compilerVersion: Fj,
  contract: Hj,
  md5: Uj,
  structs: $j,
  library: jj,
  alias: Vj,
  abi: zj,
  stateProps: qj,
  buildType: Kj,
  file: Gj,
  hex: Wj,
  sourceMapFile: Zj
}, Xj = 9, Jj = "1.19.0+commit.72eaeba", Qj = "TokenTransferCheck", eV = "421557877612399eca7ad07d56c310ed", tV = [
  {
    name: "LockingScriptParts",
    params: [
      {
        name: "code",
        type: "bytes"
      },
      {
        name: "data",
        type: "bytes"
      }
    ],
    genericTypes: []
  },
  {
    name: "OpPushData",
    params: [
      {
        name: "len",
        type: "int"
      },
      {
        name: "value",
        type: "int"
      }
    ],
    genericTypes: []
  },
  {
    name: "VarIntData",
    params: [
      {
        name: "len",
        type: "int"
      },
      {
        name: "value",
        type: "int"
      }
    ],
    genericTypes: []
  },
  {
    name: "TxInputProof",
    params: [
      {
        name: "hashProof",
        type: "bytes"
      },
      {
        name: "txHash",
        type: "bytes"
      },
      {
        name: "outputIndexBytes",
        type: "bytes"
      },
      {
        name: "sequenceBytes",
        type: "bytes"
      }
    ],
    genericTypes: []
  },
  {
    name: "TxOutputProof",
    params: [
      {
        name: "txHeader",
        type: "bytes"
      },
      {
        name: "hashProof",
        type: "bytes"
      },
      {
        name: "satoshiBytes",
        type: "bytes"
      },
      {
        name: "scriptHash",
        type: "bytes"
      }
    ],
    genericTypes: []
  }
], aV = [
  {
    name: "ProtoHeader",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "AmountCheckProto",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "TokenProto",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "Backtrace",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "TxUtil",
    params: [],
    properties: [],
    genericTypes: []
  }
], rV = [], fV = [
  {
    type: "function",
    name: "unlock",
    index: 0,
    params: [
      {
        name: "txPreimage",
        type: "SigHashPreimage"
      },
      {
        name: "prevouts",
        type: "bytes"
      },
      {
        name: "tokenScript",
        type: "bytes"
      },
      {
        name: "tokenTxHeaderArray",
        type: "bytes"
      },
      {
        name: "tokenTxHashProofArray",
        type: "bytes"
      },
      {
        name: "tokenSatoshiBytesArray",
        type: "bytes"
      },
      {
        name: "inputTokenAddressArray",
        type: "bytes"
      },
      {
        name: "inputTokenAmountArray",
        type: "bytes"
      },
      {
        name: "tokenOutputSatoshis",
        type: "int"
      },
      {
        name: "changeSatoshis",
        type: "int"
      },
      {
        name: "changeAddress",
        type: "Ripemd160"
      },
      {
        name: "opReturnScript",
        type: "bytes"
      }
    ]
  },
  {
    type: "constructor",
    params: []
  }
], iV = [], nV = "debug", oV = "file:///Users/ivan/Codes/blockchain/meta-contract/src/mcp02/contract/token/tokenTransferCheck.scrypt", sV = "0176018801a901ac515301402097dfd76851bf465e8f715593b217714858bbe9570ff3bd5e33840a34e20ff0262102ba79df5f8ae7604a9830f03c7933028186aede0675a16f025dc4f8be8eec0382201008ce7480da41702918d1ec8e6849ba32b4d65b1e40dc669c31a1e6306b266c557954798501145593760124937601149376589376011493768b76011493760128937652935501149376011493765493012179aa0123797601247f75547f7777880122797601687f7700005279517f75007f7d7701fd87635379537f75517f777601007e8177537a757b7b5379535479937f75537f777b757c677601fe87635379557f75517f777601007e8177537a757b7b5379555479937f75557f777b757c677601ff87635379597f75517f777601007e8177537a757b7b5379595479937f75597f777b757c675379517f75007f777601007e8177537a757b7b5379515479937f75517f777b757c6868687577777776827701227982776f755779940114937f7552795779947f7701247952796e011279940124937f7578011179947f77a9777788012379786e5a79947f757777705879947f7553795779947f7778a98801247952796e5b79947f75785b79948c7f77016a87636e5b79948b7f75785b79947f77014c87670068636e5b799452937f75785b79948b7f777601007e81775a7952949c670068777769705779947f7553795679947f777601007e81777600a06976011495547957799478945679785379937f75787f775379589552797894537a757b7b527975587953795279937f7553797f77597954797f75547954947f777601007e81770000527953a1690053799f63012e79510124957f75000124957f77012d79510170957f75000170957f77012b79510114957f75000114957f77012b795158957f750058957f777601007e81770131795f797070011e79947f7552797e78586e8b80767682778c7f75007f777777777e54795479012179947f777e77777777013079567954937f7556797f777601007e8177013179577954935279937f75577954937f7757795453799393587a75577a577a577a577a577a577a577a5779750131795158957f750058957f775379a85779707070537960795479aa7801207f75887601207f777601007e81775579607f755c7f777601007e8177567901707f7501507f775679827752790128959d5679a878885479827701209d557955797e76587955798b0128957f7555790128957f77886d6d6d6d755e795a79935f7a755e7a5e7a5e7a5e7a5e7a5e7a5e7a5e7a5e7a5e7a5e7a5e7a5e7a5e7a6d6d6d6d6d6d75685153799f63012e79520124957f75510124957f77012d79520170957f75510170957f77012b79520114957f75510114957f77012b795258957f755158957f777601007e81770131795f797070011e79947f7552797e78586e8b80767682778c7f75007f777777777e54795479012179947f777e77777777013079567954937f7556797f777601007e8177013179577954935279937f75577954937f7757795453799393587a75577a577a577a577a577a577a577a5779750131795258957f755158957f775379a85779707070537960795479aa7801207f75887601207f777601007e81775579607f755c7f777601007e8177567901707f7501507f775679827752790128959d5679a878885479827701209d557955797e76587955798b0128957f7555790128957f77886d6d6d6d755e795a79935f7a755e7a5e7a5e7a5e7a5e7a5e7a5e7a5e7a5e7a5e7a5e7a5e7a5e7a5e7a6d6d6d6d6d6d75685253799f63012e79530124957f75520124957f77012d79530170957f75520170957f77012b79530114957f75520114957f77012b795358957f755258957f777601007e81770131795f797070011e79947f7552797e78586e8b80767682778c7f75007f777777777e54795479012179947f777e77777777013079567954937f7556797f777601007e8177013179577954935279937f75577954937f7757795453799393587a75577a577a577a577a577a577a577a5779750131795358957f755258957f775379a85779707070537960795479aa7801207f75887601207f777601007e81775579607f755c7f777601007e8177567901707f7501507f775679827752790128959d5679a878885479827701209d557955797e76587955798b0128957f7555790128957f77886d6d6d6d755e795a79935f7a755e7a5e7a5e7a5e7a5e7a5e7a5e7a5e7a5e7a5e7a5e7a5e7a5e7a5e7a6d6d6d6d6d6d756800005a7953a169005b799f635779510114957f75000114957f7756795158957f750058957f777601007e81777600a06952797893537a757b7b0131795f797070011e79947f7552797e78586e8b80767682778c7f75007f777777777e54795479012179947f777e7777777776012d797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775579787e567a757171557a6d6d68515b799f635779520114957f75510114957f7756795258957f755158957f777601007e81777600a06952797893537a757b7b0131795f797070011e79947f7552797e78586e8b80767682778c7f75007f777777777e54795479012179947f777e7777777776012d797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775579787e567a757171557a6d6d68525b799f635779530114957f75520114957f7756795358957f755258957f777601007e81777600a06952797893537a757b7b0131795f797070011e79947f7552797e78586e8b80767682778c7f75007f777777777e54795479012179947f777e7777777776012d797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775579787e567a757171557a6d6d685379789d012679827700a063012679527f75007f7702006a88012679007658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775279787e537a75777c6801287901287900527900a063780129790128797e01147e787e0129797e0127797e777654797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e777777776877775279787e537a757b7b5279aa760134797682776e58947f75780128947f77777788013379011e7978012379012379210ac407f0e4bd44bfc207355a778b046225a7068fc59ee7eda43ad905aadbffc800206c266b30e6a1319c66dc401e5bd6b432ba49688eecd118297041da8074ce081001257956795679aa7676517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e01007e817757795679567956795679537956795479577995939521414136d08c5ed2bf3ba048afe6dcaebafeffffffffffffffffffffffffffffff006e6e9776009f636e936776687777777b757c6e5296a0636e7c947b757c6853798277527982775379012080517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e01205279947f77545379935279930130787e527e54797e58797e527e53797e52797e57797e777777777777777777777777ab765779ac777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777", dV = "", cV = {
  version: Xj,
  compilerVersion: Jj,
  contract: Qj,
  md5: eV,
  structs: tV,
  library: aV,
  alias: rV,
  abi: fV,
  stateProps: iV,
  buildType: nV,
  file: oV,
  hex: sV,
  sourceMapFile: dV
};
function uV(e) {
  let t = j0(e.nSenders), a = Q.Buffer.alloc(0);
  e.receiverTokenAmountArray.forEach((s) => {
    a = Q.Buffer.concat([a, s.toBuffer({
      endian: "little",
      size: 8
    })]);
  });
  let r = Q.Buffer.alloc(0);
  e.receiverArray.map((s) => {
    r = Q.Buffer.concat([r, s.hashBuffer]);
  });
  let f = j0(e.nReceivers), i = Q.Buffer.from(e.tokenCodeHash, "hex"), n = Q.Buffer.from(e.tokenID, "hex");
  const o = Q.Buffer.concat([t, a, r, f, i, n]);
  return N1(o);
}
var Wa = /* @__PURE__ */ ((e) => (e[e.IN_3_OUT_3 = 1] = "IN_3_OUT_3", e[e.IN_6_OUT_6 = 2] = "IN_6_OUT_6", e[e.IN_10_OUT_10 = 3] = "IN_10_OUT_10", e[e.IN_20_OUT_3 = 4] = "IN_20_OUT_3", e[e.IN_3_OUT_100 = 5] = "IN_3_OUT_100", e[e.UNSUPPORT = 6] = "UNSUPPORT", e))(Wa || {});
const lV = d7.mvc.crypto.BN;
let pV = [{
  type: 1,
  in: 3,
  out: 3,
  lockingScriptSize: 0
}, {
  type: 2,
  in: 6,
  out: 6,
  lockingScriptSize: 0
}, {
  type: 3,
  in: 10,
  out: 10,
  lockingScriptSize: 0
}, {
  type: 4,
  in: 20,
  out: 3,
  lockingScriptSize: 0
}, {
  type: 5,
  in: 3,
  out: 100,
  lockingScriptSize: 0
}];
class Ec extends Da {
  constructor(t) {
    let a;
    switch (t.checkType) {
      case 1:
        a = cV;
        break;
      case 2:
        a = Yj;
        break;
      case 3:
        a = Dj;
        break;
      case 5:
        a = wj;
        break;
      case 4:
        a = sj;
        break;
      default:
        throw "invalid checkType";
    }
    let r = d7.buildContractClass(a), f = new r();
    super(f), this.constuctParams = t, this._formatedDataPart = {};
  }
  clone() {
    let t = new Ec(this.constuctParams);
    return t.setFormatedDataPart(this.getFormatedDataPart()), t;
  }
  setFormatedDataPart(t) {
    this._formatedDataPart = Object.assign({}, this._formatedDataPart, t), super.setDataPart(d7.toHex(uV(this._formatedDataPart)));
  }
  getFormatedDataPart() {
    return this._formatedDataPart;
  }
  unlock({
    txPreimage: t,
    prevouts: a,
    tokenScript: r,
    tokenTxHeaderArray: f,
    tokenTxHashProofArray: i,
    tokenSatoshiBytesArray: n,
    inputTokenAddressArray: o,
    inputTokenAmountArray: s,
    // receiverSatoshiArray,
    tokenOutputSatoshis: b,
    changeSatoshis: l,
    changeAddress: v,
    opReturnScript: m
  }) {
    return this._contract.unlock(
      t,
      a,
      r,
      // token
      f,
      i,
      n,
      o,
      s,
      // receiverSatoshiArray,
      b,
      // same
      l,
      v,
      m
    );
  }
}
class U0 {
  static getLockingScriptSize(t) {
    return this.tokenTransferTypeInfos.find((a) => a.type == t).lockingScriptSize;
  }
  static getOptimumType(t, a) {
    let r = this.tokenTransferTypeInfos.find((f) => t <= f.in && a <= f.out);
    return r ? r.type : 6;
  }
  static createContract(t) {
    return new Ec({
      checkType: t
    });
  }
  static getDummyInstance(t) {
    let a = this.tokenTransferTypeInfos.find((n) => n.type == t), r = new Array(a.in).fill(0), f = new Array(a.out).fill({
      address: Ts,
      tokenAmount: lV.Zero
    }), i = this.createContract(a.type);
    return i.setFormatedDataPart({
      nSenders: r.length,
      receiverTokenAmountArray: f.map((n) => n.tokenAmount),
      receiverArray: f.map((n) => n.address),
      nReceivers: f.length,
      tokenCodeHash: d7.toHex(Ta),
      tokenID: d7.toHex(Ta)
    }), i;
  }
  static calLockingScriptSize(t) {
    return this.getDummyInstance(t).lockingScript.toBuffer().length;
  }
  static calUnlockingScriptSize(t, a, r, f, i) {
    return 1e3;
  }
}
U0.tokenTransferTypeInfos = pV;
const hV = 9, bV = "1.19.0+commit.72eaeba", mV = "TokenUnlockContractCheck", vV = "c909a26523264d817d7d85e2a659b723", yV = [
  {
    name: "LockingScriptParts",
    params: [
      {
        name: "code",
        type: "bytes"
      },
      {
        name: "data",
        type: "bytes"
      }
    ],
    genericTypes: []
  },
  {
    name: "OpPushData",
    params: [
      {
        name: "len",
        type: "int"
      },
      {
        name: "value",
        type: "int"
      }
    ],
    genericTypes: []
  },
  {
    name: "VarIntData",
    params: [
      {
        name: "len",
        type: "int"
      },
      {
        name: "value",
        type: "int"
      }
    ],
    genericTypes: []
  },
  {
    name: "TxInputProof",
    params: [
      {
        name: "hashProof",
        type: "bytes"
      },
      {
        name: "txHash",
        type: "bytes"
      },
      {
        name: "outputIndexBytes",
        type: "bytes"
      },
      {
        name: "sequenceBytes",
        type: "bytes"
      }
    ],
    genericTypes: []
  },
  {
    name: "TxOutputProof",
    params: [
      {
        name: "txHeader",
        type: "bytes"
      },
      {
        name: "hashProof",
        type: "bytes"
      },
      {
        name: "satoshiBytes",
        type: "bytes"
      },
      {
        name: "scriptHash",
        type: "bytes"
      }
    ],
    genericTypes: []
  }
], gV = [
  {
    name: "ProtoHeader",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "AmountCheckProto",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "TokenProto",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "Backtrace",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "TxUtil",
    params: [],
    properties: [],
    genericTypes: []
  }
], xV = [], _V = [
  {
    type: "function",
    name: "unlock",
    index: 0,
    params: [
      {
        name: "txPreimage",
        type: "SigHashPreimage"
      },
      {
        name: "prevouts",
        type: "bytes"
      },
      {
        name: "tokenScript",
        type: "bytes"
      },
      {
        name: "tokenTxHeaderArray",
        type: "bytes"
      },
      {
        name: "tokenTxHashProofArray",
        type: "bytes"
      },
      {
        name: "tokenSatoshiBytesArray",
        type: "bytes"
      },
      {
        name: "inputTokenAddressArray",
        type: "bytes"
      },
      {
        name: "inputTokenAmountArray",
        type: "bytes"
      },
      {
        name: "nOutputs",
        type: "int"
      },
      {
        name: "tokenOutputIndexArray",
        type: "bytes"
      },
      {
        name: "tokenOutputSatoshis",
        type: "int"
      },
      {
        name: "otherOutputArray",
        type: "bytes"
      }
    ]
  },
  {
    type: "constructor",
    params: []
  }
], wV = [], SV = "debug", EV = "file:///Users/ivan/Codes/blockchain/meta-contract/src/mcp02/contract/token/tokenUnlockContractCheck_20To5.scrypt", TV = "", AV = "", IV = {
  version: hV,
  compilerVersion: bV,
  contract: mV,
  md5: vV,
  structs: yV,
  library: gV,
  alias: xV,
  abi: _V,
  stateProps: wV,
  buildType: SV,
  file: EV,
  hex: TV,
  sourceMapFile: AV
}, kV = 9, OV = "1.19.0+commit.72eaeba", PV = "TokenUnlockContractCheck", MV = "4abc2f94608199c863e526aa6c09a093", RV = [
  {
    name: "LockingScriptParts",
    params: [
      {
        name: "code",
        type: "bytes"
      },
      {
        name: "data",
        type: "bytes"
      }
    ],
    genericTypes: []
  },
  {
    name: "OpPushData",
    params: [
      {
        name: "len",
        type: "int"
      },
      {
        name: "value",
        type: "int"
      }
    ],
    genericTypes: []
  },
  {
    name: "VarIntData",
    params: [
      {
        name: "len",
        type: "int"
      },
      {
        name: "value",
        type: "int"
      }
    ],
    genericTypes: []
  },
  {
    name: "TxInputProof",
    params: [
      {
        name: "hashProof",
        type: "bytes"
      },
      {
        name: "txHash",
        type: "bytes"
      },
      {
        name: "outputIndexBytes",
        type: "bytes"
      },
      {
        name: "sequenceBytes",
        type: "bytes"
      }
    ],
    genericTypes: []
  },
  {
    name: "TxOutputProof",
    params: [
      {
        name: "txHeader",
        type: "bytes"
      },
      {
        name: "hashProof",
        type: "bytes"
      },
      {
        name: "satoshiBytes",
        type: "bytes"
      },
      {
        name: "scriptHash",
        type: "bytes"
      }
    ],
    genericTypes: []
  }
], BV = [
  {
    name: "ProtoHeader",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "AmountCheckProto",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "TokenProto",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "Backtrace",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "TxUtil",
    params: [],
    properties: [],
    genericTypes: []
  }
], NV = [], CV = [
  {
    type: "function",
    name: "unlock",
    index: 0,
    params: [
      {
        name: "txPreimage",
        type: "SigHashPreimage"
      },
      {
        name: "prevouts",
        type: "bytes"
      },
      {
        name: "tokenScript",
        type: "bytes"
      },
      {
        name: "tokenTxHeaderArray",
        type: "bytes"
      },
      {
        name: "tokenTxHashProofArray",
        type: "bytes"
      },
      {
        name: "tokenSatoshiBytesArray",
        type: "bytes"
      },
      {
        name: "inputTokenAddressArray",
        type: "bytes"
      },
      {
        name: "inputTokenAmountArray",
        type: "bytes"
      },
      {
        name: "nOutputs",
        type: "int"
      },
      {
        name: "tokenOutputIndexArray",
        type: "bytes"
      },
      {
        name: "tokenOutputSatoshis",
        type: "int"
      },
      {
        name: "otherOutputArray",
        type: "bytes"
      }
    ]
  },
  {
    type: "constructor",
    params: []
  }
], DV = [], LV = "debug", FV = "file:///Users/ivan/Codes/blockchain/meta-contract/src/mcp02/contract/token/tokenUnlockContractCheck_3To100.scrypt", HV = "515301402097dfd76851bf465e8f715593b217714858bbe9570ff3bd5e33840a34e20ff0262102ba79df5f8ae7604a9830f03c7933028186aede0675a16f025dc4f8be8eec0382201008ce7480da41702918d1ec8e6849ba32b4d65b1e40dc669c31a1e6306b266c557954798501145593140000000000000000000000000000000000000000780124937601149376589376011493768b76011493760128937652935501149376011493765493011e79aa0120797601247f75547f777788011f797601687f7700005279517f75007f7d7701fd87635379537f75517f777601007e8177537a757b7b5379535479937f75537f777b757c677601fe87635379557f75517f777601007e8177537a757b7b5379555479937f75557f777b757c677601ff87635379597f75517f777601007e8177537a757b7b5379595479937f75597f777b757c675379517f75007f777601007e8177537a757b7b5379515479937f75517f777b757c68686875777777768277011f798277012079786e011179940124937f75786079947f77a97777705879940114937f7553795879947f77788801217952796e5b79947f757777547954795979947f7554795879947f7778a98801227953796e5c79947f75785c79948c7f77016a87636e5c79948b7f75785c79947f77014c87670068636e5c799452937f75785c79948b7f777601007e81775b7952949c670068777769547954795879947f7554795779947f777601007e81777600a26976011495557958799478945779785379937f75787f775379589552797894537a757b7b527975597953795279937f7553797f775a7954797f75547954947f777601007e817754795494557a75547a547a547a547a5479755b7955797f75557954537995947f77510000547953a1694f000057799f6355795154957f750054957f777601007e81775279789f6976537a757b7b013179788b0124957f75780124957f77013079510170957f75000170957f77012e79510114957f75000114957f7d77012279876400597a75587a587a587a587a587a587a587a587a6751587a75577a577a577a577a577a577a577a68012e795158957f750058957f777601007e81770134790115797070012479947f7552797e78586e8b80767682778c7f75007f777777777e54795479012779947f777e77777777013379577954937f7557797f777601007e8177013479587954935279937f75587954937f7758795453799393597a75587a587a587a587a587a587a587a587a5879750134795158957f750058957f775379a85779707070537960795479aa7801207f75887601207f777601007e81775579607f755c7f777601007e8177567901707f7501507f775679827752790128959d5679a878885479827701209d557955797e76587955798b0128957f7555790128957f77886d6d6d6d7560795a799301117a75607a607a607a607a607a607a607a607a607a607a607a607a607a607a607a607a6d6d6d6d6d6d6d685157799f6355795254957f755154957f777601007e81775279789f6976537a757b7b013179788b0124957f75780124957f77013079520170957f75510170957f77012e79520114957f75510114957f7d77012279876400597a75587a587a587a587a587a587a587a587a6751587a75577a577a577a577a577a577a577a68012e795258957f755158957f777601007e81770134790115797070012479947f7552797e78586e8b80767682778c7f75007f777777777e54795479012779947f777e77777777013379577954937f7557797f777601007e8177013479587954935279937f75587954937f7758795453799393597a75587a587a587a587a587a587a587a587a5879750134795258957f755158957f775379a85779707070537960795479aa7801207f75887601207f777601007e81775579607f755c7f777601007e8177567901707f7501507f775679827752790128959d5679a878885479827701209d557955797e76587955798b0128957f7555790128957f77886d6d6d6d7560795a799301117a75607a607a607a607a607a607a607a607a607a607a607a607a607a607a607a607a6d6d6d6d6d6d6d685257799f6355795354957f755254957f777601007e81775279789f6976537a757b7b013179788b0124957f75780124957f77013079530170957f75520170957f77012e79530114957f75520114957f7d77012279876400597a75587a587a587a587a587a587a587a587a6751587a75577a577a577a577a577a577a577a68012e795358957f755258957f777601007e81770134790115797070012479947f7552797e78586e8b80767682778c7f75007f777777777e54795479012779947f777e77777777013379577954937f7557797f777601007e8177013479587954935279937f75587954937f7758795453799393597a75587a587a587a587a587a587a587a587a5879750134795358957f755258957f775379a85779707070537960795479aa7801207f75887601207f777601007e81775579607f755c7f777601007e8177567901707f7501507f775679827752790128959d5679a878885479827701209d557955797e76587955798b0128957f7555790128957f77886d6d6d6d7560795a799301117a75607a607a607a607a607a607a607a607a607a607a607a607a607a607a607a607a6d6d6d6d6d6d6d6800000000012d798b01117900a063012d79547f75007f777601007e817777684f012f790164a169000130799f630052799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d756868510130799f635152799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d756868520130799f635252799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d756868530130799f635352799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d756868540130799f635452799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d756868550130799f635552799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d756868560130799f635652799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d756868570130799f635752799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d756868580130799f635852799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d756868590130799f635952799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d7568685a0130799f635a52799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d7568685b0130799f635b52799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d7568685c0130799f635c52799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d7568685d0130799f635d52799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d7568685e0130799f635e52799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d7568685f0130799f635f52799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d756868600130799f636052799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d75686801110130799f63011152799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d75686801120130799f63011252799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d75686801130130799f63011352799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d75686801140130799f63011452799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d75686801150130799f63011552799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d75686801160130799f63011652799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d75686801170130799f63011752799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d75686801180130799f63011852799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d75686801190130799f63011952799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d756868011a0130799f63011a52799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d756868011b0130799f63011b52799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d756868011c0130799f63011c52799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d756868011d0130799f63011d52799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d756868011e0130799f63011e52799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d756868011f0130799f63011f52799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d75686801200130799f63012052799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d75686801210130799f63012152799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d75686801220130799f63012252799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d75686801230130799f63012352799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d75686801240130799f63012452799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d75686801250130799f63012552799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d75686801260130799f63012652799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d75686801270130799f63012752799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d75686801280130799f63012852799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d75686801290130799f63012952799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d756868012a0130799f63012a52799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d756868012b0130799f63012b52799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d756868012c0130799f63012c52799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d756868012d0130799f63012d52799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d756868012e0130799f63012e52799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d756868012f0130799f63012f52799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d75686801300130799f63013052799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d75686801310130799f63013152799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d75686801320130799f63013252799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d75686801330130799f63013352799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d75686801340130799f63013452799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d75686801350130799f63013552799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d75686801360130799f63013652799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d75686801370130799f63013752799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d75686801380130799f63013852799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d75686801390130799f63013952799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d756868013a0130799f63013a52799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d756868013b0130799f63013b52799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d756868013c0130799f63013c52799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d756868013d0130799f63013d52799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d756868013e0130799f63013e52799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d756868013f0130799f63013f52799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d75686801400130799f63014052799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d75686801410130799f63014152799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d75686801420130799f63014252799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d75686801430130799f63014352799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d75686801440130799f63014452799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d75686801450130799f63014552799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d75686801460130799f63014652799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d75686801470130799f63014752799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d75686801480130799f63014852799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d75686801490130799f63014952799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d756868014a0130799f63014a52799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d756868014b0130799f63014b52799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d756868014c0130799f63014c52799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d756868014d0130799f63014d52799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d756868014e0130799f63014e52799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d756868014f0130799f63014f52799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d75686801500130799f63015052799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d75686801510130799f63015152799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d75686801520130799f63015252799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d75686801530130799f63015352799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d75686801540130799f63015452799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d75686801550130799f63015552799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d75686801560130799f63015652799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d75686801570130799f63015752799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d75686801580130799f63015852799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d75686801590130799f63015952799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d756868015a0130799f63015a52799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d756868015b0130799f63015b52799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d756868015c0130799f63015c52799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d756868015d0130799f63015d52799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d756868015e0130799f63015e52799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d756868015f0130799f63015f52799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d75686801600130799f63016052799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d75686801610130799f63016152799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d75686801620130799f63016252799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d75686801630130799f63016352799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d7568685a79635479009d6759790088587955799d685579aa760139797682776e58947f75780128947f7777778801387901277978012c79012c79210ac407f0e4bd44bfc207355a778b046225a7068fc59ee7eda43ad905aadbffc800206c266b30e6a1319c66dc401e5bd6b432ba49688eecd118297041da8074ce0810012e7956795679aa7676517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e01007e817757795679567956795679537956795479577995939521414136d08c5ed2bf3ba048afe6dcaebafeffffffffffffffffffffffffffffff006e6e9776009f636e936776687777777b757c6e5296a0636e7c947b757c6853798277527982775379012080517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e01205279947f77545379935279930130787e527e54797e58797e527e53797e52797e57797e777777777777777777777777ab765779ac7777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777", UV = "", $V = {
  version: kV,
  compilerVersion: OV,
  contract: PV,
  md5: MV,
  structs: RV,
  library: BV,
  alias: NV,
  abi: CV,
  stateProps: DV,
  buildType: LV,
  file: FV,
  hex: HV,
  sourceMapFile: UV
}, jV = 9, VV = "1.19.0+commit.72eaeba", zV = "TokenUnlockContractCheck", qV = "51295fc0edbdae6f59da06e2fe9626c2", KV = [
  {
    name: "LockingScriptParts",
    params: [
      {
        name: "code",
        type: "bytes"
      },
      {
        name: "data",
        type: "bytes"
      }
    ],
    genericTypes: []
  },
  {
    name: "OpPushData",
    params: [
      {
        name: "len",
        type: "int"
      },
      {
        name: "value",
        type: "int"
      }
    ],
    genericTypes: []
  },
  {
    name: "VarIntData",
    params: [
      {
        name: "len",
        type: "int"
      },
      {
        name: "value",
        type: "int"
      }
    ],
    genericTypes: []
  },
  {
    name: "TxInputProof",
    params: [
      {
        name: "hashProof",
        type: "bytes"
      },
      {
        name: "txHash",
        type: "bytes"
      },
      {
        name: "outputIndexBytes",
        type: "bytes"
      },
      {
        name: "sequenceBytes",
        type: "bytes"
      }
    ],
    genericTypes: []
  },
  {
    name: "TxOutputProof",
    params: [
      {
        name: "txHeader",
        type: "bytes"
      },
      {
        name: "hashProof",
        type: "bytes"
      },
      {
        name: "satoshiBytes",
        type: "bytes"
      },
      {
        name: "scriptHash",
        type: "bytes"
      }
    ],
    genericTypes: []
  }
], GV = [
  {
    name: "ProtoHeader",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "AmountCheckProto",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "TokenProto",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "Backtrace",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "TxUtil",
    params: [],
    properties: [],
    genericTypes: []
  }
], WV = [], ZV = [
  {
    type: "function",
    name: "unlock",
    index: 0,
    params: [
      {
        name: "txPreimage",
        type: "SigHashPreimage"
      },
      {
        name: "prevouts",
        type: "bytes"
      },
      {
        name: "tokenScript",
        type: "bytes"
      },
      {
        name: "tokenTxHeaderArray",
        type: "bytes"
      },
      {
        name: "tokenTxHashProofArray",
        type: "bytes"
      },
      {
        name: "tokenSatoshiBytesArray",
        type: "bytes"
      },
      {
        name: "inputTokenAddressArray",
        type: "bytes"
      },
      {
        name: "inputTokenAmountArray",
        type: "bytes"
      },
      {
        name: "nOutputs",
        type: "int"
      },
      {
        name: "tokenOutputIndexArray",
        type: "bytes"
      },
      {
        name: "tokenOutputSatoshis",
        type: "int"
      },
      {
        name: "otherOutputArray",
        type: "bytes"
      }
    ]
  },
  {
    type: "constructor",
    params: []
  }
], YV = [], XV = "debug", JV = "file:///Users/ivan/Codes/blockchain/meta-contract/src/mcp02/contract/token/tokenUnlockContractCheck_8To12.scrypt", QV = "", ez = "", tz = {
  version: jV,
  compilerVersion: VV,
  contract: zV,
  md5: qV,
  structs: KV,
  library: GV,
  alias: WV,
  abi: ZV,
  stateProps: YV,
  buildType: XV,
  file: JV,
  hex: QV,
  sourceMapFile: ez
}, az = 9, rz = "1.19.0+commit.72eaeba", fz = "TokenUnlockContractCheck", iz = "7d598946ea321178d731170b8d2e2481", nz = [
  {
    name: "LockingScriptParts",
    params: [
      {
        name: "code",
        type: "bytes"
      },
      {
        name: "data",
        type: "bytes"
      }
    ],
    genericTypes: []
  },
  {
    name: "OpPushData",
    params: [
      {
        name: "len",
        type: "int"
      },
      {
        name: "value",
        type: "int"
      }
    ],
    genericTypes: []
  },
  {
    name: "VarIntData",
    params: [
      {
        name: "len",
        type: "int"
      },
      {
        name: "value",
        type: "int"
      }
    ],
    genericTypes: []
  },
  {
    name: "TxInputProof",
    params: [
      {
        name: "hashProof",
        type: "bytes"
      },
      {
        name: "txHash",
        type: "bytes"
      },
      {
        name: "outputIndexBytes",
        type: "bytes"
      },
      {
        name: "sequenceBytes",
        type: "bytes"
      }
    ],
    genericTypes: []
  },
  {
    name: "TxOutputProof",
    params: [
      {
        name: "txHeader",
        type: "bytes"
      },
      {
        name: "hashProof",
        type: "bytes"
      },
      {
        name: "satoshiBytes",
        type: "bytes"
      },
      {
        name: "scriptHash",
        type: "bytes"
      }
    ],
    genericTypes: []
  }
], oz = [
  {
    name: "ProtoHeader",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "AmountCheckProto",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "TokenProto",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "Backtrace",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "TxUtil",
    params: [],
    properties: [],
    genericTypes: []
  }
], sz = [], dz = [
  {
    type: "function",
    name: "unlock",
    index: 0,
    params: [
      {
        name: "txPreimage",
        type: "SigHashPreimage"
      },
      {
        name: "prevouts",
        type: "bytes"
      },
      {
        name: "tokenScript",
        type: "bytes"
      },
      {
        name: "tokenTxHeaderArray",
        type: "bytes"
      },
      {
        name: "tokenTxHashProofArray",
        type: "bytes"
      },
      {
        name: "tokenSatoshiBytesArray",
        type: "bytes"
      },
      {
        name: "inputTokenAddressArray",
        type: "bytes"
      },
      {
        name: "inputTokenAmountArray",
        type: "bytes"
      },
      {
        name: "nOutputs",
        type: "int"
      },
      {
        name: "tokenOutputIndexArray",
        type: "bytes"
      },
      {
        name: "tokenOutputSatoshis",
        type: "int"
      },
      {
        name: "otherOutputArray",
        type: "bytes"
      }
    ]
  },
  {
    type: "constructor",
    params: []
  }
], cz = [], uz = "debug", lz = "file:///Users/ivan/Codes/blockchain/meta-contract/src/mcp02/contract/token/tokenUnlockContractCheck_4To8.scrypt", pz = "515301402097dfd76851bf465e8f715593b217714858bbe9570ff3bd5e33840a34e20ff0262102ba79df5f8ae7604a9830f03c7933028186aede0675a16f025dc4f8be8eec0382201008ce7480da41702918d1ec8e6849ba32b4d65b1e40dc669c31a1e6306b266c557954798501145593140000000000000000000000000000000000000000780124937601149376589376011493768b76011493760128937652935501149376011493765493011e79aa0120797601247f75547f777788011f797601687f7700005279517f75007f7d7701fd87635379537f75517f777601007e8177537a757b7b5379535479937f75537f777b757c677601fe87635379557f75517f777601007e8177537a757b7b5379555479937f75557f777b757c677601ff87635379597f75517f777601007e8177537a757b7b5379595479937f75597f777b757c675379517f75007f777601007e8177537a757b7b5379515479937f75517f777b757c68686875777777768277011f798277012079786e011179940124937f75786079947f77a97777705879940114937f7553795879947f77788801217952796e5b79947f757777547954795979947f7554795879947f7778a98801227953796e5c79947f75785c79948c7f77016a87636e5c79948b7f75785c79947f77014c87670068636e5c799452937f75785c79948b7f777601007e81775b7952949c670068777769547954795879947f7554795779947f777601007e81777600a26976011495557958799478945779785379937f75787f775379589552797894537a757b7b527975597953795279937f7553797f775a7954797f75547954947f777601007e817754795494557a75547a547a547a547a5479755b7955797f75557954537995947f77510000547954a1694f000057799f6355795154957f750054957f777601007e81775279789f6976537a757b7b013179788b0124957f75780124957f77013079510170957f75000170957f77012e79510114957f75000114957f7d77012279876400597a75587a587a587a587a587a587a587a587a6751587a75577a577a577a577a577a577a577a68012e795158957f750058957f777601007e81770134790115797070012479947f7552797e78586e8b80767682778c7f75007f777777777e54795479012779947f777e77777777013379577954937f7557797f777601007e8177013479587954935279937f75587954937f7758795453799393597a75587a587a587a587a587a587a587a587a5879750134795158957f750058957f775379a85779707070537960795479aa7801207f75887601207f777601007e81775579607f755c7f777601007e8177567901707f7501507f775679827752790128959d5679a878885479827701209d557955797e76587955798b0128957f7555790128957f77886d6d6d6d7560795a799301117a75607a607a607a607a607a607a607a607a607a607a607a607a607a607a607a607a6d6d6d6d6d6d6d685157799f6355795254957f755154957f777601007e81775279789f6976537a757b7b013179788b0124957f75780124957f77013079520170957f75510170957f77012e79520114957f75510114957f7d77012279876400597a75587a587a587a587a587a587a587a587a6751587a75577a577a577a577a577a577a577a68012e795258957f755158957f777601007e81770134790115797070012479947f7552797e78586e8b80767682778c7f75007f777777777e54795479012779947f777e77777777013379577954937f7557797f777601007e8177013479587954935279937f75587954937f7758795453799393597a75587a587a587a587a587a587a587a587a5879750134795258957f755158957f775379a85779707070537960795479aa7801207f75887601207f777601007e81775579607f755c7f777601007e8177567901707f7501507f775679827752790128959d5679a878885479827701209d557955797e76587955798b0128957f7555790128957f77886d6d6d6d7560795a799301117a75607a607a607a607a607a607a607a607a607a607a607a607a607a607a607a607a6d6d6d6d6d6d6d685257799f6355795354957f755254957f777601007e81775279789f6976537a757b7b013179788b0124957f75780124957f77013079530170957f75520170957f77012e79530114957f75520114957f7d77012279876400597a75587a587a587a587a587a587a587a587a6751587a75577a577a577a577a577a577a577a68012e795358957f755258957f777601007e81770134790115797070012479947f7552797e78586e8b80767682778c7f75007f777777777e54795479012779947f777e77777777013379577954937f7557797f777601007e8177013479587954935279937f75587954937f7758795453799393597a75587a587a587a587a587a587a587a587a5879750134795358957f755258957f775379a85779707070537960795479aa7801207f75887601207f777601007e81775579607f755c7f777601007e8177567901707f7501507f775679827752790128959d5679a878885479827701209d557955797e76587955798b0128957f7555790128957f77886d6d6d6d7560795a799301117a75607a607a607a607a607a607a607a607a607a607a607a607a607a607a607a607a6d6d6d6d6d6d6d685357799f635579538b54957f755354957f777601007e81775279789f6976537a757b7b013179788b0124957f75780124957f77013079538b0170957f75530170957f77012e79538b0114957f75530114957f7d77012279876400597a75587a587a587a587a587a587a587a587a6751587a75577a577a577a577a577a577a577a68012e79538b58957f755358957f777601007e81770134790115797070012479947f7552797e78586e8b80767682778c7f75007f777777777e54795479012779947f777e77777777013379577954937f7557797f777601007e8177013479587954935279937f75587954937f7758795453799393597a75587a587a587a587a587a587a587a587a587975013479538b58957f755358957f775379a85779707070537960795479aa7801207f75887601207f777601007e81775579607f755c7f777601007e8177567901707f7501507f775679827752790128959d5679a878885479827701209d557955797e76587955798b0128957f7555790128957f77886d6d6d6d7560795a799301117a75607a607a607a607a607a607a607a607a607a607a607a607a607a607a607a607a6d6d6d6d6d6d6d6800000000012d798b01117900a063012d79547f75007f777601007e817777684f012f7958a169000130799f630052799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d756868510130799f635152799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d756868520130799f635252799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d756868530130799f635352799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d756868540130799f635452799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d756868550130799f635552799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d756868560130799f635652799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d756868570130799f635752799c636e7c9f695f7954798b0114957f7554790114957f775e7955798b58957f75557958957f777601007e81777600a06956797893577a75567a567a567a567a567a567a5679750137790118797070012779947f7552797e78586e8b80767682778c7f75007f777777777e54795479012a79947f777e77777777760131797658805279768277007802fd009f6378516e8b80767682778c7f75007f77777777776778030000019f6301fd5279526e8b80767682778c7f75007f777777777e7767780500000000019f6301fe5279546e8b80767682778c7f75007f777777777e776778090000000000000000019f6301ff5279586e8b80767682778c7f75007f777777777e77686868687653797e7777777e77775979787e5a7a75597a597a597a597a597a597a597a597a597a59797557798b587a75577a577a577a577a577a577a577a57797557790117799f635579557a75547a547a547a547a01327958798b54957f75587954957f777601007e8177567a757171557a686d6d67012c79537954937f7553797f777601007e8177012d79547954935279937f75547954937f7d770118790118795279587f7d77517f757601007e81770000527902fd009f635153799377775167527902fd009c63535479537f75517f777601007e8177937b757c537767527902fe009c63555479557f75517f777601007e8177937b757c557767006968686856798277527958939d5679585279937f7756797882779c637657796e013079940124937f7578012f79947f77a977775679879169686d6d6d6d5779787e587a75577a577a577a577a577a577a577a57797554795453799393557a75547a547a547a547a54796d7568685a79635479009d6759790088587955799d685579aa760139797682776e58947f75780128947f7777778801387901277978012c79012c79210ac407f0e4bd44bfc207355a778b046225a7068fc59ee7eda43ad905aadbffc800206c266b30e6a1319c66dc401e5bd6b432ba49688eecd118297041da8074ce0810012e7956795679aa7676517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e01007e817757795679567956795679537956795479577995939521414136d08c5ed2bf3ba048afe6dcaebafeffffffffffffffffffffffffffffff006e6e9776009f636e936776687777777b757c6e5296a0636e7c947b757c6853798277527982775379012080517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f517f7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e7c7e01205279947f77545379935279930130787e527e54797e58797e527e53797e52797e57797e777777777777777777777777ab765779ac7777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777", hz = "", bz = {
  version: az,
  compilerVersion: rz,
  contract: fz,
  md5: iz,
  structs: nz,
  library: oz,
  alias: sz,
  abi: dz,
  stateProps: cz,
  buildType: uz,
  file: lz,
  hex: pz,
  sourceMapFile: hz
}, mz = 9, vz = "1.19.0+commit.72eaeba", yz = "TokenUnlockContractCheck", gz = "6870f1fecb67418511172ef8f9a27cce", xz = [
  {
    name: "LockingScriptParts",
    params: [
      {
        name: "code",
        type: "bytes"
      },
      {
        name: "data",
        type: "bytes"
      }
    ],
    genericTypes: []
  },
  {
    name: "OpPushData",
    params: [
      {
        name: "len",
        type: "int"
      },
      {
        name: "value",
        type: "int"
      }
    ],
    genericTypes: []
  },
  {
    name: "VarIntData",
    params: [
      {
        name: "len",
        type: "int"
      },
      {
        name: "value",
        type: "int"
      }
    ],
    genericTypes: []
  },
  {
    name: "TxInputProof",
    params: [
      {
        name: "hashProof",
        type: "bytes"
      },
      {
        name: "txHash",
        type: "bytes"
      },
      {
        name: "outputIndexBytes",
        type: "bytes"
      },
      {
        name: "sequenceBytes",
        type: "bytes"
      }
    ],
    genericTypes: []
  },
  {
    name: "TxOutputProof",
    params: [
      {
        name: "txHeader",
        type: "bytes"
      },
      {
        name: "hashProof",
        type: "bytes"
      },
      {
        name: "satoshiBytes",
        type: "bytes"
      },
      {
        name: "scriptHash",
        type: "bytes"
      }
    ],
    genericTypes: []
  }
], _z = [
  {
    name: "ProtoHeader",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "AmountCheckProto",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "TokenProto",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "Backtrace",
    params: [],
    properties: [],
    genericTypes: []
  },
  {
    name: "TxUtil",
    params: [],
    properties: [],
    genericTypes: []
  }
], wz = [], Sz = [
  {
    type: "function",
    name: "unlock",
    index: 0,
    params: [
      {
        name: "txPreimage",
        type: "SigHashPreimage"
      },
      {
        name: "prevouts",
        type: "bytes"
      },
      {
        name: "tokenScript",
        type: "bytes"
      },
      {
        name: "tokenTxHeaderArray",
        type: "bytes"
      },
      {
        name: "tokenTxHashProofArray",
        type: "bytes"
      },
      {
        name: "tokenSatoshiBytesArray",
        type: "bytes"
      },
      {
        name: "inputTokenAddressArray",
        type: "bytes"
      },
      {
        name: "inputTokenAmountArray",
        type: "bytes"
      },
      {
        name: "nOutputs",
        type: "int"
      },
      {
        name: "tokenOutputIndexArray",
        type: "bytes"
      },
      {
        name: "tokenOutputSatoshis",
        type: "int"
      },
      {
        name: "otherOutputArray",
        type: "bytes"
      }
    ]
  },
  {
    type: "constructor",
    params: []
  }
], Ez = [], Tz = "debug", Az = "file:///Users/ivan/Codes/blockchain/meta-contract/src/mcp02/contract/token/tokenUnlockContractCheck.scrypt", Iz = "", kz = "", Oz = {
  version: mz,
  compilerVersion: vz,
  contract: yz,
  md5: gz,
  structs: xz,
  library: _z,
  alias: wz,
  abi: Sz,
  stateProps: Ez,
  buildType: Tz,
  file: Az,
  hex: Iz,
  sourceMapFile: kz
};
function Pz(e) {
  let t = Q.Buffer.alloc(0);
  e.inputTokenIndexArray.forEach((s) => {
    t = Q.Buffer.concat([t, j0(s)]);
  });
  let a = Q.Buffer.alloc(0);
  e.receiverArray.map((s) => {
    a = Q.Buffer.concat([a, s.hashBuffer]);
  });
  let r = j0(e.nSender), f = j0(e.nReceivers), i = Q.Buffer.from(e.tokenCodeHash, "hex"), n = Q.Buffer.from(e.tokenID, "hex");
  const o = Q.Buffer.concat([t, r, a, f, i, n]);
  return N1(o);
}
var Za = /* @__PURE__ */ ((e) => (e[e.IN_2_OUT_5 = 1] = "IN_2_OUT_5", e[e.IN_4_OUT_8 = 2] = "IN_4_OUT_8", e[e.IN_8_OUT_12 = 3] = "IN_8_OUT_12", e[e.IN_3_OUT_100 = 4] = "IN_3_OUT_100", e[e.IN_20_OUT_5 = 5] = "IN_20_OUT_5", e[e.UNSUPPORT = 6] = "UNSUPPORT", e))(Za || {});
const Mz = [{
  type: 1,
  in: 2,
  out: 5,
  lockingScriptSize: 0
}, {
  type: 2,
  in: 4,
  out: 8,
  lockingScriptSize: 0
}, {
  type: 4,
  in: 3,
  out: 100,
  lockingScriptSize: 0
}, {
  type: 3,
  in: 8,
  out: 12,
  lockingScriptSize: 0
}, {
  type: 5,
  in: 20,
  out: 5,
  lockingScriptSize: 0
}];
class Tc extends Da {
  constructor(t) {
    let a;
    switch (t.unlockType) {
      case 1:
        a = Oz;
        break;
      case 2:
        a = bz;
        break;
      case 3:
        a = tz;
        break;
      case 4:
        a = $V;
        break;
      case 5:
        a = IV;
        break;
      default:
        throw "invalid unlockType";
    }
    let r = d7.buildContractClass(a), f = new r();
    super(f), this.constuctParams = t, this._formatedDataPart = {};
  }
  clone() {
    let t = new Tc(this.constuctParams);
    return t.setFormatedDataPart(this.getFormatedDataPart()), t;
  }
  setFormatedDataPart(t) {
    this._formatedDataPart = Object.assign({}, this._formatedDataPart, t), super.setDataPart(d7.toHex(Pz(this._formatedDataPart)));
  }
  getFormatedDataPart() {
    return this._formatedDataPart;
  }
  unlock({
    txPreimage: t,
    prevouts: a,
    tokenScript: r,
    tokenTxHeaderArray: f,
    tokenTxHashProofArray: i,
    tokenSatoshiBytesArray: n,
    inputTokenAddressArray: o,
    inputTokenAmountArray: s,
    nOutputs: b,
    tokenOutputIndexArray: l,
    tokenOutputSatoshis: v,
    otherOutputArray: m
  }) {
    return this._contract.unlock(t, a, r, f, i, n, o, s, b, l, v, m);
  }
}
class P5 {
  static getOptimumType(t, a) {
    return t <= 2 && a <= 5 ? 1 : t <= 4 && a <= 8 ? 2 : t <= 8 && a <= 12 ? 3 : t <= 20 && a <= 5 ? 5 : t <= 3 && a <= 100 ? 4 : 6;
  }
  static createContract(t) {
    return new Tc({
      unlockType: t
    });
  }
  static getLockingScriptSize(t) {
    return this.tokenUnlockTypeInfos.find((a) => a.type == t).lockingScriptSize;
  }
  static calUnlockingScriptSize(t, a, r, f, i) {
    return 1e3;
  }
  static getDummyInstance(t) {
    let a = this.tokenUnlockTypeInfos.find((i) => i.type == t), r = new Array(a.in).fill(0), f = this.createContract(a.type);
    return f.setFormatedDataPart({
      inputTokenIndexArray: r,
      tokenCodeHash: d7.toHex(Ta),
      tokenID: d7.toHex(Ta),
      receiverTokenAmountArray: [],
      receiverArray: [],
      nReceivers: 0,
      nSender: r.length
    }), f;
  }
}
P5.tokenUnlockTypeInfos = Mz;
function Rz() {
  return [U0.createContract(Wa.IN_3_OUT_3), U0.createContract(Wa.IN_6_OUT_6), U0.createContract(Wa.IN_10_OUT_10), U0.createContract(Wa.IN_20_OUT_3), U0.createContract(Wa.IN_3_OUT_100)].map((t) => t.getCodeHash());
}
function Bz() {
  return [P5.createContract(Za.IN_2_OUT_5), P5.createContract(Za.IN_4_OUT_8), P5.createContract(Za.IN_8_OUT_12), P5.createContract(Za.IN_20_OUT_5), P5.createContract(Za.IN_3_OUT_100)].map((t) => t.getCodeHash());
}
class Aa {
  static init(t) {
    t ? (this.transferCheckCodeHashArray = t.transferCheckCodeHashArray.map((f) => new d7.Bytes(f)), this.unlockContractCodeHashArray = t.unlockContractCodeHashArray.map((f) => new d7.Bytes(f)), M5.lockingScriptSize = t.tokenGenesisSize, G0.lockingScriptSize = t.tokenSize, U0.tokenTransferTypeInfos.forEach((f, i) => {
      f.lockingScriptSize = t.tokenTransferCheckSizes[i];
    })) : (this.transferCheckCodeHashArray = Rz().map((f) => new d7.Bytes(f)), this.unlockContractCodeHashArray = Bz().map((f) => new d7.Bytes(f)), M5.lockingScriptSize = M5.calLockingScriptSize(), G0.lockingScriptSize = G0.calLockingScriptSize(), U0.tokenTransferTypeInfos.forEach((f, i) => {
      f.lockingScriptSize = U0.calLockingScriptSize(f.type);
    }));
    let a = G0.getDummyInstance();
    a.setDataPart(""), a.lockingScript.toBuffer();
    let r = M5.getDummyInstance();
    r.setDataPart(""), this.tokenGenesisCodeHash = r.getCodeHash(), this.tokenCodeHash = a.getCodeHash();
  }
}
d7.mvc.crypto.BN;
class Ac extends Da {
  constructor(t) {
    let a = Cp, r = d7.buildContractClass(a), f = new r(t.transferCheckCodeHashArray, t.unlockContractCodeHashArray);
    super(f), this.constuctParams = t, this._formatedDataPart = {};
  }
  static fromASM(t) {
    let a = Cp;
    return d7.buildContractClass(a).fromASM(t);
  }
  clone() {
    let t = new Ac(this.constuctParams);
    return t.setFormatedDataPart(this.getFormatedDataPart()), t;
  }
  setFormatedDataPart(t) {
    this._formatedDataPart = Object.assign({}, this._formatedDataPart, t), this._formatedDataPart.protoVersion = uc, this._formatedDataPart.protoType = Jt.FT, super.setDataPart(d7.toHex(y1(this._formatedDataPart)));
  }
  getFormatedDataPart() {
    return this._formatedDataPart;
  }
  unlock({
    txPreimage: t,
    prevouts: a,
    // token
    tokenInputIndex: r,
    prevTokenInputIndex: f,
    prevTokenAddress: i,
    prevTokenAmount: n,
    tokenTxHeader: o,
    tokenTxInputProof: s,
    prevTokenTxOutputProof: b,
    // contract
    contractInputIndex: l,
    contractTxOutputProof: v,
    // unlockCheck
    amountCheckHashIndex: m,
    amountCheckInputIndex: x,
    amountCheckTxOutputProofInfo: I,
    amountCheckScript: k,
    // sig
    senderPubKey: P,
    senderSig: M,
    operation: R
  }) {
    return R != E9.TRANSFER && (P = new d7.PubKey("00"), M = new d7.Sig("00")), this._contract.unlock(
      t,
      a,
      // amountCheck
      r,
      m,
      x,
      I,
      k,
      // token
      f,
      i,
      n,
      o,
      s,
      b,
      // sig data
      P,
      M,
      // contract
      l,
      v,
      // op
      R
    );
  }
  unlockOld({
    txPreimage: t,
    tokenInputIndex: a,
    prevouts: r,
    rabinMsg: f,
    rabinPaddingArray: i,
    rabinSigArray: n,
    rabinPubKeyIndexArray: o,
    rabinPubKeyVerifyArray: s,
    rabinPubKeyHashArray: b,
    checkInputIndex: l,
    checkScriptTx: v,
    nReceivers: m,
    prevTokenAddress: x,
    prevTokenAmount: I,
    senderPubKey: k,
    senderSig: P,
    lockContractInputIndex: M,
    lockContractTx: R,
    operation: F
  }) {
    return F != E9.TRANSFER && (k = new d7.PubKey(""), P = new d7.Sig("")), F != E9.UNLOCK_FROM_CONTRACT && (M = 0, R = new d7.Bytes("")), this._contract.unlock(t, a, r, f, i, n, o, s, b, l, v, m, x, I, k, P, M, R, F);
  }
}
class G0 {
  static getLockingScriptSize() {
    return this.lockingScriptSize;
  }
  static createContract(t, a) {
    return new Ac({
      transferCheckCodeHashArray: t,
      unlockContractCodeHashArray: a
    });
  }
  static getDummyInstance() {
    let t = this.createContract(Aa.transferCheckCodeHashArray, Aa.unlockContractCodeHashArray);
    return t.setDataPart(""), t;
  }
  static calLockingScriptSize() {
    return this.getDummyInstance().lockingScript.toBuffer().length;
  }
  static calUnlockingScriptSize(t, a, r, f) {
    return 1e3;
  }
}
const Nz = "0000000000000000000000000000000000000000000000000000000000000000";
class Ic extends Da {
  // constructor(constuctParams: { pubKey: mvc.PublicKey }) {
  constructor(t) {
    let a = C$, r = d7.buildContractClass(a), f = new r();
    super(f), this.constuctParams = t, this._formatedDataPart = {};
  }
  clone() {
    let t = new Ic(this.constuctParams);
    return t.setFormatedDataPart(this.getFormatedDataPart()), t;
  }
  setFormatedDataPart(t) {
    this._formatedDataPart = Object.assign({}, this._formatedDataPart, t), this._formatedDataPart.genesisHash = "", this._formatedDataPart.protoVersion = uc, this._formatedDataPart.protoType = Jt.FT, super.setDataPart(d7.toHex(y1(this._formatedDataPart)));
  }
  getFormatedDataPart() {
    return this._formatedDataPart;
  }
  setFormatedDataPartFromLockingScript(t) {
    let a = Rt(t.toBuffer());
    this.setFormatedDataPart(a);
  }
  isFirstGenesis() {
    return this.getFormatedDataPart().sensibleID.txid == Nz;
  }
  unlock({
    txPreimage: t,
    pubKey: a,
    sig: r,
    tokenScript: f,
    // GenesisTx Input Proof
    genesisTxHeader: i,
    prevInputIndex: n,
    genesisTxInputProof: o,
    // Prev GenesisTx Output Proof
    prevGenesisTxHeader: s,
    prevTxOutputHashProof: b,
    prevTxOutputSatoshiBytes: l,
    genesisSatoshis: v,
    tokenSatoshis: m,
    changeAddress: x,
    changeSatoshis: I,
    opReturnScript: k
  }) {
    return this._contract.unlock(t, a, r, f, i, n, o, s, b, l, v, m, x, I, k);
  }
}
class M5 {
  static getLockingScriptSize() {
    return this.lockingScriptSize;
  }
  /**
   * create genesis contract
   * @param {Object} issuerPubKey issuer public key used to unlocking genesis contract
   * @param {string} tokenName the token name
   * @param {string} tokenSymbol the token symbol
   * @param {number} decimalNum the token amount decimal number
   * @returns
   */
  static createContract() {
    return new Ic({});
  }
  static getDummyInstance() {
    let t = this.createContract();
    return t.setDataPart(""), t;
  }
  static calLockingScriptSize() {
    return this.getDummyInstance().lockingScript.toBuffer().length;
  }
  static calUnlockingScriptSize(t) {
    return t && d7.mvc.Script.buildSafeDataOut(t).toHex(), this.getDummyInstance(), G0.getDummyInstance(), 1e4;
  }
}
async function Ka(e, t, a, r) {
  let f = [];
  if (r)
    return r.forEach((n) => {
      if (n.wif) {
        let o = d7.mvc.PrivateKey.fromWIF(n.wif);
        f.push(o), n.address = o.toAddress(a);
      }
    }), {
      utxos: r,
      utxoPrivateKeys: f
    };
  const i = await t.getUnspents(e.address.toString());
  if (i.forEach((n) => {
    f.push(e.privateKey), n.address = new d7.mvc.Address(n.address, a);
  }), i.length == 0)
    throw new te(Q7.EC_INSUFFICIENT_MVC, "Insufficient balance.");
  return {
    utxos: i,
    utxoPrivateKeys: f
  };
}
function J5(e, t) {
  return t.map((r) => {
    const f = e.appendP2PKHInput(r);
    return e.addSigHashInfo({
      inputIndex: f,
      address: r.address.toString(),
      sighashType: $y,
      contractType: I5.P2PKH
    }), f;
  });
}
function Os(e, t, a, r) {
  const f = e.appendInput(t);
  return e.addSigHashInfo({
    inputIndex: f,
    address: a,
    sighashType: $y,
    contractType: r
  }), f;
}
function f5({
  txComposer: e,
  contract: t,
  lockingScript: a,
  dustCalculator: r
}) {
  a || (a = t.lockingScript);
  const f = a.toBuffer().length, i = r.getDustThreshold(f);
  return e.appendOutput({
    lockingScript: a,
    satoshis: i
  });
}
function c9(e, t) {
  return e.appendOpReturnOutput(t);
}
function u9(e, t, a) {
  return e.appendChangeOutput(t, a);
}
function Q5(e, t, a) {
  t.forEach((r) => {
    let f = a.splice(0, 1)[0];
    e.unlockP2PKHInput(f, r);
  });
}
function n5(e, t) {
  let a = e.getFeeRate();
  if (a < t)
    throw new te(Q7.EC_INSUFFICIENT_MVC, `Insufficient balance.The fee rate should not be less than ${t}, but in the end it is ${a}.`);
}
async function qa({
  tokenIndex: e,
  codehash: t,
  genesis: a,
  api: r,
  network: f
}) {
  let i = await r.getNonFungibleTokenUnspentDetail(t, a, e);
  return {
    nftUtxo: {
      txId: i.txId,
      outputIndex: i.outputIndex,
      nftAddress: new d7.mvc.Address(i.tokenAddress, f)
    }
  };
}
async function Dp({
  sensibleId: e,
  api: t,
  address: a,
  type: r
}) {
  const f = r === "nft" ? Vt : M5, i = r === "nft" ? cx : kx;
  let n = f.createContract(), {
    genesisTxId: o,
    genesisOutputIndex: s
  } = Dz(e), b = await Cz(i, n.getCodeHash(), o, s, t, a, r);
  if (!b)
    throw new te(Q7.EC_FIXED_TOKEN_SUPPLY, "token supply is fixed");
  let l = await t.getRawTxData(b.txId);
  const v = new d7.mvc.Transaction(l);
  let m = v.inputs[0].prevTxId.toString("hex"), x = v.inputs[0].outputIndex, I = await t.getRawTxData(m);
  b.satotxInfo = {
    txId: b.txId,
    outputIndex: b.outputIndex,
    txHex: l,
    preTxId: m,
    preOutputIndex: x,
    preTxHex: I
  };
  let k = v.outputs[b.outputIndex];
  return b.satoshis = k.satoshis, b.lockingScript = k.script, n.setFormatedDataPartFromLockingScript(b.lockingScript), {
    genesisContract: n,
    genesisTxId: o,
    genesisOutputIndex: s,
    genesisUtxo: b
  };
}
async function Cz(e, t, a, r, f, i, n) {
  let o, s = await f.getRawTxData(a), l = new d7.mvc.Transaction(s).outputs[r].script.toBuffer(), v = e.getQueryGenesis(l), m;
  if (n === "nft" ? m = await f.getNonFungibleTokenUnspents(t, v, i.toString()) : m = await f.getFungibleTokenUnspents(t, v, i.toString()), o = m.find((x) => x.txId == a && x.outputIndex == r), !o) {
    let x = e.parseDataPart(l);
    x.sensibleID = {
      txid: a,
      index: r
    };
    let I = e.updateScript(l, x), k = e.getQueryGenesis(I), P;
    n === "nft" ? P = await f.getNonFungibleTokenUnspents(t, k, i.toString()) : P = await f.getFungibleTokenUnspents(t, k, i.toString()), P.length > 0 && (o = P[0]);
  }
  if (o)
    return {
      txId: o.txId,
      outputIndex: o.outputIndex
    };
}
function Dz(e) {
  let t = Q.Buffer.from(e, "hex"), a = t.slice(0, 32).reverse().toString("hex"), r = t.readUIntLE(32, 4);
  return {
    genesisTxId: a,
    genesisOutputIndex: r
  };
}
class T9 {
  constructor() {
    this._buf = Q.Buffer.alloc(0);
  }
  addVout(t, a) {
    const r = VC(t), f = j0(a);
    this._buf = Q.Buffer.concat([this._buf, r, f]);
  }
  toHex() {
    return this._buf.toString("hex");
  }
}
function Lp(e) {
  if (e < 253)
    return 1;
  if (e < 65536)
    return 2 + 1;
  if (e < 4294967296)
    return 3 + 1;
  if (e < 18446744073709552e3)
    return 4 + 1;
}
class ft {
  constructor(t, a) {
    this.inputs = [], this.outputs = [], this.feeRate = t, this.dustCalculator = a;
  }
  addInput(t, a) {
    this.inputs.push({
      size: t,
      type: 1,
      satothis: a
    });
  }
  addP2PKHInput() {
    this.inputs.push({
      size: 107,
      type: 0
      /* P2PKH */
    });
  }
  addOutput(t) {
    this.outputs.push({
      size: t,
      type: 2
      /* OTHER */
    });
  }
  addOpReturnOutput(t) {
    this.outputs.push({
      size: t,
      type: 1
      /* OP_RETURN */
    });
  }
  addP2PKHOutput() {
    this.outputs.push({
      size: 25,
      type: 0
      /* P2PKH */
    });
  }
  getSize() {
    let t = 0;
    return t += 4, t += 1, this.inputs.forEach((a) => {
      t += 32, t += 4, t += Lp(a.size), t += a.size, t += 4;
    }), t += 1, this.outputs.forEach((a) => {
      t += 8, t += Lp(a.size), t += a.size;
    }), t += 4, t;
  }
  getFee() {
    let t = 0;
    return t += Math.ceil(this.getSize() * this.feeRate), this.inputs.forEach((a) => {
      a.type == 1 && (t -= a.satothis);
    }), this.outputs.forEach((a) => {
      a.type == 2 && (t += this.dustCalculator.getDustThreshold(a.size));
    }), t < 0 ? 0 : Math.ceil(t);
  }
}
function Fp({
  totalSupply: e,
  address: t
}) {
  const a = new Ms(e.toString()), r = t.hashBuffer.toString("hex"), f = Vt.createContract();
  return f.setFormatedDataPart({
    totalSupply: a,
    nftAddress: r
  }), f;
}
function Lz({
  genesisHash: e,
  genesisContract: t,
  metaTxId: a,
  metaOutputIndex: r,
  sensibleID: f,
  receiverAddress: i,
  unlockContractCodeHashArray: n
}) {
  const o = i.hashBuffer.toString("hex"), s = H0.createContract(n);
  return s.setFormatedDataPart({
    metaidOutpoint: {
      txid: a,
      index: r
    },
    nftAddress: o,
    totalSupply: t.getFormatedDataPart().totalSupply,
    tokenIndex: t.getFormatedDataPart().tokenIndex,
    genesisHash: e,
    sensibleID: f
  }), s;
}
function vo(e, t) {
  const a = e.lockingScript.toBuffer();
  let r = at(a);
  return r.protoType = Jt.NFT, r.protoVersion = fn, r.nftAddress = t.hashBuffer.toString("hex"), dc(a, r);
}
function Bx({
  genesisTx: e,
  purse: t,
  transferCheckCodeHashArray: a,
  unlockContractCodeHashArray: r,
  type: f
}) {
  let i, n, o;
  const s = f === "nft" ? cx : kx, b = 0, l = e.id, v = e.outputs[b].script;
  let m, x;
  if (f === "nft") {
    m = H0.createContract(r);
    const k = Vt.createContract();
    k.setFormatedDataPartFromLockingScript(v), k.setFormatedDataPart({
      sensibleID: {
        txid: l,
        index: b
      },
      tokenIndex: Ms.Zero
    }), x = k.getScriptHash(), m.setFormatedDataPart({
      sensibleID: {
        txid: l,
        index: b
      },
      genesisHash: x,
      tokenAddress: t.address.hashBuffer.toString("hex")
    });
  } else {
    m = G0.createContract(a, r);
    let k = M5.createContract();
    k.setFormatedDataPartFromLockingScript(v), k.setFormatedDataPart({
      sensibleID: {
        txid: l,
        index: b
      }
    }), x = k.getScriptHash(), m.setFormatedDataPart({
      sensibleID: {
        txid: l,
        index: b
      },
      genesisHash: x,
      tokenAmount: new Ms(0),
      tokenAddress: t.address.hashBuffer.toString("hex")
    });
  }
  let I = m.lockingScript.toBuffer();
  return i = s.getQueryGenesis(I), n = m.getCodeHash(), o = KC(l, b).toString("hex"), {
    codehash: n,
    genesis: i,
    sensibleId: o
  };
}
const {
  crypto: Fr,
  encoding: q6,
  Transaction: Nx
} = ae, Fz = Xp, {
  TxInputProof: Hz,
  TxOutputProof: lq
} = d7.buildTypeClasses(Fz);
let Hp = function(e) {
  const t = Q.Buffer.alloc(4, 0);
  return t.writeUInt32LE(e), t;
}, Uz = function(e) {
  return new he(e.toString()).toBuffer({
    endian: "little",
    size: 8
  });
};
function Cx(e) {
  const t = new q6.BufferWriter();
  t.writeUInt32LE(e.version), t.writeUInt32LE(e.nLockTime), t.writeUInt32LE(e.inputs.length), t.writeUInt32LE(e.outputs.length);
  const a = new q6.BufferWriter(), r = new q6.BufferWriter();
  for (const s of e.inputs)
    a.writeReverse(s.prevTxId), a.writeUInt32LE(s.outputIndex), a.writeUInt32LE(s.sequenceNumber), r.write(Fr.Hash.sha256(s.script.toBuffer()));
  const f = a.toBuffer();
  t.write(Fr.Hash.sha256(f)), t.write(Fr.Hash.sha256(r.toBuffer()));
  const i = new q6.BufferWriter();
  for (const s of e.outputs)
    i.writeUInt64LEBN(s.satoshisBN), i.write(Fr.Hash.sha256(s.script.toBuffer()));
  const n = i.toBuffer();
  return t.write(Fr.Hash.sha256(n)), {
    txHeader: t.toBuffer().toString("hex"),
    inputHashProof: f.toString("hex"),
    outputHashProof: n.toString("hex")
  };
}
function $z(e, t) {
  const a = Cx(e), r = new d7.Bytes(a.txHeader), f = e.inputs[t];
  return [{
    hashProof: new d7.Bytes(a.inputHashProof),
    txHash: new d7.Bytes(Q.Buffer.from(f.prevTxId, "hex").reverse().toString("hex")),
    outputIndexBytes: new d7.Bytes(Hp(f.outputIndex).toString("hex")),
    sequenceBytes: new d7.Bytes(Hp(f.sequenceNumber).toString("hex"))
  }, r];
}
function Ps(e, t) {
  const a = Cx(e), r = e.outputs[t];
  return {
    txHeader: new d7.Bytes(a.txHeader),
    hashProof: new d7.Bytes(a.outputHashProof),
    satoshiBytes: new d7.Bytes(Uz(r.satoshis).toString("hex")),
    scriptHash: new d7.Bytes(Fr.Hash.sha256(r.script.toBuffer()).toString("hex"))
  };
}
function jz(e) {
  const t = new Nx(e.satotxInfo.txHex), a = 0, r = $z(t, a), f = new Hz(r[0]);
  return {
    genesisTxHeader: r[1],
    prevInputIndex: a,
    genesisTxInputProof: f
  };
}
function Vz(e) {
  const t = e.satotxInfo.preOutputIndex, a = new Nx(e.satotxInfo.preTxHex), r = Ps(a, t);
  return {
    prevGenesisTxHeader: r.txHeader,
    prevTxOutputHashProof: r.hashProof,
    prevTxOutputSatoshiBytes: r.satoshiBytes
  };
}
const Dx = 1, Up = Q.Buffer.alloc(20, 0), {
  Transaction: zz
} = ae, K6 = ae.crypto.Signature;
wc.init();
const qz = Xp, {
  TxInputProof: G6,
  TxOutputProof: a5
} = d7.buildTypeClasses(qz);
class Lx {
  get api() {
    return this._api;
  }
  get sensibleApi() {
    return this._api;
  }
  constructor({
    purse: t,
    network: a = Oa.MAIN,
    apiTarget: r = an.MVC,
    apiHost: f,
    feeb: i = Dx,
    debug: n = !1
  }) {
    if (this.dustCalculator = new Fy(zz.DUST_AMOUNT, null), this.network = a, this._api = new rc(a, r, f), this.unlockContractCodeHashArray = wc.unlockContractCodeHashArray, i && (this.feeb = i), this.debug = n, t) {
      const o = ae.PrivateKey.fromWIF(t), s = o.toAddress(this.network);
      this.purse = {
        privateKey: o,
        address: s
      };
    }
  }
  /**
   * Estimate the cost of genesis
   * The minimum cost required in the case of 10 utxo inputs
   * @param opreturnData
   * @param utxoMaxCount Maximum number of MVC UTXOs supported
   * @returns
   */
  async getGenesisEstimateFee({
    opreturnData: t,
    utxoMaxCount: a = 10
  }) {
    let r = a, f = new ft(this.feeb, this.dustCalculator);
    for (let i = 0; i < r; i++)
      f.addP2PKHInput();
    return f.addOutput(Vt.getLockingScriptSize()), t && f.addOpReturnOutput(ae.Script.buildSafeDataOut(t).toBuffer().length), f.addP2PKHOutput(), f.getFee();
  }
  async getIssueEstimateFee({
    sensibleId: t,
    opreturnData: a,
    utxoMaxCount: r = 10
  }) {
    const {
      genesisUtxo: f
    } = await Dp({
      sensibleId: t,
      api: this.api,
      address: this.purse.address,
      type: "nft"
    });
    return await this._calIssueEstimateFee({
      genesisUtxoSatoshis: f.satoshis,
      opreturnData: a,
      utxoMaxCount: r
    });
  }
  async getTransferEstimateFee({
    tokenIndex: t,
    codehash: a,
    genesis: r,
    opreturnData: f,
    utxoMaxCount: i = 10
  }) {
    let {
      nftUtxo: n
    } = await qa({
      tokenIndex: t,
      codehash: a,
      genesis: r,
      api: this.api,
      network: this.network
    });
    n = await this.pretreatNftUtxo(n, a, r);
    const o = new d7.Bytes(n.preLockingScript.toHex());
    return await this._calTransferEstimateFee({
      nftUtxoSatoshis: n.satoshis,
      genesisScript: o,
      opreturnData: f,
      utxoMaxCount: i
    });
  }
  async genesis({
    genesisWif: t,
    totalSupply: a,
    opreturnData: r,
    utxos: f,
    changeAddress: i,
    noBroadcast: n = !1,
    calcFee: o = !1
  }) {
    if (o)
      return {
        fee: await this.getGenesisEstimateFee({
          opreturnData: r
        }),
        feeb: this.feeb
      };
    const {
      utxos: s,
      utxoPrivateKeys: b
    } = await Ka(this.purse, this.api, this.network, f);
    i ? i = new ae.Address(i, this.network) : i = s[0].address;
    const {
      txComposer: l,
      genesisContract: v
    } = await this.createGenesisTx({
      totalSupply: a,
      utxos: s,
      utxoPrivateKeys: b,
      opreturnData: r,
      changeAddress: i
    });
    if (o)
      return {
        fee: Math.ceil(l.tx._estimateSize() * this.feeb),
        feeb: this.feeb
      };
    let m = l.getRawHex(), x;
    n || (x = await this.api.broadcast(m));
    let {
      codehash: I,
      genesis: k,
      sensibleId: P
    } = Bx({
      genesisTx: l.getTx(),
      purse: this.purse,
      unlockContractCodeHashArray: this.unlockContractCodeHashArray,
      type: "nft"
    });
    return {
      codehash: I,
      genesis: k,
      sensibleId: P,
      tx: l.tx,
      txid: l.tx.id,
      txHex: m,
      genesisContract: v,
      broadcastStatus: n ? "pending" : x ? "success" : "fail"
    };
  }
  async createGenesisTx({
    totalSupply: t,
    utxos: a,
    utxoPrivateKeys: r,
    opreturnData: f,
    changeAddress: i
  }) {
    const n = new He(), o = Fp({
      totalSupply: t,
      address: this.purse.address
    }), s = J5(n, a);
    return f5({
      txComposer: n,
      contract: o,
      dustCalculator: this.dustCalculator
    }), f && c9(n, f), u9(n, i, this.feeb), Q5(n, s, r), n5(n, this.feeb), {
      txComposer: n,
      genesisContract: o
    };
  }
  async issue(t) {
    return this.mint(t);
  }
  async mint({
    sensibleId: t,
    metaTxId: a,
    metaOutputIndex: r,
    opreturnData: f,
    utxos: i,
    receiverAddress: n,
    changeAddress: o,
    noBroadcast: s = !1,
    calcFee: b = !1
  }) {
    if (b)
      return {
        fee: await this.getIssueEstimateFee({
          sensibleId: t,
          opreturnData: f
        }),
        feeb: this.feeb
      };
    const {
      utxos: l,
      utxoPrivateKeys: v
    } = await Ka(this.purse, this.api, this.network, i);
    if (this.purse.privateKey.toPublicKey(), n ? n = new ae.Address(n, this.network) : n = this.purse.address, o ? o = new ae.Address(o, this.network) : o = l[0].address, b)
      return await this.createMintTx({
        utxos: l,
        utxoPrivateKeys: v,
        sensibleId: t,
        metaTxId: a,
        metaOutputIndex: r,
        opreturnData: f,
        receiverAddress: n,
        changeAddress: o,
        calcFee: b
      });
    const {
      txComposer: x,
      tokenIndex: I
    } = await this.createMintTx({
      utxos: l,
      utxoPrivateKeys: v,
      sensibleId: t,
      metaTxId: a,
      metaOutputIndex: r,
      opreturnData: f,
      receiverAddress: n,
      changeAddress: o
    });
    let k = x.getRawHex();
    return s || await this.api.broadcast(k), {
      txHex: k,
      txid: x.getTxId(),
      tx: x.getTx(),
      tokenIndex: I
    };
  }
  async transfer({
    genesis: t,
    codehash: a,
    tokenIndex: r,
    senderWif: f,
    receiverAddress: i,
    opreturnData: n,
    utxos: o,
    noBroadcast: s = !1
  }) {
    const b = Date.now(), {
      utxos: l,
      utxoPrivateKeys: v
    } = await Ka(this.purse, this.api, this.network, o);
    i = new ae.Address(i, this.network);
    const {
      txComposer: m
    } = await this.createTransferTx({
      utxos: l,
      utxoPrivateKeys: v,
      genesis: t,
      codehash: a,
      tokenIndex: r,
      receiverAddress: i,
      opreturnData: n
    });
    let x = m.getRawHex();
    s || await this.api.broadcast(x);
    const I = Date.now() - b;
    return {
      txHex: x,
      txid: m.getTxId(),
      tx: m.getTx(),
      runtime: I
    };
  }
  async sell({
    genesis: t,
    codehash: a,
    tokenIndex: r,
    sellerWif: f,
    price: i,
    changeAddress: n,
    opreturnData: o,
    utxos: s,
    noBroadcast: b = !1,
    middleChangeAddress: l,
    middleWif: v
  }) {
    const m = Date.now();
    if (i < 22e3)
      throw new te(Q7.EC_INVALID_ARGUMENT, "Selling Price must be greater than or equals to 22000 satoshis. 销售价格最低为22000聪。");
    const {
      utxos: x,
      utxoPrivateKeys: I
    } = await Ka(this.purse, this.api, this.network, s);
    if (x.length > 3)
      throw new te(Q7.EC_UTXOS_MORE_THAN_3, "销售合约使用的utxo数量应当少于等于3个，请先归集utxo。MVC utxos should be no more than 3 in this operation, please merge it first.");
    const P = new ae.PrivateKey(f).publicKey;
    let {
      nftUtxo: M
    } = await qa({
      tokenIndex: r,
      codehash: a,
      genesis: t,
      api: this.api,
      network: this.network
    });
    if (M.nftAddress.toString() != P.toAddress(this.network).toString())
      throw new te(Q7.EC_INVALID_ARGUMENT, "nft销售者应当为nft持有者！nft seller should be the nft owner!");
    n ? n = new ae.Address(n, this.network) : n = x[0].address;
    let R;
    l ? (l = new ae.Address(l, this.network), R = new ae.PrivateKey(v)) : (l = x[0].address, R = I[0]);
    const {
      sellTxComposer: F,
      txComposer: C
    } = await this.createSellTx({
      utxos: x,
      utxoPrivateKeys: I,
      genesis: t,
      codehash: a,
      tokenIndex: r,
      nftUtxo: M,
      price: i,
      opreturnData: o,
      changeAddress: n,
      middlePrivateKey: R,
      middleChangeAddress: l
    });
    let L = F.getRawHex(), U = C.getRawHex();
    b || (await this.api.broadcast(L), await this.api.broadcast(U));
    const q = Date.now() - m;
    return {
      tx: C.tx,
      txHex: U,
      txid: C.tx.id,
      sellTxId: F.getTxId(),
      sellTx: F.getTx(),
      sellTxHex: L,
      runtime: q
    };
  }
  async cancelSell({
    genesis: t,
    codehash: a,
    tokenIndex: r,
    sellerWif: f,
    sellUtxo: i,
    opreturnData: n,
    utxos: o,
    changeAddress: s,
    noBroadcast: b = !1,
    middleChangeAddress: l,
    middlePrivateKey: v
  }) {
    const m = Date.now(), x = new ae.PrivateKey(f), {
      utxos: I,
      utxoPrivateKeys: k
    } = await Ka(this.purse, this.api, this.network, o);
    if (I.length > 3)
      throw new te(Q7.EC_UTXOS_MORE_THAN_3, "下架合约使用的utxo数量应当少于等于3个，请先归集utxo。MVC utxos should be no more than 3 in this operation, please merge it first.");
    s ? s = new ae.Address(s, this.network) : s = I[0].address, l ? (l = new ae.Address(l, this.network), v = new ae.PrivateKey(v)) : (l = I[0].address, v = k[0]);
    const {
      unlockCheckTxComposer: P,
      txComposer: M
    } = await this.createCancelSellTx({
      utxos: I,
      utxoPrivateKeys: k,
      genesis: t,
      codehash: a,
      tokenIndex: r,
      sellUtxo: i,
      sellerPrivateKey: x,
      opreturnData: n,
      changeAddress: s,
      middlePrivateKey: v,
      middleChangeAddress: l
    });
    let R = P.getRawHex(), F = M.getRawHex();
    b || (await this.api.broadcast(R), await this.api.broadcast(F));
    const C = Date.now() - m;
    return {
      tx: M.tx,
      txHex: F,
      txid: M.tx.id,
      unlockCheckTxId: P.getTxId(),
      unlockCheckTx: P.getTx(),
      unlockCheckTxHex: R,
      runtime: C
    };
  }
  async createCancelSellTx({
    utxos: t,
    utxoPrivateKeys: a,
    genesis: r,
    codehash: f,
    tokenIndex: i,
    sellUtxo: n,
    sellerPrivateKey: o,
    opreturnData: s,
    changeAddress: b,
    middlePrivateKey: l,
    middleChangeAddress: v
  }) {
    let {
      nftUtxo: m
    } = await qa({
      tokenIndex: i,
      codehash: f,
      genesis: r,
      api: this.api,
      network: this.network
    });
    if (m = await this.pretreatNftUtxo(m, f, r), n || (n = await this.api.getNftSellUtxo(f, r, i)), !n)
      throw new te(Q7.EC_NFT_NOT_ON_SELL, "The NFT is not for sale because the corresponding SellUtxo cannot be found.");
    let x = o.toAddress(this.network), I = await this.api.getRawTxData(n.txId), k = new ae.Transaction(I), P = {
      txId: n.txId,
      outputIndex: n.outputIndex,
      satoshis: k.outputs[n.outputIndex].satoshis,
      lockingScript: k.outputs[n.outputIndex].script
    }, M = new d7.Bytes(m.preLockingScript.toHex()), R = t.reduce((A, h) => A + h.satoshis, 0), F = await this._calCancelSellEstimateFee({
      codehash: f,
      nftUtxoSatoshis: m.satoshis,
      nftSellUtxo: P,
      genesisScript: M,
      utxoMaxCount: t.length,
      opreturnData: s
    });
    if (R < F)
      throw new te(Q7.EC_INSUFFICIENT_MVC, `Insufficient balance.It take more than ${F}, but only ${R}.`);
    let C = m, L = s9(C.lockingScript.toBuffer()), U = O5.createContract(va.OUT_6);
    U.setFormatedDataPart({
      nftCodeHash: Q.Buffer.from(f, "hex"),
      nftID: L
    });
    const q = new He(), Z = J5(q, t), z = f5({
      txComposer: q,
      lockingScript: U.lockingScript,
      dustCalculator: this.dustCalculator
    });
    let G = u9(q, v, this.feeb);
    Q5(q, Z, a), n5(q, this.feeb), t = [{
      txId: q.getTxId(),
      satoshis: q.getOutput(G).satoshis,
      outputIndex: G,
      address: v
    }], a = t.map((A) => l).filter((A) => A);
    let O = {
      txId: q.getTxId(),
      outputIndex: z,
      satoshis: q.getOutput(z).satoshis,
      lockingScript: q.getOutput(z).script
    };
    const u = new He();
    let p = new T9();
    const d = u.appendInput(P);
    p.addVout(P.txId, P.outputIndex);
    const c = u.appendInput(C);
    p.addVout(C.txId, C.outputIndex);
    const y = J5(u, t);
    t.forEach((A) => {
      p.addVout(A.txId, A.outputIndex);
    });
    const S = u.appendInput(O);
    p.addVout(O.txId, O.outputIndex);
    let T = fr.createContract(new d7.Ripemd160(d7.toHex(new ae.Address(n.sellerAddress, this.network).hashBuffer)), n.price, new d7.Bytes(f), new d7.Bytes(d7.toHex(L)));
    T.setFormatedDataPart(Is(P.lockingScript.toBuffer()));
    const g = vo(C, x), w = f5({
      txComposer: u,
      lockingScript: ae.Script.fromBuffer(g),
      dustCalculator: this.dustCalculator
    });
    if (s) {
      const A = u.appendOpReturnOutput(s);
      u.getOutput(A).script.toHex();
    }
    for (let A = 0; A < 2; A++) {
      u.clearChangeOutput(), u.appendChangeOutput(b, this.feeb);
      const h = H0.createContract(this.unlockContractCodeHashArray, f);
      let N = at(m.lockingScript.toBuffer());
      h.setFormatedDataPart(N);
      const Y = m.satotxInfo.preNftInputIndex, t7 = new ae.Transaction(m.satotxInfo.txHex), H = Qa(t7, Y), $ = new G6(H[0]), X = H[1], i7 = new a5(F0(m.satotxInfo.preTx, m.satotxInfo.preOutputIndex)), J = d, _ = new a5(F0(k, P.outputIndex)), E = 1, j = S, V = q.getTx(), n7 = new a5(F0(V, z)), K = V.outputs[z].script.toBuffer(), B = new d7.Bytes(K.toString("hex")), D = h.unlock({
        txPreimage: u.getInputPreimage(c),
        prevouts: new d7.Bytes(p.toHex()),
        prevNftInputIndex: Y,
        prevNftAddress: new d7.Bytes(d7.toHex(m.preNftAddress.hashBuffer)),
        nftTxHeader: X,
        nftTxInputProof: $,
        prevNftTxProof: i7,
        genesisScript: M,
        contractInputIndex: J,
        // 销售合约输入index
        contractTxProof: _,
        // 销售和约输出证明
        amountCheckHashIndex: E,
        // 哈希列表中的索引（？）
        amountCheckInputIndex: j,
        // 解锁检查中的输入索引
        amountCheckTxProof: n7,
        // 解锁检查输出证明
        amountCheckScrypt: B,
        // 解锁检查Scrypt
        operation: ma.UNLOCK_FROM_CONTRACT
      });
      if (this.debug) {
        let y7 = {
          tx: u.tx,
          inputIndex: c,
          inputSatoshis: u.getInput(c).output.satoshis
        }, x7 = D.verify(y7);
        if (x7.success == !1)
          throw x7;
      }
      u.getInput(c).setScript(D.toScript());
      let W = Q.Buffer.alloc(0);
      u.tx.outputs.forEach((y7, x7) => {
        if (x7 != w) {
          let _7 = y7.toBufferWriter().toBuffer(), F7 = Q.Buffer.alloc(4);
          F7.writeUInt32LE(_7.length), W = Q.Buffer.concat([W, F7, _7]);
        }
      });
      const e7 = Ps(t7, m.satotxInfo.outputIndex);
      let o7 = O.lockingScript;
      o7 = o7.subScript(0);
      const a7 = new d7.SigHashPreimage(d7.toHex(d7.getPreimage(u.getTx(), o7, O.satoshis, S)));
      let s7 = U.unlock({
        txPreimage: a7,
        prevouts: new d7.Bytes(p.toHex()),
        nftInputIndex: c,
        nftScript: new d7.Bytes(C.lockingScript.toHex()),
        nftTxHeader: e7.txHeader,
        nftTxHashProof: e7.hashProof,
        nftSatoshiBytes: e7.satoshiBytes,
        nOutputs: u.tx.outputs.length,
        txNftOutputIndex: w,
        nftOutputAddress: new d7.Bytes(d7.toHex(x.hashBuffer)),
        nftOutputSatoshis: u.getOutput(w).satoshis,
        otherOutputArray: new d7.Bytes(d7.toHex(W))
      });
      if (this.debug) {
        let y7 = {
          tx: u.getTx(),
          inputIndex: S,
          inputSatoshis: u.getInput(S).output.satoshis
        }, x7 = s7.verify(y7);
        if (x7.success == !1)
          throw x7;
      }
      u.getInput(S).setScript(s7.toScript());
      let u7 = u.getInput(d).output, m7 = u7.script;
      m7 = m7.subScript(0);
      const p7 = new d7.SigHashPreimage(d7.toHex(d7.getPreimage(u.getTx(), m7, u7.satoshis, d, K6.SIGHASH_SINGLE | K6.SIGHASH_FORKID))), l7 = T.unlock({
        txPreimage: p7,
        // 以下4个参数只有在cancelSell中才有
        nftScript: new d7.Bytes(C.lockingScript.toHex()),
        senderPubKey: new d7.PubKey(d7.toHex(o.publicKey.toBuffer())),
        senderSig: new d7.Sig(d7.toHex(u.getTxFormatSig(o, d))),
        nftOutputSatoshis: u.getOutput(w).satoshis,
        op: ks.CANCEL
      });
      if (this.debug) {
        let y7 = {
          tx: u.getTx(),
          inputIndex: d,
          inputSatoshis: u.getInput(d).output.satoshis
        }, x7 = l7.verify(y7);
        if (x7.success == !1)
          throw x7;
      }
      u.getInput(d).setScript(l7.toScript());
    }
    return Q5(u, y, a), n5(u, this.feeb), {
      unlockCheckTxComposer: q,
      txComposer: u
    };
  }
  async buy({
    genesis: t,
    codehash: a,
    tokenIndex: r,
    buyerWif: f,
    buyerAddress: i,
    sellUtxo: n,
    opreturnData: o,
    utxos: s,
    changeAddress: b,
    noBroadcast: l = !1,
    middleChangeAddress: v,
    middleWif: m,
    publisherAddress: x,
    publisherFee: I,
    publisherFeeRate: k,
    creatorAddress: P,
    creatorFee: M,
    creatorFeeRate: R
  }) {
    const F = Date.now(), {
      utxos: C,
      utxoPrivateKeys: L
    } = await Ka(this.purse, this.api, this.network, s);
    if (C.length > 3)
      throw new te(Q7.EC_UTXOS_MORE_THAN_3, "MVC utxos should be no more than 3 in this operation, please merge it first.");
    i ? i = new ae.Address(i, this.network) : i = new ae.PrivateKey(f).toAddress(this.network), b ? b = new ae.Address(b, this.network) : b = C[0].address;
    let U;
    if (v ? (v = new ae.Address(v, this.network), U = new ae.PrivateKey(m)) : (v = C[0].address, U = L[0]), n || (n = await this.api.getNftSellUtxo(a, t, r)), !n)
      throw new te(Q7.EC_NFT_NOT_ON_SELL, "The NFT is not for sale because the corresponding SellUtxo cannot be found.");
    const q = n.price;
    this._checkRoyaltyParams({
      price: q,
      publisherAddress: x,
      publisherFee: I,
      publisherFeeRate: k,
      creatorAddress: P,
      creatorFee: M,
      creatorFeeRate: R
    });
    let {
      unlockCheckTxComposer: Z,
      txComposer: z
    } = await this.createBuyTx({
      utxos: C,
      utxoPrivateKeys: L,
      genesis: t,
      codehash: a,
      tokenIndex: r,
      sellUtxo: n,
      buyerAddress: i,
      opreturnData: o,
      changeAddress: b,
      middlePrivateKey: U,
      middleChangeAddress: v,
      publisherAddress: x,
      publisherFee: I,
      publisherFeeRate: k,
      creatorAddress: P,
      creatorFee: M,
      creatorFeeRate: R
    }), G = Z.getRawHex(), O = z.getRawHex();
    l || (await this.api.broadcast(G), await this.api.broadcast(O));
    const u = Date.now() - F;
    return {
      tx: z.tx,
      txHex: O,
      txid: z.tx.id,
      unlockCheckTxId: Z.getTxId(),
      unlockCheckTx: Z.getTx(),
      unlockCheckTxHex: G,
      runtime: u
    };
  }
  async createBuyTx({
    utxos: t,
    utxoPrivateKeys: a,
    genesis: r,
    codehash: f,
    tokenIndex: i,
    sellUtxo: n,
    buyerAddress: o,
    opreturnData: s,
    changeAddress: b,
    middlePrivateKey: l,
    middleChangeAddress: v,
    publisherAddress: m,
    publisherFee: x,
    publisherFeeRate: I,
    creatorAddress: k,
    creatorFee: P,
    creatorFeeRate: M
  }) {
    let {
      nftUtxo: R
    } = await qa({
      tokenIndex: i,
      codehash: f,
      genesis: r,
      api: this.api,
      network: this.network
    });
    R = await this.pretreatNftUtxo(R, f, r);
    let F = await this.api.getRawTxData(n.txId), C = new ae.Transaction(F), L = {
      txId: n.txId,
      outputIndex: n.outputIndex,
      satoshis: C.outputs[n.outputIndex].satoshis,
      lockingScript: C.outputs[n.outputIndex].script
    };
    const U = new d7.Bytes(R.preLockingScript.toHex());
    let q = t.reduce((i7, J) => i7 + J.satoshis, 0), Z = await this._calBuyEstimateFee({
      codehash: f,
      nftUtxoSatoshis: R.satoshis,
      nftSellUtxo: L,
      sellUtxo: n,
      genesisScript: U,
      utxoMaxCount: t.length,
      opreturnData: s
    });
    if (q < Z)
      throw new te(Q7.EC_INSUFFICIENT_MVC, `Insufficient balance.It take more than ${Z}, but only ${q}.`);
    let z = R, G = s9(z.lockingScript.toBuffer()), O = O5.createContract(va.OUT_6);
    O.setFormatedDataPart({
      nftCodeHash: Q.Buffer.from(f, "hex"),
      nftID: G
    });
    const u = new He(), p = J5(u, t), d = f5({
      txComposer: u,
      lockingScript: O.lockingScript,
      dustCalculator: this.dustCalculator
    });
    let c = u9(u, v, this.feeb);
    Q5(u, p, a), n5(u, this.feeb), t = [{
      txId: u.getTxId(),
      satoshis: u.getOutput(c).satoshis,
      outputIndex: c,
      address: v
    }], a = t.map((i7) => l).filter((i7) => i7);
    let y = {
      txId: u.getTxId(),
      outputIndex: d,
      satoshis: u.getOutput(d).satoshis,
      lockingScript: u.getOutput(d).script
    };
    const S = new He();
    let T = new T9();
    const g = S.appendInput(L);
    T.addVout(L.txId, L.outputIndex);
    const w = S.appendInput(z);
    T.addVout(z.txId, z.outputIndex);
    const A = J5(S, t);
    t.forEach((i7) => {
      T.addVout(i7.txId, i7.outputIndex);
    });
    const h = S.appendInput(y);
    T.addVout(y.txId, y.outputIndex);
    let N = fr.createContract(new d7.Ripemd160(d7.toHex(new ae.Address(n.sellerAddress, this.network).hashBuffer)), n.price, new d7.Bytes(f), new d7.Bytes(d7.toHex(G)));
    const Y = Is(L.lockingScript.toBuffer());
    N.setFormatedDataPart(Y);
    const t7 = ae.Address.fromPublicKeyHash(Q.Buffer.from(N.constuctParams.senderAddress.value, "hex"), this.network), H = N.constuctParams.bsvRecAmount;
    if (S.appendP2PKHOutput({
      address: t7,
      satoshis: H
    }), m) {
      const i7 = x || Math.ceil(H * I);
      S.appendP2PKHOutput({
        address: new ae.Address(m, this.network),
        satoshis: i7
      });
    }
    if (k) {
      const i7 = P || Math.ceil(H * M);
      S.appendP2PKHOutput({
        address: new ae.Address(k, this.network),
        satoshis: i7
      });
    }
    const $ = vo(z, o), X = f5({
      txComposer: S,
      lockingScript: ae.Script.fromBuffer($),
      dustCalculator: this.dustCalculator
    });
    if (s) {
      const i7 = S.appendOpReturnOutput(s);
      S.getOutput(i7).script.toHex();
    }
    for (let i7 = 0; i7 < 2; i7++) {
      S.clearChangeOutput(), S.appendChangeOutput(b, this.feeb);
      const J = H0.createContract(this.unlockContractCodeHashArray, f);
      let _ = at(R.lockingScript.toBuffer());
      J.setFormatedDataPart(_);
      const E = R.satotxInfo.preNftInputIndex, j = new ae.Transaction(R.satotxInfo.txHex), V = Qa(j, E), n7 = new G6(V[0]), K = V[1], B = new a5(F0(R.satotxInfo.preTx, R.satotxInfo.preOutputIndex)), D = g, W = new a5(F0(C, L.outputIndex)), e7 = 1, o7 = h, a7 = u.getTx(), s7 = new a5(F0(a7, d)), u7 = a7.outputs[d].script.toBuffer(), m7 = new d7.Bytes(u7.toString("hex")), p7 = J.unlock({
        txPreimage: S.getInputPreimage(w),
        prevouts: new d7.Bytes(T.toHex()),
        prevNftInputIndex: E,
        prevNftAddress: new d7.Bytes(d7.toHex(R.preNftAddress.hashBuffer)),
        nftTxHeader: K,
        nftTxInputProof: n7,
        prevNftTxProof: B,
        genesisScript: U,
        contractInputIndex: D,
        // 销售合约输入index
        contractTxProof: W,
        // 销售和约输出证明
        amountCheckHashIndex: e7,
        // 哈希列表中的索引（？）
        amountCheckInputIndex: o7,
        // 解锁检查中的输入索引
        amountCheckTxProof: s7,
        // 解锁检查输出证明
        amountCheckScrypt: m7,
        // 解锁检查Scrypt
        operation: ma.UNLOCK_FROM_CONTRACT
      });
      if (this.debug) {
        let E7 = {
          tx: S.tx,
          inputIndex: w,
          inputSatoshis: S.getInput(w).output.satoshis
        }, $7 = p7.verify(E7);
        if ($7.success == !1)
          throw $7;
      }
      S.getInput(w).setScript(p7.toScript());
      let l7 = Q.Buffer.alloc(0);
      S.tx.outputs.forEach((E7, $7) => {
        if ($7 != X) {
          let H7 = E7.toBufferWriter().toBuffer(), P7 = Q.Buffer.alloc(4);
          P7.writeUInt32LE(H7.length), l7 = Q.Buffer.concat([l7, P7, H7]);
        }
      });
      const y7 = Ps(j, R.satotxInfo.outputIndex);
      let x7 = y.lockingScript;
      x7 = x7.subScript(0);
      const _7 = new d7.SigHashPreimage(d7.toHex(d7.getPreimage(S.getTx(), x7, y.satoshis, h)));
      let F7 = O.unlock({
        // txPreimage: txComposer.getInputPreimage(unlockCheckInputIndex),
        txPreimage: _7,
        prevouts: new d7.Bytes(T.toHex()),
        nftInputIndex: w,
        nftScript: new d7.Bytes(z.lockingScript.toHex()),
        nftTxHeader: y7.txHeader,
        nftTxHashProof: y7.hashProof,
        nftSatoshiBytes: y7.satoshiBytes,
        nOutputs: S.tx.outputs.length,
        txNftOutputIndex: X,
        nftOutputAddress: new d7.Bytes(d7.toHex(o.hashBuffer)),
        nftOutputSatoshis: S.getOutput(X).satoshis,
        otherOutputArray: new d7.Bytes(d7.toHex(l7))
      });
      if (this.debug) {
        let E7 = {
          tx: S.getTx(),
          inputIndex: h,
          inputSatoshis: S.getInput(h).output.satoshis
        }, $7 = F7.verify(E7);
        if ($7.success == !1)
          throw $7;
      }
      S.getInput(h).setScript(F7.toScript());
      let T7 = S.getInput(g).output, S7 = T7.script;
      S7 = S7.subScript(0);
      const Y7 = new d7.SigHashPreimage(d7.toHex(d7.getPreimage(S.getTx(), S7, T7.satoshis, g, K6.SIGHASH_SINGLE | K6.SIGHASH_FORKID))), k7 = N.unlock({
        txPreimage: Y7,
        op: ks.SELL
      });
      if (this.debug) {
        let E7 = {
          tx: S.getTx(),
          inputIndex: g,
          inputSatoshis: S.getInput(g).output.satoshis
        }, $7 = k7.verify(E7);
        if ($7.success == !1)
          throw $7;
      }
      S.getInput(g).setScript(k7.toScript());
    }
    return Q5(S, A, a), n5(S, this.feeb), {
      unlockCheckTxComposer: u,
      txComposer: S
    };
  }
  async createSellTx({
    utxos: t,
    utxoPrivateKeys: a,
    genesis: r,
    codehash: f,
    tokenIndex: i,
    nftUtxo: n,
    price: o,
    opreturnData: s,
    changeAddress: b,
    middlePrivateKey: l,
    middleChangeAddress: v
  }) {
    const m = o;
    n || (n = (await qa({
      tokenIndex: i,
      codehash: f,
      genesis: r,
      api: this.api,
      network: this.network
    })).nftUtxo), n = await this.pretreatNftUtxo(n, f, r);
    const x = new d7.Bytes(n.preLockingScript.toHex());
    let I = t.reduce((U, q) => U + q.satoshis, 0);
    const k = await this._calSellEstimateFee({
      utxoMaxCount: t.length,
      opreturnData: s
    }), P = await this._calTransferEstimateFee({
      nftUtxoSatoshis: n.satoshis,
      genesisScript: x,
      opreturnData: s,
      utxoMaxCount: t.length
    }), M = k + P;
    if (I < M)
      throw new te(Q7.EC_INSUFFICIENT_MVC, `Insufficient balance.It take more than ${M}, but only ${I}.`);
    let R, F;
    {
      const U = new He(), q = J5(U, t);
      F = fr.createContract(new d7.Ripemd160(d7.toHex(n.nftAddress.hashBuffer)), m, new d7.Bytes(f), new d7.Bytes(d7.toHex(s9(n.lockingScript.toBuffer())))), F.setFormatedDataPart({
        codehash: f,
        genesis: r,
        tokenIndex: he.fromString(i, 10),
        sellerAddress: d7.toHex(n.nftAddress.hashBuffer),
        satoshisPrice: he.fromNumber(m),
        nftID: d7.toHex(s9(n.lockingScript.toBuffer()))
      }), f5({
        txComposer: U,
        lockingScript: F.lockingScript,
        dustCalculator: this.dustCalculator
      });
      const Z = u9(U, v, this.feeb);
      Q5(U, q, a), n5(U, this.feeb), t = [{
        txId: U.getTxId(),
        satoshis: U.getOutput(Z).satoshis,
        outputIndex: Z,
        address: v
      }], a = t.map((z) => l).filter((z) => z), R = U;
    }
    const C = new ae.Address(zC(F.lockingScript.toBuffer()), this.network);
    if (typeof s == "object" && s.constructor === Array) {
      const U = s[5];
      let q;
      if (U) {
        try {
          q = JSON.parse(U);
        } catch {
          q = {};
        }
        q.sellContractTxId = R.getTxId(), s[5] = JSON.stringify(q);
      }
    }
    const {
      txComposer: L
    } = await this.createTransferTx({
      genesis: r,
      codehash: f,
      tokenIndex: i,
      nftUtxo: n,
      utxos: t,
      utxoPrivateKeys: a,
      receiverAddress: C,
      opreturnData: s
    });
    return {
      sellTxComposer: R,
      txComposer: L
    };
  }
  async pretreatNftUtxo(t, a, r) {
    let f = await this.api.getRawTxData(t.txId);
    const i = new ae.Transaction(f);
    let n = i.outputs[t.outputIndex].script, o = at(n.toBuffer()), s = 0, b = i.inputs.find((I, k) => {
      let P = new ae.Script(I.script);
      if (P.chunks.length > 0) {
        const M = Uy(P.chunks[0].buf);
        if (M) {
          if (ws(M) == r)
            return s = k, !0;
          let R = at(M);
          R.sensibleID = o.sensibleID, R.tokenIndex = he.Zero;
          const F = dc(M, R);
          if (d7.toHex(ae.crypto.Hash.sha256ripemd160(F)) == o.genesisHash)
            return s = k, !0;
        }
      }
    });
    if (!b)
      throw new te(Q7.EC_INNER_ERROR, "invalid nftUtxo");
    let l = b.prevTxId.toString("hex"), v = b.outputIndex, m = await this.api.getRawTxData(l);
    const x = new ae.Transaction(m);
    return t.satotxInfo = {
      txId: t.txId,
      outputIndex: t.outputIndex,
      txHex: f,
      preTxId: l,
      preNftInputIndex: s,
      preOutputIndex: v,
      preTxHex: m,
      txInputsCount: i.inputs.length,
      preTx: x
    }, t.preLockingScript = x.outputs[v].script, t.lockingScript = i.outputs[t.outputIndex].script, t.satoshis = i.outputs[t.outputIndex].satoshis, t.preNftAddress = ae.Address.fromPublicKeyHash(Q.Buffer.from(sc(x.outputs[v].script.toBuffer()), "hex"), this.network), t;
  }
  async createTransferTx({
    utxos: t,
    utxoPrivateKeys: a,
    genesis: r,
    codehash: f,
    tokenIndex: i,
    nftUtxo: n,
    opreturnData: o = null,
    receiverAddress: s
  }) {
    const b = new He(), l = this.purse.address;
    let v = new T9();
    n || (n = (await qa({
      tokenIndex: i,
      codehash: f,
      genesis: r,
      api: this.api,
      network: this.network
    })).nftUtxo, n = await this.pretreatNftUtxo(n, f, r));
    const m = new d7.Bytes(n.preLockingScript.toHex());
    let x = t.reduce((U, q) => U + q.satoshis, 0), I = await this._calTransferEstimateFee({
      nftUtxoSatoshis: n.satoshis,
      genesisScript: m,
      opreturnData: o,
      utxoMaxCount: t.length
    });
    if (x < I)
      throw new te(Q7.EC_INSUFFICIENT_MVC, `Insufficient balance.It take more than ${I}, but only ${x}.`);
    const k = n, P = this.purse.address.toString(), M = Os(b, k, P, I5.BCP01_NFT_GENESIS);
    v.addVout(k.txId, k.outputIndex);
    const R = J5(b, t);
    t.forEach((U) => {
      v.addVout(U.txId, U.outputIndex);
    });
    const F = vo(n, s), C = f5({
      txComposer: b,
      lockingScript: ae.Script.fromBuffer(F),
      dustCalculator: this.dustCalculator
    });
    let L = "";
    if (o) {
      const U = c9(b, o);
      L = b.getOutput(U).script.toHex();
    }
    return this.unlockNftAndChange({
      txComposer: b,
      nftUtxo: n,
      nftInputIndex: M,
      codehash: f,
      prevouts: v,
      genesisScript: m,
      nftOutputIndex: C,
      receiverAddress: s,
      changeAddress: l,
      opreturnScriptHex: L
    }), Q5(b, R, a), n5(b, this.feeb), {
      txComposer: b
    };
  }
  async createMintTx({
    utxos: t,
    utxoPrivateKeys: a,
    sensibleId: r,
    metaTxId: f,
    metaOutputIndex: i,
    opreturnData: n,
    receiverAddress: o,
    changeAddress: s,
    calcFee: b = !1
  }) {
    const l = new He(), {
      genesisContract: v,
      genesisUtxo: m,
      genesisTxId: x,
      genesisOutputIndex: I
    } = await Dp({
      sensibleId: r,
      api: this.api,
      address: this.purse.address,
      type: "nft"
    });
    let k = t.reduce((d, c) => d + c.satoshis, 0), P = await this._calIssueEstimateFee({
      genesisUtxoSatoshis: m.satoshis,
      opreturnData: n,
      utxoMaxCount: t.length
    });
    if (b)
      return {
        fee: P,
        txid: l.getTxId,
        txHex: l.getRawHex(),
        tx: l.getTx()
      };
    if (k < P)
      throw new te(Q7.EC_INSUFFICIENT_MVC, `Insufficient balance.It take more than ${P}, but only ${k}.`);
    const M = this.purse.address.toString(), R = Os(l, m, M, I5.BCP01_NFT_GENESIS), F = J5(l, t), C = {
      txid: x,
      index: I
    }, L = v.getFormatedDataPart(), U = L.tokenIndex, q = L.totalSupply;
    let Z = -1;
    if (U.lt(q.sub(he.One))) {
      const d = this.updateGenesisContract(v, C);
      Z = f5({
        txComposer: l,
        contract: d,
        dustCalculator: this.dustCalculator
      });
    }
    const z = this.getGenesisHash(v, C), G = Lz({
      genesisHash: z,
      genesisContract: v,
      metaTxId: f,
      metaOutputIndex: i,
      sensibleID: C,
      receiverAddress: o,
      unlockContractCodeHashArray: this.unlockContractCodeHashArray
    }), O = f5({
      txComposer: l,
      contract: G,
      dustCalculator: this.dustCalculator
    });
    let u = "";
    if (n) {
      const d = c9(l, n);
      u = l.getOutput(d).script.toHex();
    }
    this.unlockGenesisAndChange(l, m, v, R, Z, O, s, u), Q5(l, F, a), n5(l, this.feeb);
    const p = G.getFormatedDataPart().tokenIndex.toString(10);
    return {
      txComposer: l,
      tokenIndex: p
    };
  }
  // 获取初始创世合约的哈希值供铸造合约使用
  getGenesisHash(t, a) {
    let r = t.getFormatedDataPart();
    t.setFormatedDataPart({
      sensibleID: a,
      tokenIndex: he.Zero
    });
    let f = t.getScriptHash();
    return t.setFormatedDataPart(r), f;
  }
  // 复制更新创世合约
  updateGenesisContract(t, a) {
    const r = t.getFormatedDataPart();
    if (r.tokenIndex.lt(r.totalSupply.sub(he.One))) {
      let f = t.clone();
      return f.setFormatedDataPart(r), f.setFormatedDataPart({
        tokenIndex: r.tokenIndex.add(he.One),
        sensibleID: a
      }), f;
    }
  }
  // 解锁创世合约并找零
  unlockGenesisAndChange(t, a, r, f, i, n, o, s) {
    const b = ae.PrivateKey.fromWIF(this.purse.privateKey.toWIF()), l = b.toPublicKey(), v = new d7.PubKey(d7.toHex(l)), {
      genesisTxHeader: m,
      prevInputIndex: x,
      genesisTxInputProof: I
    } = jz(a), {
      prevGenesisTxHeader: k,
      prevTxOutputHashProof: P,
      prevTxOutputSatoshiBytes: M
    } = Vz(a), R = i > -1 ? t.getOutput(i).satoshis : 0;
    for (let F = 0; F < 2; F++) {
      t.clearChangeOutput();
      const C = t.appendChangeOutput(o, this.feeb), L = t.getInputPreimage(f), U = new d7.Sig(b ? d7.toHex(t.getTxFormatSig(b, f)) : v9);
      let q = r.unlock({
        txPreimage: L,
        pubKey: v,
        sig: U,
        // GenesisTx Input Proof
        genesisTxHeader: m,
        prevInputIndex: x,
        genesisTxInputProof: I,
        prevGenesisTxHeader: k,
        prevTxOutputHashProof: P,
        prevTxOutputSatoshiBytes: M,
        nftScript: new d7.Bytes(t.getOutput(n).script.toHex()),
        genesisSatoshis: R,
        nftSatoshis: t.getOutput(n).satoshis,
        changeAddress: new d7.Ripemd160(o.hashBuffer.toString("hex")),
        changeSatoshis: C != -1 ? t.getOutput(C).satoshis : 0,
        opReturnScript: new d7.Bytes(s)
      });
      if (this.debug && b && F == 1) {
        let Z = q.verify({
          tx: t.getTx(),
          inputIndex: 0,
          inputSatoshis: t.getInput(f).output.satoshis
        });
        if (Z.success == !1)
          throw Z;
      }
      t.getInput(f).setScript(q.toScript());
    }
  }
  // 解锁NFT合约并找零
  unlockNftAndChange({
    txComposer: t,
    nftUtxo: a,
    nftInputIndex: r,
    codehash: f,
    prevouts: i,
    genesisScript: n,
    nftOutputIndex: o,
    receiverAddress: s,
    changeAddress: b,
    opreturnScriptHex: l
  }) {
    const v = this.purse.privateKey, m = v.toPublicKey();
    for (let x = 0; x < 2; x++) {
      t.clearChangeOutput();
      const I = t.appendChangeOutput(b, this.feeb), k = H0.createContract(this.unlockContractCodeHashArray, f);
      let P = at(a.lockingScript.toBuffer());
      k.setFormatedDataPart(P);
      const M = a.satotxInfo.preNftInputIndex, R = new ae.Transaction(a.satotxInfo.txHex), F = Qa(R, M), C = new G6(F[0]), L = F[1], U = new a5(F0(a.satotxInfo.preTx, a.satotxInfo.preOutputIndex)), q = 0, Z = new a5(n9()), z = Q.Buffer.alloc(0), G = 0, O = t.getTx().inputs.length - 1, u = new a5(n9()), p = new d7.Bytes(z.toString("hex")), d = k.unlock({
        txPreimage: t.getInputPreimage(r),
        prevouts: new d7.Bytes(i.toHex()),
        prevNftInputIndex: M,
        prevNftAddress: new d7.Bytes(d7.toHex(a.preNftAddress.hashBuffer)),
        nftTxHeader: L,
        nftTxInputProof: C,
        prevNftTxProof: U,
        genesisScript: n,
        contractInputIndex: q,
        contractTxProof: Z,
        amountCheckHashIndex: G,
        amountCheckInputIndex: O,
        amountCheckTxProof: u,
        amountCheckScrypt: p,
        senderPubKey: new d7.PubKey(d7.toHex(m)),
        senderSig: new d7.Sig(d7.toHex(t.getTxFormatSig(v, r))),
        receiverAddress: new d7.Bytes(d7.toHex(s.hashBuffer)),
        nftOutputSatoshis: new d7.Int(t.getOutput(o).satoshis),
        opReturnScript: new d7.Bytes(l),
        changeAddress: new d7.Ripemd160(d7.toHex(b.hashBuffer)),
        changeSatoshis: new d7.Int(I != -1 ? t.getOutput(I).satoshis : 0),
        operation: ma.TRANSFER
      });
      if (this.debug && v) {
        let c = {
          tx: t.tx,
          inputIndex: r,
          inputSatoshis: t.getInput(r).output.satoshis
        }, y = d.verify(c);
        if (y.success == !1)
          throw y;
      }
      t.getInput(r).setScript(d.toScript());
    }
  }
  // 解锁NFT合约并找零(合约)
  unlockNftAndChangeFromContract({
    txComposer: t,
    nftUtxo: a,
    nftInputIndex: r,
    codehash: f,
    prevouts: i,
    genesisScript: n,
    nftOutputIndex: o,
    sellInputIndex: s,
    receiverAddress: b,
    changeAddress: l,
    opreturnScriptHex: v
  }) {
    const m = this.purse.privateKey, x = m.toPublicKey();
    for (let I = 0; I < 2; I++) {
      t.clearChangeOutput();
      const k = t.appendChangeOutput(l, this.feeb), P = H0.createContract(this.unlockContractCodeHashArray, f);
      let M = at(a.lockingScript.toBuffer());
      P.setFormatedDataPart(M);
      const R = a.satotxInfo.preNftInputIndex, F = new ae.Transaction(a.satotxInfo.txHex), C = Qa(F, R), L = new G6(C[0]), U = C[1], q = new a5(F0(a.satotxInfo.preTx, a.satotxInfo.preOutputIndex)), Z = s, z = new a5(n9()), G = Q.Buffer.alloc(0), O = 0, u = t.getTx().inputs.length - 1, p = new a5(n9()), d = new d7.Bytes(G.toString("hex")), c = P.unlock({
        txPreimage: t.getInputPreimage(r),
        prevouts: new d7.Bytes(i.toHex()),
        prevNftInputIndex: R,
        prevNftAddress: new d7.Bytes(d7.toHex(a.preNftAddress.hashBuffer)),
        nftTxHeader: U,
        nftTxInputProof: L,
        prevNftTxProof: q,
        genesisScript: n,
        contractInputIndex: Z,
        // 销售合约输入index
        contractTxProof: z,
        amountCheckHashIndex: O,
        amountCheckInputIndex: u,
        amountCheckTxProof: p,
        amountCheckScrypt: d,
        senderPubKey: new d7.PubKey(d7.toHex(x)),
        senderSig: new d7.Sig(d7.toHex(t.getTxFormatSig(m, r))),
        receiverAddress: new d7.Bytes(d7.toHex(b.hashBuffer)),
        nftOutputSatoshis: new d7.Int(t.getOutput(o).satoshis),
        opReturnScript: new d7.Bytes(v),
        changeAddress: new d7.Ripemd160(d7.toHex(l.hashBuffer)),
        changeSatoshis: new d7.Int(k != -1 ? t.getOutput(k).satoshis : 0),
        operation: ma.TRANSFER
      });
      if (this.debug && m) {
        let y = {
          tx: t.tx,
          inputIndex: r,
          inputSatoshis: t.getInput(r).output.satoshis
        }, S = c.verify(y);
        if (S.success == !1)
          throw S;
      }
      t.getInput(r).setScript(c.toScript());
    }
  }
  async _calGenesisEstimateFee(t, a, r) {
    const f = new He();
    this.purse.address, Fp({
      totalSupply: t,
      address: this.purse.address
    }), a && c9(f, a);
    const i = f.tx.inputs.filter((o) => o.output.script.isPublicKeyHashOut()).length * Lf;
    return Math.ceil((f.tx.toBuffer().length + i + ae.Transaction.CHANGE_OUTPUT_MAX_SIZE) * r);
  }
  async _calIssueEstimateFee({
    genesisUtxoSatoshis: t,
    opreturnData: a,
    utxoMaxCount: r = 10
  }) {
    let f = r, i = new ft(this.feeb, this.dustCalculator);
    i.addInput(Vt.calUnlockingScriptSize(a), t);
    for (let n = 0; n < f; n++)
      i.addP2PKHInput();
    return i.addOutput(Vt.getLockingScriptSize()), i.addOutput(H0.getLockingScriptSize()), a && i.addOpReturnOutput(ae.Script.buildSafeDataOut(a).toBuffer().length), i.addP2PKHOutput(), i.getFee();
  }
  async _calTransferEstimateFee({
    nftUtxoSatoshis: t,
    genesisScript: a,
    opreturnData: r,
    utxoMaxCount: f
  }) {
    let i = f, n = new ft(this.feeb, this.dustCalculator);
    n.addInput(H0.calUnlockingScriptSize(i, a, r, ma.TRANSFER), t);
    for (let o = 0; o < i; o++)
      n.addP2PKHInput();
    return n.addOutput(H0.getLockingScriptSize()), r && n.addOpReturnOutput(ae.Script.buildSafeDataOut(r).toBuffer().length), n.addP2PKHOutput(), n.getFee();
  }
  static parseTokenScript(t, a = Oa.MAIN) {
    if (!ic(t))
      return null;
    const r = at(t), f = ae.Address.fromPublicKeyHash(Q.Buffer.from(r.nftAddress, "hex"), a).toString(), i = ws(t), n = sx(t), o = dx(t);
    return {
      codehash: n,
      genesis: i,
      sensibleId: o,
      metaidOutpoint: r.metaidOutpoint,
      nftAddress: f,
      totalSupply: r.totalSupply,
      tokenIndex: r.tokenIndex,
      genesisHash: r.genesisHash,
      sensibleID: r.sensibleID,
      protoVersion: r.protoVersion,
      protoType: r.protoType
    };
  }
  async getCancelSellEstimateFee({
    genesis: t,
    codehash: a,
    tokenIndex: r,
    sellerWif: f,
    sellUtxo: i,
    opreturnData: n,
    utxoMaxCount: o = 3
  }) {
    return 32e3;
  }
  async getBuyEstimateFee({
    genesis: t,
    codehash: a,
    tokenIndex: r,
    buyerWif: f,
    sellUtxo: i,
    opreturnData: n,
    utxoMaxCount: o = 3
  }) {
    if (i || (i = await this.api.getNftSellUtxo(a, t, r)), !i)
      throw new te(Q7.EC_NFT_NOT_ON_SELL, "The NFT is not for sale because the corresponding SellUtxo cannot be found.");
    return Math.ceil(i.price * 1.06) + 25e3;
  }
  async getSellEstimateFee({
    genesis: t,
    codehash: a,
    tokenIndex: r,
    senderWif: f,
    opreturnData: i,
    utxoMaxCount: n = 10
  }) {
    new ae.PrivateKey(f).publicKey;
    let {
      nftUtxo: s
    } = await qa({
      tokenIndex: r,
      codehash: a,
      genesis: t,
      api: this.api,
      network: this.network
    });
    s = await this.pretreatNftUtxo(s, a, t);
    let b = s.preNftAddress.hashBuffer.equals(Q.Buffer.alloc(20, 0)) ? new d7.Bytes(s.preLockingScript.toHex()) : new d7.Bytes(""), l = await this._calSellEstimateFee({
      utxoMaxCount: n,
      opreturnData: i
    }), v = await this._calTransferEstimateFee({
      nftUtxoSatoshis: s.satoshis,
      genesisScript: b,
      opreturnData: i,
      utxoMaxCount: 1
    });
    return l + v + 2e3;
  }
  async _calSellEstimateFee({
    utxoMaxCount: t,
    opreturnData: a
  }) {
    let r = t, f = new ft(this.feeb, this.dustCalculator);
    for (let i = 0; i < r; i++)
      f.addP2PKHInput();
    return f.addOutput(fr.getLockingScriptSize()), a && f.addOpReturnOutput(ae.Script.buildSafeDataOut(a).toBuffer().length), f.addP2PKHOutput(), f.getFee();
  }
  async _calCancelSellEstimateFee({
    codehash: t,
    nftUtxoSatoshis: a,
    nftSellUtxo: r,
    genesisScript: f,
    opreturnData: i,
    utxoMaxCount: n
  }) {
    return 25e3;
  }
  async _calBuyEstimateFee({
    codehash: t,
    nftUtxoSatoshis: a,
    nftSellUtxo: r,
    sellUtxo: f,
    genesisScript: i,
    opreturnData: n,
    utxoMaxCount: o
  }) {
    return Math.ceil(f.price * 1.06) + 25e3;
  }
  _checkRoyaltyParams({
    price: t,
    publisherAddress: a,
    publisherFee: r,
    publisherFeeRate: f,
    creatorAddress: i,
    creatorFee: n,
    creatorFeeRate: o
  }) {
    if (!a && (r || f))
      throw new te(Q7.EC_INVALID_ARGUMENT, "publisherAddress is not set, but publisherFee or publisherFeeRate is set.");
    if (!i && (n || o))
      throw new te(Q7.EC_INVALID_ARGUMENT, "creatorAddress is not set, but creatorFee or creatorFeeRate is set.");
    if (a && !r && !f)
      throw new te(Q7.EC_INVALID_ARGUMENT, "publisherAddress is set, but publisherFee and publisherFeeRate are not set.");
    if (a && r && f)
      throw new te(Q7.EC_INVALID_ARGUMENT, "publisherAddress is set, but publisherFee and publisherFeeRate are set.");
    if (i && !n && !o)
      throw new te(Q7.EC_INVALID_ARGUMENT, "creatorAddress is set, but creatorFee and creatorFeeRate are not set.");
    if (i && n && o)
      throw new te(Q7.EC_INVALID_ARGUMENT, "creatorAddress is set, but creatorFee and creatorFeeRate are set.");
    if (r && r < this.dustCalculator.getDustThreshold(1))
      throw new te(Q7.EC_INVALID_ARGUMENT, "publisherFee is too small. It should be at least 546 satoshis.");
    if (f && f * t < this.dustCalculator.getDustThreshold(1))
      throw new te(Q7.EC_INVALID_ARGUMENT, "publisherFeeRate is too small. It should be at least 546 satoshis.");
    if (n && n < this.dustCalculator.getDustThreshold(1))
      throw new te(Q7.EC_INVALID_ARGUMENT, "creatorFee is too small. It should be at least 546 satoshis.");
    if (o && o * t < this.dustCalculator.getDustThreshold(1))
      throw new te(Q7.EC_INVALID_ARGUMENT, "creatorFeeRate is too small. It should be at least 546 satoshis.");
    return !0;
  }
}
const Kz = 9, Gz = "1.19.0+commit.72eaeba", Wz = "TxUtil", Zz = "2920f04d42c66cf433d55b6e738ee31e", Yz = [
  {
    name: "LockingScriptParts",
    params: [
      {
        name: "code",
        type: "bytes"
      },
      {
        name: "data",
        type: "bytes"
      }
    ],
    genericTypes: []
  },
  {
    name: "OpPushData",
    params: [
      {
        name: "len",
        type: "int"
      },
      {
        name: "value",
        type: "int"
      }
    ],
    genericTypes: []
  },
  {
    name: "VarIntData",
    params: [
      {
        name: "len",
        type: "int"
      },
      {
        name: "value",
        type: "int"
      }
    ],
    genericTypes: []
  },
  {
    name: "TxInputProof",
    params: [
      {
        name: "hashProof",
        type: "bytes"
      },
      {
        name: "txHash",
        type: "bytes"
      },
      {
        name: "outputIndexBytes",
        type: "bytes"
      },
      {
        name: "sequenceBytes",
        type: "bytes"
      }
    ],
    genericTypes: []
  },
  {
    name: "TxOutputProof",
    params: [
      {
        name: "txHeader",
        type: "bytes"
      },
      {
        name: "hashProof",
        type: "bytes"
      },
      {
        name: "satoshiBytes",
        type: "bytes"
      },
      {
        name: "scriptHash",
        type: "bytes"
      }
    ],
    genericTypes: []
  }
], Xz = [
  {
    name: "TxUtil",
    params: [],
    properties: [],
    genericTypes: []
  }
], Jz = [], Qz = [
  {
    type: "constructor",
    params: []
  }
], eq = [], tq = "debug", aq = "file:///Users/ivan/Codes/blockchain/meta-contract/src/mcp02/contract/txUtil.scrypt", rq = "", fq = "", iq = {
  version: Kz,
  compilerVersion: Gz,
  contract: Wz,
  md5: Zz,
  structs: Yz,
  library: Xz,
  alias: Jz,
  abi: Qz,
  stateProps: eq,
  buildType: tq,
  file: aq,
  hex: rq,
  sourceMapFile: fq
};
function K0(e, t) {
  if (!e)
    throw new te(Q7.EC_INVALID_ARGUMENT, "Invalid Argument: " + t);
}
const nq = iq, {
  TxInputProof: yo,
  TxOutputProof: Nr
} = d7.buildTypeClasses(nq), $p = d7.mvc.crypto.Signature, A9 = d7.mvc.deps._, Cr = $p.SIGHASH_ALL | $p.SIGHASH_FORKID;
Aa.init();
function jp(e) {
  K0(A9.isString(e), "Invalid Argument: genesis should be a string"), K0(e.length == 40, "Invalid Argument: genesis.length must be 40");
}
function Vp(e) {
  K0(A9.isString(e), "Invalid Argument: codehash should be a string"), K0(e.length == 40, "Invalid Argument: codehash.length must be 40"), K0(e == Aa.tokenCodeHash || e == Aa.tokenGenesisCodeHash || e === "57344f46cc0d0c8dfea7af3300b1b3a0f4216c04" || e === "a2421f1e90c6048c36745edd44fad682e8644693", `a valid codehash should be ${Aa.tokenCodeHash}, but the provided is ${e} `);
}
function oq(e) {
  const t = "ReceiversFormatError";
  if (q2(e))
    throw new te(Q7.EC_INVALID_ARGUMENT, `${t}: param should not be null`);
  if (e.length > 0) {
    let a = e[0];
    if (q2(a.address) || q2(a.amount))
      throw new te(Q7.EC_INVALID_ARGUMENT, `${t}-valid format example
      [
        {
          address: "mtjjuRuA84b2qVyo28AyJQ8AoUmpbWEqs3",
          amount: "1000",
        },
      ]
      `);
    if (new he(a.amount.toString()).lten(0))
      throw `receiver amount must greater than 0 but now is ${a.amount}`;
  }
}
function sq(e) {
  let t = Q.Buffer.from(e, "hex"), a = t.slice(0, 32).reverse().toString("hex"), r = t.readUIntLE(32, 4);
  return {
    genesisTxId: a,
    genesisOutputIndex: r
  };
}
class Fx {
  get api() {
    return this._api;
  }
  get sensibleApi() {
    return this._api;
  }
  constructor({
    network: t = Oa.MAIN,
    apiTarget: a = an.MVC,
    purse: r,
    feeb: f = Dx,
    apiHost: i,
    dustLimitFactor: n = 300,
    dustAmount: o,
    debug: s = !1
  }) {
    if (this.network = t, this._api = new rc(t, a, i), r) {
      const b = d7.mvc.PrivateKey.fromWIF(r), l = b.toAddress(t);
      this.purse = {
        privateKey: b,
        address: l
      };
    }
    this.zeroAddress = new d7.mvc.Address(Up, t), this.dustCalculator = new Fy(n, o), this.transferCheckCodeHashArray = Aa.transferCheckCodeHashArray, this.unlockContractCodeHashArray = Aa.unlockContractCodeHashArray, this.feeb = f, this.debug = s;
  }
  /**
   * Create a transaction for genesis
   * @param tokenName token name, limited to 20 bytes
   * @param tokenSymbol the token symbol, limited to 10 bytes
   * @param decimalNum the decimal number, range 0-255
   * @param utxos (Optional) specify mvc utxos
   * @param changeAddress (Optional) specify mvc changeAddress
   * @param opreturnData (Optional) append an opReturn output
   * @param genesisWif the private key of the token genesiser
   * @param noBroadcast (Optional) whether not to broadcast the transaction, the default is false
   * @returns
   */
  async genesis({
    tokenName: t,
    tokenSymbol: a,
    decimalNum: r,
    utxos: f,
    changeAddress: i,
    opreturnData: n,
    genesisWif: o,
    noBroadcast: s = !1
  }) {
    K0(A9.isString(t) && Q.Buffer.from(t).length <= 40, "tokenName should be a string and not be larger than 40 bytes"), K0(A9.isString(a) && Q.Buffer.from(a).length <= 10, "tokenSymbol should be a string and not be larger than 10 bytes"), K0(A9.isNumber(r) && r >= 0 && r <= 255, "decimalNum should be a number and must be between 0 and 255");
    const b = await Ka(this.purse, this.api, this.network, f);
    i ? i = new d7.mvc.Address(i, this.network) : i = b.utxos[0].address;
    const l = o ? d7.mvc.PrivateKey.fromWIF(o).toAddress(this.network) : this.purse.address;
    let {
      txComposer: v
    } = await this._genesis({
      tokenName: t,
      tokenSymbol: a,
      decimalNum: r,
      utxos: b.utxos,
      utxoPrivateKeys: b.utxoPrivateKeys,
      changeAddress: i,
      tokenAddress: l.hashBuffer.toString("hex"),
      opreturnData: n
    }), m = v.getRawHex();
    s || await this.api.broadcast(m);
    let {
      codehash: x,
      genesis: I,
      sensibleId: k
    } = Bx({
      genesisTx: v.getTx(),
      purse: {
        address: l,
        privateKey: this.purse.privateKey
      },
      transferCheckCodeHashArray: this.transferCheckCodeHashArray,
      unlockContractCodeHashArray: this.unlockContractCodeHashArray,
      type: "ft"
    });
    return {
      txHex: m,
      txid: v.getTxId(),
      tx: v.getTx(),
      codehash: x,
      genesis: I,
      sensibleId: k
    };
  }
  async issue(t) {
    return this.mint(t);
  }
  async mint({
    // genesis,
    // codehash,
    sensibleId: t,
    genesisWif: a,
    receiverAddress: r,
    tokenAmount: f,
    allowIncreaseMints: i = !0,
    utxos: n,
    changeAddress: o,
    opreturnData: s,
    noBroadcast: b = !1
  }) {
    K0(t, "sensibleId is required"), K0(a, "genesisWif is required"), K0(r, "receiverAddress is required"), K0(f, "tokenAmount is required");
    const l = await this._pretreatUtxos(n);
    o ? o = new d7.mvc.Address(o, this.network) : o = l.utxos[0].address;
    let v = new d7.mvc.PrivateKey(a), m = v.toPublicKey();
    r = new d7.mvc.Address(r, this.network), f = new he(f.toString());
    let {
      txComposer: x
    } = await this._mint({
      // genesis,
      // codehash,
      sensibleId: t,
      receiverAddress: r,
      tokenAmount: f,
      allowIncreaseMints: i,
      utxos: l.utxos,
      utxoPrivateKeys: l.utxoPrivateKeys,
      changeAddress: o,
      opreturnData: s,
      genesisPrivateKey: v,
      genesisPublicKey: m
    }), I = x.getRawHex();
    return b || await this.api.broadcast(I), {
      txHex: I,
      txid: x.getTxId(),
      tx: x.getTx()
    };
  }
  async _mint({
    // genesis,
    // codehash,
    sensibleId: t,
    receiverAddress: a,
    tokenAmount: r,
    allowIncreaseMints: f = !0,
    utxos: i,
    utxoPrivateKeys: n,
    changeAddress: o,
    opreturnData: s,
    genesisPrivateKey: b,
    genesisPublicKey: l
  }) {
    const v = b.toAddress(this.network).toString();
    let {
      genesisContract: m,
      genesisTxId: x,
      genesisOutputIndex: I,
      genesisUtxo: k
    } = await this._prepareMintUtxo({
      sensibleId: t,
      genesisAddress: v
    }), P = i.reduce((h, N) => h + N.satoshis, 0), M = await this._calMintEstimateFee({
      genesisUtxoSatoshis: k.satoshis,
      opreturnData: s,
      allowIncreaseMints: f,
      utxoMaxCount: i.length
    });
    if (P < M)
      throw new te(Q7.EC_INSUFFICIENT_MVC, `Insufficient balance.It take more than ${M}, but only ${P}.`);
    let R = m.clone();
    R.setFormatedDataPart({
      sensibleID: {
        txid: x,
        index: I
      }
    });
    let F = G0.createContract(this.transferCheckCodeHashArray, this.unlockContractCodeHashArray);
    F.setFormatedDataPart(Object.assign({}, R.getFormatedDataPart(), {
      tokenAddress: d7.toHex(a.hashBuffer),
      tokenAmount: r,
      genesisHash: R.getScriptHash()
    }));
    const C = new He(), L = Os(C, k, l.toAddress(this.network).toString(), I5.BCP02_TOKEN_GENESIS), U = J5(C, i);
    let q = -1;
    f && (q = f5({
      txComposer: C,
      contract: R,
      dustCalculator: this.dustCalculator
    }));
    const Z = f5({
      txComposer: C,
      contract: F,
      dustCalculator: this.dustCalculator
    });
    let z = "";
    if (s) {
      const h = c9(C, s);
      z = C.getOutput(h).script.toHex();
    }
    const G = 0, O = k.satotxInfo.tx, u = Qa(O, G), p = new yo(u[0]), d = u[1], c = O.inputs[G], y = c.outputIndex, S = c.prevTxId.toString("hex"), T = await this.api.getRawTxData(S), g = new d7.mvc.Transaction(T), w = F0(g, y), A = new d7.PubKey(l.toHex());
    for (let h = 0; h < 2; h++) {
      C.clearChangeOutput();
      const N = C.appendChangeOutput(o, this.feeb);
      let Y = m.unlock({
        txPreimage: C.getInputPreimage(L),
        pubKey: A,
        sig: new d7.Sig(b ? d7.toHex(C.getTxFormatSig(b, L)) : v9),
        tokenScript: new d7.Bytes(C.getOutput(Z).script.toHex()),
        // GenesisTx Input Proof
        genesisTxHeader: d,
        prevInputIndex: G,
        genesisTxInputProof: p,
        // Prev GenesisTx Output Proof
        prevGenesisTxHeader: w.txHeader,
        prevTxOutputHashProof: w.hashProof,
        prevTxOutputSatoshiBytes: w.satoshiBytes,
        genesisSatoshis: q != -1 ? C.getOutput(q).satoshis : 0,
        tokenSatoshis: C.getOutput(Z).satoshis,
        changeSatoshis: N != -1 ? C.getOutput(N).satoshis : 0,
        changeAddress: new d7.Ripemd160(d7.toHex(o.hashBuffer)),
        opReturnScript: new d7.Bytes(z)
      });
      if (this.debug && b && h == 1) {
        let t7 = Y.verify({
          tx: C.tx,
          inputIndex: L,
          inputSatoshis: C.getInput(L).output.satoshis
        });
        if (t7.success == !1)
          throw t7;
      }
      C.getInput(L).setScript(Y.toScript());
    }
    return Q5(C, U, n), n5(C, this.feeb), {
      txComposer: C
    };
  }
  async _prepareMintUtxo({
    sensibleId: t,
    genesisAddress: a
  }) {
    let r = M5.createContract(), {
      genesisTxId: f,
      genesisOutputIndex: i
    } = sq(t), n = await this._getMintUtxo(r.getCodeHash(), f, i, a);
    if (!n)
      throw new te(Q7.EC_FIXED_TOKEN_SUPPLY, "token supply is fixed");
    let o = await this.api.getRawTxData(n.txId);
    const s = new d7.mvc.Transaction(o);
    let b = s.inputs[0].prevTxId.toString("hex"), l = s.inputs[0].outputIndex, v = await this.api.getRawTxData(b);
    n.satotxInfo = {
      txId: n.txId,
      outputIndex: n.outputIndex,
      txHex: o,
      preTxId: b,
      preOutputIndex: l,
      preTxHex: v,
      tx: s
    };
    let m = s.outputs[n.outputIndex];
    return n.satoshis = m.satoshis, n.lockingScript = m.script, r.setFormatedDataPartFromLockingScript(n.lockingScript), {
      genesisContract: r,
      genesisTxId: f,
      genesisOutputIndex: i,
      genesisUtxo: n
    };
  }
  async _getMintUtxo(t, a, r, f) {
    let i, n = await this.api.getRawTxData(a), s = new d7.mvc.Transaction(n).outputs[r].script.toBuffer(), b = d9(s);
    if (i = (await this.api.getFungibleTokenUnspents(t, b, f)).find((v) => v.txId == a && v.outputIndex == r), !i) {
      let v = Rt(s);
      v.sensibleID = {
        txid: a,
        index: r
      };
      let m = Es(s, v), x = d9(m), I = await this.api.getFungibleTokenUnspents(t, x, f);
      I.length > 0 && (i = I[0]);
    }
    if (i)
      return {
        txId: i.txId,
        outputIndex: i.outputIndex
      };
  }
  async _calMintEstimateFee({
    genesisUtxoSatoshis: t,
    opreturnData: a,
    allowIncreaseMints: r = !0,
    utxoMaxCount: f = 10
  }) {
    let i = f, n = new ft(this.feeb, this.dustCalculator);
    n.addInput(M5.calUnlockingScriptSize(a), t);
    for (let o = 0; o < i; o++)
      n.addP2PKHInput();
    return r && n.addOutput(M5.getLockingScriptSize()), n.addOutput(G0.getLockingScriptSize()), a && n.addOpReturnOutput(d7.mvc.Script.buildSafeDataOut(a).toBuffer().length), n.addP2PKHOutput(), n.getFee();
  }
  async merge({
    codehash: t,
    genesis: a,
    ownerWif: r,
    utxos: f,
    changeAddress: i,
    noBroadcast: n = !1,
    opreturnData: o
  }) {
    return K0(r, "ownerWif is required"), await this.transfer({
      codehash: t,
      genesis: a,
      senderWif: r,
      utxos: f,
      changeAddress: i,
      isMerge: !0,
      noBroadcast: n,
      receivers: [],
      opreturnData: o
    });
  }
  async _pretreatUtxos(t) {
    let a = [], r = [];
    if (t)
      t.forEach((f) => {
        if (f.wif) {
          let i = new d7.mvc.PrivateKey(f.wif);
          a.push(i), f.address = i.toAddress(this.network).toString();
        }
      });
    else {
      if (!this.purse)
        throw new te(Q7.EC_INVALID_ARGUMENT, "Utxos or Purse must be provided.");
      t = await this.api.getUnspents(this.purse.address.toString()), t.forEach((f) => {
        a.push(this.purse.privateKey);
      });
    }
    if (t.forEach((f) => {
      r.push({
        txId: f.txId,
        outputIndex: f.outputIndex,
        satoshis: f.satoshis,
        address: new d7.mvc.Address(f.address, this.network)
      });
    }), r.length == 0)
      throw new te(Q7.EC_INSUFFICIENT_MVC, "Insufficient balance.");
    return {
      utxos: r,
      utxoPrivateKeys: a
    };
  }
  /**
   * Estimate the cost of genesis
   * @param opreturnData
   * @param utxoMaxCount Maximum number of MVC UTXOs supported
   * @returns
   */
  async getGenesisEstimateFee({
    opreturnData: t,
    utxoMaxCount: a = 10
  }) {
    const r = a, f = M5.getLockingScriptSize();
    let i = new ft(this.feeb, this.dustCalculator);
    for (let n = 0; n < r; n++)
      i.addP2PKHInput();
    return i.addOutput(f), t && i.addOpReturnOutput(d7.mvc.Script.buildSafeDataOut(t).toBuffer().length), i.addP2PKHOutput(), i.getFee();
  }
  async _genesis({
    tokenName: t,
    tokenSymbol: a,
    decimalNum: r,
    utxos: f,
    utxoPrivateKeys: i,
    changeAddress: n,
    tokenAddress: o,
    opreturnData: s
  }) {
    let b = M5.createContract();
    b.setFormatedDataPart({
      tokenName: t,
      tokenSymbol: a,
      decimalNum: r,
      tokenAddress: o
    });
    let l = await this.getGenesisEstimateFee({
      opreturnData: s,
      utxoMaxCount: f.length
    });
    const v = f.reduce((I, k) => I + k.satoshis, 0);
    if (v < l)
      throw new te(Q7.EC_INSUFFICIENT_MVC, `Insufficient balance.It take more than ${l}, but only ${v}.`);
    const m = new He(), x = J5(m, f);
    return f5({
      txComposer: m,
      contract: b,
      dustCalculator: this.dustCalculator
    }), s && m.appendOpReturnOutput(s), u9(m, n, this.feeb), Q5(m, x, i), n5(m, this.feeb), {
      txComposer: m
    };
  }
  async transfer({
    codehash: t,
    genesis: a,
    receivers: r,
    senderWif: f,
    ftUtxos: i,
    ftChangeAddress: n,
    utxos: o,
    changeAddress: s,
    middleChangeAddress: b,
    middlePrivateKey: l,
    minUtxoSet: v = !0,
    isMerge: m,
    opreturnData: x,
    noBroadcast: I = !1
  }) {
    jp(a), Vp(t), oq(r);
    let k, P;
    f && (k = new d7.mvc.PrivateKey(f));
    let M = await this._pretreatUtxos(o);
    s ? s = new d7.mvc.Address(s, this.network) : s = M.utxos[0].address, b ? (b = new d7.mvc.Address(b, this.network), l = new d7.mvc.PrivateKey(l)) : (b = M.utxos[0].address, l = M.utxoPrivateKeys[0]);
    let R = await this._pretreatFtUtxos(i, t, a, k, P);
    n ? n = new d7.mvc.Address(n, this.network) : n = R.ftUtxos[0].tokenAddress;
    let {
      txComposer: F,
      transferCheckTxComposer: C
    } = await this._transfer({
      codehash: t,
      genesis: a,
      receivers: r,
      ftUtxos: R.ftUtxos,
      ftPrivateKeys: R.ftUtxoPrivateKeys,
      ftChangeAddress: n,
      utxos: M.utxos,
      utxoPrivateKeys: M.utxoPrivateKeys,
      changeAddress: s,
      opreturnData: x,
      isMerge: m,
      middleChangeAddress: b,
      middlePrivateKey: l,
      minUtxoSet: v
    }), L = C.getRawHex(), U = F.getRawHex();
    return I || (await this.api.broadcast(L), await this.api.broadcast(U)), {
      tx: F.getTx(),
      txHex: U,
      routeCheckTx: C.getTx(),
      routeCheckTxHex: L,
      txid: F.getTxId()
    };
  }
  /**
   * burn token
   * @param codehash token codehash
   * @param genesis token genesis
   * @param ftUtxos ft utxos to burn, must be sent to zero address
   * @param utxos fee provider utxos
   * @param utxoPrivateKey fee provider utxo private key
   * @param changeAddress satoshi change address
   * @param opreturnData opreturn data
   * @param noBroadcast if true, will not broadcast tx
   */
  async burn({
    codehash: t,
    genesis: a,
    ftUtxos: r,
    utxos: f,
    utxoPrivateKey: i,
    changeAddress: n,
    opreturnData: o,
    noBroadcast: s = !1
  }) {
    jp(a), Vp(t);
    let b = await this._pretreatUtxos(f);
    n ? n = new d7.mvc.Address(n, this.network) : n = b.utxos[0].address;
    let l = await this._pretreatFtUtxos(r, t, a), {
      unlockCheckTxComposer: v,
      txComposer: m
    } = await this._burn({
      genesis: a,
      ftUtxos: l.ftUtxos,
      utxos: b.utxos,
      utxoPrivateKey: b.utxoPrivateKeys[0],
      changeAddress: n,
      opreturnData: o
    }), x = v.getRawHex(), I = m.getRawHex();
    return s || (await this.api.broadcast(x), await this.api.broadcast(I)), {
      tx: m.getTx(),
      txHex: I,
      routeCheckTx: v.getTx(),
      routeCheckTxHex: x,
      txid: m.getTxId()
    };
  }
  async _pretreatFtUtxos(t, a, r, f, i) {
    let n = [], o = [], s = [];
    if (t)
      t.forEach((b) => {
        if (b.wif) {
          let l = new d7.mvc.PrivateKey(b.wif);
          o.push(l), s.push(l.toPublicKey());
        }
      });
    else {
      if (f && (i = f.toPublicKey()), !i)
        throw new te(Q7.EC_INVALID_ARGUMENT, "ftUtxos or senderPublicKey or senderPrivateKey must be provided.");
      t = await this.api.getFungibleTokenUnspents(a, r, i.toAddress(this.network).toString(), 20), t.forEach((b) => {
        f && o.push(f), s.push(i);
      });
    }
    if (t.forEach((b, l) => {
      n.push({
        txId: b.txId,
        outputIndex: b.outputIndex,
        tokenAddress: new d7.mvc.Address(b.tokenAddress, this.network),
        tokenAmount: new he(b.tokenAmount.toString()),
        publicKey: s[l]
      });
    }), n.length == 0)
      throw new te(Q7.EC_INSUFFICIENT_FT, "Insufficient token.");
    return {
      ftUtxos: n,
      ftUtxoPrivateKeys: o
    };
  }
  /**
   * prepare transfer tokens, decide which transfer pattern to use, preprocess ft utxos(fetch previous transactions for tx building)
   * @param codehash codehash of token
   * @param genesis genesis of token
   * @param receivers token receivers, will be ignored if isMerge is true
   * @param ftUtxos input ft utxos
   * @param ftChangeAddress change address of ft
   * @param isMerge merge utxos, if true, all the token will be merged into one utxo and send to the change address
   * @param minUtxoSet if true, will use minimum utxo set as possible
   * @private
   */
  async _prepareTransferTokens({
    codehash: t,
    genesis: a,
    receivers: r,
    ftUtxos: f,
    ftChangeAddress: i,
    isMerge: n,
    minUtxoSet: o
  }) {
    let s = [], b = he.Zero;
    n && (s = f.slice(0, 20), b = s.reduce((F, C) => C.tokenAmount.add(F), he.Zero), r = [{
      address: i.toString(),
      amount: b.toString()
    }]);
    let l = r.map((F) => ({
      address: new d7.mvc.Address(F.address, this.network),
      tokenAmount: new he(F.amount.toString())
    })), v = l.reduce((F, C) => C.tokenAmount.add(F), he.Zero), m = he.Zero, x = [];
    for (let F = 0; F < f.length; F++) {
      let C = f[F];
      if (x.push(C), m = C.tokenAmount.add(m), o && m.gte(v))
        break;
    }
    if (n && (x = s, m = b, b.eq(he.Zero)))
      throw new te(Q7.EC_INNER_ERROR, "No utxos to merge.");
    let I = m.sub(v);
    if (I.gt(he.Zero) && l.push({
      address: i,
      tokenAmount: I
    }), m.lt(v))
      throw new te(Q7.EC_INSUFFICIENT_FT, `Insufficient token. Need ${v} But only ${m}`);
    f = x, await this.perfectFtUtxosInfo(f, a);
    let k = f, P = k.length, M = l.length, R = U0.getOptimumType(P, M);
    if (R == Wa.UNSUPPORT)
      throw new te(Q7.EC_TOO_MANY_FT_UTXOS, "Too many token-utxos, should merge them to continue.");
    return {
      tokenInputArray: k,
      tokenOutputArray: l,
      tokenTransferType: R
    };
  }
  /**
   * prepare burn tokens,preprocess ft utxos(fetch previous transactions for tx building)
   * @param codehash codehash of token
   * @param genesis genesis of token
   * @param ftUtxos input ft utxos
   * @private
   */
  async _prepareBurnTokens({
    genesis: t,
    ftUtxos: a
  }) {
    let r = he.Zero, f = [];
    for (let o = 0; o < a.length; o++) {
      let s = a[o];
      f.push(s), r = s.tokenAmount.add(r);
    }
    a = f, await this.perfectFtUtxosInfo(a, t);
    let i = a, n = P5.getOptimumType(a.length, 1);
    if (n == Za.UNSUPPORT)
      throw new te(Q7.EC_TOO_MANY_FT_UTXOS, "Too many token-utxos, should merge them to continue.");
    return {
      tokenInputArray: i,
      tokenUnlockType: n
    };
  }
  /**
   * Fetch previous transactions for each ft utxo
   * @param ftUtxos ft utxos
   * @param genesis genesis of token
   * @private
   */
  async perfectFtUtxosInfo(t, a) {
    let r = {};
    for (let i = 0; i < t.length; i++) {
      let n = t[i];
      r[n.txId] || (r[n.txId] = {
        waitingRes: this.api.getRawTxData(n.txId)
        //async request
      });
    }
    for (let i in r)
      r[i].waitingRes && !r[i].hex && (r[i].hex = await r[i].waitingRes);
    t.forEach((i) => {
      i.satotxInfo = i.satotxInfo || {}, i.satotxInfo.txHex = r[i.txId].hex, i.satotxInfo.txId = i.txId, i.satotxInfo.outputIndex = i.outputIndex;
    });
    let f;
    for (let i = 0; i < t.length; i++) {
      let n = t[i];
      const o = new d7.mvc.Transaction(n.satotxInfo.txHex);
      if (!f) {
        let m = o.outputs[n.outputIndex].script;
        f = Rt(m.toBuffer());
      }
      let s = 0, b = o.inputs.find((m, x) => {
        let I = new d7.mvc.Script(m.script);
        if (I.chunks.length > 0) {
          const k = Uy(I.chunks[0].buf);
          if (k) {
            if (d9(k) == a)
              return s = x, !0;
            let P = Rt(k);
            P.sensibleID = f.sensibleID;
            const M = Es(k, P);
            if (d7.toHex(d7.mvc.crypto.Hash.sha256ripemd160(M)) == f.genesisHash)
              return s = x, !0;
          }
        }
      });
      if (!b)
        throw new te(Q7.EC_INNER_ERROR, "There is no valid preTx of the ftUtxo. ");
      let l = b.prevTxId.toString("hex"), v = b.outputIndex;
      n.satotxInfo.preTxId = l, n.satotxInfo.preOutputIndex = v, n.satotxInfo.txInputsCount = o.inputs.length, n.satoshis = o.outputs[n.outputIndex].satoshis, n.lockingScript = o.outputs[n.outputIndex].script, n.prevTokenOutputIndex = b.outputIndex, n.prevTokenInputIndex = s, r[l] || (r[l] = {
        waitingRes: this.api.getRawTxData(l)
      });
    }
    for (let i in r)
      r[i].waitingRes && !r[i].hex && (r[i].hex = await r[i].waitingRes);
    return t.forEach((i) => {
      i.satotxInfo.preTxHex = r[i.satotxInfo.preTxId].hex;
      const n = new d7.mvc.Transaction(i.satotxInfo.preTxHex);
      let o = Rt(n.outputs[i.satotxInfo.preOutputIndex].script.toBuffer());
      i.preTokenAmount = new he(o.tokenAmount.toString()), o.tokenAddress == "0000000000000000000000000000000000000000" ? i.preTokenAddress = this.zeroAddress : i.preTokenAddress = d7.mvc.Address.fromPublicKeyHash(Q.Buffer.from(o.tokenAddress, "hex"), this.network), i.preLockingScript = n.outputs[i.satotxInfo.preOutputIndex].script, i.prevTokenTx = n;
    }), t;
  }
  /**
   * composite a token transfer transaction and amount check transaction
   * @param codehash codehash of the token
   * @param genesis genesis of the token
   * @param receivers token receivers
   * @param ftUtxos input ftUtxos
   * @param ftPrivateKeys private keys of ftUtxos
   * @param ftChangeAddress change address of ftUtxos
   * @param utxos utxos for paying fee
   * @param utxoPrivateKeys private keys of utxos(fee paying)
   * @param changeAddress change address of utxos(fee paying)
   * @param middlePrivateKey
   * @param middleChangeAddress
   * @param isMerge whether to merge the token utxos
   * @param opreturnData opreturn data to be added to the transaction
   * @param minUtxoSet
   * @private
   */
  async _transfer({
    codehash: t,
    genesis: a,
    receivers: r,
    ftUtxos: f,
    ftPrivateKeys: i,
    ftChangeAddress: n,
    utxos: o,
    utxoPrivateKeys: s,
    changeAddress: b,
    middlePrivateKey: l,
    middleChangeAddress: v,
    isMerge: m,
    opreturnData: x,
    minUtxoSet: I
  }) {
    if (o.length > 3)
      throw new te(Q7.EC_UTXOS_MORE_THAN_3, "Mvc utxos should be no more than 3 in the transfer operation, please merge it first ");
    v || (v = o[0].address, l = s[0]);
    let {
      tokenInputArray: k,
      tokenOutputArray: P,
      tokenTransferType: M
    } = await this._prepareTransferTokens({
      codehash: t,
      genesis: a,
      receivers: r,
      ftUtxos: f,
      ftChangeAddress: n,
      isMerge: m,
      minUtxoSet: I
    }), R = this._calTransferEstimateFee({
      p2pkhInputNum: o.length,
      tokenInputArray: k,
      tokenOutputArray: P,
      tokenTransferType: M,
      opreturnData: x
    });
    const F = o.reduce(($, X) => $ + X.satoshis, 0);
    if (F < R)
      throw new te(Q7.EC_INSUFFICIENT_MVC, `Insufficient balance.It take more than ${R}, but only ${F}.`);
    f = k;
    const C = k[0], U = new d7.mvc.Transaction(C.satotxInfo.txHex).outputs[C.outputIndex].script;
    let q = U0.createContract(M);
    q.setFormatedDataPart({
      nSenders: k.length,
      receiverTokenAmountArray: P.map(($) => $.tokenAmount),
      receiverArray: P.map(($) => $.address),
      nReceivers: P.length,
      tokenCodeHash: d7.toHex(zf(U.toBuffer())),
      tokenID: d7.toHex(Vf(U.toBuffer()))
    });
    const Z = new He(), z = o.map(($) => {
      const X = Z.appendP2PKHInput($);
      return Z.addSigHashInfo({
        inputIndex: X,
        address: $.address.toString(),
        sighashType: Cr,
        contractType: I5.P2PKH
      }), X;
    }), G = Z.appendOutput({
      lockingScript: q.lockingScript,
      satoshis: this.getDustThreshold(q.lockingScript.toBuffer().length)
    });
    let O = Z.appendChangeOutput(v, this.feeb), u = 0;
    s && s.length > 0 ? z.forEach(($) => {
      let X = s.splice(0, 1)[0];
      Z.unlockP2PKHInput(X, $);
    }) : (z.forEach(($) => {
      u += Lf;
    }), u = u * f.length), o = [{
      txId: Z.getTxId(),
      satoshis: Z.getOutput(O).satoshis,
      outputIndex: O,
      address: v
    }], s = o.map(($) => l).filter(($) => $);
    let p = {
      txId: Z.getTxId(),
      outputIndex: G,
      satoshis: Z.getOutput(G).satoshis,
      lockingScript: Z.getOutput(G).script
    };
    const d = new He();
    let c = new T9(), y, S = Q.Buffer.alloc(0), T = Q.Buffer.alloc(0);
    const g = f.map(($) => {
      const X = d.appendInput($);
      return c.addVout($.txId, $.outputIndex), d.addSigHashInfo({
        inputIndex: X,
        address: $.tokenAddress.toString(),
        sighashType: Cr,
        contractType: I5.BCP02_TOKEN
      }), y = $.lockingScript, T = Q.Buffer.concat([T, $.tokenAddress.hashBuffer]), S = Q.Buffer.concat([S, $.tokenAmount.toBuffer({
        endian: "little",
        size: 8
      })]), X;
    }), w = o.map(($) => {
      const X = d.appendP2PKHInput($);
      return c.addVout($.txId, $.outputIndex), d.addSigHashInfo({
        inputIndex: X,
        address: $.address.toString(),
        sighashType: Cr,
        contractType: I5.P2PKH
      }), X;
    }), A = d.appendInput(p);
    c.addVout(p.txId, p.outputIndex);
    let h = Q.Buffer.alloc(0), N = Q.Buffer.alloc(0), Y = Q.Buffer.alloc(0);
    const t7 = P.length;
    for (let $ = 0; $ < t7; $++) {
      const X = P[$], i7 = X.address, J = X.tokenAmount, _ = Sx(y.toBuffer(), i7.hashBuffer, J);
      let E = d.appendOutput({
        lockingScript: d7.mvc.Script.fromBuffer(_),
        satoshis: this.getDustThreshold(_.length)
      });
      h = Q.Buffer.concat([h, i7.hashBuffer]);
      const j = J.toBuffer({
        endian: "little",
        size: 8
      });
      N = Q.Buffer.concat([N, j]);
      const V = he.fromNumber(d.getOutput(E).satoshis).toBuffer({
        endian: "little",
        size: 8
      });
      Y = Q.Buffer.concat([Y, V]);
    }
    let H = "";
    if (x) {
      const $ = d.appendOpReturnOutput(x);
      H = d.getOutput($).script.toHex();
    }
    for (let $ = 0; $ < 2; $++) {
      d.clearChangeOutput();
      const X = d.appendChangeOutput(b, this.feeb, u);
      let i7 = Q.Buffer.alloc(0), J = Q.Buffer.alloc(0), _ = Q.Buffer.alloc(0);
      g.forEach((K, B) => {
        let D = f[B], W = i[B], e7 = Rt(D.lockingScript.toBuffer());
        const o7 = y1(e7), a7 = G0.createContract(this.transferCheckCodeHashArray, this.unlockContractCodeHashArray), s7 = Z.getTx(), u7 = 0, m7 = new Nr(F0(s7, u7)), p7 = s7.outputs[u7].script.toBuffer(), l7 = D.prevTokenInputIndex, y7 = new d7.Bytes(d7.toHex(D.preTokenAddress.hashBuffer)), x7 = BigInt(D.preTokenAmount.toString(10)), _7 = new d7.mvc.Transaction(D.satotxInfo.txHex), F7 = Qa(_7, l7), T7 = new yo(F7[0]), S7 = F7[1], Y7 = new Nr(F0(D.prevTokenTx, D.prevTokenOutputIndex)), k7 = wl(_7, D.outputIndex);
        i7 = Q.Buffer.concat([i7, Q.Buffer.from(k7.txHeader, "hex")]);
        const E7 = Q.Buffer.from(k7.txHashProof, "hex");
        J = Q.Buffer.concat([J, j0(E7.length), E7]), _ = Q.Buffer.concat([_, Q.Buffer.from(k7.txSatoshi, "hex")]);
        const $7 = new Nr(n9());
        a7.setDataPart(d7.toHex(o7));
        const H7 = a7.unlock({
          txPreimage: d.getInputPreimage(K),
          prevouts: new d7.Bytes(c.toHex()),
          tokenInputIndex: K,
          amountCheckHashIndex: M - 1,
          amountCheckInputIndex: d.getTx().inputs.length - 1,
          amountCheckTxOutputProofInfo: m7,
          amountCheckScript: new d7.Bytes(p7.toString("hex")),
          prevTokenInputIndex: l7,
          prevTokenAddress: y7,
          prevTokenAmount: x7,
          tokenTxHeader: S7,
          tokenTxInputProof: T7,
          prevTokenTxOutputProof: Y7,
          senderPubKey: new d7.PubKey(D.publicKey ? D.publicKey.toHex() : El),
          senderSig: new d7.Sig(W ? d7.toHex(d.getTxFormatSig(W, K)) : v9),
          // contractInputIndex: transferCheckInputIndex,
          // contractTxOutputProof,
          contractInputIndex: 0,
          contractTxOutputProof: $7,
          // checkInputIndex: transferCheckInputIndex,
          // checkScriptTx: new Bytes(transferCheckTx.serialize(true)),
          // nReceivers: tokenOutputLen,
          operation: lx
        });
        if (this.debug && W) {
          let P7 = {
            tx: d.getTx(),
            inputIndex: K,
            inputSatoshis: d.getInput(K).output.satoshis
          }, pe = H7.verify(P7);
          if (!pe.success)
            throw pe;
        }
        d.getInput(K).setScript(H7.toScript());
      });
      const E = d.getOutput(0).satoshis;
      let j = p.lockingScript;
      j = j.subScript(0);
      const V = new d7.SigHashPreimage(d7.toHex(d7.getPreimage(
        d.getTx(),
        j,
        p.satoshis,
        A
        // Signature.SIGHASH_ALL
      )));
      let n7 = q.unlock({
        // txPreimage: txComposer.getInputPreimage(transferCheckInputIndex),
        txPreimage: V,
        prevouts: new d7.Bytes(c.toHex()),
        tokenScript: new d7.Bytes(y.toHex()),
        tokenTxHeaderArray: new d7.Bytes(i7.toString("hex")),
        tokenTxHashProofArray: new d7.Bytes(J.toString("hex")),
        tokenSatoshiBytesArray: new d7.Bytes(_.toString("hex")),
        inputTokenAddressArray: new d7.Bytes(d7.toHex(T)),
        inputTokenAmountArray: new d7.Bytes(d7.toHex(S)),
        // receiverSatoshiArray: new Bytes(toHex(outputSatoshiArray)),
        tokenOutputSatoshis: E,
        // same
        changeSatoshis: new d7.Int(X != -1 ? d.getOutput(X).satoshis : 0),
        changeAddress: new d7.Ripemd160(d7.toHex(b.hashBuffer)),
        opReturnScript: new d7.Bytes(H)
      });
      if (this.debug) {
        let K = {
          tx: d.getTx(),
          inputIndex: A,
          inputSatoshis: d.getInput(A).output.satoshis
        }, B = n7.verify(K);
        if (B.success == !1)
          throw B;
      }
      d.getInput(A).setScript(n7.toScript());
    }
    return s && s.length > 0 && w.forEach(($) => {
      let X = s.splice(0, 1)[0];
      d.unlockP2PKHInput(X, $);
    }), n5(d, this.feeb), {
      transferCheckTxComposer: Z,
      txComposer: d
    };
  }
  /**
   * burn the provided ft utxos, the utxo must be sent to the zero address in order to burn
   * @param codehash codehash of the token
   * @param genesis genesis of the token
   * @param ftUtxos ft utxos to burn(must be transferred to the zero address)
   * @param utxos utxos to pay the fee
   * @param utxoPrivateKey private keys of the utxos(fee paying utxos)
   * @param changeAddress the address to receive the change satoshis
   * @param opreturnData opreturn data
   * @private
   * @returns {Promise<{transferCheckTxComposer: TxComposer, txComposer: TxComposer}>}
   */
  async _burn({
    genesis: t,
    ftUtxos: a,
    utxos: r,
    utxoPrivateKey: f,
    changeAddress: i,
    opreturnData: n
  }) {
    if (r.length == 0)
      throw new te(Q7.EC_INSUFFICIENT_MVC, "Mvc utxos should not be empty in the burn operation");
    if (r.length > 3)
      throw new te(Q7.EC_UTXOS_MORE_THAN_3, "Mvc utxos should be no more than 3 in the transfer operation, please merge it first ");
    if (!f)
      throw new te(Q7.EC_INVALID_ARGUMENT, "No private key detected for the utxos, please provide the private key for the utxos ");
    a.forEach((d) => {
      if (!d.tokenAddress.hashBuffer.equals(Up))
        throw new te(Q7.EC_CANNOT_BURN_NON_ZERO_ADDRESS, "All ftUtxo must be sent to the zero address in order to burn");
    });
    const {
      tokenInputArray: o,
      tokenUnlockType: s
    } = await this._prepareBurnTokens({
      genesis: t,
      ftUtxos: a
    });
    let b = this._calBurnEstimateFee({
      p2pkhInputNum: r.length,
      tokenInputArray: o,
      opreturnData: n,
      tokenUnlockType: s
    });
    const l = r.reduce((d, c) => d + c.satoshis, 0);
    if (l < b)
      throw new te(Q7.EC_INSUFFICIENT_MVC, `Insufficient balance.It take more than ${b}, but only ${l}.`);
    a = o;
    const v = o[0], x = new d7.mvc.Transaction(v.satotxInfo.txHex).outputs[v.outputIndex].script;
    let I = P5.createContract(s);
    const k = [];
    for (let d = 0; d < o.length; d++)
      k.push(d);
    I.setFormatedDataPart({
      inputTokenIndexArray: k,
      nSender: o.length,
      tokenCodeHash: d7.toHex(zf(x.toBuffer())),
      tokenID: d7.toHex(Vf(x.toBuffer())),
      nReceivers: 0,
      receiverTokenAmountArray: [],
      receiverArray: []
    });
    const P = new He(), M = r.map((d) => {
      const c = P.appendP2PKHInput(d);
      return P.addSigHashInfo({
        inputIndex: c,
        address: d.address.toString(),
        sighashType: Cr,
        contractType: I5.P2PKH
      }), c;
    }), R = P.appendOutput({
      lockingScript: I.lockingScript,
      satoshis: this.getDustThreshold(I.lockingScript.toBuffer().length)
    });
    let F = P.appendChangeOutput(r[0].address, this.feeb);
    M.forEach((d) => {
      P.unlockP2PKHInput(f, d);
    });
    let C = 0, L = {
      txId: P.getTxId(),
      outputIndex: R,
      satoshis: P.getOutput(R).satoshis,
      lockingScript: P.getOutput(R).script
    };
    r = [{
      txId: P.getTxId(),
      satoshis: P.getOutput(F).satoshis,
      outputIndex: F,
      address: r[0].address
    }];
    const U = new He();
    let q = new T9(), Z, z = Q.Buffer.alloc(0), G = Q.Buffer.alloc(0);
    const O = a.map((d) => {
      const c = U.appendInput(d);
      return q.addVout(d.txId, d.outputIndex), U.addSigHashInfo({
        inputIndex: c,
        address: d.tokenAddress.toString(),
        sighashType: Cr,
        contractType: I5.BCP02_TOKEN
      }), Z = d.lockingScript, G = Q.Buffer.concat([G, d.tokenAddress.hashBuffer]), z = Q.Buffer.concat([z, d.tokenAmount.toBuffer({
        endian: "little",
        size: 8
      })]), c;
    }), u = r.map((d) => {
      const c = U.appendP2PKHInput(d);
      return q.addVout(d.txId, d.outputIndex), U.addSigHashInfo({
        inputIndex: c,
        address: d.address.toString(),
        sighashType: Cr,
        contractType: I5.P2PKH
      }), c;
    }), p = U.appendInput(L);
    q.addVout(L.txId, L.outputIndex), n && U.appendOpReturnOutput(n);
    for (let d = 0; d < 2; d++) {
      U.clearChangeOutput();
      const c = U.appendChangeOutput(i, this.feeb, C);
      let y = Q.Buffer.alloc(0), S = Q.Buffer.alloc(0), T = Q.Buffer.alloc(0);
      const g = F0(P.getTx(), R);
      O.forEach((X, i7) => {
        let J = a[i7], _ = Rt(J.lockingScript.toBuffer());
        const E = y1(_), j = G0.createContract(this.transferCheckCodeHashArray, this.unlockContractCodeHashArray);
        j.setDataPart(d7.toHex(E));
        const V = P.getTx(), n7 = 0, K = new Nr(F0(V, n7)), B = V.outputs[n7].script.toBuffer(), D = J.prevTokenInputIndex, W = new d7.Bytes(d7.toHex(J.preTokenAddress.hashBuffer)), e7 = BigInt(J.preTokenAmount.toString(10)), o7 = new d7.mvc.Transaction(J.satotxInfo.txHex), a7 = Qa(o7, D), s7 = new yo(a7[0]), u7 = a7[1], m7 = new Nr(F0(J.prevTokenTx, J.prevTokenOutputIndex)), p7 = wl(o7, J.outputIndex);
        y = Q.Buffer.concat([y, Q.Buffer.from(p7.txHeader, "hex")]);
        const l7 = Q.Buffer.from(p7.txHashProof, "hex");
        S = Q.Buffer.concat([S, j0(l7.length), l7]), T = Q.Buffer.concat([T, Q.Buffer.from(p7.txSatoshi, "hex")]);
        const y7 = j.unlock({
          txPreimage: U.getInputPreimage(X),
          prevouts: new d7.Bytes(q.toHex()),
          tokenInputIndex: X,
          amountCheckHashIndex: s - 1,
          amountCheckInputIndex: U.getTx().inputs.length - 1,
          amountCheckTxOutputProofInfo: K,
          amountCheckScript: new d7.Bytes(B.toString("hex")),
          prevTokenInputIndex: D,
          prevTokenAddress: W,
          prevTokenAmount: e7,
          tokenTxHeader: u7,
          tokenTxInputProof: s7,
          prevTokenTxOutputProof: m7,
          senderPubKey: new d7.PubKey(El),
          senderSig: new d7.Sig(v9),
          contractInputIndex: p,
          contractTxOutputProof: new Nr(g),
          operation: px
        });
        if (U.getInput(X).setScript(y7.toScript()), this.debug) {
          let x7 = {
            tx: U.getTx(),
            inputIndex: X,
            inputSatoshis: U.getInput(X).output.satoshis
          }, _7 = y7.verify(x7);
          if (!_7.success)
            throw _7;
        }
      });
      const w = 0, A = Q.Buffer.alloc(0), h = U.getTx().outputs[c], N = Q.Buffer.concat([Zi(h.satoshis), qC(h.script.toBuffer())]);
      let Y = Q.Buffer.alloc(0);
      Y = Q.Buffer.concat([Y, j0(N.length), N]);
      let t7 = L.lockingScript;
      t7 = t7.subScript(0);
      const H = new d7.SigHashPreimage(d7.toHex(d7.getPreimage(
        U.getTx(),
        t7,
        L.satoshis,
        p
        // Signature.SIGHASH_ALL
      )));
      let $ = I.unlock({
        // txPreimage: txComposer.getInputPreimage(transferCheckInputIndex),
        txPreimage: H,
        prevouts: new d7.Bytes(q.toHex()),
        tokenScript: new d7.Bytes(Z.toHex()),
        tokenTxHeaderArray: new d7.Bytes(y.toString("hex")),
        tokenTxHashProofArray: new d7.Bytes(S.toString("hex")),
        tokenSatoshiBytesArray: new d7.Bytes(T.toString("hex")),
        inputTokenAddressArray: new d7.Bytes(d7.toHex(G)),
        inputTokenAmountArray: new d7.Bytes(d7.toHex(z)),
        nOutputs: U.getTx().outputs.length,
        tokenOutputIndexArray: new d7.Bytes(A.toString("hex")),
        tokenOutputSatoshis: w,
        otherOutputArray: new d7.Bytes(d7.toHex(Y))
      });
      if (this.debug) {
        let X = {
          tx: U.getTx(),
          inputIndex: p,
          inputSatoshis: U.getInput(p).output.satoshis
        }, i7 = $.verify(X);
        if (i7.success == !1)
          throw i7;
      }
      U.getInput(p).setScript($.toScript());
    }
    return u.forEach((d) => {
      U.unlockP2PKHInput(f, d);
    }), n5(U, this.feeb), {
      unlockCheckTxComposer: P,
      txComposer: U
    };
  }
  /**
   * calculate transfer fee for ft transfer
   * @param p2pkhInputNum
   * @param tokenInputArray
   * @param tokenOutputArray
   * @param tokenTransferType
   * @param opreturnData
   * @private
   */
  _calTransferEstimateFee({
    p2pkhInputNum: t = 10,
    tokenInputArray: a,
    tokenOutputArray: r,
    tokenTransferType: f,
    opreturnData: i
  }) {
    let n = a.length, o = r.length, s = U0.getDummyInstance(f), b = U0.getLockingScriptSize(f), l = U0.calUnlockingScriptSize(f, t, n, o, i), v = G0.calUnlockingScriptSize(s, t, n, o), m = G0.getLockingScriptSize(), x = new ft(this.feeb, this.dustCalculator);
    for (let k = 0; k < t; k++)
      x.addP2PKHInput();
    x.addOutput(b), x.addP2PKHOutput();
    let I = new ft(this.feeb, this.dustCalculator);
    for (let k = 0; k < n; k++)
      I.addInput(v, a[k].satoshis);
    for (let k = 0; k < t; k++)
      I.addP2PKHInput();
    I.addInput(l, this.dustCalculator.getDustThreshold(b));
    for (let k = 0; k < o; k++)
      I.addOutput(m);
    return i && I.addOpReturnOutput(d7.mvc.Script.buildSafeDataOut(i).toBuffer().length), I.addP2PKHOutput(), x.getFee() + I.getFee();
  }
  /**
   * calculate transfer fee for ft burn
   * this includes the fee for transfer check tx
   * @param p2pkhInputNum
   * @param tokenInputArray
   * @param opreturnData
   * @param tokenUnlockType
   * @private
   */
  _calBurnEstimateFee({
    p2pkhInputNum: t = 10,
    tokenInputArray: a,
    opreturnData: r,
    tokenUnlockType: f
  }) {
    let i = a.length, n = P5.getDummyInstance(f), o = P5.getLockingScriptSize(f), s = P5.calUnlockingScriptSize(f, t, i, 1, r), b = G0.calUnlockingScriptSize(n, t, i, 0), l = new ft(this.feeb, this.dustCalculator);
    for (let m = 0; m < t; m++)
      l.addP2PKHInput();
    l.addOutput(o), l.addP2PKHOutput();
    let v = new ft(this.feeb, this.dustCalculator);
    for (let m = 0; m < i; m++)
      v.addInput(b, a[m].satoshis);
    for (let m = 0; m < t; m++)
      v.addP2PKHInput();
    return v.addInput(s, this.dustCalculator.getDustThreshold(o)), r && v.addOpReturnOutput(d7.mvc.Script.buildSafeDataOut(r).toBuffer().length), v.addP2PKHOutput(), l.getFee() + v.getFee();
  }
  getDustThreshold(t) {
    return this.dustCalculator.getDustThreshold(t);
  }
  async getBalance({
    codehash: t,
    genesis: a,
    address: r
  }) {
    let {
      balance: f,
      pendingBalance: i
    } = await this.api.getFungibleTokenBalance(t, a, r);
    return he.fromString(f, 10).add(he.fromString(i, 10)).toString();
  }
  /**
   * Query token balance detail
   * @param codehash
   * @param genesis
   * @param address
   * @returns
   */
  async getBalanceDetail({
    codehash: t,
    genesis: a,
    address: r
  }) {
    return await this.api.getFungibleTokenBalance(t, a, r);
  }
  /**
   * Query the Token list under this address. Get the balance of each token
   * @param address
   * @returns
   */
  async getSummary(t) {
    return await this.api.getFungibleTokenSummary(t);
  }
  async getFtUtxos(t, a, r, f = 20) {
    return await this.api.getFungibleTokenUnspents(t, a, r, f);
  }
  async getMergeEstimateFee({
    codehash: t,
    genesis: a,
    ownerWif: r,
    ownerPublicKey: f,
    ftUtxos: i,
    ftChangeAddress: n,
    opreturnData: o,
    utxoMaxCount: s = 3,
    minUtxoSet: b = !0
  }) {
    return await this.getTransferEstimateFee({
      codehash: t,
      genesis: a,
      senderWif: r,
      senderPublicKey: f,
      ftUtxos: i,
      ftChangeAddress: n,
      opreturnData: o,
      receivers: [],
      isMerge: !0,
      utxoMaxCount: s,
      minUtxoSet: b
    });
  }
  async getTransferEstimateFee({
    codehash: t,
    genesis: a,
    receivers: r,
    senderWif: f,
    senderPrivateKey: i,
    senderPublicKey: n,
    ftUtxos: o,
    ftChangeAddress: s,
    isMerge: b,
    opreturnData: l,
    utxoMaxCount: v = 3,
    minUtxoSet: m = !0
  }) {
    let x = v;
    if (x > 3)
      throw new te(Q7.EC_UTXOS_MORE_THAN_3, "Mvc utxos should be no more than 3 in the transfer operation. ");
    f ? (i = d7.mvc.PrivateKey.fromWIF(f), n = i.toPublicKey()) : i ? (i = new d7.mvc.PrivateKey(i), n = i.toPublicKey()) : n && (n = new d7.mvc.PublicKey(n));
    let I = [];
    for (let C = 0; C < x; C++)
      I.push({
        txId: RH,
        //dummy
        outputIndex: C,
        satoshis: 1e3,
        address: this.zeroAddress
      });
    let k = await this._pretreatFtUtxos(o, t, a, i, n);
    s ? s = new d7.mvc.Address(s, this.network) : s = k.ftUtxos[0].tokenAddress;
    let {
      tokenInputArray: P,
      tokenOutputArray: M,
      tokenTransferType: R
    } = await this._prepareTransferTokens({
      codehash: t,
      genesis: a,
      receivers: r,
      ftUtxos: k.ftUtxos,
      ftChangeAddress: s,
      isMerge: b,
      minUtxoSet: m
    });
    return this._calTransferEstimateFee({
      p2pkhInputNum: I.length,
      tokenInputArray: P,
      tokenOutputArray: M,
      tokenTransferType: R,
      opreturnData: l
    });
  }
  static parseTokenScript(t, a = Oa.MAIN) {
    if (!ic(t))
      return null;
    const r = Rt(t), f = d7.mvc.Address.fromPublicKeyHash(Q.Buffer.from(r.tokenAddress, "hex"), a).toString(), i = d9(t), n = Ax(t), o = Ix(t);
    return {
      codehash: n,
      genesis: i,
      sensibleId: o,
      tokenName: r.tokenName,
      tokenSymbol: r.tokenSymbol,
      decimalNum: r.decimalNum,
      tokenAddress: f,
      tokenAmount: r.tokenAmount,
      genesisHash: r.genesisHash,
      sensibleID: r.sensibleID,
      protoVersion: r.protoVersion,
      protoType: r.protoType
    };
  }
}
var dq = /* @__PURE__ */ ((e) => (e[e.SENSIBLE_NFT = 0] = "SENSIBLE_NFT", e[e.SENSIBLE_FT = 1] = "SENSIBLE_FT", e[e.P2PKH = 2] = "P2PKH", e[e.OP_RETURN = 3] = "OP_RETURN", e[e.UNKNOWN = 4] = "UNKNOWN", e))(dq || {});
class pq {
  static decodeOutput(t, a) {
    let r = t.script.toBuffer();
    if (ic(r)) {
      let f = rn(r);
      return f == Jt.NFT ? {
        type: 0,
        satoshis: t.satoshis,
        data: Lx.parseTokenScript(r, a)
      } : f == Jt.FT ? {
        type: 1,
        satoshis: t.satoshis,
        data: Fx.parseTokenScript(r, a)
      } : {
        type: 4,
        satoshis: t.satoshis
      };
    } else
      return t.script.isPublicKeyHashOut() ? {
        type: 2,
        satoshis: t.satoshis,
        address: t.script.toAddress(a).toString()
      } : t.script.isSafeDataOut() ? {
        type: 3,
        satoshis: 0
      } : {
        type: 4,
        satoshis: t.satoshis
      };
  }
  static decodeTx(t, a = Oa.MAIN) {
    let r = [];
    t.inputs.forEach((n) => {
      n.output && r.push(this.decodeOutput(n.output, a));
    });
    let f = [];
    t.outputs.forEach((n) => {
      f.push(this.decodeOutput(n, a));
    });
    let i = r.reduce((n, o) => n + o.satoshis, 0) - f.reduce((n, o) => n + o.satoshis, 0);
    return {
      txId: t.id,
      inputs: r,
      outputs: f,
      fee: i
    };
  }
}
class hq {
  constructor(t, a = Oa.MAIN, r, f = an.MVC, i) {
    t ? this.privateKey = d7.mvc.PrivateKey.fromWIF(t) : this.privateKey = d7.mvc.PrivateKey.fromRandom(a), this.address = this.privateKey.toAddress(a), this.blockChainApi = new rc(a, f, i), this.feeb = r, this.network = a;
  }
  get api() {
    return this.blockChainApi;
  }
  async getUnspents() {
    return await this.blockChainApi.getUnspents(this.address.toString());
  }
  async getUtxos() {
    return this.getUnspents();
  }
  async getBalance() {
    let {
      pendingBalance: t,
      balance: a
    } = await this.blockChainApi.getBalance(this.address.toString());
    return a + t;
  }
  async send(t, a, r) {
    const f = new He();
    let i = await this.blockChainApi.getUnspents(this.address.toString());
    const n = this.pickUtxo(i, a);
    return n.forEach((o) => {
      f.appendP2PKHInput({
        address: new d7.mvc.Address(o.address, this.network),
        txId: o.txId,
        outputIndex: o.outputIndex,
        satoshis: o.satoshis
      });
    }), f.appendP2PKHOutput({
      address: new d7.mvc.Address(t, this.network),
      satoshis: a
    }), f.appendChangeOutput(this.address, this.feeb), n.forEach((o, s) => {
      f.unlockP2PKHInput(this.privateKey, s);
    }), await this.broadcastTxComposer(f, r);
  }
  async sendArray(t, a, r) {
    const f = new He();
    return a || (a = await this.blockChainApi.getUnspents(this.address.toString())), a.forEach((i) => {
      f.appendP2PKHInput({
        address: new d7.mvc.Address(i.address, this.network),
        txId: i.txId,
        outputIndex: i.outputIndex,
        satoshis: i.satoshis
      });
    }), t.forEach((i) => {
      f.appendP2PKHOutput({
        address: new d7.mvc.Address(i.address, this.network),
        satoshis: i.amount
      });
    }), f.appendChangeOutput(this.address, this.feeb), a.forEach((i, n) => {
      f.unlockP2PKHInput(this.privateKey, n);
    }), await this.broadcastTxComposer(f, r);
  }
  async merge(t) {
    const a = new He();
    let r = await this.blockChainApi.getUnspents(this.address.toString());
    return r.forEach((f) => {
      a.appendP2PKHInput({
        address: new d7.mvc.Address(f.address, this.network),
        txId: f.txId,
        outputIndex: f.outputIndex,
        satoshis: f.satoshis
      });
    }), a.appendChangeOutput(this.address, this.feeb), r.forEach((f, i) => {
      a.unlockP2PKHInput(this.privateKey, i);
    }), await this.broadcastTxComposer(a, t);
  }
  // evenly split all amount into utxo shares, this will increase parallel for wallet
  // minShareValue is used to guarantee single share value won't be too small
  // the last share will cover the tx fee
  async evenSplit(t, a = 0, r) {
    const f = new He(), i = await this.blockChainApi.getUnspents(this.address.toString()), n = i.map((s) => s.satoshis).reduce((s, b) => s + b, 0);
    i.forEach((s) => {
      f.appendP2PKHInput({
        address: new d7.mvc.Address(s.address, this.network),
        txId: s.txId,
        outputIndex: s.outputIndex,
        satoshis: s.satoshis
      });
    });
    const o = Math.floor(n / t);
    if (o < a)
      throw new Error(`"Share value ${o} is less than minShareValue ${a}"`);
    for (let s = 0; s < t - 1; s++)
      f.appendP2PKHOutput({
        address: this.address,
        satoshis: o
      });
    return f.appendChangeOutput(this.address, this.feeb), i.forEach((s, b) => {
      f.unlockP2PKHInput(this.privateKey, b);
    }), await this.broadcastTxComposer(f, r);
  }
  async broadcastTxComposer(t, a) {
    const {
      noBroadcast: r,
      dump: f
    } = a || {};
    return f && jy(t.getTx(), this.network), r ? {
      txId: t.getTx().id,
      txHex: t.getRawHex()
    } : {
      txId: await this.blockChainApi.broadcast(t.getRawHex()),
      txHex: t.getRawHex()
    };
  }
  async sendOpReturn(t, a) {
    const r = new He();
    let f = await this.blockChainApi.getUnspents(this.address.toString());
    return f.forEach((i) => {
      r.appendP2PKHInput({
        address: new d7.mvc.Address(i.address, this.network),
        txId: i.txId,
        outputIndex: i.outputIndex,
        satoshis: i.satoshis
      });
    }), r.appendOpReturnOutput(t), r.appendChangeOutput(this.address, this.feeb), f.forEach((i, n) => {
      r.unlockP2PKHInput(this.privateKey, n);
    }), await this.broadcastTxComposer(r, a);
  }
  // pick utxo enough to pay amount and fee, use confirmed utxo in priority
  // shuffle confirmed utxo for higher concurrency
  pickUtxo(t, a) {
    let r = a + 68 * this.feeb + 100;
    const f = [], i = t.filter((s) => s.height > 0).sort(() => Math.random() - 0.5), n = t.filter((s) => s.height < 0).sort(() => Math.random() - 0.5);
    let o = 0;
    for (let s of i)
      if (o += s.satoshis, r += this.feeb * Lf, f.push(s), o > r)
        return f;
    for (let s of n)
      if (o += s.satoshis, r += this.feeb * Lf, f.push(s), o > r)
        return f;
    return f;
  }
}
const Ms = ae.crypto.BN, bq = Lx, mq = Fx;
export {
  Oa as API_NET,
  an as API_TARGET,
  rc as Api,
  Ms as BN,
  Fx as FtManager,
  Ne as Net,
  Lx as NftManager,
  dq as OutputType,
  mq as SensibleFT,
  bq as SensibleNFT,
  He as TxComposer,
  pq as TxDecoder,
  hq as Wallet,
  ae as mvc
};
